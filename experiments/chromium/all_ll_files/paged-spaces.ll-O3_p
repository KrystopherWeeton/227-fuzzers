; ModuleID = '../../v8/src/heap/paged-spaces.cc'
source_filename = "../../v8/src/heap/paged-spaces.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1183" = type { %"struct.std::__1::__atomic_base.1184" }
%"struct.std::__1::__atomic_base.1184" = type { %"struct.std::__1::__atomic_base.1185" }
%"struct.std::__1::__atomic_base.1185" = type { %"struct.std::__1::__cxx_atomic_impl.1186" }
%"struct.std::__1::__cxx_atomic_impl.1186" = type { %"struct.std::__1::__cxx_atomic_base_impl.1187" }
%"struct.std::__1::__cxx_atomic_base_impl.1187" = type { i32 }
%"class.v8::internal::PagedSpaceObjectIterator" = type { %"class.v8::internal::ObjectIterator", i64, i64, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PageRange", %"class.v8::internal::PageIteratorImpl" }
%"class.v8::internal::ObjectIterator" = type { i32 (...)** }
%"class.v8::internal::PageRange" = type { %"class.v8::internal::Page"*, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.183", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.165", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.169" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.171" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i64 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.187", i8, [7 x i8] }>
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { i64*, i64*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.v8::internal::PageIteratorImpl" = type { %"class.v8::internal::Page"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.42", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.46", %"class.std::__1::vector.46", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.392", %"class.std::__1::shared_ptr.398", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.421", %"class.std::__1::unique_ptr.447", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.453", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.466", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.472", %"class.std::__1::unordered_map.498", %"class.std::__1::unordered_map.472", %"class.std::__1::unordered_map.522", %"class.std::__1::vector.550", i8, %"class.std::__1::unique_ptr.557", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.689", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.695", %"class.std::__1::unique_ptr.716", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.726", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.855", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.868", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.878", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.890", %"struct.std::__1::atomic.33", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.965", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1008"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1016", i32, i8, i8, i32, i32, %"class.std::__1::vector.1022", %"class.std::__1::vector.1022", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1029", i64, %"class.std::__1::unordered_map.1030", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.459", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.41", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1082", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1096", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1130", %"class.std::__1::vector.1134", %"class.std::__1::vector.1134", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.684", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.684" = type { %"struct.std::__1::__atomic_base.685" }
%"struct.std::__1::__atomic_base.685" = type { %"struct.std::__1::__cxx_atomic_impl.686" }
%"struct.std::__1::__cxx_atomic_impl.686" = type { %"struct.std::__1::__cxx_atomic_base_impl.687" }
%"struct.std::__1::__cxx_atomic_base_impl.687" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.459" }
%"class.std::__1::shared_ptr.695" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.645", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.710" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.647" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.699" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.645", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.699" = type { %"class.std::__1::__vector_base.700" }
%"class.std::__1::__vector_base.700" = type { %"class.std::__1::unique_ptr.701"*, %"class.std::__1::unique_ptr.701"*, %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::unique_ptr.701"* }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.719", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.719" = type { %"struct.std::__1::__atomic_base.720" }
%"struct.std::__1::__atomic_base.720" = type { %"struct.std::__1::__cxx_atomic_impl.721" }
%"struct.std::__1::__cxx_atomic_impl.721" = type { %"struct.std::__1::__cxx_atomic_base_impl.722" }
%"struct.std::__1::__cxx_atomic_base_impl.722" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.726" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.727", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.727" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.728", %"class.v8::base::Optional.736", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"class.std::__1::unique_ptr.730"*, %"class.std::__1::unique_ptr.730"*, %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::unique_ptr.730" = type opaque
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.std::__1::unique_ptr.730"* }
%"class.v8::base::Optional.736" = type { %"class.v8::base::internal::OptionalBase.737" }
%"class.v8::base::internal::OptionalBase.737" = type { %"struct.v8::base::internal::OptionalStorage.738" }
%"struct.v8::base::internal::OptionalStorage.738" = type { %"struct.v8::base::internal::OptionalStorageBase.739" }
%"struct.v8::base::internal::OptionalStorageBase.739" = type { i8, %union.anon.740 }
%union.anon.740 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.751", %"struct.std::__1::atomic.33", %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.763", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.781", %"class.std::__1::set.787", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.787" = type { %"class.std::__1::__tree.788" }
%"class.std::__1::__tree.788" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.789", %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.796" }
%"class.v8::internal::TaggedImpl.796" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.795" }
%"class.v8::internal::TaggedImpl.795" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.615", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.797", %"class.v8::internal::DetachableVector.798", %"class.v8::internal::DetachableVector.797", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.798" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.797" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.399" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.402", %"class.std::__1::set.410" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.402" = type { %"class.std::__1::__tree.403" }
%"class.std::__1::__tree.403" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.410" = type { %"class.std::__1::__tree.411" }
%"class.std::__1::__tree.411" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.799", %"class.std::__1::vector.805", %"class.std::__1::unique_ptr.812", %"class.std::__1::vector.819", %"class.std::__1::unique_ptr.826", i64, %"class.std::__1::vector.832", %"class.std::__1::vector.840", %"class.std::__1::vector.848", i8, i8, i32 }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.805" = type { %"class.std::__1::__vector_base.806" }
%"class.std::__1::__vector_base.806" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.807" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::GlobalHandles::NodeSpace.815"* }
%"class.v8::internal::GlobalHandles::NodeSpace.815" = type opaque
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.821" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"struct.std::__1::pair.834"*, %"struct.std::__1::pair.834"*, %"class.std::__1::__compressed_pair.835" }
%"struct.std::__1::pair.834" = type opaque
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.std::__1::pair.834"* }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"struct.std::__1::pair.842"*, %"struct.std::__1::pair.842"*, %"class.std::__1::__compressed_pair.843" }
%"struct.std::__1::pair.842" = type opaque
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::pair.842"* }
%"class.std::__1::vector.848" = type { %"class.std::__1::__vector_base.849" }
%"class.std::__1::__vector_base.849" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.850" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.621", %"class.std::__1::vector.855" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { i64**, i64**, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.862" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { i32*, i32*, %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.868" = type { %"struct.std::__1::__atomic_base.869" }
%"struct.std::__1::__atomic_base.869" = type { %"struct.std::__1::__cxx_atomic_impl.870" }
%"struct.std::__1::__cxx_atomic_impl.870" = type { %"struct.std::__1::__cxx_atomic_base_impl.871" }
%"struct.std::__1::__cxx_atomic_base_impl.871" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.885 }
%union.anon.885 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.890" = type { %"class.std::__1::__hash_table.891" }
%"class.std::__1::__hash_table.891" = type <{ %"class.std::__1::unique_ptr.892", %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.907", %"class.std::__1::__compressed_pair.910", [4 x i8] }>
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894", %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::__hash_node_base.895"** }
%"struct.std::__1::__hash_node_base.895" = type { %"struct.std::__1::__hash_node_base.895"* }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.std::__1::__bucket_list_deallocator.897" }
%"class.std::__1::__bucket_list_deallocator.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.895" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.916", %"class.v8::internal::Handle.922", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.923", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.922" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.923" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.924", %"class.std::__1::vector.930", %"class.std::__1::unique_ptr.938", %"class.std::__1::unique_ptr.944", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.950", %"class.std::__1::vector.956", %"struct.std::__1::pair.964" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.930" = type { %"class.std::__1::__vector_base.931" }
%"class.std::__1::__vector_base.931" = type { %"class.std::__1::unique_ptr.932"*, %"class.std::__1::unique_ptr.932"*, %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::unique_ptr.932" = type opaque
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::unique_ptr.932"* }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.956" = type { %"class.std::__1::__vector_base.957" }
%"class.std::__1::__vector_base.957" = type { %"struct.std::__1::pair.958"*, %"struct.std::__1::pair.958"*, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"* }
%"struct.std::__1::pair.964" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.688"*, i16, i8*)*, i8* }
%"class.v8::Local.688" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.968", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.968" = type { %"class.std::__1::__hash_table.969" }
%"class.std::__1::__hash_table.969" = type <{ %"class.std::__1::unique_ptr.970", %"class.std::__1::__compressed_pair.980", %"class.std::__1::__compressed_pair.985", %"class.std::__1::__compressed_pair.989", [4 x i8] }>
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972", %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::__hash_node_base.973"** }
%"struct.std::__1::__hash_node_base.973" = type { %"struct.std::__1::__hash_node_base.973"* }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.std::__1::__bucket_list_deallocator.975" }
%"class.std::__1::__bucket_list_deallocator.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.973" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1003" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.997"**, %"struct.std::__1::pair.997"**, %"struct.std::__1::pair.997"**, %"class.std::__1::__compressed_pair.998" }
%"struct.std::__1::pair.997" = type opaque
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.std::__1::pair.997"** }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1008" = type { %"class.std::__1::__vector_base.1009" }
%"class.std::__1::__vector_base.1009" = type { %"class.v8::internal::Handle.1010"*, %"class.v8::internal::Handle.1010"*, %"class.std::__1::__compressed_pair.1011" }
%"class.v8::internal::Handle.1010" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.v8::internal::Handle.1010"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.873", i32, %"class.v8::Local.688" }
%"class.v8::Local.873" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.621", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1029" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1030" = type { %"class.std::__1::__hash_table.1031" }
%"class.std::__1::__hash_table.1031" = type <{ %"class.std::__1::unique_ptr.1032", %"class.std::__1::__compressed_pair.1042", %"class.std::__1::__compressed_pair.1047", %"class.std::__1::__compressed_pair.1050", [4 x i8] }>
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034", %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1035"** }
%"struct.std::__1::__hash_node_base.1035" = type { %"struct.std::__1::__hash_node_base.1035"* }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.std::__1::__bucket_list_deallocator.1037" }
%"class.std::__1::__bucket_list_deallocator.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"struct.std::__1::__hash_node_base.1035" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.459" = type { %"class.std::__1::__vector_base.460" }
%"class.std::__1::__vector_base.460" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.41" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1054", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1079", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1080", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1054" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.233, %union.anon.234, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.233 = type { i64 }
%union.anon.234 = type { i64 }
%"class.std::__1::weak_ptr.1079" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.41" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1080" = type { %"class.v8::PersistentBase.1081" }
%"class.v8::PersistentBase.1081" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1055", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1055" = type { %"class.std::__1::__hash_table.1056" }
%"class.std::__1::__hash_table.1056" = type <{ %"class.std::__1::unique_ptr.1057", %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1075", [4 x i8] }>
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059", %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1060"** }
%"struct.std::__1::__hash_node_base.1060" = type { %"struct.std::__1::__hash_node_base.1060"* }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.std::__1::__bucket_list_deallocator.1062" }
%"class.std::__1::__bucket_list_deallocator.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::__hash_node_base.1060" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.602", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.631", %"class.std::__1::unique_ptr.392", %"class.std::__1::vector.637", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.602" = type { %"struct.std::__1::__atomic_base.603" }
%"struct.std::__1::__atomic_base.603" = type { %"struct.std::__1::__cxx_atomic_impl.604" }
%"struct.std::__1::__cxx_atomic_impl.604" = type { %"struct.std::__1::__cxx_atomic_base_impl.605" }
%"struct.std::__1::__cxx_atomic_base_impl.605" = type { i32 }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.621" }
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.637" = type { %"class.std::__1::__vector_base.638" }
%"class.std::__1::__vector_base.638" = type { %"struct.std::__1::pair.639"*, %"struct.std::__1::pair.639"*, %"class.std::__1::__compressed_pair.640" }
%"struct.std::__1::pair.639" = type opaque
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::pair.639"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.874", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.874" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1104" }
%"class.std::__1::unordered_map.1104" = type { %"class.std::__1::__hash_table.1105" }
%"class.std::__1::__hash_table.1105" = type <{ %"class.std::__1::unique_ptr.1106", %"class.std::__1::__compressed_pair.1116", %"class.std::__1::__compressed_pair.1121", %"class.std::__1::__compressed_pair.1124", [4 x i8] }>
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108", %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1109"** }
%"struct.std::__1::__hash_node_base.1109" = type { %"struct.std::__1::__hash_node_base.1109"* }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.std::__1::__bucket_list_deallocator.1111" }
%"class.std::__1::__bucket_list_deallocator.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"struct.std::__1::__hash_node_base.1109" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1130" = type { %"struct.std::__1::__atomic_base.1131" }
%"struct.std::__1::__atomic_base.1131" = type { %"struct.std::__1::__cxx_atomic_impl.1132" }
%"struct.std::__1::__cxx_atomic_impl.1132" = type { %"struct.std::__1::__cxx_atomic_base_impl.1133" }
%"struct.std::__1::__cxx_atomic_base_impl.1133" = type { %"class.std::__1::vector.1134"* }
%"class.std::__1::vector.1134" = type { %"class.std::__1::__vector_base.1135" }
%"class.std::__1::__vector_base.1135" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1136" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.676" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.596" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.563", %"class.std::__1::vector.563", %"class.std::__1::unordered_set.570", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.563" = type { %"class.std::__1::__vector_base.564" }
%"class.std::__1::__vector_base.564" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.565" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set.570" = type { %"class.std::__1::__hash_table.571" }
%"class.std::__1::__hash_table.571" = type <{ %"class.std::__1::unique_ptr.572", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.591", [4 x i8] }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.575"** }
%"struct.std::__1::__hash_node_base.575" = type { %"struct.std::__1::__hash_node_base.575"* }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::__bucket_list_deallocator.577" }
%"class.std::__1::__bucket_list_deallocator.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::__hash_node_base.575" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.std::__1::vector.676" = type { %"class.std::__1::__vector_base.677" }
%"class.std::__1::__vector_base.677" = type { %"struct.std::__1::pair.678"*, %"struct.std::__1::pair.678"*, %"class.std::__1::__compressed_pair.679" }
%"struct.std::__1::pair.678" = type { i32, i64 }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"struct.std::__1::pair.678"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.652" }
%"class.std::__1::unordered_map.652" = type { %"class.std::__1::__hash_table.653" }
%"class.std::__1::__hash_table.653" = type <{ %"class.std::__1::unique_ptr.654", %"class.std::__1::__compressed_pair.664", %"class.std::__1::__compressed_pair.669", %"class.std::__1::__compressed_pair.672", [4 x i8] }>
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656", %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.std::__1::__hash_node_base.657"** }
%"struct.std::__1::__hash_node_base.657" = type { %"struct.std::__1::__hash_node_base.657"* }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.std::__1::__bucket_list_deallocator.659" }
%"class.std::__1::__bucket_list_deallocator.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.std::__1::__hash_node_base.657" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.33", %"struct.std::__1::atomic.37", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.48" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.199", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.62", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.62" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.std::__1::unique_ptr.72"*, %"class.std::__1::unique_ptr.72"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.72"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.78", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.82", %"class.v8::internal::Worklist.84", %"class.v8::internal::Worklist.86", %"class.v8::internal::Worklist.88", %"class.v8::internal::Worklist.90", %"class.v8::internal::Worklist.92" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.78" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.80" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.82" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.84" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.86" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.88" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.90" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.92" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.94", i8, i64 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.110" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.62"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.130", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.139" }
%"class.std::__1::unordered_map.139" = type { %"class.std::__1::__hash_table.140" }
%"class.std::__1::__hash_table.140" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.159", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.144"** }
%"struct.std::__1::__hash_node_base.144" = type { %"struct.std::__1::__hash_node_base.144"* }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::__bucket_list_deallocator.146" }
%"class.std::__1::__bucket_list_deallocator.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base.144" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.std::__1::pair.201"*, %"struct.std::__1::pair.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::pair.201"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.207", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.163"], [3 x %"class.std::__1::vector.163"], i8, %"struct.std::__1::atomic.33", [6 x i8], %"class.std::__1::vector.163", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.217"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.217" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type { %"class.v8::base::Optional", %"class.v8::internal::Heap"*, i8, %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"struct.std::__1::atomic", %"struct.v8::internal::ArrayBufferList", %"struct.v8::internal::ArrayBufferList", i64, i64 }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.v8::internal::ArrayBufferSweeper::SweepingJob" }
%"struct.v8::internal::ArrayBufferSweeper::SweepingJob" = type <{ %"class.v8::internal::ArrayBufferSweeper"*, i64, %"struct.std::__1::atomic.229", [4 x i8], %"struct.v8::internal::ArrayBufferList", %"struct.v8::internal::ArrayBufferList", i32, [4 x i8] }>
%"struct.std::__1::atomic.229" = type { %"struct.std::__1::__atomic_base.230" }
%"struct.std::__1::__atomic_base.230" = type { %"struct.std::__1::__cxx_atomic_impl.231" }
%"struct.std::__1::__cxx_atomic_impl.231" = type { %"struct.std::__1::__cxx_atomic_base_impl.232" }
%"struct.std::__1::__cxx_atomic_base_impl.232" = type { i32 }
%"struct.v8::internal::ArrayBufferList" = type { %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i64 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.242"], %"class.std::__1::unique_ptr.207" }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.280", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.284", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.289" }
%"struct.std::__1::atomic.280" = type { %"struct.std::__1::__atomic_base.281" }
%"struct.std::__1::__atomic_base.281" = type { %"struct.std::__1::__cxx_atomic_impl.282" }
%"struct.std::__1::__cxx_atomic_impl.282" = type { %"struct.std::__1::__cxx_atomic_base_impl.283" }
%"struct.std::__1::__cxx_atomic_base_impl.283" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__cxx_atomic_impl.286" }
%"struct.std::__1::__cxx_atomic_impl.286" = type { %"struct.std::__1::__cxx_atomic_base_impl.287" }
%"struct.std::__1::__cxx_atomic_base_impl.287" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.289" = type { %"class.std::__1::__hash_table.290" }
%"class.std::__1::__hash_table.290" = type <{ %"class.std::__1::unique_ptr.291", %"class.std::__1::__compressed_pair.301", %"class.std::__1::__compressed_pair.306", %"class.std::__1::__compressed_pair.309", [4 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::__hash_node_base.294"** }
%"struct.std::__1::__hash_node_base.294" = type { %"struct.std::__1::__hash_node_base.294"* }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.std::__1::__bucket_list_deallocator.296" }
%"class.std::__1::__bucket_list_deallocator.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::__hash_node_base.294" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.207", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.33", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.319", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.319" = type { %"class.std::__1::__hash_table.320" }
%"class.std::__1::__hash_table.320" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.339", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base.324"** }
%"struct.std::__1::__hash_node_base.324" = type { %"struct.std::__1::__hash_node_base.324"* }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.std::__1::__bucket_list_deallocator.326" }
%"class.std::__1::__bucket_list_deallocator.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.324" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.355" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.398" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.417", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.399", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.417" = type { %"struct.std::__1::__atomic_base.418" }
%"struct.std::__1::__atomic_base.418" = type { %"struct.std::__1::__cxx_atomic_impl.419" }
%"struct.std::__1::__cxx_atomic_impl.419" = type { %"struct.std::__1::__cxx_atomic_base_impl.420" }
%"struct.std::__1::__cxx_atomic_base_impl.420" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.421" = type { %"class.std::__1::__hash_table.422" }
%"class.std::__1::__hash_table.422" = type <{ %"class.std::__1::unique_ptr.423", %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.438", %"class.std::__1::__compressed_pair.441", [4 x i8] }>
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425", %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.std::__1::__hash_node_base.426"** }
%"struct.std::__1::__hash_node_base.426" = type { %"struct.std::__1::__hash_node_base.426"* }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.std::__1::__bucket_list_deallocator.428" }
%"class.std::__1::__bucket_list_deallocator.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.426" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.459", %"class.std::__1::vector.459" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.249" }
%"class.std::__1::__hash_table.249" = type <{ %"class.std::__1::unique_ptr.250", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252", %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base.253"** }
%"struct.std::__1::__hash_node_base.253" = type { %"struct.std::__1::__hash_node_base.253"* }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::__bucket_list_deallocator.255" }
%"class.std::__1::__bucket_list_deallocator.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.253" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.498" = type { %"class.std::__1::__hash_table.499" }
%"class.std::__1::__hash_table.499" = type <{ %"class.std::__1::unique_ptr.500", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.518", [4 x i8] }>
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502", %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.std::__1::__hash_node_base.503"** }
%"struct.std::__1::__hash_node_base.503" = type { %"struct.std::__1::__hash_node_base.503"* }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.std::__1::__bucket_list_deallocator.505" }
%"class.std::__1::__bucket_list_deallocator.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.503" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.472" = type { %"class.std::__1::__hash_table.473" }
%"class.std::__1::__hash_table.473" = type <{ %"class.std::__1::unique_ptr.474", %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.492", [4 x i8] }>
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476", %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::__hash_node_base.477"** }
%"struct.std::__1::__hash_node_base.477" = type { %"struct.std::__1::__hash_node_base.477"* }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.std::__1::__bucket_list_deallocator.479" }
%"class.std::__1::__bucket_list_deallocator.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.std::__1::__hash_node_base.477" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.522" = type { %"class.std::__1::__hash_table.523" }
%"class.std::__1::__hash_table.523" = type <{ %"class.std::__1::unique_ptr.524", %"class.std::__1::__compressed_pair.534", %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.544", [4 x i8] }>
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526", %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.std::__1::__hash_node_base.527"** }
%"struct.std::__1::__hash_node_base.527" = type { %"struct.std::__1::__hash_node_base.527"* }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::__bucket_list_deallocator.529" }
%"class.std::__1::__bucket_list_deallocator.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.527" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::LocalSpace" = type { %"class.v8::internal::PagedSpace", %"class.std::__1::vector.163" }
%"class.v8::base::Optional.1148" = type { %"class.v8::base::internal::OptionalBase.1149" }
%"class.v8::base::internal::OptionalBase.1149" = type { %"struct.v8::base::internal::OptionalStorage.1150" }
%"struct.v8::base::internal::OptionalStorage.1150" = type { %"struct.v8::base::internal::OptionalStorageBase.1151" }
%"struct.v8::base::internal::OptionalStorageBase.1151" = type { i8, %union.anon.1152 }
%union.anon.1152 = type { %"struct.std::__1::pair.1153" }
%"struct.std::__1::pair.1153" = type { i64, i64 }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::CompactionSpace" = type { %"class.v8::internal::LocalSpace" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"struct.std::__1::pair.1167" = type { i64, %"class.v8::internal::Page"* }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.std::__1::pair.1167"* }

$_ZN2v88internal9BaseSpace15CommittedMemoryEv = comdat any

$_ZN2v88internal9BaseSpace22MaximumCommittedMemoryEv = comdat any

$_ZN2v88internal10PagedSpace4SizeEv = comdat any

$_ZN2v88internal10PagedSpaceD2Ev = comdat any

$_ZN2v88internal10PagedSpaceD0Ev = comdat any

$_ZN2v88internal5Space29StartNextInlineAllocationStepEv = comdat any

$_ZN2v88internal5Space13SizeOfObjectsEv = comdat any

$_ZN2v88internal5Space30RoundSizeDownToObjectAlignmentEi = comdat any

$_ZNK2v88internal5Space25ExternalBackingStoreBytesENS0_24ExternalBackingStoreTypeE = comdat any

$_ZN2v88internal10PagedSpace26SupportsAllocationObserverEv = comdat any

$_ZN2v88internal10PagedSpace5WasteEv = comdat any

$_ZN2v88internal10PagedSpace12snapshotableEv = comdat any

$_ZN2v88internal10LocalSpaceD2Ev = comdat any

$_ZN2v88internal10LocalSpaceD0Ev = comdat any

$_ZN2v88internal10LocalSpace12snapshotableEv = comdat any

$_ZN2v88internal15CompactionSpaceD0Ev = comdat any

$_ZN2v88internal14ObjectIteratorD2Ev = comdat any

$_ZN2v88internal24PagedSpaceObjectIteratorD0Ev = comdat any

$_ZN2v88internal24PagedSpaceObjectIterator4NextEv = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_ = comdat any

$_ZTVN2v88internal24PagedSpaceObjectIteratorE = comdat any

@_ZTVN2v88internal24PagedSpaceObjectIteratorE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectIterator"*)* @_ZN2v88internal14ObjectIteratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpaceObjectIterator"*)* @_ZN2v88internal24PagedSpaceObjectIteratorD0Ev to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpaceObjectIterator"*)* @_ZN2v88internal24PagedSpaceObjectIterator4NextEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal10PagedSpaceE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace15CommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace22MaximumCommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace23CommittedPhysicalMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace4SizeEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpaceD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpaceD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea21AddAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea24RemoveAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea24PauseAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea25ResumeAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space29StartNextInlineAllocationStepEv to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space13SizeOfObjectsEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace9AvailableEv to i8*), i8* bitcast (i32 (%"class.v8::internal::Space"*, i32)* @_ZN2v88internal5Space30RoundSizeDownToObjectAlignmentEi to i8*), i8* bitcast (%"class.v8::internal::ObjectIterator"* (%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal10PagedSpace17GetObjectIteratorEPNS0_4HeapE to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*, i32)* @_ZNK2v88internal5Space25ExternalBackingStoreBytesENS0_24ExternalBackingStoreTypeE to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace26SupportsAllocationObserverEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*, i64)* @_ZN2v88internal10PagedSpace27UpdateInlineAllocationLimitEm to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace5WasteEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace14RefillFreeListEv to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace12snapshotableEv to i8*), i8* bitcast (%"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace6ExpandEv to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*, i32, i32)* @_ZN2v88internal10PagedSpace13RefillLabMainEiNS0_16AllocationOriginE to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"page->SweepingDone()\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"size_in_bytes <= page->area_size()\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"heap()->memory_allocator()->IsMemoryChunkExecutable(page)\00", align 1
@_ZTVN2v88internal10LocalSpaceE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace15CommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace22MaximumCommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace23CommittedPhysicalMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace4SizeEv to i8*), i8* bitcast (void (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpaceD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpaceD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea21AddAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea24RemoveAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea24PauseAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea25ResumeAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space29StartNextInlineAllocationStepEv to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space13SizeOfObjectsEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace9AvailableEv to i8*), i8* bitcast (i32 (%"class.v8::internal::Space"*, i32)* @_ZN2v88internal5Space30RoundSizeDownToObjectAlignmentEi to i8*), i8* bitcast (%"class.v8::internal::ObjectIterator"* (%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal10PagedSpace17GetObjectIteratorEPNS0_4HeapE to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*, i32)* @_ZNK2v88internal5Space25ExternalBackingStoreBytesENS0_24ExternalBackingStoreTypeE to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace26SupportsAllocationObserverEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*, i64)* @_ZN2v88internal10PagedSpace27UpdateInlineAllocationLimitEm to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace5WasteEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace14RefillFreeListEv to i8*), i8* bitcast (i1 (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpace12snapshotableEv to i8*), i8* bitcast (%"class.v8::internal::Page"* (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpace6ExpandEv to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*, i32, i32)* @_ZN2v88internal10PagedSpace13RefillLabMainEiNS0_16AllocationOriginE to i8*)] }, align 8
@_ZTVN2v88internal15CompactionSpaceE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace15CommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::BaseSpace"*)* @_ZN2v88internal9BaseSpace22MaximumCommittedMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace23CommittedPhysicalMemoryEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace4SizeEv to i8*), i8* bitcast (void (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpaceD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::CompactionSpace"*)* @_ZN2v88internal15CompactionSpaceD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea21AddAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal19SpaceWithLinearArea24RemoveAllocationObserverEPNS0_18AllocationObserverE to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea24PauseAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::SpaceWithLinearArea"*)* @_ZN2v88internal19SpaceWithLinearArea25ResumeAllocationObserversEv to i8*), i8* bitcast (void (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space29StartNextInlineAllocationStepEv to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*)* @_ZN2v88internal5Space13SizeOfObjectsEv to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace9AvailableEv to i8*), i8* bitcast (i32 (%"class.v8::internal::Space"*, i32)* @_ZN2v88internal5Space30RoundSizeDownToObjectAlignmentEi to i8*), i8* bitcast (%"class.v8::internal::ObjectIterator"* (%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal10PagedSpace17GetObjectIteratorEPNS0_4HeapE to i8*), i8* bitcast (i64 (%"class.v8::internal::Space"*, i32)* @_ZNK2v88internal5Space25ExternalBackingStoreBytesENS0_24ExternalBackingStoreTypeE to i8*), i8* bitcast (i1 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace26SupportsAllocationObserverEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*, i64)* @_ZN2v88internal10PagedSpace27UpdateInlineAllocationLimitEm to i8*), i8* bitcast (i64 (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace5WasteEv to i8*), i8* bitcast (void (%"class.v8::internal::PagedSpace"*)* @_ZN2v88internal10PagedSpace14RefillFreeListEv to i8*), i8* bitcast (i1 (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpace12snapshotableEv to i8*), i8* bitcast (%"class.v8::internal::Page"* (%"class.v8::internal::LocalSpace"*)* @_ZN2v88internal10LocalSpace6ExpandEv to i8*), i8* bitcast (i1 (%"class.v8::internal::CompactionSpace"*, i32, i32)* @_ZN2v88internal15CompactionSpace13RefillLabMainEiNS0_16AllocationOriginE to i8*)] }, align 8
@_ZTVN2v88internal5SpaceE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN2v88internal12FLAG_jitlessE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1183", align 4
@_ZN2v88internal30FLAG_trace_allocations_originsE = external local_unnamed_addr global i8, align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"!object.IsSmi()\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"!IsRetry()\00", align 1

@_ZN2v88internal24PagedSpaceObjectIteratorC1EPNS0_4HeapEPNS0_10PagedSpaceE = hidden unnamed_addr alias void (%"class.v8::internal::PagedSpaceObjectIterator"*, %"class.v8::internal::Heap"*, %"class.v8::internal::PagedSpace"*), void (%"class.v8::internal::PagedSpaceObjectIterator"*, %"class.v8::internal::Heap"*, %"class.v8::internal::PagedSpace"*)* @_ZN2v88internal24PagedSpaceObjectIteratorC2EPNS0_4HeapEPNS0_10PagedSpaceE
@_ZN2v88internal24PagedSpaceObjectIteratorC1EPNS0_4HeapEPNS0_10PagedSpaceEPNS0_4PageE = hidden unnamed_addr alias void (%"class.v8::internal::PagedSpaceObjectIterator"*, %"class.v8::internal::Heap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::Page"*), void (%"class.v8::internal::PagedSpaceObjectIterator"*, %"class.v8::internal::Heap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::Page"*)* @_ZN2v88internal24PagedSpaceObjectIteratorC2EPNS0_4HeapEPNS0_10PagedSpaceEPNS0_4PageE
@_ZN2v88internal10PagedSpaceC1EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE = hidden unnamed_addr alias void (%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*, i32, i32, %"class.v8::internal::FreeList"*, i32), void (%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*, i32, i32, %"class.v8::internal::FreeList"*, i32)* @_ZN2v88internal10PagedSpaceC2EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24PagedSpaceObjectIteratorC2EPNS0_4HeapEPNS0_10PagedSpaceE(%"class.v8::internal::PagedSpaceObjectIterator"* nocapture, %"class.v8::internal::Heap"* nocapture readonly, %"class.v8::internal::PagedSpace"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal24PagedSpaceObjectIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 3
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store %"class.v8::internal::PagedSpace"* %2, %"class.v8::internal::PagedSpace"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 2, i32 0
  %10 = bitcast %"class.v8::internal::MemoryChunk"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::PageRange"* %8 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::Page"* null, %"class.v8::internal::Page"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 5
  %15 = bitcast %"class.v8::internal::PageIteratorImpl"* %14 to i64*
  store i64 %11, i64* %15, align 8, !alias.scope !2
  %16 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 1, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, 0
  %21 = icmp eq i64 %19, %17
  %22 = or i1 %20, %21
  br i1 %22, label %56, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %27, label %41

27:                                               ; preds = %23
  %28 = and i64 %17, -262144
  %29 = inttoptr i64 %28 to %"class.v8::internal::MemoryChunk"*
  %30 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %29, i64 0, i32 0, i32 2
  %31 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %30, align 16
  %32 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %31, i64 0, i32 40
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %29, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  tail call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %29) #12
  br label %41

41:                                               ; preds = %40, %35, %27, %23
  %42 = phi i1 [ undef, %23 ], [ true, %35 ], [ false, %40 ], [ true, %27 ]
  %43 = phi i1 [ true, %23 ], [ false, %35 ], [ false, %40 ], [ false, %27 ]
  %44 = phi %"class.v8::internal::MemoryChunk"* [ null, %23 ], [ %29, %35 ], [ %29, %40 ], [ %29, %27 ]
  %45 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %45, align 8
  %47 = sub i64 %19, %17
  %48 = trunc i64 %47 to i32
  %49 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %46, i64 %17, i32 %48, i32 1) #12
  %50 = or i1 %42, %43
  br i1 %50, label %56, label %51

51:                                               ; preds = %41
  %52 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %44) #12
  br label %56

55:                                               ; preds = %51
  tail call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %44) #12
  br label %56

56:                                               ; preds = %3, %41, %54, %55
  %57 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 81, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %57, align 8
  tail call void @_ZN2v88internal20MarkCompactCollector23EnsureSweepingCompletedEv(%"class.v8::internal::MarkCompactCollector"* %58) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace32MakeLinearAllocationAreaIterableEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  %7 = icmp eq i64 %5, %3
  %8 = or i1 %6, %7
  br i1 %8, label %42, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %27

13:                                               ; preds = %9
  %14 = and i64 %3, -262144
  %15 = inttoptr i64 %14 to %"class.v8::internal::MemoryChunk"*
  %16 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 2
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 16
  %18 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %17, i64 0, i32 40
  %19 = load i8, i8* %18, align 8, !range !5
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  tail call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %15) #12
  br label %27

27:                                               ; preds = %26, %21, %13, %9
  %28 = phi i1 [ undef, %9 ], [ true, %21 ], [ false, %26 ], [ true, %13 ]
  %29 = phi i1 [ true, %9 ], [ false, %21 ], [ false, %26 ], [ false, %13 ]
  %30 = phi %"class.v8::internal::MemoryChunk"* [ null, %9 ], [ %15, %21 ], [ %15, %26 ], [ %15, %13 ]
  %31 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 8
  %33 = sub i64 %5, %3
  %34 = trunc i64 %33 to i32
  %35 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %32, i64 %3, i32 %34, i32 1) #12
  %36 = or i1 %28, %29
  br i1 %36, label %42, label %37

37:                                               ; preds = %27
  %38 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %30) #12
  br label %42

41:                                               ; preds = %37
  tail call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %30) #12
  br label %42

42:                                               ; preds = %41, %40, %27, %1
  ret void
}

declare void @_ZN2v88internal20MarkCompactCollector23EnsureSweepingCompletedEv(%"class.v8::internal::MarkCompactCollector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24PagedSpaceObjectIteratorC2EPNS0_4HeapEPNS0_10PagedSpaceEPNS0_4PageE(%"class.v8::internal::PagedSpaceObjectIterator"* nocapture, %"class.v8::internal::Heap"* nocapture readonly, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::Page"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal24PagedSpaceObjectIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 3
  %8 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store %"class.v8::internal::PagedSpace"* %2, %"class.v8::internal::PagedSpace"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %3, i64 0, i32 0, i32 12, i32 0
  %10 = bitcast %"class.v8::internal::MemoryChunk"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Page"* %3, %"class.v8::internal::Page"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4, i32 1
  %14 = bitcast %"class.v8::internal::Page"** %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 5
  %16 = ptrtoint %"class.v8::internal::Page"* %3 to i64
  %17 = bitcast %"class.v8::internal::PageIteratorImpl"* %15 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !6
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 1, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, 0
  %23 = icmp eq i64 %21, %19
  %24 = or i1 %22, %23
  br i1 %24, label %58, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = and i64 %19, -262144
  %31 = inttoptr i64 %30 to %"class.v8::internal::MemoryChunk"*
  %32 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %31, i64 0, i32 0, i32 2
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %32, align 16
  %34 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %33, i64 0, i32 40
  %35 = load i8, i8* %34, align 8, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %31, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %31) #12
  br label %43

43:                                               ; preds = %42, %37, %29, %25
  %44 = phi i1 [ undef, %25 ], [ true, %37 ], [ false, %42 ], [ true, %29 ]
  %45 = phi i1 [ true, %25 ], [ false, %37 ], [ false, %42 ], [ false, %29 ]
  %46 = phi %"class.v8::internal::MemoryChunk"* [ null, %25 ], [ %31, %37 ], [ %31, %42 ], [ %31, %29 ]
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 8
  %49 = sub i64 %21, %19
  %50 = trunc i64 %49 to i32
  %51 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %48, i64 %19, i32 %50, i32 1) #12
  %52 = or i1 %44, %45
  br i1 %52, label %58, label %53

53:                                               ; preds = %43
  %54 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !5
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  tail call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %46) #12
  br label %58

57:                                               ; preds = %53
  tail call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %46) #12
  br label %58

58:                                               ; preds = %4, %43, %56, %57
  %59 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 81, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %59, align 8
  tail call void @_ZN2v88internal20MarkCompactCollector23EnsureSweepingCompletedEv(%"class.v8::internal::MarkCompactCollector"* %60) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal24PagedSpaceObjectIterator17AdvanceToNextPageEv(%"class.v8::internal::PagedSpaceObjectIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %3, align 8, !noalias !9
  %5 = getelementptr inbounds %"class.v8::internal::PageIteratorImpl", %"class.v8::internal::PageIteratorImpl"* %2, i64 0, i32 0
  %6 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Page"* %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::internal::PageIteratorImpl"* %2 to i64*
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %6, i64 0, i32 0, i32 12, i32 0
  %11 = bitcast %"class.v8::internal::MemoryChunk"** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !12
  store i64 %12, i64* %9, align 8, !noalias !12
  %13 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %6, i64 0, i32 0, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %6, i64 0, i32 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 2
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %1, %8
  %20 = phi i1 [ true, %8 ], [ false, %1 ]
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::PagedSpace"* nocapture readonly, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::MemoryChunk"* %1 to %"class.v8::internal::Page"*
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 5
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 6
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %12, i64 0, i32 86, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %14, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i8, i8* %15 seq_cst, align 1
  %17 = icmp ne i8 %16, 0
  tail call void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"* %1, i1 zeroext %17) #12
  tail call void @_ZN2v88internal4Page26AllocateFreeListCategoriesEv(%"class.v8::internal::Page"* %3) #12
  tail call void @_ZN2v88internal4Page28InitializeFreeListCategoriesEv(%"class.v8::internal::Page"* %3) #12
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 12
  %19 = bitcast %"class.v8::internal::heap::ListNode"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #12
  tail call void @_ZN2v88internal11MemoryChunk25InitializationMemoryFenceEv(%"class.v8::internal::MemoryChunk"* %1) #12
  ret %"class.v8::internal::Page"* %3
}

declare void @_ZN2v88internal11MemoryChunk25SetOldGenerationPageFlagsEb(%"class.v8::internal::MemoryChunk"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal4Page26AllocateFreeListCategoriesEv(%"class.v8::internal::Page"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Page28InitializeFreeListCategoriesEv(%"class.v8::internal::Page"*) local_unnamed_addr #1

declare void @_ZN2v88internal11MemoryChunk25InitializationMemoryFenceEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpaceC2EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*, i32, i32, %"class.v8::internal::FreeList"*, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN2v88internal5SpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.591"* %13 to i32*
  %15 = bitcast %"class.v8::internal::AllocationCounter"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 80, i1 false) #12
  store i32 1065353216, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  %18 = bitcast i64* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 17, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.v8::internal::heap::List"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  %21 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4
  %22 = ptrtoint %"class.v8::internal::FreeList"* %4 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.596"* %21 to i64*
  store i64 %22, i64* %23, align 8
  %24 = tail call i8* @_Znam(i64 16) #13
  %25 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 3
  %26 = bitcast %"struct.std::__1::atomic"** %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = bitcast i8* %24 to i64*
  store atomic i64 0, i64* %27 seq_cst, align 8
  %28 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %25, align 8
  %29 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %28, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %29 seq_cst, align 8
  %30 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %31 = bitcast i64* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 48, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10PagedSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %32 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 1
  store i32 %3, i32* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  store i32 %5, i32* %33, align 4
  %34 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %34 seq_cst, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %36 seq_cst, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %37) #12
  %38 = tail call i64 @_ZN2v88internal17MemoryChunkLayout30AllocatableMemoryInMemoryChunkENS0_15AllocationSpaceE(i32 %2) #12
  %39 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 3
  store i64 %38, i64* %39, align 8
  store atomic i64 0, i64* %34 seq_cst, align 8
  store i64 0, i64* %35, align 8
  store atomic i64 0, i64* %36 seq_cst, align 8
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #1

declare i64 @_ZN2v88internal17MemoryChunkLayout30AllocatableMemoryInMemoryChunkENS0_15AllocationSpaceE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace8TearDownEv(%"class.v8::internal::PagedSpace"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds %"class.v8::internal::heap::List", %"class.v8::internal::heap::List"* %3, i64 0, i32 0
  %5 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i64*
  %6 = bitcast %"class.v8::internal::heap::List"* %3 to i64*
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %4, align 8
  %9 = icmp eq %"class.v8::internal::MemoryChunk"* %8, null
  %10 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %2, align 8
  %11 = icmp eq %"class.v8::internal::MemoryChunk"* %10, null
  %12 = and i1 %9, %11
  br i1 %12, label %45, label %13

13:                                               ; preds = %1, %35
  %14 = phi %"class.v8::internal::MemoryChunk"* [ %42, %35 ], [ %10, %1 ]
  %15 = phi %"class.v8::internal::MemoryChunk"* [ %40, %35 ], [ %8, %1 ]
  %16 = icmp eq %"class.v8::internal::MemoryChunk"* %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 12, i32 1
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %5, align 8
  br label %21

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 12, i32 0
  %23 = bitcast %"class.v8::internal::MemoryChunk"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %6, align 8
  %25 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %22, align 8
  %26 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 12, i32 1
  %27 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %26, align 8
  %28 = icmp eq %"class.v8::internal::MemoryChunk"* %25, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %25, i64 0, i32 12, i32 1
  store %"class.v8::internal::MemoryChunk"* %27, %"class.v8::internal::MemoryChunk"** %30, align 8
  br label %31

31:                                               ; preds = %29, %21
  %32 = icmp eq %"class.v8::internal::MemoryChunk"* %27, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %27, i64 0, i32 12, i32 0
  store %"class.v8::internal::MemoryChunk"* %25, %"class.v8::internal::MemoryChunk"** %34, align 8
  br label %35

35:                                               ; preds = %31, %33
  %36 = bitcast %"class.v8::internal::MemoryChunk"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #12
  %37 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %37, i64 0, i32 85, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %38, align 8
  tail call void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE0EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"* %39, %"class.v8::internal::MemoryChunk"* %15) #12
  %40 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %4, align 8
  %41 = icmp eq %"class.v8::internal::MemoryChunk"* %40, null
  %42 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %2, align 8
  %43 = icmp eq %"class.v8::internal::MemoryChunk"* %42, null
  %44 = and i1 %41, %43
  br i1 %44, label %45, label %13

45:                                               ; preds = %35, %1
  %46 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %46 seq_cst, align 8
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %48 seq_cst, align 8
  ret void
}

declare void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE0EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace14RefillFreeListEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %6, label %140

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %8, i64 0, i32 81, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %10, i64 0, i32 22
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %128, %6
  %17 = phi i64 [ 0, %6 ], [ %134, %128 ]
  %18 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %11, align 8
  %19 = tail call %"class.v8::internal::Page"* @_ZN2v88internal7Sweeper16GetSweptPageSafeEPNS0_10PagedSpaceE(%"class.v8::internal::Sweeper"* %18, %"class.v8::internal::PagedSpace"* %0) #12
  %20 = icmp eq %"class.v8::internal::Page"* %19, null
  br i1 %20, label %140, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 4096
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %53, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 8, i32 0
  %28 = bitcast %"struct.std::__1::__atomic_base.166"* %27 to i64*
  %29 = load atomic i64, i64* %28 seq_cst, align 8
  %30 = inttoptr i64 %29 to %"class.v8::internal::Space"*
  %31 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 13
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %44, %38 ]
  %40 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %37, align 8
  %41 = getelementptr inbounds %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %40, i64 %39
  %42 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %41, align 8
  %43 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %12, align 8
  tail call void @_ZN2v88internal16FreeListCategory5ResetEPNS0_8FreeListE(%"class.v8::internal::FreeListCategory"* %42, %"class.v8::internal::FreeList"* %43) #12
  %44 = add nuw nsw i64 %39, 1
  %45 = load atomic i64, i64* %28 seq_cst, align 8
  %46 = inttoptr i64 %45 to %"class.v8::internal::Space"*
  %47 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %44, %51
  br i1 %52, label %38, label %53

53:                                               ; preds = %38, %21, %26
  %54 = load i32, i32* %13, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  tail call void @_ZN2v88internal4Page27MergeOldToNewRememberedSetsEv(%"class.v8::internal::Page"* nonnull %19) #12
  %57 = load i32, i32* %13, align 4
  %58 = add i32 %57, -1
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %60, label %82

60:                                               ; preds = %53, %56
  %61 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 8, i32 0
  %62 = bitcast %"struct.std::__1::__atomic_base.166"* %61 to i64*
  %63 = load atomic i64, i64* %62 seq_cst, align 8
  %64 = inttoptr i64 %63 to %"class.v8::internal::PagedSpace"*
  %65 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %64, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %65) #12
  %66 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i64, i64* %66 seq_cst, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %70, label %69, !prof !15

69:                                               ; preds = %60
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i64, i64* %71 monotonic, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 5
  %74 = load i64, i64* %73, align 8
  %75 = icmp ugt i64 %72, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %70
  %77 = sub i64 %72, %74
  %78 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %64, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i64* %78, i64 %77 seq_cst
  br label %80

80:                                               ; preds = %70, %76
  store atomic i64 0, i64* %71 monotonic, align 8
  tail call void @_ZN2v88internal10PagedSpace10RemovePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %64, %"class.v8::internal::Page"* nonnull %19)
  %81 = tail call i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %0, %"class.v8::internal::Page"* nonnull %19)
  br label %128

82:                                               ; preds = %56
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %14) #12
  %83 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i64, i64* %83 seq_cst, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %87, label %86, !prof !15

86:                                               ; preds = %82
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 5
  %91 = load i64, i64* %90, align 8
  %92 = icmp ugt i64 %89, %91
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  %94 = sub i64 %89, %91
  %95 = atomicrmw sub i64* %15, i64 %94 seq_cst
  br label %96

96:                                               ; preds = %87, %93
  store atomic i64 0, i64* %88 monotonic, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 8, i32 0
  %98 = bitcast %"struct.std::__1::__atomic_base.166"* %97 to i64*
  %99 = load atomic i64, i64* %98 seq_cst, align 8
  %100 = inttoptr i64 %99 to %"class.v8::internal::Space"*
  %101 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %100, i64 0, i32 4, i32 0, i32 0, i32 0
  %102 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %128

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 13
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i64 [ 0, %106 ], [ %117, %108 ]
  %110 = phi i64 [ 0, %106 ], [ %119, %108 ]
  %111 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %107, align 8
  %112 = getelementptr inbounds %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %111, i64 %110
  %113 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::FreeListCategory", %"class.v8::internal::FreeListCategory"* %113, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = add i64 %109, %116
  %118 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %12, align 8
  tail call void @_ZN2v88internal16FreeListCategory6RelinkEPNS0_8FreeListE(%"class.v8::internal::FreeListCategory"* %113, %"class.v8::internal::FreeList"* %118) #12
  %119 = add nuw nsw i64 %110, 1
  %120 = load atomic i64, i64* %98 seq_cst, align 8
  %121 = inttoptr i64 %120 to %"class.v8::internal::Space"*
  %122 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %121, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %123, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = sext i32 %125 to i64
  %127 = icmp slt i64 %119, %126
  br i1 %127, label %108, label %128

128:                                              ; preds = %108, %96, %80
  %129 = phi i64 [ %81, %80 ], [ 0, %96 ], [ %117, %108 ]
  %130 = phi %"class.v8::base::Mutex"* [ %65, %80 ], [ %14, %96 ], [ %14, %108 ]
  %131 = add i64 %129, %17
  %132 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %19, i64 0, i32 0, i32 0, i32 6
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %131, %133
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %130) #12
  %135 = load i32, i32* %13, align 4
  %136 = add i32 %135, -1
  %137 = icmp ult i32 %136, 3
  %138 = icmp ugt i64 %134, 512000
  %139 = and i1 %138, %137
  br i1 %139, label %140, label %16

140:                                              ; preds = %128, %16, %1
  ret void
}

declare %"class.v8::internal::Page"* @_ZN2v88internal7Sweeper16GetSweptPageSafeEPNS0_10PagedSpaceE(%"class.v8::internal::Sweeper"*, %"class.v8::internal::PagedSpace"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Page27MergeOldToNewRememberedSetsEv(%"class.v8::internal::Page"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace33RefineAllocatedBytesAfterSweepingEPNS0_4PageE(%"class.v8::internal::PagedSpace"* nocapture, %"class.v8::internal::Page"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 seq_cst, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %7, label %6, !prof !15

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = sub i64 %9, %11
  %15 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i64* %15, i64 %14 seq_cst
  br label %17

17:                                               ; preds = %13, %7
  store atomic i64 0, i64* %8 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace10RemovePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* nocapture, %"class.v8::internal::Page"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 seq_cst, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %8, label %7, !prof !15

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %11 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %10, align 8
  %12 = icmp eq %"class.v8::internal::MemoryChunk"* %11, %3
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 1
  %15 = bitcast %"class.v8::internal::MemoryChunk"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::MemoryChunk"** %10 to i64*
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %13, %8
  %19 = getelementptr inbounds %"class.v8::internal::heap::List", %"class.v8::internal::heap::List"* %9, i64 0, i32 0
  %20 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %19, align 8
  %21 = icmp eq %"class.v8::internal::MemoryChunk"* %20, %3
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 0
  %24 = bitcast %"class.v8::internal::MemoryChunk"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::heap::List"* %9 to i64*
  store i64 %25, i64* %26, align 8
  br label %27

27:                                               ; preds = %22, %18
  %28 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 0
  %29 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 1
  %31 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %30, align 8
  %32 = icmp eq %"class.v8::internal::MemoryChunk"* %29, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %29, i64 0, i32 12, i32 1
  store %"class.v8::internal::MemoryChunk"* %31, %"class.v8::internal::MemoryChunk"** %34, align 8
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.v8::internal::MemoryChunk"* %31, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %31, i64 0, i32 12, i32 0
  store %"class.v8::internal::MemoryChunk"* %29, %"class.v8::internal::MemoryChunk"** %38, align 8
  br label %39

39:                                               ; preds = %35, %37
  %40 = bitcast %"class.v8::internal::MemoryChunk"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #12
  %41 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 8, i32 0
  %42 = bitcast %"struct.std::__1::__atomic_base.166"* %41 to i64*
  %43 = load atomic i64, i64* %42 seq_cst, align 8
  %44 = inttoptr i64 %43 to %"class.v8::internal::Space"*
  %45 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %72

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 13
  %52 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i64 [ 0, %50 ], [ %63, %53 ]
  %55 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %51, align 8
  %56 = getelementptr inbounds %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %55, i64 %54
  %57 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %56, align 8
  %58 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %52, align 8
  %59 = bitcast %"class.v8::internal::FreeList"* %58 to void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)***
  %60 = load void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)**, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %60, i64 8
  %62 = load void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %61, align 8
  tail call void %62(%"class.v8::internal::FreeList"* %58, %"class.v8::internal::FreeListCategory"* %57) #12
  %63 = add nuw nsw i64 %54, 1
  %64 = load atomic i64, i64* %42 seq_cst, align 8
  %65 = inttoptr i64 %64 to %"class.v8::internal::Space"*
  %66 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %67, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = icmp slt i64 %63, %70
  br i1 %71, label %53, label %72

72:                                               ; preds = %53, %39
  %73 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 5
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i64* %75, i64 %74 seq_cst
  %77 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 4
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i64* %82, i64 %81 seq_cst
  %84 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i64* %86, i64 %85 seq_cst
  %88 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 3
  %89 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i64, i64* %90 seq_cst, align 8
  %92 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i64* %93, i64 %91 seq_cst
  %95 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %89, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %95, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i64* %96, i64 %91 seq_cst
  %98 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i64, i64* %98 seq_cst, align 8
  %100 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %88, align 8
  %101 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %100, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw sub i64* %101, i64 %99 seq_cst
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %89, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %103, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i64* %104, i64 %99 seq_cst
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Page"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 seq_cst, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %8, label %7, !prof !15

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 8
  %10 = ptrtoint %"class.v8::internal::PagedSpace"* %0 to i64
  %11 = bitcast %"struct.std::__1::atomic.165"* %9 to i64*
  store atomic i64 %10, i64* %11 seq_cst, align 8
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %13 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %12, align 8
  %14 = icmp eq %"class.v8::internal::MemoryChunk"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %13, i64 0, i32 12, i32 0
  %17 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 0
  store %"class.v8::internal::MemoryChunk"* %17, %"class.v8::internal::MemoryChunk"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 1
  store %"class.v8::internal::MemoryChunk"* %13, %"class.v8::internal::MemoryChunk"** %19, align 8
  store %"class.v8::internal::MemoryChunk"* %3, %"class.v8::internal::MemoryChunk"** %16, align 8
  %20 = icmp eq %"class.v8::internal::MemoryChunk"* %17, null
  %21 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %17, i64 0, i32 12, i32 1
  %22 = select i1 %20, %"class.v8::internal::MemoryChunk"** %12, %"class.v8::internal::MemoryChunk"** %21
  br label %27

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 12, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %26 = bitcast %"class.v8::internal::MemoryChunk"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  store %"class.v8::internal::MemoryChunk"* %3, %"class.v8::internal::MemoryChunk"** %25, align 8
  br label %27

27:                                               ; preds = %15, %23
  %28 = phi %"class.v8::internal::MemoryChunk"** [ %12, %23 ], [ %22, %15 ]
  store %"class.v8::internal::MemoryChunk"* %3, %"class.v8::internal::MemoryChunk"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i64* %31, i64 %30 seq_cst
  %33 = load atomic i64, i64* %31 seq_cst, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = load atomic i64, i64* %31 seq_cst, align 8
  store i64 %38, i64* %34, align 8
  br label %39

39:                                               ; preds = %27, %37
  %40 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i64* %45, i64 %44 seq_cst
  %47 = load atomic i64, i64* %45 seq_cst, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %39
  %52 = load atomic i64, i64* %45 seq_cst, align 8
  store i64 %52, i64* %48, align 8
  br label %53

53:                                               ; preds = %39, %51
  %54 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 5
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i64* %56, i64 %55 seq_cst
  %58 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 3
  %59 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i64, i64* %60 seq_cst, align 8
  %62 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %58, align 8
  %63 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i64* %63, i64 %61 seq_cst
  %65 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %59, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %65, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i64* %66, i64 %61 seq_cst
  %68 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i64, i64* %68 seq_cst, align 8
  %70 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %58, align 8
  %71 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %70, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i64* %71, i64 %69 seq_cst
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %59, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %73, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i64* %74, i64 %69 seq_cst
  %76 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 8, i32 0
  %77 = bitcast %"struct.std::__1::__atomic_base.166"* %76 to i64*
  %78 = load atomic i64, i64* %77 seq_cst, align 8
  %79 = inttoptr i64 %78 to %"class.v8::internal::Space"*
  %80 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %108

85:                                               ; preds = %53
  %86 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 13
  %87 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %88

88:                                               ; preds = %88, %85
  %89 = phi i64 [ 0, %85 ], [ %97, %88 ]
  %90 = phi i64 [ 0, %85 ], [ %99, %88 ]
  %91 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %86, align 8
  %92 = getelementptr inbounds %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %91, i64 %90
  %93 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::FreeListCategory", %"class.v8::internal::FreeListCategory"* %93, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = add i64 %89, %96
  %98 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %87, align 8
  tail call void @_ZN2v88internal16FreeListCategory6RelinkEPNS0_8FreeListE(%"class.v8::internal::FreeListCategory"* %93, %"class.v8::internal::FreeList"* %98) #12
  %99 = add nuw nsw i64 %90, 1
  %100 = load atomic i64, i64* %77 seq_cst, align 8
  %101 = inttoptr i64 %100 to %"class.v8::internal::Space"*
  %102 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %103, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = icmp slt i64 %99, %106
  br i1 %107, label %88, label %108

108:                                              ; preds = %88, %53
  %109 = phi i64 [ 0, %53 ], [ %97, %88 ]
  ret i64 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace15MergeLocalSpaceEPNS0_10LocalSpaceE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalSpace"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace24FreeLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %4)
  %5 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 0, i32 0, i32 2, i64 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 2, i64 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %6
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 0, i32 0, i32 2, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 2, i64 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 0, i32 0, i32 2, i64 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 2, i64 2
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = bitcast %"class.v8::internal::MemoryChunk"** %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !16
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %33

24:                                               ; preds = %33, %2
  %25 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %27, align 8
  %29 = icmp eq %"class.v8::internal::Page"** %26, %28
  br i1 %29, label %42, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %43

33:                                               ; preds = %2, %33
  %34 = phi i64 [ %38, %33 ], [ %22, %2 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::Page"*
  %36 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %35, i64 0, i32 0, i32 12, i32 0
  %37 = bitcast %"class.v8::internal::MemoryChunk"** %36 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !19
  tail call void @_ZN2v88internal4Page27MergeOldToNewRememberedSetsEv(%"class.v8::internal::Page"* %35) #12
  %39 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %35, i64 0, i32 0
  tail call void @_ZN2v88internal11MemoryChunk25InitializationMemoryFenceEv(%"class.v8::internal::MemoryChunk"* %39) #12
  tail call void @_ZN2v88internal10PagedSpace10RemovePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %4, %"class.v8::internal::Page"* %35)
  %40 = tail call i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %0, %"class.v8::internal::Page"* %35)
  %41 = icmp eq i64 %38, 0
  br i1 %41, label %24, label %33

42:                                               ; preds = %43, %24
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #12
  ret void

43:                                               ; preds = %30, %43
  %44 = phi %"class.v8::internal::Page"** [ %26, %30 ], [ %49, %43 ]
  %45 = bitcast %"class.v8::internal::Page"** %44 to %"class.v8::internal::MemoryChunk"**
  %46 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %45, align 8
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 8
  %48 = load i32, i32* %32, align 8
  tail call void @_ZN2v88internal4Heap28NotifyOldGenerationExpansionENS0_15AllocationSpaceEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %47, i32 %48, %"class.v8::internal::MemoryChunk"* %46) #12
  %49 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %44, i64 1
  %50 = icmp eq %"class.v8::internal::Page"** %49, %28
  br i1 %50, label %42, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace24FreeLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %69, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal19SpaceWithLinearArea26AdvanceAllocationObserversEv(%"class.v8::internal::SpaceWithLinearArea"* %8) #12
  %9 = icmp eq i64 %5, %3
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %12, i64 0, i32 86, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %14, i64 0, i32 14
  %16 = load i8, i8* %15, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = and i64 %3, -262144
  %20 = inttoptr i64 %19 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page16DestroyBlackAreaEmm(%"class.v8::internal::Page"* %20, i64 %3, i64 %5) #12
  br label %21

21:                                               ; preds = %10, %7, %18
  %22 = load i64, i64* %2, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %39, label %24

24:                                               ; preds = %21
  %25 = add i64 %22, -1
  %26 = and i64 %25, -262144
  %27 = inttoptr i64 %26 to %"class.v8::internal::BasicMemoryChunk"*
  %28 = sub i64 %22, %26
  %29 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %27, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp sgt i64 %28, %30
  br i1 %31, label %32, label %39

32:                                               ; preds = %24, %36
  %33 = phi i64 [ %37, %36 ], [ %30, %24 ]
  %34 = cmpxchg weak i64* %29, i64 %33, i64 %28 acq_rel monotonic
  %35 = extractvalue { i64, i1 } %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = extractvalue { i64, i1 } %34, 0
  %38 = icmp sgt i64 %28, %37
  br i1 %38, label %32, label %39

39:                                               ; preds = %32, %36, %21, %24
  %40 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false)
  %43 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %41, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %43, i64 0, i32 129
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %44) #12
  %45 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  %46 = bitcast i64* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false)
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %44) #12
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 2
  br i1 %49, label %50, label %54

50:                                               ; preds = %39
  %51 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %41, align 8
  %52 = and i64 %3, -262144
  %53 = inttoptr i64 %52 to %"class.v8::internal::MemoryChunk"*
  tail call void @_ZN2v88internal4Heap31UnprotectAndRegisterMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %51, %"class.v8::internal::MemoryChunk"* %53) #12
  br label %54

54:                                               ; preds = %50, %39
  %55 = sub i64 %5, %3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %54
  %58 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %41, align 8
  %59 = trunc i64 %55 to i32
  tail call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %58, i64 %3, i32 %59, i32 1) #12
  %60 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %60, align 8
  %62 = bitcast %"class.v8::internal::FreeList"* %61 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %63 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %63, i64 3
  %65 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %64, align 8
  %66 = tail call i64 %65(%"class.v8::internal::FreeList"* %61, i64 %3, i64 %55, i32 0) #12
  %67 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw sub i64* %67, i64 %55 seq_cst
  br label %69

69:                                               ; preds = %57, %54, %1
  ret void
}

declare void @_ZN2v88internal4Heap28NotifyOldGenerationExpansionENS0_15AllocationSpaceEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"*, i32, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10PagedSpace23CommittedPhysicalMemoryEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2v84base2OS14HasLazyCommitsEv() #12
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::PagedSpace"* %0 to i64 (%"class.v8::internal::BaseSpace"*)***
  %6 = load i64 (%"class.v8::internal::BaseSpace"*)**, i64 (%"class.v8::internal::BaseSpace"*)*** %5, align 8
  %7 = load i64 (%"class.v8::internal::BaseSpace"*)*, i64 (%"class.v8::internal::BaseSpace"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::internal::BaseSpace"* %4) #12
  br label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = add i64 %11, -1
  %15 = and i64 %14, -262144
  %16 = inttoptr i64 %15 to %"class.v8::internal::BasicMemoryChunk"*
  %17 = sub i64 %11, %15
  %18 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %16, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp sgt i64 %17, %19
  br i1 %20, label %21, label %28

21:                                               ; preds = %13, %25
  %22 = phi i64 [ %26, %25 ], [ %19, %13 ]
  %23 = cmpxchg weak i64* %18, i64 %22, i64 %17 acq_rel monotonic
  %24 = extractvalue { i64, i1 } %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = extractvalue { i64, i1 } %23, 0
  %27 = icmp sgt i64 %17, %26
  br i1 %27, label %21, label %28

28:                                               ; preds = %21, %25, %9, %13
  %29 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %29) #12
  %30 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %31 = bitcast %"class.v8::internal::MemoryChunk"** %30 to %"class.v8::internal::Page"**
  %32 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %31, align 8
  %33 = icmp eq %"class.v8::internal::Page"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %36, %28
  %35 = phi i64 [ 0, %28 ], [ %41, %36 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %29) #12
  br label %46

36:                                               ; preds = %28, %36
  %37 = phi %"class.v8::internal::Page"* [ %44, %36 ], [ %32, %28 ]
  %38 = phi i64 [ %41, %36 ], [ 0, %28 ]
  %39 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %37, i64 0, i32 0
  %40 = tail call i64 @_ZN2v88internal11MemoryChunk23CommittedPhysicalMemoryEv(%"class.v8::internal::MemoryChunk"* %39) #12
  %41 = add i64 %40, %38
  %42 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %37, i64 0, i32 0, i32 12, i32 0
  %43 = bitcast %"class.v8::internal::MemoryChunk"** %42 to %"class.v8::internal::Page"**
  %44 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %43, align 8
  %45 = icmp eq %"class.v8::internal::Page"* %44, null
  br i1 %45, label %34, label %36

46:                                               ; preds = %34, %3
  %47 = phi i64 [ %35, %34 ], [ %8, %3 ]
  ret i64 %47
}

declare zeroext i1 @_ZN2v84base2OS14HasLazyCommitsEv() local_unnamed_addr #1

declare i64 @_ZN2v88internal11MemoryChunk23CommittedPhysicalMemoryEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10PagedSpace12ContainsSlowEm(%"class.v8::internal::PagedSpace"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = and i64 %1, -262144
  %4 = inttoptr i64 %3 to %"class.v8::internal::Page"*
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %6 = bitcast %"class.v8::internal::MemoryChunk"** %5 to %"class.v8::internal::Page"**
  %7 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %6, align 8
  %8 = icmp eq %"class.v8::internal::Page"* %7, null
  br i1 %8, label %17, label %14

9:                                                ; preds = %14
  %10 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %15, i64 0, i32 0, i32 12, i32 0
  %11 = bitcast %"class.v8::internal::MemoryChunk"** %10 to %"class.v8::internal::Page"**
  %12 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %11, align 8
  %13 = icmp eq %"class.v8::internal::Page"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %2, %9
  %15 = phi %"class.v8::internal::Page"* [ %12, %9 ], [ %7, %2 ]
  %16 = icmp eq %"class.v8::internal::Page"* %15, %4
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %14, %2
  %18 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %9 ]
  ret i1 %18
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace14RemovePageSafeEi(%"class.v8::internal::PagedSpace"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = bitcast %"class.v8::internal::FreeList"* %5 to %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)***
  %8 = load %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)**, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)** %8, i64 5
  %10 = load %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)** %9, align 8
  %11 = tail call %"class.v8::internal::Page"* %10(%"class.v8::internal::FreeList"* %5, i64 %6) #12
  %12 = icmp eq %"class.v8::internal::Page"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @_ZN2v88internal10PagedSpace10RemovePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %0, %"class.v8::internal::Page"* nonnull %11)
  br label %14

14:                                               ; preds = %2, %13
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #12
  ret %"class.v8::internal::Page"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace14SetTopAndLimitEmm(%"class.v8::internal::PagedSpace"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  %8 = add i64 %5, -1
  %9 = and i64 %8, -262144
  %10 = inttoptr i64 %9 to %"class.v8::internal::BasicMemoryChunk"*
  %11 = sub i64 %5, %9
  %12 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %10, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp sgt i64 %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %7, %19
  %16 = phi i64 [ %20, %19 ], [ %13, %7 ]
  %17 = cmpxchg weak i64* %12, i64 %16, i64 %11 acq_rel monotonic
  %18 = extractvalue { i64, i1 } %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = icmp sgt i64 %11, %20
  br i1 %21, label %15, label %22

22:                                               ; preds = %15, %19, %3, %7
  %23 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %23, align 8
  store i64 %1, i64* %4, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 %2, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 129
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %27) #12
  %28 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 7
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  store i64 %1, i64* %29, align 8
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %27) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10PagedSpace25ShrinkPageToHighWaterMarkEPNS0_4PageE(%"class.v8::internal::PagedSpace"* nocapture, %"class.v8::internal::Page"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN2v88internal4Page21ShrinkToHighWaterMarkEv(%"class.v8::internal::Page"* %1) #12
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw sub i64* %4, i64 %3 seq_cst
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i64* %6, i64 %3 seq_cst
  ret i64 %3
}

declare i64 @_ZN2v88internal4Page21ShrinkToHighWaterMarkEv(%"class.v8::internal::Page"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace13ResetFreeListEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %3 = bitcast %"class.v8::internal::MemoryChunk"** %2 to %"class.v8::internal::Page"**
  %4 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %9

8:                                                ; preds = %9, %1
  ret void

9:                                                ; preds = %6, %9
  %10 = phi %"class.v8::internal::Page"* [ %4, %6 ], [ %15, %9 ]
  %11 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %7, align 8
  %12 = tail call i64 @_ZN2v88internal8FreeList18EvictFreeListItemsEPNS0_4PageE(%"class.v8::internal::FreeList"* %11, %"class.v8::internal::Page"* nonnull %10) #12
  %13 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %10, i64 0, i32 0, i32 12, i32 0
  %14 = bitcast %"class.v8::internal::MemoryChunk"** %13 to %"class.v8::internal::Page"**
  %15 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %14, align 8
  %16 = icmp eq %"class.v8::internal::Page"* %15, null
  br i1 %16, label %8, label %9
}

declare i64 @_ZN2v88internal8FreeList18EvictFreeListItemsEPNS0_4PageE(%"class.v8::internal::FreeList"*, %"class.v8::internal::Page"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace28ShrinkImmortalImmovablePagesEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = add i64 %3, -1
  %7 = and i64 %6, -262144
  %8 = inttoptr i64 %7 to %"class.v8::internal::BasicMemoryChunk"*
  %9 = sub i64 %3, %7
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp sgt i64 %9, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %5, %17
  %14 = phi i64 [ %18, %17 ], [ %11, %5 ]
  %15 = cmpxchg weak i64* %10, i64 %14, i64 %9 acq_rel monotonic
  %16 = extractvalue { i64, i1 } %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = extractvalue { i64, i1 } %15, 0
  %19 = icmp sgt i64 %9, %18
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %17, %1, %5
  tail call void @_ZN2v88internal10PagedSpace24FreeLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %0)
  %21 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %22 = bitcast %"class.v8::internal::MemoryChunk"** %21 to %"class.v8::internal::Page"**
  %23 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Page"* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi %"class.v8::internal::Page"* [ %23, %25 ], [ %33, %27 ]
  %29 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %26, align 8
  %30 = tail call i64 @_ZN2v88internal8FreeList18EvictFreeListItemsEPNS0_4PageE(%"class.v8::internal::FreeList"* %29, %"class.v8::internal::Page"* nonnull %28) #12
  %31 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %28, i64 0, i32 0, i32 12, i32 0
  %32 = bitcast %"class.v8::internal::MemoryChunk"** %31 to %"class.v8::internal::Page"**
  %33 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Page"* %33, null
  br i1 %34, label %35, label %27

35:                                               ; preds = %27
  %36 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %22, align 8
  %37 = icmp eq %"class.v8::internal::Page"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %42

41:                                               ; preds = %42, %20, %35
  ret void

42:                                               ; preds = %38, %42
  %43 = phi %"class.v8::internal::Page"* [ %36, %38 ], [ %49, %42 ]
  %44 = tail call i64 @_ZN2v88internal4Page21ShrinkToHighWaterMarkEv(%"class.v8::internal::Page"* nonnull %43) #12
  %45 = atomicrmw sub i64* %39, i64 %44 seq_cst
  %46 = atomicrmw sub i64* %40, i64 %44 seq_cst
  %47 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %43, i64 0, i32 0, i32 12, i32 0
  %48 = bitcast %"class.v8::internal::MemoryChunk"** %47 to %"class.v8::internal::Page"**
  %49 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %48, align 8
  %50 = icmp eq %"class.v8::internal::Page"* %49, null
  br i1 %50, label %41, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace12AllocatePageEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 85, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 32
  %9 = ashr exact i64 %8, 32
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = tail call %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %5, i64 %9, %"class.v8::internal::PagedSpace"* %0, i32 %11) #12
  ret %"class.v8::internal::Page"* %12
}

declare %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::PagedSpace"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace6ExpandEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 85, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 32
  %9 = ashr exact i64 %8, 32
  %10 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = tail call %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %5, i64 %9, %"class.v8::internal::PagedSpace"* %0, i32 %11) #12
  %13 = icmp eq %"class.v8::internal::Page"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %19) #12
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi %"class.v8::base::Mutex"* [ %19, %18 ], [ null, %14 ]
  %22 = phi i8 [ 1, %18 ], [ 0, %14 ]
  %23 = tail call i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %0, %"class.v8::internal::Page"* nonnull %12)
  %24 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0, i32 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %20
  %31 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %32 = trunc i64 %28 to i32
  tail call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %31, i64 %25, i32 %32, i32 1) #12
  %33 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %33, align 8
  %35 = bitcast %"class.v8::internal::FreeList"* %34 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %36 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %36, i64 3
  %38 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %37, align 8
  %39 = tail call i64 %38(%"class.v8::internal::FreeList"* %34, i64 %25, i64 %28, i32 0) #12
  %40 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i64* %40, i64 %28 seq_cst
  br label %42

42:                                               ; preds = %20, %30
  %43 = icmp eq i8 %22, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %42
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %21) #12
  br label %45

45:                                               ; preds = %44, %42, %1
  ret %"class.v8::internal::Page"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace16ExpandBackgroundEPNS0_9LocalHeapEm(%"class.v8::base::Optional.1148"* noalias nocapture sret, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalHeap"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 85, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = tail call %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %8, i64 %12, %"class.v8::internal::PagedSpace"* %1, i32 %14) #12
  %16 = icmp eq %"class.v8::internal::Page"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  br label %49

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #12
  %21 = tail call i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::Page"* nonnull %15)
  %22 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %15, i64 0, i32 0, i32 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %15, i64 0, i32 0, i32 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ult i64 %26, %3
  br i1 %27, label %28, label %29, !prof !22

28:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #14
  unreachable

29:                                               ; preds = %19
  %30 = add i64 %23, %3
  %31 = sub i64 %26, %3
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %29
  %34 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %35 = trunc i64 %31 to i32
  tail call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %34, i64 %30, i32 %35, i32 1) #12
  %36 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %36, align 8
  %38 = bitcast %"class.v8::internal::FreeList"* %37 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %39 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %39, i64 3
  %41 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %40, align 8
  %42 = tail call i64 %41(%"class.v8::internal::FreeList"* %37, i64 %30, i64 %31, i32 0) #12
  %43 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i64* %43, i64 %31 seq_cst
  br label %45

45:                                               ; preds = %29, %33
  %46 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %46, align 8
  %47 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %23, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %3, i64* %48, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #12
  br label %49

49:                                               ; preds = %45, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal10PagedSpace15CountTotalPagesEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %3 = bitcast %"class.v8::internal::MemoryChunk"** %2 to %"class.v8::internal::Page"**
  %4 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %8, %1
  %7 = phi i32 [ 0, %1 ], [ %11, %8 ]
  ret i32 %7

8:                                                ; preds = %1, %8
  %9 = phi %"class.v8::internal::Page"* [ %14, %8 ], [ %4, %1 ]
  %10 = phi i32 [ %11, %8 ], [ 0, %1 ]
  %11 = add nuw nsw i32 %10, 1
  %12 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %9, i64 0, i32 0, i32 12, i32 0
  %13 = bitcast %"class.v8::internal::MemoryChunk"** %12 to %"class.v8::internal::Page"**
  %14 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %13, align 8
  %15 = icmp eq %"class.v8::internal::Page"* %14, null
  br i1 %15, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace23SetLinearAllocationAreaEmm(%"class.v8::internal::PagedSpace"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  %8 = add i64 %5, -1
  %9 = and i64 %8, -262144
  %10 = inttoptr i64 %9 to %"class.v8::internal::BasicMemoryChunk"*
  %11 = sub i64 %5, %9
  %12 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %10, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp sgt i64 %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %7, %19
  %16 = phi i64 [ %20, %19 ], [ %13, %7 ]
  %17 = cmpxchg weak i64* %12, i64 %16, i64 %11 acq_rel monotonic
  %18 = extractvalue { i64, i1 } %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = extractvalue { i64, i1 } %17, 0
  %21 = icmp sgt i64 %11, %20
  br i1 %21, label %15, label %22

22:                                               ; preds = %15, %19, %3, %7
  %23 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %23, align 8
  store i64 %1, i64* %4, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 %2, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 129
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %27) #12
  %28 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 7
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  store i64 %1, i64* %29, align 8
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %27) #12
  %30 = icmp eq i64 %1, 0
  %31 = icmp eq i64 %1, %2
  %32 = or i1 %30, %31
  br i1 %32, label %44, label %33

33:                                               ; preds = %22
  %34 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %34, i64 0, i32 86, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %36, i64 0, i32 14
  %38 = load i8, i8* %37, align 1, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = add i64 %1, -4
  %42 = and i64 %41, -262144
  %43 = inttoptr i64 %42 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"* %43, i64 %1, i64 %2) #12
  br label %44

44:                                               ; preds = %33, %22, %40
  ret void
}

declare void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace13DecreaseLimitEm(%"class.v8::internal::PagedSpace"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %87, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = and i64 %1, -262144
  %12 = inttoptr i64 %11 to %"class.v8::internal::MemoryChunk"*
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %12, i64 0, i32 0, i32 2
  %14 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 16
  %15 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %14, i64 0, i32 40
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %12, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %12) #12
  br label %24

24:                                               ; preds = %23, %18, %10, %6
  %25 = phi i8 [ undef, %6 ], [ 0, %18 ], [ 1, %23 ], [ 0, %10 ]
  %26 = phi i8 [ 0, %6 ], [ 1, %18 ], [ 1, %23 ], [ 1, %10 ]
  %27 = phi %"class.v8::internal::MemoryChunk"* [ null, %6 ], [ %12, %18 ], [ %12, %23 ], [ %12, %10 ]
  %28 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %24
  %32 = add i64 %29, -1
  %33 = and i64 %32, -262144
  %34 = inttoptr i64 %33 to %"class.v8::internal::BasicMemoryChunk"*
  %35 = sub i64 %29, %33
  %36 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp sgt i64 %35, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %31, %43
  %40 = phi i64 [ %44, %43 ], [ %37, %31 ]
  %41 = cmpxchg weak i64* %36, i64 %40, i64 %35 acq_rel monotonic
  %42 = extractvalue { i64, i1 } %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = extractvalue { i64, i1 } %41, 0
  %45 = icmp sgt i64 %35, %44
  br i1 %45, label %39, label %46

46:                                               ; preds = %39, %43, %24, %31
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %29, i64* %47, align 8
  store i64 %29, i64* %28, align 8
  store i64 %1, i64* %3, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %49, i64 0, i32 129
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %50) #12
  %51 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 7
  store i64 %1, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  store i64 %29, i64* %52, align 8
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %50) #12
  %53 = sub i64 %4, %1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %67, label %55

55:                                               ; preds = %46
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 8
  %57 = trunc i64 %53 to i32
  tail call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %56, i64 %1, i32 %57, i32 1) #12
  %58 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %58, align 8
  %60 = bitcast %"class.v8::internal::FreeList"* %59 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %61 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %60, align 8
  %62 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %61, i64 3
  %63 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %62, align 8
  %64 = tail call i64 %63(%"class.v8::internal::FreeList"* %59, i64 %1, i64 %53, i32 0) #12
  %65 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw sub i64* %65, i64 %53 seq_cst
  br label %67

67:                                               ; preds = %46, %55
  %68 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %48, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %68, i64 0, i32 86, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %70, i64 0, i32 14
  %72 = load i8, i8* %71, align 1, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = add i64 %1, -4
  %76 = and i64 %75, -262144
  %77 = inttoptr i64 %76 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page16DestroyBlackAreaEmm(%"class.v8::internal::Page"* %77, i64 %1, i64 %4) #12
  br label %78

78:                                               ; preds = %67, %74
  %79 = icmp eq i8 %26, 0
  %80 = icmp eq i8 %25, 0
  %81 = or i1 %80, %79
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !5
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  tail call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %27) #12
  br label %87

86:                                               ; preds = %82
  tail call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %27) #12
  br label %87

87:                                               ; preds = %86, %85, %78, %2
  ret void
}

declare void @_ZN2v88internal4Page16DestroyBlackAreaEmm(%"class.v8::internal::Page"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  %7 = icmp eq i64 %3, %5
  %8 = or i1 %6, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = add i64 %3, -4
  %11 = and i64 %10, -262144
  %12 = inttoptr i64 %11 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"* %12, i64 %3, i64 %5) #12
  br label %13

13:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace26UnmarkLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  %7 = icmp eq i64 %3, %5
  %8 = or i1 %6, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = add i64 %3, -4
  %11 = and i64 %10, -262144
  %12 = inttoptr i64 %11 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page16DestroyBlackAreaEmm(%"class.v8::internal::Page"* %12, i64 %3, i64 %5) #12
  br label %13

13:                                               ; preds = %1, %9
  ret void
}

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10PagedSpace9AvailableEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %7, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  br label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %11) #12
  %12 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %13, i64 0, i32 6
  %15 = load i64, i64* %14, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %11) #12
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i64 [ %9, %5 ], [ %15, %10 ]
  ret i64 %17
}

declare void @_ZN2v88internal19SpaceWithLinearArea26AdvanceAllocationObserversEv(%"class.v8::internal::SpaceWithLinearArea"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap31UnprotectAndRegisterMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace11ReleasePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* nocapture, %"class.v8::internal::Page"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %3, align 8
  %5 = tail call i64 @_ZN2v88internal8FreeList18EvictFreeListItemsEPNS0_4PageE(%"class.v8::internal::FreeList"* %4, %"class.v8::internal::Page"* %1) #12
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -4
  %9 = and i64 %8, -262144
  %10 = inttoptr i64 %9 to %"class.v8::internal::Page"*
  %11 = icmp eq %"class.v8::internal::Page"* %10, %1
  br i1 %11, label %12, label %37

12:                                               ; preds = %2
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %12
  %15 = add i64 %7, -1
  %16 = and i64 %15, -262144
  %17 = inttoptr i64 %16 to %"class.v8::internal::BasicMemoryChunk"*
  %18 = sub i64 %7, %16
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %17, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp sgt i64 %18, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %14, %26
  %23 = phi i64 [ %27, %26 ], [ %20, %14 ]
  %24 = cmpxchg weak i64* %19, i64 %23, i64 %18 acq_rel monotonic
  %25 = extractvalue { i64, i1 } %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = extractvalue { i64, i1 } %24, 0
  %28 = icmp sgt i64 %18, %27
  br i1 %28, label %22, label %29

29:                                               ; preds = %22, %26, %12, %14
  %30 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false)
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %33, i64 0, i32 129
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %34) #12
  %35 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  %36 = bitcast i64* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %34) #12
  br label %37

37:                                               ; preds = %29, %2
  %38 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.v8::internal::Heap"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, -41416
  %46 = inttoptr i64 %45 to %"class.v8::internal::Isolate"*
  %47 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal7Isolate21RemoveCodeMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Isolate"* %46, %"class.v8::internal::MemoryChunk"* %47) #12
  br label %48

48:                                               ; preds = %41, %37
  %49 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i64* %51, i64 %50 seq_cst
  %53 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 4
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i64* %58, i64 %57 seq_cst
  %60 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %61 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %61, i64 0, i32 85, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE2EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"* %63, %"class.v8::internal::MemoryChunk"* %64) #12
  ret void
}

declare void @_ZN2v88internal7Isolate21RemoveCodeMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE2EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace11SetReadableEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i8*
  br label %11

10:                                               ; preds = %21, %1
  ret void

11:                                               ; preds = %7, %21
  %12 = phi %"class.v8::internal::Page"* [ %5, %7 ], [ %24, %21 ]
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %13, i64 0, i32 85, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store %"class.v8::internal::MemoryChunk"* %16, %"class.v8::internal::MemoryChunk"** %2, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %15, i64 0, i32 10, i32 0
  %18 = call %"struct.std::__1::__hash_node_base.253"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.249"* %17, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %2) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.253"* %18, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  br i1 %19, label %20, label %21, !prof !22

20:                                               ; preds = %11
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

21:                                               ; preds = %11
  call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %16) #12
  %22 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0, i32 12, i32 0
  %23 = bitcast %"class.v8::internal::MemoryChunk"** %22 to %"class.v8::internal::Page"**
  %24 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %23, align 8
  %25 = icmp eq %"class.v8::internal::Page"* %24, null
  br i1 %25, label %10, label %11
}

declare void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace20SetReadAndExecutableEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i8*
  br label %11

10:                                               ; preds = %21, %1
  ret void

11:                                               ; preds = %7, %21
  %12 = phi %"class.v8::internal::Page"* [ %5, %7 ], [ %24, %21 ]
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %13, i64 0, i32 85, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store %"class.v8::internal::MemoryChunk"* %16, %"class.v8::internal::MemoryChunk"** %2, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %15, i64 0, i32 10, i32 0
  %18 = call %"struct.std::__1::__hash_node_base.253"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.249"* %17, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %2) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.253"* %18, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  br i1 %19, label %20, label %21, !prof !22

20:                                               ; preds = %11
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

21:                                               ; preds = %11
  call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %16) #12
  %22 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0, i32 12, i32 0
  %23 = bitcast %"class.v8::internal::MemoryChunk"** %22 to %"class.v8::internal::Page"**
  %24 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %23, align 8
  %25 = icmp eq %"class.v8::internal::Page"* %24, null
  br i1 %25, label %10, label %11
}

declare void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace18SetReadAndWritableEv(%"class.v8::internal::PagedSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %4 = bitcast %"class.v8::internal::MemoryChunk"** %3 to %"class.v8::internal::Page"**
  %5 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Page"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i8*
  br label %11

10:                                               ; preds = %21, %1
  ret void

11:                                               ; preds = %7, %21
  %12 = phi %"class.v8::internal::Page"* [ %5, %7 ], [ %24, %21 ]
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %13, i64 0, i32 85, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store %"class.v8::internal::MemoryChunk"* %16, %"class.v8::internal::MemoryChunk"** %2, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %15, i64 0, i32 10, i32 0
  %18 = call %"struct.std::__1::__hash_node_base.253"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.249"* %17, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %2) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.253"* %18, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  br i1 %19, label %20, label %21, !prof !22

20:                                               ; preds = %11
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #14
  unreachable

21:                                               ; preds = %11
  call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %16) #12
  %22 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %12, i64 0, i32 0, i32 12, i32 0
  %23 = bitcast %"class.v8::internal::MemoryChunk"** %22 to %"class.v8::internal::Page"**
  %24 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %23, align 8
  %25 = icmp eq %"class.v8::internal::Page"* %24, null
  br i1 %25, label %10, label %11
}

declare void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ObjectIterator"* @_ZN2v88internal10PagedSpace17GetObjectIteratorEPNS0_4HeapE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 56) #12
  %4 = bitcast i8* %3 to %"class.v8::internal::PagedSpaceObjectIterator"*
  tail call void @_ZN2v88internal24PagedSpaceObjectIteratorC2EPNS0_4HeapEPNS0_10PagedSpaceE(%"class.v8::internal::PagedSpaceObjectIterator"* %4, %"class.v8::internal::Heap"* %1, %"class.v8::internal::PagedSpace"* %0)
  %5 = bitcast i8* %3 to %"class.v8::internal::ObjectIterator"*
  ret %"class.v8::internal::ObjectIterator"* %5
}

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %9) #12
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i8 [ 1, %8 ], [ 0, %3 ]
  %12 = phi %"class.v8::base::Mutex"* [ %9, %8 ], [ null, %3 ]
  tail call void @_ZN2v88internal10PagedSpace24FreeLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %0)
  %13 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i64 0, i64* %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %14, align 8
  %16 = bitcast %"class.v8::internal::FreeList"* %15 to i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)***
  %17 = load i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)** %17, i64 4
  %19 = load i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)** %18, align 8
  %20 = call i64 %19(%"class.v8::internal::FreeList"* %15, i64 %1, i64* nonnull %4, i32 %2) #12
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %98, label %23

23:                                               ; preds = %10
  %24 = and i64 %20, -262144
  %25 = inttoptr i64 %24 to %"class.v8::internal::Page"*
  %26 = load i64, i64* %4, align 8
  %27 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i64* %27, i64 %26 seq_cst
  %29 = add i64 %20, -1
  %30 = load i64, i64* %4, align 8
  %31 = add i64 %30, %29
  %32 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0
  %33 = call i64 @_ZN2v88internal19SpaceWithLinearArea12ComputeLimitEmmm(%"class.v8::internal::SpaceWithLinearArea"* %32, i64 %29, i64 %31, i64 %1) #12
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %57, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %25, i64 0, i32 0
  call void @_ZN2v88internal4Heap31UnprotectAndRegisterMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %41, %"class.v8::internal::MemoryChunk"* %42) #12
  br label %43

43:                                               ; preds = %39, %35
  %44 = sub i64 %31, %33
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 8
  %49 = trunc i64 %44 to i32
  call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %48, i64 %33, i32 %49, i32 1) #12
  %50 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %14, align 8
  %51 = bitcast %"class.v8::internal::FreeList"* %50 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %52 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %52, i64 3
  %54 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %53, align 8
  %55 = call i64 %54(%"class.v8::internal::FreeList"* %50, i64 %33, i64 %44, i32 0) #12
  %56 = atomicrmw sub i64* %27, i64 %44 seq_cst
  br label %57

57:                                               ; preds = %46, %43, %23
  %58 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %57
  %62 = add i64 %59, -1
  %63 = and i64 %62, -262144
  %64 = inttoptr i64 %63 to %"class.v8::internal::BasicMemoryChunk"*
  %65 = sub i64 %59, %63
  %66 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %64, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i64, i64* %66 monotonic, align 8
  %68 = icmp sgt i64 %65, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %61, %73
  %70 = phi i64 [ %74, %73 ], [ %67, %61 ]
  %71 = cmpxchg weak i64* %66, i64 %70, i64 %65 acq_rel monotonic
  %72 = extractvalue { i64, i1 } %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = extractvalue { i64, i1 } %71, 0
  %75 = icmp sgt i64 %65, %74
  br i1 %75, label %69, label %76

76:                                               ; preds = %73, %69, %61, %57
  %77 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 0
  store i64 %29, i64* %77, align 8
  store i64 %29, i64* %58, align 8
  %78 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 %33, i64* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %80, i64 0, i32 129
  call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %81) #12
  %82 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 7
  store i64 %33, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 6
  store i64 %29, i64* %83, align 8
  call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %81) #12
  %84 = icmp eq i64 %29, 0
  %85 = icmp eq i64 %29, %33
  %86 = or i1 %84, %85
  br i1 %86, label %98, label %87

87:                                               ; preds = %76
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %79, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %88, i64 0, i32 86, i32 0, i32 0, i32 0
  %90 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %90, i64 0, i32 14
  %92 = load i8, i8* %91, align 1, !range !5
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %87
  %95 = add i64 %20, -5
  %96 = and i64 %95, -262144
  %97 = inttoptr i64 %96 to %"class.v8::internal::Page"*
  call void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"* %97, i64 %29, i64 %33) #12
  br label %98

98:                                               ; preds = %94, %87, %76, %10
  %99 = phi i1 [ false, %10 ], [ true, %76 ], [ true, %87 ], [ true, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %100 = icmp eq i8 %11, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %12) #12
  br label %102

102:                                              ; preds = %98, %101
  ret i1 %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN2v88internal19SpaceWithLinearArea12ComputeLimitEmmm(%"class.v8::internal::SpaceWithLinearArea"*, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace22RawRefillLabBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* noalias nocapture sret, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalHeap"*, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::base::Optional.1148", align 8
  %9 = alloca %"class.v8::base::Optional.1148", align 8
  %10 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  call void @_ZN2v88internal10PagedSpace35TryAllocationFromFreeListBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* nonnull sret %8, %"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::LocalHeap"* undef, i64 %3, i64 %4, i32 undef, i32 %6)
  %11 = load i8, i8* %10, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %10, i64 24, i1 false)
  br label %82

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %17, i64 0, i32 81, i32 0, i32 0, i32 0
  %19 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %19, i64 0, i32 22
  %21 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %21, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i8, i8* %22 seq_cst, align 1
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %53, label %26

26:                                               ; preds = %15
  %27 = bitcast %"class.v8::internal::PagedSpace"* %1 to void (%"class.v8::internal::PagedSpace"*)***
  %28 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %28, i64 19
  %30 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %29, align 8
  tail call void %30(%"class.v8::internal::PagedSpace"* %1) #12
  %31 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  call void @_ZN2v88internal10PagedSpace35TryAllocationFromFreeListBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* nonnull sret %9, %"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::LocalHeap"* undef, i64 %3, i64 %4, i32 undef, i32 %6)
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %31, i64 24, i1 false)
  br label %51

36:                                               ; preds = %26
  %37 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %20, align 8
  %38 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = trunc i64 %3 to i32
  %41 = tail call i32 @_ZN2v88internal7Sweeper18ParallelSweepSpaceENS0_15AllocationSpaceEiiNS1_35FreeSpaceMayContainInvalidatedSlotsE(%"class.v8::internal::Sweeper"* %37, i32 %39, i32 %40, i32 1, i32 1) #12
  %42 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %27, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %42, i64 19
  %44 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %43, align 8
  tail call void %44(%"class.v8::internal::PagedSpace"* %1) #12
  %45 = sext i32 %41 to i64
  %46 = icmp ult i64 %45, %3
  br i1 %46, label %52, label %47

47:                                               ; preds = %36
  tail call void @_ZN2v88internal10PagedSpace35TryAllocationFromFreeListBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* sret %0, %"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::LocalHeap"* undef, i64 %3, i64 %4, i32 undef, i32 %6)
  %48 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %47, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br label %82

52:                                               ; preds = %47, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br label %53

53:                                               ; preds = %15, %52
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %55 = tail call zeroext i1 @_ZN2v88internal4Heap41ShouldExpandOldGenerationOnSlowAllocationEPNS0_9LocalHeapE(%"class.v8::internal::Heap"* %54, %"class.v8::internal::LocalHeap"* %2) #12
  br i1 %55, label %56, label %67

56:                                               ; preds = %53
  %57 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %58 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = shl i64 %59, 32
  %61 = ashr exact i64 %60, 32
  %62 = tail call zeroext i1 @_ZN2v88internal4Heap32CanExpandOldGenerationBackgroundEPNS0_9LocalHeapEm(%"class.v8::internal::Heap"* %57, %"class.v8::internal::LocalHeap"* %2, i64 %61) #12
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  tail call void @_ZN2v88internal10PagedSpace16ExpandBackgroundEPNS0_9LocalHeapEm(%"class.v8::base::Optional.1148"* sret %0, %"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::LocalHeap"* undef, i64 %4)
  %64 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %82

67:                                               ; preds = %63, %56, %53
  %68 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %20, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %68, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i8, i8* %69 seq_cst, align 1
  %71 = and i8 %70, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 8
  tail call void @_ZN2v88internal20MarkCompactCollector29DrainSweepingWorklistForSpaceENS0_15AllocationSpaceE(%"class.v8::internal::MarkCompactCollector"* %19, i32 %75) #12
  %76 = bitcast %"class.v8::internal::PagedSpace"* %1 to void (%"class.v8::internal::PagedSpace"*)***
  %77 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %77, i64 19
  %79 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %78, align 8
  tail call void %79(%"class.v8::internal::PagedSpace"* %1) #12
  tail call void @_ZN2v88internal10PagedSpace35TryAllocationFromFreeListBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* sret %0, %"class.v8::internal::PagedSpace"* %1, %"class.v8::internal::LocalHeap"* undef, i64 %3, i64 %4, i32 undef, i32 %6)
  br label %82

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false)
  br label %82

82:                                               ; preds = %63, %51, %73, %80, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace35TryAllocationFromFreeListBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1148"* noalias nocapture sret, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalHeap"* nocapture readnone, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %9) #12
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store i64 0, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %11, align 8
  %13 = bitcast %"class.v8::internal::FreeList"* %12 to i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)***
  %14 = load i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)** %14, i64 4
  %16 = load i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64*, i32)** %15, align 8
  %17 = call i64 %16(%"class.v8::internal::FreeList"* %12, i64 %3, i64* nonnull %8, i32 %6) #12
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  br label %52

22:                                               ; preds = %7
  %23 = load i64, i64* %8, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i64* %24, i64 %23 seq_cst
  %26 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 8
  call void @_ZN2v88internal4Heap59StartIncrementalMarkingIfAllocationLimitIsReachedBackgroundEv(%"class.v8::internal::Heap"* %27) #12
  %28 = load i64, i64* %8, align 8
  %29 = icmp ugt i64 %28, %4
  %30 = select i1 %29, i64 %4, i64 %28
  %31 = add i64 %17, -1
  %32 = add i64 %28, %31
  %33 = add i64 %30, %31
  %34 = icmp eq i64 %32, %33
  br i1 %34, label %48, label %35

35:                                               ; preds = %22
  %36 = sub i64 %32, %33
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 8
  %40 = trunc i64 %36 to i32
  call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %39, i64 %33, i32 %40, i32 1) #12
  %41 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %11, align 8
  %42 = bitcast %"class.v8::internal::FreeList"* %41 to i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)***
  %43 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)**, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %43, i64 3
  %45 = load i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)*, i64 (%"class.v8::internal::FreeList"*, i64, i64, i32)** %44, align 8
  %46 = call i64 %45(%"class.v8::internal::FreeList"* %41, i64 %33, i64 %36, i32 0) #12
  %47 = atomicrmw sub i64* %24, i64 %36 seq_cst
  br label %48

48:                                               ; preds = %38, %35, %22
  %49 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %31, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::base::Optional.1148", %"class.v8::base::Optional.1148"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %30, i64* %51, align 8
  br label %52

52:                                               ; preds = %48, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %9) #12
  ret void
}

declare i32 @_ZN2v88internal7Sweeper18ParallelSweepSpaceENS0_15AllocationSpaceEiiNS1_35FreeSpaceMayContainInvalidatedSlotsE(%"class.v8::internal::Sweeper"*, i32, i32, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal4Heap41ShouldExpandOldGenerationOnSlowAllocationEPNS0_9LocalHeapE(%"class.v8::internal::Heap"*, %"class.v8::internal::LocalHeap"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal4Heap32CanExpandOldGenerationBackgroundEPNS0_9LocalHeapEm(%"class.v8::internal::Heap"*, %"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal20MarkCompactCollector29DrainSweepingWorklistForSpaceENS0_15AllocationSpaceE(%"class.v8::internal::MarkCompactCollector"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap59StartIncrementalMarkingIfAllocationLimitIsReachedBackgroundEv(%"class.v8::internal::Heap"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace27UpdateInlineAllocationLimitEm(%"class.v8::internal::PagedSpace"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZN2v88internal19SpaceWithLinearArea12ComputeLimitEmmm(%"class.v8::internal::SpaceWithLinearArea"* %3, i64 %5, i64 %7, i64 %1) #12
  tail call void @_ZN2v88internal10PagedSpace13DecreaseLimitEm(%"class.v8::internal::PagedSpace"* %0, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10PagedSpace21PrepareForMarkCompactEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal10PagedSpace24FreeLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %0)
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %2, align 8
  %4 = bitcast %"class.v8::internal::FreeList"* %3 to void (%"class.v8::internal::FreeList"*)***
  %5 = load void (%"class.v8::internal::FreeList"*)**, void (%"class.v8::internal::FreeList"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %5, i64 6
  %7 = load void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %6, align 8
  tail call void %7(%"class.v8::internal::FreeList"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10PagedSpace13RefillLabMainEiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::Heap"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 9, i32 22
  %11 = load i32, i32* %10, align 8
  store i32 1, i32* %10, align 8
  %12 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #12
  %13 = load i64, i64* %6, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #12
  %14 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1183", %"struct.std::__1::atomic.1183"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16, !prof !15

16:                                               ; preds = %3
  %17 = add i64 %13, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 14, i32 0
  %22 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %22, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %23, %"class.v8::internal::RuntimeCallTimer"* %20, i32 156) #12
  br label %24

24:                                               ; preds = %3, %16
  %25 = call zeroext i1 @_ZN2v88internal10PagedSpace16RawRefillLabMainEiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i32 %1, i32 %2)
  %26 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %27 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %26, align 8
  %28 = icmp eq %"class.v8::internal::RuntimeCallStats"* %27, null
  br i1 %28, label %31, label %29, !prof !15

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %27, %"class.v8::internal::RuntimeCallTimer"* %30) #12
  br label %31

31:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #12
  store i32 %11, i32* %10, align 8
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10PagedSpace16RawRefillLabMainEiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2)
  br i1 %5, label %152, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %8, i64 0, i32 81, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %10, i64 0, i32 22
  %12 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %12, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i8, i8* %13 seq_cst, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.v8::internal::PagedSpace"* %0 to void (%"class.v8::internal::PagedSpace"*)***
  %19 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %19, i64 19
  %21 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %20, align 8
  tail call void %21(%"class.v8::internal::PagedSpace"* %0) #12
  %22 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2)
  br i1 %22, label %152, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 81, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %28, i64 0, i32 22
  %30 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %30, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i8, i8* %31 seq_cst, align 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %23
  %36 = add i32 %25, -1
  %37 = icmp ugt i32 %36, 2
  %38 = zext i1 %37 to i32
  %39 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %29, align 8
  %40 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = tail call i32 @_ZN2v88internal7Sweeper18ParallelSweepSpaceENS0_15AllocationSpaceEiiNS1_35FreeSpaceMayContainInvalidatedSlotsE(%"class.v8::internal::Sweeper"* %39, i32 %41, i32 %1, i32 1, i32 %38) #12
  %43 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %18, align 8
  %44 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %43, i64 19
  %45 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %44, align 8
  tail call void %45(%"class.v8::internal::PagedSpace"* %0) #12
  %46 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2) #12
  br i1 %46, label %152, label %47

47:                                               ; preds = %6, %23, %35
  %48 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, -1
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %54 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %53, i64 0, i32 36, i64 %56
  %58 = bitcast %"class.v8::internal::Space"** %57 to %"class.v8::internal::PagedSpace"**
  %59 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %59, i64 0, i32 5
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %60) #12
  %61 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %59, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %61, align 8
  %63 = bitcast %"class.v8::internal::FreeList"* %62 to %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)***
  %64 = load %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)**, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)** %64, i64 5
  %66 = load %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)*, %"class.v8::internal::Page"* (%"class.v8::internal::FreeList"*, i64)** %65, align 8
  %67 = tail call %"class.v8::internal::Page"* %66(%"class.v8::internal::FreeList"* %62, i64 %4) #12
  %68 = icmp eq %"class.v8::internal::Page"* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %52
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %60) #12
  br label %73

70:                                               ; preds = %52
  tail call void @_ZN2v88internal10PagedSpace10RemovePageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %59, %"class.v8::internal::Page"* nonnull %67) #12
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %60) #12
  %71 = tail call i64 @_ZN2v88internal10PagedSpace7AddPageEPNS0_4PageE(%"class.v8::internal::PagedSpace"* %0, %"class.v8::internal::Page"* nonnull %67)
  %72 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2)
  br i1 %72, label %152, label %73

73:                                               ; preds = %69, %70, %47
  %74 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %75 = tail call zeroext i1 @_ZN2v88internal4Heap41ShouldExpandOldGenerationOnSlowAllocationEPNS0_9LocalHeapE(%"class.v8::internal::Heap"* %74, %"class.v8::internal::LocalHeap"* null) #12
  br i1 %75, label %76, label %101

76:                                               ; preds = %73
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %78 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 32
  %81 = ashr exact i64 %80, 32
  %82 = tail call zeroext i1 @_ZN2v88internal4Heap22CanExpandOldGenerationEm(%"class.v8::internal::Heap"* %77, i64 %81) #12
  br i1 %82, label %83, label %101

83:                                               ; preds = %76
  %84 = bitcast %"class.v8::internal::PagedSpace"* %0 to %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)***
  %85 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)**, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %85, i64 21
  %87 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %86, align 8
  %88 = tail call %"class.v8::internal::Page"* %87(%"class.v8::internal::PagedSpace"* %0) #12
  %89 = icmp eq %"class.v8::internal::Page"* %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %83
  %91 = load i32, i32* %48, align 4
  %92 = add i32 %91, -1
  %93 = icmp ult i32 %92, 3
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %96 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %88, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap28NotifyOldGenerationExpansionENS0_15AllocationSpaceEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %95, i32 %97, %"class.v8::internal::MemoryChunk"* %98) #12
  br label %99

99:                                               ; preds = %90, %94
  %100 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2) #12
  br i1 %100, label %152, label %101

101:                                              ; preds = %83, %99, %76, %73
  %102 = load i32, i32* %48, align 4
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %103, i64 0, i32 81, i32 0, i32 0, i32 0
  %105 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %105, i64 0, i32 22
  %107 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %107, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i8, i8* %108 seq_cst, align 1
  %110 = and i8 %109, 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %125, label %112

112:                                              ; preds = %101
  %113 = add i32 %102, -1
  %114 = icmp ugt i32 %113, 2
  %115 = zext i1 %114 to i32
  %116 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %106, align 8
  %117 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = tail call i32 @_ZN2v88internal7Sweeper18ParallelSweepSpaceENS0_15AllocationSpaceEiiNS1_35FreeSpaceMayContainInvalidatedSlotsE(%"class.v8::internal::Sweeper"* %116, i32 %118, i32 0, i32 0, i32 %115) #12
  %120 = bitcast %"class.v8::internal::PagedSpace"* %0 to void (%"class.v8::internal::PagedSpace"*)***
  %121 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %121, i64 19
  %123 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %122, align 8
  tail call void %123(%"class.v8::internal::PagedSpace"* %0) #12
  %124 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2) #12
  br i1 %124, label %152, label %125

125:                                              ; preds = %101, %112
  %126 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %126, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %152, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %126, i64 0, i32 125
  %132 = load i8, i8* %131, align 2, !range !5
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %152

134:                                              ; preds = %130
  %135 = bitcast %"class.v8::internal::PagedSpace"* %0 to %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)***
  %136 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)**, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %136, i64 21
  %138 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %137, align 8
  %139 = tail call %"class.v8::internal::Page"* %138(%"class.v8::internal::PagedSpace"* %0) #12
  %140 = icmp eq %"class.v8::internal::Page"* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %134
  %142 = load i32, i32* %48, align 4
  %143 = add i32 %142, -1
  %144 = icmp ult i32 %143, 3
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %147 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %139, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap28NotifyOldGenerationExpansionENS0_15AllocationSpaceEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %146, i32 %148, %"class.v8::internal::MemoryChunk"* %149) #12
  br label %150

150:                                              ; preds = %145, %141
  %151 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %4, i32 %2) #12
  br label %152

152:                                              ; preds = %130, %150, %134, %17, %35, %70, %99, %112, %125, %3
  %153 = phi i1 [ true, %3 ], [ true, %17 ], [ true, %35 ], [ true, %70 ], [ true, %99 ], [ true, %112 ], [ false, %125 ], [ false, %130 ], [ %151, %150 ], [ false, %134 ]
  ret i1 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Page"* @_ZN2v88internal10LocalSpace6ExpandEv(%"class.v8::internal::LocalSpace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0
  %3 = tail call %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace6ExpandEv(%"class.v8::internal::PagedSpace"* %2)
  %4 = ptrtoint %"class.v8::internal::Page"* %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::Page"** %7, %9
  %11 = ptrtoint %"class.v8::internal::Page"** %9 to i64
  br i1 %10, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::Page"** %7 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %7, i64 1
  %15 = ptrtoint %"class.v8::internal::Page"** %14 to i64
  %16 = bitcast %"class.v8::internal::Page"*** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %74

17:                                               ; preds = %1
  %18 = ptrtoint %"class.v8::internal::Page"** %7 to i64
  %19 = bitcast %"class.v8::internal::Page"*** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.163"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.163"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #14
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::Page"*** %8 to i64*
  %30 = sub i64 %11, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #13
  %45 = bitcast i8* %44 to %"class.v8::internal::Page"**
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.v8::internal::Page"** [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %48, i64 %23
  %50 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %48, i64 %47
  %51 = ptrtoint %"class.v8::internal::Page"** %50 to i64
  %52 = bitcast %"class.v8::internal::Page"** %49 to i64*
  store i64 %4, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %49, i64 1
  %54 = ptrtoint %"class.v8::internal::Page"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.163", %"class.std::__1::vector.163"* %5, i64 0, i32 0, i32 0
  %56 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %55, align 8
  %57 = load i64, i64* %19, align 8
  %58 = ptrtoint %"class.v8::internal::Page"** %56 to i64
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = sub nsw i64 0, %60
  %62 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %49, i64 %61
  %63 = ptrtoint %"class.v8::internal::Page"** %62 to i64
  %64 = icmp sgt i64 %59, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = bitcast %"class.v8::internal::Page"** %62 to i8*
  %67 = bitcast %"class.v8::internal::Page"** %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 %59, i1 false) #12
  %68 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %55, align 8
  br label %69

69:                                               ; preds = %65, %46
  %70 = phi %"class.v8::internal::Page"** [ %56, %46 ], [ %68, %65 ]
  store i64 %63, i64* %20, align 8
  store i64 %54, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %71 = icmp eq %"class.v8::internal::Page"** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.v8::internal::Page"** %70 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %12, %69, %72
  ret %"class.v8::internal::Page"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15CompactionSpace13RefillLabMainEiNS0_16AllocationOriginE(%"class.v8::internal::CompactionSpace"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %0, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZN2v88internal10PagedSpace16RawRefillLabMainEiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %4, i32 %1, i32 %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10PagedSpace9TryExpandEiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::PagedSpace"* %0 to %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)***
  %5 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)**, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %5, i64 21
  %7 = load %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)*, %"class.v8::internal::Page"* (%"class.v8::internal::PagedSpace"*)** %6, align 8
  %8 = tail call %"class.v8::internal::Page"* %7(%"class.v8::internal::PagedSpace"* %0) #12
  %9 = icmp eq %"class.v8::internal::Page"* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 3
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %8, i64 0, i32 0
  tail call void @_ZN2v88internal4Heap28NotifyOldGenerationExpansionENS0_15AllocationSpaceEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %17, i32 %19, %"class.v8::internal::MemoryChunk"* %20) #12
  br label %21

21:                                               ; preds = %15, %10
  %22 = sext i32 %1 to i64
  %23 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %22, i32 %2)
  br label %24

24:                                               ; preds = %3, %21
  %25 = phi i1 [ %23, %21 ], [ false, %3 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10PagedSpace24ContributeToSweepingMainEiiiNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %9, i64 0, i32 81, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %11, i64 0, i32 22
  %13 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %13, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i8, i8* %14 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %5
  %19 = add i32 %7, -1
  %20 = icmp ugt i32 %19, 2
  %21 = zext i1 %20 to i32
  %22 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %12, align 8
  %23 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @_ZN2v88internal7Sweeper18ParallelSweepSpaceENS0_15AllocationSpaceEiiNS1_35FreeSpaceMayContainInvalidatedSlotsE(%"class.v8::internal::Sweeper"* %22, i32 %24, i32 %1, i32 %2, i32 %21) #12
  %26 = bitcast %"class.v8::internal::PagedSpace"* %0 to void (%"class.v8::internal::PagedSpace"*)***
  %27 = load void (%"class.v8::internal::PagedSpace"*)**, void (%"class.v8::internal::PagedSpace"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %27, i64 19
  %29 = load void (%"class.v8::internal::PagedSpace"*)*, void (%"class.v8::internal::PagedSpace"*)** %28, align 8
  tail call void %29(%"class.v8::internal::PagedSpace"* %0) #12
  %30 = sext i32 %3 to i64
  %31 = tail call zeroext i1 @_ZN2v88internal10PagedSpace29TryAllocationFromFreeListMainEmNS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %0, i64 %30, i32 %4)
  br label %32

32:                                               ; preds = %5, %18
  %33 = phi i1 [ %31, %18 ], [ false, %5 ]
  ret i1 %33
}

declare zeroext i1 @_ZN2v88internal4Heap22CanExpandOldGenerationEm(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %11 = tail call zeroext i1 @_ZN2v88internal4Heap28ShouldOptimizeForMemoryUsageEv(%"class.v8::internal::Heap"* %10) #12
  %12 = zext i1 %11 to i32
  tail call void @_ZN2v88internal4Heap49StartIncrementalMarkingIfAllocationLimitIsReachedEiNS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %10, i32 %12, i32 64) #12
  br label %13

13:                                               ; preds = %4, %8
  %14 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sext i32 %1 to i64
  %17 = add i64 %15, %16
  %18 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 1, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %13
  %22 = bitcast %"class.v8::internal::PagedSpace"* %0 to i1 (%"class.v8::internal::PagedSpace"*, i32, i32)***
  %23 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)**, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %23, i64 22
  %25 = load i1 (%"class.v8::internal::PagedSpace"*, i32, i32)*, i1 (%"class.v8::internal::PagedSpace"*, i32, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.v8::internal::PagedSpace"* %0, i32 %1, i32 %3) #12
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = load i64, i64* %14, align 8
  %29 = load i64, i64* %18, align 8
  %30 = add i64 %28, %16
  br label %36

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 1
  br label %64

36:                                               ; preds = %27, %13
  %37 = phi i64 [ %30, %27 ], [ %17, %13 ]
  %38 = phi i64 [ %29, %27 ], [ %19, %13 ]
  %39 = phi i64 [ %28, %27 ], [ %15, %13 ]
  %40 = icmp ugt i64 %37, %38
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 1
  br label %51

46:                                               ; preds = %36
  store i64 %37, i64* %14, align 8
  %47 = add i64 %39, 1
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %51, !prof !22

50:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #14
  unreachable

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %45, %41 ], [ %47, %46 ]
  %53 = and i64 %52, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56, !prof !22

55:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #14
  unreachable

56:                                               ; preds = %51
  %57 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %60, i32 %3) #12
  br label %61

61:                                               ; preds = %59, %56
  %62 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0
  %63 = add i64 %52, -1
  tail call void @_ZN2v88internal19SpaceWithLinearArea25InvokeAllocationObserversEmmmm(%"class.v8::internal::SpaceWithLinearArea"* %62, i64 %63, i64 %16, i64 %16, i64 %16) #12
  br label %64

64:                                               ; preds = %31, %61
  %65 = phi i64 [ %52, %61 ], [ %35, %31 ]
  ret i64 %65
}

declare void @_ZN2v88internal4Heap49StartIncrementalMarkingIfAllocationLimitIsReachedEiNS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8MapSpace12SortFreeListEv(%"class.v8::internal::MapSpace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1165", align 8
  %3 = bitcast %"class.std::__1::vector.1165"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %5 = bitcast %"class.v8::internal::MemoryChunk"** %4 to %"class.v8::internal::Page"**
  %6 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Page"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEvT0_SB_T_"(%"struct.std::__1::pair.1167"* null, %"struct.std::__1::pair.1167"* null) #12
  br label %134

9:                                                ; preds = %1, %9
  %10 = phi %"class.v8::internal::Page"* [ %15, %9 ], [ %6, %1 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %1 ]
  %12 = add nuw nsw i32 %11, 1
  %13 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %10, i64 0, i32 0, i32 12, i32 0
  %14 = bitcast %"class.v8::internal::MemoryChunk"** %13 to %"class.v8::internal::Page"**
  %15 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %14, align 8
  %16 = icmp eq %"class.v8::internal::Page"* %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9
  %18 = zext i32 %12 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair.1167"** %19 to i64*
  %21 = bitcast %"class.std::__1::vector.1165"* %2 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %2, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair.1167"** %22 to i64*
  %24 = shl nuw nsw i64 %18, 4
  %25 = tail call i8* @_Znwm(i64 %24) #13
  %26 = bitcast i8* %25 to %"struct.std::__1::pair.1167"*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %26, i64 %18
  %29 = ptrtoint %"struct.std::__1::pair.1167"* %28 to i64
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %21, align 8
  store i64 %27, i64* %23, align 8
  store i64 %29, i64* %20, align 8
  %31 = bitcast i8* %25 to %"struct.std::__1::pair.1167"*
  br i1 %7, label %36, label %32

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %2, i64 0, i32 0, i32 1
  %35 = bitcast %"struct.std::__1::pair.1167"** %34 to i64*
  br label %44

36:                                               ; preds = %117, %17
  %37 = phi %"struct.std::__1::pair.1167"* [ %31, %17 ], [ %118, %117 ]
  %38 = phi %"struct.std::__1::pair.1167"* [ %26, %17 ], [ %119, %117 ]
  %39 = phi %"struct.std::__1::pair.1167"* [ %31, %17 ], [ %120, %117 ]
  %40 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %2, i64 0, i32 0, i32 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEvT0_SB_T_"(%"struct.std::__1::pair.1167"* %39, %"struct.std::__1::pair.1167"* %38) #12
  %41 = icmp eq %"struct.std::__1::pair.1167"* %39, %38
  br i1 %41, label %128, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %135

44:                                               ; preds = %126, %32
  %45 = phi %"struct.std::__1::pair.1167"* [ %31, %32 ], [ %118, %126 ]
  %46 = phi %"struct.std::__1::pair.1167"* [ %31, %32 ], [ %120, %126 ]
  %47 = phi i64 [ %27, %32 ], [ %121, %126 ]
  %48 = phi %"struct.std::__1::pair.1167"* [ %28, %32 ], [ %127, %126 ]
  %49 = phi %"struct.std::__1::pair.1167"* [ %26, %32 ], [ %119, %126 ]
  %50 = phi %"class.v8::internal::Page"* [ %6, %32 ], [ %124, %126 ]
  %51 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %33, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %50, i64 0, i32 0, i32 13
  %53 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %52, align 8
  %54 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %53, align 8
  %55 = bitcast %"class.v8::internal::FreeList"* %51 to void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)***
  %56 = load void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)**, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %56, i64 8
  %58 = load void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, void (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %57, align 8
  tail call void %58(%"class.v8::internal::FreeList"* %51, %"class.v8::internal::FreeListCategory"* %54) #12
  %59 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %50, i64 0, i32 0, i32 0, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult %"struct.std::__1::pair.1167"* %49, %48
  %62 = ptrtoint %"struct.std::__1::pair.1167"* %48 to i64
  br i1 %61, label %63, label %68

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %49, i64 0, i32 0
  store i64 %60, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %49, i64 0, i32 1
  store %"class.v8::internal::Page"* %50, %"class.v8::internal::Page"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %49, i64 1
  %67 = ptrtoint %"struct.std::__1::pair.1167"* %66 to i64
  store i64 %67, i64* %35, align 8
  br label %117

68:                                               ; preds = %44
  %69 = ptrtoint %"struct.std::__1::pair.1167"* %49 to i64
  %70 = load i64, i64* %21, align 8
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 4
  %73 = add nsw i64 %72, 1
  %74 = icmp ugt i64 %73, 1152921504606846975
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = bitcast %"class.std::__1::vector.1165"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %76) #14
  unreachable

77:                                               ; preds = %68
  %78 = sub i64 %62, %70
  %79 = ashr exact i64 %78, 4
  %80 = icmp ult i64 %79, 576460752303423487
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = ashr exact i64 %78, 3
  %83 = icmp ult i64 %82, %73
  %84 = select i1 %83, i64 %73, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %81
  %87 = icmp ugt i64 %84, 1152921504606846975
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @abort() #14
  unreachable

89:                                               ; preds = %86, %77
  %90 = phi i64 [ %84, %86 ], [ 1152921504606846975, %77 ]
  %91 = shl i64 %90, 4
  %92 = tail call i8* @_Znwm(i64 %91) #13
  %93 = bitcast i8* %92 to %"struct.std::__1::pair.1167"*
  br label %94

94:                                               ; preds = %89, %81
  %95 = phi i64 [ %90, %89 ], [ 0, %81 ]
  %96 = phi %"struct.std::__1::pair.1167"* [ %93, %89 ], [ null, %81 ]
  %97 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %96, i64 %72
  %98 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %96, i64 %95
  %99 = ptrtoint %"struct.std::__1::pair.1167"* %98 to i64
  %100 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %97, i64 0, i32 0
  store i64 %60, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %96, i64 %72, i32 1
  store %"class.v8::internal::Page"* %50, %"class.v8::internal::Page"** %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %97, i64 1
  %103 = ptrtoint %"struct.std::__1::pair.1167"* %102 to i64
  %104 = sub i64 %47, %70
  %105 = ashr exact i64 %104, 4
  %106 = sub nsw i64 0, %105
  %107 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %97, i64 %106
  %108 = ptrtoint %"struct.std::__1::pair.1167"* %107 to i64
  %109 = icmp sgt i64 %104, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %94
  %111 = bitcast %"struct.std::__1::pair.1167"* %107 to i8*
  %112 = inttoptr i64 %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 %104, i1 false) #12
  br label %113

113:                                              ; preds = %110, %94
  store i64 %108, i64* %21, align 8
  store i64 %103, i64* %35, align 8
  store i64 %99, i64* %20, align 8
  %114 = icmp eq i64 %70, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %63, %113, %115
  %118 = phi %"struct.std::__1::pair.1167"* [ %45, %63 ], [ %107, %113 ], [ %107, %115 ]
  %119 = phi %"struct.std::__1::pair.1167"* [ %66, %63 ], [ %102, %113 ], [ %102, %115 ]
  %120 = phi %"struct.std::__1::pair.1167"* [ %46, %63 ], [ %107, %113 ], [ %107, %115 ]
  %121 = phi i64 [ %67, %63 ], [ %103, %113 ], [ %103, %115 ]
  %122 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %50, i64 0, i32 0, i32 12, i32 0
  %123 = bitcast %"class.v8::internal::MemoryChunk"** %122 to %"class.v8::internal::Page"**
  %124 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %123, align 8
  %125 = icmp eq %"class.v8::internal::Page"* %124, null
  br i1 %125, label %36, label %126

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"** %19, align 8
  br label %44

128:                                              ; preds = %135, %36
  %129 = icmp eq %"struct.std::__1::pair.1167"* %37, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %128
  %131 = ptrtoint %"struct.std::__1::pair.1167"* %37 to i64
  %132 = bitcast %"struct.std::__1::pair.1167"** %40 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::pair.1167"* %37 to i8*
  tail call void @_ZdlPv(i8* %133) #13
  br label %134

134:                                              ; preds = %8, %128, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret void

135:                                              ; preds = %42, %135
  %136 = phi %"struct.std::__1::pair.1167"* [ %39, %42 ], [ %148, %135 ]
  %137 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %43, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %136, i64 0, i32 1
  %139 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %139, i64 0, i32 0, i32 13
  %141 = load %"class.v8::internal::FreeListCategory"**, %"class.v8::internal::FreeListCategory"*** %140, align 8
  %142 = load %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"** %141, align 8
  %143 = bitcast %"class.v8::internal::FreeList"* %137 to i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)***
  %144 = load i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)**, i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %144, i64 7
  %146 = load i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)*, i1 (%"class.v8::internal::FreeList"*, %"class.v8::internal::FreeListCategory"*)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.v8::internal::FreeList"* %137, %"class.v8::internal::FreeListCategory"* %142) #12
  %148 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %136, i64 1
  %149 = icmp eq %"struct.std::__1::pair.1167"* %148, %38
  br i1 %149, label %128, label %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal9BaseSpace15CommittedMemoryEv(%"class.v8::internal::BaseSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseSpace", %"class.v8::internal::BaseSpace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 seq_cst, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal9BaseSpace22MaximumCommittedMemoryEv(%"class.v8::internal::BaseSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseSpace", %"class.v8::internal::BaseSpace"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10PagedSpace4SizeEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 seq_cst, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10PagedSpaceD2Ev(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10PagedSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::heap::List", %"class.v8::internal::heap::List"* %4, i64 0, i32 0
  %6 = bitcast %"class.v8::internal::MemoryChunk"** %3 to i64*
  %7 = bitcast %"class.v8::internal::heap::List"* %4 to i64*
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %5, align 8
  %10 = icmp eq %"class.v8::internal::MemoryChunk"* %9, null
  %11 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %3, align 8
  %12 = icmp eq %"class.v8::internal::MemoryChunk"* %11, null
  %13 = and i1 %10, %12
  br i1 %13, label %46, label %14

14:                                               ; preds = %1, %36
  %15 = phi %"class.v8::internal::MemoryChunk"* [ %43, %36 ], [ %11, %1 ]
  %16 = phi %"class.v8::internal::MemoryChunk"* [ %41, %36 ], [ %9, %1 ]
  %17 = icmp eq %"class.v8::internal::MemoryChunk"* %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 12, i32 1
  %20 = bitcast %"class.v8::internal::MemoryChunk"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %16, i64 0, i32 12, i32 0
  %24 = bitcast %"class.v8::internal::MemoryChunk"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %7, align 8
  %26 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %23, align 8
  %27 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %16, i64 0, i32 12, i32 1
  %28 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %27, align 8
  %29 = icmp eq %"class.v8::internal::MemoryChunk"* %26, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %26, i64 0, i32 12, i32 1
  store %"class.v8::internal::MemoryChunk"* %28, %"class.v8::internal::MemoryChunk"** %31, align 8
  br label %32

32:                                               ; preds = %30, %22
  %33 = icmp eq %"class.v8::internal::MemoryChunk"* %28, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %28, i64 0, i32 12, i32 0
  store %"class.v8::internal::MemoryChunk"* %26, %"class.v8::internal::MemoryChunk"** %35, align 8
  br label %36

36:                                               ; preds = %34, %32
  %37 = bitcast %"class.v8::internal::MemoryChunk"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #12
  %38 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %38, i64 0, i32 85, i32 0, i32 0, i32 0
  %40 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %39, align 8
  tail call void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE0EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"* %40, %"class.v8::internal::MemoryChunk"* %16) #12
  %41 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %5, align 8
  %42 = icmp eq %"class.v8::internal::MemoryChunk"* %41, null
  %43 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %3, align 8
  %44 = icmp eq %"class.v8::internal::MemoryChunk"* %43, null
  %45 = and i1 %42, %44
  br i1 %45, label %46, label %14

46:                                               ; preds = %36, %1
  %47 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %47 seq_cst, align 8
  %48 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %49 seq_cst, align 8
  %50 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 5
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %50) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN2v88internal5SpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 3
  %52 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %51, align 8
  %53 = icmp eq %"struct.std::__1::atomic"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %46
  %55 = bitcast %"struct.std::__1::atomic"* %52 to i8*
  tail call void @_ZdaPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %46
  store %"struct.std::__1::atomic"* null, %"struct.std::__1::atomic"** %51, align 8
  %57 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %57, align 8
  store %"class.v8::internal::FreeList"* null, %"class.v8::internal::FreeList"** %57, align 8
  %59 = icmp eq %"class.v8::internal::FreeList"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.v8::internal::FreeList"* %58 to void (%"class.v8::internal::FreeList"*)***
  %62 = load void (%"class.v8::internal::FreeList"*)**, void (%"class.v8::internal::FreeList"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %62, i64 1
  %64 = load void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %63, align 8
  tail call void %64(%"class.v8::internal::FreeList"* nonnull %58) #12
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.575"*, %"struct.std::__1::__hash_node_base.575"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.575"* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %65, %69
  %70 = phi %"struct.std::__1::__hash_node_base.575"* [ %72, %69 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.575", %"struct.std::__1::__hash_node_base.575"* %70, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.575"*, %"struct.std::__1::__hash_node_base.575"** %71, align 8
  %73 = bitcast %"struct.std::__1::__hash_node_base.575"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  %74 = icmp eq %"struct.std::__1::__hash_node_base.575"* %72, null
  br i1 %74, label %75, label %69

75:                                               ; preds = %69, %65
  %76 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.575"**, %"struct.std::__1::__hash_node_base.575"*** %76, align 8
  store %"struct.std::__1::__hash_node_base.575"** null, %"struct.std::__1::__hash_node_base.575"*** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.575"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = bitcast %"struct.std::__1::__hash_node_base.575"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %79, %75
  %82 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %83 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %82, align 8
  %84 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %83 to i64
  %87 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %88 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %83 to i8*
  tail call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %85, %81
  %91 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %91, align 8
  %93 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %92 to i64
  %96 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %97 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %92 to i8*
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %90, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10PagedSpaceD0Ev(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal10PagedSpaceD2Ev(%"class.v8::internal::PagedSpace"* %0) #12
  %2 = bitcast %"class.v8::internal::PagedSpace"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %2) #12
  ret void
}

declare void @_ZN2v88internal19SpaceWithLinearArea21AddAllocationObserverEPNS0_18AllocationObserverE(%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*) unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea24RemoveAllocationObserverEPNS0_18AllocationObserverE(%"class.v8::internal::SpaceWithLinearArea"*, %"class.v8::internal::AllocationObserver"*) unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea24PauseAllocationObserversEv(%"class.v8::internal::SpaceWithLinearArea"*) unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea25ResumeAllocationObserversEv(%"class.v8::internal::SpaceWithLinearArea"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Space29StartNextInlineAllocationStepEv(%"class.v8::internal::Space"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal5Space13SizeOfObjectsEv(%"class.v8::internal::Space"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %0, i64 0, i32 0
  %3 = bitcast %"class.v8::internal::Space"* %0 to i64 (%"class.v8::internal::BaseSpace"*)***
  %4 = load i64 (%"class.v8::internal::BaseSpace"*)**, i64 (%"class.v8::internal::BaseSpace"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.v8::internal::BaseSpace"*)*, i64 (%"class.v8::internal::BaseSpace"*)** %4, i64 3
  %6 = load i64 (%"class.v8::internal::BaseSpace"*)*, i64 (%"class.v8::internal::BaseSpace"*)** %5, align 8
  %7 = tail call i64 %6(%"class.v8::internal::BaseSpace"* %2) #12
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal5Space30RoundSizeDownToObjectAlignmentEi(%"class.v8::internal::Space"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  %6 = select i1 %5, i32 -32, i32 -4
  %7 = and i32 %6, %1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal5Space25ExternalBackingStoreBytesENS0_24ExternalBackingStoreTypeE(%"class.v8::internal::Space"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %0, i64 0, i32 3
  %4 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %4, i64 %5, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 seq_cst, align 8
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10PagedSpace26SupportsAllocationObserverEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10PagedSpace5WasteEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %0, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::FreeList", %"class.v8::internal::FreeList"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 seq_cst, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10PagedSpace12snapshotableEv(%"class.v8::internal::PagedSpace"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10LocalSpaceD2Ev(%"class.v8::internal::LocalSpace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10LocalSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Page"** %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Page"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Page"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpaceD2Ev(%"class.v8::internal::PagedSpace"* %12) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10LocalSpaceD0Ev(%"class.v8::internal::LocalSpace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10LocalSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Page"** %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Page"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Page"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpaceD2Ev(%"class.v8::internal::PagedSpace"* %12) #12
  %13 = bitcast %"class.v8::internal::LocalSpace"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal10LocalSpace12snapshotableEv(%"class.v8::internal::LocalSpace"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CompactionSpaceD0Ev(%"class.v8::internal::CompactionSpace"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10LocalSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Page"** %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Page"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Page"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal10PagedSpaceD2Ev(%"class.v8::internal::PagedSpace"* %12) #12
  %13 = bitcast %"class.v8::internal::CompactionSpace"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14ObjectIteratorD2Ev(%"class.v8::internal::ObjectIterator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal24PagedSpaceObjectIteratorD0Ev(%"class.v8::internal::PagedSpaceObjectIterator"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::PagedSpaceObjectIterator"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %2) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal24PagedSpaceObjectIterator4NextEv(%"class.v8::internal::PagedSpaceObjectIterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.v8::internal::HeapObject", align 8
  %3 = bitcast %"class.v8::internal::HeapObject"* %2 to i8*
  %4 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.v8::internal::PagedSpaceObjectIterator", %"class.v8::internal::PagedSpaceObjectIterator"* %0, i64 0, i32 4, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::PageIteratorImpl", %"class.v8::internal::PageIteratorImpl"* %7, i64 0, i32 0
  %10 = bitcast %"class.v8::internal::PageIteratorImpl"* %7 to i64*
  %11 = load i64, i64* %4, align 8
  br label %12

12:                                               ; preds = %56, %1
  %13 = phi i64 [ %61, %56 ], [ %11, %1 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  br label %14

14:                                               ; preds = %18, %12
  %15 = phi i64 [ %28, %18 ], [ %13, %12 ]
  %16 = load i64, i64* %5, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = add i64 %15, 1
  store i64 %19, i64* %6, align 8
  %20 = and i64 %19, -4294967296
  %21 = inttoptr i64 %15 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %20, %23
  %25 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %2, i64 %24) #12
  %26 = sext i32 %25 to i64
  %27 = load i64, i64* %4, align 8
  %28 = add i64 %27, %26
  store i64 %28, i64* %4, align 8
  %29 = load i64, i64* %6, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  %40 = icmp eq i16 %39, 169
  br i1 %40, label %14, label %42

41:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  br label %52

42:                                               ; preds = %18
  %43 = inttoptr i64 %31 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %30, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  %50 = trunc i64 %29 to i32
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %41, %42
  %53 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %8, align 8, !noalias !23
  %54 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %9, align 8
  %55 = icmp eq %"class.v8::internal::Page"* %53, %54
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %54, i64 0, i32 0, i32 12, i32 0
  %58 = bitcast %"class.v8::internal::MemoryChunk"** %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !26
  store i64 %59, i64* %10, align 8, !noalias !26
  %60 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %54, i64 0, i32 0, i32 0, i32 3
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %4, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %54, i64 0, i32 0, i32 0, i32 4
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %5, align 8
  br label %12

64:                                               ; preds = %52, %42
  %65 = phi i64 [ %29, %42 ], [ 0, %52 ]
  ret i64 %65
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

declare void @_ZN2v88internal16FreeListCategory6RelinkEPNS0_8FreeListE(%"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeList"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.253"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.249"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %1, align 8
  %4 = ptrtoint %"class.v8::internal::MemoryChunk"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.249", %"class.std::__1::__hash_table.249"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #12, !range !29
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.249", %"class.std::__1::__hash_table.249"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.253"**, %"struct.std::__1::__hash_node_base.253"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253"*, %"struct.std::__1::__hash_node_base.253"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.253"*, %"struct.std::__1::__hash_node_base.253"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.253"* %36, null
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.253"*, %"struct.std::__1::__hash_node_base.253"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.253"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br i1 %23, label %44, label %66

44:                                               ; preds = %42, %62
  %45 = phi %"struct.std::__1::__hash_node_base.253"* [ %64, %62 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.253"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = icmp ult i64 %48, %19
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %48, %19
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %53, %52 ], [ %48, %50 ]
  %56 = icmp eq i64 %55, %32
  br i1 %56, label %62, label %84

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %45, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.253"* %58 to %"class.v8::internal::MemoryChunk"**
  %60 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %59, align 8
  %61 = icmp eq %"class.v8::internal::MemoryChunk"* %60, %3
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %45, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.253"*, %"struct.std::__1::__hash_node_base.253"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.253"* %64, null
  br i1 %65, label %84, label %44

66:                                               ; preds = %42, %80
  %67 = phi %"struct.std::__1::__hash_node_base.253"* [ %82, %80 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.253"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %17
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %43
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %80, label %84

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base.253"* %76 to %"class.v8::internal::MemoryChunk"**
  %78 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %77, align 8
  %79 = icmp eq %"class.v8::internal::MemoryChunk"* %78, %3
  br i1 %79, label %84, label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.253", %"struct.std::__1::__hash_node_base.253"* %67, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.253"*, %"struct.std::__1::__hash_node_base.253"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.253"* %82, null
  br i1 %83, label %84, label %66

84:                                               ; preds = %75, %80, %72, %57, %62, %54, %38, %2, %31
  %85 = phi %"struct.std::__1::__hash_node_base.253"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %57 ], [ null, %62 ], [ null, %54 ], [ %67, %75 ], [ null, %80 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base.253"* %85
}

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal4Heap28ShouldOptimizeForMemoryUsageEv(%"class.v8::internal::Heap"*) local_unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea25InvokeAllocationObserversEmmmm(%"class.v8::internal::SpaceWithLinearArea"*, i64, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #1

declare void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #1

declare void @_ZN2v88internal16FreeListCategory5ResetEPNS0_8FreeListE(%"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeList"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEvT0_SB_T_"(%"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %451, %2
  %4 = phi %"struct.std::__1::pair.1167"* [ %1, %2 ], [ %427, %451 ]
  %5 = phi %"struct.std::__1::pair.1167"* [ %0, %2 ], [ %25, %451 ]
  %6 = ptrtoint %"struct.std::__1::pair.1167"* %4 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1
  %8 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %10 = bitcast %"class.v8::internal::Page"** %9 to i64*
  %11 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %12 = bitcast %"class.v8::internal::Page"** %11 to i64*
  %13 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %14 = bitcast %"class.v8::internal::Page"** %13 to i64*
  %15 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %7, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %17 = bitcast %"class.v8::internal::Page"** %16 to i64*
  %18 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %20 = bitcast %"class.v8::internal::Page"** %19 to i64*
  %21 = ptrtoint %"struct.std::__1::pair.1167"* %4 to i64
  br label %22

22:                                               ; preds = %460, %3
  %23 = phi %"struct.std::__1::pair.1167"* [ %5, %3 ], [ %461, %460 ]
  br label %24

24:                                               ; preds = %361, %22
  %25 = phi %"struct.std::__1::pair.1167"* [ %23, %22 ], [ %348, %361 ]
  %26 = ptrtoint %"struct.std::__1::pair.1167"* %25 to i64
  %27 = sub i64 %6, %26
  %28 = ashr exact i64 %27, 4
  switch i64 %28, label %134 [
    i64 0, label %464
    i64 1, label %464
    i64 2, label %29
    i64 3, label %42
    i64 4, label %89
    i64 5, label %94
  ]

29:                                               ; preds = %24
  %30 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %464

35:                                               ; preds = %29
  store i64 %31, i64* %32, align 8
  store i64 %33, i64* %30, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %38 = bitcast %"class.v8::internal::Page"** %36 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.v8::internal::Page"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %38, align 8
  store i64 %39, i64* %40, align 8
  br label %464

42:                                               ; preds = %24
  %43 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %44, %46
  %48 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, %44
  br i1 %47, label %67, label %51

51:                                               ; preds = %42
  br i1 %50, label %52, label %464

52:                                               ; preds = %51
  store i64 %49, i64* %43, align 8
  store i64 %44, i64* %48, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %55 = bitcast %"class.v8::internal::Page"** %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.v8::internal::Page"** %54 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %55, align 8
  store i64 %56, i64* %57, align 8
  %59 = load i64, i64* %43, align 8
  %60 = load i64, i64* %45, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %464

62:                                               ; preds = %52
  store i64 %59, i64* %45, align 8
  store i64 %60, i64* %43, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %64 = bitcast %"class.v8::internal::Page"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %55, align 8
  store i64 %66, i64* %64, align 8
  store i64 %65, i64* %55, align 8
  br label %464

67:                                               ; preds = %42
  br i1 %50, label %68, label %75

68:                                               ; preds = %67
  store i64 %49, i64* %45, align 8
  store i64 %46, i64* %48, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %71 = bitcast %"class.v8::internal::Page"** %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.v8::internal::Page"** %70 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %71, align 8
  store i64 %72, i64* %73, align 8
  br label %464

75:                                               ; preds = %67
  store i64 %44, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 1
  %78 = bitcast %"class.v8::internal::Page"** %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::Page"** %77 to i64*
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %78, align 8
  store i64 %79, i64* %80, align 8
  %82 = load i64, i64* %48, align 8
  %83 = icmp ult i64 %82, %46
  br i1 %83, label %84, label %464

84:                                               ; preds = %75
  store i64 %82, i64* %43, align 8
  store i64 %46, i64* %48, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %86 = load i64, i64* %80, align 8
  %87 = bitcast %"class.v8::internal::Page"** %85 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %80, align 8
  store i64 %86, i64* %87, align 8
  br label %464

89:                                               ; preds = %24
  %90 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2
  %92 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* %25, %"struct.std::__1::pair.1167"* %90, %"struct.std::__1::pair.1167"* %91, %"struct.std::__1::pair.1167"* %92)
  br label %464

94:                                               ; preds = %24
  %95 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2
  %97 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 3
  %98 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* %25, %"struct.std::__1::pair.1167"* %95, %"struct.std::__1::pair.1167"* %96, %"struct.std::__1::pair.1167"* %97) #12
  %99 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %97, i64 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %104, label %464

104:                                              ; preds = %94
  store i64 %100, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 3, i32 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %4, i64 -1, i32 1
  %107 = bitcast %"class.v8::internal::Page"** %105 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::Page"** %106 to i64*
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %107, align 8
  store i64 %108, i64* %109, align 8
  %111 = load i64, i64* %101, align 8
  %112 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %96, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp ult i64 %111, %113
  br i1 %114, label %115, label %464

115:                                              ; preds = %104
  store i64 %111, i64* %112, align 8
  store i64 %113, i64* %101, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2, i32 1
  %117 = bitcast %"class.v8::internal::Page"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %107, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %107, align 8
  %120 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %95, i64 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp ult i64 %111, %121
  br i1 %122, label %123, label %464

123:                                              ; preds = %115
  store i64 %111, i64* %120, align 8
  store i64 %121, i64* %112, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 1
  %125 = bitcast %"class.v8::internal::Page"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  store i64 %119, i64* %125, align 8
  store i64 %126, i64* %117, align 8
  %127 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = icmp ult i64 %111, %128
  br i1 %129, label %130, label %464

130:                                              ; preds = %123
  store i64 %111, i64* %127, align 8
  store i64 %128, i64* %120, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %132 = bitcast %"class.v8::internal::Page"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %119, i64* %132, align 8
  store i64 %133, i64* %125, align 8
  br label %464

134:                                              ; preds = %24
  %135 = icmp slt i64 %27, 112
  br i1 %135, label %136, label %219

136:                                              ; preds = %134
  %137 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2
  %138 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = icmp ult i64 %139, %141
  %143 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %137, i64 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = icmp ult i64 %144, %139
  br i1 %142, label %159, label %146

146:                                              ; preds = %136
  br i1 %145, label %147, label %179

147:                                              ; preds = %146
  store i64 %144, i64* %138, align 8
  store i64 %139, i64* %143, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2, i32 1
  %150 = bitcast %"class.v8::internal::Page"** %148 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::Page"** %149 to i64*
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %150, align 8
  store i64 %151, i64* %152, align 8
  %154 = icmp ult i64 %144, %141
  br i1 %154, label %155, label %179

155:                                              ; preds = %147
  store i64 %144, i64* %140, align 8
  store i64 %141, i64* %138, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %157 = bitcast %"class.v8::internal::Page"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  store i64 %153, i64* %157, align 8
  store i64 %158, i64* %150, align 8
  br label %179

159:                                              ; preds = %136
  br i1 %145, label %160, label %167

160:                                              ; preds = %159
  store i64 %144, i64* %140, align 8
  store i64 %141, i64* %143, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %162 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2, i32 1
  %163 = bitcast %"class.v8::internal::Page"** %161 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.v8::internal::Page"** %162 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %163, align 8
  store i64 %164, i64* %165, align 8
  br label %179

167:                                              ; preds = %159
  store i64 %139, i64* %140, align 8
  store i64 %141, i64* %138, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1, i32 1
  %170 = bitcast %"class.v8::internal::Page"** %168 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.v8::internal::Page"** %169 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %170, align 8
  store i64 %171, i64* %172, align 8
  %174 = icmp ult i64 %144, %141
  br i1 %174, label %175, label %179

175:                                              ; preds = %167
  store i64 %144, i64* %138, align 8
  store i64 %141, i64* %143, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 2, i32 1
  %177 = bitcast %"class.v8::internal::Page"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %172, align 8
  store i64 %171, i64* %177, align 8
  br label %179

179:                                              ; preds = %175, %167, %160, %155, %147, %146
  %180 = phi i64 [ %144, %146 ], [ %139, %147 ], [ %139, %155 ], [ %141, %160 ], [ %144, %167 ], [ %141, %175 ]
  %181 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 3
  %182 = icmp eq %"struct.std::__1::pair.1167"* %181, %4
  br i1 %182, label %464, label %183

183:                                              ; preds = %179, %217
  %184 = phi i64 [ %218, %217 ], [ %180, %179 ]
  %185 = phi %"struct.std::__1::pair.1167"* [ %215, %217 ], [ %181, %179 ]
  %186 = phi %"struct.std::__1::pair.1167"* [ %185, %217 ], [ %137, %179 ]
  %187 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %185, i64 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = icmp ult i64 %188, %184
  br i1 %189, label %190, label %214

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %185, i64 0, i32 1
  %192 = bitcast %"class.v8::internal::Page"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  br label %194

194:                                              ; preds = %205, %190
  %195 = phi i64 [ %184, %190 ], [ %208, %205 ]
  %196 = phi %"struct.std::__1::pair.1167"* [ %185, %190 ], [ %197, %205 ]
  %197 = phi %"struct.std::__1::pair.1167"* [ %186, %190 ], [ %206, %205 ]
  %198 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %196, i64 0, i32 0
  store i64 %195, i64* %198, align 8
  %199 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %197, i64 0, i32 1
  %200 = bitcast %"class.v8::internal::Page"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %196, i64 0, i32 1
  %203 = bitcast %"class.v8::internal::Page"** %202 to i64*
  store i64 %201, i64* %203, align 8
  %204 = icmp eq %"struct.std::__1::pair.1167"* %197, %25
  br i1 %204, label %210, label %205

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %197, i64 -1
  %207 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %206, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = icmp ult i64 %188, %208
  br i1 %209, label %194, label %210

210:                                              ; preds = %205, %194
  %211 = phi %"struct.std::__1::pair.1167"* [ %25, %194 ], [ %197, %205 ]
  %212 = bitcast %"class.v8::internal::Page"** %199 to i64*
  %213 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %211, i64 0, i32 0
  store i64 %188, i64* %213, align 8
  store i64 %193, i64* %212, align 8
  br label %214

214:                                              ; preds = %210, %183
  %215 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %185, i64 1
  %216 = icmp eq %"struct.std::__1::pair.1167"* %215, %4
  br i1 %216, label %464, label %217

217:                                              ; preds = %214
  %218 = load i64, i64* %187, align 8
  br label %183

219:                                              ; preds = %134
  %220 = icmp sgt i64 %27, 15984
  %221 = sdiv i64 %28, 2
  %222 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %221
  br i1 %220, label %223, label %268

223:                                              ; preds = %219
  %224 = sdiv i64 %28, 4
  %225 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %224
  %226 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %222, i64 %224
  %227 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* %25, %"struct.std::__1::pair.1167"* %225, %"struct.std::__1::pair.1167"* %222, %"struct.std::__1::pair.1167"* %226) #12
  %228 = load i64, i64* %15, align 8
  %229 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %226, i64 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = icmp ult i64 %228, %230
  br i1 %231, label %232, label %308

232:                                              ; preds = %223
  store i64 %228, i64* %229, align 8
  store i64 %230, i64* %15, align 8
  %233 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %226, i64 0, i32 1
  %234 = bitcast %"class.v8::internal::Page"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = load i64, i64* %17, align 8
  store i64 %236, i64* %234, align 8
  store i64 %235, i64* %17, align 8
  %237 = add i32 %227, 1
  %238 = load i64, i64* %229, align 8
  %239 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %222, i64 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp ult i64 %238, %240
  br i1 %241, label %242, label %308

242:                                              ; preds = %232
  store i64 %238, i64* %239, align 8
  store i64 %240, i64* %229, align 8
  %243 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %221, i32 1
  %244 = bitcast %"class.v8::internal::Page"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = load i64, i64* %234, align 8
  store i64 %246, i64* %244, align 8
  store i64 %245, i64* %234, align 8
  %247 = add i32 %227, 2
  %248 = load i64, i64* %239, align 8
  %249 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %225, i64 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = icmp ult i64 %248, %250
  br i1 %251, label %252, label %308

252:                                              ; preds = %242
  store i64 %248, i64* %249, align 8
  store i64 %250, i64* %239, align 8
  %253 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %224, i32 1
  %254 = bitcast %"class.v8::internal::Page"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = load i64, i64* %244, align 8
  store i64 %256, i64* %254, align 8
  store i64 %255, i64* %244, align 8
  %257 = add i32 %227, 3
  %258 = load i64, i64* %249, align 8
  %259 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = icmp ult i64 %258, %260
  br i1 %261, label %262, label %308

262:                                              ; preds = %252
  store i64 %258, i64* %259, align 8
  store i64 %260, i64* %249, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %264 = bitcast %"class.v8::internal::Page"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = load i64, i64* %254, align 8
  store i64 %266, i64* %264, align 8
  store i64 %265, i64* %254, align 8
  %267 = add i32 %227, 4
  br label %308

268:                                              ; preds = %219
  %269 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %222, i64 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = icmp ult i64 %270, %272
  %274 = load i64, i64* %8, align 8
  %275 = icmp ult i64 %274, %270
  br i1 %273, label %290, label %276

276:                                              ; preds = %268
  br i1 %275, label %277, label %308

277:                                              ; preds = %276
  store i64 %274, i64* %269, align 8
  store i64 %270, i64* %8, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %221, i32 1
  %279 = bitcast %"class.v8::internal::Page"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = load i64, i64* %10, align 8
  store i64 %281, i64* %279, align 8
  store i64 %280, i64* %10, align 8
  %282 = load i64, i64* %269, align 8
  %283 = load i64, i64* %271, align 8
  %284 = icmp ult i64 %282, %283
  br i1 %284, label %285, label %308

285:                                              ; preds = %277
  store i64 %282, i64* %271, align 8
  store i64 %283, i64* %269, align 8
  %286 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %287 = bitcast %"class.v8::internal::Page"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = load i64, i64* %279, align 8
  store i64 %289, i64* %287, align 8
  store i64 %288, i64* %279, align 8
  br label %308

290:                                              ; preds = %268
  br i1 %275, label %291, label %296

291:                                              ; preds = %290
  store i64 %274, i64* %271, align 8
  store i64 %272, i64* %8, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %293 = bitcast %"class.v8::internal::Page"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = load i64, i64* %14, align 8
  store i64 %295, i64* %293, align 8
  store i64 %294, i64* %14, align 8
  br label %308

296:                                              ; preds = %290
  store i64 %270, i64* %271, align 8
  store i64 %272, i64* %269, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %298 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 %221, i32 1
  %299 = bitcast %"class.v8::internal::Page"** %297 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.v8::internal::Page"** %298 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %299, align 8
  store i64 %300, i64* %301, align 8
  %303 = load i64, i64* %8, align 8
  %304 = icmp ult i64 %303, %272
  br i1 %304, label %305, label %308

305:                                              ; preds = %296
  store i64 %303, i64* %269, align 8
  store i64 %272, i64* %8, align 8
  %306 = load i64, i64* %301, align 8
  %307 = load i64, i64* %12, align 8
  store i64 %307, i64* %301, align 8
  store i64 %306, i64* %12, align 8
  br label %308

308:                                              ; preds = %305, %296, %291, %285, %277, %276, %262, %252, %242, %232, %223
  %309 = phi i32 [ %267, %262 ], [ %257, %252 ], [ %247, %242 ], [ %237, %232 ], [ %227, %223 ], [ 1, %291 ], [ 0, %276 ], [ 2, %285 ], [ 1, %277 ], [ 2, %305 ], [ 1, %296 ]
  %310 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 0
  %311 = load i64, i64* %310, align 8
  %312 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %222, i64 0, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = icmp ult i64 %311, %313
  br i1 %314, label %384, label %315

315:                                              ; preds = %308, %371
  %316 = phi %"struct.std::__1::pair.1167"* [ %317, %371 ], [ %7, %308 ]
  %317 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %316, i64 -1
  %318 = icmp eq %"struct.std::__1::pair.1167"* %25, %317
  br i1 %318, label %319, label %371

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1
  %321 = load i64, i64* %18, align 8
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %340, label %323

323:                                              ; preds = %319
  %324 = icmp eq %"struct.std::__1::pair.1167"* %320, %7
  br i1 %324, label %464, label %325

325:                                              ; preds = %323, %337
  %326 = phi %"struct.std::__1::pair.1167"* [ %338, %337 ], [ %320, %323 ]
  %327 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %326, i64 0, i32 0
  %328 = load i64, i64* %327, align 8
  %329 = icmp ult i64 %311, %328
  br i1 %329, label %330, label %337

330:                                              ; preds = %325
  %331 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %326, i64 0, i32 0
  store i64 %321, i64* %331, align 8
  store i64 %328, i64* %18, align 8
  %332 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %326, i64 0, i32 1
  %333 = bitcast %"class.v8::internal::Page"** %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = load i64, i64* %20, align 8
  store i64 %335, i64* %333, align 8
  store i64 %334, i64* %20, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %326, i64 1
  br label %340

337:                                              ; preds = %325
  %338 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %326, i64 1
  %339 = icmp eq %"struct.std::__1::pair.1167"* %338, %7
  br i1 %339, label %464, label %325

340:                                              ; preds = %330, %319
  %341 = phi %"struct.std::__1::pair.1167"* [ %320, %319 ], [ %336, %330 ]
  %342 = icmp eq %"struct.std::__1::pair.1167"* %341, %7
  br i1 %342, label %464, label %343

343:                                              ; preds = %340, %363
  %344 = phi %"struct.std::__1::pair.1167"* [ %352, %363 ], [ %341, %340 ]
  %345 = phi %"struct.std::__1::pair.1167"* [ %357, %363 ], [ %7, %340 ]
  %346 = load i64, i64* %310, align 8
  br label %347

347:                                              ; preds = %347, %343
  %348 = phi %"struct.std::__1::pair.1167"* [ %344, %343 ], [ %352, %347 ]
  %349 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %348, i64 0, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = icmp ult i64 %346, %350
  %352 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %348, i64 1
  br i1 %351, label %353, label %347

353:                                              ; preds = %347
  %354 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %348, i64 0, i32 0
  br label %355

355:                                              ; preds = %353, %355
  %356 = phi %"struct.std::__1::pair.1167"* [ %357, %355 ], [ %345, %353 ]
  %357 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %356, i64 -1
  %358 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %357, i64 0, i32 0
  %359 = load i64, i64* %358, align 8
  %360 = icmp ult i64 %346, %359
  br i1 %360, label %355, label %361

361:                                              ; preds = %355
  %362 = icmp ult %"struct.std::__1::pair.1167"* %348, %357
  br i1 %362, label %363, label %24

363:                                              ; preds = %361
  %364 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %357, i64 0, i32 0
  store i64 %359, i64* %354, align 8
  store i64 %350, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %348, i64 0, i32 1
  %366 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %356, i64 -1, i32 1
  %367 = bitcast %"class.v8::internal::Page"** %365 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.v8::internal::Page"** %366 to i64*
  %370 = load i64, i64* %369, align 8
  store i64 %370, i64* %367, align 8
  store i64 %368, i64* %369, align 8
  br label %343

371:                                              ; preds = %315
  %372 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %317, i64 0, i32 0
  %373 = load i64, i64* %372, align 8
  %374 = icmp ult i64 %373, %313
  br i1 %374, label %375, label %315

375:                                              ; preds = %371
  %376 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %317, i64 0, i32 0
  store i64 %373, i64* %310, align 8
  store i64 %311, i64* %376, align 8
  %377 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 0, i32 1
  %378 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %316, i64 -1, i32 1
  %379 = bitcast %"class.v8::internal::Page"** %377 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.v8::internal::Page"** %378 to i64*
  %382 = load i64, i64* %381, align 8
  store i64 %382, i64* %379, align 8
  store i64 %380, i64* %381, align 8
  %383 = add i32 %309, 1
  br label %384

384:                                              ; preds = %308, %375
  %385 = phi i32 [ %383, %375 ], [ %309, %308 ]
  %386 = phi %"struct.std::__1::pair.1167"* [ %317, %375 ], [ %7, %308 ]
  %387 = ptrtoint %"struct.std::__1::pair.1167"* %25 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %25, i64 1
  %389 = icmp ult %"struct.std::__1::pair.1167"* %388, %386
  br i1 %389, label %390, label %424

390:                                              ; preds = %384, %413
  %391 = phi %"struct.std::__1::pair.1167"* [ %423, %413 ], [ %222, %384 ]
  %392 = phi i32 [ %421, %413 ], [ %385, %384 ]
  %393 = phi %"struct.std::__1::pair.1167"* [ %402, %413 ], [ %388, %384 ]
  %394 = phi %"struct.std::__1::pair.1167"* [ %407, %413 ], [ %386, %384 ]
  %395 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %391, i64 0, i32 0
  %396 = load i64, i64* %395, align 8
  br label %397

397:                                              ; preds = %397, %390
  %398 = phi %"struct.std::__1::pair.1167"* [ %393, %390 ], [ %402, %397 ]
  %399 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %398, i64 0, i32 0
  %400 = load i64, i64* %399, align 8
  %401 = icmp ult i64 %400, %396
  %402 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %398, i64 1
  br i1 %401, label %397, label %403

403:                                              ; preds = %397
  %404 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %398, i64 0, i32 0
  br label %405

405:                                              ; preds = %403, %405
  %406 = phi %"struct.std::__1::pair.1167"* [ %407, %405 ], [ %394, %403 ]
  %407 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %406, i64 -1
  %408 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %407, i64 0, i32 0
  %409 = load i64, i64* %408, align 8
  %410 = icmp ult i64 %409, %396
  br i1 %410, label %411, label %405

411:                                              ; preds = %405
  %412 = icmp ugt %"struct.std::__1::pair.1167"* %398, %407
  br i1 %412, label %424, label %413

413:                                              ; preds = %411
  %414 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %407, i64 0, i32 0
  store i64 %409, i64* %404, align 8
  store i64 %400, i64* %414, align 8
  %415 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %398, i64 0, i32 1
  %416 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %406, i64 -1, i32 1
  %417 = bitcast %"class.v8::internal::Page"** %415 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = bitcast %"class.v8::internal::Page"** %416 to i64*
  %420 = load i64, i64* %419, align 8
  store i64 %420, i64* %417, align 8
  store i64 %418, i64* %419, align 8
  %421 = add i32 %392, 1
  %422 = icmp eq %"struct.std::__1::pair.1167"* %391, %398
  %423 = select i1 %422, %"struct.std::__1::pair.1167"* %407, %"struct.std::__1::pair.1167"* %391
  br label %390

424:                                              ; preds = %411, %384
  %425 = phi %"struct.std::__1::pair.1167"* [ %222, %384 ], [ %391, %411 ]
  %426 = phi i32 [ %385, %384 ], [ %392, %411 ]
  %427 = phi %"struct.std::__1::pair.1167"* [ %388, %384 ], [ %398, %411 ]
  %428 = icmp eq %"struct.std::__1::pair.1167"* %427, %425
  br i1 %428, label %443, label %429

429:                                              ; preds = %424
  %430 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %425, i64 0, i32 0
  %431 = load i64, i64* %430, align 8
  %432 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %427, i64 0, i32 0
  %433 = load i64, i64* %432, align 8
  %434 = icmp ult i64 %431, %433
  br i1 %434, label %435, label %443

435:                                              ; preds = %429
  store i64 %431, i64* %432, align 8
  store i64 %433, i64* %430, align 8
  %436 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %427, i64 0, i32 1
  %437 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %425, i64 0, i32 1
  %438 = bitcast %"class.v8::internal::Page"** %436 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.v8::internal::Page"** %437 to i64*
  %441 = load i64, i64* %440, align 8
  store i64 %441, i64* %438, align 8
  store i64 %439, i64* %440, align 8
  %442 = add i32 %426, 1
  br label %443

443:                                              ; preds = %424, %435, %429
  %444 = phi i32 [ %442, %435 ], [ %426, %429 ], [ %426, %424 ]
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %453

446:                                              ; preds = %443
  %447 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEbT0_SB_T_"(%"struct.std::__1::pair.1167"* %25, %"struct.std::__1::pair.1167"* %427)
  %448 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %427, i64 1
  %449 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEbT0_SB_T_"(%"struct.std::__1::pair.1167"* %448, %"struct.std::__1::pair.1167"* %4)
  br i1 %449, label %450, label %452

450:                                              ; preds = %446
  br i1 %447, label %464, label %451

451:                                              ; preds = %450, %462
  br label %3

452:                                              ; preds = %446
  br i1 %447, label %460, label %453

453:                                              ; preds = %452, %443
  %454 = ptrtoint %"struct.std::__1::pair.1167"* %427 to i64
  %455 = sub i64 %454, %387
  %456 = sub i64 %21, %454
  %457 = icmp slt i64 %455, %456
  br i1 %457, label %458, label %462

458:                                              ; preds = %453
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEvT0_SB_T_"(%"struct.std::__1::pair.1167"* %25, %"struct.std::__1::pair.1167"* %427)
  %459 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %427, i64 1
  br label %460

460:                                              ; preds = %458, %452
  %461 = phi %"struct.std::__1::pair.1167"* [ %448, %452 ], [ %459, %458 ]
  br label %22

462:                                              ; preds = %453
  %463 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %427, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEvT0_SB_T_"(%"struct.std::__1::pair.1167"* %463, %"struct.std::__1::pair.1167"* %4)
  br label %451

464:                                              ; preds = %450, %340, %24, %24, %323, %337, %214, %179, %130, %123, %115, %104, %94, %84, %75, %68, %62, %52, %51, %29, %35, %89
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* nocapture, %"struct.std::__1::pair.1167"* nocapture, %"struct.std::__1::pair.1167"* nocapture, %"struct.std::__1::pair.1167"* nocapture) unnamed_addr #10 {
  %5 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  %10 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %2, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %6
  br i1 %9, label %29, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %52

14:                                               ; preds = %13
  store i64 %11, i64* %5, align 8
  store i64 %6, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %2, i64 0, i32 1
  %17 = bitcast %"class.v8::internal::Page"** %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::Page"** %16 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  %21 = load i64, i64* %5, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %14
  store i64 %21, i64* %7, align 8
  store i64 %22, i64* %5, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %26 = bitcast %"class.v8::internal::Page"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %17, align 8
  store i64 %28, i64* %26, align 8
  store i64 %27, i64* %17, align 8
  br label %52

29:                                               ; preds = %4
  br i1 %12, label %30, label %37

30:                                               ; preds = %29
  store i64 %11, i64* %7, align 8
  store i64 %8, i64* %10, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %2, i64 0, i32 1
  %33 = bitcast %"class.v8::internal::Page"** %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.v8::internal::Page"** %32 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  store i64 %34, i64* %35, align 8
  br label %52

37:                                               ; preds = %29
  store i64 %6, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 0, i32 1
  %40 = bitcast %"class.v8::internal::Page"** %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.v8::internal::Page"** %39 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 %41, i64* %42, align 8
  %44 = load i64, i64* %10, align 8
  %45 = load i64, i64* %5, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %37
  store i64 %44, i64* %5, align 8
  store i64 %45, i64* %10, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %2, i64 0, i32 1
  %49 = load i64, i64* %42, align 8
  %50 = bitcast %"class.v8::internal::Page"** %48 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %42, align 8
  store i64 %49, i64* %50, align 8
  br label %52

52:                                               ; preds = %13, %14, %24, %30, %37, %47
  %53 = phi i32 [ 1, %30 ], [ 0, %13 ], [ 2, %24 ], [ 1, %14 ], [ 2, %47 ], [ 1, %37 ]
  %54 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %3, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %10, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %58, label %84

58:                                               ; preds = %52
  store i64 %55, i64* %10, align 8
  store i64 %56, i64* %54, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %2, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %3, i64 0, i32 1
  %61 = bitcast %"class.v8::internal::Page"** %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::Page"** %60 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %61, align 8
  store i64 %62, i64* %63, align 8
  %65 = add nuw nsw i32 %53, 1
  %66 = load i64, i64* %10, align 8
  %67 = load i64, i64* %5, align 8
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %58
  store i64 %66, i64* %5, align 8
  store i64 %67, i64* %10, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 0, i32 1
  %71 = bitcast %"class.v8::internal::Page"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %61, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %61, align 8
  %74 = add nuw nsw i32 %53, 2
  %75 = load i64, i64* %5, align 8
  %76 = load i64, i64* %7, align 8
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %78, label %84

78:                                               ; preds = %69
  store i64 %75, i64* %7, align 8
  store i64 %76, i64* %5, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %80 = bitcast %"class.v8::internal::Page"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = load i64, i64* %71, align 8
  store i64 %82, i64* %80, align 8
  store i64 %81, i64* %71, align 8
  %83 = add nuw nsw i32 %53, 3
  br label %84

84:                                               ; preds = %58, %78, %69, %52
  %85 = phi i32 [ %83, %78 ], [ %74, %69 ], [ %65, %58 ], [ %53, %52 ]
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEbT0_SB_T_"(%"struct.std::__1::pair.1167"*, %"struct.std::__1::pair.1167"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.std::__1::pair.1167"* %1 to i64
  %4 = ptrtoint %"struct.std::__1::pair.1167"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %112 [
    i64 0, label %203
    i64 1, label %203
    i64 2, label %7
    i64 3, label %20
    i64 4, label %67
    i64 5, label %72
  ]

7:                                                ; preds = %2
  %8 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %203

13:                                               ; preds = %7
  store i64 %9, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 1
  %16 = bitcast %"class.v8::internal::Page"** %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8::internal::Page"** %15 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  br label %203

20:                                               ; preds = %2
  %21 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %22, %24
  %26 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %22
  br i1 %25, label %45, label %29

29:                                               ; preds = %20
  br i1 %28, label %30, label %203

30:                                               ; preds = %29
  store i64 %27, i64* %21, align 8
  store i64 %22, i64* %26, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 1
  %33 = bitcast %"class.v8::internal::Page"** %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.v8::internal::Page"** %32 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  store i64 %34, i64* %35, align 8
  %37 = load i64, i64* %21, align 8
  %38 = load i64, i64* %23, align 8
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %40, label %203

40:                                               ; preds = %30
  store i64 %37, i64* %23, align 8
  store i64 %38, i64* %21, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %42 = bitcast %"class.v8::internal::Page"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %33, align 8
  store i64 %44, i64* %42, align 8
  store i64 %43, i64* %33, align 8
  br label %203

45:                                               ; preds = %20
  br i1 %28, label %46, label %53

46:                                               ; preds = %45
  store i64 %27, i64* %23, align 8
  store i64 %24, i64* %26, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 1
  %49 = bitcast %"class.v8::internal::Page"** %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.v8::internal::Page"** %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  store i64 %50, i64* %51, align 8
  br label %203

53:                                               ; preds = %45
  store i64 %22, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 1
  %56 = bitcast %"class.v8::internal::Page"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::Page"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = load i64, i64* %26, align 8
  %61 = icmp ult i64 %60, %24
  br i1 %61, label %62, label %203

62:                                               ; preds = %53
  store i64 %60, i64* %21, align 8
  store i64 %24, i64* %26, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 1
  %64 = load i64, i64* %58, align 8
  %65 = bitcast %"class.v8::internal::Page"** %63 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %58, align 8
  store i64 %64, i64* %65, align 8
  br label %203

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2
  %70 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1
  %71 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* %0, %"struct.std::__1::pair.1167"* %68, %"struct.std::__1::pair.1167"* %69, %"struct.std::__1::pair.1167"* %70)
  br label %203

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2
  %75 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 3
  %76 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2v88internal8MapSpace12SortFreeListEvE3$_1PNS_4pairImPNS2_4PageEEEEEjT0_SB_SB_SB_T_"(%"struct.std::__1::pair.1167"* %0, %"struct.std::__1::pair.1167"* %73, %"struct.std::__1::pair.1167"* %74, %"struct.std::__1::pair.1167"* %75) #12
  %77 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %75, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %78, %80
  br i1 %81, label %82, label %203

82:                                               ; preds = %72
  store i64 %78, i64* %79, align 8
  store i64 %80, i64* %77, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 3, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %1, i64 -1, i32 1
  %85 = bitcast %"class.v8::internal::Page"** %83 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.v8::internal::Page"** %84 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %85, align 8
  store i64 %86, i64* %87, align 8
  %89 = load i64, i64* %79, align 8
  %90 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %74, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %93, label %203

93:                                               ; preds = %82
  store i64 %89, i64* %90, align 8
  store i64 %91, i64* %79, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2, i32 1
  %95 = bitcast %"class.v8::internal::Page"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* %85, align 8
  store i64 %97, i64* %95, align 8
  store i64 %96, i64* %85, align 8
  %98 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %73, i64 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %89, %99
  br i1 %100, label %101, label %203

101:                                              ; preds = %93
  store i64 %89, i64* %98, align 8
  store i64 %99, i64* %90, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 1
  %103 = bitcast %"class.v8::internal::Page"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %97, i64* %103, align 8
  store i64 %104, i64* %95, align 8
  %105 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp ult i64 %89, %106
  br i1 %107, label %108, label %203

108:                                              ; preds = %101
  store i64 %89, i64* %105, align 8
  store i64 %106, i64* %98, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %110 = bitcast %"class.v8::internal::Page"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  store i64 %97, i64* %110, align 8
  store i64 %111, i64* %103, align 8
  br label %203

112:                                              ; preds = %2
  %113 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2
  %114 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %115, %117
  %119 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %113, i64 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = icmp ult i64 %120, %115
  br i1 %118, label %135, label %122

122:                                              ; preds = %112
  br i1 %121, label %123, label %155

123:                                              ; preds = %122
  store i64 %120, i64* %114, align 8
  store i64 %115, i64* %119, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2, i32 1
  %126 = bitcast %"class.v8::internal::Page"** %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::Page"** %125 to i64*
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %126, align 8
  store i64 %127, i64* %128, align 8
  %130 = icmp ult i64 %120, %117
  br i1 %130, label %131, label %155

131:                                              ; preds = %123
  store i64 %120, i64* %116, align 8
  store i64 %117, i64* %114, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %133 = bitcast %"class.v8::internal::Page"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  store i64 %129, i64* %133, align 8
  store i64 %134, i64* %126, align 8
  br label %155

135:                                              ; preds = %112
  br i1 %121, label %136, label %143

136:                                              ; preds = %135
  store i64 %120, i64* %116, align 8
  store i64 %117, i64* %119, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %138 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2, i32 1
  %139 = bitcast %"class.v8::internal::Page"** %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::Page"** %138 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %139, align 8
  store i64 %140, i64* %141, align 8
  br label %155

143:                                              ; preds = %135
  store i64 %115, i64* %116, align 8
  store i64 %117, i64* %114, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 0, i32 1
  %145 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 1, i32 1
  %146 = bitcast %"class.v8::internal::Page"** %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::Page"** %145 to i64*
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* %146, align 8
  store i64 %147, i64* %148, align 8
  %150 = icmp ult i64 %120, %117
  br i1 %150, label %151, label %155

151:                                              ; preds = %143
  store i64 %120, i64* %114, align 8
  store i64 %117, i64* %119, align 8
  %152 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 2, i32 1
  %153 = bitcast %"class.v8::internal::Page"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %148, align 8
  store i64 %147, i64* %153, align 8
  br label %155

155:                                              ; preds = %122, %123, %131, %136, %143, %151
  %156 = phi i64 [ %120, %122 ], [ %115, %123 ], [ %115, %131 ], [ %117, %136 ], [ %120, %143 ], [ %117, %151 ]
  %157 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %0, i64 3
  %158 = icmp eq %"struct.std::__1::pair.1167"* %157, %1
  br i1 %158, label %203, label %159

159:                                              ; preds = %155, %197
  %160 = phi i64 [ %199, %197 ], [ %156, %155 ]
  %161 = phi %"struct.std::__1::pair.1167"* [ %195, %197 ], [ %157, %155 ]
  %162 = phi i32 [ %194, %197 ], [ 0, %155 ]
  %163 = phi %"struct.std::__1::pair.1167"* [ %161, %197 ], [ %113, %155 ]
  %164 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %161, i64 0, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = icmp ult i64 %165, %160
  br i1 %166, label %167, label %193

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %161, i64 0, i32 1
  %169 = bitcast %"class.v8::internal::Page"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  br label %171

171:                                              ; preds = %182, %167
  %172 = phi i64 [ %160, %167 ], [ %185, %182 ]
  %173 = phi %"struct.std::__1::pair.1167"* [ %161, %167 ], [ %174, %182 ]
  %174 = phi %"struct.std::__1::pair.1167"* [ %163, %167 ], [ %183, %182 ]
  %175 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %173, i64 0, i32 0
  store i64 %172, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %174, i64 0, i32 1
  %177 = bitcast %"class.v8::internal::Page"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %173, i64 0, i32 1
  %180 = bitcast %"class.v8::internal::Page"** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = icmp eq %"struct.std::__1::pair.1167"* %174, %0
  br i1 %181, label %187, label %182

182:                                              ; preds = %171
  %183 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %174, i64 -1
  %184 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %183, i64 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = icmp ult i64 %165, %185
  br i1 %186, label %171, label %187

187:                                              ; preds = %171, %182
  %188 = phi %"struct.std::__1::pair.1167"* [ %0, %171 ], [ %174, %182 ]
  %189 = bitcast %"class.v8::internal::Page"** %176 to i64*
  %190 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %188, i64 0, i32 0
  store i64 %165, i64* %190, align 8
  store i64 %170, i64* %189, align 8
  %191 = add i32 %162, 1
  %192 = icmp eq i32 %191, 8
  br i1 %192, label %200, label %193

193:                                              ; preds = %187, %159
  %194 = phi i32 [ %191, %187 ], [ %162, %159 ]
  %195 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %161, i64 1
  %196 = icmp eq %"struct.std::__1::pair.1167"* %195, %1
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = getelementptr %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %161, i64 0, i32 0
  %199 = load i64, i64* %198, align 8
  br label %159

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"struct.std::__1::pair.1167", %"struct.std::__1::pair.1167"* %161, i64 1
  %202 = icmp eq %"struct.std::__1::pair.1167"* %201, %1
  br label %203

203:                                              ; preds = %193, %200, %155, %108, %101, %93, %82, %72, %62, %53, %46, %40, %30, %29, %7, %13, %2, %2, %67
  %204 = phi i1 [ true, %67 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %7 ], [ true, %29 ], [ true, %30 ], [ true, %40 ], [ true, %46 ], [ true, %53 ], [ true, %62 ], [ true, %72 ], [ true, %82 ], [ true, %93 ], [ true, %101 ], [ true, %108 ], [ true, %155 ], [ %202, %200 ], [ true, %193 ]
  ret i1 %204
}

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2v88internal9PageRange5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZN2v88internal9PageRange5beginEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v88internal9PageRange5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal9PageRange5beginEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2v88internal9PageRange3endEv: argument 0"}
!11 = distinct !{!11, !"_ZN2v88internal9PageRange3endEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!14 = distinct !{!14, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN2v88internal10PagedSpace5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal10PagedSpace5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!22 = !{!"branch_weights", i32 1, i32 2000}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN2v88internal9PageRange3endEv: argument 0"}
!25 = distinct !{!25, !"_ZN2v88internal9PageRange3endEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!28 = distinct !{!28, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!29 = !{i64 0, i64 65}
