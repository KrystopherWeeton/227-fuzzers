; ModuleID = '../../url/url_parse_file.cc'
source_filename = "../../url/url_parse_file.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url12ParseFileURLEPKciPNS_6ParsedE(i8*, i32, %"struct.url::Parsed"*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 4, i32 1
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7
  %12 = bitcast %"struct.url::Component"* %10 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %12, align 4
  %13 = icmp sgt i32 %1, 0
  br i1 %13, label %14, label %75

14:                                               ; preds = %3
  %15 = load i8, i8* %0, align 1
  %16 = icmp ult i8 %15, 33
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = sext i32 %1 to i64
  %19 = add nsw i64 %18, -1
  br label %24

20:                                               ; preds = %24
  %21 = getelementptr inbounds i8, i8* %0, i64 %26
  %22 = load i8, i8* %21, align 1
  %23 = icmp ult i8 %22, 33
  br i1 %23, label %24, label %30

24:                                               ; preds = %20, %17
  %25 = phi i64 [ 0, %17 ], [ %26, %20 ]
  %26 = add nuw nsw i64 %25, 1
  %27 = icmp eq i64 %25, %19
  br i1 %27, label %28, label %20

28:                                               ; preds = %24
  %29 = trunc i64 %26 to i32
  br label %32

30:                                               ; preds = %20
  %31 = trunc i64 %26 to i32
  br label %32

32:                                               ; preds = %30, %28, %14
  %33 = phi i32 [ %29, %28 ], [ 0, %14 ], [ %31, %30 ]
  %34 = icmp slt i32 %33, %1
  br i1 %34, label %35, label %55

35:                                               ; preds = %32
  %36 = sext i32 %1 to i64
  %37 = add nsw i64 %36, -1
  %38 = getelementptr inbounds i8, i8* %0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp ult i8 %39, 33
  br i1 %40, label %41, label %55

41:                                               ; preds = %35
  %42 = sext i32 %33 to i64
  br label %48

43:                                               ; preds = %48
  %44 = add nsw i64 %49, -1
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp ult i8 %46, 33
  br i1 %47, label %48, label %53

48:                                               ; preds = %43, %41
  %49 = phi i64 [ %37, %41 ], [ %44, %43 ]
  %50 = icmp sgt i64 %49, %42
  br i1 %50, label %43, label %51

51:                                               ; preds = %48
  %52 = trunc i64 %49 to i32
  br label %55

53:                                               ; preds = %43
  %54 = trunc i64 %49 to i32
  br label %55

55:                                               ; preds = %53, %51, %35, %32
  %56 = phi i32 [ %1, %32 ], [ %52, %51 ], [ %1, %35 ], [ %54, %53 ]
  %57 = icmp sgt i32 %56, %33
  br i1 %57, label %58, label %75

58:                                               ; preds = %55
  %59 = sext i32 %33 to i64
  %60 = sub i32 %56, %33
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %68, %58
  %63 = phi i64 [ 0, %58 ], [ %69, %68 ]
  %64 = phi i64 [ %59, %58 ], [ %70, %68 ]
  %65 = getelementptr inbounds i8, i8* %0, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i16
  switch i16 %67, label %72 [
    i16 92, label %68
    i16 47, label %68
  ]

68:                                               ; preds = %62, %62
  %69 = add nuw nsw i64 %63, 1
  %70 = add nsw i64 %64, 1
  %71 = icmp eq i64 %69, %61
  br i1 %71, label %91, label %62

72:                                               ; preds = %62
  %73 = trunc i64 %63 to i32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %72, %55, %3
  %76 = phi i32 [ %33, %72 ], [ %33, %55 ], [ 0, %3 ]
  %77 = phi i32 [ %56, %72 ], [ %56, %55 ], [ %1, %3 ]
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  %80 = sub nsw i32 %77, %76
  %81 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  %82 = tail call zeroext i1 @_ZN3url13ExtractSchemeEPKciPNS_9ComponentE(i8* %79, i32 %80, %"struct.url::Component"* %81) #3
  br i1 %82, label %83, label %91

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, %76
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %86, 1
  %90 = add i32 %89, %88
  br label %96

91:                                               ; preds = %68, %75, %72
  %92 = phi i32 [ %56, %72 ], [ %77, %75 ], [ %56, %68 ]
  %93 = phi i32 [ %33, %72 ], [ %76, %75 ], [ %33, %68 ]
  %94 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %95, align 4
  br label %96

96:                                               ; preds = %91, %83
  %97 = phi i32 [ %92, %91 ], [ %77, %83 ]
  %98 = phi i32 [ %93, %91 ], [ %90, %83 ]
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %100, label %105

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %104, align 4
  br label %207

105:                                              ; preds = %96
  %106 = icmp sgt i32 %97, %98
  br i1 %106, label %107, label %195

107:                                              ; preds = %105
  %108 = sext i32 %98 to i64
  %109 = sub i32 %97, %98
  %110 = zext i32 %109 to i64
  br label %111

111:                                              ; preds = %118, %107
  %112 = phi i64 [ 0, %107 ], [ %119, %118 ]
  %113 = phi i64 [ %108, %107 ], [ %121, %118 ]
  %114 = phi i32 [ 0, %107 ], [ %120, %118 ]
  %115 = getelementptr inbounds i8, i8* %0, i64 %113
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i16
  switch i16 %117, label %123 [
    i16 92, label %118
    i16 47, label %118
  ]

118:                                              ; preds = %111, %111
  %119 = add nuw nsw i64 %112, 1
  %120 = add nuw nsw i32 %114, 1
  %121 = add nsw i64 %113, 1
  %122 = icmp eq i64 %119, %110
  br i1 %122, label %125, label %111

123:                                              ; preds = %111
  %124 = trunc i64 %112 to i32
  br label %125

125:                                              ; preds = %118, %123
  %126 = phi i32 [ %124, %123 ], [ %120, %118 ]
  %127 = add nsw i32 %126, %98
  %128 = icmp eq i32 %126, 2
  br i1 %128, label %129, label %191

129:                                              ; preds = %125
  %130 = bitcast i64* %4 to %"struct.url::Component"*
  %131 = icmp sgt i32 %97, %127
  br i1 %131, label %132, label %146

132:                                              ; preds = %129
  %133 = sext i32 %127 to i64
  br label %134

134:                                              ; preds = %139, %132
  %135 = phi i64 [ %133, %132 ], [ %140, %139 ]
  %136 = phi i32 [ %127, %132 ], [ %141, %139 ]
  %137 = getelementptr inbounds i8, i8* %0, i64 %135
  %138 = load i8, i8* %137, align 1
  switch i8 %138, label %139 [
    i8 92, label %144
    i8 47, label %144
  ]

139:                                              ; preds = %134
  %140 = add nsw i64 %135, 1
  %141 = add nsw i32 %136, 1
  %142 = trunc i64 %140 to i32
  %143 = icmp eq i32 %97, %142
  br i1 %143, label %146, label %134

144:                                              ; preds = %134, %134
  %145 = trunc i64 %135 to i32
  br label %146

146:                                              ; preds = %139, %144, %129
  %147 = phi i32 [ %127, %129 ], [ %145, %144 ], [ %141, %139 ]
  %148 = icmp eq i32 %97, %147
  br i1 %148, label %149, label %165

149:                                              ; preds = %146
  %150 = sub nsw i32 %97, %127
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3
  br i1 %151, label %159, label %153

153:                                              ; preds = %149
  %154 = bitcast %"struct.url::Component"* %152 to i64*
  %155 = zext i32 %150 to i64
  %156 = shl nuw i64 %155, 32
  %157 = zext i32 %127 to i64
  %158 = or i64 %156, %157
  store i64 %158, i64* %154, align 8
  br label %162

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %152, i64 0, i32 0
  store i32 0, i32* %160, align 4
  %161 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %161, align 4
  br label %162

162:                                              ; preds = %159, %153
  %163 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %163, align 4
  %164 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %164, align 4
  br label %207

165:                                              ; preds = %146
  %166 = icmp eq i32 %147, %127
  br i1 %166, label %175, label %167

167:                                              ; preds = %165
  %168 = sub nsw i32 %147, %127
  %169 = zext i32 %168 to i64
  %170 = shl nuw i64 %169, 32
  %171 = zext i32 %127 to i64
  %172 = or i64 %170, %171
  %173 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3
  %174 = bitcast %"struct.url::Component"* %173 to i64*
  store i64 %172, i64* %174, align 8
  br label %178

175:                                              ; preds = %165
  %176 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %177, align 4
  br label %178

178:                                              ; preds = %175, %167
  %179 = icmp sgt i32 %97, %147
  br i1 %179, label %180, label %188

180:                                              ; preds = %178
  %181 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #3
  %182 = sub nsw i32 %97, %147
  %183 = zext i32 %182 to i64
  %184 = shl nuw i64 %183, 32
  %185 = zext i32 %147 to i64
  %186 = or i64 %184, %185
  store i64 %186, i64* %4, align 8
  %187 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  call void @_ZN3url17ParsePathInternalEPKcRKNS_9ComponentEPS2_S5_S5_(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %130, %"struct.url::Component"* %187, %"struct.url::Component"* %10, %"struct.url::Component"* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #3
  br label %207

188:                                              ; preds = %178
  %189 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %190, align 4
  br label %207

191:                                              ; preds = %125
  %192 = icmp sgt i32 %126, 0
  %193 = add nsw i32 %127, -1
  %194 = select i1 %192, i32 %193, i32 %98
  br label %195

195:                                              ; preds = %191, %105
  %196 = phi i32 [ %98, %105 ], [ %194, %191 ]
  %197 = bitcast i64* %5 to %"struct.url::Component"*
  %198 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %199, align 4
  %200 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #3
  %201 = sub nsw i32 %97, %196
  %202 = zext i32 %201 to i64
  %203 = shl nuw i64 %202, 32
  %204 = zext i32 %196 to i64
  %205 = or i64 %203, %204
  store i64 %205, i64* %5, align 8
  %206 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  call void @_ZN3url17ParsePathInternalEPKcRKNS_9ComponentEPS2_S5_S5_(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %197, %"struct.url::Component"* %206, %"struct.url::Component"* %10, %"struct.url::Component"* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #3
  br label %207

207:                                              ; preds = %100, %162, %180, %188, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url12ParseFileURLEPKDsiPNS_6ParsedE(i16*, i32, %"struct.url::Parsed"*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 4, i32 1
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7
  %12 = bitcast %"struct.url::Component"* %10 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %12, align 4
  %13 = icmp sgt i32 %1, 0
  br i1 %13, label %14, label %74

14:                                               ; preds = %3
  %15 = load i16, i16* %0, align 2
  %16 = icmp ult i16 %15, 33
  br i1 %16, label %17, label %32

17:                                               ; preds = %14
  %18 = sext i32 %1 to i64
  %19 = add nsw i64 %18, -1
  br label %24

20:                                               ; preds = %24
  %21 = getelementptr inbounds i16, i16* %0, i64 %26
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %22, 33
  br i1 %23, label %24, label %30

24:                                               ; preds = %20, %17
  %25 = phi i64 [ 0, %17 ], [ %26, %20 ]
  %26 = add nuw nsw i64 %25, 1
  %27 = icmp eq i64 %25, %19
  br i1 %27, label %28, label %20

28:                                               ; preds = %24
  %29 = trunc i64 %26 to i32
  br label %32

30:                                               ; preds = %20
  %31 = trunc i64 %26 to i32
  br label %32

32:                                               ; preds = %30, %28, %14
  %33 = phi i32 [ %29, %28 ], [ 0, %14 ], [ %31, %30 ]
  %34 = icmp slt i32 %33, %1
  br i1 %34, label %35, label %55

35:                                               ; preds = %32
  %36 = sext i32 %1 to i64
  %37 = add nsw i64 %36, -1
  %38 = getelementptr inbounds i16, i16* %0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp ult i16 %39, 33
  br i1 %40, label %41, label %55

41:                                               ; preds = %35
  %42 = sext i32 %33 to i64
  br label %48

43:                                               ; preds = %48
  %44 = add nsw i64 %49, -1
  %45 = getelementptr inbounds i16, i16* %0, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = icmp ult i16 %46, 33
  br i1 %47, label %48, label %53

48:                                               ; preds = %43, %41
  %49 = phi i64 [ %37, %41 ], [ %44, %43 ]
  %50 = icmp sgt i64 %49, %42
  br i1 %50, label %43, label %51

51:                                               ; preds = %48
  %52 = trunc i64 %49 to i32
  br label %55

53:                                               ; preds = %43
  %54 = trunc i64 %49 to i32
  br label %55

55:                                               ; preds = %53, %51, %35, %32
  %56 = phi i32 [ %1, %32 ], [ %52, %51 ], [ %1, %35 ], [ %54, %53 ]
  %57 = icmp sgt i32 %56, %33
  br i1 %57, label %58, label %74

58:                                               ; preds = %55
  %59 = sext i32 %33 to i64
  %60 = sub i32 %56, %33
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %67, %58
  %63 = phi i64 [ 0, %58 ], [ %68, %67 ]
  %64 = phi i64 [ %59, %58 ], [ %69, %67 ]
  %65 = getelementptr inbounds i16, i16* %0, i64 %64
  %66 = load i16, i16* %65, align 2
  switch i16 %66, label %71 [
    i16 92, label %67
    i16 47, label %67
  ]

67:                                               ; preds = %62, %62
  %68 = add nuw nsw i64 %63, 1
  %69 = add nsw i64 %64, 1
  %70 = icmp eq i64 %68, %61
  br i1 %70, label %90, label %62

71:                                               ; preds = %62
  %72 = trunc i64 %63 to i32
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %71, %55, %3
  %75 = phi i32 [ %33, %71 ], [ %33, %55 ], [ 0, %3 ]
  %76 = phi i32 [ %56, %71 ], [ %56, %55 ], [ %1, %3 ]
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds i16, i16* %0, i64 %77
  %79 = sub nsw i32 %76, %75
  %80 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  %81 = tail call zeroext i1 @_ZN3url13ExtractSchemeEPKDsiPNS_9ComponentE(i16* %78, i32 %79, %"struct.url::Component"* %80) #3
  br i1 %81, label %82, label %90

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = add nsw i32 %84, %75
  store i32 %85, i32* %83, align 8
  %86 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %85, 1
  %89 = add i32 %88, %87
  br label %95

90:                                               ; preds = %67, %74, %71
  %91 = phi i32 [ %56, %71 ], [ %76, %74 ], [ %56, %67 ]
  %92 = phi i32 [ %33, %71 ], [ %75, %74 ], [ %33, %67 ]
  %93 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %94, align 4
  br label %95

95:                                               ; preds = %90, %82
  %96 = phi i32 [ %91, %90 ], [ %76, %82 ]
  %97 = phi i32 [ %92, %90 ], [ %89, %82 ]
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %103, align 4
  br label %205

104:                                              ; preds = %95
  %105 = icmp sgt i32 %96, %97
  br i1 %105, label %106, label %193

106:                                              ; preds = %104
  %107 = sext i32 %97 to i64
  %108 = sub i32 %96, %97
  %109 = zext i32 %108 to i64
  br label %110

110:                                              ; preds = %116, %106
  %111 = phi i64 [ 0, %106 ], [ %117, %116 ]
  %112 = phi i64 [ %107, %106 ], [ %119, %116 ]
  %113 = phi i32 [ 0, %106 ], [ %118, %116 ]
  %114 = getelementptr inbounds i16, i16* %0, i64 %112
  %115 = load i16, i16* %114, align 2
  switch i16 %115, label %121 [
    i16 92, label %116
    i16 47, label %116
  ]

116:                                              ; preds = %110, %110
  %117 = add nuw nsw i64 %111, 1
  %118 = add nuw nsw i32 %113, 1
  %119 = add nsw i64 %112, 1
  %120 = icmp eq i64 %117, %109
  br i1 %120, label %123, label %110

121:                                              ; preds = %110
  %122 = trunc i64 %111 to i32
  br label %123

123:                                              ; preds = %116, %121
  %124 = phi i32 [ %122, %121 ], [ %118, %116 ]
  %125 = add nsw i32 %124, %97
  %126 = icmp eq i32 %124, 2
  br i1 %126, label %127, label %189

127:                                              ; preds = %123
  %128 = bitcast i64* %4 to %"struct.url::Component"*
  %129 = icmp sgt i32 %96, %125
  br i1 %129, label %130, label %144

130:                                              ; preds = %127
  %131 = sext i32 %125 to i64
  br label %132

132:                                              ; preds = %137, %130
  %133 = phi i64 [ %131, %130 ], [ %138, %137 ]
  %134 = phi i32 [ %125, %130 ], [ %139, %137 ]
  %135 = getelementptr inbounds i16, i16* %0, i64 %133
  %136 = load i16, i16* %135, align 2
  switch i16 %136, label %137 [
    i16 92, label %142
    i16 47, label %142
  ]

137:                                              ; preds = %132
  %138 = add nsw i64 %133, 1
  %139 = add nsw i32 %134, 1
  %140 = trunc i64 %138 to i32
  %141 = icmp eq i32 %96, %140
  br i1 %141, label %144, label %132

142:                                              ; preds = %132, %132
  %143 = trunc i64 %133 to i32
  br label %144

144:                                              ; preds = %137, %142, %127
  %145 = phi i32 [ %125, %127 ], [ %143, %142 ], [ %139, %137 ]
  %146 = icmp eq i32 %96, %145
  br i1 %146, label %147, label %163

147:                                              ; preds = %144
  %148 = sub nsw i32 %96, %125
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3
  br i1 %149, label %157, label %151

151:                                              ; preds = %147
  %152 = bitcast %"struct.url::Component"* %150 to i64*
  %153 = zext i32 %148 to i64
  %154 = shl nuw i64 %153, 32
  %155 = zext i32 %125 to i64
  %156 = or i64 %154, %155
  store i64 %156, i64* %152, align 8
  br label %160

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %150, i64 0, i32 0
  store i32 0, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %159, align 4
  br label %160

160:                                              ; preds = %157, %151
  %161 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %162, align 4
  br label %205

163:                                              ; preds = %144
  %164 = icmp eq i32 %145, %125
  br i1 %164, label %173, label %165

165:                                              ; preds = %163
  %166 = sub nsw i32 %145, %125
  %167 = zext i32 %166 to i64
  %168 = shl nuw i64 %167, 32
  %169 = zext i32 %125 to i64
  %170 = or i64 %168, %169
  %171 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3
  %172 = bitcast %"struct.url::Component"* %171 to i64*
  store i64 %170, i64* %172, align 8
  br label %176

173:                                              ; preds = %163
  %174 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %175, align 4
  br label %176

176:                                              ; preds = %173, %165
  %177 = icmp sgt i32 %96, %145
  br i1 %177, label %178, label %186

178:                                              ; preds = %176
  %179 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #3
  %180 = sub nsw i32 %96, %145
  %181 = zext i32 %180 to i64
  %182 = shl nuw i64 %181, 32
  %183 = zext i32 %145 to i64
  %184 = or i64 %182, %183
  store i64 %184, i64* %4, align 8
  %185 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  call void @_ZN3url17ParsePathInternalEPKDsRKNS_9ComponentEPS2_S5_S5_(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %128, %"struct.url::Component"* %185, %"struct.url::Component"* %10, %"struct.url::Component"* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #3
  br label %205

186:                                              ; preds = %176
  %187 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %188, align 4
  br label %205

189:                                              ; preds = %123
  %190 = icmp sgt i32 %124, 0
  %191 = add nsw i32 %125, -1
  %192 = select i1 %190, i32 %191, i32 %97
  br label %193

193:                                              ; preds = %189, %104
  %194 = phi i32 [ %97, %104 ], [ %192, %189 ]
  %195 = bitcast i64* %5 to %"struct.url::Component"*
  %196 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  store i32 0, i32* %196, align 4
  %197 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 1
  store i32 -1, i32* %197, align 4
  %198 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #3
  %199 = sub nsw i32 %96, %194
  %200 = zext i32 %199 to i64
  %201 = shl nuw i64 %200, 32
  %202 = zext i32 %194 to i64
  %203 = or i64 %201, %202
  store i64 %203, i64* %5, align 8
  %204 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  call void @_ZN3url17ParsePathInternalEPKDsRKNS_9ComponentEPS2_S5_S5_(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %195, %"struct.url::Component"* %204, %"struct.url::Component"* %10, %"struct.url::Component"* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #3
  br label %205

205:                                              ; preds = %99, %160, %178, %186, %193
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3url13ExtractSchemeEPKciPNS_9ComponentE(i8*, i32, %"struct.url::Component"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3url17ParsePathInternalEPKcRKNS_9ComponentEPS2_S5_S5_(i8*, %"struct.url::Component"* dereferenceable(8), %"struct.url::Component"*, %"struct.url::Component"*, %"struct.url::Component"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3url13ExtractSchemeEPKDsiPNS_9ComponentE(i16*, i32, %"struct.url::Component"*) local_unnamed_addr #2

declare void @_ZN3url17ParsePathInternalEPKDsRKNS_9ComponentEPS2_S5_S5_(i16*, %"struct.url::Component"* dereferenceable(8), %"struct.url::Component"*, %"struct.url::Component"*, %"struct.url::Component"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
