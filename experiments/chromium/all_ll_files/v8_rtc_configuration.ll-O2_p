; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_rtc_configuration.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_rtc_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.187", i32, [4 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.339", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.357", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.364", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.303", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__atomic_base.225" }
%"struct.std::__1::__atomic_base.225" = type { %"struct.std::__1::__cxx_atomic_impl.226" }
%"struct.std::__1::__cxx_atomic_impl.226" = type { %"struct.std::__1::__cxx_atomic_base_impl.227" }
%"struct.std::__1::__cxx_atomic_base_impl.227" = type { i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::Worklist.255"* }
%"class.blink::Worklist.255" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::Worklist.262"* }
%"class.blink::Worklist.262" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::Worklist.269"* }
%"class.blink::Worklist.269" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist.276"* }
%"class.blink::Worklist.276" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.223" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.283", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { i64 }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { float }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.306", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.315" }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.345" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.241"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.248"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.255"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.262"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.398" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.363 }
%class.scoped_refptr.363 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.406", i32, i32, %"class.blink::Persistent.408" }
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.408" = type { %"class.blink::PersistentBase.409" }
%"class.blink::PersistentBase.409" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.412" }
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type { %"class.blink::WeakMember.419", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::RTCConfiguration" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::String", %"class.blink::HeapVector", i8, i8, i8, i8, %"class.blink::HeapVector.11", %"class.WTF::String", %"class.WTF::String", i8, i8, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::RTCCertificate"* }
%"class.blink::RTCCertificate" = type { %"class.blink::ScriptWrappable", %"class.rtc::scoped_refptr" }
%"class.rtc::scoped_refptr" = type { %"class.rtc::RTCCertificate"* }
%"class.rtc::RTCCertificate" = type { %"class.rtc::RefCountedNonVirtual", %"class.std::__1::unique_ptr" }
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.rtc::SSLIdentity"* }
%"class.rtc::SSLIdentity" = type opaque
%"class.blink::HeapVector.11" = type { %"class.WTF::Vector.14" }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::Member.17"*, i32, i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::RTCIceServer"* }
%"class.blink::RTCIceServer" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.blink::StringOrStringSequence", %"class.WTF::String" }
%"class.blink::StringOrStringSequence" = type { i32, %"class.WTF::String", %"class.WTF::Vector.19" }
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21" }
%"class.WTF::VectorBufferBase.21" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.24" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.24" = type { %"class.v8::TracedReference.25" }
%"class.v8::TracedReference.25" = type { %"class.v8::BasicTracedReference.26" }
%"class.v8::BasicTracedReference.26" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i8* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.126", %"class.WTF::HashMap.126", %"class.WTF::HashMap.131", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.181", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.368", %"class.std::__1::unique_ptr.373", %"class.blink::Persistent.379", %"class.blink::Persistent.383", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.108", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", i32, i32 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.130" = type opaque
%"class.WTF::HashMap.131" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"struct.WTF::KeyValuePair.135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.135" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.144", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.139", i8* }
%"class.WTF::HashMap.139" = type { %"class.WTF::HashTable.140" }
%"class.WTF::HashTable.140" = type <{ %"struct.WTF::KeyValuePair.143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.143" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.144" = type { %"class.v8::PersistentValueMapBase.145" }
%"class.v8::PersistentValueMapBase.145" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.146", i8* }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.150"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.150" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.151" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.165", %"class.WTF::Vector.171", i8, i32 }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.WTF::Vector.157"* }
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.171" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.159", [32 x i8] }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.405, %"class.blink::Member.421", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.405 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.379" = type { %"class.blink::PersistentBase.380" }
%"class.blink::PersistentBase.380" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.383" = type { %"class.blink::PersistentBase.384" }
%"class.blink::PersistentBase.384" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.387", i64 }
%"class.blink::HeapVector.387" = type { %"class.WTF::Vector.390" }
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"struct.std::__1::pair.393"*, i32, i32 }
%"struct.std::__1::pair.393" = type { %"class.blink::UntracedMember", %"class.blink::Member.395" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.423" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.63", i32, i8, [3 x i8], %"class.blink::HeapVector.65", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.84", %"class.blink::Member.90", %"class.blink::Member.92", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.36" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.36" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.37" }
%"class.blink::HeapHashMap.37" = type { %"class.WTF::HashMap.40" }
%"class.WTF::HashMap.40" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { i8*, %"class.blink::Member.104" }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.106" }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.44, %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.blink::Member.57", i32, [4 x i8], %"class.WTF::HashSet.59", i32, i32 }
%class.scoped_refptr.44 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.65" = type { %"class.WTF::Vector.68" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.71" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.77", i32, i32 }
%"class.blink::HeapHashMap.77" = type { %"class.WTF::HashMap.80" }
%"class.WTF::HashMap.80" = type { %"class.WTF::HashTable.81" }
%"class.WTF::HashTable.81" = type <{ %"struct.WTF::KeyValuePair.83"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.83" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.27", %"class.v8::Local", %"class.v8::Local.100", %"class.v8::Local.100", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.27" = type { %"class.v8::Object"* }
%"class.v8::Local.100" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.467" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.475 }
%union.anon.475 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_14RTCCertificateEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_12RTCIceServerEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14RTCCertificateEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14RTCCertificateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12RTCIceServerEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12RTCIceServerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_14RTCCertificateEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_12RTCIceServerEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"balanced\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"max-compat\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"max-bundle\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"RTCBundlePolicy\00", align 1
@_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_0 = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [6 x i8] c"relay\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"RTCIceTransportPolicy\00", align 1
@_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_1 = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0)], align 16
@_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_2 = internal constant [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [10 x i8] c"negotiate\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"RTCRtcpMuxPolicy\00", align 1
@_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_3 = internal constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0)], align 16
@.str.11 = private unnamed_addr constant [7 x i8] c"plan-b\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"unified-plan\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"SdpSemantics\00", align 1
@_ZZN5blinkL29eternalV8RTCConfigurationKeysEPN2v87IsolateEE5kKeys = internal constant [15 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0)], align 16
@.str.14 = private unnamed_addr constant [13 x i8] c"bundlePolicy\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"certificates\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"encodedInsertableStreams\00", align 1
@.str.17 = private unnamed_addr constant [35 x i8] c"forceEncodedAudioInsertableStreams\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"forceEncodedVideoInsertableStreams\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"iceCandidatePoolSize\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"iceServers\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"iceTransportPolicy\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"iceTransports\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"offerExtmapAllowMixed\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"rtcAudioJitterBufferFastAccelerate\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"rtcAudioJitterBufferMaxPackets\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"rtcAudioJitterBufferMinDelayMs\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"rtcpMuxPolicy\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"sdpSemantics\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 15, i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN5blinkL29eternalV8RTCConfigurationKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase28is_rtc_unified_plan_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.30 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.31 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.32 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.35 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.36 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.38 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14RTCCertificateEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::RTCCertificate>, WTF::VectorTraits<blink::Member<blink::RTCCertificate> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink14RTCCertificate18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.39 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12RTCIceServerEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [165 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::RTCIceServer>, WTF::VectorTraits<blink::Member<blink::RTCIceServer> > >]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.41 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.43 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::RTCConfiguration"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = alloca %"class.blink::HeapVector.11", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::V8StringResource", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.blink::V8StringResource", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.blink::V8StringResource", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = icmp eq %"class.v8::Value"* %1, null
  br i1 %23, label %1724, label %24

24:                                               ; preds = %4
  %25 = bitcast %"class.v8::Value"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 3
  %28 = icmp eq i64 %27, 1
  br i1 %28, label %29, label %45

29:                                               ; preds = %24
  %30 = add i64 %26, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %26, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 67
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = add i64 %26, 23
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = ashr i32 %43, 1
  switch i32 %44, label %45 [
    i32 5, label %1724
    i32 3, label %1724
  ]

45:                                               ; preds = %40, %29, %24
  %46 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %1724

48:                                               ; preds = %45
  %49 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %50 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to %"class.blink::V8PerIsolateData"**
  %53 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %52, align 8
  %54 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %53, i8* bitcast ([15 x i8*]* @_ZZN5blinkL29eternalV8RTCConfigurationKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.423"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.423"*)) #8
  %55 = extractvalue { i64, %"class.v8::Eternal"* } %54, 1
  %56 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %56) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #8
  %57 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %58 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %57) #8
  %59 = bitcast %"class.v8::Eternal"* %55 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  %61 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %60) #8
  %62 = icmp eq %"class.v8::Value"* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %48
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #8
  br label %1723

69:                                               ; preds = %48
  %70 = bitcast %"class.v8::Value"* %61 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 1
  br i1 %73, label %74, label %91

74:                                               ; preds = %69
  %75 = add i64 %71, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = and i64 %71, -4294967296
  %79 = zext i32 %77 to i64
  %80 = or i64 %78, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load i16, i16* %82, align 2
  %84 = icmp eq i16 %83, 67
  br i1 %84, label %85, label %91

85:                                               ; preds = %74
  %86 = add i64 %71, 23
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, -2
  %90 = icmp eq i32 %89, 10
  br i1 %90, label %297, label %91

91:                                               ; preds = %74, %69, %85
  %92 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %92) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 152, i1 false)
  %93 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %61, %"class.v8::Value"** %93, align 8
  %94 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %97 = bitcast %"class.std::__1::unique_ptr.95"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %98, label %99, label %275

99:                                               ; preds = %91
  %100 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8
  %101 = load %"class.v8::Value"*, %"class.v8::Value"** %93, align 8
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %107, label %103, !prof !2

103:                                              ; preds = %99
  %104 = bitcast %"class.v8::Value"* %101 to %"class.v8::String"*
  %105 = load i32, i32* %94, align 8
  %106 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %104, i32 %105) #8
  br label %127

107:                                              ; preds = %99
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #8
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %115
  call void @llvm.trap() #8
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %103, %107, %110, %125
  %128 = phi %"class.WTF::StringImpl"* [ %106, %103 ], [ null, %107 ], [ %108, %110 ], [ %108, %125 ]
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %129, align 8
  %130 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #8
  %131 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #8
  br label %148

148:                                              ; preds = %127, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #8
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #8
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8
  br i1 %131, label %165, label %275

165:                                              ; preds = %164
  %166 = load %"class.v8::Value"*, %"class.v8::Value"** %93, align 8
  %167 = icmp eq %"class.v8::Value"* %166, null
  br i1 %167, label %168, label %192, !prof !2

168:                                              ; preds = %165
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 11
  br label %217

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %190

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i33
  %182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %181, i33 1) #8
  %183 = extractvalue { i33, i1 } %182, 1
  %184 = extractvalue { i33, i1 } %182, 0
  %185 = icmp slt i33 %184, 0
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %188, !prof !2

187:                                              ; preds = %178
  call void @llvm.trap() #8
  unreachable

188:                                              ; preds = %178
  %189 = trunc i33 %184 to i32
  store i32 %189, i32* %179, align 4
  br label %190

190:                                              ; preds = %173, %188
  %191 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 11
  br label %198

192:                                              ; preds = %165
  %193 = bitcast %"class.v8::Value"* %166 to %"class.v8::String"*
  %194 = load i32, i32* %94, align 8
  %195 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %193, i32 %194) #8
  %196 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 11
  %197 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %197, label %217, label %198

198:                                              ; preds = %190, %192
  %199 = phi %"class.WTF::String"* [ %191, %190 ], [ %196, %192 ]
  %200 = phi %"class.WTF::StringImpl"* [ %169, %190 ], [ %195, %192 ]
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #8
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !2

214:                                              ; preds = %205
  call void @llvm.trap() #8
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %217

217:                                              ; preds = %171, %215, %198, %192
  %218 = phi i1 [ false, %215 ], [ false, %198 ], [ true, %192 ], [ true, %171 ]
  %219 = phi %"class.WTF::String"* [ %199, %215 ], [ %199, %198 ], [ %196, %192 ], [ %172, %171 ]
  %220 = phi %"class.WTF::StringImpl"* [ %200, %215 ], [ %200, %198 ], [ null, %192 ], [ null, %171 ]
  %221 = ptrtoint %"class.WTF::StringImpl"* %220 to i64
  %222 = bitcast %"class.WTF::String"* %219 to i64*
  %223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %219, i64 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  store i64 %221, i64* %222, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #8
  br label %239

239:                                              ; preds = %217, %235, %238
  br i1 %218, label %253, label %240

240:                                              ; preds = %239
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #8
  br label %253

253:                                              ; preds = %239, %249, %252
  %254 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  store i8* null, i8** %254, align 8
  %256 = icmp eq i8* %255, null
  br i1 %256, label %258, label %257

257:                                              ; preds = %253
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %255) #8
  br label %258

258:                                              ; preds = %257, %253
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #8
  br label %274

274:                                              ; preds = %258, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %92) #8
  br label %297

275:                                              ; preds = %164, %91
  %276 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %277 = load i8*, i8** %276, align 8
  store i8* null, i8** %276, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %280, label %279

279:                                              ; preds = %275
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %277) #8
  br label %280

280:                                              ; preds = %279, %275
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #8
  br label %296

296:                                              ; preds = %280, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %92) #8
  br label %1723

297:                                              ; preds = %274, %85
  %298 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 1, i32 0
  %299 = bitcast %"class.v8::Name"** %298 to %"class.v8::Value"**
  %300 = load %"class.v8::Value"*, %"class.v8::Value"** %299, align 8
  %301 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %300) #8
  %302 = icmp eq %"class.v8::Value"* %301, null
  br i1 %302, label %303, label %309

303:                                              ; preds = %297
  %304 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %305 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %306 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %305, align 8
  %307 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %306, i64 5
  %308 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %307, align 8
  call void %308(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %304) #8
  br label %1723

309:                                              ; preds = %297
  %310 = bitcast %"class.v8::Value"* %301 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = and i64 %311, 3
  %313 = icmp eq i64 %312, 1
  br i1 %313, label %314, label %331

314:                                              ; preds = %309
  %315 = add i64 %311, -1
  %316 = inttoptr i64 %315 to i32*
  %317 = load i32, i32* %316, align 4
  %318 = and i64 %311, -4294967296
  %319 = zext i32 %317 to i64
  %320 = or i64 %318, %319
  %321 = add i64 %320, 7
  %322 = inttoptr i64 %321 to i16*
  %323 = load i16, i16* %322, align 2
  %324 = icmp eq i16 %323, 67
  br i1 %324, label %325, label %331

325:                                              ; preds = %314
  %326 = add i64 %311, 23
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, -2
  %330 = icmp eq i32 %329, 10
  br i1 %330, label %339, label %331

331:                                              ; preds = %314, %309, %325
  %332 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %332) #8
  %333 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_14RTCCertificateEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %9, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %301, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %334 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %335 = load i32, i32* %334, align 8
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %331
  call void @_ZN5blink16RTCConfiguration15setCertificatesERKNS_10HeapVectorINS_6MemberINS_14RTCCertificateEEELj0EEE(%"class.blink::RTCConfiguration"* %2, %"class.blink::HeapVector"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #8
  br label %339

338:                                              ; preds = %331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #8
  br label %1723

339:                                              ; preds = %337, %325
  %340 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 2, i32 0
  %341 = bitcast %"class.v8::Name"** %340 to %"class.v8::Value"**
  %342 = load %"class.v8::Value"*, %"class.v8::Value"** %341, align 8
  %343 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %342) #8
  %344 = icmp eq %"class.v8::Value"* %343, null
  br i1 %344, label %345, label %351

345:                                              ; preds = %339
  %346 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %347 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %348 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %348, i64 5
  %350 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %349, align 8
  call void %350(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %346) #8
  br label %1723

351:                                              ; preds = %339
  %352 = bitcast %"class.v8::Value"* %343 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = and i64 %353, 3
  %355 = icmp eq i64 %354, 1
  br i1 %355, label %356, label %373

356:                                              ; preds = %351
  %357 = add i64 %353, -1
  %358 = inttoptr i64 %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = and i64 %353, -4294967296
  %361 = zext i32 %359 to i64
  %362 = or i64 %360, %361
  %363 = add i64 %362, 7
  %364 = inttoptr i64 %363 to i16*
  %365 = load i16, i16* %364, align 2
  %366 = icmp eq i16 %365, 67
  br i1 %366, label %367, label %373

367:                                              ; preds = %356
  %368 = add i64 %353, 23
  %369 = inttoptr i64 %368 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = and i32 %370, -2
  %372 = icmp eq i32 %371, 10
  br i1 %372, label %389, label %373

373:                                              ; preds = %356, %351, %367
  %374 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %343) #8
  br i1 %374, label %375, label %378, !prof !3

375:                                              ; preds = %373
  %376 = bitcast %"class.v8::Value"* %343 to %"class.v8::Boolean"*
  %377 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %376) #8
  br label %380

378:                                              ; preds = %373
  %379 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %343, %"class.v8::Isolate"* %0) #8
  br label %380

380:                                              ; preds = %375, %378
  %381 = phi i1 [ %377, %375 ], [ %379, %378 ]
  %382 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %383 = load i32, i32* %382, align 8
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %1723

385:                                              ; preds = %380
  %386 = zext i1 %381 to i8
  %387 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 13
  store i8 %386, i8* %387, align 8
  %388 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 2
  store i8 1, i8* %388, align 1
  br label %389

389:                                              ; preds = %385, %367
  %390 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 5, i32 0
  %391 = bitcast %"class.v8::Name"** %390 to %"class.v8::Value"**
  %392 = load %"class.v8::Value"*, %"class.v8::Value"** %391, align 8
  %393 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %392) #8
  %394 = icmp eq %"class.v8::Value"* %393, null
  br i1 %394, label %395, label %401

395:                                              ; preds = %389
  %396 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %397 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %398 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %398, i64 5
  %400 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %399, align 8
  call void %400(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %396) #8
  br label %1723

401:                                              ; preds = %389
  %402 = bitcast %"class.v8::Value"* %393 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = and i64 %403, 3
  %405 = icmp eq i64 %404, 1
  br i1 %405, label %406, label %423

406:                                              ; preds = %401
  %407 = add i64 %403, -1
  %408 = inttoptr i64 %407 to i32*
  %409 = load i32, i32* %408, align 4
  %410 = and i64 %403, -4294967296
  %411 = zext i32 %409 to i64
  %412 = or i64 %410, %411
  %413 = add i64 %412, 7
  %414 = inttoptr i64 %413 to i16*
  %415 = load i16, i16* %414, align 2
  %416 = icmp eq i16 %415, 67
  br i1 %416, label %417, label %423

417:                                              ; preds = %406
  %418 = add i64 %403, 23
  %419 = inttoptr i64 %418 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = and i32 %420, -2
  %422 = icmp eq i32 %421, 10
  br i1 %422, label %431, label %423

423:                                              ; preds = %406, %401, %417
  %424 = call zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %393, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %425 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %426 = load i32, i32* %425, align 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %1723

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 16
  store i8 %424, i8* %429, align 1
  %430 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 5
  store i8 1, i8* %430, align 4
  br label %431

431:                                              ; preds = %428, %417
  %432 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 6, i32 0
  %433 = bitcast %"class.v8::Name"** %432 to %"class.v8::Value"**
  %434 = load %"class.v8::Value"*, %"class.v8::Value"** %433, align 8
  %435 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %434) #8
  %436 = icmp eq %"class.v8::Value"* %435, null
  br i1 %436, label %437, label %443

437:                                              ; preds = %431
  %438 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %439 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %440 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %439, align 8
  %441 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %440, i64 5
  %442 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %441, align 8
  call void %442(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %438) #8
  br label %1723

443:                                              ; preds = %431
  %444 = bitcast %"class.v8::Value"* %435 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = and i64 %445, 3
  %447 = icmp eq i64 %446, 1
  br i1 %447, label %448, label %465

448:                                              ; preds = %443
  %449 = add i64 %445, -1
  %450 = inttoptr i64 %449 to i32*
  %451 = load i32, i32* %450, align 4
  %452 = and i64 %445, -4294967296
  %453 = zext i32 %451 to i64
  %454 = or i64 %452, %453
  %455 = add i64 %454, 7
  %456 = inttoptr i64 %455 to i16*
  %457 = load i16, i16* %456, align 2
  %458 = icmp eq i16 %457, 67
  br i1 %458, label %459, label %465

459:                                              ; preds = %448
  %460 = add i64 %445, 23
  %461 = inttoptr i64 %460 to i32*
  %462 = load i32, i32* %461, align 4
  %463 = and i32 %462, -2
  %464 = icmp eq i32 %463, 10
  br i1 %464, label %473, label %465

465:                                              ; preds = %448, %443, %459
  %466 = bitcast %"class.blink::HeapVector.11"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %466) #8
  %467 = bitcast %"class.blink::HeapVector.11"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %467, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_12RTCIceServerEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* nonnull sret %10, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %435, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %468 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %469 = load i32, i32* %468, align 8
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %465
  call void @_ZN5blink16RTCConfiguration13setIceServersERKNS_10HeapVectorINS_6MemberINS_12RTCIceServerEEELj0EEE(%"class.blink::RTCConfiguration"* %2, %"class.blink::HeapVector.11"* nonnull dereferenceable(16) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %466) #8
  br label %473

472:                                              ; preds = %465
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %466) #8
  br label %1723

473:                                              ; preds = %471, %459
  %474 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 7, i32 0
  %475 = bitcast %"class.v8::Name"** %474 to %"class.v8::Value"**
  %476 = load %"class.v8::Value"*, %"class.v8::Value"** %475, align 8
  %477 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %476) #8
  %478 = icmp eq %"class.v8::Value"* %477, null
  br i1 %478, label %479, label %485

479:                                              ; preds = %473
  %480 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %481 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %482 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %481, align 8
  %483 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %482, i64 5
  %484 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %483, align 8
  call void %484(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %480) #8
  br label %1723

485:                                              ; preds = %473
  %486 = bitcast %"class.v8::Value"* %477 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = and i64 %487, 3
  %489 = icmp eq i64 %488, 1
  br i1 %489, label %490, label %507

490:                                              ; preds = %485
  %491 = add i64 %487, -1
  %492 = inttoptr i64 %491 to i32*
  %493 = load i32, i32* %492, align 4
  %494 = and i64 %487, -4294967296
  %495 = zext i32 %493 to i64
  %496 = or i64 %494, %495
  %497 = add i64 %496, 7
  %498 = inttoptr i64 %497 to i16*
  %499 = load i16, i16* %498, align 2
  %500 = icmp eq i16 %499, 67
  br i1 %500, label %501, label %507

501:                                              ; preds = %490
  %502 = add i64 %487, 23
  %503 = inttoptr i64 %502 to i32*
  %504 = load i32, i32* %503, align 4
  %505 = and i32 %504, -2
  %506 = icmp eq i32 %505, 10
  br i1 %506, label %713, label %507

507:                                              ; preds = %490, %485, %501
  %508 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %508) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %508, i8 -86, i64 152, i1 false)
  %509 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %477, %"class.v8::Value"** %509, align 8
  %510 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %510, align 8
  %511 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %511, align 8
  %512 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %513 = bitcast %"class.std::__1::unique_ptr.95"* %512 to i64*
  store i64 0, i64* %513, align 8
  %514 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %514, label %515, label %691

515:                                              ; preds = %507
  %516 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %516) #8
  %517 = load %"class.v8::Value"*, %"class.v8::Value"** %509, align 8
  %518 = icmp eq %"class.v8::Value"* %517, null
  br i1 %518, label %523, label %519, !prof !2

519:                                              ; preds = %515
  %520 = bitcast %"class.v8::Value"* %517 to %"class.v8::String"*
  %521 = load i32, i32* %510, align 8
  %522 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %520, i32 %521) #8
  br label %543

523:                                              ; preds = %515
  %524 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %525 = icmp eq %"class.WTF::StringImpl"* %524, null
  br i1 %525, label %543, label %526

526:                                              ; preds = %523
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %524, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %528 = load atomic i32, i32* %527 monotonic, align 4
  %529 = and i32 %528, 2
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %543

531:                                              ; preds = %526
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %524, i64 0, i32 0
  %533 = load i32, i32* %532, align 4
  %534 = zext i32 %533 to i33
  %535 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %534, i33 1) #8
  %536 = extractvalue { i33, i1 } %535, 1
  %537 = extractvalue { i33, i1 } %535, 0
  %538 = icmp slt i33 %537, 0
  %539 = or i1 %536, %538
  br i1 %539, label %540, label %541, !prof !2

540:                                              ; preds = %531
  call void @llvm.trap() #8
  unreachable

541:                                              ; preds = %531
  %542 = trunc i33 %537 to i32
  store i32 %542, i32* %532, align 4
  br label %543

543:                                              ; preds = %519, %523, %526, %541
  %544 = phi %"class.WTF::StringImpl"* [ %522, %519 ], [ null, %523 ], [ %524, %526 ], [ %524, %541 ]
  %545 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %544, %"class.WTF::StringImpl"** %545, align 8
  %546 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %546) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21) #8
  %547 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %564, label %551

551:                                              ; preds = %543
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %549) #8
  br label %564

564:                                              ; preds = %543, %560, %563
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %546) #8
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %580, label %567

567:                                              ; preds = %564
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  br i1 %571, label %574, label %576

574:                                              ; preds = %567
  %575 = add i32 %573, -1
  store i32 %575, i32* %572, align 4
  br label %576

576:                                              ; preds = %574, %567
  %577 = phi i32 [ %575, %574 ], [ %573, %567 ]
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %576
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #8
  br label %580

580:                                              ; preds = %564, %576, %579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %516) #8
  br i1 %547, label %581, label %691

581:                                              ; preds = %580
  %582 = load %"class.v8::Value"*, %"class.v8::Value"** %509, align 8
  %583 = icmp eq %"class.v8::Value"* %582, null
  br i1 %583, label %584, label %608, !prof !2

584:                                              ; preds = %581
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %586 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %586, label %587, label %589

587:                                              ; preds = %584
  %588 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 18
  br label %633

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %606

594:                                              ; preds = %589
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 0
  %596 = load i32, i32* %595, align 4
  %597 = zext i32 %596 to i33
  %598 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %597, i33 1) #8
  %599 = extractvalue { i33, i1 } %598, 1
  %600 = extractvalue { i33, i1 } %598, 0
  %601 = icmp slt i33 %600, 0
  %602 = or i1 %599, %601
  br i1 %602, label %603, label %604, !prof !2

603:                                              ; preds = %594
  call void @llvm.trap() #8
  unreachable

604:                                              ; preds = %594
  %605 = trunc i33 %600 to i32
  store i32 %605, i32* %595, align 4
  br label %606

606:                                              ; preds = %589, %604
  %607 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 18
  br label %614

608:                                              ; preds = %581
  %609 = bitcast %"class.v8::Value"* %582 to %"class.v8::String"*
  %610 = load i32, i32* %510, align 8
  %611 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %609, i32 %610) #8
  %612 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 18
  %613 = icmp eq %"class.WTF::StringImpl"* %611, null
  br i1 %613, label %633, label %614

614:                                              ; preds = %606, %608
  %615 = phi %"class.WTF::String"* [ %607, %606 ], [ %612, %608 ]
  %616 = phi %"class.WTF::StringImpl"* [ %585, %606 ], [ %611, %608 ]
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = and i32 %618, 2
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %633

621:                                              ; preds = %614
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  %624 = zext i32 %623 to i33
  %625 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %624, i33 1) #8
  %626 = extractvalue { i33, i1 } %625, 1
  %627 = extractvalue { i33, i1 } %625, 0
  %628 = icmp slt i33 %627, 0
  %629 = or i1 %626, %628
  br i1 %629, label %630, label %631, !prof !2

630:                                              ; preds = %621
  call void @llvm.trap() #8
  unreachable

631:                                              ; preds = %621
  %632 = trunc i33 %627 to i32
  store i32 %632, i32* %622, align 4
  br label %633

633:                                              ; preds = %587, %631, %614, %608
  %634 = phi i1 [ false, %631 ], [ false, %614 ], [ true, %608 ], [ true, %587 ]
  %635 = phi %"class.WTF::String"* [ %615, %631 ], [ %615, %614 ], [ %612, %608 ], [ %588, %587 ]
  %636 = phi %"class.WTF::StringImpl"* [ %616, %631 ], [ %616, %614 ], [ null, %608 ], [ null, %587 ]
  %637 = ptrtoint %"class.WTF::StringImpl"* %636 to i64
  %638 = bitcast %"class.WTF::String"* %635 to i64*
  %639 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %635, i64 0, i32 0, i32 0
  %640 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %639, align 8
  store i64 %637, i64* %638, align 8
  %641 = icmp eq %"class.WTF::StringImpl"* %640, null
  br i1 %641, label %655, label %642

642:                                              ; preds = %633
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %640, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %644 = load atomic i32, i32* %643 monotonic, align 4
  %645 = and i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %640, i64 0, i32 0
  %648 = load i32, i32* %647, align 4
  br i1 %646, label %649, label %651

649:                                              ; preds = %642
  %650 = add i32 %648, -1
  store i32 %650, i32* %647, align 4
  br label %651

651:                                              ; preds = %649, %642
  %652 = phi i32 [ %650, %649 ], [ %648, %642 ]
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %655

654:                                              ; preds = %651
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %640) #8
  br label %655

655:                                              ; preds = %633, %651, %654
  br i1 %634, label %669, label %656

656:                                              ; preds = %655
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %658 = load atomic i32, i32* %657 monotonic, align 4
  %659 = and i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  br i1 %660, label %663, label %665

663:                                              ; preds = %656
  %664 = add i32 %662, -1
  store i32 %664, i32* %661, align 4
  br label %665

665:                                              ; preds = %663, %656
  %666 = phi i32 [ %664, %663 ], [ %662, %656 ]
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %669

668:                                              ; preds = %665
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %636) #8
  br label %669

669:                                              ; preds = %655, %665, %668
  %670 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %671 = load i8*, i8** %670, align 8
  store i8* null, i8** %670, align 8
  %672 = icmp eq i8* %671, null
  br i1 %672, label %674, label %673

673:                                              ; preds = %669
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %671) #8
  br label %674

674:                                              ; preds = %673, %669
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %690, label %677

677:                                              ; preds = %674
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #8
  br label %690

690:                                              ; preds = %674, %686, %689
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %508) #8
  br label %713

691:                                              ; preds = %580, %507
  %692 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %693 = load i8*, i8** %692, align 8
  store i8* null, i8** %692, align 8
  %694 = icmp eq i8* %693, null
  br i1 %694, label %696, label %695

695:                                              ; preds = %691
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %693) #8
  br label %696

696:                                              ; preds = %695, %691
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %511, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %698, label %712, label %699

699:                                              ; preds = %696
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = and i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %705 = load i32, i32* %704, align 4
  br i1 %703, label %706, label %708

706:                                              ; preds = %699
  %707 = add i32 %705, -1
  store i32 %707, i32* %704, align 4
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i32 [ %707, %706 ], [ %705, %699 ]
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %712

711:                                              ; preds = %708
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #8
  br label %712

712:                                              ; preds = %696, %708, %711
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %508) #8
  br label %1723

713:                                              ; preds = %690, %501
  %714 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 8, i32 0
  %715 = bitcast %"class.v8::Name"** %714 to %"class.v8::Value"**
  %716 = load %"class.v8::Value"*, %"class.v8::Value"** %715, align 8
  %717 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %716) #8
  %718 = icmp eq %"class.v8::Value"* %717, null
  br i1 %718, label %719, label %725

719:                                              ; preds = %713
  %720 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %721 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %722 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %721, align 8
  %723 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %722, i64 5
  %724 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %723, align 8
  call void %724(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %720) #8
  br label %1723

725:                                              ; preds = %713
  %726 = bitcast %"class.v8::Value"* %717 to i64*
  %727 = load i64, i64* %726, align 8
  %728 = and i64 %727, 3
  %729 = icmp eq i64 %728, 1
  br i1 %729, label %730, label %747

730:                                              ; preds = %725
  %731 = add i64 %727, -1
  %732 = inttoptr i64 %731 to i32*
  %733 = load i32, i32* %732, align 4
  %734 = and i64 %727, -4294967296
  %735 = zext i32 %733 to i64
  %736 = or i64 %734, %735
  %737 = add i64 %736, 7
  %738 = inttoptr i64 %737 to i16*
  %739 = load i16, i16* %738, align 2
  %740 = icmp eq i16 %739, 67
  br i1 %740, label %741, label %747

741:                                              ; preds = %730
  %742 = add i64 %727, 23
  %743 = inttoptr i64 %742 to i32*
  %744 = load i32, i32* %743, align 4
  %745 = and i32 %744, -2
  %746 = icmp eq i32 %745, 10
  br i1 %746, label %953, label %747

747:                                              ; preds = %730, %725, %741
  %748 = bitcast %"class.blink::V8StringResource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %748) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %748, i8 -86, i64 152, i1 false)
  %749 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %717, %"class.v8::Value"** %749, align 8
  %750 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 1
  store i32 0, i32* %750, align 8
  %751 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %751, align 8
  %752 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1
  %753 = bitcast %"class.std::__1::unique_ptr.95"* %752 to i64*
  store i64 0, i64* %753, align 8
  %754 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %754, label %755, label %931

755:                                              ; preds = %747
  %756 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %756) #8
  %757 = load %"class.v8::Value"*, %"class.v8::Value"** %749, align 8
  %758 = icmp eq %"class.v8::Value"* %757, null
  br i1 %758, label %763, label %759, !prof !2

759:                                              ; preds = %755
  %760 = bitcast %"class.v8::Value"* %757 to %"class.v8::String"*
  %761 = load i32, i32* %750, align 8
  %762 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %760, i32 %761) #8
  br label %783

763:                                              ; preds = %755
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %751, align 8
  %765 = icmp eq %"class.WTF::StringImpl"* %764, null
  br i1 %765, label %783, label %766

766:                                              ; preds = %763
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %783

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  %774 = zext i32 %773 to i33
  %775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %774, i33 1) #8
  %776 = extractvalue { i33, i1 } %775, 1
  %777 = extractvalue { i33, i1 } %775, 0
  %778 = icmp slt i33 %777, 0
  %779 = or i1 %776, %778
  br i1 %779, label %780, label %781, !prof !2

780:                                              ; preds = %771
  call void @llvm.trap() #8
  unreachable

781:                                              ; preds = %771
  %782 = trunc i33 %777 to i32
  store i32 %782, i32* %772, align 4
  br label %783

783:                                              ; preds = %759, %763, %766, %781
  %784 = phi %"class.WTF::StringImpl"* [ %762, %759 ], [ null, %763 ], [ %764, %766 ], [ %764, %781 ]
  %785 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %784, %"class.WTF::StringImpl"** %785, align 8
  %786 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %786) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21) #8
  %787 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %15, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %788 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %788, align 8
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %804, label %791

791:                                              ; preds = %783
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #8
  br label %804

804:                                              ; preds = %783, %800, %803
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %786) #8
  %805 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %785, align 8
  %806 = icmp eq %"class.WTF::StringImpl"* %805, null
  br i1 %806, label %820, label %807

807:                                              ; preds = %804
  %808 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %809 = load atomic i32, i32* %808 monotonic, align 4
  %810 = and i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %805, i64 0, i32 0
  %813 = load i32, i32* %812, align 4
  br i1 %811, label %814, label %816

814:                                              ; preds = %807
  %815 = add i32 %813, -1
  store i32 %815, i32* %812, align 4
  br label %816

816:                                              ; preds = %814, %807
  %817 = phi i32 [ %815, %814 ], [ %813, %807 ]
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %819, label %820

819:                                              ; preds = %816
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %805) #8
  br label %820

820:                                              ; preds = %804, %816, %819
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %756) #8
  br i1 %787, label %821, label %931

821:                                              ; preds = %820
  %822 = load %"class.v8::Value"*, %"class.v8::Value"** %749, align 8
  %823 = icmp eq %"class.v8::Value"* %822, null
  br i1 %823, label %824, label %848, !prof !2

824:                                              ; preds = %821
  %825 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %751, align 8
  %826 = icmp eq %"class.WTF::StringImpl"* %825, null
  br i1 %826, label %827, label %829

827:                                              ; preds = %824
  %828 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 19
  br label %873

829:                                              ; preds = %824
  %830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %831 = load atomic i32, i32* %830 monotonic, align 4
  %832 = and i32 %831, 2
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %846

834:                                              ; preds = %829
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %825, i64 0, i32 0
  %836 = load i32, i32* %835, align 4
  %837 = zext i32 %836 to i33
  %838 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %837, i33 1) #8
  %839 = extractvalue { i33, i1 } %838, 1
  %840 = extractvalue { i33, i1 } %838, 0
  %841 = icmp slt i33 %840, 0
  %842 = or i1 %839, %841
  br i1 %842, label %843, label %844, !prof !2

843:                                              ; preds = %834
  call void @llvm.trap() #8
  unreachable

844:                                              ; preds = %834
  %845 = trunc i33 %840 to i32
  store i32 %845, i32* %835, align 4
  br label %846

846:                                              ; preds = %829, %844
  %847 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 19
  br label %854

848:                                              ; preds = %821
  %849 = bitcast %"class.v8::Value"* %822 to %"class.v8::String"*
  %850 = load i32, i32* %750, align 8
  %851 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %849, i32 %850) #8
  %852 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 19
  %853 = icmp eq %"class.WTF::StringImpl"* %851, null
  br i1 %853, label %873, label %854

854:                                              ; preds = %846, %848
  %855 = phi %"class.WTF::String"* [ %847, %846 ], [ %852, %848 ]
  %856 = phi %"class.WTF::StringImpl"* [ %825, %846 ], [ %851, %848 ]
  %857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %858 = load atomic i32, i32* %857 monotonic, align 4
  %859 = and i32 %858, 2
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %861, label %873

861:                                              ; preds = %854
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %856, i64 0, i32 0
  %863 = load i32, i32* %862, align 4
  %864 = zext i32 %863 to i33
  %865 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %864, i33 1) #8
  %866 = extractvalue { i33, i1 } %865, 1
  %867 = extractvalue { i33, i1 } %865, 0
  %868 = icmp slt i33 %867, 0
  %869 = or i1 %866, %868
  br i1 %869, label %870, label %871, !prof !2

870:                                              ; preds = %861
  call void @llvm.trap() #8
  unreachable

871:                                              ; preds = %861
  %872 = trunc i33 %867 to i32
  store i32 %872, i32* %862, align 4
  br label %873

873:                                              ; preds = %827, %871, %854, %848
  %874 = phi i1 [ false, %871 ], [ false, %854 ], [ true, %848 ], [ true, %827 ]
  %875 = phi %"class.WTF::String"* [ %855, %871 ], [ %855, %854 ], [ %852, %848 ], [ %828, %827 ]
  %876 = phi %"class.WTF::StringImpl"* [ %856, %871 ], [ %856, %854 ], [ null, %848 ], [ null, %827 ]
  %877 = ptrtoint %"class.WTF::StringImpl"* %876 to i64
  %878 = bitcast %"class.WTF::String"* %875 to i64*
  %879 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %875, i64 0, i32 0, i32 0
  %880 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %879, align 8
  store i64 %877, i64* %878, align 8
  %881 = icmp eq %"class.WTF::StringImpl"* %880, null
  br i1 %881, label %895, label %882

882:                                              ; preds = %873
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %884 = load atomic i32, i32* %883 monotonic, align 4
  %885 = and i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 0
  %888 = load i32, i32* %887, align 4
  br i1 %886, label %889, label %891

889:                                              ; preds = %882
  %890 = add i32 %888, -1
  store i32 %890, i32* %887, align 4
  br label %891

891:                                              ; preds = %889, %882
  %892 = phi i32 [ %890, %889 ], [ %888, %882 ]
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %895

894:                                              ; preds = %891
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %880) #8
  br label %895

895:                                              ; preds = %873, %891, %894
  br i1 %874, label %909, label %896

896:                                              ; preds = %895
  %897 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %898 = load atomic i32, i32* %897 monotonic, align 4
  %899 = and i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 0
  %902 = load i32, i32* %901, align 4
  br i1 %900, label %903, label %905

903:                                              ; preds = %896
  %904 = add i32 %902, -1
  store i32 %904, i32* %901, align 4
  br label %905

905:                                              ; preds = %903, %896
  %906 = phi i32 [ %904, %903 ], [ %902, %896 ]
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %908, label %909

908:                                              ; preds = %905
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %876) #8
  br label %909

909:                                              ; preds = %895, %905, %908
  %910 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %911 = load i8*, i8** %910, align 8
  store i8* null, i8** %910, align 8
  %912 = icmp eq i8* %911, null
  br i1 %912, label %914, label %913

913:                                              ; preds = %909
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %911) #8
  br label %914

914:                                              ; preds = %913, %909
  %915 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %751, align 8
  %916 = icmp eq %"class.WTF::StringImpl"* %915, null
  br i1 %916, label %930, label %917

917:                                              ; preds = %914
  %918 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %915, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = load atomic i32, i32* %918 monotonic, align 4
  %920 = and i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %915, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  br i1 %921, label %924, label %926

924:                                              ; preds = %917
  %925 = add i32 %923, -1
  store i32 %925, i32* %922, align 4
  br label %926

926:                                              ; preds = %924, %917
  %927 = phi i32 [ %925, %924 ], [ %923, %917 ]
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %930

929:                                              ; preds = %926
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %915) #8
  br label %930

930:                                              ; preds = %914, %926, %929
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %748) #8
  br label %953

931:                                              ; preds = %820, %747
  %932 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %933 = load i8*, i8** %932, align 8
  store i8* null, i8** %932, align 8
  %934 = icmp eq i8* %933, null
  br i1 %934, label %936, label %935

935:                                              ; preds = %931
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %933) #8
  br label %936

936:                                              ; preds = %935, %931
  %937 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %751, align 8
  %938 = icmp eq %"class.WTF::StringImpl"* %937, null
  br i1 %938, label %952, label %939

939:                                              ; preds = %936
  %940 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %937, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %941 = load atomic i32, i32* %940 monotonic, align 4
  %942 = and i32 %941, 2
  %943 = icmp eq i32 %942, 0
  %944 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %937, i64 0, i32 0
  %945 = load i32, i32* %944, align 4
  br i1 %943, label %946, label %948

946:                                              ; preds = %939
  %947 = add i32 %945, -1
  store i32 %947, i32* %944, align 4
  br label %948

948:                                              ; preds = %946, %939
  %949 = phi i32 [ %947, %946 ], [ %945, %939 ]
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %951, label %952

951:                                              ; preds = %948
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %937) #8
  br label %952

952:                                              ; preds = %936, %948, %951
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %748) #8
  br label %1723

953:                                              ; preds = %930, %741
  %954 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 9, i32 0
  %955 = bitcast %"class.v8::Name"** %954 to %"class.v8::Value"**
  %956 = load %"class.v8::Value"*, %"class.v8::Value"** %955, align 8
  %957 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %956) #8
  %958 = icmp eq %"class.v8::Value"* %957, null
  br i1 %958, label %959, label %965

959:                                              ; preds = %953
  %960 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %961 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %962 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %961, align 8
  %963 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %962, i64 5
  %964 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %963, align 8
  call void %964(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %960) #8
  br label %1723

965:                                              ; preds = %953
  %966 = bitcast %"class.v8::Value"* %957 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = and i64 %967, 3
  %969 = icmp eq i64 %968, 1
  br i1 %969, label %970, label %987

970:                                              ; preds = %965
  %971 = add i64 %967, -1
  %972 = inttoptr i64 %971 to i32*
  %973 = load i32, i32* %972, align 4
  %974 = and i64 %967, -4294967296
  %975 = zext i32 %973 to i64
  %976 = or i64 %974, %975
  %977 = add i64 %976, 7
  %978 = inttoptr i64 %977 to i16*
  %979 = load i16, i16* %978, align 2
  %980 = icmp eq i16 %979, 67
  br i1 %980, label %981, label %987

981:                                              ; preds = %970
  %982 = add i64 %967, 23
  %983 = inttoptr i64 %982 to i32*
  %984 = load i32, i32* %983, align 4
  %985 = and i32 %984, -2
  %986 = icmp eq i32 %985, 10
  br i1 %986, label %1003, label %987

987:                                              ; preds = %970, %965, %981
  %988 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %957) #8
  br i1 %988, label %989, label %992, !prof !3

989:                                              ; preds = %987
  %990 = bitcast %"class.v8::Value"* %957 to %"class.v8::Boolean"*
  %991 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %990) #8
  br label %994

992:                                              ; preds = %987
  %993 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %957, %"class.v8::Isolate"* %0) #8
  br label %994

994:                                              ; preds = %989, %992
  %995 = phi i1 [ %991, %989 ], [ %993, %992 ]
  %996 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %997 = load i32, i32* %996, align 8
  %998 = icmp eq i32 %997, 0
  br i1 %998, label %999, label %1723

999:                                              ; preds = %994
  %1000 = zext i1 %995 to i8
  %1001 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 20
  store i8 %1000, i8* %1001, align 8
  %1002 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 7
  store i8 1, i8* %1002, align 2
  br label %1003

1003:                                             ; preds = %999, %981
  %1004 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 13, i32 0
  %1005 = bitcast %"class.v8::Name"** %1004 to %"class.v8::Value"**
  %1006 = load %"class.v8::Value"*, %"class.v8::Value"** %1005, align 8
  %1007 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1006) #8
  %1008 = icmp eq %"class.v8::Value"* %1007, null
  br i1 %1008, label %1009, label %1015

1009:                                             ; preds = %1003
  %1010 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1011 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1012 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1011, align 8
  %1013 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1012, i64 5
  %1014 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1013, align 8
  call void %1014(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1010) #8
  br label %1723

1015:                                             ; preds = %1003
  %1016 = bitcast %"class.v8::Value"* %1007 to i64*
  %1017 = load i64, i64* %1016, align 8
  %1018 = and i64 %1017, 3
  %1019 = icmp eq i64 %1018, 1
  br i1 %1019, label %1020, label %1037

1020:                                             ; preds = %1015
  %1021 = add i64 %1017, -1
  %1022 = inttoptr i64 %1021 to i32*
  %1023 = load i32, i32* %1022, align 4
  %1024 = and i64 %1017, -4294967296
  %1025 = zext i32 %1023 to i64
  %1026 = or i64 %1024, %1025
  %1027 = add i64 %1026, 7
  %1028 = inttoptr i64 %1027 to i16*
  %1029 = load i16, i16* %1028, align 2
  %1030 = icmp eq i16 %1029, 67
  br i1 %1030, label %1031, label %1037

1031:                                             ; preds = %1020
  %1032 = add i64 %1017, 23
  %1033 = inttoptr i64 %1032 to i32*
  %1034 = load i32, i32* %1033, align 4
  %1035 = and i32 %1034, -2
  %1036 = icmp eq i32 %1035, 10
  br i1 %1036, label %1243, label %1037

1037:                                             ; preds = %1020, %1015, %1031
  %1038 = bitcast %"class.blink::V8StringResource"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1038) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1038, i8 -86, i64 152, i1 false)
  %1039 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1007, %"class.v8::Value"** %1039, align 8
  %1040 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 1
  store i32 0, i32* %1040, align 8
  %1041 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1041, align 8
  %1042 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1
  %1043 = bitcast %"class.std::__1::unique_ptr.95"* %1042 to i64*
  store i64 0, i64* %1043, align 8
  %1044 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %17, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1044, label %1045, label %1221

1045:                                             ; preds = %1037
  %1046 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1046) #8
  %1047 = load %"class.v8::Value"*, %"class.v8::Value"** %1039, align 8
  %1048 = icmp eq %"class.v8::Value"* %1047, null
  br i1 %1048, label %1053, label %1049, !prof !2

1049:                                             ; preds = %1045
  %1050 = bitcast %"class.v8::Value"* %1047 to %"class.v8::String"*
  %1051 = load i32, i32* %1040, align 8
  %1052 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1050, i32 %1051) #8
  br label %1073

1053:                                             ; preds = %1045
  %1054 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1041, align 8
  %1055 = icmp eq %"class.WTF::StringImpl"* %1054, null
  br i1 %1055, label %1073, label %1056

1056:                                             ; preds = %1053
  %1057 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1054, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1058 = load atomic i32, i32* %1057 monotonic, align 4
  %1059 = and i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1073

1061:                                             ; preds = %1056
  %1062 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1054, i64 0, i32 0
  %1063 = load i32, i32* %1062, align 4
  %1064 = zext i32 %1063 to i33
  %1065 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1064, i33 1) #8
  %1066 = extractvalue { i33, i1 } %1065, 1
  %1067 = extractvalue { i33, i1 } %1065, 0
  %1068 = icmp slt i33 %1067, 0
  %1069 = or i1 %1066, %1068
  br i1 %1069, label %1070, label %1071, !prof !2

1070:                                             ; preds = %1061
  call void @llvm.trap() #8
  unreachable

1071:                                             ; preds = %1061
  %1072 = trunc i33 %1067 to i32
  store i32 %1072, i32* %1062, align 4
  br label %1073

1073:                                             ; preds = %1049, %1053, %1056, %1071
  %1074 = phi %"class.WTF::StringImpl"* [ %1052, %1049 ], [ null, %1053 ], [ %1054, %1056 ], [ %1054, %1071 ]
  %1075 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1074, %"class.WTF::StringImpl"** %1075, align 8
  %1076 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1076) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #8
  %1077 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %18, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_2, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1078 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %1079 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1078, align 8
  %1080 = icmp eq %"class.WTF::StringImpl"* %1079, null
  br i1 %1080, label %1094, label %1081

1081:                                             ; preds = %1073
  %1082 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1079, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1083 = load atomic i32, i32* %1082 monotonic, align 4
  %1084 = and i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  %1086 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1079, i64 0, i32 0
  %1087 = load i32, i32* %1086, align 4
  br i1 %1085, label %1088, label %1090

1088:                                             ; preds = %1081
  %1089 = add i32 %1087, -1
  store i32 %1089, i32* %1086, align 4
  br label %1090

1090:                                             ; preds = %1088, %1081
  %1091 = phi i32 [ %1089, %1088 ], [ %1087, %1081 ]
  %1092 = icmp eq i32 %1091, 0
  br i1 %1092, label %1093, label %1094

1093:                                             ; preds = %1090
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1079) #8
  br label %1094

1094:                                             ; preds = %1073, %1090, %1093
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1076) #8
  %1095 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1075, align 8
  %1096 = icmp eq %"class.WTF::StringImpl"* %1095, null
  br i1 %1096, label %1110, label %1097

1097:                                             ; preds = %1094
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1099 = load atomic i32, i32* %1098 monotonic, align 4
  %1100 = and i32 %1099, 2
  %1101 = icmp eq i32 %1100, 0
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 4
  br i1 %1101, label %1104, label %1106

1104:                                             ; preds = %1097
  %1105 = add i32 %1103, -1
  store i32 %1105, i32* %1102, align 4
  br label %1106

1106:                                             ; preds = %1104, %1097
  %1107 = phi i32 [ %1105, %1104 ], [ %1103, %1097 ]
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1110

1109:                                             ; preds = %1106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1095) #8
  br label %1110

1110:                                             ; preds = %1094, %1106, %1109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1046) #8
  br i1 %1077, label %1111, label %1221

1111:                                             ; preds = %1110
  %1112 = load %"class.v8::Value"*, %"class.v8::Value"** %1039, align 8
  %1113 = icmp eq %"class.v8::Value"* %1112, null
  br i1 %1113, label %1114, label %1138, !prof !2

1114:                                             ; preds = %1111
  %1115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1041, align 8
  %1116 = icmp eq %"class.WTF::StringImpl"* %1115, null
  br i1 %1116, label %1117, label %1119

1117:                                             ; preds = %1114
  %1118 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 24
  br label %1163

1119:                                             ; preds = %1114
  %1120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1121 = load atomic i32, i32* %1120 monotonic, align 4
  %1122 = and i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  br i1 %1123, label %1124, label %1136

1124:                                             ; preds = %1119
  %1125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1115, i64 0, i32 0
  %1126 = load i32, i32* %1125, align 4
  %1127 = zext i32 %1126 to i33
  %1128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1127, i33 1) #8
  %1129 = extractvalue { i33, i1 } %1128, 1
  %1130 = extractvalue { i33, i1 } %1128, 0
  %1131 = icmp slt i33 %1130, 0
  %1132 = or i1 %1129, %1131
  br i1 %1132, label %1133, label %1134, !prof !2

1133:                                             ; preds = %1124
  call void @llvm.trap() #8
  unreachable

1134:                                             ; preds = %1124
  %1135 = trunc i33 %1130 to i32
  store i32 %1135, i32* %1125, align 4
  br label %1136

1136:                                             ; preds = %1119, %1134
  %1137 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 24
  br label %1144

1138:                                             ; preds = %1111
  %1139 = bitcast %"class.v8::Value"* %1112 to %"class.v8::String"*
  %1140 = load i32, i32* %1040, align 8
  %1141 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1139, i32 %1140) #8
  %1142 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 24
  %1143 = icmp eq %"class.WTF::StringImpl"* %1141, null
  br i1 %1143, label %1163, label %1144

1144:                                             ; preds = %1136, %1138
  %1145 = phi %"class.WTF::String"* [ %1137, %1136 ], [ %1142, %1138 ]
  %1146 = phi %"class.WTF::StringImpl"* [ %1115, %1136 ], [ %1141, %1138 ]
  %1147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1148 = load atomic i32, i32* %1147 monotonic, align 4
  %1149 = and i32 %1148, 2
  %1150 = icmp eq i32 %1149, 0
  br i1 %1150, label %1151, label %1163

1151:                                             ; preds = %1144
  %1152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1146, i64 0, i32 0
  %1153 = load i32, i32* %1152, align 4
  %1154 = zext i32 %1153 to i33
  %1155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1154, i33 1) #8
  %1156 = extractvalue { i33, i1 } %1155, 1
  %1157 = extractvalue { i33, i1 } %1155, 0
  %1158 = icmp slt i33 %1157, 0
  %1159 = or i1 %1156, %1158
  br i1 %1159, label %1160, label %1161, !prof !2

1160:                                             ; preds = %1151
  call void @llvm.trap() #8
  unreachable

1161:                                             ; preds = %1151
  %1162 = trunc i33 %1157 to i32
  store i32 %1162, i32* %1152, align 4
  br label %1163

1163:                                             ; preds = %1117, %1161, %1144, %1138
  %1164 = phi i1 [ false, %1161 ], [ false, %1144 ], [ true, %1138 ], [ true, %1117 ]
  %1165 = phi %"class.WTF::String"* [ %1145, %1161 ], [ %1145, %1144 ], [ %1142, %1138 ], [ %1118, %1117 ]
  %1166 = phi %"class.WTF::StringImpl"* [ %1146, %1161 ], [ %1146, %1144 ], [ null, %1138 ], [ null, %1117 ]
  %1167 = ptrtoint %"class.WTF::StringImpl"* %1166 to i64
  %1168 = bitcast %"class.WTF::String"* %1165 to i64*
  %1169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1165, i64 0, i32 0, i32 0
  %1170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1169, align 8
  store i64 %1167, i64* %1168, align 8
  %1171 = icmp eq %"class.WTF::StringImpl"* %1170, null
  br i1 %1171, label %1185, label %1172

1172:                                             ; preds = %1163
  %1173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1174 = load atomic i32, i32* %1173 monotonic, align 4
  %1175 = and i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1170, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 4
  br i1 %1176, label %1179, label %1181

1179:                                             ; preds = %1172
  %1180 = add i32 %1178, -1
  store i32 %1180, i32* %1177, align 4
  br label %1181

1181:                                             ; preds = %1179, %1172
  %1182 = phi i32 [ %1180, %1179 ], [ %1178, %1172 ]
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1170) #8
  br label %1185

1185:                                             ; preds = %1163, %1181, %1184
  br i1 %1164, label %1199, label %1186

1186:                                             ; preds = %1185
  %1187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1188 = load atomic i32, i32* %1187 monotonic, align 4
  %1189 = and i32 %1188, 2
  %1190 = icmp eq i32 %1189, 0
  %1191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1166, i64 0, i32 0
  %1192 = load i32, i32* %1191, align 4
  br i1 %1190, label %1193, label %1195

1193:                                             ; preds = %1186
  %1194 = add i32 %1192, -1
  store i32 %1194, i32* %1191, align 4
  br label %1195

1195:                                             ; preds = %1193, %1186
  %1196 = phi i32 [ %1194, %1193 ], [ %1192, %1186 ]
  %1197 = icmp eq i32 %1196, 0
  br i1 %1197, label %1198, label %1199

1198:                                             ; preds = %1195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1166) #8
  br label %1199

1199:                                             ; preds = %1185, %1195, %1198
  %1200 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1201 = load i8*, i8** %1200, align 8
  store i8* null, i8** %1200, align 8
  %1202 = icmp eq i8* %1201, null
  br i1 %1202, label %1204, label %1203

1203:                                             ; preds = %1199
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1201) #8
  br label %1204

1204:                                             ; preds = %1203, %1199
  %1205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1041, align 8
  %1206 = icmp eq %"class.WTF::StringImpl"* %1205, null
  br i1 %1206, label %1220, label %1207

1207:                                             ; preds = %1204
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 0
  %1213 = load i32, i32* %1212, align 4
  br i1 %1211, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = add i32 %1213, -1
  store i32 %1215, i32* %1212, align 4
  br label %1216

1216:                                             ; preds = %1214, %1207
  %1217 = phi i32 [ %1215, %1214 ], [ %1213, %1207 ]
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1220

1219:                                             ; preds = %1216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1205) #8
  br label %1220

1220:                                             ; preds = %1204, %1216, %1219
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1038) #8
  br label %1243

1221:                                             ; preds = %1110, %1037
  %1222 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %17, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1223 = load i8*, i8** %1222, align 8
  store i8* null, i8** %1222, align 8
  %1224 = icmp eq i8* %1223, null
  br i1 %1224, label %1226, label %1225

1225:                                             ; preds = %1221
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1223) #8
  br label %1226

1226:                                             ; preds = %1225, %1221
  %1227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1041, align 8
  %1228 = icmp eq %"class.WTF::StringImpl"* %1227, null
  br i1 %1228, label %1242, label %1229

1229:                                             ; preds = %1226
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1231 = load atomic i32, i32* %1230 monotonic, align 4
  %1232 = and i32 %1231, 2
  %1233 = icmp eq i32 %1232, 0
  %1234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 0
  %1235 = load i32, i32* %1234, align 4
  br i1 %1233, label %1236, label %1238

1236:                                             ; preds = %1229
  %1237 = add i32 %1235, -1
  store i32 %1237, i32* %1234, align 4
  br label %1238

1238:                                             ; preds = %1236, %1229
  %1239 = phi i32 [ %1237, %1236 ], [ %1235, %1229 ]
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1241, label %1242

1241:                                             ; preds = %1238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1227) #8
  br label %1242

1242:                                             ; preds = %1226, %1238, %1241
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1038) #8
  br label %1723

1243:                                             ; preds = %1220, %1031
  %1244 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_rtc_unified_plan_enabled_E, align 1, !range !4
  %1245 = icmp eq i8 %1244, 0
  br i1 %1245, label %1466, label %1246

1246:                                             ; preds = %1243
  %1247 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 14, i32 0
  %1248 = bitcast %"class.v8::Name"** %1247 to %"class.v8::Value"**
  %1249 = load %"class.v8::Value"*, %"class.v8::Value"** %1248, align 8
  %1250 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1249) #8
  %1251 = icmp eq %"class.v8::Value"* %1250, null
  br i1 %1251, label %1252, label %1258

1252:                                             ; preds = %1246
  %1253 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1254 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1255 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1254, align 8
  %1256 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1255, i64 5
  %1257 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1256, align 8
  call void %1257(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1253) #8
  br label %1723

1258:                                             ; preds = %1246
  %1259 = bitcast %"class.v8::Value"* %1250 to i64*
  %1260 = load i64, i64* %1259, align 8
  %1261 = and i64 %1260, 3
  %1262 = icmp eq i64 %1261, 1
  br i1 %1262, label %1263, label %1280

1263:                                             ; preds = %1258
  %1264 = add i64 %1260, -1
  %1265 = inttoptr i64 %1264 to i32*
  %1266 = load i32, i32* %1265, align 4
  %1267 = and i64 %1260, -4294967296
  %1268 = zext i32 %1266 to i64
  %1269 = or i64 %1267, %1268
  %1270 = add i64 %1269, 7
  %1271 = inttoptr i64 %1270 to i16*
  %1272 = load i16, i16* %1271, align 2
  %1273 = icmp eq i16 %1272, 67
  br i1 %1273, label %1274, label %1280

1274:                                             ; preds = %1263
  %1275 = add i64 %1260, 23
  %1276 = inttoptr i64 %1275 to i32*
  %1277 = load i32, i32* %1276, align 4
  %1278 = and i32 %1277, -2
  %1279 = icmp eq i32 %1278, 10
  br i1 %1279, label %1466, label %1280

1280:                                             ; preds = %1263, %1258, %1274
  %1281 = bitcast %"class.blink::V8StringResource"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1281) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1281, i8 -86, i64 152, i1 false)
  %1282 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1250, %"class.v8::Value"** %1282, align 8
  %1283 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 1
  store i32 0, i32* %1283, align 8
  %1284 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1284, align 8
  %1285 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 3, i32 1
  %1286 = bitcast %"class.std::__1::unique_ptr.95"* %1285 to i64*
  store i64 0, i64* %1286, align 8
  %1287 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1287, label %1288, label %1442

1288:                                             ; preds = %1280
  %1289 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1289) #8
  %1290 = load %"class.v8::Value"*, %"class.v8::Value"** %1282, align 8
  %1291 = icmp eq %"class.v8::Value"* %1290, null
  br i1 %1291, label %1296, label %1292, !prof !2

1292:                                             ; preds = %1288
  %1293 = bitcast %"class.v8::Value"* %1290 to %"class.v8::String"*
  %1294 = load i32, i32* %1283, align 8
  %1295 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1293, i32 %1294) #8
  br label %1316

1296:                                             ; preds = %1288
  %1297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1284, align 8
  %1298 = icmp eq %"class.WTF::StringImpl"* %1297, null
  br i1 %1298, label %1316, label %1299

1299:                                             ; preds = %1296
  %1300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1301 = load atomic i32, i32* %1300 monotonic, align 4
  %1302 = and i32 %1301, 2
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1304, label %1316

1304:                                             ; preds = %1299
  %1305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1297, i64 0, i32 0
  %1306 = load i32, i32* %1305, align 4
  %1307 = zext i32 %1306 to i33
  %1308 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1307, i33 1) #8
  %1309 = extractvalue { i33, i1 } %1308, 1
  %1310 = extractvalue { i33, i1 } %1308, 0
  %1311 = icmp slt i33 %1310, 0
  %1312 = or i1 %1309, %1311
  br i1 %1312, label %1313, label %1314, !prof !2

1313:                                             ; preds = %1304
  call void @llvm.trap() #8
  unreachable

1314:                                             ; preds = %1304
  %1315 = trunc i33 %1310 to i32
  store i32 %1315, i32* %1305, align 4
  br label %1316

1316:                                             ; preds = %1292, %1296, %1299, %1314
  %1317 = phi %"class.WTF::StringImpl"* [ %1295, %1292 ], [ null, %1296 ], [ %1297, %1299 ], [ %1297, %1314 ]
  %1318 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1317, %"class.WTF::StringImpl"** %1318, align 8
  %1319 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1319) #8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12) #8
  %1320 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %21, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateEE12kValidValues_3, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1321 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %1322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1321, align 8
  %1323 = icmp eq %"class.WTF::StringImpl"* %1322, null
  br i1 %1323, label %1337, label %1324

1324:                                             ; preds = %1316
  %1325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1326 = load atomic i32, i32* %1325 monotonic, align 4
  %1327 = and i32 %1326, 2
  %1328 = icmp eq i32 %1327, 0
  %1329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1322, i64 0, i32 0
  %1330 = load i32, i32* %1329, align 4
  br i1 %1328, label %1331, label %1333

1331:                                             ; preds = %1324
  %1332 = add i32 %1330, -1
  store i32 %1332, i32* %1329, align 4
  br label %1333

1333:                                             ; preds = %1331, %1324
  %1334 = phi i32 [ %1332, %1331 ], [ %1330, %1324 ]
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1336, label %1337

1336:                                             ; preds = %1333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1322) #8
  br label %1337

1337:                                             ; preds = %1316, %1333, %1336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1319) #8
  %1338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1318, align 8
  %1339 = icmp eq %"class.WTF::StringImpl"* %1338, null
  br i1 %1339, label %1353, label %1340

1340:                                             ; preds = %1337
  %1341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1342 = load atomic i32, i32* %1341 monotonic, align 4
  %1343 = and i32 %1342, 2
  %1344 = icmp eq i32 %1343, 0
  %1345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1338, i64 0, i32 0
  %1346 = load i32, i32* %1345, align 4
  br i1 %1344, label %1347, label %1349

1347:                                             ; preds = %1340
  %1348 = add i32 %1346, -1
  store i32 %1348, i32* %1345, align 4
  br label %1349

1349:                                             ; preds = %1347, %1340
  %1350 = phi i32 [ %1348, %1347 ], [ %1346, %1340 ]
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1352, label %1353

1352:                                             ; preds = %1349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1338) #8
  br label %1353

1353:                                             ; preds = %1337, %1349, %1352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1289) #8
  br i1 %1320, label %1354, label %1442

1354:                                             ; preds = %1353
  %1355 = load %"class.v8::Value"*, %"class.v8::Value"** %1282, align 8
  %1356 = icmp eq %"class.v8::Value"* %1355, null
  br i1 %1356, label %1357, label %1381, !prof !2

1357:                                             ; preds = %1354
  %1358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1284, align 8
  %1359 = icmp eq %"class.WTF::StringImpl"* %1358, null
  br i1 %1359, label %1360, label %1362

1360:                                             ; preds = %1357
  %1361 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 25
  br label %1406

1362:                                             ; preds = %1357
  %1363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1364 = load atomic i32, i32* %1363 monotonic, align 4
  %1365 = and i32 %1364, 2
  %1366 = icmp eq i32 %1365, 0
  br i1 %1366, label %1367, label %1379

1367:                                             ; preds = %1362
  %1368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1358, i64 0, i32 0
  %1369 = load i32, i32* %1368, align 4
  %1370 = zext i32 %1369 to i33
  %1371 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1370, i33 1) #8
  %1372 = extractvalue { i33, i1 } %1371, 1
  %1373 = extractvalue { i33, i1 } %1371, 0
  %1374 = icmp slt i33 %1373, 0
  %1375 = or i1 %1372, %1374
  br i1 %1375, label %1376, label %1377, !prof !2

1376:                                             ; preds = %1367
  call void @llvm.trap() #8
  unreachable

1377:                                             ; preds = %1367
  %1378 = trunc i33 %1373 to i32
  store i32 %1378, i32* %1368, align 4
  br label %1379

1379:                                             ; preds = %1362, %1377
  %1380 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 25
  br label %1387

1381:                                             ; preds = %1354
  %1382 = bitcast %"class.v8::Value"* %1355 to %"class.v8::String"*
  %1383 = load i32, i32* %1283, align 8
  %1384 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1382, i32 %1383) #8
  %1385 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 25
  %1386 = icmp eq %"class.WTF::StringImpl"* %1384, null
  br i1 %1386, label %1406, label %1387

1387:                                             ; preds = %1379, %1381
  %1388 = phi %"class.WTF::String"* [ %1380, %1379 ], [ %1385, %1381 ]
  %1389 = phi %"class.WTF::StringImpl"* [ %1358, %1379 ], [ %1384, %1381 ]
  %1390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1391 = load atomic i32, i32* %1390 monotonic, align 4
  %1392 = and i32 %1391, 2
  %1393 = icmp eq i32 %1392, 0
  br i1 %1393, label %1394, label %1406

1394:                                             ; preds = %1387
  %1395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1389, i64 0, i32 0
  %1396 = load i32, i32* %1395, align 4
  %1397 = zext i32 %1396 to i33
  %1398 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1397, i33 1) #8
  %1399 = extractvalue { i33, i1 } %1398, 1
  %1400 = extractvalue { i33, i1 } %1398, 0
  %1401 = icmp slt i33 %1400, 0
  %1402 = or i1 %1399, %1401
  br i1 %1402, label %1403, label %1404, !prof !2

1403:                                             ; preds = %1394
  call void @llvm.trap() #8
  unreachable

1404:                                             ; preds = %1394
  %1405 = trunc i33 %1400 to i32
  store i32 %1405, i32* %1395, align 4
  br label %1406

1406:                                             ; preds = %1360, %1404, %1387, %1381
  %1407 = phi i1 [ false, %1404 ], [ false, %1387 ], [ true, %1381 ], [ true, %1360 ]
  %1408 = phi %"class.WTF::String"* [ %1388, %1404 ], [ %1388, %1387 ], [ %1385, %1381 ], [ %1361, %1360 ]
  %1409 = phi %"class.WTF::StringImpl"* [ %1389, %1404 ], [ %1389, %1387 ], [ null, %1381 ], [ null, %1360 ]
  %1410 = ptrtoint %"class.WTF::StringImpl"* %1409 to i64
  %1411 = bitcast %"class.WTF::String"* %1408 to i64*
  %1412 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1408, i64 0, i32 0, i32 0
  %1413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1412, align 8
  store i64 %1410, i64* %1411, align 8
  %1414 = icmp eq %"class.WTF::StringImpl"* %1413, null
  br i1 %1414, label %1428, label %1415

1415:                                             ; preds = %1406
  %1416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1417 = load atomic i32, i32* %1416 monotonic, align 4
  %1418 = and i32 %1417, 2
  %1419 = icmp eq i32 %1418, 0
  %1420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1413, i64 0, i32 0
  %1421 = load i32, i32* %1420, align 4
  br i1 %1419, label %1422, label %1424

1422:                                             ; preds = %1415
  %1423 = add i32 %1421, -1
  store i32 %1423, i32* %1420, align 4
  br label %1424

1424:                                             ; preds = %1422, %1415
  %1425 = phi i32 [ %1423, %1422 ], [ %1421, %1415 ]
  %1426 = icmp eq i32 %1425, 0
  br i1 %1426, label %1427, label %1428

1427:                                             ; preds = %1424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1413) #8
  br label %1428

1428:                                             ; preds = %1406, %1424, %1427
  br i1 %1407, label %1442, label %1429

1429:                                             ; preds = %1428
  %1430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1431 = load atomic i32, i32* %1430 monotonic, align 4
  %1432 = and i32 %1431, 2
  %1433 = icmp eq i32 %1432, 0
  %1434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1409, i64 0, i32 0
  %1435 = load i32, i32* %1434, align 4
  br i1 %1433, label %1436, label %1438

1436:                                             ; preds = %1429
  %1437 = add i32 %1435, -1
  store i32 %1437, i32* %1434, align 4
  br label %1438

1438:                                             ; preds = %1436, %1429
  %1439 = phi i32 [ %1437, %1436 ], [ %1435, %1429 ]
  %1440 = icmp eq i32 %1439, 0
  br i1 %1440, label %1441, label %1442

1441:                                             ; preds = %1438
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1409) #8
  br label %1442

1442:                                             ; preds = %1441, %1438, %1428, %1353, %1280
  %1443 = phi i32 [ 1, %1280 ], [ 1, %1353 ], [ 0, %1428 ], [ 0, %1438 ], [ 0, %1441 ]
  %1444 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %20, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1445 = load i8*, i8** %1444, align 8
  store i8* null, i8** %1444, align 8
  %1446 = icmp eq i8* %1445, null
  br i1 %1446, label %1448, label %1447

1447:                                             ; preds = %1442
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1445) #8
  br label %1448

1448:                                             ; preds = %1447, %1442
  %1449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1284, align 8
  %1450 = icmp eq %"class.WTF::StringImpl"* %1449, null
  br i1 %1450, label %1464, label %1451

1451:                                             ; preds = %1448
  %1452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1453 = load atomic i32, i32* %1452 monotonic, align 4
  %1454 = and i32 %1453, 2
  %1455 = icmp eq i32 %1454, 0
  %1456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1449, i64 0, i32 0
  %1457 = load i32, i32* %1456, align 4
  br i1 %1455, label %1458, label %1460

1458:                                             ; preds = %1451
  %1459 = add i32 %1457, -1
  store i32 %1459, i32* %1456, align 4
  br label %1460

1460:                                             ; preds = %1458, %1451
  %1461 = phi i32 [ %1459, %1458 ], [ %1457, %1451 ]
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1463, label %1464

1463:                                             ; preds = %1460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1449) #8
  br label %1464

1464:                                             ; preds = %1448, %1460, %1463
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1281) #8
  %1465 = icmp eq i32 %1443, 0
  br i1 %1465, label %1466, label %1723

1466:                                             ; preds = %1243, %1464, %1274
  %1467 = icmp eq %"class.blink::ExecutionContext"* %58, null
  %1468 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %58, i64 0, i32 4
  %1469 = select i1 %1467, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %1468
  %1470 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27RTCInsertableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1469) #8
  br i1 %1470, label %1471, label %1573

1471:                                             ; preds = %1466
  %1472 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 3, i32 0
  %1473 = bitcast %"class.v8::Name"** %1472 to %"class.v8::Value"**
  %1474 = load %"class.v8::Value"*, %"class.v8::Value"** %1473, align 8
  %1475 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1474) #8
  %1476 = icmp eq %"class.v8::Value"* %1475, null
  br i1 %1476, label %1477, label %1483

1477:                                             ; preds = %1471
  %1478 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1479 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1480 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1479, align 8
  %1481 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1480, i64 5
  %1482 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1481, align 8
  call void %1482(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1478) #8
  br label %1723

1483:                                             ; preds = %1471
  %1484 = bitcast %"class.v8::Value"* %1475 to i64*
  %1485 = load i64, i64* %1484, align 8
  %1486 = and i64 %1485, 3
  %1487 = icmp eq i64 %1486, 1
  br i1 %1487, label %1488, label %1505

1488:                                             ; preds = %1483
  %1489 = add i64 %1485, -1
  %1490 = inttoptr i64 %1489 to i32*
  %1491 = load i32, i32* %1490, align 4
  %1492 = and i64 %1485, -4294967296
  %1493 = zext i32 %1491 to i64
  %1494 = or i64 %1492, %1493
  %1495 = add i64 %1494, 7
  %1496 = inttoptr i64 %1495 to i16*
  %1497 = load i16, i16* %1496, align 2
  %1498 = icmp eq i16 %1497, 67
  br i1 %1498, label %1499, label %1505

1499:                                             ; preds = %1488
  %1500 = add i64 %1485, 23
  %1501 = inttoptr i64 %1500 to i32*
  %1502 = load i32, i32* %1501, align 4
  %1503 = and i32 %1502, -2
  %1504 = icmp eq i32 %1503, 10
  br i1 %1504, label %1522, label %1505

1505:                                             ; preds = %1488, %1483, %1499
  %1506 = call %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"* %0) #8
  call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %1506, i32 3294) #8
  %1507 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1475) #8
  br i1 %1507, label %1508, label %1511, !prof !3

1508:                                             ; preds = %1505
  %1509 = bitcast %"class.v8::Value"* %1475 to %"class.v8::Boolean"*
  %1510 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1509) #8
  br label %1513

1511:                                             ; preds = %1505
  %1512 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1475, %"class.v8::Isolate"* %0) #8
  br label %1513

1513:                                             ; preds = %1508, %1511
  %1514 = phi i1 [ %1510, %1508 ], [ %1512, %1511 ]
  %1515 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1516 = load i32, i32* %1515, align 8
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1518, label %1723

1518:                                             ; preds = %1513
  %1519 = zext i1 %1514 to i8
  %1520 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 14
  store i8 %1519, i8* %1520, align 1
  %1521 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 3
  store i8 1, i8* %1521, align 2
  br label %1522

1522:                                             ; preds = %1518, %1499
  %1523 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 4, i32 0
  %1524 = bitcast %"class.v8::Name"** %1523 to %"class.v8::Value"**
  %1525 = load %"class.v8::Value"*, %"class.v8::Value"** %1524, align 8
  %1526 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1525) #8
  %1527 = icmp eq %"class.v8::Value"* %1526, null
  br i1 %1527, label %1528, label %1534

1528:                                             ; preds = %1522
  %1529 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1530 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1531 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1530, align 8
  %1532 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1531, i64 5
  %1533 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1532, align 8
  call void %1533(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1529) #8
  br label %1723

1534:                                             ; preds = %1522
  %1535 = bitcast %"class.v8::Value"* %1526 to i64*
  %1536 = load i64, i64* %1535, align 8
  %1537 = and i64 %1536, 3
  %1538 = icmp eq i64 %1537, 1
  br i1 %1538, label %1539, label %1556

1539:                                             ; preds = %1534
  %1540 = add i64 %1536, -1
  %1541 = inttoptr i64 %1540 to i32*
  %1542 = load i32, i32* %1541, align 4
  %1543 = and i64 %1536, -4294967296
  %1544 = zext i32 %1542 to i64
  %1545 = or i64 %1543, %1544
  %1546 = add i64 %1545, 7
  %1547 = inttoptr i64 %1546 to i16*
  %1548 = load i16, i16* %1547, align 2
  %1549 = icmp eq i16 %1548, 67
  br i1 %1549, label %1550, label %1556

1550:                                             ; preds = %1539
  %1551 = add i64 %1536, 23
  %1552 = inttoptr i64 %1551 to i32*
  %1553 = load i32, i32* %1552, align 4
  %1554 = and i32 %1553, -2
  %1555 = icmp eq i32 %1554, 10
  br i1 %1555, label %1573, label %1556

1556:                                             ; preds = %1539, %1534, %1550
  %1557 = call %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"* %0) #8
  call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %1557, i32 3295) #8
  %1558 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1526) #8
  br i1 %1558, label %1559, label %1562, !prof !3

1559:                                             ; preds = %1556
  %1560 = bitcast %"class.v8::Value"* %1526 to %"class.v8::Boolean"*
  %1561 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1560) #8
  br label %1564

1562:                                             ; preds = %1556
  %1563 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1526, %"class.v8::Isolate"* %0) #8
  br label %1564

1564:                                             ; preds = %1559, %1562
  %1565 = phi i1 [ %1561, %1559 ], [ %1563, %1562 ]
  %1566 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1567 = load i32, i32* %1566, align 8
  %1568 = icmp eq i32 %1567, 0
  br i1 %1568, label %1569, label %1723

1569:                                             ; preds = %1564
  %1570 = zext i1 %1565 to i8
  %1571 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 15
  store i8 %1570, i8* %1571, align 2
  %1572 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 4
  store i8 1, i8* %1572, align 1
  br label %1573

1573:                                             ; preds = %1550, %1569, %1466
  %1574 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase37RtcAudioJitterBufferMaxPacketsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %1469) #8
  br i1 %1574, label %1575, label %1723

1575:                                             ; preds = %1573
  %1576 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 10, i32 0
  %1577 = bitcast %"class.v8::Name"** %1576 to %"class.v8::Value"**
  %1578 = load %"class.v8::Value"*, %"class.v8::Value"** %1577, align 8
  %1579 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1578) #8
  %1580 = icmp eq %"class.v8::Value"* %1579, null
  br i1 %1580, label %1581, label %1587

1581:                                             ; preds = %1575
  %1582 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1583 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1584 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1583, align 8
  %1585 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1584, i64 5
  %1586 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1585, align 8
  call void %1586(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1582) #8
  br label %1723

1587:                                             ; preds = %1575
  %1588 = bitcast %"class.v8::Value"* %1579 to i64*
  %1589 = load i64, i64* %1588, align 8
  %1590 = and i64 %1589, 3
  %1591 = icmp eq i64 %1590, 1
  br i1 %1591, label %1592, label %1609

1592:                                             ; preds = %1587
  %1593 = add i64 %1589, -1
  %1594 = inttoptr i64 %1593 to i32*
  %1595 = load i32, i32* %1594, align 4
  %1596 = and i64 %1589, -4294967296
  %1597 = zext i32 %1595 to i64
  %1598 = or i64 %1596, %1597
  %1599 = add i64 %1598, 7
  %1600 = inttoptr i64 %1599 to i16*
  %1601 = load i16, i16* %1600, align 2
  %1602 = icmp eq i16 %1601, 67
  br i1 %1602, label %1603, label %1609

1603:                                             ; preds = %1592
  %1604 = add i64 %1589, 23
  %1605 = inttoptr i64 %1604 to i32*
  %1606 = load i32, i32* %1605, align 4
  %1607 = and i32 %1606, -2
  %1608 = icmp eq i32 %1607, 10
  br i1 %1608, label %1625, label %1609

1609:                                             ; preds = %1592, %1587, %1603
  %1610 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1579) #8
  br i1 %1610, label %1611, label %1614, !prof !3

1611:                                             ; preds = %1609
  %1612 = bitcast %"class.v8::Value"* %1579 to %"class.v8::Boolean"*
  %1613 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1612) #8
  br label %1616

1614:                                             ; preds = %1609
  %1615 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1579, %"class.v8::Isolate"* %0) #8
  br label %1616

1616:                                             ; preds = %1611, %1614
  %1617 = phi i1 [ %1613, %1611 ], [ %1615, %1614 ]
  %1618 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1619 = load i32, i32* %1618, align 8
  %1620 = icmp eq i32 %1619, 0
  br i1 %1620, label %1621, label %1723

1621:                                             ; preds = %1616
  %1622 = zext i1 %1617 to i8
  %1623 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 21
  store i8 %1622, i8* %1623, align 1
  %1624 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 8
  store i8 1, i8* %1624, align 1
  br label %1625

1625:                                             ; preds = %1621, %1603
  %1626 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 11, i32 0
  %1627 = bitcast %"class.v8::Name"** %1626 to %"class.v8::Value"**
  %1628 = load %"class.v8::Value"*, %"class.v8::Value"** %1627, align 8
  %1629 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1628) #8
  %1630 = icmp eq %"class.v8::Value"* %1629, null
  br i1 %1630, label %1631, label %1637

1631:                                             ; preds = %1625
  %1632 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1633 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1634 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1633, align 8
  %1635 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1634, i64 5
  %1636 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1635, align 8
  call void %1636(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1632) #8
  br label %1723

1637:                                             ; preds = %1625
  %1638 = bitcast %"class.v8::Value"* %1629 to i64*
  %1639 = load i64, i64* %1638, align 8
  %1640 = and i64 %1639, 3
  %1641 = icmp eq i64 %1640, 1
  br i1 %1641, label %1642, label %1659

1642:                                             ; preds = %1637
  %1643 = add i64 %1639, -1
  %1644 = inttoptr i64 %1643 to i32*
  %1645 = load i32, i32* %1644, align 4
  %1646 = and i64 %1639, -4294967296
  %1647 = zext i32 %1645 to i64
  %1648 = or i64 %1646, %1647
  %1649 = add i64 %1648, 7
  %1650 = inttoptr i64 %1649 to i16*
  %1651 = load i16, i16* %1650, align 2
  %1652 = icmp eq i16 %1651, 67
  br i1 %1652, label %1653, label %1659

1653:                                             ; preds = %1642
  %1654 = add i64 %1639, 23
  %1655 = inttoptr i64 %1654 to i32*
  %1656 = load i32, i32* %1655, align 4
  %1657 = and i32 %1656, -2
  %1658 = icmp eq i32 %1657, 10
  br i1 %1658, label %1674, label %1659

1659:                                             ; preds = %1642, %1637, %1653
  %1660 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1629) #8
  br i1 %1660, label %1661, label %1664, !prof !3

1661:                                             ; preds = %1659
  %1662 = bitcast %"class.v8::Value"* %1629 to %"class.v8::Int32"*
  %1663 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1662) #8
  br label %1666

1664:                                             ; preds = %1659
  %1665 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1629, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1666

1666:                                             ; preds = %1661, %1664
  %1667 = phi i32 [ %1663, %1661 ], [ %1665, %1664 ]
  %1668 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %1671, label %1723

1671:                                             ; preds = %1666
  %1672 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 22
  store i32 %1667, i32* %1672, align 4
  %1673 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 9
  store i8 1, i8* %1673, align 8
  br label %1674

1674:                                             ; preds = %1671, %1653
  %1675 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %55, i64 12, i32 0
  %1676 = bitcast %"class.v8::Name"** %1675 to %"class.v8::Value"**
  %1677 = load %"class.v8::Value"*, %"class.v8::Value"** %1676, align 8
  %1678 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %49, %"class.v8::Context"* %57, %"class.v8::Value"* %1677) #8
  %1679 = icmp eq %"class.v8::Value"* %1678, null
  br i1 %1679, label %1680, label %1686

1680:                                             ; preds = %1674
  %1681 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1682 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1683 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1682, align 8
  %1684 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1683, i64 5
  %1685 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1684, align 8
  call void %1685(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1681) #8
  br label %1723

1686:                                             ; preds = %1674
  %1687 = bitcast %"class.v8::Value"* %1678 to i64*
  %1688 = load i64, i64* %1687, align 8
  %1689 = and i64 %1688, 3
  %1690 = icmp eq i64 %1689, 1
  br i1 %1690, label %1691, label %1708

1691:                                             ; preds = %1686
  %1692 = add i64 %1688, -1
  %1693 = inttoptr i64 %1692 to i32*
  %1694 = load i32, i32* %1693, align 4
  %1695 = and i64 %1688, -4294967296
  %1696 = zext i32 %1694 to i64
  %1697 = or i64 %1695, %1696
  %1698 = add i64 %1697, 7
  %1699 = inttoptr i64 %1698 to i16*
  %1700 = load i16, i16* %1699, align 2
  %1701 = icmp eq i16 %1700, 67
  br i1 %1701, label %1702, label %1708

1702:                                             ; preds = %1691
  %1703 = add i64 %1688, 23
  %1704 = inttoptr i64 %1703 to i32*
  %1705 = load i32, i32* %1704, align 4
  %1706 = and i32 %1705, -2
  %1707 = icmp eq i32 %1706, 10
  br i1 %1707, label %1723, label %1708

1708:                                             ; preds = %1691, %1686, %1702
  %1709 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1678) #8
  br i1 %1709, label %1710, label %1713, !prof !3

1710:                                             ; preds = %1708
  %1711 = bitcast %"class.v8::Value"* %1678 to %"class.v8::Int32"*
  %1712 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1711) #8
  br label %1715

1713:                                             ; preds = %1708
  %1714 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1678, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1715

1715:                                             ; preds = %1710, %1713
  %1716 = phi i32 [ %1712, %1710 ], [ %1714, %1713 ]
  %1717 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1718 = load i32, i32* %1717, align 8
  %1719 = icmp eq i32 %1718, 0
  br i1 %1719, label %1720, label %1723

1720:                                             ; preds = %1715
  %1721 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 23
  store i32 %1716, i32* %1721, align 8
  %1722 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %2, i64 0, i32 10
  store i8 1, i8* %1722, align 1
  br label %1723

1723:                                             ; preds = %1564, %1513, %1715, %1666, %1616, %994, %423, %380, %1528, %1477, %1464, %1252, %303, %338, %395, %479, %712, %959, %1581, %1680, %1702, %1720, %1631, %1573, %1242, %1009, %952, %719, %472, %437, %345, %296, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %56) #8
  br label %1724

1724:                                             ; preds = %40, %40, %4, %1723, %47
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #8
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #8
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #8
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #8
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_14RTCCertificateEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.32, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink16RTCConfiguration15setCertificatesERKNS_10HeapVectorINS_6MemberINS_14RTCCertificateEEELj0EEE(%"class.blink::RTCConfiguration"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_12RTCIceServerEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.32, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink16RTCConfiguration13setIceServersERKNS_10HeapVectorINS_6MemberINS_12RTCIceServerEEELj0EEE(%"class.blink::RTCConfiguration"*, %"class.blink::HeapVector.11"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27RTCInsertableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase37RtcAudioJitterBufferMaxPacketsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink16RTCConfiguration8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::RTCConfiguration"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink20toV8RTCConfigurationEPKNS_16RTCConfigurationEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::RTCConfiguration"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20toV8RTCConfigurationEPKNS_16RTCConfigurationEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::RTCConfiguration"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %11 = add i64 %10, 8
  %12 = inttoptr i64 %11 to %"class.blink::V8PerIsolateData"**
  %13 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %12, align 8
  %14 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %13, i8* bitcast ([15 x i8*]* @_ZZN5blinkL29eternalV8RTCConfigurationKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.423"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.423"*)) #8
  %15 = extractvalue { i64, %"class.v8::Eternal"* } %14, 1
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %17 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %16) #8
  %18 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 11, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %29, align 8
  %30 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br label %35

31:                                               ; preds = %4
  %32 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 8) #8
  %33 = icmp eq %"class.v8::String"* %32, null
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %31
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %35

35:                                               ; preds = %34, %31, %21
  %36 = phi %"class.v8::String"* [ %30, %21 ], [ %32, %31 ], [ null, %34 ]
  %37 = bitcast %"class.v8::String"* %36 to %"class.v8::Value"*
  %38 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 0, i32 0
  %39 = load %"class.v8::Name"*, %"class.v8::Name"** %38, align 8
  %40 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %39, %"class.v8::Value"* %37) #8
  %41 = trunc i16 %40 to i8
  %42 = icmp ne i8 %41, 0
  %43 = icmp ugt i16 %40, 255
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %333

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 12
  %51 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_14RTCCertificateEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %50, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %52 = bitcast %"class.v8::Array"* %51 to %"class.v8::Value"*
  %53 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 1, i32 0
  %54 = load %"class.v8::Name"*, %"class.v8::Name"** %53, align 8
  %55 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %54, %"class.v8::Value"* %52) #8
  %56 = trunc i16 %55 to i8
  %57 = icmp ne i8 %56, 0
  %58 = icmp ugt i16 %55, 255
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %333

60:                                               ; preds = %45, %49
  %61 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 2
  %62 = load i8, i8* %61, align 1, !range !4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 13
  %66 = load i8, i8* %65, align 8, !range !4
  %67 = icmp eq i8 %66, 0
  %68 = select i1 %67, i64 192, i64 184
  %69 = add i64 %68, %10
  br label %72

70:                                               ; preds = %60
  %71 = add i64 %10, 192
  br label %72

72:                                               ; preds = %64, %70
  %73 = phi i64 [ %69, %64 ], [ %71, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  %75 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 2, i32 0
  %76 = load %"class.v8::Name"*, %"class.v8::Name"** %75, align 8
  %77 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %76, %"class.v8::Value"* %74) #8
  %78 = trunc i16 %77 to i8
  %79 = icmp ne i8 %78, 0
  %80 = icmp ugt i16 %77, 255
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %333

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 5
  %84 = load i8, i8* %83, align 4, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 16
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  br label %90

90:                                               ; preds = %82, %86
  %91 = phi i32 [ %89, %86 ], [ 0, %82 ]
  %92 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %91) #8
  %93 = bitcast %"class.v8::Integer"* %92 to %"class.v8::Value"*
  %94 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 5, i32 0
  %95 = load %"class.v8::Name"*, %"class.v8::Name"** %94, align 8
  %96 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %95, %"class.v8::Value"* %93) #8
  %97 = trunc i16 %96 to i8
  %98 = icmp ne i8 %97, 0
  %99 = icmp ugt i16 %96, 255
  %100 = and i1 %99, %98
  br i1 %100, label %101, label %333

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 6
  %103 = load i8, i8* %102, align 1, !range !4
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 17
  %107 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_12RTCIceServerEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.11"* dereferenceable(16) %106, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %108 = bitcast %"class.v8::Array"* %107 to %"class.v8::Value"*
  %109 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 6, i32 0
  %110 = load %"class.v8::Name"*, %"class.v8::Name"** %109, align 8
  %111 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %110, %"class.v8::Value"* %108) #8
  %112 = trunc i16 %111 to i8
  %113 = icmp ne i8 %112, 0
  %114 = icmp ugt i16 %111, 255
  %115 = and i1 %114, %113
  br i1 %115, label %116, label %333

116:                                              ; preds = %101, %105
  %117 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 18, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %138, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #8
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %127 = bitcast i8** %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %124, i32* %128, align 8
  %129 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #8
  %130 = bitcast %"class.v8::String"* %129 to %"class.v8::Value"*
  %131 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 7, i32 0
  %132 = load %"class.v8::Name"*, %"class.v8::Name"** %131, align 8
  %133 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %132, %"class.v8::Value"* %130) #8
  %134 = trunc i16 %133 to i8
  %135 = icmp ne i8 %134, 0
  %136 = icmp ugt i16 %133, 255
  %137 = and i1 %136, %135
  br i1 %137, label %138, label %333

138:                                              ; preds = %116, %120
  %139 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 19, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %160, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 1
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %149 = bitcast i8** %148 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %146, i32* %150, align 8
  %151 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #8
  %152 = bitcast %"class.v8::String"* %151 to %"class.v8::Value"*
  %153 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 8, i32 0
  %154 = load %"class.v8::Name"*, %"class.v8::Name"** %153, align 8
  %155 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %154, %"class.v8::Value"* %152) #8
  %156 = trunc i16 %155 to i8
  %157 = icmp ne i8 %156, 0
  %158 = icmp ugt i16 %155, 255
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %333

160:                                              ; preds = %138, %142
  %161 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 7
  %162 = load i8, i8* %161, align 2, !range !4
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %178, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 20
  %166 = load i8, i8* %165, align 8, !range !4
  %167 = icmp eq i8 %166, 0
  %168 = select i1 %167, i64 192, i64 184
  %169 = add i64 %168, %10
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  %171 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 9, i32 0
  %172 = load %"class.v8::Name"*, %"class.v8::Name"** %171, align 8
  %173 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %172, %"class.v8::Value"* %170) #8
  %174 = trunc i16 %173 to i8
  %175 = icmp ne i8 %174, 0
  %176 = icmp ugt i16 %173, 255
  %177 = and i1 %176, %175
  br i1 %177, label %178, label %333

178:                                              ; preds = %160, %164
  %179 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 24, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %192, label %182

182:                                              ; preds = %178
  %183 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 1
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %189 = bitcast i8** %188 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %189, align 8
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %186, i32* %190, align 8
  %191 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #8
  br label %196

192:                                              ; preds = %178
  %193 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 0, i32 7) #8
  %194 = icmp eq %"class.v8::String"* %193, null
  br i1 %194, label %195, label %196, !prof !2

195:                                              ; preds = %192
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %196

196:                                              ; preds = %195, %192, %182
  %197 = phi %"class.v8::String"* [ %191, %182 ], [ %193, %192 ], [ null, %195 ]
  %198 = bitcast %"class.v8::String"* %197 to %"class.v8::Value"*
  %199 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 13, i32 0
  %200 = load %"class.v8::Name"*, %"class.v8::Name"** %199, align 8
  %201 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %200, %"class.v8::Value"* %198) #8
  %202 = trunc i16 %201 to i8
  %203 = icmp ne i8 %202, 0
  %204 = icmp ugt i16 %201, 255
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %333

206:                                              ; preds = %196
  %207 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_rtc_unified_plan_enabled_E, align 1, !range !4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %231, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 25, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %231, label %213

213:                                              ; preds = %209
  %214 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %220 = bitcast i8** %219 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %217, i32* %221, align 8
  %222 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #8
  %223 = bitcast %"class.v8::String"* %222 to %"class.v8::Value"*
  %224 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 14, i32 0
  %225 = load %"class.v8::Name"*, %"class.v8::Name"** %224, align 8
  %226 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %225, %"class.v8::Value"* %223) #8
  %227 = trunc i16 %226 to i8
  %228 = icmp ne i8 %227, 0
  %229 = icmp ugt i16 %226, 255
  %230 = and i1 %229, %228
  br i1 %230, label %231, label %333

231:                                              ; preds = %209, %206, %213
  %232 = icmp eq %"class.blink::ExecutionContext"* %17, null
  %233 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 0, i32 4
  %234 = select i1 %232, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %233
  %235 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27RTCInsertableStreamsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %234) #8
  br i1 %235, label %236, label %280

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 3
  %238 = load i8, i8* %237, align 2, !range !4
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %246, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 14
  %242 = load i8, i8* %241, align 1, !range !4
  %243 = icmp eq i8 %242, 0
  %244 = select i1 %243, i64 192, i64 184
  %245 = add i64 %244, %10
  br label %248

246:                                              ; preds = %236
  %247 = add i64 %10, 192
  br label %248

248:                                              ; preds = %240, %246
  %249 = phi i64 [ %245, %240 ], [ %247, %246 ]
  %250 = inttoptr i64 %249 to %"class.v8::Value"*
  %251 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 3, i32 0
  %252 = load %"class.v8::Name"*, %"class.v8::Name"** %251, align 8
  %253 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %252, %"class.v8::Value"* %250) #8
  %254 = trunc i16 %253 to i8
  %255 = icmp ne i8 %254, 0
  %256 = icmp ugt i16 %253, 255
  %257 = and i1 %256, %255
  br i1 %257, label %258, label %333

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 4
  %260 = load i8, i8* %259, align 1, !range !4
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %268, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 15
  %264 = load i8, i8* %263, align 2, !range !4
  %265 = icmp eq i8 %264, 0
  %266 = select i1 %265, i64 192, i64 184
  %267 = add i64 %266, %10
  br label %270

268:                                              ; preds = %258
  %269 = add i64 %10, 192
  br label %270

270:                                              ; preds = %262, %268
  %271 = phi i64 [ %267, %262 ], [ %269, %268 ]
  %272 = inttoptr i64 %271 to %"class.v8::Value"*
  %273 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 4, i32 0
  %274 = load %"class.v8::Name"*, %"class.v8::Name"** %273, align 8
  %275 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %274, %"class.v8::Value"* %272) #8
  %276 = trunc i16 %275 to i8
  %277 = icmp ne i8 %276, 0
  %278 = icmp ugt i16 %275, 255
  %279 = and i1 %278, %277
  br i1 %279, label %280, label %333

280:                                              ; preds = %270, %231
  %281 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase37RtcAudioJitterBufferMaxPacketsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %234) #8
  br i1 %281, label %282, label %333

282:                                              ; preds = %280
  %283 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 8
  %284 = load i8, i8* %283, align 1, !range !4
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %300, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 21
  %288 = load i8, i8* %287, align 1, !range !4
  %289 = icmp eq i8 %288, 0
  %290 = select i1 %289, i64 192, i64 184
  %291 = add i64 %290, %10
  %292 = inttoptr i64 %291 to %"class.v8::Value"*
  %293 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 10, i32 0
  %294 = load %"class.v8::Name"*, %"class.v8::Name"** %293, align 8
  %295 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %294, %"class.v8::Value"* %292) #8
  %296 = trunc i16 %295 to i8
  %297 = icmp ne i8 %296, 0
  %298 = icmp ugt i16 %295, 255
  %299 = and i1 %298, %297
  br i1 %299, label %300, label %332

300:                                              ; preds = %282, %286
  %301 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 9
  %302 = load i8, i8* %301, align 8, !range !4
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %316, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 22
  %306 = load i32, i32* %305, align 4
  %307 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %306) #8
  %308 = bitcast %"class.v8::Integer"* %307 to %"class.v8::Value"*
  %309 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 11, i32 0
  %310 = load %"class.v8::Name"*, %"class.v8::Name"** %309, align 8
  %311 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %310, %"class.v8::Value"* %308) #8
  %312 = trunc i16 %311 to i8
  %313 = icmp ne i8 %312, 0
  %314 = icmp ugt i16 %311, 255
  %315 = and i1 %314, %313
  br i1 %315, label %316, label %332

316:                                              ; preds = %300, %304
  %317 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 10
  %318 = load i8, i8* %317, align 1, !range !4
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %333, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.blink::RTCConfiguration", %"class.blink::RTCConfiguration"* %0, i64 0, i32 23
  %322 = load i32, i32* %321, align 8
  %323 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %322) #8
  %324 = bitcast %"class.v8::Integer"* %323 to %"class.v8::Value"*
  %325 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %15, i64 12, i32 0
  %326 = load %"class.v8::Name"*, %"class.v8::Name"** %325, align 8
  %327 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %16, %"class.v8::Name"* %326, %"class.v8::Value"* %324) #8
  %328 = trunc i16 %327 to i8
  %329 = icmp ne i8 %328, 0
  %330 = icmp ugt i16 %327, 255
  %331 = and i1 %330, %329
  br i1 %331, label %333, label %332

332:                                              ; preds = %286, %304, %320
  br label %333

333:                                              ; preds = %316, %248, %270, %49, %90, %120, %164, %280, %320, %332, %213, %196, %142, %105, %72, %35
  %334 = phi i1 [ false, %35 ], [ false, %49 ], [ false, %72 ], [ false, %90 ], [ false, %105 ], [ false, %120 ], [ false, %142 ], [ false, %164 ], [ false, %196 ], [ false, %213 ], [ false, %332 ], [ true, %316 ], [ true, %320 ], [ true, %280 ], [ false, %270 ], [ false, %248 ]
  ret i1 %334
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RTCConfiguration"* @_ZN5blink17NativeValueTraitsINS_16RTCConfigurationEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 120) #8
  %5 = bitcast i8* %4 to %"class.blink::RTCConfiguration"*
  tail call void @_ZN5blink16RTCConfigurationC1Ev(%"class.blink::RTCConfiguration"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink18V8RTCConfiguration6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_16RTCConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::RTCConfiguration"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::RTCConfiguration"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.423"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink16RTCConfigurationC1Ev(%"class.blink::RTCConfiguration"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.30, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::RTCCertificate"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %143

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14RTCCertificateEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %121

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::RTCCertificate"** %7 to i8*
  %44 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14RTCCertificate18wrapper_type_info_E, align 8
  %45 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %49 = bitcast %"class.blink::RTCCertificate"** %7 to i8**
  br label %50

50:                                               ; preds = %41, %112
  %51 = phi i32 [ 0, %41 ], [ %113, %112 ]
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %51) #8
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %61

54:                                               ; preds = %50
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #8
  %60 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  br label %142

61:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %62 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %63 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %62, %"struct.blink::WrapperTypeInfo"* %44, %"class.v8::Value"* nonnull %52) #8
  br i1 %63, label %64, label %86

64:                                               ; preds = %61
  %65 = bitcast %"class.v8::Value"* %52 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i64 %66, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load i16, i16* %74, align 2
  switch i16 %75, label %80 [
    i16 1057, label %76
    i16 1056, label %76
    i16 1040, label %76
  ]

76:                                               ; preds = %64, %64, %64
  %77 = add i64 %66, 19
  %78 = inttoptr i64 %77 to i8**
  %79 = load i8*, i8** %78, align 1
  br label %83

80:                                               ; preds = %64
  %81 = bitcast %"class.v8::Value"* %52 to %"class.v8::Object"*
  %82 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %81, i32 1) #8
  br label %83

83:                                               ; preds = %80, %76
  %84 = phi i8* [ %79, %76 ], [ %82, %80 ]
  %85 = bitcast i8* %84 to %"class.blink::RTCCertificate"*
  br label %87

86:                                               ; preds = %61
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %44, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %87

87:                                               ; preds = %83, %86
  %88 = phi i8* [ %84, %83 ], [ null, %86 ]
  %89 = phi %"class.blink::RTCCertificate"* [ %85, %83 ], [ null, %86 ]
  store i8* %88, i8** %49, align 8
  %90 = load i32, i32* %48, align 8
  %91 = icmp eq i32 %90, 0
  %92 = ptrtoint %"class.blink::RTCCertificate"* %89 to i64
  br i1 %91, label %93, label %110

93:                                               ; preds = %87
  %94 = load i32, i32* %17, align 4
  %95 = load i32, i32* %16, align 8
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %109, label %97, !prof !2

97:                                               ; preds = %93
  %98 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %99 = zext i32 %94 to i64
  %100 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %98, i64 %99
  %101 = bitcast %"class.blink::Member"* %100 to i64*
  store atomic i64 %92, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %97
  %105 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #8
  br label %106

106:                                              ; preds = %104, %97
  %107 = load i32, i32* %17, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %17, align 4
  br label %112

109:                                              ; preds = %93
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::RTCCertificate"** nonnull dereferenceable(8) %7) #8
  br label %112

110:                                              ; preds = %87
  %111 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %142

112:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %113 = add nuw i32 %51, 1
  %114 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %50, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i32, i32* %16, align 8
  %120 = load i32, i32* %17, align 4
  br label %121

121:                                              ; preds = %39, %116
  %122 = phi i64* [ %40, %39 ], [ %117, %116 ]
  %123 = phi i32 [ 0, %39 ], [ %120, %116 ]
  %124 = phi i32 [ %33, %39 ], [ %119, %116 ]
  %125 = phi i64 [ %34, %39 ], [ %118, %116 ]
  %126 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %128 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %128, align 8
  %129 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %122 monotonic, align 8
  store atomic i64 %125, i64* %129 monotonic, align 8
  store i32 %124, i32* %126, align 8
  store i32 0, i32* %16, align 8
  store i32 %123, i32* %127, align 4
  store i32 0, i32* %17, align 4
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %121
  %133 = inttoptr i64 %125 to i8*
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #8
  br label %135

135:                                              ; preds = %132, %121
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %140) #8
  br label %142

142:                                              ; preds = %54, %110, %138, %135
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %143

143:                                              ; preds = %142, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_14RTCCertificateEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::RTCCertificate"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %81

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::RTCCertificate"** %6 to i8*
  %17 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14RTCCertificate18wrapper_type_info_E, align 8
  %18 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %19 = add i64 %18, 8
  %20 = inttoptr i64 %19 to %"class.blink::V8PerIsolateData"**
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %23 = bitcast %"class.blink::RTCCertificate"** %6 to i8**
  br label %24

24:                                               ; preds = %14, %79
  %25 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %26 = icmp eq %"class.v8::Value"* %25, null
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %24
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %28

28:                                               ; preds = %24, %27
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %20, align 8
  %30 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %29, %"struct.blink::WrapperTypeInfo"* %17, %"class.v8::Value"* %25) #8
  br i1 %30, label %31, label %53

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %25 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %33, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  switch i16 %42, label %47 [
    i16 1057, label %43
    i16 1056, label %43
    i16 1040, label %43
  ]

43:                                               ; preds = %31, %31, %31
  %44 = add i64 %33, 19
  %45 = inttoptr i64 %44 to i8**
  %46 = load i8*, i8** %45, align 1
  br label %50

47:                                               ; preds = %31
  %48 = bitcast %"class.v8::Value"* %25 to %"class.v8::Object"*
  %49 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %48, i32 1) #8
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i8* [ %46, %43 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::RTCCertificate"*
  br label %54

53:                                               ; preds = %28
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %54

54:                                               ; preds = %50, %53
  %55 = phi i8* [ %51, %50 ], [ null, %53 ]
  %56 = phi %"class.blink::RTCCertificate"* [ %52, %50 ], [ null, %53 ]
  store i8* %55, i8** %23, align 8
  %57 = load i32, i32* %21, align 8
  %58 = icmp eq i32 %57, 0
  %59 = ptrtoint %"class.blink::RTCCertificate"* %56 to i64
  br i1 %58, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %108

62:                                               ; preds = %54
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %11, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %78, label %66, !prof !2

66:                                               ; preds = %62
  %67 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 %68
  %70 = bitcast %"class.blink::Member"* %69 to i64*
  store atomic i64 %59, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #8
  br label %75

75:                                               ; preds = %73, %66
  %76 = load i32, i32* %12, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %12, align 4
  br label %79

78:                                               ; preds = %62
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %22, %"class.blink::RTCCertificate"** nonnull dereferenceable(8) %6) #8
  br label %79

79:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %80 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %80, label %24, label %81

81:                                               ; preds = %79, %4
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false)
  br label %108

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %91 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %91, align 8
  %92 = load i64, i64* %90, align 8
  %93 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %90 monotonic, align 8
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = load i32, i32* %11, align 8
  store i32 %94, i32* %88, align 8
  store i32 0, i32* %11, align 8
  %95 = load i32, i32* %12, align 4
  store i32 %95, i32* %89, align 4
  store i32 0, i32* %12, align 4
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %87
  %99 = inttoptr i64 %92 to i8*
  %100 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #8
  br label %101

101:                                              ; preds = %98, %87
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %106 = load i8*, i8** %105, align 8
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #8
  br label %108

108:                                              ; preds = %104, %101, %60, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14RTCCertificateEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.36, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.38, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14RTCCertificateEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14RTCCertificateEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14RTCCertificateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::RTCCertificate"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::RTCCertificate"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14RTCCertificateEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14RTCCertificateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14RTCCertificateEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14RTCCertificateEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.11", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::RTCIceServer"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12RTCIceServerEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking.467"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking.467"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector.11"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking.467", %"class.blink::HeapVectorBacking.467"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector.11"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::RTCIceServer"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  %55 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %57 = call %"class.blink::RTCIceServer"* @_ZN5blink17NativeValueTraitsINS_12RTCIceServerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::RTCIceServer"* %57, %"class.blink::RTCIceServer"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::RTCIceServer"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !2

65:                                               ; preds = %61
  %66 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %66, i64 %67
  %69 = bitcast %"class.blink::Member.17"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::RTCIceServer"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.14"* nonnull %18, %"class.blink::RTCIceServer"** nonnull dereferenceable(8) %7) #8
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector.11"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector.11"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector.11"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector.11"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_12RTCIceServerEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.11"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.11", align 8
  %6 = alloca %"class.blink::RTCIceServer"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector.11"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::RTCIceServer"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.blink::RTCIceServer"* @_ZN5blink17NativeValueTraitsINS_12RTCIceServerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::RTCIceServer"* %24, %"class.blink::RTCIceServer"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::RTCIceServer"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  %35 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %35, i64 %36
  %38 = bitcast %"class.blink::Member.17"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::RTCIceServer"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.14"* nonnull %18, %"class.blink::RTCIceServer"** nonnull dereferenceable(8) %6) #8
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector.11"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector.11"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector.11"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector.11"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector.11"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare %"class.blink::RTCIceServer"* @_ZN5blink17NativeValueTraitsINS_12RTCIceServerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12RTCIceServerEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.36, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.467"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.38, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.467"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.467"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12RTCIceServerEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.17"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.17"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12RTCIceServerEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12RTCIceServerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RTCIceServer"*
  %4 = bitcast i8* %1 to void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)**, void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)*, void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)*, void (%"class.blink::RTCIceServer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::RTCIceServer"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.14"*, %"class.blink::RTCIceServer"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.14"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %16, i64 %18
  %20 = bitcast %"class.blink::RTCIceServer"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.17"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %10 = icmp eq %"class.blink::Member.17"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12RTCIceServerEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.467"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking.467"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.467", %"class.blink::HeapVectorBacking.467"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %26 = icmp eq %"class.blink::Member.17"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.17"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12RTCIceServerEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12RTCIceServerEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.467"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12RTCIceServerEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking.467"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.467"* %17, null
  %23 = icmp ne %"class.blink::Member.17"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.17"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.467", %"class.blink::HeapVectorBacking.467"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.467", %"class.blink::HeapVectorBacking.467"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_14RTCCertificateEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.475* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member"*, %"class.blink::Member"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = add i64 %43, 160
  br label %46

46:                                               ; preds = %41, %79
  %47 = phi i32 [ 0, %41 ], [ %80, %79 ]
  %48 = phi %"class.blink::Member"* [ %36, %41 ], [ %81, %79 ]
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::RTCCertificate"*, %"class.blink::RTCCertificate"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::RTCCertificate", %"class.blink::RTCCertificate"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::RTCCertificate"* %50, null
  br i1 %52, label %69, label %53, !prof !2

53:                                               ; preds = %46
  %54 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %51, %"class.v8::Isolate"* %2) #8
  %55 = ptrtoint %"class.v8::Object"* %54 to i64
  %56 = icmp eq %"class.v8::Object"* %54, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %42) #8
  %59 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #8
  %60 = bitcast %"class.blink::RTCCertificate"* %50 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %51, %"class.blink::ScriptState"* %59) #8
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %67

67:                                               ; preds = %66, %57
  %68 = ptrtoint %"class.v8::Value"* %64 to i64
  br label %69

69:                                               ; preds = %46, %53, %67
  %70 = phi i64 [ %68, %67 ], [ %55, %53 ], [ %44, %46 ]
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i64 %45, i64 %70
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  %74 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %73) #8
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  %77 = icmp ult i16 %74, 256
  %78 = or i1 %77, %76
  br i1 %78, label %83, label %79, !prof !6

79:                                               ; preds = %69
  %80 = add i32 %47, 1
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %39
  br i1 %82, label %83, label %46

83:                                               ; preds = %79, %69, %31
  %84 = phi i64 [ %33, %31 ], [ 0, %69 ], [ %33, %79 ]
  %85 = load i8, i8* %5, align 8, !range !4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %88, align 8
  %90 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %90) #8
  %92 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %89, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %91, %"class.blink::RuntimeCallTimer"** %92, align 8
  store i8 0, i8* %5, align 8
  br label %93

93:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %94 = inttoptr i64 %84 to %"class.v8::Array"*
  ret %"class.v8::Array"* %94
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.415", %"class.WTF::HashMap.415"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.416"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.415", %"class.WTF::HashMap.415"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.418"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.41, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.41, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.416"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.418"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.416", %"class.WTF::HashTable.416"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.418"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.418"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.418", %"struct.WTF::KeyValuePair.418"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.418"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.418"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } undef, %"struct.WTF::KeyValuePair.418"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %78, %"struct.WTF::KeyValuePair.418"* %77, 1
  ret { %"struct.WTF::KeyValuePair.418"*, %"struct.WTF::KeyValuePair.418"* } %79
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_12RTCIceServerEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.11"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.475* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector.11", %"class.blink::HeapVector.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  %46 = add i64 %43, 160
  br label %47

47:                                               ; preds = %41, %71
  %48 = phi i32 [ 0, %41 ], [ %72, %71 ]
  %49 = phi %"class.blink::Member.17"* [ %36, %41 ], [ %73, %71 ]
  %50 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::RTCIceServer"*, %"class.blink::RTCIceServer"** %50, align 8
  %52 = icmp eq %"class.blink::RTCIceServer"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::RTCIceServer", %"class.blink::RTCIceServer"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::RTCIceServer"* %51 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %56, i64 2
  %58 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %57, align 8
  %59 = call %"class.v8::Value"* %58(%"class.blink::IDLDictionaryBase"* nonnull %54, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %47, %53
  %61 = phi %"class.v8::Value"* [ %59, %53 ], [ %45, %47 ]
  %62 = ptrtoint %"class.v8::Value"* %61 to i64
  %63 = icmp eq %"class.v8::Value"* %61, null
  %64 = select i1 %63, i64 %46, i64 %62
  %65 = inttoptr i64 %64 to %"class.v8::Value"*
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %48, %"class.v8::Value"* %65) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71, !prof !6

71:                                               ; preds = %60
  %72 = add i32 %48, 1
  %73 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %49, i64 1
  %74 = icmp eq %"class.blink::Member.17"* %73, %39
  br i1 %74, label %75, label %47

75:                                               ; preds = %71, %60, %31
  %76 = phi i64 [ %33, %31 ], [ 0, %60 ], [ %33, %71 ]
  %77 = load i8, i8* %5, align 8, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %83 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %82) #8
  %84 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %81, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %83, %"class.blink::RuntimeCallTimer"** %84, align 8
  store i8 0, i8* %5, align 8
  br label %85

85:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %86 = inttoptr i64 %76 to %"class.v8::Array"*
  ret %"class.v8::Array"* %86
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
