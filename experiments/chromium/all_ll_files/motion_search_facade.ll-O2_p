; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/motion_search_facade.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/motion_search_facade.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AV1_COMP = type { %struct.AV1_PRIMARY*, [8 x i8], %struct.EncQuantDequantParams, %struct.ThreadData, %struct.FRAME_COUNTS, %struct.MBMIExtFrameBufferInfo, %struct.CB_COEFF_BUFFER*, %struct.CoeffBufferPool, %struct.AV1Common, %struct.AV1EncoderConfig, i32, [8 x i8], %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i32, %struct.TemporalFilterCtx, i32, %struct.ForceIntegerMVInfo, [7 x %struct.RefCntBuffer*], %struct.RefCntBuffer*, %struct.RefreshFrameFlagsInfo, [8 x i32], %struct.ExternalFlags, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i64, %struct.RD_OPT, %struct.CODING_CONTEXT, %struct.GlobalMotionInfo, %struct.WinnerModeParams, %struct.TimeStamps, %struct.RATE_CONTROL, double, i32, i32, %struct.SPEED_FEATURES, %struct.MotionVectorSearchParams, i32, %struct.EncSegmentationInfo, %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i8, %struct.RefBufferStack, i32, i32, %struct.FRAME_INFO, %struct.FRAME_INDEX_SET, %struct.InitialDimensions, i32, %struct.ResizePendingParams, %struct.TileDataEnc*, i32, %struct.TokenInfo, i32, %struct.VarBasedPartitionInfo, %struct.FrameProbInfo, %struct.MultiThreadInfo, i32, i32, i32, %struct.AV1LrStruct, %struct.aom_film_grain_table_t*, %struct.aom_denoise_and_model_t*, %struct.InterpSearchFlags, i32, i32, i32, i32, %struct.RefFrameDistanceInfo, double*, %struct.SVC, i8, %struct.MV_STATS, i8, i32, i32, %struct.FirstPassData, %struct.noise_estimate, %struct.av1_denoiser, i8*, i8, i32, i64, [8 x i8] }
%struct.AV1_PRIMARY = type { %struct.AV1_COMP*, %struct.AV1_COMP*, %struct.lookahead_ctx*, i32, %struct.aom_codec_pkt_list*, i32, %struct.GF_GROUP, %struct.GF_STATE, i32, %struct.AV1LevelParams, i32, i32, %struct.TWO_PASS, %struct.PRIMARY_RATE_CONTROL, %struct.yv12_buffer_config, %struct.SequenceHeader, i32, i8, i32, i32, %struct.aom_internal_error_info, [22 x %struct.aom_variance_vtable], double*, double*, %struct.TplParams }
%struct.lookahead_ctx = type { i32, i32, [2 x %struct.read_ctx], %struct.lookahead_entry*, i32, i8 }
%struct.read_ctx = type { i32, i32, i32, i32 }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.aom_codec_pkt_list = type { i32, i32, [1 x %struct.aom_codec_cx_pkt] }
%struct.aom_codec_cx_pkt = type { i32, %union.anon.10 }
%union.anon.10 = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.GF_GROUP = type { [250 x i8], [250 x i8], [250 x i8], [250 x i32], [250 x i32], i32, i32, [250 x i8], [250 x i32], [250 x i8], [250 x i8], i32, i32 }
%struct.GF_STATE = type { i32 }
%struct.AV1LevelParams = type { [32 x i8], i32, [32 x %struct.AV1LevelInfo*] }
%struct.AV1LevelInfo = type { %struct.AV1LevelStats, %struct.AV1LevelSpec, %struct.FrameWindowBuffer, [24 x %struct.DECODER_MODEL] }
%struct.AV1LevelStats = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, double }
%struct.AV1LevelSpec = type { i8, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double, double, double }
%struct.FrameWindowBuffer = type { [256 x %struct.FrameRecord], i32, i32 }
%struct.FrameRecord = type { i64, i64, i64, i32, i32, i32, i32, i32 }
%struct.DECODER_MODEL = type { i8, i8, i8, i8, i32, i32, i32, i32, i64, double, double, double, double, i32, i32, i32, [8 x i32], [10 x %struct.FRAME_BUFFER], %struct.DFG_INTERVAL_QUEUE, double, double, i64, double, double, i32, i32, double, double }
%struct.FRAME_BUFFER = type { i32, i32, i32, i8, double }
%struct.DFG_INTERVAL_QUEUE = type { i32, i32, double, [64 x %struct.DFG_INTERVAL] }
%struct.DFG_INTERVAL = type { double, double, double }
%struct.TWO_PASS = type { i32, [36 x %struct.FIRSTPASS_STATS*], i32, %struct.FIRSTPASS_STATS*, %struct.STATS_BUFFER_CTX*, i32, i64, double, double, double, double, double, i8, i64, i64, double, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64, double, double }
%struct.STATS_BUFFER_CTX = type { %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS* }
%struct.PRIMARY_RATE_CONTROL = type { i64, i32, i32, [15 x i32], i32, i32, [150 x %struct.regions], i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, float, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.regions = type { i32, i32, double, double, double, double, double, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.aom_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)*, i32 (i8*, i32, i8*, i32, i8*, i8*, i32, i32)*, i32 (i8*, i32, i32, i32, i8*, i32, i8*, i8*, i32, i32, i32*)*, i32 (i8*, i32, i32*, i32*)*, i32 (i8*, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i32, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*, %struct.dist_wtd_comp_params*)* }
%struct.dist_wtd_comp_params = type { i32, i32, i32 }
%struct.TplParams = type { i8, i8, [79 x %struct.TplDepFrame], [35 x %struct.TplDepStats*], [35 x %struct.yv12_buffer_config], %struct.TplDepFrame*, %struct.scale_factors, i32, [7 x %struct.yv12_buffer_config*], [7 x %struct.yv12_buffer_config*], %struct.AV1TplRowMultiThreadSync, i32 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, [8 x i32], i32, i32, i32, i32, i32, i32, i32, [256 x double], [256 x double], i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, [2 x i64], i64, i64, [2 x i64], i64, i64, [7 x %union.int_mv], [2 x i32], [7 x i64] }
%union.int_mv = type { i32 }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.AV1TplRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.12, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.12 = type { i64 }
%union.anon.14 = type { i64 }
%struct.EncQuantDequantParams = type { %struct.QUANTS, %struct.Dequants }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.Dequants = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PC_TREE_SHARED_BUFFERS, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.inter_modes_info*, [2 x [2 x i32*]], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, [2 x i8*], i32, i32, i32, i32, [4 x i32], %struct.frame_contexts*, %struct.VP64x64*, i32, %struct.PICK_MODE_CONTEXT*, %struct.TemporalFilterData, %struct.TplTxfmStats, %struct.PixelLevelGradientInfo*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], [8 x i8], %struct.macroblockd, %struct.MB_MODE_INFO_EXT, %struct.MB_MODE_INFO_EXT_FRAME*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CB_COEFF_BUFFER*, [2 x i16], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, %struct.aom_internal_error_info*, [2 x i8*], i32, i32, i32, i32, i32, %struct.ModeCosts, %struct.MvCosts*, %struct.IntraBCMVCosts*, %struct.CoeffCosts, i32, i32, i32, i32, i32, i32, %struct.SuperBlockEnc, %struct.CONTENT_STATE_SB, [8 x i32], i32, [8 x i8], [8 x %struct.WARP_SAMPLE_INFO], [1024 x i32], i32, %struct.PartitionSearchInfo, i32, i32, [22 x [169 x i32]], %struct.WinnerModeStats*, i32, i8, %struct.inter_modes_info*, i8, [64 x %struct.COMP_RD_STATS], i32, i32, %struct.intrabc_hash_info, i32, %struct.MB_MODE_INFO*, %struct.PixelLevelGradientInfo*, [2 x i8], [8 x i32], %struct.FullMvLimits, %struct.TxfmSearchParams, %struct.TxfmSearchInfo, [2 x i8], i32, [8 x i32] }
%struct.macroblock_plane = type { i16*, i32*, i32*, i32*, i16*, i8*, %struct.buf_2d, i16*, i16*, i16*, i16*, i16*, i16*, i16* }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO_EXT = type { [29 x [4 x %struct.candidate_mv]], [29 x [4 x i16]], [29 x i8], [8 x %union.int_mv], [29 x i16] }
%struct.MB_MODE_INFO_EXT_FRAME = type { [4 x %struct.candidate_mv], [4 x i16], i8, [8 x %union.int_mv], i16, [2 x i16] }
%struct.ModeCosts = type { [20 x [10 x i32]], [4 x [13 x i32]], [13 x [13 x [13 x i32]]], [2 x [13 x [14 x i32]]], [22 x [2 x i32]], [5 x i32], [8 x [7 x i32]], [8 x [2 x [16 x i32]]], [2 x i32], [7 x [7 x i32]], [7 x [7 x i32]], [7 x [5 x [8 x i32]]], [7 x [5 x [8 x i32]]], [7 x [3 x [2 x i32]]], [2 x [2 x i32]], [3 x [2 x i32]], [6 x [2 x i32]], [2 x [2 x i32]], [6 x [2 x i32]], [3 x [2 x i32]], [3 x [6 x [2 x i32]]], [5 x [2 x i32]], [5 x [3 x i32]], [3 x [3 x [3 x i32]]], [3 x [3 x [2 x i32]]], [3 x [2 x [2 x i32]]], [4 x [2 x i32]], [8 x [8 x i32]], [22 x [2 x i32]], [22 x [16 x i32]], [4 x [2 x i32]], [22 x [2 x i32]], [4 x [4 x i32]], [6 x [2 x i32]], [6 x [2 x i32]], [22 x [3 x i32]], [22 x [2 x i32]], [16 x [3 x i32]], [3 x [2 x i32]], [4 x [3 x [5 x i32]]], [21 x [2 x i32]], [4 x [4 x [16 x i32]]], [3 x [4 x [13 x [16 x i32]]]], [3 x i32], [2 x i32], [2 x i32] }
%struct.MvCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [2 x i32*], [2 x i32*], i32** }
%struct.IntraBCMVCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x i32*] }
%struct.CoeffCosts = type { [5 x [2 x %struct.LV_MAP_COEFF_COST]], [7 x [2 x %struct.LV_MAP_EOB_COST]] }
%struct.LV_MAP_COEFF_COST = type { [13 x [2 x i32]], [4 x [3 x i32]], [42 x [8 x i32]], [9 x [2 x i32]], [3 x [2 x i32]], [21 x [26 x i32]] }
%struct.LV_MAP_EOB_COST = type { [2 x [11 x i32]] }
%struct.SuperBlockEnc = type { i8, i8, i32, [64 x i64], [64 x i64], [64 x [7 x %union.int_mv]], i32 }
%struct.CONTENT_STATE_SB = type { i32, i32, i32 }
%struct.WARP_SAMPLE_INFO = type { i32, [16 x i32], [16 x i32] }
%struct.PartitionSearchInfo = type { [105 x i8] }
%struct.WinnerModeStats = type { %struct.MB_MODE_INFO, %struct.RD_STATS, i64, i32, i32, [16384 x i8], i8 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_interpfilters = type { i32 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.RD_STATS = type { i32, i64, i64, i64, i32, i32 }
%struct.COMP_RD_STATS = type { [4 x i32], [4 x i64], [4 x i32], [4 x i64], [4 x i32], [2 x %union.int_mv], [2 x i8], i8, %union.int_interpfilters, i32, [2 x i32], %struct.INTERINTER_COMPOUND_DATA }
%struct.intrabc_hash_info = type { [2 x [2 x i32*]], %struct._hash_table, %struct._crc_calculator, %struct._crc_calculator, i32 }
%struct._hash_table = type { %struct.Vector** }
%struct.Vector = type { i64, i64, i64, i8* }
%struct._crc_calculator = type { i32, i32, i32, [256 x i32], i32 }
%struct.FullMvLimits = type { i32, i32, i32, i32 }
%struct.TxfmSearchParams = type { i32, i32, i32, [2 x i32], i32, i8, i32, i32, i8, i32 }
%struct.TxfmSearchInfo = type { i32, [1024 x i8], [1024 x i8], %struct.TxbRdRecords*, i32 }
%struct.TxbRdRecords = type { %struct.MB_RD_RECORD, [256 x %struct.TXB_RD_RECORD], [64 x %struct.TXB_RD_RECORD], [16 x %struct.TXB_RD_RECORD], [4 x %struct.TXB_RD_RECORD], %struct.TXB_RD_RECORD }
%struct.MB_RD_RECORD = type { [8 x %struct.MB_RD_INFO], i32, i32, %struct._CRC32C }
%struct.MB_RD_INFO = type { i8, [16 x i8], [1024 x i8], [1024 x i8], %struct.RD_STATS, i32 }
%struct._CRC32C = type { [8 x [256 x i32]] }
%struct.TXB_RD_RECORD = type { [256 x i32], [256 x %struct.TXB_RD_INFO], i32, i32 }
%struct.TXB_RD_INFO = type { i64, i64, i32, i16, i8, i16, i8, i8, i8, i8 }
%struct.RD_COUNTS = type { [3 x i64], i32, i32, [19 x [16 x i32]], [22 x [2 x i32]], [2 x i32] }
%struct.PC_TREE_SHARED_BUFFERS = type { [3 x i32*], [3 x i32*], [3 x i32*] }
%struct.SIMPLE_MOTION_DATA_TREE = type { i8, i8, [4 x %struct.SIMPLE_MOTION_DATA_TREE*], [8 x %struct.fullpel_mv], [2 x i32], [8 x i32], i32, i32 }
%struct.fullpel_mv = type { i16, i16 }
%struct.inter_modes_info = type { i32, [4 x i8], [1024 x %struct.MB_MODE_INFO], [1024 x i32], [1024 x i64], [1024 x i64], [1024 x %struct.RdIdxPair], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS] }
%struct.RdIdxPair = type { i32, i64 }
%struct.OBMCBuffer = type { i32*, i32*, i8*, i8* }
%struct.PALETTE_BUFFER = type { [4096 x i8], [8192 x i32] }
%struct.CompoundTypeRdBuffers = type { i8*, i8*, i16*, i16*, i8* }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.VP64x64 = type { %struct.VPVariance, [4 x %struct.VP32x32] }
%struct.VPVariance = type { %struct.VPartVar, [2 x %struct.VPartVar], [2 x %struct.VPartVar] }
%struct.VPartVar = type { i32, i32, i32, i32 }
%struct.VP32x32 = type { %struct.VPVariance, [4 x %struct.VP16x16] }
%struct.VP16x16 = type { %struct.VPVariance, [4 x %struct.VP8x8] }
%struct.VP8x8 = type { %struct.VPVariance, [4 x %struct.VP4x4] }
%struct.VP4x4 = type { %struct.VPVariance, [4 x %struct.VPartVar] }
%struct.PICK_MODE_CONTEXT = type { %struct.MB_MODE_INFO, %struct.MB_MODE_INFO_EXT_FRAME, [2 x i8*], i8*, [3 x i32*], [3 x i32*], [3 x i32*], [3 x i16*], [3 x i8*], i8*, i32, i32, i32, i32, i32, %struct.RD_STATS, i32, i64, i64, i64, i8, %union.int_mv, i8, i8, i32 }
%struct.TemporalFilterData = type { %struct.FRAME_DIFF, %struct.MB_MODE_INFO*, i32*, i16*, i8* }
%struct.FRAME_DIFF = type { i64, i64 }
%struct.TplTxfmStats = type { [256 x double], i32 }
%struct.PixelLevelGradientInfo = type { i16, i8, i8 }
%struct.FRAME_COUNTS = type { [16 x [3 x i32]] }
%struct.MBMIExtFrameBufferInfo = type { %struct.MB_MODE_INFO_EXT_FRAME*, i32, i32 }
%struct.CB_COEFF_BUFFER = type { [3 x i32*], [3 x i16*], [3 x i8*] }
%struct.CoeffBufferPool = type { i32*, i16*, i8* }
%struct.AV1Common = type { %struct.CurrentFrame, %struct.aom_internal_error_info*, i32, i32, i32, i32, i32, i32, i8, [33 x i32], i32, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], %struct.scale_factors, [8 x %struct.scale_factors], [8 x %struct.RefCntBuffer*], i32, i32, i32, %struct.FeatureFlags, %struct.CommonModeInfoParams, %struct.CommonQuantParams, %struct.segmentation, i8*, %struct.loop_filter_info_n, %struct.loopfilter, [3 x %struct.RestorationInfo], i32*, %struct.RestorationLineBuffers*, %struct.yv12_buffer_config, %struct.CdefInfo, %struct.aom_film_grain_t, %struct.DeltaQInfo, [8 x %struct.WarpedMotionParams], %struct.SequenceHeader*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CommonTileParams, %struct.BufferPool*, %struct.CommonContexts, i32, [8 x i32], %struct.TPL_MV_REF*, i32, [8 x i32], [8 x i8], i32, i32 }
%struct.CurrentFrame = type { i8, i8, i32, i32, i32, %struct.SkipModeInfo, i32, i32 }
%struct.SkipModeInfo = type { i32, i32, i32, i32 }
%struct.FeatureFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8 }
%struct.CommonModeInfoParams = type { i32, i32, i32, i32, i32, %struct.MB_MODE_INFO*, i32, i32, i8, %struct.MB_MODE_INFO**, i32, i32, i8*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*, i32, i32)* }
%struct.CommonQuantParams = type { i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], [8 x [2 x i16]], [16 x [3 x [19 x i8*]]], [16 x [3 x [19 x i8*]]], [8 x [19 x i8*]], [8 x [19 x i8*]], [8 x [19 x i8*]], i8, i32, i32, i32 }
%struct.segmentation = type { i8, i8, i8, i8, [8 x [8 x i16]], [8 x i32], i32, i8 }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [3 x [8 x [2 x [8 x [2 x i8]]]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { [2 x i32], i32, i32, i32, i8, i8, [8 x i8], [2 x i8], i32 }
%struct.RestorationInfo = type { i32, i32, i32, i32, i32, %struct.RestorationUnitInfo*, %struct.RestorationStripeBoundaries, i32 }
%struct.RestorationUnitInfo = type { i32, [12 x i8], %struct.WienerInfo, %struct.SgrprojInfo, [4 x i8] }
%struct.RestorationStripeBoundaries = type { i8*, i8*, i32, i32 }
%struct.RestorationLineBuffers = type { [3 x [392 x i16]], [3 x [392 x i16]] }
%struct.CdefInfo = type { [3 x i16*], [3 x i16*], i16*, [3 x i64], [3 x i64], i64, i32, i32, [16 x i32], [16 x i32], i32, i32, i32 }
%struct.aom_film_grain_t = type { i32, i32, [14 x [2 x i32]], i32, [10 x [2 x i32]], i32, [10 x [2 x i32]], i32, i32, i32, [24 x i32], [25 x i32], [25 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.DeltaQInfo = type { i32, i32, i32, i32, i32 }
%struct.CommonTileParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32 }
%struct.BufferPool = type { %union.pthread_mutex_t, i8*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, [16 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.RefCntBuffer = type { i32, i32, [7 x i32], i32, [7 x i32], %struct.MV_REF*, i8*, %struct.segmentation, i32, i32, i32, i32, [8 x %struct.WarpedMotionParams], i32, i8, %struct.aom_film_grain_t, %struct.aom_codec_frame_buffer, %struct.yv12_buffer_config, i8, [4 x i32], [8 x i8], [2 x i8], %struct.frame_contexts }
%struct.MV_REF = type { %union.int_mv, i8 }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.CommonContexts = type { i8**, [3 x i8**], i8**, i32, i32, i32 }
%struct.TPL_MV_REF = type { %union.int_mv, i8 }
%struct.AV1EncoderConfig = type { %struct.InputCfg, %struct.FrameDimensionCfg, %struct.AlgoCfg, %struct.KeyFrameCfg, %struct.RateControlCfg, %struct.QuantizationCfg, %struct.ResizeCfg, %struct.SuperResCfg, %struct.aom_fixed_buf, %struct.ToolCfg, %struct.GFConfig, %struct.TileConfig, %struct.TuneCfg, %struct.ColorCfg, %struct.DecoderModelCfg, %struct.RefFrameCfg, %struct.UnitTestCfg, %struct.MotionModeCfg, %struct.IntraModeCfg, %struct.TxfmSizeTypeCfg, %struct.CompoundTypeCfg, %struct.PartitionCfg, %struct.CostUpdateFreq, float, i32, i32, i32, i32, i32, i32, i32, [32 x i8], i8, i32, i8, i8, i8, i8, i8* }
%struct.InputCfg = type { double, i32, i32, i32, i32 }
%struct.FrameDimensionCfg = type { i32, i32, i32, i32, i32, i32 }
%struct.AlgoCfg = type { i32, i32, i32, i32, i8, i8, i8 }
%struct.KeyFrameCfg = type { i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.RateControlCfg = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QuantizationCfg = type { [5 x double], i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.ResizeCfg = type { i8, i8, i8 }
%struct.SuperResCfg = type { i32, i32, i8, i8, i32, i8 }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.ToolCfg = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GFConfig = type { i32, i32, i32, i32, i32, i8, i8 }
%struct.TileConfig = type { i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i8, i8, i8 }
%struct.TuneCfg = type { i8*, i8*, i32, i32, i32 }
%struct.ColorCfg = type { i32, i32, i32, i32, i32 }
%struct.DecoderModelCfg = type { %struct.aom_timing, i32, i8, i8, i8 }
%struct.RefFrameCfg = type { i32, i8, i8 }
%struct.UnitTestCfg = type { i32, i32 }
%struct.MotionModeCfg = type { i8, i8, i8 }
%struct.IntraModeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.TxfmSizeTypeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.CompoundTypeCfg = type { i8, i8, i8, i8, i8, i8 }
%struct.PartitionCfg = type { i8, i8, i8, i8, i8 }
%struct.CostUpdateFreq = type { i32, i32, i32, i32 }
%struct.TemporalFilterCtx = type { [35 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors, [3 x double], i32, i32, i32, i32, i32 }
%struct.ForceIntegerMVInfo = type { [32 x double], i32, i32 }
%struct.RefreshFrameFlagsInfo = type { i8, i8, i8 }
%struct.ExternalFlags = type { i32, %struct.ExtRefreshFrameFlagsInfo, i8, i8, i8, i8, i8, i8 }
%struct.ExtRefreshFrameFlagsInfo = type { i8, i8, i8, i8, i8, i8 }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.RD_OPT = type { [169 x i32], [8 x [22 x [169 x i32]]], i32, double }
%struct.CODING_CONTEXT = type { %struct.loopfilter, %struct.CdefInfo, %struct.yv12_buffer_config, %struct.RATE_CONTROL, %struct.MV_STATS }
%struct.GlobalMotionInfo = type { i8, [8 x %struct.yv12_buffer_config*], i8*, [2 x i32], [2 x [7 x %struct.FrameDistPair]], i32, i32, i32, [8192 x i32] }
%struct.FrameDistPair = type { i32, i8 }
%struct.WinnerModeParams = type { [3 x [2 x i32]], [3 x i8], [3 x i32], [3 x i32], [3 x i32], [3 x i32] }
%struct.TimeStamps = type { i64, i64, i64 }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, i32, [4 x i32], i32, [4 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [4 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32 }
%struct.SPEED_FEATURES = type { %struct.HIGH_LEVEL_SPEED_FEATURES, %struct.FIRST_PASS_SPEED_FEATURES, %struct.TPL_SPEED_FEATURES, %struct.GLOBAL_MOTION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES, %struct.MV_SPEED_FEATURES, %struct.INTER_MODE_SPEED_FEATURES, %struct.INTERP_FILTER_SPEED_FEATURES, %struct.INTRA_MODE_SPEED_FEATURES, %struct.TX_SPEED_FEATURES, %struct.RD_CALC_SPEED_FEATURES, %struct.WINNER_MODE_SPEED_FEATURES, %struct.LOOP_FILTER_SPEED_FEATURES, %struct.REAL_TIME_SPEED_FEATURES }
%struct.HIGH_LEVEL_SPEED_FEATURES = type { i32, i8, i32, i8, i32, i8, i32, i32 }
%struct.FIRST_PASS_SPEED_FEATURES = type { i32, i32 }
%struct.TPL_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32 }
%struct.GLOBAL_MOTION_SPEED_FEATURES = type { i8, i32, i32 }
%struct.PARTITION_SPEED_FEATURES = type { i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i64, i32, [5 x i32], i32, i32, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i8, i32, i32, i8, i32, i8, i8, i8, i32, [4 x %struct.MESH_PATTERN], [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.INTER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.INTERP_FILTER_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32 }
%struct.INTRA_MODE_SPEED_FEATURES = type { [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_SPEED_FEATURES = type { i32, i32, i32, i32, i32, %struct.TX_TYPE_SEARCH, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_TYPE_SEARCH = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RD_CALC_SPEED_FEATURES = type { i32, i32, i32, i8, i32, i32 }
%struct.WINNER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i32, i32 }
%struct.LOOP_FILTER_SPEED_FEATURES = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.REAL_TIME_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [16 x i32], i32 }
%struct.MotionVectorSearchParams = type { i32, i32, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, [3 x [7 x %struct.search_site_config]] }
%struct.SUBPEL_MOTION_SEARCH_PARAMS = type { i32, i32*, i8, i32, %struct.SubpelMvLimits, %struct.MV_COST_PARAMS, %struct.SUBPEL_SEARCH_VAR_PARAMS }
%struct.SubpelMvLimits = type { i32, i32, i32, i32 }
%struct.MV_COST_PARAMS = type { %struct.mv*, %struct.fullpel_mv, i8, i32*, [2 x i32*], i32, i32 }
%struct.SUBPEL_SEARCH_VAR_PARAMS = type { %struct.aom_variance_vtable*, i8, %struct.MSBuffers, i32, i32 }
%struct.MSBuffers = type { %struct.buf_2d*, %struct.buf_2d*, i8*, i8*, i32, i32, i32*, i32* }
%struct.mv = type { i16, i16 }
%struct.search_site_config = type { [22 x [17 x %struct.search_site]], i32, [22 x i32], [22 x i32], i32 }
%struct.search_site = type { %struct.fullpel_mv, i32 }
%struct.EncSegmentationInfo = type { i8*, i8 }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, [3 x i32], double, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.RefBufferStack = type { [16 x i32], i32, [16 x i32], i32, [16 x i32], i32 }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FRAME_INDEX_SET = type { i32 }
%struct.InitialDimensions = type { i32, i32 }
%struct.ResizePendingParams = type { i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [8 x i8], %struct.frame_contexts, %struct.frame_contexts*, i8, [22 x %struct.InterModeRdModel], %struct.AV1EncRowMultiThreadSync, %struct.mv }
%struct.InterModeRdModel = type { i32, double, double, double, double, double, double, double, i32, double, double, double, double, double }
%struct.AV1EncRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32, i32 }
%struct.TokenInfo = type { [64 x [64 x %struct.TokenExtra*]], [64 x [64 x %struct.TokenList*]] }
%struct.TokenExtra = type { i8 }
%struct.TokenList = type { %struct.TokenExtra*, i32 }
%struct.VarBasedPartitionInfo = type { [5 x i64], i64 }
%struct.FrameProbInfo = type { [7 x [22 x i32]], [7 x i32], [7 x [19 x [16 x i32]]], [7 x [16 x [3 x i32]]] }
%struct.MultiThreadInfo = type { i32, [10 x i32], i32, i32, %struct.AVxWorker*, %struct.EncWorkerData*, i8, %struct.AV1EncRowMultiThreadInfo, %struct.AV1TplRowMultiThreadInfo, %struct.AV1LfSyncData, %struct.AV1LrSyncData, %struct.AV1EncPackBSSync, %struct.AV1GlobalMotionSync, %struct.AV1TemporalFilterSync, %struct.AV1CdefSyncData, %struct.AV1CdefWorker* }
%struct.AVxWorker = type { %struct.AVxWorkerImpl*, i32, i8*, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.AVxWorkerImpl = type opaque
%struct.EncWorkerData = type opaque
%struct.AV1EncRowMultiThreadInfo = type { i32, i32, i32, i32, [64 x i32], %union.pthread_mutex_t*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32)*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1TplRowMultiThreadInfo = type { void (%struct.AV1TplRowMultiThreadSync*, i32, i32)*, void (%struct.AV1TplRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1LfSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, %struct.LoopFilterWorkerData*, i32, %union.pthread_mutex_t*, %struct.AV1LfMTInfo*, i32, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.AV1Common*, [3 x %struct.macroblockd_plane], %struct.macroblockd* }
%struct.AV1LfMTInfo = type { i32, i32, i32 }
%struct.AV1LrSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, i32, i32, %union.pthread_mutex_t*, %struct.LoopRestorationWorkerData*, %struct.AV1LrMTInfo*, i32, i32 }
%struct.LoopRestorationWorkerData = type { i32*, i8*, i8* }
%struct.AV1LrMTInfo = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.AV1EncPackBSSync = type { %union.pthread_mutex_t*, [512 x %struct.PackBSTileOrder], i32 }
%struct.PackBSTileOrder = type { i16, i32 }
%struct.AV1GlobalMotionSync = type { %struct.JobInfo, %struct.GlobalMotionThreadData*, %union.pthread_mutex_t*, i32, i32, i8 }
%struct.JobInfo = type { [64 x i8], [2 x i8], [2 x i8] }
%struct.GlobalMotionThreadData = type { [1 x %struct.MotionModel], i8* }
%struct.MotionModel = type { [8 x double], i32*, i32 }
%struct.AV1TemporalFilterSync = type { %union.pthread_mutex_t*, i32 }
%struct.AV1CdefSyncData = type { %union.pthread_mutex_t*, %struct.AV1CdefRowSync*, i32, i32, i32 }
%struct.AV1CdefRowSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32 }
%struct.AV1CdefWorker = type { %struct.AV1Common*, %struct.macroblockd*, [3 x i16*], i16*, [3 x i16*], void (%struct.AV1Common*, %struct.macroblockd*, %struct.CdefBlockInfo*, i16**, i16*, %struct.AV1CdefSyncData*, i32)* }
%struct.CdefBlockInfo = type { i16*, [3 x i16*], [3 x i16*], i8*, [256 x %struct.cdef_list], i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, [16 x [16 x i32]], [16 x [16 x i32]], i32, i32, i32 }
%struct.cdef_list = type { i8, i8 }
%struct.AV1LrStruct = type { void (%struct.RestorationTileLimits*, %struct.AV1PixelRect*, i32, i8*, i32*, %struct.RestorationLineBuffers*)*, [3 x %struct.FilterFrameCtxt], %struct.yv12_buffer_config*, %struct.yv12_buffer_config* }
%struct.RestorationTileLimits = type { i32, i32, i32, i32 }
%struct.AV1PixelRect = type { i32, i32, i32, i32 }
%struct.FilterFrameCtxt = type { %struct.RestorationInfo*, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.AV1PixelRect }
%struct.aom_film_grain_table_t = type { %struct.aom_film_grain_table_entry_t*, %struct.aom_film_grain_table_entry_t* }
%struct.aom_film_grain_table_entry_t = type { %struct.aom_film_grain_t, i64, i64, %struct.aom_film_grain_table_entry_t* }
%struct.aom_denoise_and_model_t = type opaque
%struct.InterpSearchFlags = type { i32, i16 }
%struct.RefFrameDistanceInfo = type { [7 x i32], i8, i8 }
%struct.SVC = type { i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32], [7 x i32], [8 x i32], double, i32, [8 x i32], [8 x i8], i32, i32, [8 x i32], [8 x i32], i32, i32, [32 x %struct.LAYER_CONTEXT], [4 x i8], [4 x i32], i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, %struct.PRIMARY_RATE_CONTROL, i32, i64, i32, i32, i64, i64, double, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8, i8, i32, i32 }
%struct.MV_STATS = type { i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FirstPassData = type { %struct.FRAME_STATS*, i32* }
%struct.FRAME_STATS = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.av1_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.inter_mode_info = type { i64, i32, i32, %union.int_mv, %union.int_mv, i32 }
%struct.cand_mv_t = type { %struct.fullpel_mv, i32 }
%struct.FULLPEL_MOTION_SEARCH_PARAMS = type { i8, %struct.aom_variance_vtable*, %struct.MSBuffers, i8, %struct.search_site_config*, %struct.FullMvLimits, i32, i32, i32, [2 x %struct.MESH_PATTERN*], i32, i32, i32, %struct.MV_COST_PARAMS, i32 (i8*, i32, i8*, i32)*, void (i8*, i32, i8**, i32, i32*)* }
%struct.BUFFER_SET = type { [3 x i8*], [3 x i32] }
%struct.InterPredParams = type { i32, i32, %struct.WarpedMotionParams, %struct.ConvolveParams, [2 x %struct.InterpFilterParams*], i32, i32, i32, i32, %struct.buf_2d, i32, i32, %struct.scale_factors*, i32, i32, %struct.INTERINTER_COMPOUND_DATA, i8, i32 }
%struct.ConvolveParams = type { i32, i16*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.InterpFilterParams = type { i16*, i16, i8 }

@max_txsize_rect_lookup = internal unnamed_addr constant [22 x i8] c"\00\05\06\01\07\08\02\09\0A\03\0B\0C\04\04\04\04\0D\0E\0F\10\11\12", align 16
@block_size_wide = internal unnamed_addr constant [22 x i8] c"\04\04\08\08\08\10\10\10   @@@\80\80\04\10\08 \10@", align 16
@block_size_high = internal unnamed_addr constant [22 x i8] c"\04\08\04\08\10\08\10 \10 @ @\80@\80\10\04 \08@\10", align 16
@mi_size_wide = internal unnamed_addr constant [22 x i8] c"\01\01\02\02\02\04\04\04\08\08\08\10\10\10  \01\04\02\08\04\10", align 16
@mi_size_high = internal unnamed_addr constant [22 x i8] c"\01\02\01\02\04\02\04\08\04\08\10\08\10 \10 \04\01\08\02\10\04", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_single_motion_search(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, i32, i32* nocapture, i32, %struct.inter_mode_info* nocapture, %union.int_mv*) local_unnamed_addr #0 {
  %9 = alloca [3 x %struct.buf_2d], align 16
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to %struct.mv*
  %12 = alloca [65 x %struct.cand_mv_t], align 16
  %13 = alloca [5 x i32], align 16
  %14 = alloca %struct.FULLPEL_MOTION_SEARCH_PARAMS, align 8
  %15 = alloca i32, align 4
  %16 = bitcast i32* %15 to %struct.fullpel_mv*
  %17 = alloca i32, align 4
  %18 = bitcast i32* %17 to %struct.fullpel_mv*
  %19 = alloca %union.int_mv, align 4
  %20 = alloca [3 x %union.int_mv], align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.SUBPEL_MOTION_SEARCH_PARAMS, align 8
  %23 = alloca %struct.BUFFER_SET, align 8
  %24 = alloca %struct.RD_STATS, align 8
  %25 = alloca i32, align 4
  %26 = bitcast i32* %25 to %struct.mv*
  %27 = alloca %struct.RD_STATS, align 8
  %28 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2
  %29 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %31 = load %struct.SequenceHeader*, %struct.SequenceHeader** %30, align 16
  %32 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %31, i64 0, i32 27
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 3, i32 1
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  %37 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %36, align 8
  %38 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %37, align 8
  %39 = bitcast [3 x %struct.buf_2d]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %39) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 0, i64 96, i1 false)
  %40 = sext i32 %3 to i64
  %41 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 6, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = tail call %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP* %0, i32 %43) #5
  %45 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %28, i64 0, i32 0
  %46 = load i32, i32* %45, align 16
  %47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 21
  %50 = load %struct.MvCosts*, %struct.MvCosts** %49, align 16
  %51 = icmp ne %struct.yv12_buffer_config* %44, null
  br i1 %51, label %53, label %57

52:                                               ; preds = %53, %728
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %28, i32 %3, %struct.yv12_buffer_config* nonnull %44, i32 %46, i32 %48, %struct.scale_factors* null, i32 %35) #5
  br label %57

53:                                               ; preds = %8
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %40
  %55 = bitcast [3 x %struct.buf_2d]* %9 to i8*
  %56 = bitcast %struct.buf_2d* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %55, i8* align 16 %56, i64 32, i1 false)
  br i1 %34, label %728, label %52

57:                                               ; preds = %52, %8
  %58 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 17
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %61
  %66 = sext i8 %42 to i64
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 55, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = tail call i32 @av1_init_search_range(i32 %68) #5
  %70 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, %69
  %73 = sdiv i32 %72, 2
  br label %77

74:                                               ; preds = %61, %57
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 1
  %76 = load i32, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %65
  %78 = phi i32 [ %73, %65 ], [ %76, %74 ]
  %79 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #5
  %80 = tail call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 %3) #5
  store i32 %80, i32* %10, align 4
  %81 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 9
  %82 = load i8, i8* %81, align 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %103, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 5, i64 0
  %86 = bitcast %union.int_mv* %85 to %struct.mv*
  %87 = bitcast %union.int_mv* %85 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = sext i16 %88 to i32
  %90 = add nsw i32 %89, 3
  %91 = lshr i16 %88, 15
  %92 = xor i16 %91, 1
  %93 = zext i16 %92 to i32
  %94 = add nsw i32 %90, %93
  %95 = getelementptr inbounds %struct.mv, %struct.mv* %86, i64 0, i32 1
  %96 = load i16, i16* %95, align 2
  %97 = sext i16 %96 to i32
  %98 = add nsw i32 %97, 3
  %99 = lshr i16 %96, 15
  %100 = xor i16 %99, 1
  %101 = zext i16 %100 to i32
  %102 = add nsw i32 %98, %101
  br label %116

103:                                              ; preds = %77
  %104 = lshr i32 %80, 31
  %105 = shl i32 %80, 16
  %106 = ashr exact i32 %105, 16
  %107 = add nsw i32 %106, 3
  %108 = lshr i32 %80, 15
  %109 = and i32 %108, 1
  %110 = xor i32 %109, 1
  %111 = add nsw i32 %107, %110
  %112 = ashr i32 %80, 16
  %113 = add nsw i32 %112, 3
  %114 = xor i32 %104, 1
  %115 = add nsw i32 %113, %114
  br label %116

116:                                              ; preds = %103, %84
  %117 = phi i32 [ %115, %103 ], [ %102, %84 ]
  %118 = phi i32 [ %111, %103 ], [ %94, %84 ]
  %119 = lshr i32 %118, 3
  %120 = ashr i32 %117, 3
  %121 = shl nsw i32 %120, 16
  %122 = and i32 %119, 65535
  %123 = or i32 %121, %122
  %124 = trunc i32 %120 to i16
  %125 = trunc i32 %119 to i16
  %126 = bitcast [65 x %struct.cand_mv_t]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %126) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %126, i8 0, i64 520, i1 false)
  %127 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 0, i32 0, i32 0
  store i16 %125, i16* %127, align 16
  %128 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 0, i32 0, i32 1
  store i16 %124, i16* %128, align 2
  %129 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 15
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %298

132:                                              ; preds = %116
  %133 = load i8, i8* %81, align 8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %298

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 30, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %298, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 0
  %141 = load i32, i32* %140, align 16
  %142 = load i32, i32* %47, align 4
  %143 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %144 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %143, align 16
  %145 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %144, i64 0, i32 24, i32 1
  %146 = load i8, i8* %145, align 1
  switch i8 %146, label %151 [
    i8 64, label %152
    i8 32, label %147
    i8 16, label %148
    i8 8, label %149
    i8 4, label %150
  ]

147:                                              ; preds = %139
  br label %152

148:                                              ; preds = %139
  br label %152

149:                                              ; preds = %139
  br label %152

150:                                              ; preds = %139
  br label %152

151:                                              ; preds = %139
  br label %152

152:                                              ; preds = %151, %150, %149, %148, %147, %139
  %153 = phi i64 [ 6, %151 ], [ 0, %150 ], [ 3, %149 ], [ 6, %148 ], [ 9, %147 ], [ 12, %139 ]
  %154 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %153
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %2 to i64
  %159 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = udiv i8 %160, %155
  %162 = zext i8 %161 to i32
  %163 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %158
  %164 = load i8, i8* %163, align 1
  %165 = udiv i8 %164, %157
  %166 = zext i8 %165 to i32
  %167 = icmp ule i8 %155, %160
  %168 = icmp ule i8 %157, %164
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %298

170:                                              ; preds = %152
  %171 = zext i8 %157 to i32
  %172 = zext i8 %155 to i32
  %173 = load %struct.SequenceHeader*, %struct.SequenceHeader** %30, align 16
  %174 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %173, i64 0, i32 7
  %175 = load i8, i8* %174, align 4
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = srem i32 %141, %179
  %181 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %176
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = srem i32 %142, %183
  %185 = sdiv i32 %180, %171
  %186 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 30, i32 6
  %187 = load i32, i32* %186, align 8
  %188 = sdiv i32 %184, %172
  %189 = mul nuw nsw i32 %166, %162
  %190 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 0, i32 1
  store i32 %189, i32* %190, align 4
  %191 = add nsw i32 %43, -1
  %192 = sext i32 %191 to i64
  %193 = zext i8 %161 to i64
  br label %194

194:                                              ; preds = %289, %170
  %195 = phi i32 [ 1, %170 ], [ %286, %289 ]
  %196 = phi i32 [ 0, %170 ], [ %290, %289 ]
  %197 = add i32 %196, %185
  %198 = mul i32 %197, %187
  %199 = add i32 %198, %188
  br label %200

200:                                              ; preds = %285, %194
  %201 = phi i64 [ %287, %285 ], [ 0, %194 ]
  %202 = phi i32 [ %286, %285 ], [ %195, %194 ]
  %203 = trunc i64 %201 to i32
  %204 = add i32 %199, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 30, i32 5, i64 %205, i64 %192
  %207 = bitcast %union.int_mv* %206 to i8*
  %208 = bitcast %union.int_mv* %206 to i16*
  %209 = load i16, i16* %208, align 4
  %210 = getelementptr inbounds i8, i8* %207, i64 2
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = zext i16 %212 to i32
  %214 = shl nuw i32 %213, 16
  %215 = zext i16 %209 to i32
  %216 = or i32 %214, %215
  %217 = icmp eq i32 %216, -2147450880
  br i1 %217, label %298, label %218

218:                                              ; preds = %200
  %219 = sext i16 %209 to i32
  %220 = add nsw i32 %219, 3
  %221 = lshr i16 %209, 15
  %222 = xor i16 %221, 1
  %223 = zext i16 %222 to i32
  %224 = add nsw i32 %220, %223
  %225 = ashr i32 %224, 3
  %226 = trunc i32 %225 to i16
  %227 = sext i16 %212 to i32
  %228 = add nsw i32 %227, 3
  %229 = lshr i16 %212, 15
  %230 = xor i16 %229, 1
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %228, %231
  %233 = ashr i32 %232, 3
  %234 = trunc i32 %233 to i16
  %235 = icmp sgt i32 %202, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %218
  %237 = sext i32 %202 to i64
  br label %279

238:                                              ; preds = %218
  %239 = add nsw i32 %225, 3
  %240 = lshr i32 %224, 31
  %241 = xor i32 %240, 1
  %242 = add nsw i32 %239, %241
  %243 = add nsw i32 %233, 3
  %244 = lshr i32 %232, 31
  %245 = xor i32 %244, 1
  %246 = add nsw i32 %243, %245
  %247 = sext i32 %202 to i64
  br label %248

248:                                              ; preds = %276, %238
  %249 = phi i64 [ 0, %238 ], [ %277, %276 ]
  %250 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %249, i32 0, i32 0
  %251 = load i16, i16* %250, align 8
  %252 = sext i16 %251 to i32
  %253 = add nsw i32 %252, 3
  %254 = lshr i16 %251, 15
  %255 = xor i16 %254, 1
  %256 = zext i16 %255 to i32
  %257 = add nsw i32 %253, %256
  %258 = xor i32 %257, %242
  %259 = icmp ult i32 %258, 8
  br i1 %259, label %260, label %276

260:                                              ; preds = %248
  %261 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %249, i32 0, i32 1
  %262 = load i16, i16* %261, align 2
  %263 = sext i16 %262 to i32
  %264 = add nsw i32 %263, 3
  %265 = lshr i16 %262, 15
  %266 = xor i16 %265, 1
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 %264, %267
  %269 = xor i32 %268, %246
  %270 = icmp ult i32 %269, 8
  br i1 %270, label %271, label %276

271:                                              ; preds = %260
  %272 = and i64 %249, 4294967295
  %273 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %272, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %273, align 4
  br label %285

276:                                              ; preds = %260, %248
  %277 = add nuw nsw i64 %249, 1
  %278 = icmp eq i64 %277, %247
  br i1 %278, label %279, label %248

279:                                              ; preds = %276, %236
  %280 = phi i64 [ %237, %236 ], [ %247, %276 ]
  %281 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %280, i32 0, i32 0
  store i16 %226, i16* %281, align 8
  %282 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %280, i32 0, i32 1
  store i16 %234, i16* %282, align 2
  %283 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %280, i32 1
  store i32 1, i32* %283, align 4
  %284 = add nsw i32 %202, 1
  br label %285

285:                                              ; preds = %279, %271
  %286 = phi i32 [ %202, %271 ], [ %284, %279 ]
  %287 = add nuw nsw i64 %201, 1
  %288 = icmp ult i64 %287, %193
  br i1 %288, label %200, label %289

289:                                              ; preds = %285
  %290 = add nuw nsw i32 %196, 1
  %291 = icmp ult i32 %290, %166
  br i1 %291, label %194, label %292

292:                                              ; preds = %289
  %293 = shl nuw nsw i32 %162, 1
  %294 = mul nuw nsw i32 %293, %166
  %295 = icmp sgt i32 %286, 2
  br i1 %295, label %296, label %298

296:                                              ; preds = %292
  %297 = sext i32 %286 to i64
  call void @qsort(i8* nonnull %126, i64 %297, i64 8, i32 (i8*, i8*)* nonnull @compare_weight) #5
  br label %298

298:                                              ; preds = %200, %296, %292, %152, %135, %116, %132
  %299 = phi i32 [ 1, %132 ], [ 1, %116 ], [ 1, %135 ], [ %286, %296 ], [ %286, %292 ], [ 1, %152 ], [ %202, %200 ]
  %300 = phi i32 [ 0, %132 ], [ 0, %116 ], [ 0, %135 ], [ %294, %296 ], [ %294, %292 ], [ 0, %152 ], [ 0, %200 ]
  %301 = icmp eq i32 %5, 2147483647
  br i1 %301, label %326, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 0
  %304 = load i8, i8* %303, align 16
  %305 = zext i8 %304 to i64
  %306 = icmp slt i32 %5, 1
  %307 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 %305, i32 1
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %326, label %309

309:                                              ; preds = %302
  %310 = shl i32 %5, 1
  %311 = sext i32 %78 to i64
  br label %312

312:                                              ; preds = %312, %309
  %313 = phi i64 [ %323, %312 ], [ %311, %309 ]
  %314 = trunc i64 %313 to i32
  %315 = xor i32 %314, -1
  %316 = add i32 %308, %315
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 %305, i32 3, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, %310
  %321 = icmp sgt i32 %316, 0
  %322 = and i1 %320, %321
  %323 = add nsw i64 %313, 1
  br i1 %322, label %312, label %324

324:                                              ; preds = %312
  %325 = trunc i64 %313 to i32
  br label %326

326:                                              ; preds = %324, %302, %298
  %327 = phi i32 [ %78, %298 ], [ %308, %302 ], [ %325, %324 ]
  %328 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %328) #5
  %329 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 0
  %330 = getelementptr inbounds %union.int_mv, %union.int_mv* %7, i64 0, i32 0
  %331 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %331, i8 -86, i64 20, i1 false)
  store i32 -2147450880, i32* %330, align 4
  %332 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 70
  %333 = load i32, i32* %332, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %349, label %335

335:                                              ; preds = %326
  %336 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %337 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %336, align 16
  %338 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 46
  %339 = load i8, i8* %338, align 16
  %340 = zext i8 %339 to i64
  %341 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %337, i64 0, i32 6, i32 0, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 3
  br i1 %343, label %344, label %349

344:                                              ; preds = %335
  %345 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 30
  %346 = load i32, i32* %345, align 4
  %347 = icmp slt i32 %346, 3
  %348 = zext i1 %347 to i32
  br label %349

349:                                              ; preds = %326, %335, %344
  %350 = phi i32 [ 0, %335 ], [ 0, %326 ], [ %348, %344 ]
  %351 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 0
  %352 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %352) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %352, i8 -86, i64 216, i1 false)
  call void @av1_make_default_fullpel_ms_params(%struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* nonnull %11, %struct.search_site_config* %351, i32 %350) #5
  %353 = load i8, i8* %81, align 8
  switch i8 %353, label %413 [
    i8 0, label %354
    i8 1, label %410
  ]

354:                                              ; preds = %349
  %355 = icmp sgt i32 %299, 0
  br i1 %355, label %356, label %413

356:                                              ; preds = %354
  %357 = icmp eq i32 %299, 1
  %358 = select i1 %357, i64 1, i64 2
  %359 = bitcast i32* %15 to i8*
  %360 = bitcast i32* %15 to i16*
  %361 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %16, i64 0, i32 1
  %362 = bitcast i32* %17 to i8*
  %363 = bitcast i32* %17 to i16*
  %364 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %18, i64 0, i32 1
  %365 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 3
  %366 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 13
  %367 = mul nsw i32 %300, 3
  br label %368

368:                                              ; preds = %398, %356
  %369 = phi i64 [ %407, %398 ], [ 0, %356 ]
  %370 = phi i32 [ %401, %398 ], [ 2147483647, %356 ]
  %371 = phi i32 [ %404, %398 ], [ 0, %356 ]
  %372 = phi i16 [ %400, %398 ], [ -32768, %356 ]
  %373 = phi i16 [ %399, %398 ], [ -32768, %356 ]
  %374 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %369, i32 0, i32 0
  %375 = load i16, i16* %374, align 8
  %376 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %369, i32 0, i32 1
  %377 = load i16, i16* %376, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #5
  store i16 -21846, i16* %360, align 4
  store i16 -21846, i16* %361, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %362) #5
  store i16 -21846, i16* %363, align 4
  store i16 -21846, i16* %364, align 2
  %378 = load i8, i8* %365, align 4
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %384, label %380

380:                                              ; preds = %368
  %381 = load i32, i32* %366, align 4
  %382 = icmp eq i32 %381, 0
  %383 = select i1 %382, i32* null, i32* %329
  br label %384

384:                                              ; preds = %368, %380
  %385 = phi i32* [ null, %368 ], [ %383, %380 ]
  %386 = zext i16 %377 to i32
  %387 = shl nuw i32 %386, 16
  %388 = zext i16 %375 to i32
  %389 = or i32 %387, %388
  %390 = call i32 @av1_full_pixel_search(i32 %389, %struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, i32 %327, i32* %385, %struct.fullpel_mv* nonnull %16, %struct.fullpel_mv* nonnull %18) #5
  %391 = icmp slt i32 %390, %370
  br i1 %391, label %392, label %398

392:                                              ; preds = %384
  %393 = load i32, i32* %15, align 4
  store i32 %393, i32* %330, align 4
  %394 = load i32, i32* %17, align 4
  %395 = trunc i32 %394 to i16
  %396 = lshr i32 %394, 16
  %397 = trunc i32 %396 to i16
  br label %398

398:                                              ; preds = %392, %384
  %399 = phi i16 [ %397, %392 ], [ %373, %384 ]
  %400 = phi i16 [ %395, %392 ], [ %372, %384 ]
  %401 = phi i32 [ %390, %392 ], [ %370, %384 ]
  %402 = getelementptr inbounds [65 x %struct.cand_mv_t], [65 x %struct.cand_mv_t]* %12, i64 0, i64 %369, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = add nsw i32 %403, %371
  %405 = shl nsw i32 %404, 2
  %406 = icmp sle i32 %405, %367
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %362) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #5
  %407 = add nuw nsw i64 %369, 1
  %408 = icmp ult i64 %407, %358
  %409 = and i1 %406, %408
  br i1 %409, label %368, label %413

410:                                              ; preds = %349
  %411 = bitcast %union.int_mv* %7 to %struct.fullpel_mv*
  %412 = call i32 @av1_obmc_full_pixel_search(i32 %123, %struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, i32 %327, %struct.fullpel_mv* %411) #5
  br label %413

413:                                              ; preds = %398, %354, %349, %410
  %414 = phi i16 [ -32768, %349 ], [ -32768, %410 ], [ -32768, %354 ], [ %399, %398 ]
  %415 = phi i16 [ -32768, %349 ], [ -32768, %410 ], [ -32768, %354 ], [ %400, %398 ]
  %416 = phi i32 [ 2147483647, %349 ], [ %412, %410 ], [ 2147483647, %354 ], [ %401, %398 ]
  br i1 %51, label %417, label %421

417:                                              ; preds = %413
  %418 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %40
  %419 = bitcast %struct.buf_2d* %418 to i8*
  %420 = bitcast [3 x %struct.buf_2d]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %419, i8* nonnull align 16 %420, i64 32, i1 false)
  br i1 %34, label %719, label %421

421:                                              ; preds = %719, %417, %413
  %422 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 9
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %475, label %425

425:                                              ; preds = %421
  %426 = load i8, i8* %81, align 8
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %475

428:                                              ; preds = %425
  %429 = load i32, i32* %330, align 4
  %430 = icmp eq i32 %429, -2147450880
  br i1 %430, label %475, label %431

431:                                              ; preds = %428
  %432 = bitcast %union.int_mv* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %432) #5
  %433 = getelementptr inbounds %union.int_mv, %union.int_mv* %19, i64 0, i32 0
  %434 = bitcast %union.int_mv* %7 to %struct.fullpel_mv*
  %435 = shl i32 %429, 3
  %436 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %434, i64 0, i32 1
  %437 = load i16, i16* %436, align 2
  %438 = shl i16 %437, 3
  %439 = zext i16 %438 to i32
  %440 = shl nuw i32 %439, 16
  %441 = and i32 %435, 65528
  %442 = or i32 %440, %441
  store i32 %442, i32* %433, align 4
  %443 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 28
  %444 = load i16, i16* %443, align 1
  %445 = lshr i16 %444, 4
  %446 = and i16 %445, 3
  %447 = bitcast %union.int_mv* %19 to %struct.mv*
  %448 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 0, i64 0
  %449 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 5
  %450 = load i32**, i32*** %449, align 8
  %451 = call i32 @av1_mv_bit_cost(%struct.mv* nonnull %447, %struct.mv* nonnull %11, i32* %448, i32** %450, i32 108) #5
  %452 = load i32, i32* %433, align 4
  %453 = zext i16 %446 to i64
  %454 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 %453, i32 4, i32 0
  store i32 %452, i32* %454, align 4
  %455 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 %453, i32 5
  store i32 %451, i32* %455, align 8
  %456 = icmp eq i16 %446, 0
  br i1 %456, label %462, label %457

457:                                              ; preds = %431
  %458 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 %453, i32 1
  %459 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 0, i32 4, i32 0
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %452, %460
  br i1 %461, label %463, label %472

462:                                              ; preds = %706, %710, %472, %704, %431
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %432) #5
  br label %475

463:                                              ; preds = %457
  %464 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 0, i32 5
  %465 = load i32, i32* %464, align 8
  %466 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 0, i32 1
  %467 = load i32, i32* %466, align 8
  %468 = add nsw i32 %467, %465
  %469 = load i32, i32* %458, align 8
  %470 = add nsw i32 %469, %451
  %471 = icmp sgt i32 %468, %470
  br i1 %471, label %472, label %474

472:                                              ; preds = %463, %457
  %473 = icmp eq i16 %446, 1
  br i1 %473, label %462, label %691

474:                                              ; preds = %710, %695, %463
  store i32 -2147450880, i32* %330, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %432) #5
  br label %690

475:                                              ; preds = %462, %428, %421, %425
  %476 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 2
  %477 = load i8, i8* %476, align 2, !range !2
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %491, label %479

479:                                              ; preds = %475
  %480 = bitcast %union.int_mv* %7 to %struct.fullpel_mv*
  %481 = bitcast %union.int_mv* %7 to i16*
  %482 = load i16, i16* %481, align 2
  %483 = shl i16 %482, 3
  %484 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %480, i64 0, i32 1
  %485 = load i16, i16* %484, align 2
  %486 = shl i16 %485, 3
  %487 = zext i16 %486 to i32
  %488 = shl nuw i32 %487, 16
  %489 = zext i16 %483 to i32
  %490 = or i32 %488, %489
  store i32 %490, i32* %330, align 4
  br label %491

491:                                              ; preds = %475, %479
  %492 = icmp eq i32 %416, 2147483647
  br i1 %492, label %684, label %493

493:                                              ; preds = %491
  %494 = load i8, i8* %476, align 2, !range !2
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %684

496:                                              ; preds = %493
  %497 = bitcast [3 x %union.int_mv]* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %497) #5
  %498 = getelementptr inbounds [3 x %union.int_mv], [3 x %union.int_mv]* %20, i64 0, i64 0
  %499 = getelementptr inbounds [3 x %union.int_mv], [3 x %union.int_mv]* %20, i64 0, i64 0, i32 0
  %500 = getelementptr inbounds [3 x %union.int_mv], [3 x %union.int_mv]* %20, i64 0, i64 1, i32 0
  %501 = getelementptr inbounds [3 x %union.int_mv], [3 x %union.int_mv]* %20, i64 0, i64 2, i32 0
  store i32 -2147450880, i32* %499, align 4
  store i32 -2147450880, i32* %500, align 4
  store i32 -2147450880, i32* %501, align 4
  %502 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %502) #5
  store i32 -1431655766, i32* %21, align 4
  %503 = bitcast %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %503) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %503, i8 -86, i64 168, i1 false)
  call void @av1_make_default_subpel_ms_params(%struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* nonnull %11, i32* nonnull %329) #5
  %504 = bitcast %union.int_mv* %7 to %struct.fullpel_mv*
  %505 = bitcast %union.int_mv* %7 to i16*
  %506 = load i16, i16* %505, align 2
  %507 = shl i16 %506, 3
  %508 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %504, i64 0, i32 1
  %509 = load i16, i16* %508, align 2
  %510 = shl i16 %509, 3
  %511 = zext i16 %510 to i32
  %512 = shl nuw i32 %511, 16
  %513 = zext i16 %507 to i32
  %514 = or i32 %512, %513
  %515 = load i8, i8* %81, align 8
  switch i8 %515, label %683 [
    i8 0, label %516
    i8 1, label %678
  ]

516:                                              ; preds = %496
  %517 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 7
  %518 = load i8, i8* %517, align 2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %671, label %520

520:                                              ; preds = %516
  %521 = zext i16 %414 to i32
  %522 = shl nuw i32 %521, 16
  %523 = zext i16 %415 to i32
  %524 = or i32 %522, %523
  %525 = icmp eq i32 %524, -2147450880
  br i1 %525, label %533, label %526

526:                                              ; preds = %520
  %527 = load i32, i32* %330, align 4
  %528 = icmp eq i32 %524, %527
  br i1 %528, label %533, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 18
  %531 = load i32, i32* %530, align 8
  %532 = icmp slt i32 %531, 2
  br label %533

533:                                              ; preds = %526, %520, %529
  %534 = phi i1 [ false, %526 ], [ false, %520 ], [ %532, %529 ]
  %535 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %536 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %535, align 8
  %537 = bitcast %union.int_mv* %7 to %struct.mv*
  %538 = sext i8 %42 to i64
  %539 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 61, i64 %538
  %540 = call i32 %536(%struct.macroblockd* %28, %struct.AV1Common* %29, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %514, %struct.mv* %537, i32* nonnull %21, i32* %539, %union.int_mv* nonnull %498) #5
  br i1 %534, label %541, label %683

541:                                              ; preds = %533
  %542 = bitcast %struct.BUFFER_SET* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %542) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %542, i8 -86, i64 40, i1 false)
  %543 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 3
  %544 = bitcast %struct.buf_2d* %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = bitcast %struct.BUFFER_SET* %23 to i64*
  store i64 %545, i64* %546, align 8
  %547 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %23, i64 0, i32 0, i64 1
  %548 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 3
  %549 = bitcast %struct.buf_2d* %548 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = bitcast i8** %547 to i64*
  store i64 %550, i64* %551, align 8
  %552 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %23, i64 0, i32 0, i64 2
  %553 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 3
  %554 = bitcast %struct.buf_2d* %553 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = bitcast i8** %552 to i64*
  store i64 %555, i64* %556, align 8
  %557 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %23, i64 0, i32 1, i64 0
  %558 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 3, i32 4
  %559 = load i32, i32* %558, align 8
  store i32 %559, i32* %557, align 8
  %560 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %23, i64 0, i32 1, i64 1
  %561 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 3, i32 4
  %562 = load i32, i32* %561, align 8
  store i32 %562, i32* %560, align 4
  %563 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %23, i64 0, i32 1, i64 2
  %564 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 3, i32 4
  %565 = load i32, i32* %564, align 8
  store i32 %565, i32* %563, align 8
  %566 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 18
  %567 = load i32, i32* %566, align 8
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %599

569:                                              ; preds = %541
  %570 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 5, i64 0, i32 0
  %571 = load i32, i32* %330, align 4
  store i32 %571, i32* %570, align 8
  call void @av1_enc_build_inter_predictor(%struct.AV1Common* %29, %struct.macroblockd* %28, i32 %46, i32 %48, %struct.BUFFER_SET* nonnull %23, i8 zeroext %2, i32 0, i32 0) #5
  call void @av1_subtract_plane(%struct.macroblock* %1, i8 zeroext %2, i32 0) #5
  %572 = bitcast %struct.RD_STATS* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %572) #5
  %573 = bitcast %struct.RD_STATS* %24 to i64*
  store i64 -6148914691236517206, i64* %573, align 8
  %574 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %24, i64 0, i32 0
  store i32 0, i32* %574, align 8
  %575 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %24, i64 0, i32 1
  %576 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %24, i64 0, i32 4
  %577 = bitcast i64* %575 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %577, i8 0, i64 24, i1 false) #5
  store i32 1, i32* %576, align 8
  %578 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %24, i64 0, i32 5
  store i32 0, i32* %578, align 4
  %579 = zext i8 %2 to i64
  %580 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %579
  %581 = load i8, i8* %580, align 1
  %582 = call i64 @av1_estimate_txfm_yrd(%struct.AV1_COMP* %0, %struct.macroblock* %1, %struct.RD_STATS* nonnull %24, i64 9223372036854775807, i8 zeroext %2, i8 zeroext %581) #5
  %583 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 0, i64 0
  %584 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 5
  %585 = load i32**, i32*** %584, align 8
  %586 = call i32 @av1_mv_bit_cost(%struct.mv* %537, %struct.mv* nonnull %11, i32* %583, i32** %585, i32 108) #5
  %587 = load i32, i32* %574, align 8
  %588 = add nsw i32 %587, %586
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 17
  %591 = load i32, i32* %590, align 8
  %592 = sext i32 %591 to i64
  %593 = mul nsw i64 %589, %592
  %594 = add nsw i64 %593, 256
  %595 = ashr i64 %594, 9
  %596 = load i64, i64* %575, align 8
  %597 = shl i64 %596, 7
  %598 = add nsw i64 %595, %597
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %572) #5
  br label %599

599:                                              ; preds = %541, %569
  %600 = phi i64 [ 9223372036854775807, %541 ], [ %598, %569 ]
  %601 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %601) #5
  %602 = bitcast i32* %25 to i16*
  store i16 -21846, i16* %602, align 4
  %603 = getelementptr inbounds %struct.mv, %struct.mv* %26, i64 0, i32 1
  store i16 -21846, i16* %603, align 2
  %604 = shl i16 %415, 3
  %605 = shl i16 %414, 3
  %606 = zext i16 %605 to i32
  %607 = shl nuw i32 %606, 16
  %608 = zext i16 %604 to i32
  %609 = or i32 %607, %608
  %610 = sext i16 %605 to i32
  %611 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 0
  %612 = load i32, i32* %611, align 8
  %613 = icmp sgt i32 %612, %610
  br i1 %613, label %670, label %614

614:                                              ; preds = %599
  %615 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = icmp slt i32 %616, %610
  br i1 %617, label %670, label %618

618:                                              ; preds = %614
  %619 = sext i16 %604 to i32
  %620 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 2
  %621 = load i32, i32* %620, align 8
  %622 = icmp sgt i32 %621, %619
  br i1 %622, label %670, label %623

623:                                              ; preds = %618
  %624 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 3
  %625 = load i32, i32* %624, align 4
  %626 = icmp slt i32 %625, %619
  br i1 %626, label %670, label %627

627:                                              ; preds = %623
  %628 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %535, align 8
  %629 = call i32 %628(%struct.macroblockd* %28, %struct.AV1Common* %29, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %609, %struct.mv* nonnull %26, i32* nonnull %21, i32* %539, %union.int_mv* nonnull %498) #5
  %630 = load i32, i32* %566, align 8
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %666

632:                                              ; preds = %627
  %633 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %38, i64 0, i32 5, i64 0, i32 0
  %634 = load i32, i32* %25, align 4
  store i32 %634, i32* %633, align 8
  call void @av1_enc_build_inter_predictor(%struct.AV1Common* %29, %struct.macroblockd* %28, i32 %46, i32 %48, %struct.BUFFER_SET* nonnull %23, i8 zeroext %2, i32 0, i32 0) #5
  call void @av1_subtract_plane(%struct.macroblock* %1, i8 zeroext %2, i32 0) #5
  %635 = bitcast %struct.RD_STATS* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %635) #5
  %636 = bitcast %struct.RD_STATS* %27 to i64*
  store i64 -6148914691236517206, i64* %636, align 8
  %637 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %27, i64 0, i32 0
  store i32 0, i32* %637, align 8
  %638 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %27, i64 0, i32 1
  %639 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %27, i64 0, i32 4
  %640 = bitcast i64* %638 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %640, i8 0, i64 24, i1 false) #5
  store i32 1, i32* %639, align 8
  %641 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %27, i64 0, i32 5
  store i32 0, i32* %641, align 4
  %642 = zext i8 %2 to i64
  %643 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %642
  %644 = load i8, i8* %643, align 1
  %645 = call i64 @av1_estimate_txfm_yrd(%struct.AV1_COMP* %0, %struct.macroblock* %1, %struct.RD_STATS* nonnull %27, i64 9223372036854775807, i8 zeroext %2, i8 zeroext %644) #5
  %646 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 0, i64 0
  %647 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 5
  %648 = load i32**, i32*** %647, align 8
  %649 = call i32 @av1_mv_bit_cost(%struct.mv* nonnull %26, %struct.mv* nonnull %11, i32* %646, i32** %648, i32 108) #5
  %650 = load i32, i32* %637, align 8
  %651 = add nsw i32 %650, %649
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 17
  %654 = load i32, i32* %653, align 8
  %655 = sext i32 %654 to i64
  %656 = mul nsw i64 %652, %655
  %657 = add nsw i64 %656, 256
  %658 = ashr i64 %657, 9
  %659 = load i64, i64* %638, align 8
  %660 = shl i64 %659, 7
  %661 = add nsw i64 %658, %660
  %662 = icmp slt i64 %661, %600
  br i1 %662, label %663, label %665

663:                                              ; preds = %632
  %664 = load i32, i32* %25, align 4
  store i32 %664, i32* %330, align 4
  br label %665

665:                                              ; preds = %663, %632
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %635) #5
  br label %670

666:                                              ; preds = %627
  %667 = icmp slt i32 %629, %540
  br i1 %667, label %668, label %670

668:                                              ; preds = %666
  %669 = load i32, i32* %25, align 4
  store i32 %669, i32* %330, align 4
  br label %670

670:                                              ; preds = %599, %614, %618, %665, %668, %666, %623
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %601) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %542) #5
  br label %683

671:                                              ; preds = %516
  %672 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %673 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %672, align 8
  %674 = bitcast %union.int_mv* %7 to %struct.mv*
  %675 = sext i8 %42 to i64
  %676 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 61, i64 %675
  %677 = call i32 %673(%struct.macroblockd* %28, %struct.AV1Common* %29, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %514, %struct.mv* %674, i32* nonnull %21, i32* %676, %union.int_mv* null) #5
  br label %683

678:                                              ; preds = %496
  %679 = bitcast %union.int_mv* %7 to %struct.mv*
  %680 = sext i8 %42 to i64
  %681 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 61, i64 %680
  %682 = call i32 @av1_find_best_obmc_sub_pixel_tree_up(%struct.macroblockd* %28, %struct.AV1Common* %29, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %514, %struct.mv* %679, i32* nonnull %21, i32* %681, %union.int_mv* null) #5
  br label %683

683:                                              ; preds = %533, %670, %496, %671, %678
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %503) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %502) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %497) #5
  br label %684

684:                                              ; preds = %491, %683, %493
  %685 = bitcast %union.int_mv* %7 to %struct.mv*
  %686 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 0, i64 0
  %687 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %50, i64 0, i32 5
  %688 = load i32**, i32*** %687, align 8
  %689 = call i32 @av1_mv_bit_cost(%struct.mv* %685, %struct.mv* nonnull %11, i32* %686, i32** %688, i32 108) #5
  store i32 %689, i32* %4, align 4
  br label %690

690:                                              ; preds = %474, %684
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %352) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %328) #5
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %126) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #5
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %39) #5
  ret void

691:                                              ; preds = %472
  %692 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 1, i32 4, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = icmp eq i32 %452, %693
  br i1 %694, label %695, label %704

695:                                              ; preds = %691
  %696 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 1, i32 5
  %697 = load i32, i32* %696, align 8
  %698 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 1, i32 1
  %699 = load i32, i32* %698, align 8
  %700 = add nsw i32 %699, %697
  %701 = load i32, i32* %458, align 8
  %702 = add nsw i32 %701, %451
  %703 = icmp sgt i32 %700, %702
  br i1 %703, label %704, label %474

704:                                              ; preds = %695, %691
  %705 = icmp eq i16 %446, 2
  br i1 %705, label %462, label %706

706:                                              ; preds = %704
  %707 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 2, i32 4, i32 0
  %708 = load i32, i32* %707, align 4
  %709 = icmp eq i32 %452, %708
  br i1 %709, label %710, label %462

710:                                              ; preds = %706
  %711 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 2, i32 5
  %712 = load i32, i32* %711, align 8
  %713 = getelementptr inbounds %struct.inter_mode_info, %struct.inter_mode_info* %6, i64 2, i32 1
  %714 = load i32, i32* %713, align 8
  %715 = add nsw i32 %714, %712
  %716 = load i32, i32* %458, align 8
  %717 = add nsw i32 %716, %451
  %718 = icmp sgt i32 %715, %717
  br i1 %718, label %462, label %474

719:                                              ; preds = %417
  %720 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 %40
  %721 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %9, i64 0, i64 1
  %722 = bitcast %struct.buf_2d* %720 to i8*
  %723 = bitcast %struct.buf_2d* %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %722, i8* align 16 %723, i64 32, i1 false)
  %724 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 %40
  %725 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %9, i64 0, i64 2
  %726 = bitcast %struct.buf_2d* %724 to i8*
  %727 = bitcast %struct.buf_2d* %725 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %726, i8* align 16 %727, i64 32, i1 false)
  br label %421

728:                                              ; preds = %53
  %729 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %9, i64 0, i64 1
  %730 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 %40
  %731 = bitcast %struct.buf_2d* %729 to i8*
  %732 = bitcast %struct.buf_2d* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %731, i8* align 16 %732, i64 32, i1 false)
  %733 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %9, i64 0, i64 2
  %734 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 %40
  %735 = bitcast %struct.buf_2d* %733 to i8*
  %736 = bitcast %struct.buf_2d* %734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %735, i8* align 16 %736, i64 32, i1 false)
  br label %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @av1_setup_pre_planes(%struct.macroblockd*, i32, %struct.yv12_buffer_config*, i32, i32, %struct.scale_factors*, i32) local_unnamed_addr #2

declare i32 @av1_init_search_range(i32) local_unnamed_addr #2

declare i32 @av1_get_ref_mv(%struct.macroblock*, i32) local_unnamed_addr #2

declare void @av1_make_default_fullpel_ms_params(%struct.FULLPEL_MOTION_SEARCH_PARAMS*, %struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, %struct.mv*, %struct.search_site_config*, i32) local_unnamed_addr #2

declare i32 @av1_full_pixel_search(i32, %struct.FULLPEL_MOTION_SEARCH_PARAMS*, i32, i32*, %struct.fullpel_mv*, %struct.fullpel_mv*) local_unnamed_addr #2

declare i32 @av1_obmc_full_pixel_search(i32, %struct.FULLPEL_MOTION_SEARCH_PARAMS*, i32, %struct.fullpel_mv*) local_unnamed_addr #2

declare i32 @av1_mv_bit_cost(%struct.mv*, %struct.mv*, i32*, i32**, i32) local_unnamed_addr #2

declare void @av1_make_default_subpel_ms_params(%struct.SUBPEL_MOTION_SEARCH_PARAMS*, %struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, %struct.mv*, i32*) local_unnamed_addr #2

declare void @av1_enc_build_inter_predictor(%struct.AV1Common*, %struct.macroblockd*, i32, i32, %struct.BUFFER_SET*, i8 zeroext, i32, i32) local_unnamed_addr #2

declare void @av1_subtract_plane(%struct.macroblock*, i8 zeroext, i32) local_unnamed_addr #2

declare i64 @av1_estimate_txfm_yrd(%struct.AV1_COMP*, %struct.macroblock*, %struct.RD_STATS*, i64, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare i32 @av1_find_best_obmc_sub_pixel_tree_up(%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_joint_motion_search(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, %union.int_mv*, i8*, i32, i32* nocapture, i32) local_unnamed_addr #0 {
  %9 = alloca [2 x %union.int_mv], align 4
  %10 = alloca [2 x %union.int_mv], align 4
  %11 = alloca %struct.InterPredParams, align 8
  %12 = alloca [2 x [3 x %struct.buf_2d]], align 16
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to [2 x i32]*
  %15 = alloca [32768 x i8], align 16
  %16 = alloca %union.int_mv, align 4
  %17 = alloca %union.int_mv, align 4
  %18 = alloca [2 x %struct.buf_2d], align 16
  %19 = alloca %struct.FULLPEL_MOTION_SEARCH_PARAMS, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.SUBPEL_MOTION_SEARCH_PARAMS, align 8
  %23 = alloca i32, align 4
  %24 = bitcast i32* %23 to %struct.mv*
  %25 = alloca %union.int_mv, align 4
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %28 = load %struct.SequenceHeader*, %struct.SequenceHeader** %27, align 16
  %29 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %28, i64 0, i32 27
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  %32 = select i1 %31, i32 3, i32 1
  %33 = zext i8 %2 to i64
  %34 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %33
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2
  %41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  %42 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %41, align 8
  %43 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %42, align 8
  %44 = bitcast [2 x %union.int_mv]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #5
  %45 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %9, i64 0, i64 0, i32 0
  %46 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %9, i64 0, i64 1, i32 0
  %47 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %45, align 4
  %49 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 1, i32 0
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %46, align 4
  %51 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 6, i64 0
  %52 = load i8, i8* %51, align 8
  %53 = sext i8 %52 to i32
  %54 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 6, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 21
  %58 = load %struct.MvCosts*, %struct.MvCosts** %57, align 16
  %59 = bitcast [2 x %union.int_mv]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #5
  %60 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %10, i64 0, i64 0, i32 0
  store i32 -1431655766, i32* %60, align 4
  %61 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %10, i64 0, i64 1, i32 0
  store i32 -1431655766, i32* %61, align 4
  %62 = bitcast %struct.InterPredParams* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %62) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 216, i1 false)
  %63 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %40, i64 0, i32 0
  %64 = load i32, i32* %63, align 16
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = bitcast [2 x [3 x %struct.buf_2d]]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %67) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 192, i1 false)
  %68 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #5
  store i64 9223372034707292159, i64* %13, align 8
  %69 = tail call %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP* %0, i32 %53) #5
  %70 = tail call %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP* %0, i32 %56) #5
  %71 = getelementptr inbounds [32768 x i8], [32768 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %71) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 32768, i1 false)
  %72 = bitcast %union.int_mv* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #5
  %73 = getelementptr inbounds %union.int_mv, %union.int_mv* %16, i64 0, i32 0
  store i32 -1431655766, i32* %73, align 4
  %74 = bitcast %union.int_mv* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #5
  %75 = getelementptr inbounds %union.int_mv, %union.int_mv* %17, i64 0, i32 0
  store i32 -1431655766, i32* %75, align 4
  %76 = bitcast [2 x %struct.buf_2d]* %18 to i8*
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4
  %78 = bitcast [2 x %struct.buf_2d]* %77 to i8*
  %79 = getelementptr inbounds [2 x %struct.buf_2d], [2 x %struct.buf_2d]* %18, i64 0, i64 1
  %80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 1
  %81 = bitcast %struct.buf_2d* %79 to i8*
  %82 = bitcast %struct.buf_2d* %80 to i8*
  %83 = shl nsw i32 %64, 2
  %84 = shl nsw i32 %66, 2
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 40
  %86 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 14
  %87 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3
  %88 = bitcast %struct.ConvolveParams* %87 to i8*
  %89 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 0
  %90 = getelementptr inbounds i8, i8* %88, i64 4
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 1
  %93 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 2
  %94 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 3
  %95 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 4
  %96 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 5
  %97 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 6
  %98 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 7
  %99 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 8
  %100 = bitcast i32* %99 to i64*
  %101 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %19, i64 0, i32 0
  %102 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 0
  %103 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %19, i64 0, i32 2, i32 2
  %104 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %19, i64 0, i32 2, i32 3
  %105 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %19, i64 0, i32 2, i32 4
  %106 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %19, i64 0, i32 2, i32 5
  %107 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 17
  %108 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 17, i32 4
  %109 = bitcast %union.int_mv* %16 to %struct.fullpel_mv*
  %110 = bitcast %union.int_mv* %17 to %struct.fullpel_mv*
  %111 = icmp ne i32 %7, 0
  %112 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 2
  %113 = bitcast %union.int_mv* %16 to i16*
  %114 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %109, i64 0, i32 1
  %115 = bitcast i32* %20 to i8*
  %116 = bitcast i32* %21 to i8*
  %117 = bitcast %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22 to i8*
  %118 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 6, i32 2, i32 2
  %119 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 6, i32 2, i32 3
  %120 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 6, i32 2, i32 4
  %121 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 6, i32 2, i32 5
  %122 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 2
  %123 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %124 = bitcast %union.int_mv* %16 to %struct.mv*
  %125 = bitcast i32* %23 to i8*
  %126 = bitcast i32* %23 to i16*
  %127 = getelementptr inbounds %struct.mv, %struct.mv* %24, i64 0, i32 1
  %128 = bitcast %union.int_mv* %17 to i16*
  %129 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %110, i64 0, i32 1
  %130 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 0
  %131 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 1
  %132 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 2
  %133 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %22, i64 0, i32 4, i32 3
  %134 = icmp eq %struct.yv12_buffer_config* %69, null
  %135 = icmp eq %struct.yv12_buffer_config* %70, null
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %137 = bitcast [2 x %struct.buf_2d]* %18 to i8*
  %138 = bitcast %struct.buf_2d* %136 to i8*
  %139 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %140 = bitcast [2 x [3 x %struct.buf_2d]]* %12 to i8*
  %141 = bitcast %struct.buf_2d* %139 to i8*
  %142 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 0, i64 1
  %143 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 0
  %144 = bitcast %struct.buf_2d* %142 to i8*
  %145 = bitcast %struct.buf_2d* %143 to i8*
  %146 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 0, i64 2
  %147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 0
  %148 = bitcast %struct.buf_2d* %146 to i8*
  %149 = bitcast %struct.buf_2d* %147 to i8*
  %150 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 0
  %151 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 1
  %152 = bitcast %struct.buf_2d* %150 to i8*
  %153 = bitcast %struct.buf_2d* %151 to i8*
  %154 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 1
  %155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 1
  %156 = bitcast %struct.buf_2d* %154 to i8*
  %157 = bitcast %struct.buf_2d* %155 to i8*
  %158 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 2
  %159 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 1
  %160 = bitcast %struct.buf_2d* %158 to i8*
  %161 = bitcast %struct.buf_2d* %159 to i8*
  %162 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %163 = bitcast %struct.buf_2d* %162 to i8*
  %164 = bitcast [2 x [3 x %struct.buf_2d]]* %12 to i8*
  %165 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 0
  %166 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 0, i64 1
  %167 = bitcast %struct.buf_2d* %165 to i8*
  %168 = bitcast %struct.buf_2d* %166 to i8*
  %169 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 0
  %170 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 0, i64 2
  %171 = bitcast %struct.buf_2d* %169 to i8*
  %172 = bitcast %struct.buf_2d* %170 to i8*
  %173 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 1
  %174 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 0
  %175 = bitcast %struct.buf_2d* %173 to i8*
  %176 = bitcast %struct.buf_2d* %174 to i8*
  %177 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 1
  %178 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 1
  %179 = bitcast %struct.buf_2d* %177 to i8*
  %180 = bitcast %struct.buf_2d* %178 to i8*
  %181 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 1
  %182 = getelementptr inbounds [2 x [3 x %struct.buf_2d]], [2 x [3 x %struct.buf_2d]]* %12, i64 0, i64 1, i64 2
  %183 = bitcast %struct.buf_2d* %181 to i8*
  %184 = bitcast %struct.buf_2d* %182 to i8*
  br label %185

185:                                              ; preds = %361, %8
  %186 = phi i32 [ 0, %8 ], [ %364, %361 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %76) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 -86, i64 64, i1 false)
  %187 = and i32 %186, 1
  %188 = icmp ugt i32 %186, 1
  br i1 %188, label %189, label %228

189:                                              ; preds = %185
  %190 = xor i32 %187, 1
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %191, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %9, i64 0, i64 %191, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %193, %195
  br i1 %196, label %197, label %228

197:                                              ; preds = %189
  %198 = zext i32 %187 to i64
  %199 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %198
  %200 = getelementptr inbounds %union.int_mv, %union.int_mv* %199, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %9, i64 0, i64 %198
  %203 = getelementptr inbounds %union.int_mv, %union.int_mv* %202, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %201, %204
  br i1 %205, label %366, label %206

206:                                              ; preds = %197
  %207 = trunc i32 %204 to i16
  %208 = trunc i32 %201 to i16
  %209 = bitcast %union.int_mv* %199 to %struct.mv*
  %210 = getelementptr inbounds %struct.mv, %struct.mv* %209, i64 0, i32 1
  %211 = load i16, i16* %210, align 2
  %212 = ashr i16 %211, 3
  %213 = ashr i16 %208, 3
  %214 = bitcast %union.int_mv* %202 to %struct.mv*
  %215 = ashr i16 %207, 3
  %216 = getelementptr inbounds %struct.mv, %struct.mv* %214, i64 0, i32 1
  %217 = load i16, i16* %216, align 2
  %218 = ashr i16 %217, 3
  %219 = zext i16 %212 to i32
  %220 = shl nuw i32 %219, 16
  %221 = zext i16 %213 to i32
  %222 = or i32 %220, %221
  %223 = zext i16 %218 to i32
  %224 = shl nuw i32 %223, 16
  %225 = zext i16 %215 to i32
  %226 = or i32 %224, %225
  %227 = icmp eq i32 %222, %226
  br i1 %227, label %366, label %228

228:                                              ; preds = %206, %189, %185
  %229 = call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 0) #5
  store i32 %229, i32* %60, align 4
  br i1 %134, label %232, label %230

230:                                              ; preds = %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %140, i8* align 16 %141, i64 32, i1 false)
  br i1 %31, label %411, label %231

231:                                              ; preds = %230, %411
  call void @av1_setup_pre_planes(%struct.macroblockd* %40, i32 0, %struct.yv12_buffer_config* nonnull %69, i32 %64, i32 %66, %struct.scale_factors* null, i32 %32) #5
  br label %232

232:                                              ; preds = %228, %231
  %233 = call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 1) #5
  store i32 %233, i32* %61, align 4
  br i1 %135, label %394, label %392

234:                                              ; preds = %394
  %235 = zext i32 %187 to i64
  %236 = getelementptr inbounds [2 x %struct.buf_2d], [2 x %struct.buf_2d]* %18, i64 0, i64 %235
  %237 = bitcast %struct.buf_2d* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %78, i8* align 16 %237, i64 32, i1 false)
  br label %238

238:                                              ; preds = %394, %234
  %239 = phi i64 [ %235, %234 ], [ 0, %394 ]
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %101) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 216, i1 false)
  %240 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %10, i64 0, i64 %239
  %241 = bitcast %union.int_mv* %240 to %struct.mv*
  call void @av1_make_default_fullpel_ms_params(%struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %19, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* %241, %struct.search_site_config* %102, i32 0) #5
  store i8* %71, i8** %103, align 8
  store i8* %4, i8** %104, align 8
  store i32 %5, i32* %105, align 8
  store i32 %187, i32* %106, align 4
  %242 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %239
  %243 = bitcast %union.int_mv* %242 to %struct.mv*
  %244 = bitcast %union.int_mv* %242 to i16*
  %245 = load i16, i16* %244, align 2
  %246 = sext i16 %245 to i32
  %247 = add nsw i32 %246, 3
  %248 = lshr i16 %245, 15
  %249 = xor i16 %248, 1
  %250 = zext i16 %249 to i32
  %251 = add nsw i32 %247, %250
  %252 = ashr i32 %251, 3
  %253 = getelementptr inbounds %struct.mv, %struct.mv* %243, i64 0, i32 1
  %254 = load i16, i16* %253, align 2
  %255 = sext i16 %254 to i32
  %256 = add nsw i32 %255, 3
  %257 = lshr i16 %254, 15
  %258 = xor i16 %257, 1
  %259 = zext i16 %258 to i32
  %260 = add nsw i32 %256, %259
  %261 = ashr i32 %260, 3
  %262 = shl nsw i32 %261, 16
  %263 = and i32 %252, 65535
  %264 = or i32 %262, %263
  %265 = load i32, i32* %107, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %273

267:                                              ; preds = %238
  %268 = load i8, i8* %108, align 1
  %269 = icmp eq i8 %268, 2
  br i1 %269, label %273, label %270

270:                                              ; preds = %267
  %271 = call i32 @av1_full_pixel_search(i32 %264, %struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %19, i32 5, i32* null, %struct.fullpel_mv* nonnull %109, %struct.fullpel_mv* nonnull %110) #5
  %272 = load i32, i32* %75, align 4
  br label %276

273:                                              ; preds = %267, %238
  %274 = call i32 @av1_refining_search_8p_c(%struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %19, i32 %264, %struct.fullpel_mv* nonnull %109) #5
  %275 = load i32, i32* %73, align 4
  store i32 %275, i32* %75, align 4
  br label %276

276:                                              ; preds = %273, %270
  %277 = phi i32 [ %275, %273 ], [ %272, %270 ]
  %278 = phi i32 [ %274, %273 ], [ %271, %270 ]
  %279 = icmp eq i32 %277, -2147450880
  br i1 %279, label %284, label %280

280:                                              ; preds = %276
  %281 = load i32, i32* %73, align 4
  %282 = icmp ne i32 %277, %281
  %283 = and i1 %111, %282
  br label %284

284:                                              ; preds = %280, %276
  %285 = phi i1 [ false, %276 ], [ %283, %280 ]
  br i1 %396, label %286, label %287

286:                                              ; preds = %284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %78, i8* nonnull align 16 %76, i64 32, i1 false)
  br label %287

287:                                              ; preds = %286, %284
  br i1 %134, label %290, label %289

288:                                              ; preds = %289, %413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %137, i8* align 16 %138, i64 32, i1 false)
  br label %290

289:                                              ; preds = %287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %163, i8* nonnull align 16 %164, i64 32, i1 false)
  br i1 %31, label %413, label %288

290:                                              ; preds = %287, %288
  br i1 %135, label %410, label %408

291:                                              ; preds = %410
  %292 = getelementptr inbounds [2 x %struct.buf_2d], [2 x %struct.buf_2d]* %18, i64 0, i64 %239
  %293 = bitcast %struct.buf_2d* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %78, i8* align 16 %293, i64 32, i1 false)
  br label %294

294:                                              ; preds = %291, %410
  %295 = load i8, i8* %112, align 2, !range !2
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %306, label %297

297:                                              ; preds = %294
  %298 = load i16, i16* %113, align 4
  %299 = shl i16 %298, 3
  %300 = load i16, i16* %114, align 2
  %301 = shl i16 %300, 3
  %302 = zext i16 %301 to i32
  %303 = shl nuw i32 %302, 16
  %304 = zext i16 %299 to i32
  %305 = or i32 %303, %304
  store i32 %305, i32* %73, align 4
  br label %353

306:                                              ; preds = %294
  %307 = icmp eq i32 %278, 2147483647
  %308 = xor i1 %296, true
  %309 = or i1 %307, %308
  br i1 %309, label %353, label %310

310:                                              ; preds = %306
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #5
  store i32 -1431655766, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #5
  store i32 -1431655766, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %117) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 168, i1 false)
  call void @av1_make_default_subpel_ms_params(%struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* %241, i32* null) #5
  store i8* %71, i8** %118, align 8
  store i8* %4, i8** %119, align 8
  store i32 %5, i32* %120, align 8
  store i32 %187, i32* %121, align 4
  store i8 0, i8* %122, align 8
  %311 = load i16, i16* %113, align 4
  %312 = shl i16 %311, 3
  %313 = load i16, i16* %114, align 2
  %314 = shl i16 %313, 3
  %315 = zext i16 %314 to i32
  %316 = shl nuw i32 %315, 16
  %317 = zext i16 %312 to i32
  %318 = or i32 %316, %317
  %319 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %123, align 8
  %320 = call i32 %319(%struct.macroblockd* %40, %struct.AV1Common* %26, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %318, %struct.mv* nonnull %124, i32* nonnull %20, i32* nonnull %21, %union.int_mv* null) #5
  br i1 %285, label %321, label %351

321:                                              ; preds = %310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #5
  store i16 -21846, i16* %126, align 4
  store i16 -21846, i16* %127, align 2
  %322 = load i16, i16* %128, align 4
  %323 = shl i16 %322, 3
  %324 = load i16, i16* %129, align 2
  %325 = shl i16 %324, 3
  %326 = zext i16 %325 to i32
  %327 = shl nuw i32 %326, 16
  %328 = zext i16 %323 to i32
  %329 = or i32 %327, %328
  %330 = sext i16 %325 to i32
  %331 = load i32, i32* %130, align 8
  %332 = icmp sgt i32 %331, %330
  %333 = load i32, i32* %131, align 4
  %334 = icmp slt i32 %333, %330
  %335 = or i1 %332, %334
  br i1 %335, label %349, label %336

336:                                              ; preds = %321
  %337 = sext i16 %323 to i32
  %338 = load i32, i32* %132, align 8
  %339 = icmp sgt i32 %338, %337
  %340 = load i32, i32* %133, align 4
  %341 = icmp slt i32 %340, %337
  %342 = or i1 %339, %341
  br i1 %342, label %349, label %343

343:                                              ; preds = %336
  %344 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %123, align 8
  %345 = call i32 %344(%struct.macroblockd* %40, %struct.AV1Common* %26, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %22, i32 %329, %struct.mv* nonnull %24, i32* nonnull %20, i32* nonnull %21, %union.int_mv* null) #5
  %346 = icmp slt i32 %345, %320
  br i1 %346, label %347, label %349

347:                                              ; preds = %343
  %348 = load i32, i32* %23, align 4
  store i32 %348, i32* %73, align 4
  br label %349

349:                                              ; preds = %321, %336, %343, %347
  %350 = phi i32 [ %345, %347 ], [ %320, %343 ], [ %320, %336 ], [ %320, %321 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #5
  br label %351

351:                                              ; preds = %349, %310
  %352 = phi i32 [ %350, %349 ], [ %320, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %117) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #5
  br label %353

353:                                              ; preds = %297, %306, %351
  %354 = phi i32 [ %352, %351 ], [ %278, %306 ], [ %278, %297 ]
  br i1 %396, label %355, label %356

355:                                              ; preds = %353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %78, i8* nonnull align 16 %76, i64 32, i1 false)
  br label %356

356:                                              ; preds = %355, %353
  %357 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %239
  %358 = load i32, i32* %357, align 4
  %359 = icmp slt i32 %354, %358
  br i1 %359, label %361, label %360

360:                                              ; preds = %356
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %101) #5
  br label %366

361:                                              ; preds = %356
  %362 = getelementptr inbounds %union.int_mv, %union.int_mv* %242, i64 0, i32 0
  %363 = load i32, i32* %73, align 4
  store i32 %363, i32* %362, align 4
  store i32 %354, i32* %357, align 4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %101) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %76) #5
  %364 = add nuw nsw i32 %186, 1
  %365 = icmp eq i32 %364, 4
  br i1 %365, label %367, label %185

366:                                              ; preds = %197, %206, %360
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %76) #5
  br label %367

367:                                              ; preds = %361, %366
  store i32 0, i32* %6, align 4
  %368 = bitcast %union.int_mv* %25 to i8*
  %369 = getelementptr inbounds %union.int_mv, %union.int_mv* %25, i64 0, i32 0
  %370 = bitcast %union.int_mv* %25 to %struct.mv*
  %371 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %58, i64 0, i32 0, i64 0
  %372 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %58, i64 0, i32 5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %368) #5
  %373 = call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 0) #5
  store i32 %373, i32* %369, align 4
  %374 = bitcast %union.int_mv* %3 to %struct.mv*
  %375 = load i32**, i32*** %372, align 8
  %376 = call i32 @av1_mv_bit_cost(%struct.mv* %374, %struct.mv* nonnull %370, i32* %371, i32** %375, i32 108) #5
  %377 = load i32, i32* %6, align 4
  %378 = add nsw i32 %377, %376
  store i32 %378, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %368) #5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %368) #5
  store i32 -1431655766, i32* %369, align 4
  %379 = call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 1) #5
  store i32 %379, i32* %369, align 4
  %380 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 1
  %381 = bitcast %union.int_mv* %380 to %struct.mv*
  %382 = load i32**, i32*** %372, align 8
  %383 = call i32 @av1_mv_bit_cost(%struct.mv* %381, %struct.mv* nonnull %370, i32* %371, i32** %382, i32 108) #5
  %384 = load i32, i32* %6, align 4
  %385 = add nsw i32 %384, %383
  store i32 %385, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %368) #5
  %386 = bitcast i64* %13 to i32*
  %387 = load i32, i32* %386, align 8
  %388 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 1
  %389 = load i32, i32* %388, align 4
  %390 = icmp slt i32 %387, %389
  %391 = select i1 %390, i32 %387, i32 %389
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #5
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %71) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #5
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %67) #5
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %62) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #5
  ret i32 %391

392:                                              ; preds = %232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %152, i8* align 16 %153, i64 32, i1 false)
  br i1 %31, label %412, label %393

393:                                              ; preds = %392, %412
  call void @av1_setup_pre_planes(%struct.macroblockd* %40, i32 1, %struct.yv12_buffer_config* nonnull %70, i32 %64, i32 %66, %struct.scale_factors* null, i32 %32) #5
  br label %394

394:                                              ; preds = %393, %232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %76, i8* align 16 %78, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %81, i8* align 16 %82, i64 32, i1 false)
  %395 = load i32, i32* %85, align 16
  %396 = icmp ne i32 %187, 0
  %397 = xor i1 %396, true
  %398 = zext i1 %397 to i64
  %399 = getelementptr inbounds [2 x %struct.buf_2d], [2 x %struct.buf_2d]* %18, i64 0, i64 %398
  call void @av1_init_inter_params(%struct.InterPredParams* nonnull %11, i32 %36, i32 %39, i32 %83, i32 %84, i32 0, i32 0, i32 %395, i32 0, i32 0, %struct.scale_factors* %86, %struct.buf_2d* %399, i32 0) #5
  %400 = load i32, i32* %85, align 16
  %401 = icmp sgt i32 %400, 10
  %402 = add nsw i32 %400, -7
  %403 = sub nsw i32 21, %400
  %404 = select i1 %401, i32 %402, i32 3
  %405 = select i1 %401, i32 %403, i32 11
  store i32 0, i32* %89, align 8
  store i32 -1431655766, i32* %91, align 4
  store i16* null, i16** %92, align 8
  store i32 0, i32* %93, align 8
  store i32 %404, i32* %94, align 4
  store i32 %405, i32* %95, align 8
  store i32 0, i32* %96, align 4
  store i32 0, i32* %97, align 8
  store i32 0, i32* %98, align 4
  store i64 -6148914691236517206, i64* %100, align 8
  %406 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %398
  %407 = bitcast %union.int_mv* %406 to %struct.mv*
  call void @av1_enc_build_one_inter_predictor(i8* nonnull %71, i32 %36, %struct.mv* %407, %struct.InterPredParams* nonnull %11) #5
  br i1 %396, label %234, label %238

408:                                              ; preds = %290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %175, i8* align 16 %176, i64 32, i1 false)
  br i1 %31, label %414, label %409

409:                                              ; preds = %408, %414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %81, i8* align 16 %82, i64 32, i1 false)
  br label %410

410:                                              ; preds = %409, %290
  br i1 %396, label %291, label %294

411:                                              ; preds = %230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %144, i8* align 16 %145, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %148, i8* align 16 %149, i64 32, i1 false)
  br label %231

412:                                              ; preds = %392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %156, i8* align 16 %157, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %160, i8* align 16 %161, i64 32, i1 false)
  br label %393

413:                                              ; preds = %289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %167, i8* align 16 %168, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %171, i8* align 16 %172, i64 32, i1 false)
  br label %288

414:                                              ; preds = %408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %179, i8* align 16 %180, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %183, i8* align 16 %184, i64 32, i1 false)
  br label %409
}

declare void @av1_init_inter_params(%struct.InterPredParams*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scale_factors*, %struct.buf_2d*, i32) local_unnamed_addr #2

declare void @av1_enc_build_one_inter_predictor(i8*, i32, %struct.mv*, %struct.InterPredParams*) local_unnamed_addr #2

declare i32 @av1_refining_search_8p_c(%struct.FULLPEL_MOTION_SEARCH_PARAMS*, i32, %struct.fullpel_mv*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_compound_single_motion_search(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, %struct.mv*, i8*, i8*, i32, i32* nocapture, i32) local_unnamed_addr #0 {
  %10 = alloca %union.int_mv, align 4
  %11 = alloca [3 x %struct.buf_2d], align 16
  %12 = alloca %struct.buf_2d, align 8
  %13 = alloca %union.int_mv, align 4
  %14 = alloca %struct.FULLPEL_MOTION_SEARCH_PARAMS, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.SUBPEL_MOTION_SEARCH_PARAMS, align 8
  %18 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %19 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %20 = load %struct.SequenceHeader*, %struct.SequenceHeader** %19, align 16
  %21 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %20, i64 0, i32 27
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 3, i32 1
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  %27 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %26, align 8
  %28 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %27, align 8
  %29 = sext i32 %8 to i64
  %30 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %28, i64 0, i32 6, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = bitcast %union.int_mv* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #5
  %34 = getelementptr inbounds %union.int_mv, %union.int_mv* %10, i64 0, i32 0
  %35 = tail call i32 @av1_get_ref_mv(%struct.macroblock* %1, i32 %8) #5
  store i32 %35, i32* %34, align 4
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 21
  %37 = load %struct.MvCosts*, %struct.MvCosts** %36, align 16
  %38 = bitcast [3 x %struct.buf_2d]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %38) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 96, i1 false)
  %39 = tail call %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP* %0, i32 %32) #5
  %40 = bitcast %struct.buf_2d* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  %41 = icmp ne i32 %8, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %9
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4
  %44 = bitcast [2 x %struct.buf_2d]* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %44, i64 32, i1 false)
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %29
  %46 = bitcast %struct.buf_2d* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %46, i64 32, i1 false)
  br label %47

47:                                               ; preds = %42, %9
  %48 = icmp ne %struct.yv12_buffer_config* %39, null
  br i1 %48, label %54, label %58

49:                                               ; preds = %54, %163
  %50 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %25, i64 0, i32 0
  %51 = load i32, i32* %50, align 16
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 1
  %53 = load i32, i32* %52, align 4
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %25, i32 %8, %struct.yv12_buffer_config* nonnull %39, i32 %51, i32 %53, %struct.scale_factors* null, i32 %24) #5
  br label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %29
  %56 = bitcast [3 x %struct.buf_2d]* %11 to i8*
  %57 = bitcast %struct.buf_2d* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %56, i8* align 16 %57, i64 32, i1 false)
  br i1 %23, label %163, label %49

58:                                               ; preds = %49, %47
  %59 = bitcast %union.int_mv* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #5
  %60 = getelementptr inbounds %union.int_mv, %union.int_mv* %13, i64 0, i32 0
  store i32 -1431655766, i32* %60, align 4
  %61 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %61) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 216, i1 false)
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 0
  %63 = bitcast %union.int_mv* %10 to %struct.mv*
  call void @av1_make_default_fullpel_ms_params(%struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* nonnull %63, %struct.search_site_config* %62, i32 0) #5
  %64 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 2, i32 2
  store i8* %4, i8** %64, align 8
  %65 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 2, i32 3
  store i8* %5, i8** %65, align 8
  %66 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 2, i32 4
  store i32 %6, i32* %66, align 8
  %67 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 2, i32 5
  store i32 %8, i32* %67, align 4
  %68 = getelementptr inbounds %struct.mv, %struct.mv* %3, i64 0, i32 0
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i32
  %71 = add nsw i32 %70, 3
  %72 = lshr i16 %69, 15
  %73 = xor i16 %72, 1
  %74 = zext i16 %73 to i32
  %75 = add nsw i32 %71, %74
  %76 = ashr i32 %75, 3
  %77 = getelementptr inbounds %struct.mv, %struct.mv* %3, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = add nsw i32 %79, 3
  %81 = lshr i16 %78, 15
  %82 = xor i16 %81, 1
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %80, %83
  %85 = ashr i32 %84, 3
  %86 = shl nsw i32 %85, 16
  %87 = and i32 %76, 65535
  %88 = or i32 %86, %87
  %89 = bitcast %union.int_mv* %13 to %struct.fullpel_mv*
  %90 = call i32 @av1_full_pixel_search(i32 %88, %struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, i32 5, i32* null, %struct.fullpel_mv* nonnull %89, %struct.fullpel_mv* null) #5
  br i1 %48, label %91, label %95

91:                                               ; preds = %58
  %92 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %29
  %93 = bitcast %struct.buf_2d* %92 to i8*
  %94 = bitcast [3 x %struct.buf_2d]* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %93, i8* nonnull align 16 %94, i64 32, i1 false)
  br i1 %23, label %154, label %95

95:                                               ; preds = %154, %91, %58
  %96 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 2
  %97 = load i8, i8* %96, align 2, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = bitcast %union.int_mv* %13 to i16*
  %101 = load i16, i16* %100, align 4
  %102 = shl i16 %101, 3
  %103 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %89, i64 0, i32 1
  %104 = load i16, i16* %103, align 2
  %105 = shl i16 %104, 3
  %106 = zext i16 %105 to i32
  %107 = shl nuw i32 %106, 16
  %108 = zext i16 %102 to i32
  %109 = or i32 %107, %108
  store i32 %109, i32* %60, align 4
  br label %137

110:                                              ; preds = %95
  %111 = icmp eq i32 %90, 2147483647
  %112 = xor i1 %98, true
  %113 = or i1 %111, %112
  br i1 %113, label %137, label %114

114:                                              ; preds = %110
  %115 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #5
  store i32 -1431655766, i32* %15, align 4
  %116 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #5
  store i32 -1431655766, i32* %16, align 4
  %117 = bitcast %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %117) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 168, i1 false)
  call void @av1_make_default_subpel_ms_params(%struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %17, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* nonnull %63, i32* null) #5
  %118 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17, i64 0, i32 6, i32 2, i32 2
  store i8* %4, i8** %118, align 8
  %119 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17, i64 0, i32 6, i32 2, i32 3
  store i8* %5, i8** %119, align 8
  %120 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17, i64 0, i32 6, i32 2, i32 4
  store i32 %6, i32* %120, align 8
  %121 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17, i64 0, i32 6, i32 2, i32 5
  store i32 %8, i32* %121, align 4
  %122 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %17, i64 0, i32 2
  store i8 0, i8* %122, align 8
  %123 = bitcast %union.int_mv* %13 to i16*
  %124 = load i16, i16* %123, align 4
  %125 = shl i16 %124, 3
  %126 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %89, i64 0, i32 1
  %127 = load i16, i16* %126, align 2
  %128 = shl i16 %127, 3
  %129 = zext i16 %128 to i32
  %130 = shl nuw i32 %129, 16
  %131 = zext i16 %125 to i32
  %132 = or i32 %130, %131
  %133 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %134 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %133, align 8
  %135 = bitcast %union.int_mv* %13 to %struct.mv*
  %136 = call i32 %134(%struct.macroblockd* %25, %struct.AV1Common* %18, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %17, i32 %132, %struct.mv* nonnull %135, i32* nonnull %15, i32* nonnull %16, %union.int_mv* null) #5
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %117) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #5
  br label %137

137:                                              ; preds = %99, %110, %114
  %138 = phi i32 [ %136, %114 ], [ %90, %110 ], [ %90, %99 ]
  br i1 %41, label %139, label %142

139:                                              ; preds = %137
  %140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %141 = bitcast %struct.buf_2d* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %40, i64 32, i1 false)
  br label %142

142:                                              ; preds = %139, %137
  %143 = icmp eq i32 %138, 2147483647
  br i1 %143, label %147, label %144

144:                                              ; preds = %142
  %145 = bitcast %struct.mv* %3 to i32*
  %146 = load i32, i32* %60, align 4
  store i32 %146, i32* %145, align 2
  br label %147

147:                                              ; preds = %142, %144
  store i32 0, i32* %7, align 4
  %148 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %37, i64 0, i32 0, i64 0
  %149 = getelementptr inbounds %struct.MvCosts, %struct.MvCosts* %37, i64 0, i32 5
  %150 = load i32**, i32*** %149, align 8
  %151 = call i32 @av1_mv_bit_cost(%struct.mv* %3, %struct.mv* nonnull %63, i32* %148, i32** %150, i32 108) #5
  %152 = load i32, i32* %7, align 4
  %153 = add nsw i32 %152, %151
  store i32 %153, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %61) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %38) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #5
  ret i32 %138

154:                                              ; preds = %91
  %155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 %29
  %156 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %11, i64 0, i64 1
  %157 = bitcast %struct.buf_2d* %155 to i8*
  %158 = bitcast %struct.buf_2d* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %157, i8* align 16 %158, i64 32, i1 false)
  %159 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 %29
  %160 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %11, i64 0, i64 2
  %161 = bitcast %struct.buf_2d* %159 to i8*
  %162 = bitcast %struct.buf_2d* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %161, i8* align 16 %162, i64 32, i1 false)
  br label %95

163:                                              ; preds = %54
  %164 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %11, i64 0, i64 1
  %165 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 4, i64 %29
  %166 = bitcast %struct.buf_2d* %164 to i8*
  %167 = bitcast %struct.buf_2d* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %166, i8* align 16 %167, i64 32, i1 false)
  %168 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %11, i64 0, i64 2
  %169 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 4, i64 %29
  %170 = bitcast %struct.buf_2d* %168 to i8*
  %171 = bitcast %struct.buf_2d* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %170, i8* align 16 %171, i64 32, i1 false)
  br label %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_compound_single_motion_search_interinter(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, %union.int_mv*, i8*, i32, i32* nocapture, i32) local_unnamed_addr #0 {
  %9 = alloca %struct.buf_2d, align 8
  %10 = alloca %struct.scale_factors, align 8
  %11 = alloca %struct.InterPredParams, align 8
  %12 = alloca [16384 x i16], align 16
  %13 = bitcast [16384 x i16]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 32768, i1 false)
  %14 = sext i32 %7 to i64
  %15 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %14
  %16 = bitcast %union.int_mv* %15 to %struct.mv*
  %17 = icmp eq i32 %7, 0
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %18
  %20 = bitcast %union.int_mv* %19 to %struct.mv*
  %21 = zext i8 %2 to i64
  %22 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %21
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  %29 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %28, align 8
  %30 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 16
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = shl nsw i32 %34, 2
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %35, %37
  %39 = shl nsw i32 %32, 2
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = ashr i32 %39, %41
  %43 = bitcast %struct.buf_2d* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #5
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 %18
  %45 = bitcast %struct.buf_2d* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 16 %45, i64 32, i1 false) #5
  %46 = bitcast %struct.scale_factors* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #5
  %47 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %9, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 32, i1 false) #5
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %9, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 2
  %52 = load i32, i32* %51, align 16
  %53 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 3
  %54 = load i32, i32* %53, align 4
  call void @av1_setup_scale_factors_for_frame(%struct.scale_factors* nonnull %10, i32 %48, i32 %50, i32 %52, i32 %54) #5
  %55 = bitcast %struct.InterPredParams* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %55) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 216, i1 false) #5
  %56 = load i32, i32* %36, align 4
  %57 = load i32, i32* %40, align 8
  %58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 40
  %59 = load i32, i32* %58, align 16
  %60 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %30, i64 0, i32 8, i32 0
  %61 = load i32, i32* %60, align 4
  call void @av1_init_inter_params(%struct.InterPredParams* nonnull %11, i32 %24, i32 %27, i32 %42, i32 %38, i32 %56, i32 %57, i32 %59, i32 0, i32 0, %struct.scale_factors* nonnull %10, %struct.buf_2d* nonnull %9, i32 %61) #5
  %62 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3
  %63 = load i32, i32* %58, align 16
  %64 = icmp sgt i32 %63, 10
  %65 = add nsw i32 %63, -7
  %66 = sub nsw i32 21, %63
  %67 = select i1 %64, i32 %65, i32 3
  %68 = select i1 %64, i32 %66, i32 11
  %69 = bitcast %struct.ConvolveParams* %62 to i8*
  %70 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 0
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 4
  %72 = bitcast i8* %71 to i32*
  store i32 -1431655766, i32* %72, align 4
  %73 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 1
  store i16* null, i16** %73, align 8
  %74 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 2
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 3
  store i32 %67, i32* %75, align 4
  %76 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 4
  store i32 %68, i32* %76, align 8
  %77 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 5
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 6
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 7
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %11, i64 0, i32 3, i32 8
  %81 = bitcast i32* %80 to i64*
  store i64 -6148914691236517206, i64* %81, align 8
  call void @av1_enc_build_one_inter_predictor(i8* nonnull %13, i32 %24, %struct.mv* %20, %struct.InterPredParams* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %55) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #5
  %82 = call i32 @av1_compound_single_motion_search(%struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %2, %struct.mv* %16, i8* nonnull %13, i8* %4, i32 %5, i32* %6, i32 %7)
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %13) #5
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_interinter_compound_motion_search(%struct.AV1_COMP*, %struct.macroblock*, %union.int_mv* nocapture readonly, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %6 = alloca [2 x %union.int_mv], align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  %9 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %8, align 8
  %10 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %9, align 8
  %11 = bitcast [2 x %union.int_mv]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %6, i64 0, i64 0
  %13 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %6, i64 0, i64 0, i32 0
  store i32 -1431655766, i32* %13, align 4
  %14 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %6, i64 0, i64 1, i32 0
  store i32 -1431655766, i32* %14, align 4
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #5
  store i32 0, i32* %7, align 4
  %16 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 17
  %17 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 17, i32 4
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 50
  %22 = load i8*, i8** %21, align 16
  br label %23

23:                                               ; preds = %5, %20
  %24 = phi i8* [ %22, %20 ], [ null, %5 ]
  %25 = getelementptr inbounds %struct.INTERINTER_COMPOUND_DATA, %struct.INTERINTER_COMPOUND_DATA* %16, i64 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = icmp eq i8 %4, 24
  br i1 %26, label %27, label %48

27:                                               ; preds = %23
  %28 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %8, align 8
  %29 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %28, align 8
  %30 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %29, i64 0, i32 0
  %31 = load i8, i8* %30, align 8
  %32 = zext i8 %3 to i64
  %33 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = tail call i8* @av1_get_compound_type_mask(%struct.INTERINTER_COMPOUND_DATA* %16, i8 zeroext %31) #5
  %37 = getelementptr inbounds %union.int_mv, %union.int_mv* %2, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %13, align 4
  %39 = getelementptr inbounds %union.int_mv, %union.int_mv* %2, i64 1, i32 0
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %14, align 4
  %41 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 18
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  %44 = zext i1 %43 to i32
  %45 = call i32 @av1_joint_motion_search(%struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %3, %union.int_mv* nonnull %12, i8* %36, i32 %35, i32* nonnull %7, i32 %44) #5
  %46 = load i32, i32* %13, align 4
  %47 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 5, i64 0, i32 0
  store i32 %46, i32* %47, align 8
  br label %71

48:                                               ; preds = %23
  %49 = add i8 %4, -19
  %50 = icmp ult i8 %49, 4
  br i1 %50, label %51, label %76

51:                                               ; preds = %48
  %52 = zext i8 %4 to i64
  %53 = lshr i64 19398656, %52
  %54 = and i64 %53, 1
  %55 = trunc i64 %54 to i32
  %56 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %8, align 8
  %57 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %56, align 8
  %58 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %57, i64 0, i32 0
  %59 = load i8, i8* %58, align 8
  %60 = zext i8 %3 to i64
  %61 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = tail call i8* @av1_get_compound_type_mask(%struct.INTERINTER_COMPOUND_DATA* %16, i8 zeroext %59) #5
  %65 = getelementptr inbounds %union.int_mv, %union.int_mv* %2, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %13, align 4
  %67 = getelementptr inbounds %union.int_mv, %union.int_mv* %2, i64 1, i32 0
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %14, align 4
  %69 = call i32 @av1_compound_single_motion_search_interinter(%struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %3, %union.int_mv* nonnull %12, i8* %64, i32 %63, i32* nonnull %7, i32 %55) #5
  %70 = getelementptr inbounds [2 x %union.int_mv], [2 x %union.int_mv]* %6, i64 0, i64 %54, i32 0
  br label %71

71:                                               ; preds = %27, %51
  %72 = phi i32* [ %70, %51 ], [ %14, %27 ]
  %73 = phi i64 [ %54, %51 ], [ 1, %27 ]
  %74 = load i32, i32* %72, align 4
  %75 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 5, i64 %73, i32 0
  store i32 %74, i32* %75, align 4
  br label %76

76:                                               ; preds = %71, %48
  %77 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_simple_motion_search(%struct.AV1_COMP*, %struct.macroblock*, i32, i32, i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = alloca %union.int_mv, align 4
  %11 = alloca %struct.buf_2d, align 8
  %12 = alloca i32, align 4
  %13 = alloca [5 x i32], align 16
  %14 = alloca %struct.FULLPEL_MOTION_SEARCH_PARAMS, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.SUBPEL_MOTION_SEARCH_PARAMS, align 8
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %18 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %19 = load %struct.SequenceHeader*, %struct.SequenceHeader** %18, align 16
  %20 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %19, i64 0, i32 27
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 3, i32 1
  %24 = zext i8 %4 to i64
  %25 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %24
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %32 = load i32, i32* %31, align 4
  %33 = mul nsw i32 %32, %2
  %34 = add nsw i32 %33, %3
  %35 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 8
  %36 = load i8, i8* %35, align 8
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = sdiv i32 %2, %40
  %42 = sdiv i32 %3, %40
  %43 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %41
  %46 = add nsw i32 %45, %42
  %47 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 5
  %48 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %47, align 8
  %49 = sext i32 %46 to i64
  %50 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %48, i64 %49
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 9
  %52 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %51, align 8
  %53 = sext i32 %34 to i64
  %54 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %52, i64 %53
  store %struct.MB_MODE_INFO* %50, %struct.MB_MODE_INFO** %54, align 8
  %55 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %51, align 8
  %56 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %55, i64 %53
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 6
  store %struct.MB_MODE_INFO** %56, %struct.MB_MODE_INFO*** %57, align 8
  %58 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 12
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %53
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 15
  store i8* %60, i8** %61, align 8
  %62 = load i32, i32* %31, align 4
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 16
  store i32 %62, i32* %63, align 16
  %64 = load i8, i8* %35, align 8
  %65 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 5, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i8 %64 to i64
  %68 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = sdiv i32 %2, %70
  %72 = sdiv i32 %3, %70
  %73 = mul nsw i32 %71, %66
  %74 = add nsw i32 %73, %72
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 5, i32 0
  %76 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %75, align 8
  %77 = sext i32 %74 to i64
  %78 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %76, i64 %77
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 4
  store %struct.MB_MODE_INFO_EXT_FRAME* %78, %struct.MB_MODE_INFO_EXT_FRAME** %79, align 8
  %80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0
  %81 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 12
  %82 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %81, align 16
  %83 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %82, i64 0, i32 17
  tail call void @av1_setup_dst_planes(%struct.macroblockd_plane* %80, i8 zeroext %4, %struct.yv12_buffer_config* %83, i32 %2, i32 %3, i32 0, i32 %23) #5
  %84 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 28
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 %2, -4
  %87 = add i32 %86, 8
  %88 = sub i32 %87, %85
  %89 = add i32 %30, %2
  %90 = shl nsw i32 %89, 2
  %91 = sub i32 -8, %90
  %92 = icmp sgt i32 %88, %91
  %93 = select i1 %92, i32 %88, i32 %91
  %94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 56, i32 2
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %96, %2
  %98 = sub nsw i32 %97, %30
  %99 = shl i32 %98, 2
  %100 = add i32 %85, -8
  %101 = add i32 %99, %100
  %102 = shl nsw i32 %97, 2
  %103 = add nsw i32 %102, 8
  %104 = icmp slt i32 %101, %103
  %105 = select i1 %104, i32 %101, i32 %103
  %106 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 56, i32 3
  store i32 %105, i32* %106, align 4
  %107 = mul i32 %3, -4
  %108 = add i32 %107, 8
  %109 = sub i32 %108, %85
  %110 = add i32 %27, %3
  %111 = shl nsw i32 %110, 2
  %112 = sub i32 -8, %111
  %113 = icmp sgt i32 %109, %112
  %114 = select i1 %113, i32 %109, i32 %112
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 56, i32 0
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %117 = load i32, i32* %116, align 8
  %118 = sub nsw i32 %117, %3
  %119 = sub nsw i32 %118, %27
  %120 = shl i32 %119, 2
  %121 = add i32 %120, %100
  %122 = shl nsw i32 %118, 2
  %123 = add nsw i32 %122, 8
  %124 = icmp slt i32 %121, %123
  %125 = select i1 %124, i32 %121, i32 %123
  %126 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 56, i32 1
  store i32 %125, i32* %126, align 4
  %127 = shl nuw nsw i32 %27, 2
  %128 = shl nuw nsw i32 %30, 2
  %129 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = lshr i32 %127, %130
  %132 = trunc i32 %131 to i8
  %133 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 9
  %134 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = lshr i32 %128, %135
  %137 = trunc i32 %136 to i8
  %138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 10
  %139 = icmp ugt i8 %132, 4
  %140 = select i1 %139, i8 %132, i8 4
  store i8 %140, i8* %133, align 8
  %141 = icmp ugt i8 %137, 4
  %142 = select i1 %141, i8 %137, i8 4
  store i8 %142, i8* %138, align 1
  br i1 %22, label %341, label %143

143:                                              ; preds = %9, %341
  %144 = bitcast i32* %12 to %struct.mv*
  %145 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2
  %146 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 0
  store i32 %2, i32* %146, align 16
  %147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 1
  store i32 %3, i32* %147, align 4
  %148 = shl nsw i32 %2, 5
  %149 = sub nsw i32 0, %148
  %150 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 19
  store i32 %149, i32* %150, align 4
  %151 = load i32, i32* %95, align 4
  %152 = sub i32 %151, %89
  %153 = shl nsw i32 %152, 5
  %154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 20
  store i32 %153, i32* %154, align 16
  %155 = shl nsw i32 %3, 5
  %156 = sub nsw i32 0, %155
  %157 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 17
  store i32 %156, i32* %157, align 4
  %158 = load i32, i32* %116, align 8
  %159 = sub i32 %158, %110
  %160 = shl nsw i32 %159, 5
  %161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 18
  store i32 %160, i32* %161, align 8
  %162 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 12
  %163 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %162, align 8
  tail call void @av1_setup_src_planes(%struct.macroblock* %1, %struct.yv12_buffer_config* %163, i32 %2, i32 %3, i32 %23, i8 zeroext %4) #5
  %164 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %57, align 8
  %165 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %164, align 8
  %166 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 0
  store i8 %4, i8* %166, align 8
  %167 = trunc i32 %5 to i8
  %168 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 6, i64 0
  store i8 %167, i8* %168, align 8
  %169 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 6, i64 1
  store i8 -1, i8* %169, align 1
  %170 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 9
  store i8 0, i8* %170, align 8
  %171 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 8, i32 0
  store i32 0, i32* %171, align 4
  %172 = add i8 %167, -1
  %173 = icmp ult i8 %172, 8
  br i1 %173, label %174, label %184

174:                                              ; preds = %143
  %175 = sext i8 %167 to i64
  %176 = add nsw i64 %175, -1
  %177 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %184, label %180

180:                                              ; preds = %174
  %181 = sext i32 %178 to i64
  %182 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 16, i64 %181
  %183 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %182, align 8
  br label %184

184:                                              ; preds = %143, %174, %180
  %185 = phi %struct.RefCntBuffer* [ %183, %180 ], [ null, %174 ], [ null, %143 ]
  %186 = icmp eq %struct.RefCntBuffer* %185, null
  %187 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %185, i64 0, i32 17
  %188 = select i1 %186, %struct.yv12_buffer_config* null, %struct.yv12_buffer_config* %187
  %189 = tail call %struct.yv12_buffer_config* @av1_get_scaled_ref_frame(%struct.AV1_COMP* %0, i32 %5) #5
  %190 = bitcast %struct.buf_2d* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 -86, i64 32, i1 false)
  %191 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #5
  store i32 0, i32* %12, align 4
  %192 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 20
  %195 = load i32, i32* %194, align 4
  %196 = add nsw i32 %195, %193
  %197 = icmp slt i32 %196, 9
  %198 = select i1 %197, i32 %196, i32 9
  %199 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 3, i64 0, i64 0
  %200 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %200) #5
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 0
  %202 = getelementptr inbounds %union.int_mv, %union.int_mv* %10, i64 0, i32 0
  %203 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %203, i8 -86, i64 20, i1 false)
  store i32 -1431655766, i32* %202, align 4
  br i1 %173, label %204, label %212

204:                                              ; preds = %184
  %205 = sext i8 %167 to i64
  %206 = add nsw i64 %205, -1
  %207 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, -1
  %210 = sext i32 %208 to i64
  %211 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %210
  br i1 %209, label %212, label %213

212:                                              ; preds = %204, %184
  br label %213

213:                                              ; preds = %204, %212
  %214 = phi %struct.scale_factors* [ null, %212 ], [ %211, %204 ]
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %145, i32 0, %struct.yv12_buffer_config* %188, i32 %2, i32 %3, %struct.scale_factors* %214, i32 %7) #5
  %215 = load i8, i8* %168, align 8
  %216 = load i8, i8* %169, align 1
  %217 = icmp sgt i8 %215, 1
  %218 = select i1 %217, i8 %215, i8 1
  %219 = add nsw i8 %218, -1
  %220 = icmp ult i8 %219, 8
  br i1 %220, label %221, label %229

221:                                              ; preds = %213
  %222 = zext i8 %218 to i64
  %223 = add nsw i64 %222, -1
  %224 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, -1
  %227 = sext i32 %225 to i64
  %228 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %227
  br i1 %226, label %229, label %230

229:                                              ; preds = %221, %213
  br label %230

230:                                              ; preds = %229, %221
  %231 = phi %struct.scale_factors* [ null, %229 ], [ %228, %221 ]
  %232 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 21, i64 0
  store %struct.scale_factors* %231, %struct.scale_factors** %232, align 8
  %233 = icmp sgt i8 %216, 1
  %234 = select i1 %233, i8 %216, i8 1
  %235 = add nsw i8 %234, -1
  %236 = icmp ult i8 %235, 8
  br i1 %236, label %237, label %245

237:                                              ; preds = %230
  %238 = zext i8 %234 to i64
  %239 = add nsw i64 %238, -1
  %240 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, -1
  %243 = sext i32 %241 to i64
  %244 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %243
  br i1 %242, label %245, label %246

245:                                              ; preds = %237, %230
  br label %246

246:                                              ; preds = %237, %245
  %247 = phi %struct.scale_factors* [ null, %245 ], [ %244, %237 ]
  %248 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 21, i64 1
  store %struct.scale_factors* %247, %struct.scale_factors** %248, align 8
  %249 = icmp ne %struct.yv12_buffer_config* %189, null
  br i1 %249, label %250, label %253

250:                                              ; preds = %246
  %251 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %252 = bitcast %struct.buf_2d* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %190, i8* align 16 %252, i64 32, i1 false)
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %145, i32 0, %struct.yv12_buffer_config* nonnull %189, i32 %2, i32 %3, %struct.scale_factors* null, i32 %7) #5
  br label %253

253:                                              ; preds = %250, %246
  %254 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 70
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %271, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %259 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %258, align 16
  %260 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 46
  %261 = load i8, i8* %260, align 16
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %259, i64 0, i32 6, i32 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = icmp eq i8 %264, 3
  br i1 %265, label %266, label %271

266:                                              ; preds = %257
  %267 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 30
  %268 = load i32, i32* %267, align 4
  %269 = icmp slt i32 %268, 3
  %270 = zext i1 %269 to i32
  br label %271

271:                                              ; preds = %253, %257, %266
  %272 = phi i32 [ 0, %257 ], [ 0, %253 ], [ %270, %266 ]
  %273 = getelementptr inbounds %struct.FULLPEL_MOTION_SEARCH_PARAMS, %struct.FULLPEL_MOTION_SEARCH_PARAMS* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %273) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 -86, i64 216, i1 false)
  call void @av1_make_default_fullpel_ms_params(%struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %4, %struct.mv* nonnull %144, %struct.search_site_config* %199, i32 %272) #5
  %274 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 3
  %275 = load i8, i8* %274, align 4
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 13
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  %281 = select i1 %280, i32* null, i32* %201
  br label %282

282:                                              ; preds = %271, %277
  %283 = phi i32* [ null, %271 ], [ %281, %277 ]
  %284 = bitcast %union.int_mv* %10 to %struct.fullpel_mv*
  %285 = call i32 @av1_full_pixel_search(i32 %6, %struct.FULLPEL_MOTION_SEARCH_PARAMS* nonnull %14, i32 %198, i32* %283, %struct.fullpel_mv* nonnull %284, %struct.fullpel_mv* null) #5
  %286 = icmp eq i32 %285, 2147483647
  br i1 %286, label %293, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 2
  %289 = load i8, i8* %288, align 2, !range !2
  %290 = icmp eq i8 %289, 0
  %291 = icmp ne i32 %8, 0
  %292 = and i1 %291, %290
  br label %293

293:                                              ; preds = %287, %282
  %294 = phi i1 [ false, %282 ], [ %292, %287 ]
  br i1 %249, label %295, label %298

295:                                              ; preds = %293
  %296 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %297 = bitcast %struct.buf_2d* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %297, i8* nonnull align 8 %190, i64 32, i1 false)
  br label %298

298:                                              ; preds = %295, %293
  br i1 %294, label %299, label %322

299:                                              ; preds = %298
  %300 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %300) #5
  store i32 0, i32* %15, align 4
  %301 = bitcast %struct.SUBPEL_MOTION_SEARCH_PARAMS* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %301) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %301, i8 -86, i64 168, i1 false)
  call void @av1_make_default_subpel_ms_params(%struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %16, %struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %4, %struct.mv* nonnull %144, i32* nonnull %201) #5
  %302 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 5, i32 6
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds %struct.SUBPEL_MOTION_SEARCH_PARAMS, %struct.SUBPEL_MOTION_SEARCH_PARAMS* %16, i64 0, i32 2
  store i8 %303, i8* %304, align 8
  %305 = bitcast %union.int_mv* %10 to i16*
  %306 = load i16, i16* %305, align 4
  %307 = shl i16 %306, 3
  %308 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %284, i64 0, i32 1
  %309 = load i16, i16* %308, align 2
  %310 = shl i16 %309, 3
  %311 = zext i16 %310 to i32
  %312 = shl nuw i32 %311, 16
  %313 = zext i16 %307 to i32
  %314 = or i32 %312, %313
  %315 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 41, i32 2
  %316 = load i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)** %315, align 8
  %317 = bitcast %union.int_mv* %10 to %struct.mv*
  %318 = sext i32 %5 to i64
  %319 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 61, i64 %318
  %320 = call i32 %316(%struct.macroblockd* %145, %struct.AV1Common* %17, %struct.SUBPEL_MOTION_SEARCH_PARAMS* nonnull %16, i32 %314, %struct.mv* nonnull %317, i32* nonnull %15, i32* %319, %union.int_mv* null) #5
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %301) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %300) #5
  %321 = load i32, i32* %202, align 4
  br label %333

322:                                              ; preds = %298
  %323 = bitcast %union.int_mv* %10 to i16*
  %324 = load i16, i16* %323, align 4
  %325 = shl i16 %324, 3
  %326 = getelementptr inbounds %struct.fullpel_mv, %struct.fullpel_mv* %284, i64 0, i32 1
  %327 = load i16, i16* %326, align 2
  %328 = shl i16 %327, 3
  %329 = zext i16 %328 to i32
  %330 = shl nuw i32 %329, 16
  %331 = zext i16 %325 to i32
  %332 = or i32 %330, %331
  store i32 %332, i32* %202, align 4
  br label %333

333:                                              ; preds = %322, %299
  %334 = phi i32 [ %332, %322 ], [ %321, %299 ]
  %335 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %165, i64 0, i32 5, i64 0, i32 0
  store i32 %334, i32* %335, align 8
  call void @av1_enc_build_inter_predictor(%struct.AV1Common* %17, %struct.macroblockd* %145, i32 %2, i32 %3, %struct.BUFFER_SET* null, i8 zeroext %4, i32 0, i32 0) #5
  br i1 %249, label %336, label %339

336:                                              ; preds = %333
  %337 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 4, i64 0
  %338 = bitcast %struct.buf_2d* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %338, i8* nonnull align 8 %190, i64 32, i1 false)
  br label %339

339:                                              ; preds = %336, %333
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %273) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %200) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190)
  %340 = load i32, i32* %202, align 4
  ret i32 %340

341:                                              ; preds = %9
  %342 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = lshr i32 %127, %343
  %345 = trunc i32 %344 to i8
  %346 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 9
  %347 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 2
  %348 = load i32, i32* %347, align 8
  %349 = lshr i32 %128, %348
  %350 = trunc i32 %349 to i8
  %351 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 1, i32 10
  %352 = icmp ugt i8 %345, 4
  %353 = select i1 %352, i8 %345, i8 4
  store i8 %353, i8* %346, align 8
  %354 = icmp ugt i8 %350, 4
  %355 = select i1 %354, i8 %350, i8 4
  store i8 %355, i8* %351, align 1
  %356 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = lshr i32 %127, %357
  %359 = trunc i32 %358 to i8
  %360 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 9
  %361 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 2
  %362 = load i32, i32* %361, align 8
  %363 = lshr i32 %128, %362
  %364 = trunc i32 %363 to i8
  %365 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 2, i32 10
  %366 = icmp ugt i8 %359, 4
  %367 = select i1 %366, i8 %359, i8 4
  store i8 %367, i8* %360, align 8
  %368 = icmp ugt i8 %364, 4
  %369 = select i1 %368, i8 %364, i8 4
  store i8 %369, i8* %365, align 1
  br label %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_simple_motion_sse_var(%struct.AV1_COMP*, %struct.macroblock*, i32, i32, i8 zeroext, i32, i32, i32*, i32* nocapture) local_unnamed_addr #0 {
  %10 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 36, i32 16
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 1, i32 7
  %14 = tail call i32 @av1_simple_motion_search(%struct.AV1_COMP* %0, %struct.macroblock* %1, i32 %2, i32 %3, i8 zeroext %4, i32 %13, i32 %5, i32 1, i32 %6)
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %16 = load i8*, i8** %15, align 16
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 6, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 3, i32 0
  %20 = load i8*, i8** %19, align 16
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 2, i32 4, i64 0, i32 3, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %24 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %23, align 16
  %25 = zext i8 %4 to i64
  %26 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %24, i64 0, i32 21, i64 %25, i32 3
  %27 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %26, align 8
  %28 = tail call i32 %27(i8* %16, i32 %18, i8* %20, i32 %22, i32* %7) #5
  store i32 %28, i32* %8, align 4
  ret i32 %14
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_weight(i8* nocapture readonly, i8* nocapture readonly) #4 {
  %3 = getelementptr inbounds i8, i8* %0, i64 4
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = sub nsw i32 %5, %8
  %10 = icmp slt i32 %9, 0
  %11 = icmp ne i32 %9, 0
  %12 = sext i1 %11 to i32
  %13 = select i1 %10, i32 1, i32 %12
  ret i32 %13
}

declare void @av1_setup_scale_factors_for_frame(%struct.scale_factors*, i32, i32, i32, i32) local_unnamed_addr #2

declare i8* @av1_get_compound_type_mask(%struct.INTERINTER_COMPOUND_DATA*, i8 zeroext) local_unnamed_addr #2

declare void @av1_setup_dst_planes(%struct.macroblockd_plane*, i8 zeroext, %struct.yv12_buffer_config*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @av1_setup_src_planes(%struct.macroblock*, %struct.yv12_buffer_config*, i32, i32, i32, i8 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
