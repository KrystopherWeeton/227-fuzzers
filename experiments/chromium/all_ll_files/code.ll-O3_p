; ModuleID = '../../v8/src/objects/code.cc'
source_filename = "../../v8/src/objects/code.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.530" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.128", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.150", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.154", %"class.std::__1::vector.154", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::shared_ptr.469", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.492", %"class.std::__1::unique_ptr.518", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.524", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.537", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.319", i8, [7 x i8], %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.569", %"class.std::__1::unordered_map.543", %"class.std::__1::unordered_map.593", %"class.std::__1::vector.621", i8, %"class.std::__1::unique_ptr.628", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.682", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.688", %"class.std::__1::unique_ptr.709", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.719", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.889", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.902", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.912", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.923", %"struct.std::__1::atomic.141", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.998", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1049"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1056", i32, i8, i8, i32, i32, %"class.std::__1::vector.1062", %"class.std::__1::vector.1062", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1069", i64, %"class.std::__1::unordered_map.1070", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.530", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.149", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1126", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1140", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1174", %"class.std::__1::vector.1178", %"class.std::__1::vector.1178", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.677", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.128", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.692" }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.712", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.719" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.720", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.720" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.721", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"struct.std::__1::atomic.141", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::set.771", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.818", %"class.std::__1::unique_ptr.825" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.781", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.805", %"class.v8::internal::Handle.817", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.800" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.783", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.795", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.783" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.786" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.784", %union.anon.785 }
%"class.v8::internal::Handle.784" = type { %"class.v8::internal::HandleBase" }
%union.anon.785 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::Optional.795" = type { %"class.v8::base::internal::OptionalBase.796" }
%"class.v8::base::internal::OptionalBase.796" = type { %"struct.v8::base::internal::OptionalStorage.797" }
%"struct.v8::base::internal::OptionalStorage.797" = type { %"struct.v8::base::internal::OptionalStorageBase.798" }
%"struct.v8::base::internal::OptionalStorageBase.798" = type { i8, %union.anon.799 }
%union.anon.799 = type { i8 }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.805" = type { %"class.std::__1::__deque_base.806" }
%"class.std::__1::__deque_base.806" = type { %"struct.std::__1::__split_buffer.807", i64, %"class.std::__1::__compressed_pair.813" }
%"struct.std::__1::__split_buffer.807" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.808" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::Handle.817" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.820" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.647", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.831", %"class.v8::internal::DetachableVector.832", %"class.v8::internal::DetachableVector.831", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.832" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.831" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.470" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.473", %"class.std::__1::set.481" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.473" = type { %"class.std::__1::__tree.474" }
%"class.std::__1::__tree.474" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.833", %"class.std::__1::vector.839", %"class.std::__1::unique_ptr.846", %"class.std::__1::vector.853", %"class.std::__1::unique_ptr.860", i64, %"class.std::__1::vector.866", %"class.std::__1::vector.874", %"class.std::__1::vector.882", i8, i8, i32 }
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.841" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.v8::internal::GlobalHandles::NodeSpace.849"* }
%"class.v8::internal::GlobalHandles::NodeSpace.849" = type opaque
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.855" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { %"struct.std::__1::pair.868"*, %"struct.std::__1::pair.868"*, %"class.std::__1::__compressed_pair.869" }
%"struct.std::__1::pair.868" = type opaque
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::pair.868"* }
%"class.std::__1::vector.874" = type { %"class.std::__1::__vector_base.875" }
%"class.std::__1::__vector_base.875" = type { %"struct.std::__1::pair.876"*, %"struct.std::__1::pair.876"*, %"class.std::__1::__compressed_pair.877" }
%"struct.std::__1::pair.876" = type opaque
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"struct.std::__1::pair.876"* }
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.884" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.653", %"class.std::__1::vector.889" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { i64**, i64**, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { i32*, i32*, %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.902" = type { %"struct.std::__1::__atomic_base.903" }
%"struct.std::__1::__atomic_base.903" = type { %"struct.std::__1::__cxx_atomic_impl.904" }
%"struct.std::__1::__cxx_atomic_impl.904" = type { %"struct.std::__1::__cxx_atomic_base_impl.905" }
%"struct.std::__1::__cxx_atomic_base_impl.905" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.912" = type { %"struct.std::__1::__atomic_base.913" }
%"struct.std::__1::__atomic_base.913" = type { %"struct.std::__1::__cxx_atomic_impl.914" }
%"struct.std::__1::__cxx_atomic_impl.914" = type { %"struct.std::__1::__cxx_atomic_base_impl.915" }
%"struct.std::__1::__cxx_atomic_base_impl.915" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.919 }
%union.anon.919 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.923" = type { %"class.std::__1::__hash_table.924" }
%"class.std::__1::__hash_table.924" = type <{ %"class.std::__1::unique_ptr.925", %"class.std::__1::__compressed_pair.935", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.943", [4 x i8] }>
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927", %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::__hash_node_base.928"** }
%"struct.std::__1::__hash_node_base.928" = type { %"struct.std::__1::__hash_node_base.928"* }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.std::__1::__bucket_list_deallocator.930" }
%"class.std::__1::__bucket_list_deallocator.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.928" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.949", %"class.v8::internal::Handle.955", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.956", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.955" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.956" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.957", %"class.std::__1::vector.963", %"class.std::__1::unique_ptr.971", %"class.std::__1::unique_ptr.977", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.983", %"class.std::__1::vector.989", %"struct.std::__1::pair.997" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"class.std::__1::unique_ptr.965"*, %"class.std::__1::unique_ptr.965"*, %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::unique_ptr.965" = type opaque
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.std::__1::unique_ptr.965"* }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"struct.std::__1::pair.991"*, %"struct.std::__1::pair.991"*, %"class.std::__1::__compressed_pair.992" }
%"struct.std::__1::pair.991" = type opaque
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::pair.991"* }
%"struct.std::__1::pair.997" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.681"*, i16, i8*)*, i8* }
%"class.v8::Local.681" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1001", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1001" = type { %"class.std::__1::__hash_table.1002" }
%"class.std::__1::__hash_table.1002" = type <{ %"class.std::__1::unique_ptr.1003", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1018", %"class.std::__1::__compressed_pair.1022", [4 x i8] }>
%"class.std::__1::unique_ptr.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005", %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.1006"** }
%"struct.std::__1::__hash_node_base.1006" = type { %"struct.std::__1::__hash_node_base.1006"* }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.std::__1::__bucket_list_deallocator.1008" }
%"class.std::__1::__bucket_list_deallocator.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"struct.std::__1::__hash_node_base.1006" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.1030", i64 }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64* }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1035" }
%"class.std::__1::deque.1035" = type { %"class.std::__1::__deque_base.1036" }
%"class.std::__1::__deque_base.1036" = type { %"struct.std::__1::__split_buffer.1037", i64, %"class.std::__1::__compressed_pair.1044" }
%"struct.std::__1::__split_buffer.1037" = type { %"struct.std::__1::pair.1038"**, %"struct.std::__1::pair.1038"**, %"struct.std::__1::pair.1038"**, %"class.std::__1::__compressed_pair.1039" }
%"struct.std::__1::pair.1038" = type opaque
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.std::__1::pair.1038"** }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1049" = type { %"class.std::__1::__vector_base.1050" }
%"class.std::__1::__vector_base.1050" = type { %"class.v8::internal::Handle.784"*, %"class.v8::internal::Handle.784"*, %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.v8::internal::Handle.784"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.907", i32, %"class.v8::Local.681" }
%"class.v8::Local.907" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.653", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1062" = type { %"class.std::__1::__vector_base.1063" }
%"class.std::__1::__vector_base.1063" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1069" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1070" = type { %"class.std::__1::__hash_table.1071" }
%"class.std::__1::__hash_table.1071" = type <{ %"class.std::__1::unique_ptr.1072", %"class.std::__1::__compressed_pair.1082", %"class.std::__1::__compressed_pair.1087", %"class.std::__1::__compressed_pair.1090", [4 x i8] }>
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074", %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::__hash_node_base.1075"** }
%"struct.std::__1::__hash_node_base.1075" = type { %"struct.std::__1::__hash_node_base.1075"* }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.std::__1::__bucket_list_deallocator.1077" }
%"class.std::__1::__bucket_list_deallocator.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1075" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.149" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1094", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1123", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1124", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1094" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1119, %union.anon.1121, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1119 = type { i64 }
%union.anon.1121 = type { i64 }
%"class.std::__1::weak_ptr.1123" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.149" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1124" = type { %"class.v8::PersistentBase.1125" }
%"class.v8::PersistentBase.1125" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1095", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1131", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.634", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.463", %"class.std::__1::vector.669", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__cxx_atomic_impl.636" }
%"struct.std::__1::__cxx_atomic_impl.636" = type { %"struct.std::__1::__cxx_atomic_base_impl.637" }
%"struct.std::__1::__cxx_atomic_base_impl.637" = type { i32 }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.653" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.std::__1::pair.671"*, %"struct.std::__1::pair.671"*, %"class.std::__1::__compressed_pair.672" }
%"struct.std::__1::pair.671" = type opaque
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::pair.671"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.88" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.77", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.59", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.81", i8, [7 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i64*, i64*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.908", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.908" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1148" }
%"class.std::__1::unordered_map.1148" = type { %"class.std::__1::__hash_table.1149" }
%"class.std::__1::__hash_table.1149" = type <{ %"class.std::__1::unique_ptr.1150", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1165", %"class.std::__1::__compressed_pair.1168", [4 x i8] }>
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152", %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1153"** }
%"struct.std::__1::__hash_node_base.1153" = type { %"struct.std::__1::__hash_node_base.1153"* }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.std::__1::__bucket_list_deallocator.1155" }
%"class.std::__1::__bucket_list_deallocator.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.std::__1::__hash_node_base.1153" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1174" = type { %"struct.std::__1::__atomic_base.1175" }
%"struct.std::__1::__atomic_base.1175" = type { %"struct.std::__1::__cxx_atomic_impl.1176" }
%"struct.std::__1::__cxx_atomic_impl.1176" = type { %"struct.std::__1::__cxx_atomic_base_impl.1177" }
%"struct.std::__1::__cxx_atomic_base_impl.1177" = type { %"class.std::__1::vector.1178"* }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1180" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.92" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair.94" = type { i32, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair.94"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.100" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.141", %"struct.std::__1::atomic.145", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.156" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.std::__1::vector.276", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.170", %"class.std::__1::vector.171", %"class.std::__1::vector.178", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.170" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.173" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.186", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.192", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.186" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.188" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.190" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.192" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.202", i8, i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.218" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.170"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.218" = type { %"class.std::__1::__hash_table.219" }
%"class.std::__1::__hash_table.219" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.223"** }
%"struct.std::__1::__hash_node_base.223" = type { %"struct.std::__1::__hash_node_base.223"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator.225" }
%"class.std::__1::__bucket_list_deallocator.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.223" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.245" }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.std::__1::pair.278"*, %"struct.std::__1::pair.278"*, %"class.std::__1::__compressed_pair.279" }
%"struct.std::__1::pair.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::pair.278"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.284", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.269"], [3 x %"class.std::__1::vector.269"], i8, %"struct.std::__1::atomic.141", [6 x i8], %"class.std::__1::vector.269", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.294"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.269", %"class.std::__1::vector.269", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.294" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.319", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.312"], %"class.std::__1::unique_ptr.284" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.351", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.355", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.360" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__cxx_atomic_impl.353" }
%"struct.std::__1::__cxx_atomic_impl.353" = type { %"struct.std::__1::__cxx_atomic_base_impl.354" }
%"struct.std::__1::__cxx_atomic_base_impl.354" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.284", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.141", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.390", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.390" = type { %"class.std::__1::__hash_table.391" }
%"class.std::__1::__hash_table.391" = type <{ %"class.std::__1::unique_ptr.392", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.395"** }
%"struct.std::__1::__hash_node_base.395" = type { %"struct.std::__1::__hash_node_base.395"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator.397" }
%"class.std::__1::__bucket_list_deallocator.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.395" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.426" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.469" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.488", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.470", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.492" = type { %"class.std::__1::__hash_table.493" }
%"class.std::__1::__hash_table.493" = type <{ %"class.std::__1::unique_ptr.494", %"class.std::__1::__compressed_pair.504", %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.512", [4 x i8] }>
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496", %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.497"** }
%"struct.std::__1::__hash_node_base.497" = type { %"struct.std::__1::__hash_node_base.497"* }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.std::__1::__bucket_list_deallocator.499" }
%"class.std::__1::__bucket_list_deallocator.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"struct.std::__1::__hash_node_base.497" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.530", %"class.std::__1::vector.530" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.319" = type { %"class.std::__1::__hash_table.320" }
%"class.std::__1::__hash_table.320" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.340", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base.324"** }
%"struct.std::__1::__hash_node_base.324" = type { %"struct.std::__1::__hash_node_base.324"* }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.std::__1::__bucket_list_deallocator.326" }
%"class.std::__1::__bucket_list_deallocator.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.324" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.569" = type { %"class.std::__1::__hash_table.570" }
%"class.std::__1::__hash_table.570" = type <{ %"class.std::__1::unique_ptr.571", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.589", [4 x i8] }>
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573", %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node_base.574"** }
%"struct.std::__1::__hash_node_base.574" = type { %"struct.std::__1::__hash_node_base.574"* }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.std::__1::__bucket_list_deallocator.576" }
%"class.std::__1::__bucket_list_deallocator.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.std::__1::__hash_node_base.574" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.543" = type { %"class.std::__1::__hash_table.544" }
%"class.std::__1::__hash_table.544" = type <{ %"class.std::__1::unique_ptr.545", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.560", %"class.std::__1::__compressed_pair.563", [4 x i8] }>
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547", %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base.548"** }
%"struct.std::__1::__hash_node_base.548" = type { %"struct.std::__1::__hash_node_base.548"* }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.std::__1::__bucket_list_deallocator.550" }
%"class.std::__1::__bucket_list_deallocator.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.std::__1::__hash_node_base.548" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.615", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.130" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::Object"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::Code::OptimizedCodeIterator" = type { %"class.v8::internal::NativeContext", %"class.v8::internal::Code", %"class.v8::internal::Isolate"* }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.v8::internal::EmbeddedData" = type <{ i8*, i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::CodeDesc" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %"class.v8::internal::Assembler"* }
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque.1242", i32, %"class.std::__1::deque.1242", %"class.std::__1::map", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.1185", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.1203", %"class.std::__1::vector.1049", %"class.std::__1::unordered_map.1211", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.1196" }
%"class.std::__1::vector.1196" = type { %"class.std::__1::__vector_base.1197" }
%"class.std::__1::__vector_base.1197" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.1198" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.1203" = type { %"class.std::__1::__vector_base.1204" }
%"class.std::__1::__vector_base.1204" = type { %"class.v8::internal::Handle.1205"*, %"class.v8::internal::Handle.1205"*, %"class.std::__1::__compressed_pair.1206" }
%"class.v8::internal::Handle.1205" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.v8::internal::Handle.1205"* }
%"class.std::__1::unordered_map.1211" = type { %"class.std::__1::__hash_table.1212" }
%"class.std::__1::__hash_table.1212" = type <{ %"class.std::__1::unique_ptr.1213", %"class.std::__1::__compressed_pair.1223", %"class.std::__1::__compressed_pair.1228", %"class.std::__1::__compressed_pair.1231", [4 x i8] }>
%"class.std::__1::unique_ptr.1213" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215", %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"struct.std::__1::__hash_node_base.1216"** }
%"struct.std::__1::__hash_node_base.1216" = type { %"struct.std::__1::__hash_node_base.1216"* }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.std::__1::__bucket_list_deallocator.1218" }
%"class.std::__1::__bucket_list_deallocator.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::__hash_node_base.1216" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.1235", i64 }
%"class.std::__1::vector.1235" = type { %"class.std::__1::__vector_base.1236" }
%"class.std::__1::__vector_base.1236" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { i32* }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque.1242" = type { %"class.std::__1::__deque_base.1243" }
%"class.std::__1::__deque_base.1243" = type { %"struct.std::__1::__split_buffer.1244", i64, %"class.std::__1::__compressed_pair.1250" }
%"struct.std::__1::__split_buffer.1244" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { i32** }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1251" }
%"class.std::__1::__tree.1251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1252", %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1260" }
%"class.std::__1::__tree.1260" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1261", %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::SafepointTable" = type { i64, i8, i64, i32, i32 }
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.1270", %"class.v8::internal::Handle.1271", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Vector.1270" = type { i8*, i64 }
%"class.v8::internal::Handle.1271" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::DeoptimizationData" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::BytecodeArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle.1277", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::Handle.1277" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::interpreter::JumpTableTargetOffsets" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::Smi", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle" }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::Brief" = type { i64 }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef" = type { %"class.v8::internal::DependentCode" }
%"class.v8::internal::DependentCode" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal9RelocInfo10kApplyMaskE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"kind() != CodeKind::BASELINE\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"target.IsCode()\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"Parameter count \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Register count \00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"Frame size \00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"OSR nesting level: \00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"Bytecode Age: \00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c" S> \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c" E> \00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"         \00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c" @ \00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c" {\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c": @\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"Constant pool (size = \00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Handler Table (size = \00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"Source Position Table (size = \00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal28FLAG_trace_code_dependenciesE = external local_unnamed_addr global i8, align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"Installing dependency of [\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"] on [\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"] in group [\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"transition\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"prototype-check\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"property-cell-changed\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"field-const\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"field-type\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"field-representation\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"initial-map-changed\00", align 1
@.str.37 = private unnamed_addr constant [33 x i8] c"allocation-site-tenuring-changed\00", align 1
@.str.38 = private unnamed_addr constant [35 x i8] c"allocation-site-transition-changed\00", align 1
@_ZN2v88internal12FLAG_jitlessE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.39 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external local_unnamed_addr constant [3 x [197 x i8]], align 16
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.40 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2v88internal13DependentCode19DependencyGroupNameENS1_15DependencyGroupE = private unnamed_addr constant [9 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal13DependentCode25MarkCodeForDeoptimizationENS1_15DependencyGroupE = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i64 0, i64 0)], align 8

@_ZN2v88internal4Code21OptimizedCodeIteratorC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::Code::OptimizedCodeIterator"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::Code::OptimizedCodeIterator"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal4Code21OptimizedCodeIteratorC2EPNS0_7IsolateE

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code21SafepointTableAddressEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 536870912
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10, !prof !2

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = load i64, i64* %3, align 8
  %15 = add i64 %14, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  br label %41

19:                                               ; preds = %10
  %20 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #12
  %21 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !3
  %22 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !3
  %23 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !3
  %24 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !3
  %25 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %21, i8** %25, align 8, !alias.scope !3
  %26 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %22, i32* %26, align 8, !alias.scope !3
  %27 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %23, i8** %27, align 8, !alias.scope !3
  %28 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %24, i32* %28, align 8, !alias.scope !3
  %29 = load i64, i64* %3, align 8
  %30 = add i64 %29, 31
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = call i64 @_ZNK2v88internal12EmbeddedData22MetadataStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %32) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #12
  br label %41

34:                                               ; preds = %1
  %35 = add i64 %4, 63
  %36 = add i64 %4, 19
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = add i64 %35, %39
  br label %41

41:                                               ; preds = %13, %19, %34
  %42 = phi i64 [ %40, %34 ], [ %18, %13 ], [ %33, %19 ]
  ret i64 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal4Code20safepoint_table_sizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 39
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4Code19has_safepoint_tableEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 39
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code19HandlerTableAddressEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 536870912
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %35, label %10, !prof !2

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = load i64, i64* %3, align 8
  %15 = add i64 %14, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  br label %42

19:                                               ; preds = %10
  %20 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #12
  %21 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !6
  %22 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !6
  %23 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !6
  %24 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !6
  %25 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %21, i8** %25, align 8, !alias.scope !6
  %26 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %22, i32* %26, align 8, !alias.scope !6
  %27 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %23, i8** %27, align 8, !alias.scope !6
  %28 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %24, i32* %28, align 8, !alias.scope !6
  %29 = load i64, i64* %3, align 8
  %30 = add i64 %29, 31
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = call i64 @_ZNK2v88internal12EmbeddedData22MetadataStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %32) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #12
  %34 = load i64, i64* %3, align 8
  br label %42

35:                                               ; preds = %1
  %36 = add i64 %4, 63
  %37 = add i64 %4, 19
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = add i64 %36, %40
  br label %42

42:                                               ; preds = %13, %19, %35
  %43 = phi i64 [ %4, %35 ], [ %14, %13 ], [ %34, %19 ]
  %44 = phi i64 [ %41, %35 ], [ %18, %13 ], [ %33, %19 ]
  %45 = add i64 %43, 39
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = add i64 %44, %48
  ret i64 %49
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal4Code18handler_table_sizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 43
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add i64 %3, 39
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %6, %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4Code17has_handler_tableEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 43
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add i64 %3, 39
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %6, %9
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal4Code18constant_pool_sizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4Code17has_constant_poolEv(%"class.v8::internal::Code"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal4Code18code_comments_sizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 47
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add i64 %3, 43
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %6, %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal4Code17has_code_commentsEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 47
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add i64 %3, 43
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %6, %9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code20ClearEmbeddedObjectsEPNS0_4HeapE(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Heap"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RelocIterator", align 8
  %4 = ptrtoint %"class.v8::internal::Heap"* %1 to i64
  %5 = add i64 %4, -41416
  %6 = inttoptr i64 %5 to %"class.v8::internal::Isolate"*
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 7, i32 0, i64 4
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::RelocIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %3, i64 %11, i32 56) #12
  %12 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !9
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2
  %17 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 1
  %18 = bitcast %"class.v8::internal::RelocInfo"* %16 to i64**
  %19 = trunc i64 %8 to i32
  %20 = bitcast %"class.v8::internal::RelocInfo"* %16 to i32**
  %21 = bitcast %"class.v8::internal::RelocInfo"* %16 to i8**
  br label %34

22:                                               ; preds = %41, %2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #12
  %23 = load i64, i64* %10, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 15
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 acquire, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = or i32 %32, 2
  store atomic volatile i32 %33, i32* %31 monotonic, align 4
  ret void

34:                                               ; preds = %15, %41
  %35 = load i8, i8* %17, align 8
  %36 = icmp eq i8 %35, 3
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = load i32*, i32** %20, align 8
  store i32 %19, i32* %38, align 1
  br label %41

39:                                               ; preds = %34
  %40 = load i64*, i64** %18, align 8
  store i64 %8, i64* %40, align 1
  br label %41

41:                                               ; preds = %37, %39
  %42 = load i8*, i8** %21, align 8
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %42, i64 8) #12
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %3) #12
  %43 = load i8, i8* %12, align 8, !range !9
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %34, label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #4

declare void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code8RelocateEl(%"class.v8::internal::Code"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RelocIterator", align 8
  %4 = bitcast %"class.v8::internal::RelocIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = load i32, i32* @_ZN2v88internal9RelocInfo10kApplyMaskE, align 4
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %3, i64 %6, i32 %7) #12
  %8 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !9
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 1
  %14 = bitcast %"class.v8::internal::RelocInfo"* %12 to i64**
  %15 = bitcast %"class.v8::internal::RelocInfo"* %12 to i32**
  %16 = trunc i64 %1 to i32
  br label %25

17:                                               ; preds = %35, %2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, 63
  %20 = add i64 %18, 19
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = inttoptr i64 %19 to i8*
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %24, i64 %23) #12
  ret void

25:                                               ; preds = %11, %35
  %26 = load i8, i8* %13, align 8
  switch i8 %26, label %35 [
    i8 1, label %27
    i8 8, label %27
    i8 10, label %31
  ]

27:                                               ; preds = %25, %25
  %28 = load i32*, i32** %15, align 8
  %29 = load i32, i32* %28, align 1
  %30 = sub nsw i32 %29, %16
  store i32 %30, i32* %28, align 1
  br label %35

31:                                               ; preds = %25
  %32 = load i64*, i64** %14, align 8
  %33 = load i64, i64* %32, align 1
  %34 = add i64 %33, %1
  store i64 %34, i64* %32, align 1
  br label %35

35:                                               ; preds = %25, %27, %31
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %3) #12
  %36 = load i8, i8* %8, align 8, !range !9
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %25, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal4Code11FlushICacheEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 63
  %5 = add i64 %3, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = inttoptr i64 %4 to i8*
  tail call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %9, i64 %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code15CopyFromNoFlushEPNS0_4HeapERKNS0_8CodeDescE(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Heap"* nocapture readnone, %"class.v8::internal::CodeDesc"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::RelocIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 63
  %8 = inttoptr i64 %7 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %81, label %15

15:                                               ; preds = %3
  %16 = icmp ult i32 %12, 8
  br i1 %16, label %17, label %67

17:                                               ; preds = %15
  %18 = add nsw i64 %13, -1
  %19 = and i64 %13, 7
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %17, %21
  %22 = phi i8* [ %27, %21 ], [ %10, %17 ]
  %23 = phi i64 [ %26, %21 ], [ %13, %17 ]
  %24 = phi i8* [ %29, %21 ], [ %8, %17 ]
  %25 = phi i64 [ %30, %21 ], [ %19, %17 ]
  %26 = add i64 %23, -1
  %27 = getelementptr inbounds i8, i8* %22, i64 1
  %28 = load i8, i8* %22, align 1
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 %28, i8* %24, align 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %21, !llvm.loop !10

32:                                               ; preds = %21, %17
  %33 = phi i8* [ %10, %17 ], [ %27, %21 ]
  %34 = phi i64 [ %13, %17 ], [ %26, %21 ]
  %35 = phi i8* [ %8, %17 ], [ %29, %21 ]
  %36 = icmp ult i64 %18, 7
  br i1 %36, label %81, label %37

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %63, %37 ], [ %33, %32 ]
  %39 = phi i64 [ %62, %37 ], [ %34, %32 ]
  %40 = phi i8* [ %65, %37 ], [ %35, %32 ]
  %41 = getelementptr inbounds i8, i8* %38, i64 1
  %42 = load i8, i8* %38, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %42, i8* %40, align 1
  %44 = getelementptr inbounds i8, i8* %38, i64 2
  %45 = load i8, i8* %41, align 1
  %46 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 %45, i8* %43, align 1
  %47 = getelementptr inbounds i8, i8* %38, i64 3
  %48 = load i8, i8* %44, align 1
  %49 = getelementptr inbounds i8, i8* %40, i64 3
  store i8 %48, i8* %46, align 1
  %50 = getelementptr inbounds i8, i8* %38, i64 4
  %51 = load i8, i8* %47, align 1
  %52 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 %51, i8* %49, align 1
  %53 = getelementptr inbounds i8, i8* %38, i64 5
  %54 = load i8, i8* %50, align 1
  %55 = getelementptr inbounds i8, i8* %40, i64 5
  store i8 %54, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %38, i64 6
  %57 = load i8, i8* %53, align 1
  %58 = getelementptr inbounds i8, i8* %40, i64 6
  store i8 %57, i8* %55, align 1
  %59 = getelementptr inbounds i8, i8* %38, i64 7
  %60 = load i8, i8* %56, align 1
  %61 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 %60, i8* %58, align 1
  %62 = add i64 %39, -8
  %63 = getelementptr inbounds i8, i8* %38, i64 8
  %64 = load i8, i8* %59, align 1
  %65 = getelementptr inbounds i8, i8* %40, i64 8
  store i8 %64, i8* %61, align 1
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %81, label %37, !llvm.loop !12

67:                                               ; preds = %15
  switch i64 %13, label %80 [
    i64 16, label %79
    i64 15, label %78
    i64 14, label %77
    i64 13, label %76
    i64 12, label %75
    i64 11, label %74
    i64 10, label %73
    i64 8, label %68
    i64 9, label %72
  ]

68:                                               ; preds = %67
  %69 = bitcast i8* %10 to i64*
  %70 = inttoptr i64 %7 to i64*
  %71 = load i64, i64* %69, align 1
  store i64 %71, i64* %70, align 1
  br label %81

72:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 9, i1 false) #12
  br label %81

73:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 10, i1 false) #12
  br label %81

74:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 11, i1 false) #12
  br label %81

75:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 12, i1 false) #12
  br label %81

76:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 13, i1 false) #12
  br label %81

77:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 14, i1 false) #12
  br label %81

78:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 15, i1 false) #12
  br label %81

79:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 16, i1 false) #12
  br label %81

80:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %10, i64 %13, i1 false) #12
  br label %81

81:                                               ; preds = %32, %37, %3, %68, %72, %73, %74, %75, %76, %77, %78, %79, %80
  %82 = load i64, i64* %5, align 8
  %83 = add i64 %82, 63
  %84 = load i32, i32* %11, align 4
  %85 = sext i32 %84 to i64
  %86 = add i64 %83, %85
  %87 = inttoptr i64 %86 to i8*
  %88 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 13
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 14
  %91 = load i32, i32* %90, align 8
  %92 = sext i32 %91 to i64
  %93 = icmp eq i32 %91, 0
  br i1 %93, label %160, label %94

94:                                               ; preds = %81
  %95 = icmp ult i32 %91, 8
  br i1 %95, label %96, label %146

96:                                               ; preds = %94
  %97 = add nsw i64 %92, -1
  %98 = and i64 %92, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %96, %100
  %101 = phi i8* [ %106, %100 ], [ %89, %96 ]
  %102 = phi i64 [ %105, %100 ], [ %92, %96 ]
  %103 = phi i8* [ %108, %100 ], [ %87, %96 ]
  %104 = phi i64 [ %109, %100 ], [ %98, %96 ]
  %105 = add i64 %102, -1
  %106 = getelementptr inbounds i8, i8* %101, i64 1
  %107 = load i8, i8* %101, align 1
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  store i8 %107, i8* %103, align 1
  %109 = add i64 %104, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %100, !llvm.loop !14

111:                                              ; preds = %100, %96
  %112 = phi i8* [ %89, %96 ], [ %106, %100 ]
  %113 = phi i64 [ %92, %96 ], [ %105, %100 ]
  %114 = phi i8* [ %87, %96 ], [ %108, %100 ]
  %115 = icmp ult i64 %97, 7
  br i1 %115, label %160, label %116

116:                                              ; preds = %111, %116
  %117 = phi i8* [ %142, %116 ], [ %112, %111 ]
  %118 = phi i64 [ %141, %116 ], [ %113, %111 ]
  %119 = phi i8* [ %144, %116 ], [ %114, %111 ]
  %120 = getelementptr inbounds i8, i8* %117, i64 1
  %121 = load i8, i8* %117, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 1
  store i8 %121, i8* %119, align 1
  %123 = getelementptr inbounds i8, i8* %117, i64 2
  %124 = load i8, i8* %120, align 1
  %125 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 %124, i8* %122, align 1
  %126 = getelementptr inbounds i8, i8* %117, i64 3
  %127 = load i8, i8* %123, align 1
  %128 = getelementptr inbounds i8, i8* %119, i64 3
  store i8 %127, i8* %125, align 1
  %129 = getelementptr inbounds i8, i8* %117, i64 4
  %130 = load i8, i8* %126, align 1
  %131 = getelementptr inbounds i8, i8* %119, i64 4
  store i8 %130, i8* %128, align 1
  %132 = getelementptr inbounds i8, i8* %117, i64 5
  %133 = load i8, i8* %129, align 1
  %134 = getelementptr inbounds i8, i8* %119, i64 5
  store i8 %133, i8* %131, align 1
  %135 = getelementptr inbounds i8, i8* %117, i64 6
  %136 = load i8, i8* %132, align 1
  %137 = getelementptr inbounds i8, i8* %119, i64 6
  store i8 %136, i8* %134, align 1
  %138 = getelementptr inbounds i8, i8* %117, i64 7
  %139 = load i8, i8* %135, align 1
  %140 = getelementptr inbounds i8, i8* %119, i64 7
  store i8 %139, i8* %137, align 1
  %141 = add i64 %118, -8
  %142 = getelementptr inbounds i8, i8* %117, i64 8
  %143 = load i8, i8* %138, align 1
  %144 = getelementptr inbounds i8, i8* %119, i64 8
  store i8 %143, i8* %140, align 1
  %145 = icmp eq i64 %141, 0
  br i1 %145, label %160, label %116, !llvm.loop !15

146:                                              ; preds = %94
  switch i64 %92, label %159 [
    i64 16, label %158
    i64 15, label %157
    i64 14, label %156
    i64 13, label %155
    i64 12, label %154
    i64 11, label %153
    i64 10, label %152
    i64 8, label %147
    i64 9, label %151
  ]

147:                                              ; preds = %146
  %148 = bitcast i8* %89 to i64*
  %149 = inttoptr i64 %86 to i64*
  %150 = load i64, i64* %148, align 1
  store i64 %150, i64* %149, align 1
  br label %160

151:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 9, i1 false) #12
  br label %160

152:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 10, i1 false) #12
  br label %160

153:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 11, i1 false) #12
  br label %160

154:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 12, i1 false) #12
  br label %160

155:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 13, i1 false) #12
  br label %160

156:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 14, i1 false) #12
  br label %160

157:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 15, i1 false) #12
  br label %160

158:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 16, i1 false) #12
  br label %160

159:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 %92, i1 false) #12
  br label %160

160:                                              ; preds = %111, %116, %81, %147, %151, %152, %153, %154, %155, %156, %157, %158, %159
  %161 = load i64, i64* %5, align 8
  %162 = and i64 %161, -4294967296
  %163 = add i64 %161, 3
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %162, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i8*
  %170 = load i8*, i8** %9, align 8
  %171 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %170, i64 %173
  %175 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 12
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = sub nsw i64 0, %177
  %179 = getelementptr inbounds i8, i8* %174, i64 %178
  %180 = icmp eq i32 %176, 0
  br i1 %180, label %247, label %181

181:                                              ; preds = %160
  %182 = icmp ult i32 %176, 8
  br i1 %182, label %183, label %233

183:                                              ; preds = %181
  %184 = add nsw i64 %177, -1
  %185 = and i64 %177, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %198, label %187

187:                                              ; preds = %183, %187
  %188 = phi i8* [ %193, %187 ], [ %179, %183 ]
  %189 = phi i64 [ %192, %187 ], [ %177, %183 ]
  %190 = phi i8* [ %195, %187 ], [ %169, %183 ]
  %191 = phi i64 [ %196, %187 ], [ %185, %183 ]
  %192 = add i64 %189, -1
  %193 = getelementptr inbounds i8, i8* %188, i64 1
  %194 = load i8, i8* %188, align 1
  %195 = getelementptr inbounds i8, i8* %190, i64 1
  store i8 %194, i8* %190, align 1
  %196 = add i64 %191, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %187, !llvm.loop !16

198:                                              ; preds = %187, %183
  %199 = phi i8* [ %179, %183 ], [ %193, %187 ]
  %200 = phi i64 [ %177, %183 ], [ %192, %187 ]
  %201 = phi i8* [ %169, %183 ], [ %195, %187 ]
  %202 = icmp ult i64 %184, 7
  br i1 %202, label %247, label %203

203:                                              ; preds = %198, %203
  %204 = phi i8* [ %229, %203 ], [ %199, %198 ]
  %205 = phi i64 [ %228, %203 ], [ %200, %198 ]
  %206 = phi i8* [ %231, %203 ], [ %201, %198 ]
  %207 = getelementptr inbounds i8, i8* %204, i64 1
  %208 = load i8, i8* %204, align 1
  %209 = getelementptr inbounds i8, i8* %206, i64 1
  store i8 %208, i8* %206, align 1
  %210 = getelementptr inbounds i8, i8* %204, i64 2
  %211 = load i8, i8* %207, align 1
  %212 = getelementptr inbounds i8, i8* %206, i64 2
  store i8 %211, i8* %209, align 1
  %213 = getelementptr inbounds i8, i8* %204, i64 3
  %214 = load i8, i8* %210, align 1
  %215 = getelementptr inbounds i8, i8* %206, i64 3
  store i8 %214, i8* %212, align 1
  %216 = getelementptr inbounds i8, i8* %204, i64 4
  %217 = load i8, i8* %213, align 1
  %218 = getelementptr inbounds i8, i8* %206, i64 4
  store i8 %217, i8* %215, align 1
  %219 = getelementptr inbounds i8, i8* %204, i64 5
  %220 = load i8, i8* %216, align 1
  %221 = getelementptr inbounds i8, i8* %206, i64 5
  store i8 %220, i8* %218, align 1
  %222 = getelementptr inbounds i8, i8* %204, i64 6
  %223 = load i8, i8* %219, align 1
  %224 = getelementptr inbounds i8, i8* %206, i64 6
  store i8 %223, i8* %221, align 1
  %225 = getelementptr inbounds i8, i8* %204, i64 7
  %226 = load i8, i8* %222, align 1
  %227 = getelementptr inbounds i8, i8* %206, i64 7
  store i8 %226, i8* %224, align 1
  %228 = add i64 %205, -8
  %229 = getelementptr inbounds i8, i8* %204, i64 8
  %230 = load i8, i8* %225, align 1
  %231 = getelementptr inbounds i8, i8* %206, i64 8
  store i8 %230, i8* %227, align 1
  %232 = icmp eq i64 %228, 0
  br i1 %232, label %247, label %203, !llvm.loop !17

233:                                              ; preds = %181
  switch i64 %177, label %246 [
    i64 16, label %245
    i64 15, label %244
    i64 14, label %243
    i64 13, label %242
    i64 12, label %241
    i64 11, label %240
    i64 10, label %239
    i64 8, label %234
    i64 9, label %238
  ]

234:                                              ; preds = %233
  %235 = bitcast i8* %179 to i64*
  %236 = inttoptr i64 %168 to i64*
  %237 = load i64, i64* %235, align 1
  store i64 %237, i64* %236, align 1
  br label %247

238:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 9, i1 false) #12
  br label %247

239:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 10, i1 false) #12
  br label %247

240:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 11, i1 false) #12
  br label %247

241:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 12, i1 false) #12
  br label %247

242:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 13, i1 false) #12
  br label %247

243:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 14, i1 false) #12
  br label %247

244:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 15, i1 false) #12
  br label %247

245:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 16, i1 false) #12
  br label %247

246:                                              ; preds = %233
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %179, i64 %177, i1 false) #12
  br label %247

247:                                              ; preds = %198, %203, %160, %234, %238, %239, %240, %241, %242, %243, %244, %245, %246
  %248 = getelementptr inbounds %"class.v8::internal::CodeDesc", %"class.v8::internal::CodeDesc"* %2, i64 0, i32 15
  %249 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %248, align 8
  %250 = load i32, i32* @_ZN2v88internal9RelocInfo10kApplyMaskE, align 4
  %251 = or i32 %250, 318
  %252 = bitcast %"class.v8::internal::RelocIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %252) #12
  %253 = load i64, i64* %5, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %4, i64 %253, i32 %251) #12
  %254 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 3
  %255 = load i8, i8* %254, align 8, !range !9
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %257, label %268

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 2
  %259 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 2, i32 1
  %260 = bitcast %"class.v8::internal::CodeDesc"* %2 to i64*
  %261 = bitcast %"class.v8::internal::RelocInfo"* %258 to i64**
  %262 = bitcast %"class.v8::internal::RelocInfo"* %258 to i32**
  %263 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %249, i64 0, i32 0, i32 9, i32 8
  %264 = bitcast %"class.v8::internal::RelocInfo"* %258 to i64***
  %265 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %249, i64 0, i32 0
  %266 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %258, i64 0, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %269

268:                                              ; preds = %354, %247
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %252) #12
  ret void

269:                                              ; preds = %257, %354
  %270 = load i8, i8* %259, align 8
  %271 = add i8 %270, -3
  %272 = icmp ult i8 %271, 3
  br i1 %272, label %273, label %318

273:                                              ; preds = %269
  %274 = icmp eq i8 %270, 3
  %275 = load i64, i64* %266, align 8
  br i1 %274, label %280, label %276

276:                                              ; preds = %273
  %277 = inttoptr i64 %275 to i64**
  %278 = load i64*, i64** %277, align 1
  %279 = load i64, i64* %278, align 8
  br label %291

280:                                              ; preds = %273
  %281 = inttoptr i64 %275 to i32*
  %282 = load i32, i32* %281, align 1
  %283 = zext i32 %282 to i64
  %284 = call i64* @_ZNK2v88internal13AssemblerBase17GetEmbeddedObjectEm(%"class.v8::internal::AssemblerBase"* %265, i64 %283) #12
  %285 = load i8, i8* %259, align 8
  %286 = load i64, i64* %284, align 8
  %287 = icmp eq i8 %285, 3
  br i1 %287, label %288, label %291

288:                                              ; preds = %280
  %289 = trunc i64 %286 to i32
  %290 = load i32*, i32** %262, align 8
  store i32 %289, i32* %290, align 1
  br label %294

291:                                              ; preds = %276, %280
  %292 = phi i64 [ %279, %276 ], [ %286, %280 ]
  %293 = load i64*, i64** %261, align 8
  store i64 %292, i64* %293, align 1
  br label %294

294:                                              ; preds = %291, %288
  %295 = phi i64 [ %292, %291 ], [ %286, %288 ]
  %296 = load i64, i64* %267, align 8
  %297 = trunc i64 %296 to i32
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %354, label %299

299:                                              ; preds = %294
  %300 = and i64 %295, -262144
  %301 = or i64 %300, 8
  %302 = inttoptr i64 %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = and i64 %303, 24
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %307, label %306

306:                                              ; preds = %299
  call void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64 %296, %"class.v8::internal::RelocInfo"* %258, i64 %295) #12
  br label %307

307:                                              ; preds = %306, %299
  %308 = and i64 %296, -262144
  %309 = or i64 %308, 8
  %310 = inttoptr i64 %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = and i64 %311, 262144
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %354, label %314

314:                                              ; preds = %307
  %315 = or i64 %308, 16
  %316 = inttoptr i64 %315 to %"class.v8::internal::Heap"**
  %317 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %316, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"* %317, i64 %296, %"class.v8::internal::RelocInfo"* %258, i64 %295) #12
  br label %354

318:                                              ; preds = %269
  %319 = icmp slt i8 %270, 3
  br i1 %319, label %320, label %334

320:                                              ; preds = %318
  %321 = icmp eq i8 %270, 1
  br i1 %321, label %322, label %327

322:                                              ; preds = %320
  %323 = load i32*, i32** %262, align 8
  %324 = load i32, i32* %323, align 1
  %325 = sext i32 %324 to i64
  %326 = call i64* @_ZNK2v88internal13AssemblerBase13GetCodeTargetEl(%"class.v8::internal::AssemblerBase"* %265, i64 %325) #12
  br label %330

327:                                              ; preds = %320
  %328 = load i64**, i64*** %264, align 8
  %329 = load i64*, i64** %328, align 1
  br label %330

330:                                              ; preds = %322, %327
  %331 = phi i64* [ %326, %322 ], [ %329, %327 ]
  %332 = load i64, i64* %331, align 8
  %333 = add i64 %332, 63
  call void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* %258, i64 %333, i32 4, i32 1) #12
  br label %354

334:                                              ; preds = %318
  switch i8 %270, label %354 [
    i8 8, label %335
    i8 10, label %346
  ]

335:                                              ; preds = %334
  %336 = load i32*, i32** %262, align 8
  %337 = load i32, i32* %336, align 1
  %338 = sext i32 %337 to i64
  %339 = load i64, i64* %263, align 8
  %340 = add i64 %339, %338
  %341 = ptrtoint i32* %336 to i64
  %342 = add i64 %341, 4
  %343 = add i64 %342, %338
  %344 = icmp eq i64 %343, %340
  br i1 %344, label %354, label %345

345:                                              ; preds = %335
  call void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* %258, i64 %340, i32 4, i32 1) #12
  br label %354

346:                                              ; preds = %334
  %347 = load i64, i64* %5, align 8
  %348 = add i64 %347, 63
  %349 = load i64, i64* %260, align 8
  %350 = sub i64 %348, %349
  %351 = load i64*, i64** %261, align 8
  %352 = load i64, i64* %351, align 1
  %353 = add i64 %350, %352
  store i64 %353, i64* %351, align 1
  br label %354

354:                                              ; preds = %334, %346, %345, %335, %314, %307, %294, %330
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %4) #12
  %355 = load i8, i8* %254, align 8, !range !9
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %269, label %268
}

declare void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"*, i64, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code17GetSafepointEntryEPNS0_7IsolateEm(%"class.v8::internal::SafepointEntry"* noalias sret, %"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::SafepointTable", align 8
  %6 = bitcast %"class.v8::internal::SafepointTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  call void @_ZN2v88internal14SafepointTableC1EPNS0_7IsolateEmNS0_4CodeE(%"class.v8::internal::SafepointTable"* nonnull %5, %"class.v8::internal::Isolate"* %2, i64 %3, i64 %8) #12
  call void @_ZNK2v88internal14SafepointTable9FindEntryEm(%"class.v8::internal::SafepointEntry"* sret %0, %"class.v8::internal::SafepointTable"* nonnull %5, i64 %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN2v88internal14SafepointTableC1EPNS0_7IsolateEmNS0_4CodeE(%"class.v8::internal::SafepointTable"*, %"class.v8::internal::Isolate"*, i64, i64) unnamed_addr #4

declare void @_ZNK2v88internal14SafepointTable9FindEntryEm(%"class.v8::internal::SafepointEntry"* sret, %"class.v8::internal::SafepointTable"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal4Code22OffHeapInstructionSizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  br label %27

11:                                               ; preds = %1
  %12 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  %13 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !18
  %14 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !18
  %15 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !18
  %16 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !18
  %17 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %13, i8** %17, align 8, !alias.scope !18
  %18 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %14, i32* %18, align 8, !alias.scope !18
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %15, i8** %19, align 8, !alias.scope !18
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %16, i32* %20, align 8, !alias.scope !18
  %21 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 31
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = call i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %25) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %27

27:                                               ; preds = %11, %5
  %28 = phi i32 [ %10, %5 ], [ %26, %11 ]
  ret i32 %28
}

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #4

declare i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  br label %60

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #12
  %14 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !9, !noalias !21
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !24
  br label %45

18:                                               ; preds = %12
  %19 = tail call { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal9CodeRange23GetProcessWideCodeRangeEv() #12
  %20 = extractvalue { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } %19, 0
  %21 = extractvalue { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } %19, 1
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %21 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %21) #12
  br label %33

33:                                               ; preds = %27, %23, %18
  %34 = icmp eq %"class.v8::internal::CodeRange"* %20, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.v8::internal::CodeRange", %"class.v8::internal::CodeRange"* %20, i64 0, i32 1, i32 0
  %37 = bitcast %"struct.std::__1::__atomic_base.489"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = load atomic i64, i64* %37 acquire, align 8, !noalias !27
  %42 = inttoptr i64 %41 to i8*
  br label %45

43:                                               ; preds = %35, %33
  %44 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !30
  br label %45

45:                                               ; preds = %16, %40, %43
  %46 = phi i8* [ %17, %16 ], [ %42, %40 ], [ %44, %43 ]
  %47 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !33
  %48 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !33
  %49 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !33
  %50 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %46, i8** %50, align 8, !alias.scope !34
  %51 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %47, i32* %51, align 8, !alias.scope !34
  %52 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %48, i8** %52, align 8, !alias.scope !34
  %53 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %49, i32* %53, align 8, !alias.scope !34
  %54 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 31
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %58) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #12
  br label %60

60:                                               ; preds = %45, %5
  %61 = phi i64 [ %11, %5 ], [ %59, %45 ]
  ret i64 %61
}

declare i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code21OffHeapInstructionEndEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  br label %67

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #12
  %14 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !9, !noalias !35
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !38
  br label %45

18:                                               ; preds = %12
  %19 = tail call { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal9CodeRange23GetProcessWideCodeRangeEv() #12
  %20 = extractvalue { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } %19, 0
  %21 = extractvalue { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } %19, 1
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 -1 acq_rel
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0
  %29 = bitcast %"class.std::__1::__shared_weak_count"* %21 to void (%"class.std::__1::__shared_count"*)***
  %30 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, i64 2
  %32 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %31, align 8
  tail call void %32(%"class.std::__1::__shared_count"* %28) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %21) #12
  br label %33

33:                                               ; preds = %27, %23, %18
  %34 = icmp eq %"class.v8::internal::CodeRange"* %20, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.v8::internal::CodeRange", %"class.v8::internal::CodeRange"* %20, i64 0, i32 1, i32 0
  %37 = bitcast %"struct.std::__1::__atomic_base.489"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = load atomic i64, i64* %37 acquire, align 8, !noalias !41
  %42 = inttoptr i64 %41 to i8*
  br label %45

43:                                               ; preds = %35, %33
  %44 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !44
  br label %45

45:                                               ; preds = %16, %40, %43
  %46 = phi i8* [ %17, %16 ], [ %42, %40 ], [ %44, %43 ]
  %47 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !33
  %48 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !33
  %49 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !33
  %50 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %46, i8** %50, align 8, !alias.scope !47
  %51 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %47, i32* %51, align 8, !alias.scope !47
  %52 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %48, i8** %52, align 8, !alias.scope !47
  %53 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %49, i32* %53, align 8, !alias.scope !47
  %54 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 31
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %58) #12
  %60 = load i64, i64* %54, align 8
  %61 = add i64 %60, 31
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = call i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %63) #12
  %65 = zext i32 %64 to i64
  %66 = add i64 %59, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #12
  br label %67

67:                                               ; preds = %45, %5
  %68 = phi i64 [ %11, %5 ], [ %66, %45 ]
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEPNS0_7IsolateEm(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedData", align 8
  %5 = bitcast %"class.v8::internal::EmbeddedData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !48
  %7 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_code_sizeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !48
  %8 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_dataEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !48
  %9 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_data_sizeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !48
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 64
  %12 = load i8, i8* %11, align 4, !range !9, !noalias !53
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %35, label %14

14:                                               ; preds = %3
  %15 = icmp ugt i64 %10, %2
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = zext i32 %7 to i64
  %18 = add i64 %17, %10
  %19 = icmp ugt i64 %18, %2
  br i1 %19, label %35, label %20

20:                                               ; preds = %16, %14
  %21 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !54
  %22 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !54
  %23 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !54
  %24 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !54
  %25 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 0
  store i8* %21, i8** %25, align 8, !alias.scope !54
  %26 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 1
  store i32 %22, i32* %26, align 8, !alias.scope !54
  %27 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 3
  store i8* %23, i8** %27, align 8, !alias.scope !54
  %28 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 4
  store i32 %24, i32* %28, align 8, !alias.scope !54
  %29 = ptrtoint i8* %21 to i64
  %30 = icmp ugt i64 %29, %2
  br i1 %30, label %35, label %31

31:                                               ; preds = %20
  %32 = zext i32 %22 to i64
  %33 = add i64 %32, %29
  %34 = icmp ugt i64 %33, %2
  br i1 %34, label %40, label %35

35:                                               ; preds = %31, %20, %16, %3
  %36 = bitcast %"class.v8::internal::EmbeddedData"* %4 to i64*
  store i64 %10, i64* %36, align 8, !alias.scope !53
  %37 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 1
  store i32 %7, i32* %37, align 8, !alias.scope !53
  %38 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 3
  store i8* %8, i8** %38, align 8, !alias.scope !53
  %39 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 4
  store i32 %9, i32* %39, align 8, !alias.scope !53
  br label %40

40:                                               ; preds = %31, %35
  %41 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 31
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %4, i32 %45) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret i64 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code21OffHeapInstructionEndEPNS0_7IsolateEm(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedData", align 8
  %5 = bitcast %"class.v8::internal::EmbeddedData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !57
  %7 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_code_sizeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !57
  %8 = tail call i8* @_ZNK2v88internal7Isolate18embedded_blob_dataEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !57
  %9 = tail call i32 @_ZNK2v88internal7Isolate23embedded_blob_data_sizeEv(%"class.v8::internal::Isolate"* %1) #12, !noalias !57
  %10 = ptrtoint i8* %6 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 64
  %12 = load i8, i8* %11, align 4, !range !9, !noalias !62
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %35, label %14

14:                                               ; preds = %3
  %15 = icmp ugt i64 %10, %2
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = zext i32 %7 to i64
  %18 = add i64 %17, %10
  %19 = icmp ugt i64 %18, %2
  br i1 %19, label %35, label %20

20:                                               ; preds = %16, %14
  %21 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !63
  %22 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !63
  %23 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !63
  %24 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !63
  %25 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 0
  store i8* %21, i8** %25, align 8, !alias.scope !63
  %26 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 1
  store i32 %22, i32* %26, align 8, !alias.scope !63
  %27 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 3
  store i8* %23, i8** %27, align 8, !alias.scope !63
  %28 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 4
  store i32 %24, i32* %28, align 8, !alias.scope !63
  %29 = ptrtoint i8* %21 to i64
  %30 = icmp ugt i64 %29, %2
  br i1 %30, label %35, label %31

31:                                               ; preds = %20
  %32 = zext i32 %22 to i64
  %33 = add i64 %32, %29
  %34 = icmp ugt i64 %33, %2
  br i1 %34, label %40, label %35

35:                                               ; preds = %31, %20, %16, %3
  %36 = bitcast %"class.v8::internal::EmbeddedData"* %4 to i64*
  store i64 %10, i64* %36, align 8, !alias.scope !62
  %37 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 1
  store i32 %7, i32* %37, align 8, !alias.scope !62
  %38 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 3
  store i8* %8, i8** %38, align 8, !alias.scope !62
  %39 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %4, i64 0, i32 4
  store i32 %9, i32* %39, align 8, !alias.scope !62
  br label %40

40:                                               ; preds = %31, %35
  %41 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 31
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %4, i32 %45) #12
  %47 = load i64, i64* %41, align 8
  %48 = add i64 %47, 31
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = call i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %4, i32 %50) #12
  %52 = zext i32 %51 to i64
  %53 = add i64 %46, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret i64 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal4Code19OffHeapMetadataSizeEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  br label %27

11:                                               ; preds = %1
  %12 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  %13 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !66
  %14 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !66
  %15 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !66
  %16 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !66
  %17 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %13, i8** %17, align 8, !alias.scope !66
  %18 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %14, i32* %18, align 8, !alias.scope !66
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %15, i8** %19, align 8, !alias.scope !66
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %16, i32* %20, align 8, !alias.scope !66
  %21 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 31
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = call i32 @_ZNK2v88internal12EmbeddedData21MetadataSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %25) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %27

27:                                               ; preds = %11, %5
  %28 = phi i32 [ %10, %5 ], [ %26, %11 ]
  ret i32 %28
}

declare i32 @_ZNK2v88internal12EmbeddedData21MetadataSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code20OffHeapMetadataStartEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  br label %28

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #12
  %14 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !69
  %15 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !69
  %16 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !69
  %17 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !69
  %18 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %14, i8** %18, align 8, !alias.scope !69
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %15, i32* %19, align 8, !alias.scope !69
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %16, i8** %20, align 8, !alias.scope !69
  %21 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %17, i32* %21, align 8, !alias.scope !69
  %22 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 31
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = call i64 @_ZNK2v88internal12EmbeddedData22MetadataStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %26) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #12
  br label %28

28:                                               ; preds = %12, %5
  %29 = phi i64 [ %11, %5 ], [ %27, %12 ]
  ret i64 %29
}

declare i64 @_ZNK2v88internal12EmbeddedData22MetadataStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal4Code18OffHeapMetadataEndEv(%"class.v8::internal::Code"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::EmbeddedData", align 8
  %3 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  br label %35

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::EmbeddedData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #12
  %14 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12, !noalias !72
  %15 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12, !noalias !72
  %16 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() #12, !noalias !72
  %17 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() #12, !noalias !72
  %18 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 0
  store i8* %14, i8** %18, align 8, !alias.scope !72
  %19 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  store i32 %15, i32* %19, align 8, !alias.scope !72
  %20 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 3
  store i8* %16, i8** %20, align 8, !alias.scope !72
  %21 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  store i32 %17, i32* %21, align 8, !alias.scope !72
  %22 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 31
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = call i64 @_ZNK2v88internal12EmbeddedData22MetadataStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %26) #12
  %28 = load i64, i64* %22, align 8
  %29 = add i64 %28, 31
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = call i32 @_ZNK2v88internal12EmbeddedData21MetadataSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* nonnull %2, i32 %31) #12
  %33 = zext i32 %32 to i64
  %34 = add i64 %27, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #12
  br label %35

35:                                               ; preds = %12, %5
  %36 = phi i64 [ %11, %5 ], [ %34, %12 ]
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 162
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = add i64 %5, 27
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 15
  %21 = icmp eq i32 %20, 11
  br i1 %21, label %22, label %23, !prof !75

22:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

23:                                               ; preds = %16, %2
  %24 = load atomic i32, i32* %8 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %6, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 162
  br i1 %30, label %31, label %37

31:                                               ; preds = %23
  %32 = add i64 %5, 11
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %6, %35
  br label %76

37:                                               ; preds = %23
  %38 = add i64 %5, 15
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 acquire, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %6, %41
  %43 = and i64 %41, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %37
  %46 = add i64 %42, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %6, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 132
  br i1 %54, label %76, label %55

55:                                               ; preds = %45, %37
  %56 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %57 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %56, i64 0, i32 0, i32 1
  %60 = load i8, i8* %59, align 8, !range !9
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %56, i64 0, i32 1, i64 0
  br label %72

64:                                               ; preds = %58, %55
  %65 = and i64 %5, -262144
  %66 = or i64 %65, 16
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = add i64 %68, -41416
  %70 = inttoptr i64 %69 to %"class.v8::internal::Isolate"*
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %70, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %72

72:                                               ; preds = %64, %62
  %73 = phi i64* [ %71, %64 ], [ %63, %62 ]
  %74 = getelementptr inbounds i64, i64* %73, i64 107
  %75 = load i64, i64* %74, align 8
  br label %76

76:                                               ; preds = %31, %45, %72
  %77 = phi i64 [ %36, %31 ], [ %75, %72 ], [ %42, %45 ]
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %104, label %80

80:                                               ; preds = %76
  %81 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %82 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %81, i64 0, i32 0, i32 1
  %85 = load i8, i8* %84, align 8, !range !9
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %81, i64 0, i32 1, i64 0
  br label %97

89:                                               ; preds = %83, %80
  %90 = and i64 %77, -262144
  %91 = or i64 %90, 16
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 16
  %94 = add i64 %93, -41416
  %95 = inttoptr i64 %94 to %"class.v8::internal::Isolate"*
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %97

97:                                               ; preds = %87, %89
  %98 = phi i64* [ %96, %89 ], [ %88, %87 ]
  %99 = getelementptr inbounds i64, i64* %98, i64 32
  %100 = load i64, i64* %99, align 8
  %101 = trunc i64 %77 to i32
  %102 = trunc i64 %100 to i32
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %141, label %104

104:                                              ; preds = %76, %97
  %105 = load i64, i64* %4, align 8
  %106 = and i64 %105, -4294967296
  %107 = add i64 %105, -1
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %106, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = icmp eq i16 %114, 162
  %116 = zext i1 %115 to i32
  %117 = sub i32 %1, %116
  %118 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %118) #12
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %3, i64 %77, i32 0, i32 1) #12
  %119 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 4, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %132, label %123

123:                                              ; preds = %104
  %124 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 4, i32 2
  %125 = load i32, i32* %119, align 8
  %126 = icmp sgt i32 %125, %117
  br i1 %126, label %132, label %134

127:                                              ; preds = %134
  %128 = lshr i64 %135, 1
  %129 = trunc i64 %128 to i32
  %130 = and i32 %129, 1073741823
  %131 = add nsw i32 %130, -1
  br label %132

132:                                              ; preds = %127, %123, %104
  %133 = phi i32 [ 0, %104 ], [ 0, %123 ], [ %131, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %118) #12
  br label %141

134:                                              ; preds = %123, %134
  %135 = load i64, i64* %124, align 8
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %3) #12
  %136 = load i32, i32* %120, align 8
  %137 = icmp eq i32 %136, -1
  %138 = load i32, i32* %119, align 8
  %139 = icmp sgt i32 %138, %117
  %140 = or i1 %137, %139
  br i1 %140, label %127, label %134

141:                                              ; preds = %97, %132
  %142 = phi i32 [ %133, %132 ], [ -1, %97 ]
  ret i32 %142
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"*, i64, i32, i32) unnamed_addr #4

declare void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12AbstractCode23SourceStatementPositionEi(%"class.v8::internal::AbstractCode"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 162
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = add i64 %5, 27
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 15
  %21 = icmp eq i32 %20, 11
  br i1 %21, label %22, label %23, !prof !75

22:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #13
  unreachable

23:                                               ; preds = %16, %2
  %24 = tail call i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* %0, i32 %1)
  %25 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %25) #12
  %26 = load i64, i64* %4, align 8
  %27 = and i64 %26, -4294967296
  %28 = add i64 %26, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 162
  br i1 %36, label %37, label %43

37:                                               ; preds = %23
  %38 = add i64 %26, 11
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %27, %41
  br label %82

43:                                               ; preds = %23
  %44 = add i64 %26, 15
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %27, %47
  %49 = and i64 %47, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %43
  %52 = add i64 %48, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %27, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 132
  br i1 %60, label %82, label %61

61:                                               ; preds = %51, %43
  %62 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %63 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %66 = load i8, i8* %65, align 8, !range !9
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %78

70:                                               ; preds = %64, %61
  %71 = and i64 %26, -262144
  %72 = or i64 %71, 16
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = add i64 %74, -41416
  %76 = inttoptr i64 %75 to %"class.v8::internal::Isolate"*
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %78

78:                                               ; preds = %70, %68
  %79 = phi i64* [ %77, %70 ], [ %69, %68 ]
  %80 = getelementptr inbounds i64, i64* %79, i64 107
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %37, %51, %78
  %83 = phi i64 [ %42, %37 ], [ %81, %78 ], [ %48, %51 ]
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %3, i64 %83, i32 0, i32 0) #12
  %84 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 4, i32 3
  %89 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %3, i64 0, i32 4, i32 2
  br label %92

90:                                               ; preds = %106, %82
  %91 = phi i32 [ 0, %82 ], [ %107, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %25) #12
  ret i32 %91

92:                                               ; preds = %87, %106
  %93 = phi i32 [ 0, %87 ], [ %107, %106 ]
  %94 = load i8, i8* %88, align 8, !range !9
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %92
  %97 = load i64, i64* %89, align 8
  %98 = lshr i64 %97, 1
  %99 = trunc i64 %98 to i32
  %100 = and i32 %99, 1073741823
  %101 = add nsw i32 %100, -1
  %102 = icmp sge i32 %93, %101
  %103 = icmp sgt i32 %101, %24
  %104 = or i1 %102, %103
  %105 = select i1 %104, i32 %93, i32 %101
  br label %106

106:                                              ; preds = %92, %96
  %107 = phi i32 [ %93, %92 ], [ %105, %96 ]
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %3) #12
  %108 = load i32, i32* %84, align 8
  %109 = icmp eq i32 %108, -1
  br i1 %109, label %90, label %92
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4Code10CanDeoptAtEPNS0_7IsolateEm(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %5, 27
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 536870912
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %3
  %18 = tail call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEPNS0_7IsolateEm(%"class.v8::internal::Code"* %0, %"class.v8::internal::Isolate"* %1, i64 %2) #12
  br label %21

19:                                               ; preds = %3
  %20 = add i64 %5, 63
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %23 = add i64 %11, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 27
  br i1 %26, label %27, label %59

27:                                               ; preds = %21
  %28 = add i64 %11, 7
  %29 = ashr i32 %25, 1
  %30 = add nsw i32 %29, -11
  %31 = sdiv i32 %30, 3
  %32 = sext i32 %31 to i64
  br label %33

33:                                               ; preds = %27, %56
  %34 = phi i64 [ 0, %27 ], [ %57, %56 ]
  %35 = trunc i64 %34 to i32
  %36 = mul i32 %35, 12
  %37 = add i32 %36, 52
  %38 = sext i32 %37 to i64
  %39 = add i64 %28, %38
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = icmp ugt i32 %41, -3
  br i1 %42, label %56, label %43

43:                                               ; preds = %33
  %44 = load atomic i32, i32* %40 monotonic, align 4
  %45 = ashr i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = add i64 %22, %46
  %48 = icmp eq i64 %47, %2
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = add i32 %36, 44
  %51 = sext i32 %50 to i64
  %52 = add i64 %28, %51
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = icmp ult i32 %54, -2
  br i1 %55, label %59, label %56

56:                                               ; preds = %43, %49, %33
  %57 = add nuw nsw i64 %34, 1
  %58 = icmp slt i64 %57, %32
  br i1 %58, label %33, label %59

59:                                               ; preds = %49, %56, %21
  %60 = phi i1 [ false, %21 ], [ false, %56 ], [ true, %49 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4Code20IsIsolateIndependentEPNS0_7IsolateE(%"class.v8::internal::Code"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RelocIterator", align 8
  %4 = bitcast %"class.v8::internal::RelocIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %3, i64 %6, i32 4094) #12
  %7 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %3, i64 0, i32 2, i32 0
  br label %13

13:                                               ; preds = %10, %49
  %14 = load i8, i8* %11, align 8
  %15 = icmp slt i8 %14, 3
  br i1 %15, label %16, label %52

16:                                               ; preds = %13
  %17 = load i64, i64* %12, align 8
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = sext i32 %19 to i64
  %21 = add i64 %17, 4
  %22 = add i64 %21, %20
  %23 = call zeroext i1 @_ZN2v88internal17InstructionStream11PcIsOffHeapEPNS0_7IsolateEm(%"class.v8::internal::Isolate"* %1, i64 %22) #12
  br i1 %23, label %49, label %24

24:                                               ; preds = %16
  %25 = call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %26 = ptrtoint i8* %25 to i64
  %27 = call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12
  %28 = icmp uge i64 %22, %26
  %29 = zext i32 %27 to i64
  %30 = add i64 %29, %26
  %31 = icmp ugt i64 %30, %22
  %32 = and i1 %28, %31
  br i1 %32, label %33, label %34, !prof !75

33:                                               ; preds = %24
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0)) #13
  unreachable

34:                                               ; preds = %24
  %35 = add i64 %22, -63
  %36 = and i64 %35, -4294967296
  %37 = add i64 %22, -64
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 162
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %34
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %34
  %48 = call zeroext i1 @_ZN2v88internal8Builtins27IsIsolateIndependentBuiltinENS0_4CodeE(i64 %35) #12
  br i1 %48, label %49, label %52

49:                                               ; preds = %47, %16
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %3) #12
  %50 = load i8, i8* %7, align 8, !range !9
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %13, label %52

52:                                               ; preds = %49, %47, %13, %2
  %53 = phi i1 [ true, %2 ], [ true, %49 ], [ false, %47 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #12
  ret i1 %53
}

declare zeroext i1 @_ZN2v88internal17InstructionStream11PcIsOffHeapEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8Builtins27IsIsolateIndependentBuiltinENS0_4CodeE(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4Code7InlinesENS0_18SharedFunctionInfoE(%"class.v8::internal::Code"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %47, label %15

15:                                               ; preds = %2
  %16 = add i64 %10, 31
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = trunc i64 %1 to i32
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %47, label %21

21:                                               ; preds = %15
  %22 = add i64 %10, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = add i64 %10, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = icmp sgt i32 %27, 1
  br i1 %28, label %29, label %47

29:                                               ; preds = %21
  %30 = lshr i32 %27, 1
  %31 = zext i32 %24 to i64
  %32 = or i64 %5, %31
  %33 = add i64 %32, 7
  %34 = zext i32 %30 to i64
  br label %37

35:                                               ; preds = %37
  %36 = icmp ult i64 %46, %34
  br i1 %36, label %37, label %47

37:                                               ; preds = %29, %35
  %38 = phi i64 [ 0, %29 ], [ %46, %35 ]
  %39 = trunc i64 %38 to i32
  %40 = shl i32 %39, 2
  %41 = sext i32 %40 to i64
  %42 = add i64 %33, %41
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = icmp eq i32 %44, %19
  %46 = add nuw nsw i64 %38, 1
  br i1 %45, label %47, label %35

47:                                               ; preds = %35, %37, %21, %15, %2
  %48 = phi i1 [ false, %2 ], [ true, %15 ], [ false, %21 ], [ false, %35 ], [ true, %37 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code21OptimizedCodeIteratorC2EPNS0_7IsolateE(%"class.v8::internal::Code::OptimizedCodeIterator"* nocapture, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 2
  %5 = bitcast %"class.v8::internal::Code::OptimizedCodeIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2, i32 59, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %7 to i32
  %12 = trunc i64 %10 to i32
  %13 = icmp eq i32 %11, %12
  %14 = select i1 %13, i64 0, i64 %7
  store i64 %14, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal4Code21OptimizedCodeIterator4NextEv(%"class.v8::internal::Code::OptimizedCodeIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::Code::OptimizedCodeIterator", %"class.v8::internal::Code::OptimizedCodeIterator"* %0, i64 0, i32 2
  %6 = load i64, i64* %3, align 8
  br label %7

7:                                                ; preds = %43, %1
  %8 = phi i64 [ %51, %43 ], [ %6, %1 ]
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %12, %21
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  br label %43

24:                                               ; preds = %7
  %25 = load i64, i64* %2, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %54, label %28

28:                                               ; preds = %24
  %29 = tail call i64 @_ZN2v88internal13NativeContext21OptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"* %4) #12
  %30 = load i64, i64* %2, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, 1023
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %34, %40
  %42 = select i1 %41, i64 0, i64 %36
  store i64 %42, i64* %2, align 8
  br label %43

43:                                               ; preds = %28, %11
  %44 = phi %"class.v8::internal::Isolate"* [ %37, %28 ], [ %23, %11 ]
  %45 = phi i64 [ %29, %28 ], [ %22, %11 ]
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 7, i32 0, i64 4
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %45 to i32
  %49 = trunc i64 %47 to i32
  %50 = icmp eq i32 %48, %49
  %51 = select i1 %50, i64 0, i64 %45
  store i64 %51, i64* %3, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %7, label %54

54:                                               ; preds = %43, %24
  %55 = phi i64 [ 0, %24 ], [ %51, %43 ]
  ret i64 %55
}

declare i64 @_ZN2v88internal13NativeContext21OptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18DeoptimizationData3NewEPNS0_7IsolateEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %5 = mul nsw i32 %1, 3
  %6 = add nsw i32 %5, 11
  %7 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %4, i32 %6, i8 zeroext %2) #12
  ret i64* %7
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64* @_ZN2v88internal18DeoptimizationData5EmptyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18DeoptimizationData18GetInlinedFunctionEi(%"class.v8::internal::DeoptimizationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  %4 = getelementptr inbounds %"class.v8::internal::DeoptimizationData", %"class.v8::internal::DeoptimizationData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  br i1 %3, label %7, label %9

7:                                                ; preds = %2
  %8 = add i64 %5, 31
  br label %19

9:                                                ; preds = %2
  %10 = add i64 %5, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %6, %13
  %15 = shl i32 %1, 2
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 7
  %18 = add i64 %17, %14
  br label %19

19:                                               ; preds = %9, %7
  %20 = phi i64 [ %18, %9 ], [ %8, %7 ]
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %6, %23
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BytecodeArray11DisassembleERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::BytecodeArray"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %5 = alloca %"class.v8::internal::BytecodeArray", align 8
  %6 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %7 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets", align 8
  %8 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %9 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 16) #12
  %11 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 23
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 3
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %10, i32 %16) #12
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #12
  %20 = load i64, i64* %11, align 8
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sdiv i32 %23, 8
  %25 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %19, i32 %24) #12
  %26 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  %27 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #12
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %28, 19
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %27, i32 %31) #12
  %33 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  %34 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19) #12
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %35, 31
  %37 = inttoptr i64 %36 to i8*
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %34, i32 %39) #12
  %41 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  %42 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14) #12
  %43 = load i64, i64* %11, align 8
  %44 = add i64 %43, 32
  %45 = inttoptr i64 %44 to i8*
  %46 = load atomic i8, i8* %45 monotonic, align 1
  %47 = sext i8 %46 to i32
  %48 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %42, i32 %47) #12
  %49 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #12
  %50 = load i64, i64* %11, align 8
  %51 = add i64 %50, 33
  %52 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %52) #12
  %53 = and i64 %50, -4294967296
  %54 = add i64 %50, 15
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = and i64 %57, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %71, label %61

61:                                               ; preds = %2
  %62 = add i64 %58, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %53, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 132
  br i1 %70, label %93, label %71

71:                                               ; preds = %61, %2
  %72 = load i64, i64* %11, align 8
  %73 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %74 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %73, i64 0, i32 0, i32 1
  %77 = load i8, i8* %76, align 8, !range !9
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %73, i64 0, i32 1, i64 0
  br label %89

81:                                               ; preds = %75, %71
  %82 = and i64 %72, -262144
  %83 = or i64 %82, 16
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 16
  %86 = add i64 %85, -41416
  %87 = inttoptr i64 %86 to %"class.v8::internal::Isolate"*
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %89

89:                                               ; preds = %81, %79
  %90 = phi i64* [ %88, %81 ], [ %80, %79 ]
  %91 = getelementptr inbounds i64, i64* %90, i64 107
  %92 = load i64, i64* %91, align 8
  br label %93

93:                                               ; preds = %61, %89
  %94 = phi i64 [ %92, %89 ], [ %58, %61 ]
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %4, i64 %94, i32 0, i32 0) #12
  %95 = bitcast %"class.v8::internal::BytecodeArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #12
  %96 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %11, align 8
  store i64 %97, i64* %96, align 8
  %98 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %98) #12
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6, i64* nonnull %96, i32 0) #12
  %99 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 3
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = icmp ult i8* %100, %102
  br i1 %103, label %104, label %276

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %4, i64 0, i32 2
  %106 = bitcast i8** %99 to i64*
  %107 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 1
  %108 = bitcast i8** %107 to i64*
  %109 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 5
  %110 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %4, i64 0, i32 4, i32 0
  %111 = bitcast %"class.std::__1::basic_ostream"* %1 to i8**
  %112 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %1, i64 0, i32 1, i32 0, i32 2
  %113 = bitcast i64* %112 to i8*
  %114 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %4, i64 0, i32 4, i32 2
  %115 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %4, i64 0, i32 4, i32 3
  %116 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %7 to i8*
  %117 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %8 to i8*
  %118 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %9 to i8*
  %119 = bitcast %"class.std::__1::basic_ostream"* %1 to i8*
  %120 = bitcast %"class.std::__1::locale"* %3 to i8*
  %121 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %6, i64 0, i32 4
  br label %122

122:                                              ; preds = %104, %273
  %123 = phi i8* [ %100, %104 ], [ %274, %273 ]
  %124 = load i32, i32* %105, align 8
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %153, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i8* %123 to i64
  %128 = load i64, i64* %108, align 8
  %129 = sub i64 %127, %128
  %130 = load i32, i32* %109, align 4
  %131 = trunc i64 %129 to i32
  %132 = sub i32 %131, %130
  %133 = load i32, i32* %110, align 8
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %135, label %153

135:                                              ; preds = %126
  %136 = load i8*, i8** %111, align 8
  %137 = getelementptr i8, i8* %136, i64 -24
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds i8, i8* %113, i64 %139
  %141 = bitcast i8* %140 to i64*
  store i64 5, i64* %141, align 8
  %142 = load i64, i64* %114, align 8
  %143 = lshr i64 %142, 1
  %144 = trunc i64 %143 to i32
  %145 = and i32 %144, 1073741823
  %146 = add nsw i32 %145, -1
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %1, i32 %146) #12
  %148 = load i8, i8* %115, align 8, !range !9
  %149 = icmp eq i8 %148, 0
  %150 = select i1 %149, [5 x i8]* @.str.10, [5 x i8]* @.str.9
  %151 = getelementptr inbounds [5 x i8], [5 x i8]* %150, i64 0, i64 0
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %151, i64 4) #12
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %4) #12
  br label %155

153:                                              ; preds = %126, %122
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #12
  br label %155

155:                                              ; preds = %153, %135
  %156 = load i64, i64* %106, align 8
  %157 = load i64, i64* %108, align 8
  %158 = sub i64 %156, %157
  %159 = load i32, i32* %109, align 4
  %160 = trunc i64 %158 to i32
  %161 = sub i32 %160, %159
  %162 = sext i32 %161 to i64
  %163 = add i64 %51, %162
  %164 = inttoptr i64 %163 to i8*
  %165 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %1, i8* %164) #12
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %165, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i64 3) #12
  %167 = bitcast %"class.std::__1::basic_ostream"* %166 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr i8, i8* %168, i64 -24
  %170 = bitcast i8* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %166, i64 0, i32 1, i32 0, i32 2
  %173 = bitcast i64* %172 to i8*
  %174 = getelementptr inbounds i8, i8* %173, i64 %171
  %175 = bitcast i8* %174 to i64*
  store i64 4, i64* %175, align 8
  %176 = load i64, i64* %106, align 8
  %177 = load i64, i64* %108, align 8
  %178 = sub i64 %176, %177
  %179 = load i32, i32* %109, align 4
  %180 = trunc i64 %178 to i32
  %181 = sub i32 %180, %179
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %166, i32 %181) #12
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %182, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i64 3) #12
  %184 = load i64, i64* %11, align 8
  %185 = add i64 %184, 23
  %186 = inttoptr i64 %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = ashr i32 %187, 3
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal11interpreter15BytecodeDecoder6DecodeERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKhi(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %164, i32 %188) #12
  %190 = load i8*, i8** %99, align 8
  %191 = load i8, i8* %190, align 1
  %192 = add i8 %191, 120
  %193 = icmp ult i8 %192, 23
  br i1 %193, label %194, label %207

194:                                              ; preds = %155
  %195 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #12
  %196 = sext i32 %195 to i64
  %197 = add i64 %51, %196
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i64 2) #12
  %199 = inttoptr i64 %197 to i8*
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %198, i8* %199) #12
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i64 3) #12
  %202 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #12
  %203 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %201, i32 %202) #12
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #12
  %205 = load i8*, i8** %99, align 8
  %206 = load i8, i8* %205, align 1
  br label %207

207:                                              ; preds = %194, %155
  %208 = phi i8 [ %206, %194 ], [ %191, %155 ]
  switch i8 %208, label %232 [
    i8 -83, label %209
    i8 -97, label %209
  ]

209:                                              ; preds = %207, %207
  %210 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #12
  call void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull sret %7, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #12
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %7) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #12
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %9, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %7) #12
  %211 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %9) #12
  br i1 %211, label %214, label %212

212:                                              ; preds = %224, %209
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #12
  %213 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 2) #12
  br label %232

214:                                              ; preds = %209, %224
  %215 = phi i8 [ %225, %224 ], [ 1, %209 ]
  %216 = call i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8) #12
  %217 = trunc i64 %216 to i32
  %218 = lshr i64 %216, 32
  %219 = trunc i64 %218 to i32
  %220 = and i8 %215, 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %214
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1) #12
  br label %224

224:                                              ; preds = %214, %222
  %225 = phi i8 [ %215, %222 ], [ 0, %214 ]
  %226 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i64 1) #12
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %226, i32 %217) #12
  %228 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %227, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i64 3) #12
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %228, i32 %219) #12
  %230 = call dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8) #12
  %231 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %9) #12
  br i1 %231, label %214, label %212

232:                                              ; preds = %207, %212
  %233 = load i8*, i8** %111, align 8
  %234 = getelementptr i8, i8* %233, i64 -24
  %235 = bitcast i8* %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds i8, i8* %119, i64 %236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  %238 = bitcast i8* %237 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %238) #12
  %239 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %240 = bitcast %"class.std::__1::locale::facet"* %239 to %"class.std::__1::ctype"*
  %241 = bitcast %"class.std::__1::locale::facet"* %239 to i8 (%"class.std::__1::ctype"*, i8)***
  %242 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %241, align 8
  %243 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %242, i64 7
  %244 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %243, align 8
  %245 = call signext i8 %244(%"class.std::__1::ctype"* %240, i8 signext 10) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  %246 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %1, i8 signext %245) #12
  %247 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %1) #12
  %248 = load i8*, i8** %99, align 8
  %249 = load i8, i8* %248, align 1
  %250 = load i8, i8* %121, align 8
  %251 = lshr i8 %250, 1
  %252 = zext i8 %251 to i64
  %253 = zext i8 %249 to i64
  %254 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %252, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds i8, i8* %248, i64 %256
  store i8* %257, i8** %99, align 8
  %258 = load i8*, i8** %101, align 8
  %259 = icmp ult i8* %257, %258
  br i1 %259, label %260, label %273

260:                                              ; preds = %232
  %261 = load i8, i8* %257, align 1
  %262 = icmp ult i8 %261, 4
  br i1 %262, label %263, label %269

263:                                              ; preds = %260
  %264 = zext i8 %261 to i32
  %265 = shl nuw nsw i32 %264, 3
  %266 = lshr i32 67240962, %265
  %267 = trunc i32 %266 to i8
  store i8 %267, i8* %121, align 8
  %268 = getelementptr inbounds i8, i8* %257, i64 1
  store i8* %268, i8** %99, align 8
  br label %270

269:                                              ; preds = %260
  store i8 1, i8* %121, align 8
  br label %270

270:                                              ; preds = %269, %263
  %271 = phi i32 [ 1, %263 ], [ 0, %269 ]
  %272 = phi i8* [ %268, %263 ], [ %257, %269 ]
  store i32 %271, i32* %109, align 4
  br label %273

273:                                              ; preds = %270, %232
  %274 = phi i8* [ %257, %232 ], [ %272, %270 ]
  %275 = icmp ult i8* %274, %258
  br i1 %275, label %122, label %276

276:                                              ; preds = %273, %93
  %277 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i64 22) #12
  %278 = load i64, i64* %11, align 8
  %279 = and i64 %278, -4294967296
  %280 = add i64 %278, 7
  %281 = inttoptr i64 %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  %284 = or i64 %279, %283
  %285 = add i64 %284, 3
  %286 = inttoptr i64 %285 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = ashr i32 %287, 1
  %289 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %277, i32 %288) #12
  %290 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %289, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i64 2) #12
  %291 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i64 22) #12
  %292 = load i64, i64* %11, align 8
  %293 = and i64 %292, -4294967296
  %294 = add i64 %292, 11
  %295 = inttoptr i64 %294 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = zext i32 %296 to i64
  %298 = or i64 %293, %297
  %299 = add i64 %298, 3
  %300 = inttoptr i64 %299 to i32*
  %301 = load i32, i32* %300, align 4
  %302 = ashr i32 %301, 1
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %291, i32 %302) #12
  %304 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %303, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i64 2) #12
  %305 = load i64, i64* %11, align 8
  %306 = and i64 %305, -4294967296
  %307 = add i64 %305, 15
  %308 = inttoptr i64 %307 to i32*
  %309 = load atomic i32, i32* %308 acquire, align 4
  %310 = zext i32 %309 to i64
  %311 = or i64 %306, %310
  %312 = and i64 %310, 1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %324, label %314

314:                                              ; preds = %276
  %315 = add i64 %311, -1
  %316 = inttoptr i64 %315 to i32*
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = zext i32 %317 to i64
  %319 = or i64 %306, %318
  %320 = add i64 %319, 7
  %321 = inttoptr i64 %320 to i16*
  %322 = load atomic i16, i16* %321 monotonic, align 2
  %323 = icmp eq i16 %322, 132
  br i1 %323, label %346, label %324

324:                                              ; preds = %314, %276
  %325 = load i64, i64* %11, align 8
  %326 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %327 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %326, null
  br i1 %327, label %334, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %326, i64 0, i32 0, i32 1
  %330 = load i8, i8* %329, align 8, !range !9
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %326, i64 0, i32 1, i64 0
  br label %342

334:                                              ; preds = %328, %324
  %335 = and i64 %325, -262144
  %336 = or i64 %335, 16
  %337 = inttoptr i64 %336 to i64*
  %338 = load i64, i64* %337, align 16
  %339 = add i64 %338, -41416
  %340 = inttoptr i64 %339 to %"class.v8::internal::Isolate"*
  %341 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %340, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %342

342:                                              ; preds = %334, %332
  %343 = phi i64* [ %341, %334 ], [ %333, %332 ]
  %344 = getelementptr inbounds i64, i64* %343, i64 107
  %345 = load i64, i64* %344, align 8
  br label %346

346:                                              ; preds = %314, %342
  %347 = phi i64 [ %345, %342 ], [ %311, %314 ]
  %348 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i64 30) #12
  %349 = add i64 %347, 3
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = ashr i32 %351, 1
  %353 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %348, i32 %352) #12
  %354 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %353, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i64 2) #12
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %98) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %52) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal11interpreter15BytecodeDecoder6DecodeERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKhi(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i32) local_unnamed_addr #4

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #4

declare void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* sret, %"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #4

declare void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"*) local_unnamed_addr #4

declare void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* dereferenceable(32)) local_unnamed_addr #4

declare i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*) local_unnamed_addr #4

declare dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13BytecodeArray15CopyBytecodesToES1_(%"class.v8::internal::BytecodeArray"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %1, 33
  %6 = inttoptr i64 %5 to i8*
  %7 = add i64 %4, 33
  %8 = inttoptr i64 %7 to i8*
  %9 = add i64 %4, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = ashr i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %81, label %15

15:                                               ; preds = %2
  %16 = icmp ult i32 %12, 8
  br i1 %16, label %17, label %67

17:                                               ; preds = %15
  %18 = add nsw i64 %13, -1
  %19 = and i64 %13, 7
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %17, %21
  %22 = phi i8* [ %27, %21 ], [ %8, %17 ]
  %23 = phi i64 [ %26, %21 ], [ %13, %17 ]
  %24 = phi i8* [ %29, %21 ], [ %6, %17 ]
  %25 = phi i64 [ %30, %21 ], [ %19, %17 ]
  %26 = add i64 %23, -1
  %27 = getelementptr inbounds i8, i8* %22, i64 1
  %28 = load i8, i8* %22, align 1
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 %28, i8* %24, align 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %21, !llvm.loop !76

32:                                               ; preds = %21, %17
  %33 = phi i8* [ %8, %17 ], [ %27, %21 ]
  %34 = phi i64 [ %13, %17 ], [ %26, %21 ]
  %35 = phi i8* [ %6, %17 ], [ %29, %21 ]
  %36 = icmp ult i64 %18, 7
  br i1 %36, label %81, label %37

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %63, %37 ], [ %33, %32 ]
  %39 = phi i64 [ %62, %37 ], [ %34, %32 ]
  %40 = phi i8* [ %65, %37 ], [ %35, %32 ]
  %41 = getelementptr inbounds i8, i8* %38, i64 1
  %42 = load i8, i8* %38, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %42, i8* %40, align 1
  %44 = getelementptr inbounds i8, i8* %38, i64 2
  %45 = load i8, i8* %41, align 1
  %46 = getelementptr inbounds i8, i8* %40, i64 2
  store i8 %45, i8* %43, align 1
  %47 = getelementptr inbounds i8, i8* %38, i64 3
  %48 = load i8, i8* %44, align 1
  %49 = getelementptr inbounds i8, i8* %40, i64 3
  store i8 %48, i8* %46, align 1
  %50 = getelementptr inbounds i8, i8* %38, i64 4
  %51 = load i8, i8* %47, align 1
  %52 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 %51, i8* %49, align 1
  %53 = getelementptr inbounds i8, i8* %38, i64 5
  %54 = load i8, i8* %50, align 1
  %55 = getelementptr inbounds i8, i8* %40, i64 5
  store i8 %54, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %38, i64 6
  %57 = load i8, i8* %53, align 1
  %58 = getelementptr inbounds i8, i8* %40, i64 6
  store i8 %57, i8* %55, align 1
  %59 = getelementptr inbounds i8, i8* %38, i64 7
  %60 = load i8, i8* %56, align 1
  %61 = getelementptr inbounds i8, i8* %40, i64 7
  store i8 %60, i8* %58, align 1
  %62 = add i64 %39, -8
  %63 = getelementptr inbounds i8, i8* %38, i64 8
  %64 = load i8, i8* %59, align 1
  %65 = getelementptr inbounds i8, i8* %40, i64 8
  store i8 %64, i8* %61, align 1
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %81, label %37, !llvm.loop !77

67:                                               ; preds = %15
  switch i64 %13, label %80 [
    i64 16, label %79
    i64 15, label %78
    i64 14, label %77
    i64 13, label %76
    i64 12, label %75
    i64 11, label %74
    i64 10, label %73
    i64 8, label %68
    i64 9, label %72
  ]

68:                                               ; preds = %67
  %69 = inttoptr i64 %7 to i64*
  %70 = inttoptr i64 %5 to i64*
  %71 = load i64, i64* %69, align 1
  store i64 %71, i64* %70, align 1
  br label %81

72:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 9, i1 false) #12
  br label %81

73:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 10, i1 false) #12
  br label %81

74:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 11, i1 false) #12
  br label %81

75:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 12, i1 false) #12
  br label %81

76:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 13, i1 false) #12
  br label %81

77:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 14, i1 false) #12
  br label %81

78:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 15, i1 false) #12
  br label %81

79:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 16, i1 false) #12
  br label %81

80:                                               ; preds = %67
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 %13, i1 false) #12
  br label %81

81:                                               ; preds = %32, %37, %2, %68, %72, %73, %74, %75, %76, %77, %78, %79, %80
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13BytecodeArray9MakeOlderEv(%"class.v8::internal::BytecodeArray"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 32
  %5 = inttoptr i64 %4 to i8*
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = icmp slt i8 %6, 5
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = add nsw i8 %6, 1
  %10 = cmpxchg volatile i8* %5, i8 %6, i8 %9 monotonic monotonic
  br label %11

11:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal13BytecodeArray5IsOldEv(%"class.v8::internal::BytecodeArray"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BytecodeArray", %"class.v8::internal::BytecodeArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 32
  %5 = inttoptr i64 %4 to i8*
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = icmp sgt i8 %6, 2
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13DependentCode16GetDependentCodeENS0_6HandleINS0_10HeapObjectEEE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp eq i16 %11, 172
  br i1 %12, label %30, label %13

13:                                               ; preds = %1
  %14 = load atomic i32, i32* %5 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %3, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 177
  br i1 %20, label %30, label %21

21:                                               ; preds = %13
  %22 = load atomic i32, i32* %5 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %3, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 90
  br i1 %28, label %30, label %29

29:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

30:                                               ; preds = %21, %13, %1
  %31 = phi i64 [ 27, %1 ], [ 15, %13 ], [ 11, %21 ]
  %32 = add i64 %2, %31
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %3, %35
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13DependentCode16SetDependentCodeENS0_6HandleINS0_10HeapObjectEEENS2_IS1_EE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 172
  br i1 %13, label %14, label %47

14:                                               ; preds = %2
  %15 = load i64, i64* %1, align 8
  %16 = add i64 %3, 27
  %17 = inttoptr i64 %16 to i32*
  %18 = trunc i64 %15 to i32
  store atomic volatile i32 %18, i32* %17 monotonic, align 4
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %14
  %22 = and i64 %3, -262144
  %23 = or i64 %22, 8
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 262144
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = or i64 %22, 16
  %30 = inttoptr i64 %29 to %"class.v8::internal::Heap"**
  %31 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %30, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %31, i64 %3, i64 %16, i64 %15) #12
  br label %32

32:                                               ; preds = %28, %21, %14
  %33 = and i64 %15, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %130, label %39

39:                                               ; preds = %32
  %40 = and i64 %3, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 24
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %39
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3, i64 %16, i64 %15) #12
  br label %130

47:                                               ; preds = %2
  %48 = load atomic i32, i32* %6 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %4, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 177
  br i1 %54, label %55, label %88

55:                                               ; preds = %47
  %56 = load i64, i64* %1, align 8
  %57 = add i64 %3, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %56 to i32
  store atomic volatile i32 %59, i32* %58 monotonic, align 4
  %60 = and i64 %56, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = and i64 %3, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 262144
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = or i64 %63, 16
  %71 = inttoptr i64 %70 to %"class.v8::internal::Heap"**
  %72 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %71, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %72, i64 %3, i64 %57, i64 %56) #12
  br label %73

73:                                               ; preds = %69, %62, %55
  %74 = and i64 %56, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %130, label %80

80:                                               ; preds = %73
  %81 = and i64 %3, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %130

87:                                               ; preds = %80
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3, i64 %57, i64 %56) #12
  br label %130

88:                                               ; preds = %47
  %89 = load atomic i32, i32* %6 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %4, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = icmp eq i16 %94, 90
  br i1 %95, label %96, label %129

96:                                               ; preds = %88
  %97 = load i64, i64* %1, align 8
  %98 = add i64 %3, 11
  %99 = inttoptr i64 %98 to i32*
  %100 = trunc i64 %97 to i32
  store atomic volatile i32 %100, i32* %99 monotonic, align 4
  %101 = and i64 %97, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %96
  %104 = and i64 %3, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 262144
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = or i64 %104, 16
  %112 = inttoptr i64 %111 to %"class.v8::internal::Heap"**
  %113 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %112, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %113, i64 %3, i64 %98, i64 %97) #12
  br label %114

114:                                              ; preds = %110, %103, %96
  %115 = and i64 %97, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 24
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %114
  %122 = and i64 %3, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 24
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %121
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3, i64 %98, i64 %97) #12
  br label %130

129:                                              ; preds = %88
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

130:                                              ; preds = %128, %121, %114, %87, %80, %73, %46, %39, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13DependentCode17InstallDependencyEPNS0_7IsolateERKNS0_17MaybeObjectHandleENS0_6HandleINS0_10HeapObjectEEENS1_15DependencyGroupE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MaybeObjectHandle"* nocapture dereferenceable(16), i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::Brief", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = load i8, i8* @_ZN2v88internal28FLAG_trace_code_dependenciesE, align 1, !range !9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %63, label %10, !prof !2

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %13, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #12
  %17 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %16, %"class.v8::base::RecursiveMutex"** %17, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %16) #12
  %18 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i64 26) #12
  %20 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 1, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %25, null
  br i1 %23, label %27, label %32

27:                                               ; preds = %10
  br i1 %26, label %28, label %29, !prof !75

28:                                               ; preds = %27
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

29:                                               ; preds = %27
  %30 = load i64, i64* %25, align 8
  %31 = or i64 %30, 2
  br label %36

32:                                               ; preds = %10
  br i1 %26, label %33, label %34, !prof !75

33:                                               ; preds = %32
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

34:                                               ; preds = %32
  %35 = load i64, i64* %25, align 8
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ]
  %38 = and i64 %37, -3
  %39 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6ObjectE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, %"class.v8::internal::Object"* nonnull dereferenceable(8) %40) #12
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i64 6) #12
  %43 = bitcast %"struct.v8::internal::Brief"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  %44 = load i64, i64* %2, align 8
  %45 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %5, i64 0, i32 0
  store i64 %44, i64* %45, align 8
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i64 12) #12
  %48 = icmp ult i32 %3, 9
  br i1 %48, label %50, label %49

49:                                               ; preds = %36
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

50:                                               ; preds = %36
  %51 = sext i32 %3 to i64
  %52 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN2v88internal13DependentCode19DependencyGroupNameENS1_15DependencyGroupE, i64 0, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = call i64 @strlen(i8* nonnull %53) #12
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, i8* nonnull %53, i64 %54) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i64 2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %57 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %59 = bitcast %"class.std::__1::basic_ios.base"* %58 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %59, align 8
  %60 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %17, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %60) #12
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %57, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %61) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %18, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #12
  %62 = bitcast %"class.std::__1::basic_ios.base"* %58 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %62) #12
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %11) #12
  br label %63

63:                                               ; preds = %4, %50
  %64 = load i64, i64* %2, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 172
  br i1 %74, label %92, label %75

75:                                               ; preds = %63
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %65, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 177
  br i1 %82, label %92, label %83

83:                                               ; preds = %75
  %84 = load atomic i32, i32* %67 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %65, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp eq i16 %89, 90
  br i1 %90, label %92, label %91

91:                                               ; preds = %83
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

92:                                               ; preds = %83, %75, %63
  %93 = phi i64 [ 27, %63 ], [ 15, %75 ], [ 11, %83 ]
  %94 = add i64 %64, %93
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %65, %97
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %100 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %99, align 8
  %101 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %100, i64 %98) #12
  br label %117

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %108 = load i64*, i64** %107, align 8
  %109 = icmp eq i64* %106, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %112

112:                                              ; preds = %110, %104
  %113 = phi i64* [ %111, %110 ], [ %106, %104 ]
  %114 = ptrtoint i64* %113 to i64
  %115 = add i64 %114, 8
  %116 = inttoptr i64 %115 to i64*
  store i64* %116, i64** %105, align 8
  store i64 %98, i64* %113, align 8
  br label %117

117:                                              ; preds = %102, %112
  %118 = phi i64* [ %103, %102 ], [ %113, %112 ]
  %119 = call i64* @_ZN2v88internal13DependentCode14InsertWeakCodeEPNS0_7IsolateENS0_6HandleIS1_EENS1_15DependencyGroupERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"* %0, i64* %118, i32 %3, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16) %1)
  %120 = icmp eq i64* %119, %118
  br i1 %120, label %132, label %121

121:                                              ; preds = %117
  %122 = icmp eq i64* %119, null
  %123 = icmp eq i64* %118, null
  %124 = or i1 %123, %122
  br i1 %124, label %131, label %125

125:                                              ; preds = %121
  %126 = load i64, i64* %119, align 8
  %127 = load i64, i64* %118, align 8
  %128 = trunc i64 %126 to i32
  %129 = trunc i64 %127 to i32
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %132, label %131

131:                                              ; preds = %121, %125
  call void @_ZN2v88internal13DependentCode16SetDependentCodeENS0_6HandleINS0_10HeapObjectEEENS2_IS1_EE(i64* %2, i64* %119)
  br label %132

132:                                              ; preds = %117, %131, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal13DependentCode19DependencyGroupNameENS1_15DependencyGroupE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 9
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [9 x i8*], [9 x i8*]* @switch.table._ZN2v88internal13DependentCode19DependencyGroupNameENS1_15DependencyGroupE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #12
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #12
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #12
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13DependentCode14InsertWeakCodeEPNS0_7IsolateENS0_6HandleIS1_EENS1_15DependencyGroupERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"*, i64*, i32, %"class.v8::internal::MaybeObjectHandle"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = add i64 %6, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 1
  %17 = and i32 %16, 31
  %18 = icmp sgt i32 %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %4, %12
  %20 = tail call i64* @_ZN2v88internal13DependentCode3NewEPNS0_7IsolateENS1_15DependencyGroupERKNS0_17MaybeObjectHandleENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i32 %2, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16) %3, i64* %1)
  br label %256

21:                                               ; preds = %12
  %22 = load atomic i32, i32* %14 monotonic, align 4
  %23 = lshr i32 %22, 1
  %24 = and i32 %23, 31
  %25 = icmp slt i32 %24, %2
  br i1 %25, label %26, label %102

26:                                               ; preds = %21
  %27 = and i64 %6, -4294967296
  %28 = add i64 %6, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #12
  br label %51

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #12
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %51

51:                                               ; preds = %36, %46
  %52 = phi i64* [ %37, %36 ], [ %47, %46 ]
  %53 = tail call i64* @_ZN2v88internal13DependentCode14InsertWeakCodeEPNS0_7IsolateENS0_6HandleIS1_EENS1_15DependencyGroupERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"* %0, i64* %52, i32 %2, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16) %3)
  %54 = icmp eq i64* %52, %53
  br i1 %54, label %256, label %55

55:                                               ; preds = %51
  %56 = icmp eq i64* %52, null
  %57 = icmp eq i64* %53, null
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = load i64, i64* %53, align 8
  %61 = trunc i64 %60 to i32
  br label %68

62:                                               ; preds = %55
  %63 = load i64, i64* %52, align 8
  %64 = load i64, i64* %53, align 8
  %65 = trunc i64 %63 to i32
  %66 = trunc i64 %64 to i32
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %256, label %68

68:                                               ; preds = %59, %62
  %69 = phi i32 [ %61, %59 ], [ %66, %62 ]
  %70 = phi i64 [ %60, %59 ], [ %64, %62 ]
  %71 = load i64, i64* %1, align 8
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i32*
  store atomic volatile i32 %69, i32* %73 monotonic, align 4
  %74 = and i64 %70, 1
  %75 = icmp ne i64 %74, 0
  %76 = icmp ne i32 %69, 3
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %256

78:                                               ; preds = %68
  %79 = and i64 %71, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 262144
  %84 = icmp eq i64 %83, 0
  %85 = and i64 %70, -3
  br i1 %84, label %90, label %86

86:                                               ; preds = %78
  %87 = or i64 %79, 16
  %88 = inttoptr i64 %87 to %"class.v8::internal::Heap"**
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %88, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %89, i64 %71, i64 %72, i64 %85) #12
  br label %90

90:                                               ; preds = %78, %86
  %91 = and i64 %70, -262144
  %92 = or i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 24
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %256, label %97

97:                                               ; preds = %90
  %98 = load i64, i64* %81, align 8
  %99 = and i64 %98, 24
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %256

101:                                              ; preds = %97
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %71, i64 %72, i64 %85) #12
  br label %256

102:                                              ; preds = %21
  %103 = load atomic i32, i32* %14 monotonic, align 4
  %104 = ashr i32 %103, 1
  %105 = lshr i32 %104, 5
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %156, label %107

107:                                              ; preds = %102
  %108 = add i64 %6, 7
  %109 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %113, null
  br i1 %111, label %115, label %136

115:                                              ; preds = %107
  br i1 %114, label %121, label %116, !prof !75

116:                                              ; preds = %115
  %117 = zext i32 %105 to i64
  %118 = load i64, i64* %113, align 8
  %119 = trunc i64 %118 to i32
  %120 = or i32 %119, 2
  br label %125

121:                                              ; preds = %115
  %122 = add i64 %6, 15
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

125:                                              ; preds = %134, %116
  %126 = phi i64 [ 0, %116 ], [ %133, %134 ]
  %127 = shl i64 %126, 2
  %128 = add nuw nsw i64 %127, 8
  %129 = add i64 %108, %128
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = icmp eq i32 %131, %120
  %133 = add nuw nsw i64 %126, 1
  br i1 %132, label %256, label %134

134:                                              ; preds = %125
  %135 = icmp eq i64 %133, %117
  br i1 %135, label %156, label %125

136:                                              ; preds = %107
  br i1 %114, label %141, label %137, !prof !75

137:                                              ; preds = %136
  %138 = zext i32 %105 to i64
  %139 = load i64, i64* %113, align 8
  %140 = trunc i64 %139 to i32
  br label %147

141:                                              ; preds = %136
  %142 = add i64 %6, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 monotonic, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

145:                                              ; preds = %147
  %146 = icmp eq i64 %155, %138
  br i1 %146, label %156, label %147

147:                                              ; preds = %145, %137
  %148 = phi i64 [ 0, %137 ], [ %155, %145 ]
  %149 = shl i64 %148, 2
  %150 = add nuw nsw i64 %149, 8
  %151 = add i64 %108, %150
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = icmp eq i32 %153, %140
  %155 = add nuw nsw i64 %148, 1
  br i1 %154, label %256, label %145

156:                                              ; preds = %145, %134, %102
  %157 = add nuw nsw i32 %105, 3
  %158 = icmp slt i32 %10, %157
  br i1 %158, label %159, label %192

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %5, i64 0, i32 0
  %163 = call zeroext i1 @_ZN2v88internal13DependentCode7CompactEv(%"class.v8::internal::DependentCode"* nonnull %162) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #12
  br i1 %163, label %184, label %164

164:                                              ; preds = %159
  %165 = load i64, i64* %1, align 8
  %166 = add i64 %165, 11
  %167 = inttoptr i64 %166 to i32*
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = ashr i32 %168, 1
  %170 = lshr i32 %169, 5
  %171 = icmp ult i32 %169, 160
  %172 = add nuw nsw i32 %170, 1
  %173 = mul nuw nsw i32 %170, 5
  %174 = lshr i32 %173, 2
  %175 = select i1 %171, i32 %172, i32 %174
  %176 = add i64 %165, 3
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = ashr i32 %178, 1
  %180 = sub nsw i32 2, %179
  %181 = add nsw i32 %180, %175
  %182 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %183 = tail call i64* @_ZN2v88internal7Factory25CopyWeakFixedArrayAndGrowENS0_6HandleINS0_14WeakFixedArrayEEEi(%"class.v8::internal::Factory"* %182, i64* %1, i32 %181) #12
  br label %184

184:                                              ; preds = %159, %164
  %185 = phi i64* [ %183, %164 ], [ %1, %159 ]
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, 11
  %188 = inttoptr i64 %187 to i32*
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = ashr i32 %189, 1
  %191 = lshr i32 %190, 5
  br label %192

192:                                              ; preds = %184, %156
  %193 = phi i64 [ %186, %184 ], [ %6, %156 ]
  %194 = phi i64* [ %185, %184 ], [ %1, %156 ]
  %195 = phi i32 [ %191, %184 ], [ %105, %156 ]
  %196 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %200, null
  br i1 %198, label %202, label %207

202:                                              ; preds = %192
  br i1 %201, label %203, label %204, !prof !75

203:                                              ; preds = %202
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

204:                                              ; preds = %202
  %205 = load i64, i64* %200, align 8
  %206 = or i64 %205, 2
  br label %211

207:                                              ; preds = %192
  br i1 %201, label %208, label %209, !prof !75

208:                                              ; preds = %207
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

209:                                              ; preds = %207
  %210 = load i64, i64* %200, align 8
  br label %211

211:                                              ; preds = %204, %209
  %212 = phi i64 [ %206, %204 ], [ %210, %209 ]
  %213 = shl nuw nsw i32 %195, 2
  %214 = add nuw nsw i32 %213, 15
  %215 = zext i32 %214 to i64
  %216 = add i64 %193, %215
  %217 = inttoptr i64 %216 to i32*
  %218 = trunc i64 %212 to i32
  store atomic volatile i32 %218, i32* %217 monotonic, align 4
  %219 = and i64 %212, 1
  %220 = icmp ne i64 %219, 0
  %221 = icmp ne i32 %218, 3
  %222 = and i1 %221, %220
  br i1 %222, label %223, label %247

223:                                              ; preds = %211
  %224 = and i64 %193, -262144
  %225 = or i64 %224, 8
  %226 = inttoptr i64 %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = and i64 %227, 262144
  %229 = icmp eq i64 %228, 0
  %230 = and i64 %212, -3
  br i1 %229, label %235, label %231

231:                                              ; preds = %223
  %232 = or i64 %224, 16
  %233 = inttoptr i64 %232 to %"class.v8::internal::Heap"**
  %234 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %233, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %234, i64 %193, i64 %216, i64 %230) #12
  br label %235

235:                                              ; preds = %223, %231
  %236 = and i64 %212, -262144
  %237 = or i64 %236, 8
  %238 = inttoptr i64 %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = and i64 %239, 24
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %247, label %242

242:                                              ; preds = %235
  %243 = load i64, i64* %226, align 8
  %244 = and i64 %243, 24
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %242
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %193, i64 %216, i64 %230) #12
  br label %247

247:                                              ; preds = %211, %235, %242, %246
  %248 = load i64, i64* %194, align 8
  %249 = add i64 %248, 11
  %250 = inttoptr i64 %249 to i32*
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 62
  %253 = shl i32 %195, 6
  %254 = add i32 %253, 64
  %255 = or i32 %252, %254
  store atomic volatile i32 %255, i32* %250 monotonic, align 4
  br label %256

256:                                              ; preds = %147, %125, %51, %62, %68, %90, %97, %101, %247, %19
  %257 = phi i64* [ %20, %19 ], [ %194, %247 ], [ %1, %101 ], [ %1, %97 ], [ %1, %90 ], [ %1, %68 ], [ %1, %62 ], [ %1, %51 ], [ %1, %125 ], [ %1, %147 ]
  ret i64* %257
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13DependentCode3NewEPNS0_7IsolateENS1_15DependencyGroupERKNS0_17MaybeObjectHandleENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i32, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16), i64*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %6 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %5, i32 3, i8 zeroext 1) #12
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* %3, align 8
  %9 = add i64 %7, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %8 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = and i64 %8, 1
  %13 = icmp ne i64 %12, 0
  %14 = icmp ne i32 %11, 3
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %40

16:                                               ; preds = %4
  %17 = and i64 %7, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  %23 = and i64 %8, -3
  br i1 %22, label %28, label %24

24:                                               ; preds = %16
  %25 = or i64 %17, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %7, i64 %9, i64 %23) #12
  br label %28

28:                                               ; preds = %16, %24
  %29 = and i64 %8, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i64, i64* %19, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %7, i64 %9, i64 %23) #12
  br label %40

40:                                               ; preds = %4, %28, %35, %39
  %41 = load i64, i64* %6, align 8
  %42 = shl i32 %1, 1
  %43 = or i32 %42, 64
  %44 = add i64 %41, 11
  %45 = inttoptr i64 %44 to i32*
  store atomic volatile i32 %43, i32* %45 monotonic, align 4
  %46 = load i64, i64* %6, align 8
  %47 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %49, label %53, label %58

53:                                               ; preds = %40
  br i1 %52, label %54, label %55, !prof !75

54:                                               ; preds = %53
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

55:                                               ; preds = %53
  %56 = load i64, i64* %51, align 8
  %57 = or i64 %56, 2
  br label %62

58:                                               ; preds = %40
  br i1 %52, label %59, label %60, !prof !75

59:                                               ; preds = %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0)) #13
  unreachable

60:                                               ; preds = %58
  %61 = load i64, i64* %51, align 8
  br label %62

62:                                               ; preds = %55, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ]
  %64 = add i64 %46, 15
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %63 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  %67 = and i64 %63, 1
  %68 = icmp ne i64 %67, 0
  %69 = icmp ne i32 %66, 3
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %95

71:                                               ; preds = %62
  %72 = and i64 %46, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 262144
  %77 = icmp eq i64 %76, 0
  %78 = and i64 %63, -3
  br i1 %77, label %83, label %79

79:                                               ; preds = %71
  %80 = or i64 %72, 16
  %81 = inttoptr i64 %80 to %"class.v8::internal::Heap"**
  %82 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %81, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %82, i64 %46, i64 %64, i64 %78) #12
  br label %83

83:                                               ; preds = %71, %79
  %84 = and i64 %63, -262144
  %85 = or i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = and i64 %87, 24
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = load i64, i64* %74, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %64, i64 %78) #12
  br label %95

95:                                               ; preds = %62, %83, %90, %94
  ret i64* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13DependentCode11EnsureSpaceEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", align 8
  %4 = bitcast %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DependentCode>::ObjectRef"* %3, i64 0, i32 0
  %8 = call zeroext i1 @_ZN2v88internal13DependentCode7CompactEv(%"class.v8::internal::DependentCode"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = load i64, i64* %1, align 8
  %11 = add i64 %10, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = lshr i32 %14, 5
  %16 = icmp ult i32 %14, 160
  %17 = add nuw nsw i32 %15, 1
  %18 = mul nuw nsw i32 %15, 5
  %19 = lshr i32 %18, 2
  %20 = select i1 %16, i32 %17, i32 %19
  %21 = add i64 %10, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = ashr i32 %23, 1
  %25 = sub nsw i32 2, %24
  %26 = add nsw i32 %25, %20
  %27 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %28 = tail call i64* @_ZN2v88internal7Factory25CopyWeakFixedArrayAndGrowENS0_6HandleINS0_14WeakFixedArrayEEEi(%"class.v8::internal::Factory"* %27, i64* %1, i32 %26) #12
  br label %29

29:                                               ; preds = %2, %9
  %30 = phi i64* [ %28, %9 ], [ %1, %2 ]
  ret i64* %30
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13DependentCode7CompactEv(%"class.v8::internal::DependentCode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  %8 = lshr i32 %7, 5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = zext i32 %8 to i64
  br label %25

12:                                               ; preds = %91
  %13 = add i64 %93, 11
  %14 = inttoptr i64 %13 to i32*
  br label %15

15:                                               ; preds = %12, %1
  %16 = phi i32* [ %14, %12 ], [ %5, %1 ]
  %17 = phi i32 [ %94, %12 ], [ 0, %1 ]
  %18 = load atomic i32, i32* %16 monotonic, align 4
  %19 = and i32 %18, 62
  %20 = shl i32 %17, 6
  %21 = or i32 %19, %20
  store atomic volatile i32 %21, i32* %16 monotonic, align 4
  %22 = icmp slt i32 %17, %8
  br i1 %22, label %23, label %97

23:                                               ; preds = %15
  %24 = sext i32 %17 to i64
  br label %98

25:                                               ; preds = %91, %10
  %26 = phi i64 [ %3, %10 ], [ %92, %91 ]
  %27 = phi i64 [ %3, %10 ], [ %93, %91 ]
  %28 = phi i64 [ 0, %10 ], [ %95, %91 ]
  %29 = phi i32 [ 0, %10 ], [ %94, %91 ]
  %30 = and i64 %27, -4294967296
  %31 = shl i64 %28, 2
  %32 = add i64 %27, %31
  %33 = add i64 %32, 15
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %91, label %37

37:                                               ; preds = %25
  %38 = zext i32 %29 to i64
  %39 = icmp eq i64 %28, %38
  br i1 %39, label %88, label %40

40:                                               ; preds = %37
  %41 = load atomic i32, i32* %34 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %30, %42
  %44 = shl i32 %29, 2
  %45 = add i32 %44, 8
  %46 = sext i32 %45 to i64
  %47 = add nsw i64 %46, 7
  %48 = add i64 %47, %27
  %49 = inttoptr i64 %48 to i32*
  store atomic volatile i32 %41, i32* %49 monotonic, align 4
  %50 = load i64, i64* %2, align 8
  %51 = add i64 %50, %47
  %52 = and i64 %42, 1
  %53 = icmp ne i64 %52, 0
  %54 = icmp ne i32 %41, 3
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %88

56:                                               ; preds = %40
  %57 = and i64 %50, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 262144
  %62 = icmp eq i64 %61, 0
  %63 = and i64 %43, -3
  br i1 %62, label %70, label %64

64:                                               ; preds = %56
  %65 = or i64 %57, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::Heap"**
  %67 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %66, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %67, i64 %50, i64 %51, i64 %63) #12
  %68 = load i64, i64* %2, align 8
  %69 = add i64 %68, %47
  br label %70

70:                                               ; preds = %56, %64
  %71 = phi i64 [ %69, %64 ], [ %51, %56 ]
  %72 = phi i64 [ %68, %64 ], [ %50, %56 ]
  %73 = and i64 %43, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %70
  %80 = and i64 %72, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 24
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %72, i64 %71, i64 %63) #12
  %87 = load i64, i64* %2, align 8
  br label %88

88:                                               ; preds = %86, %79, %70, %40, %37
  %89 = phi i64 [ %87, %86 ], [ %72, %79 ], [ %72, %70 ], [ %50, %40 ], [ %26, %37 ]
  %90 = add nsw i32 %29, 1
  br label %91

91:                                               ; preds = %88, %25
  %92 = phi i64 [ %26, %25 ], [ %89, %88 ]
  %93 = phi i64 [ %27, %25 ], [ %89, %88 ]
  %94 = phi i32 [ %29, %25 ], [ %90, %88 ]
  %95 = add nuw nsw i64 %28, 1
  %96 = icmp eq i64 %95, %11
  br i1 %96, label %12, label %25

97:                                               ; preds = %166, %15
  ret i1 %22

98:                                               ; preds = %166, %23
  %99 = phi i64 [ %24, %23 ], [ %167, %166 ]
  %100 = load i64, i64* %2, align 8
  %101 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %102 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %101, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %101, i64 0, i32 0, i32 1
  %105 = load i8, i8* %104, align 8, !range !9
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %101, i64 0, i32 1, i64 0
  br label %117

109:                                              ; preds = %103, %98
  %110 = and i64 %100, -262144
  %111 = or i64 %110, 16
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 16
  %114 = add i64 %113, -41416
  %115 = inttoptr i64 %114 to %"class.v8::internal::Isolate"*
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %117

117:                                              ; preds = %109, %107
  %118 = phi i64* [ %116, %109 ], [ %108, %107 ]
  %119 = getelementptr inbounds i64, i64* %118, i64 4
  %120 = load i64, i64* %119, align 8
  %121 = trunc i64 %99 to i32
  %122 = shl i32 %121, 2
  %123 = add i32 %122, 8
  %124 = sext i32 %123 to i64
  %125 = add nsw i64 %124, 7
  %126 = add i64 %100, %125
  %127 = inttoptr i64 %126 to i32*
  %128 = trunc i64 %120 to i32
  store atomic volatile i32 %128, i32* %127 monotonic, align 4
  %129 = load i64, i64* %2, align 8
  %130 = add i64 %129, %125
  %131 = and i64 %120, 1
  %132 = icmp ne i64 %131, 0
  %133 = icmp ne i32 %128, 3
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %166

135:                                              ; preds = %117
  %136 = and i64 %129, -262144
  %137 = or i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, 262144
  %141 = icmp eq i64 %140, 0
  %142 = and i64 %120, -3
  br i1 %141, label %149, label %143

143:                                              ; preds = %135
  %144 = or i64 %136, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %129, i64 %130, i64 %142) #12
  %147 = load i64, i64* %2, align 8
  %148 = add i64 %147, %125
  br label %149

149:                                              ; preds = %135, %143
  %150 = phi i64 [ %148, %143 ], [ %130, %135 ]
  %151 = phi i64 [ %147, %143 ], [ %129, %135 ]
  %152 = and i64 %120, -262144
  %153 = or i64 %152, 8
  %154 = inttoptr i64 %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %149
  %159 = and i64 %151, -262144
  %160 = or i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 24
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %158
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %151, i64 %150, i64 %142) #12
  br label %166

166:                                              ; preds = %117, %149, %158, %165
  %167 = add nsw i64 %99, 1
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %8, %168
  br i1 %169, label %97, label %98
}

declare i64* @_ZN2v88internal7Factory25CopyWeakFixedArrayAndGrowENS0_6HandleINS0_14WeakFixedArrayEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13DependentCode25MarkCodeForDeoptimizationENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::DependentCode", align 8
  %4 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %254, label %10

10:                                               ; preds = %2
  %11 = add i64 %5, 11
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = lshr i32 %13, 1
  %15 = and i32 %14, 31
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %254, label %17

17:                                               ; preds = %10
  %18 = load atomic i32, i32* %12 monotonic, align 4
  %19 = lshr i32 %18, 1
  %20 = and i32 %19, 31
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %22, label %32

22:                                               ; preds = %17
  %23 = bitcast %"class.v8::internal::DependentCode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = and i64 %5, -4294967296
  %25 = add i64 %5, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = call zeroext i1 @_ZN2v88internal13DependentCode25MarkCodeForDeoptimizationENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %3, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %254

32:                                               ; preds = %17
  %33 = load atomic i32, i32* %12 monotonic, align 4
  %34 = ashr i32 %33, 1
  %35 = lshr i32 %34, 5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load i64, i64* %4, align 8
  br label %175

39:                                               ; preds = %32
  switch i32 %1, label %44 [
    i32 0, label %42
    i32 1, label %40
  ]

40:                                               ; preds = %39
  %41 = zext i32 %35 to i64
  br label %89

42:                                               ; preds = %39
  %43 = zext i32 %35 to i64
  br label %50

44:                                               ; preds = %39
  %45 = zext i32 %35 to i64
  %46 = add i32 %1, -2
  %47 = icmp ult i32 %46, 7
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds [7 x i8*], [7 x i8*]* @switch.table._ZN2v88internal13DependentCode25MarkCodeForDeoptimizationENS1_15DependencyGroupE, i64 0, i64 %48
  br label %133

50:                                               ; preds = %87, %42
  %51 = phi i64 [ %5, %42 ], [ %88, %87 ]
  %52 = phi i64 [ 0, %42 ], [ %85, %87 ]
  %53 = phi i8 [ 0, %42 ], [ %84, %87 ]
  %54 = shl i64 %52, 2
  %55 = add nuw nsw i64 %54, 15
  %56 = add i64 %55, %51
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = icmp eq i32 %58, 3
  br i1 %59, label %83, label %60

60:                                               ; preds = %50
  %61 = and i64 %51, -4294967296
  %62 = and i32 %58, -3
  %63 = zext i32 %62 to i64
  %64 = or i64 %61, %63
  %65 = add i64 %64, 15
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 acquire, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %61, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %83

75:                                               ; preds = %60
  %76 = load atomic i32, i32* %66 acquire, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %61, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = or i32 %81, 1
  store atomic volatile i32 %82, i32* %80 monotonic, align 4
  tail call void @_ZN2v88internal11Deoptimizer26TraceMarkForDeoptimizationENS0_4CodeEPKc(i64 %64, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #12
  br label %83

83:                                               ; preds = %75, %60, %50
  %84 = phi i8 [ %53, %50 ], [ %53, %60 ], [ 1, %75 ]
  %85 = add nuw nsw i64 %52, 1
  %86 = icmp eq i64 %85, %43
  br i1 %86, label %128, label %87

87:                                               ; preds = %83
  %88 = load i64, i64* %4, align 8
  br label %50

89:                                               ; preds = %126, %40
  %90 = phi i64 [ %5, %40 ], [ %127, %126 ]
  %91 = phi i64 [ 0, %40 ], [ %124, %126 ]
  %92 = phi i8 [ 0, %40 ], [ %123, %126 ]
  %93 = shl i64 %91, 2
  %94 = add nuw nsw i64 %93, 15
  %95 = add i64 %94, %90
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = icmp eq i32 %97, 3
  br i1 %98, label %122, label %99

99:                                               ; preds = %89
  %100 = and i64 %90, -4294967296
  %101 = and i32 %97, -3
  %102 = zext i32 %101 to i64
  %103 = or i64 %100, %102
  %104 = add i64 %103, 15
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %100, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %122

114:                                              ; preds = %99
  %115 = load atomic i32, i32* %105 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %100, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = or i32 %120, 1
  store atomic volatile i32 %121, i32* %119 monotonic, align 4
  tail call void @_ZN2v88internal11Deoptimizer26TraceMarkForDeoptimizationENS0_4CodeEPKc(i64 %103, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0)) #12
  br label %122

122:                                              ; preds = %114, %99, %89
  %123 = phi i8 [ %92, %89 ], [ %92, %99 ], [ 1, %114 ]
  %124 = add nuw nsw i64 %91, 1
  %125 = icmp eq i64 %124, %41
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = load i64, i64* %4, align 8
  br label %89

128:                                              ; preds = %122, %83, %169
  %129 = phi i8 [ %170, %169 ], [ %84, %83 ], [ %123, %122 ]
  %130 = load i64, i64* %4, align 8
  br i1 %36, label %175, label %131

131:                                              ; preds = %128
  %132 = zext i32 %35 to i64
  br label %184

133:                                              ; preds = %173, %44
  %134 = phi i64 [ %5, %44 ], [ %174, %173 ]
  %135 = phi i64 [ 0, %44 ], [ %171, %173 ]
  %136 = phi i8 [ 0, %44 ], [ %170, %173 ]
  %137 = shl i64 %135, 2
  %138 = add nuw nsw i64 %137, 15
  %139 = add i64 %138, %134
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = icmp eq i32 %141, 3
  br i1 %142, label %169, label %143

143:                                              ; preds = %133
  %144 = and i64 %134, -4294967296
  %145 = and i32 %141, -3
  %146 = zext i32 %145 to i64
  %147 = or i64 %144, %146
  %148 = add i64 %147, 15
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 acquire, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %144, %151
  %153 = add i64 %152, 7
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %169

158:                                              ; preds = %143
  br i1 %47, label %160, label %159

159:                                              ; preds = %158
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)) #13
  unreachable

160:                                              ; preds = %158
  %161 = load i8*, i8** %49, align 8
  %162 = load atomic i32, i32* %149 acquire, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %144, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = or i32 %167, 1
  store atomic volatile i32 %168, i32* %166 monotonic, align 4
  tail call void @_ZN2v88internal11Deoptimizer26TraceMarkForDeoptimizationENS0_4CodeEPKc(i64 %147, i8* nonnull %161) #12
  br label %169

169:                                              ; preds = %143, %160, %133
  %170 = phi i8 [ %136, %133 ], [ %136, %143 ], [ 1, %160 ]
  %171 = add nuw nsw i64 %135, 1
  %172 = icmp eq i64 %171, %45
  br i1 %172, label %128, label %173

173:                                              ; preds = %169
  %174 = load i64, i64* %4, align 8
  br label %133

175:                                              ; preds = %250, %37, %128
  %176 = phi i8 [ %129, %128 ], [ 0, %37 ], [ %129, %250 ]
  %177 = phi i64 [ %130, %128 ], [ %38, %37 ], [ %251, %250 ]
  %178 = add i64 %177, 11
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 62
  store atomic volatile i32 %181, i32* %179 monotonic, align 4
  %182 = and i8 %176, 1
  %183 = icmp ne i8 %182, 0
  br label %254

184:                                              ; preds = %250, %131
  %185 = phi i64 [ 0, %131 ], [ %252, %250 ]
  %186 = phi i64 [ %130, %131 ], [ %251, %250 ]
  %187 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %188 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %187, i64 0, i32 0, i32 1
  %191 = load i8, i8* %190, align 8, !range !9
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %187, i64 0, i32 1, i64 0
  br label %203

195:                                              ; preds = %189, %184
  %196 = and i64 %186, -262144
  %197 = or i64 %196, 16
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 16
  %200 = add i64 %199, -41416
  %201 = inttoptr i64 %200 to %"class.v8::internal::Isolate"*
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %203

203:                                              ; preds = %195, %193
  %204 = phi i64* [ %202, %195 ], [ %194, %193 ]
  %205 = getelementptr inbounds i64, i64* %204, i64 4
  %206 = load i64, i64* %205, align 8
  %207 = shl i64 %185, 2
  %208 = add nuw nsw i64 %207, 15
  %209 = add i64 %208, %186
  %210 = inttoptr i64 %209 to i32*
  %211 = trunc i64 %206 to i32
  store atomic volatile i32 %211, i32* %210 monotonic, align 4
  %212 = load i64, i64* %4, align 8
  %213 = add i64 %212, %208
  %214 = and i64 %206, 1
  %215 = icmp ne i64 %214, 0
  %216 = icmp ne i32 %211, 3
  %217 = and i1 %216, %215
  br i1 %217, label %218, label %250

218:                                              ; preds = %203
  %219 = and i64 %212, -262144
  %220 = or i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 262144
  %224 = icmp eq i64 %223, 0
  %225 = and i64 %206, -3
  br i1 %224, label %232, label %226

226:                                              ; preds = %218
  %227 = or i64 %219, 16
  %228 = inttoptr i64 %227 to %"class.v8::internal::Heap"**
  %229 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %228, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %229, i64 %212, i64 %213, i64 %225) #12
  %230 = load i64, i64* %4, align 8
  %231 = add i64 %230, %208
  br label %232

232:                                              ; preds = %218, %226
  %233 = phi i64 [ %231, %226 ], [ %213, %218 ]
  %234 = phi i64 [ %230, %226 ], [ %212, %218 ]
  %235 = and i64 %206, -262144
  %236 = or i64 %235, 8
  %237 = inttoptr i64 %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = and i64 %238, 24
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %250, label %241

241:                                              ; preds = %232
  %242 = and i64 %234, -262144
  %243 = or i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 24
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %241
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %234, i64 %233, i64 %225) #12
  %249 = load i64, i64* %4, align 8
  br label %250

250:                                              ; preds = %203, %232, %241, %248
  %251 = phi i64 [ %212, %203 ], [ %234, %232 ], [ %234, %241 ], [ %249, %248 ]
  %252 = add nuw nsw i64 %185, 1
  %253 = icmp eq i64 %252, %132
  br i1 %253, label %175, label %184

254:                                              ; preds = %2, %10, %175, %22
  %255 = phi i1 [ %31, %22 ], [ %183, %175 ], [ false, %10 ], [ false, %2 ]
  ret i1 %255
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4Code26SetMarkedForDeoptimizationEPKc(%"class.v8::internal::Code"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = or i32 %13, 1
  store atomic volatile i32 %14, i32* %12 monotonic, align 4
  %15 = load i64, i64* %3, align 8
  tail call void @_ZN2v88internal11Deoptimizer26TraceMarkForDeoptimizationENS0_4CodeEPKc(i64 %15, i8* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2v88internal13DependentCode25MarkCodeForDeoptimizationENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* %0, i32 %1)
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal11Deoptimizer20DeoptimizeMarkedCodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #12
  br label %13

13:                                               ; preds = %4, %2
  ret void
}

declare void @_ZN2v88internal11Deoptimizer20DeoptimizeMarkedCodeEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal11Deoptimizer26TraceMarkForDeoptimizationENS0_4CodeEPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal21FlushInstructionCacheEPvm(i8*, i64) local_unnamed_addr #4

declare i64* @_ZNK2v88internal13AssemblerBase13GetCodeTargetEl(%"class.v8::internal::AssemblerBase"*, i64) local_unnamed_addr #4

declare i64* @_ZNK2v88internal13AssemblerBase17GetEmbeddedObjectEm(%"class.v8::internal::AssemblerBase"*, i64) local_unnamed_addr #4

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #4

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobDataEv() local_unnamed_addr #4

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobDataSizeEv() local_unnamed_addr #4

declare { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal9CodeRange23GetProcessWideCodeRangeEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #6

declare i8* @_ZNK2v88internal7Isolate18embedded_blob_codeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal7Isolate23embedded_blob_code_sizeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i8* @_ZNK2v88internal7Isolate18embedded_blob_dataEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i32 @_ZNK2v88internal7Isolate23embedded_blob_data_sizeEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #4

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #4

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #4

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #12
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #12
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #12
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #12
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #12
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #12
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #12
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #12
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #12
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #12
  tail call void @_ZdlPv(i8* %8) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #12
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #12
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #12
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #12
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #12
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #12
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #12
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #12
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #12
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #12
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #12
  tail call void @_ZdlPv(i8* %8) #14
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #14
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6ObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::Object"* dereferenceable(8)) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #4

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!5 = distinct !{!5, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!9 = !{i8 0, i8 2}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !11}
!17 = distinct !{!17, !13}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!20 = distinct !{!20, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN2v88internal12_GLOBAL__N_145EmbeddedDataWithMaybeRemappedEmbeddedBuiltinsENS0_4CodeE: argument 0"}
!23 = distinct !{!23, !"_ZN2v88internal12_GLOBAL__N_145EmbeddedDataWithMaybeRemappedEmbeddedBuiltinsENS0_4CodeE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!26 = distinct !{!26, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_9CodeRangeE: argument 0"}
!29 = distinct !{!29, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_9CodeRangeE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!32 = distinct !{!32, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!33 = !{}
!34 = !{!31, !28, !25}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN2v88internal12_GLOBAL__N_145EmbeddedDataWithMaybeRemappedEmbeddedBuiltinsENS0_4CodeE: argument 0"}
!37 = distinct !{!37, !"_ZN2v88internal12_GLOBAL__N_145EmbeddedDataWithMaybeRemappedEmbeddedBuiltinsENS0_4CodeE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!40 = distinct !{!40, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_9CodeRangeE: argument 0"}
!43 = distinct !{!43, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_9CodeRangeE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!46 = distinct !{!46, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!47 = !{!45, !42, !39}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE: argument 0"}
!50 = distinct !{!50, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE"}
!51 = distinct !{!51, !52, !"_ZN2v88internal12EmbeddedData20GetEmbeddedDataForPCEPNS0_7IsolateEm: argument 0"}
!52 = distinct !{!52, !"_ZN2v88internal12EmbeddedData20GetEmbeddedDataForPCEPNS0_7IsolateEm"}
!53 = !{!51}
!54 = !{!55, !51}
!55 = distinct !{!55, !56, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!56 = distinct !{!56, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE: argument 0"}
!59 = distinct !{!59, !"_ZN2v88internal12EmbeddedData8FromBlobEPNS0_7IsolateE"}
!60 = distinct !{!60, !61, !"_ZN2v88internal12EmbeddedData20GetEmbeddedDataForPCEPNS0_7IsolateEm: argument 0"}
!61 = distinct !{!61, !"_ZN2v88internal12EmbeddedData20GetEmbeddedDataForPCEPNS0_7IsolateEm"}
!62 = !{!60}
!63 = !{!64, !60}
!64 = distinct !{!64, !65, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!65 = distinct !{!65, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!68 = distinct !{!68, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!71 = distinct !{!71, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN2v88internal12EmbeddedData8FromBlobEv: argument 0"}
!74 = distinct !{!74, !"_ZN2v88internal12EmbeddedData8FromBlobEv"}
!75 = !{!"branch_weights", i32 1, i32 2000}
!76 = distinct !{!76, !11}
!77 = distinct !{!77, !13}
