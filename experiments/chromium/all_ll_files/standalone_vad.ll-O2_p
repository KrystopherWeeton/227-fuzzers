; ModuleID = '../../third_party/webrtc/modules/audio_processing/vad/standalone_vad.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/vad/standalone_vad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::StandaloneVad" = type <{ %struct.WebRtcVadInst*, [480 x i16], i64, i32, [4 x i8] }>
%struct.WebRtcVadInst = type opaque

@_ZN6webrtc13StandaloneVadC1EP13WebRtcVadInst = hidden unnamed_addr alias void (%"class.webrtc::StandaloneVad"*, %struct.WebRtcVadInst*), void (%"class.webrtc::StandaloneVad"*, %struct.WebRtcVadInst*)* @_ZN6webrtc13StandaloneVadC2EP13WebRtcVadInst
@_ZN6webrtc13StandaloneVadD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StandaloneVad"*), void (%"class.webrtc::StandaloneVad"*)* @_ZN6webrtc13StandaloneVadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13StandaloneVadC2EP13WebRtcVadInst(%"class.webrtc::StandaloneVad"* nocapture, %struct.WebRtcVadInst*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 0
  store %struct.WebRtcVadInst* %1, %struct.WebRtcVadInst** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 3
  %6 = bitcast [480 x i16]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 968, i1 false)
  store i32 3, i32* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13StandaloneVadD2Ev(%"class.webrtc::StandaloneVad"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 0
  %3 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %2, align 8
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* %3) #4
  ret void
}

declare void @WebRtcVad_Free(%struct.WebRtcVadInst*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.webrtc::StandaloneVad"* @_ZN6webrtc13StandaloneVad6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %struct.WebRtcVadInst* @WebRtcVad_Create() #4
  %2 = icmp eq %struct.WebRtcVadInst* %1, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %0
  %4 = tail call i32 @WebRtcVad_Init(%struct.WebRtcVadInst* nonnull %1) #4
  %5 = tail call i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst* nonnull %1, i32 3) #4
  %6 = or i32 %5, %4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* nonnull %1) #4
  br label %16

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 984) #5
  %11 = bitcast i8* %10 to %"class.webrtc::StandaloneVad"*
  %12 = bitcast i8* %10 to %struct.WebRtcVadInst**
  store %struct.WebRtcVadInst* %1, %struct.WebRtcVadInst** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = getelementptr inbounds i8, i8* %10, i64 976
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 968, i1 false) #4
  store i32 3, i32* %15, align 8
  br label %16

16:                                               ; preds = %8, %9, %0
  %17 = phi %"class.webrtc::StandaloneVad"* [ null, %0 ], [ null, %8 ], [ %11, %9 ]
  ret %"class.webrtc::StandaloneVad"* %17
}

declare %struct.WebRtcVadInst* @WebRtcVad_Create() local_unnamed_addr #2

declare i32 @WebRtcVad_Init(%struct.WebRtcVadInst*) local_unnamed_addr #2

declare i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc13StandaloneVad8AddAudioEPKsm(%"class.webrtc::StandaloneVad"* nocapture, i16* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 160
  br i1 %4, label %5, label %18

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 160
  %9 = icmp ugt i64 %8, 480
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  store i64 0, i64* %6, align 8
  br label %11

11:                                               ; preds = %10, %5
  %12 = phi i64 [ 0, %10 ], [ %7, %5 ]
  %13 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 1, i64 %12
  %14 = bitcast i16* %13 to i8*
  %15 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %14, i8* align 2 %15, i64 320, i1 false)
  %16 = load i64, i64* %6, align 8
  %17 = add i64 %16, 160
  store i64 %17, i64* %6, align 8
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi i32 [ 0, %11 ], [ -1, %3 ]
  ret i32 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc13StandaloneVad11GetActivityEPdm(%"class.webrtc::StandaloneVad"*, double* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %3
  %8 = udiv i64 %5, 160
  %9 = icmp ugt i64 %8, %2
  br i1 %9, label %32, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 0
  %12 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %11, align 8
  %13 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 1, i64 0
  %14 = tail call i32 @WebRtcVad_Process(%struct.WebRtcVadInst* %12, i32 16000, i16* %13, i64 %5) #4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = icmp eq i32 %14, 0
  %18 = select i1 %17, double 1.000000e-02, double 5.000000e-01
  store double %18, double* %1, align 8
  %19 = icmp ugt i64 %5, 319
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = bitcast double* %1 to i64*
  %22 = getelementptr inbounds double, double* %1, i64 1
  store double %18, double* %22, align 8
  %23 = icmp ugt i64 %5, 479
  br i1 %23, label %25, label %24

24:                                               ; preds = %25, %20, %16
  store i64 0, i64* %4, align 8
  br label %32

25:                                               ; preds = %20, %25
  %26 = phi i64 [ %30, %25 ], [ 2, %20 ]
  %27 = load i64, i64* %21, align 8
  %28 = getelementptr inbounds double, double* %1, i64 %26
  %29 = bitcast double* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = add nuw nsw i64 %26, 1
  %31 = icmp ult i64 %30, %8
  br i1 %31, label %25, label %24

32:                                               ; preds = %7, %10, %24, %3
  %33 = phi i32 [ -1, %3 ], [ -1, %7 ], [ %14, %24 ], [ -1, %10 ]
  ret i32 %33
}

declare i32 @WebRtcVad_Process(%struct.WebRtcVadInst*, i32, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc13StandaloneVad8set_modeEi(%"class.webrtc::StandaloneVad"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 3
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 0
  %6 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %5, align 8
  %7 = tail call i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst* %6, i32 %1) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.webrtc::StandaloneVad", %"class.webrtc::StandaloneVad"* %0, i64 0, i32 3
  store i32 %1, i32* %10, align 8
  br label %11

11:                                               ; preds = %4, %2, %9
  %12 = phi i32 [ 0, %9 ], [ -1, %2 ], [ -1, %4 ]
  ret i32 %12
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
