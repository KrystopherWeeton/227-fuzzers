; ModuleID = '../../third_party/blink/renderer/platform/text/layout_locale.cc'
source_filename = "../../third_party/blink/renderer/platform/text/layout_locale.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::(anonymous namespace)::PerThreadData> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::ThreadSpecific<blink::(anonymous namespace)::PerThreadData> >::InstanceStorage" = type { [16 x i8] }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.2, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.2 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.3", [4 x i8] }>
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::(anonymous namespace)::PerThreadData" = type { %"class.WTF::HashMap", %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"*, i8, %"class.WTF::String" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.blink::LayoutLocale"* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.blink::ICUError" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink12LayoutLocaleEEEEEENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_DnEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

@.str = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"loose\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"lb\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"ja-JP\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"ko-KR\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"zh-Hans\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"zh-Hant\00", align 1
@_ZZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_113PerThreadDataEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::PerThreadData]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink12LayoutLocaleEEEEEEPKcv = private unnamed_addr constant [121 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, scoped_refptr<blink::LayoutLocale> >]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@switch.table._ZNK5blink12LayoutLocale22LocaleWithBreakKeywordENS_21LineBreakIteratorModeE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)], align 8

@_ZN5blink12LayoutLocaleC1ERKN3WTF12AtomicStringE = hidden unnamed_addr alias void (%"class.blink::LayoutLocale"*, %"class.WTF::AtomicString"*), void (%"class.blink::LayoutLocale"*, %"class.WTF::AtomicString"*)* @_ZN5blink12LayoutLocaleC2ERKN3WTF12AtomicStringE

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink12LayoutLocale18LocaleForSkFontMgrEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %81

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %50 [
    i32 54, label %23
    i32 18, label %20
    i32 73, label %21
    i32 74, label %22
  ]

20:                                               ; preds = %17
  br label %23

21:                                               ; preds = %17
  br label %23

22:                                               ; preds = %17
  br label %23

23:                                               ; preds = %22, %21, %20, %17
  %24 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %17 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %20 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %21 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %22 ]
  %25 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = tail call i64 @strlen(i8* nonnull %24) #14
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #15
  unreachable

30:                                               ; preds = %23
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #16
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %25, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #14
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %25, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  br label %52

50:                                               ; preds = %17
  %51 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #14
  br label %52

52:                                               ; preds = %50, %47
  %53 = phi i8* [ %51, %50 ], [ %25, %47 ]
  br i1 %8, label %54, label %57

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %54, %52
  %58 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %53, i64 24, i1 false) #14
  %59 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 0, i8* %60, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #14
  %61 = load i8, i8* %6, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  br label %68

66:                                               ; preds = %57
  %67 = zext i8 %61 to i64
  br label %68

68:                                               ; preds = %63, %66
  %69 = phi i64 [ %65, %63 ], [ %67, %66 ]
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %81

71:                                               ; preds = %68
  %72 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #14
  %73 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %73) #14
  %74 = load i8, i8* %6, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #16
  br label %79

79:                                               ; preds = %76, %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %72, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #14
  %80 = load i8, i8* %6, align 1
  br label %81

81:                                               ; preds = %68, %79, %14
  %82 = phi i8 [ %61, %68 ], [ %80, %79 ], [ %7, %14 ]
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  br label %89

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i8* [ %86, %84 ], [ %88, %87 ]
  ret i8* %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutLocale19ComputeScriptForHanEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %9 [
    i32 74, label %4
    i32 73, label %4
    i32 54, label %4
    i32 18, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1
  %5 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  store i32 %3, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = or i8 %7, 1
  store i8 %8, i8* %6, align 8
  br label %19

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  %11 = tail call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %10, i8 signext 45) #14
  %12 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  store i32 %11, i32* %12, align 4
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i32 73, i32* %12, align 4
  br label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = or i8 %17, 1
  store i8 %18, i8* %16, align 8
  br label %19

19:                                               ; preds = %4, %15, %14
  ret void
}

declare i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8), i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutLocale15GetScriptForHanEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %12 [
    i32 74, label %8
    i32 73, label %8
    i32 54, label %8
    i32 18, label %8
  ]

8:                                                ; preds = %5, %5, %5, %5
  store i32 %7, i32* %2, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8
  %11 = or i8 %10, 1
  store i8 %11, i8* %9, align 8
  br label %21

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  %14 = tail call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %13, i8 signext 45) #14
  store i32 %14, i32* %2, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i32 73, i32* %2, align 4
  br label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = or i8 %19, 1
  store i8 %20, i8* %18, align 8
  br label %21

21:                                               ; preds = %17, %16, %8, %1
  %22 = phi i32 [ %14, %17 ], [ 73, %16 ], [ %7, %8 ], [ %3, %1 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutLocale15HasScriptForHanEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %12 [
    i32 74, label %8
    i32 73, label %8
    i32 54, label %8
    i32 18, label %8
  ]

8:                                                ; preds = %5, %5, %5, %5
  store i32 %7, i32* %2, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 8
  %11 = or i8 %10, 1
  store i8 %11, i8* %9, align 8
  br label %21

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  %14 = tail call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %13, i8 signext 45) #14
  store i32 %14, i32* %2, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i32 73, i32* %2, align 4
  br label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = or i8 %19, 1
  store i8 %20, i8* %18, align 8
  br label %21

21:                                               ; preds = %17, %16, %8, %1
  %22 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %23 = load i8, i8* %22, align 8
  %24 = and i8 %23, 1
  %25 = icmp ne i8 %24, 0
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale12LocaleForHanEPKS0_(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = icmp eq %"class.blink::LayoutLocale"* %0, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %17 [
    i32 74, label %13
    i32 73, label %13
    i32 54, label %13
    i32 18, label %13
  ]

13:                                               ; preds = %10, %10, %10, %10
  store i32 %12, i32* %7, align 4
  %14 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %15 = load i8, i8* %14, align 8
  %16 = or i8 %15, 1
  store i8 %16, i8* %14, align 8
  br label %26

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  %19 = tail call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %18, i8 signext 45) #14
  store i32 %19, i32* %7, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i32 73, i32* %7, align 4
  br label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %24 = load i8, i8* %23, align 8
  %25 = or i8 %24, 1
  store i8 %25, i8* %23, align 8
  br label %26

26:                                               ; preds = %6, %13, %21, %22
  %27 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %291

31:                                               ; preds = %26, %1
  %32 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %33 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %32, i64 0, i32 4
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %288, label %36, !prof !3

36:                                               ; preds = %31
  %37 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #14
  %40 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %32, i64 0, i32 5
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %40, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector"* nonnull dereferenceable(16) %2) #14
  %41 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %42 = load i32, i32* %39, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %188, label %46

46:                                               ; preds = %36
  %47 = bitcast %"class.WTF::String"* %3 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %49 = bitcast %"class.WTF::String"* %3 to i64*
  %50 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %51 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %32, i64 0, i32 3
  br label %54

54:                                               ; preds = %184, %46
  %55 = phi %"class.WTF::String"* [ %41, %46 ], [ %185, %184 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %48, align 8
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %48, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i33
  %68 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #14
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !4

73:                                               ; preds = %64
  call void @llvm.trap() #14
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4
  br label %76

76:                                               ; preds = %54, %59, %74
  %77 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %3) #14
  %78 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %78, i64* %49, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #14
  br label %94

94:                                               ; preds = %90, %93
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  br label %96

96:                                               ; preds = %94, %76
  %97 = phi %"class.WTF::StringImpl"* [ %95, %94 ], [ %77, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %122, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 acquire, align 4
  %102 = and i32 %101, 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %99
  %105 = load atomic i32, i32* %100 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #14
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !4

117:                                              ; preds = %108
  call void @llvm.trap() #14
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %122

120:                                              ; preds = %99
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %97) #14
  br label %122

122:                                              ; preds = %96, %104, %118, %120
  %123 = phi %"class.WTF::StringImpl"* [ %121, %120 ], [ %97, %104 ], [ %97, %118 ], [ null, %96 ]
  %124 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  store i64 %124, i64* %51, align 8
  %125 = call %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale3GetERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #14
  br label %141

141:                                              ; preds = %122, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #14
  %142 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 8
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %161

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 7
  %147 = load i32, i32* %146, align 8
  switch i32 %147, label %152 [
    i32 74, label %148
    i32 73, label %148
    i32 54, label %148
    i32 18, label %148
  ]

148:                                              ; preds = %145, %145, %145, %145
  store i32 %147, i32* %142, align 4
  %149 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 9
  %150 = load i8, i8* %149, align 8
  %151 = or i8 %150, 1
  store i8 %151, i8* %149, align 8
  br label %161

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 2, i32 0
  %154 = call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %153, i8 signext 45) #14
  store i32 %154, i32* %142, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %152
  store i32 73, i32* %142, align 4
  br label %161

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 9
  %159 = load i8, i8* %158, align 8
  %160 = or i8 %159, 1
  store i8 %160, i8* %158, align 8
  br label %161

161:                                              ; preds = %141, %148, %156, %157
  %162 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %125, i64 0, i32 9
  %163 = load i8, i8* %162, align 8
  %164 = and i8 %163, 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %167, label %166

166:                                              ; preds = %161
  store %"class.blink::LayoutLocale"* %125, %"class.blink::LayoutLocale"** %53, align 8
  br label %167

167:                                              ; preds = %161, %166
  %168 = phi i1 [ true, %166 ], [ false, %161 ]
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #14
  br label %184

184:                                              ; preds = %167, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 1
  %186 = icmp eq %"class.WTF::String"* %185, %44
  %187 = or i1 %168, %186
  br i1 %187, label %188, label %54

188:                                              ; preds = %184, %36
  %189 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %32, i64 0, i32 3
  %190 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %189, align 8
  %191 = icmp eq %"class.blink::LayoutLocale"* %190, null
  br i1 %191, label %192, label %251

192:                                              ; preds = %188
  %193 = call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv()
  %194 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 8
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %213

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 7
  %199 = load i32, i32* %198, align 8
  switch i32 %199, label %204 [
    i32 74, label %200
    i32 73, label %200
    i32 54, label %200
    i32 18, label %200
  ]

200:                                              ; preds = %197, %197, %197, %197
  store i32 %199, i32* %194, align 4
  %201 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 9
  %202 = load i8, i8* %201, align 8
  %203 = or i8 %202, 1
  store i8 %203, i8* %201, align 8
  br label %213

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 2, i32 0
  %206 = call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %205, i8 signext 45) #14
  store i32 %206, i32* %194, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %204
  store i32 73, i32* %194, align 4
  br label %213

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 9
  %211 = load i8, i8* %210, align 8
  %212 = or i8 %211, 1
  store i8 %212, i8* %210, align 8
  br label %213

213:                                              ; preds = %192, %200, %208, %209
  %214 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %193, i64 0, i32 9
  %215 = load i8, i8* %214, align 8
  %216 = and i8 %215, 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %219, label %218

218:                                              ; preds = %213
  store %"class.blink::LayoutLocale"* %193, %"class.blink::LayoutLocale"** %189, align 8
  br label %221

219:                                              ; preds = %213
  %220 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %189, align 8
  br label %221

221:                                              ; preds = %219, %218
  %222 = phi %"class.blink::LayoutLocale"* [ %220, %219 ], [ %193, %218 ]
  %223 = icmp eq %"class.blink::LayoutLocale"* %222, null
  br i1 %223, label %224, label %251

224:                                              ; preds = %221
  %225 = call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale9GetSystemEv()
  %226 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 8
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %245

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 7
  %231 = load i32, i32* %230, align 8
  switch i32 %231, label %236 [
    i32 74, label %232
    i32 73, label %232
    i32 54, label %232
    i32 18, label %232
  ]

232:                                              ; preds = %229, %229, %229, %229
  store i32 %231, i32* %226, align 4
  %233 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 9
  %234 = load i8, i8* %233, align 8
  %235 = or i8 %234, 1
  store i8 %235, i8* %233, align 8
  br label %245

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 2, i32 0
  %238 = call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %237, i8 signext 45) #14
  store i32 %238, i32* %226, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %236
  store i32 73, i32* %226, align 4
  br label %245

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 9
  %243 = load i8, i8* %242, align 8
  %244 = or i8 %243, 1
  store i8 %244, i8* %242, align 8
  br label %245

245:                                              ; preds = %224, %232, %240, %241
  %246 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %225, i64 0, i32 9
  %247 = load i8, i8* %246, align 8
  %248 = and i8 %247, 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %251, label %250

250:                                              ; preds = %245
  store %"class.blink::LayoutLocale"* %225, %"class.blink::LayoutLocale"** %189, align 8
  br label %251

251:                                              ; preds = %245, %188, %250, %221
  store i8 1, i8* %33, align 8
  %252 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %253 = icmp eq %"class.WTF::String"* %252, null
  br i1 %253, label %287, label %254, !prof !3

254:                                              ; preds = %251
  %255 = bitcast %"class.WTF::String"* %252 to i8*
  %256 = load i32, i32* %39, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %285, label %258, !prof !4

258:                                              ; preds = %254
  %259 = zext i32 %256 to i64
  %260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %252, i64 %259
  br label %261

261:                                              ; preds = %279, %258
  %262 = phi %"class.WTF::String"* [ %280, %279 ], [ %252, %258 ]
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #14
  br label %279

279:                                              ; preds = %278, %275, %261
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %262, i64 1
  %281 = icmp eq %"class.WTF::String"* %280, %260
  br i1 %281, label %282, label %261

282:                                              ; preds = %279
  store i32 0, i32* %39, align 4
  %283 = bitcast %"class.WTF::Vector"* %2 to i8**
  %284 = load i8*, i8** %283, align 8
  br label %285

285:                                              ; preds = %282, %254
  %286 = phi i8* [ %284, %282 ], [ %255, %254 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %286) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %38, align 8
  br label %287

287:                                              ; preds = %251, %285
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14
  br label %288

288:                                              ; preds = %31, %287
  %289 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %32, i64 0, i32 3
  %290 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %289, align 8
  br label %291

291:                                              ; preds = %26, %288
  %292 = phi %"class.blink::LayoutLocale"* [ %290, %288 ], [ %0, %26 ]
  ret %"class.blink::LayoutLocale"* %292
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv() unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !5

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"struct.blink::(anonymous namespace)::PerThreadData"* null, %"struct.blink::(anonymous namespace)::PerThreadData"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data to %"struct.blink::(anonymous namespace)::PerThreadData"**), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN3WTF14ThreadSpecificIN5blink12_GLOBAL__N_113PerThreadDataEE7DestroyEPv) #14
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data) #14
  br label %7

7:                                                ; preds = %3, %6, %0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*)) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %15, !prof !4

10:                                               ; preds = %7
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 64, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_113PerThreadDataEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116GetPerThreadDataEvE6s_data, i64 0, i32 0, i32 0, i64 8) to %"class.base::ThreadLocalStorage::Slot"*), i8* %11) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 24
  %13 = getelementptr inbounds i8, i8* %11, i64 56
  %14 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false) #14
  br label %15

15:                                               ; preds = %7, %10
  %16 = phi i8* [ %11, %10 ], [ %8, %7 ]
  %17 = bitcast i8* %16 to %"struct.blink::(anonymous namespace)::PerThreadData"*
  ret %"struct.blink::(anonymous namespace)::PerThreadData"* %17
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale3GetERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.5, align 8
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %9 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  store i8* null, i8** %3, align 8
  %10 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %8, i64 0, i32 0, i32 0
  %11 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %0, i8** nonnull dereferenceable(8) %3) #14
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %11, 0
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %11, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %7
  %17 = call noalias i8* @malloc(i64 80) #14
  %18 = bitcast i8* %17 to %"class.blink::LayoutLocale"*
  call void @_ZN5blink12LayoutLocaleC2ERKN3WTF12AtomicStringE(%"class.blink::LayoutLocale"* %18, %"class.WTF::AtomicString"* dereferenceable(8) %0)
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1
  %20 = bitcast %class.scoped_refptr.5* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = bitcast %class.scoped_refptr.5* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %class.scoped_refptr.5* %2 to i64*
  %24 = ptrtoint i8* %17 to i64
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  br label %25

25:                                               ; preds = %7, %16
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1, i32 0
  %27 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %26, align 8
  br label %28

28:                                               ; preds = %1, %25
  %29 = phi %"class.blink::LayoutLocale"* [ %27, %25 ], [ null, %1 ]
  ret %"class.blink::LayoutLocale"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %3 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %2, i64 0, i32 1
  %4 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutLocale"* %4, null
  br i1 %5, label %6, label %65, !prof !4

6:                                                ; preds = %0
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() #14
  %8 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #14
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %20
  tail call void @llvm.trap() #14
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %33

32:                                               ; preds = %6, %10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #14
  br label %33

33:                                               ; preds = %30, %14, %32
  %34 = call %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale3GetERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %1)
  store %"class.blink::LayoutLocale"* %34, %"class.blink::LayoutLocale"** %3, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #14
  br label %51

51:                                               ; preds = %33, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br i1 %9, label %65, label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %65

65:                                               ; preds = %64, %61, %51, %0
  %66 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %3, align 8
  ret %"class.blink::LayoutLocale"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale9GetSystemEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::String", align 8
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %4 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %3, i64 0, i32 2
  %5 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutLocale"* %5, null
  br i1 %6, label %7, label %107, !prof !4

7:                                                ; preds = %0
  %8 = bitcast %"class.WTF::String"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %9, align 8
  %10 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #14
  %11 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %10, i64 0, i32 7
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = tail call i64 @strlen(i8* nonnull %12) #17
  br label %16

16:                                               ; preds = %7, %14
  %17 = phi i64 [ %15, %14 ], [ 0, %7 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1, i8* %12, i64 %17) #14
  %18 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %68, label %21

21:                                               ; preds = %16
  %22 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %19, i16 zeroext 95, i16 zeroext 45) #14
  %23 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %24 = bitcast %"class.WTF::String"* %1 to i64*
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %23, i64* %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #14
  br label %40

40:                                               ; preds = %39, %36
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %42

42:                                               ; preds = %40, %21
  %43 = phi %"class.WTF::StringImpl"* [ %41, %40 ], [ %22, %21 ]
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %68, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %45
  %51 = load atomic i32, i32* %46 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %68

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #14
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !4

63:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %68

66:                                               ; preds = %45
  %67 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %43) #14
  br label %68

68:                                               ; preds = %16, %42, %50, %64, %66
  %69 = phi %"class.WTF::StringImpl"* [ %67, %66 ], [ %43, %50 ], [ %43, %64 ], [ null, %42 ], [ null, %16 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %71 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %70, i64* %71, align 8
  %72 = call %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale3GetERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %2)
  store %"class.blink::LayoutLocale"* %72, %"class.blink::LayoutLocale"** %4, align 8
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #14
  br label %89

89:                                               ; preds = %68, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #14
  br label %105

105:                                              ; preds = %89, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %106 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %4, align 8
  br label %107

107:                                              ; preds = %105, %0
  %108 = phi %"class.blink::LayoutLocale"* [ %106, %105 ], [ %5, %0 ]
  ret %"class.blink::LayoutLocale"* %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink12LayoutLocale24LocaleForHanForSkFontMgrEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %9 [
    i32 74, label %8
    i32 73, label %8
    i32 54, label %8
    i32 18, label %8
  ]

8:                                                ; preds = %5, %5, %5, %5
  store i32 %7, i32* %2, align 4
  br label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0
  %11 = tail call i32 @_ZN5blink27ScriptCodeForHanFromSubtagsERKN3WTF6StringEc(%"class.WTF::String"* dereferenceable(8) %10, i8 signext 45) #14
  store i32 %11, i32* %2, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store i32 73, i32* %2, align 4
  br label %22

14:                                               ; preds = %9, %8
  %15 = phi i32 [ %7, %8 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = or i8 %17, 1
  store i8 %18, i8* %16, align 8
  br label %19

19:                                               ; preds = %14, %1
  %20 = phi i32 [ %3, %1 ], [ %15, %14 ]
  switch i32 %20, label %24 [
    i32 54, label %25
    i32 18, label %21
    i32 73, label %22
    i32 74, label %23
  ]

21:                                               ; preds = %19
  br label %25

22:                                               ; preds = %13, %19
  br label %25

23:                                               ; preds = %19
  br label %25

24:                                               ; preds = %19
  br label %25

25:                                               ; preds = %19, %21, %22, %23, %24
  %26 = phi i8* [ null, %24 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %23 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %22 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %21 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %19 ]
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutLocale20ComputeCaseMapLocaleEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::CaseMap::Locale", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = or i8 %4, 4
  store i8 %5, i8* %3, align 8
  %6 = bitcast %"class.WTF::CaseMap::Locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2
  call void @_ZN3WTF7CaseMap6LocaleC1ERKNS_12AtomicStringE(%"class.WTF::CaseMap::Locale"* nonnull %2, %"class.WTF::AtomicString"* dereferenceable(8) %7) #14
  %8 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 4
  %9 = bitcast %"class.WTF::CaseMap::Locale"* %2 to i64*
  %10 = bitcast %"class.WTF::CaseMap::Locale"* %8 to i64*
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

declare void @_ZN3WTF7CaseMap6LocaleC1ERKNS_12AtomicStringE(%"class.WTF::CaseMap::Locale"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutLocaleC2ERKN3WTF12AtomicStringE(%"class.blink::LayoutLocale"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #14
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %14
  tail call void @llvm.trap() #14
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 6
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #14
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %33) #14
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %31, align 8
  %39 = load i64, i64* %32, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i8* %38, i8* %29
  %42 = select i1 %37, i64 %39, i64 %40
  %43 = trunc i64 %42 to i32
  %44 = call %struct.hb_language_impl_t* @hb_language_from_string(i8* %41, i32 %43) #14
  %45 = load i8, i8* %35, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %26
  %48 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %26, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  store %struct.hb_language_impl_t* %44, %struct.hb_language_impl_t** %28, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 7
  %51 = call i32 @_ZN5blink34LocaleToScriptCodeForFontSelectionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %33) #14
  store i32 %51, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 8
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, -8
  store i8 %55, i8* %53, align 8
  ret void
}

declare i32 @_ZN5blink34LocaleToScriptCodeForFontSelectionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15DefaultLanguageEv() local_unnamed_addr #2

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale16CreateForTestingERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 80) #14
  %3 = bitcast i8* %2 to %"class.blink::LayoutLocale"*
  tail call void @_ZN5blink12LayoutLocaleC2ERKN3WTF12AtomicStringE(%"class.blink::LayoutLocale"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %0)
  ret %"class.blink::LayoutLocale"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Hyphenation"* @_ZNK5blink12LayoutLocale14GetHyphenationEv(%"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 5, i32 0
  br label %31

8:                                                ; preds = %1
  %9 = or i8 %3, 2
  store i8 %9, i8* %2, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2
  %11 = tail call %"class.blink::Hyphenation"* @_ZN5blink11Hyphenation22PlatformGetHyphenationERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %10) #14
  %12 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 5
  %13 = ptrtoint %"class.blink::Hyphenation"* %11 to i64
  %14 = bitcast %class.scoped_refptr.2* %12 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %12, i64 0, i32 0
  %16 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %15, align 8
  store i64 %13, i64* %14, align 8
  %17 = icmp eq %"class.blink::Hyphenation"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %16, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #14
  %21 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted.4"* %25 to %"class.blink::Hyphenation"*
  %27 = bitcast %"class.base::RefCounted.4"* %25 to void (%"class.blink::Hyphenation"*)***
  %28 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %28, i64 1
  %30 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %29, align 8
  tail call void %30(%"class.blink::Hyphenation"* nonnull %26) #14
  br label %31

31:                                               ; preds = %24, %18, %8, %6
  %32 = phi %"class.blink::Hyphenation"** [ %7, %6 ], [ %15, %8 ], [ %15, %18 ], [ %15, %24 ]
  %33 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %32, align 8
  ret %"class.blink::Hyphenation"* %33
}

declare %"class.blink::Hyphenation"* @_ZN5blink11Hyphenation22PlatformGetHyphenationERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutLocale24SetHyphenationForTestingERKN3WTF12AtomicStringE13scoped_refptrINS_11HyphenationEE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Hyphenation"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::Hyphenation"* %1 to i64
  %4 = tail call %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale3GetERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %0)
  %5 = icmp eq %"class.blink::LayoutLocale"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #14
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.blink::LayoutLocale"* [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %9, i64 0, i32 9
  %11 = load i8, i8* %10, align 8
  %12 = or i8 %11, 2
  store i8 %12, i8* %10, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %9, i64 0, i32 5
  %14 = bitcast %class.scoped_refptr.2* %13 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %13, i64 0, i32 0
  %16 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %15, align 8
  store i64 %3, i64* %14, align 8
  %17 = icmp eq %"class.blink::Hyphenation"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %16, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #14
  %21 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted.4"* %25 to %"class.blink::Hyphenation"*
  %27 = bitcast %"class.base::RefCounted.4"* %25 to void (%"class.blink::Hyphenation"*)***
  %28 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %28, i64 1
  %30 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %29, align 8
  tail call void %30(%"class.blink::Hyphenation"* nonnull %26) #14
  br label %31

31:                                               ; preds = %24, %18, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12LayoutLocale22LocaleWithBreakKeywordENS_21LineBreakIteratorModeE(%"class.blink::LayoutLocale"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.blink::ICUError", align 4
  %5 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %211, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  br i1 %12, label %15, label %30

15:                                               ; preds = %9
  %16 = and i32 %14, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %211

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #14
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #14
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %211

30:                                               ; preds = %9
  %31 = and i32 %14, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  br i1 %32, label %42, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::StringImpl"* %33 to i8*
  %36 = zext i32 %11 to i64
  %37 = tail call i8* @memchr(i8* %35, i32 64, i64 %36) #17
  %38 = icmp eq i8* %37, null
  %39 = ptrtoint i8* %37 to i64
  %40 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %41 = sub i64 %39, %40
  br i1 %38, label %73, label %53

42:                                               ; preds = %30
  %43 = bitcast %"class.WTF::StringImpl"* %33 to i16*
  %44 = zext i32 %11 to i64
  br label %45

45:                                               ; preds = %50, %42
  %46 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %47 = getelementptr inbounds i16, i16* %43, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 64
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = add nuw nsw i64 %46, 1
  %52 = icmp eq i64 %51, %44
  br i1 %52, label %73, label %45

53:                                               ; preds = %45, %34
  %54 = phi i64 [ %41, %34 ], [ %46, %45 ]
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %73, label %57

57:                                               ; preds = %53
  %58 = load atomic i32, i32* %13 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %211

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #14
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !4

70:                                               ; preds = %61
  tail call void @llvm.trap() #14
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %211

73:                                               ; preds = %50, %53, %34
  %74 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #14
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %77, i32 0) #14
  %79 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = load i64, i64* %76, align 8
  %84 = zext i8 %81 to i64
  %85 = select i1 %82, i64 %83, i64 %84
  %86 = trunc i64 %85 to i32
  %87 = add i32 %86, 11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %73
  %90 = zext i32 %87 to i64
  %91 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %90) #14
  %92 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %91) #14
  %93 = ptrtoint i8* %92 to i64
  %94 = trunc i64 %91 to i32
  br label %95

95:                                               ; preds = %73, %89
  %96 = phi i32 [ 0, %73 ], [ %94, %89 ]
  %97 = phi i64 [ 0, %73 ], [ %93, %89 ]
  %98 = phi i64 [ 0, %73 ], [ %90, %89 ]
  %99 = phi i8* [ null, %73 ], [ %92, %89 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %98, i1 false) #14
  %100 = inttoptr i64 %97 to i8*
  %101 = load i8, i8* %80, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %75, align 8
  %104 = load i64, i64* %76, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i8* %103, i8* %74
  %107 = select i1 %102, i64 %104, i64 %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %106, i64 %107, i1 false)
  %108 = add i32 %1, -1
  %109 = icmp ult i32 %108, 3
  br i1 %109, label %110, label %114

110:                                              ; preds = %95
  %111 = sext i32 %108 to i64
  %112 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZNK5blink12LayoutLocale22LocaleWithBreakKeywordENS_21LineBreakIteratorModeE, i64 0, i64 %111
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %110, %95
  %115 = phi i8* [ null, %95 ], [ %113, %110 ]
  %116 = bitcast %"class.blink::ICUError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116) #14
  %117 = getelementptr inbounds %"class.blink::ICUError", %"class.blink::ICUError"* %4, i64 0, i32 0
  store i32 0, i32* %117, align 4
  %118 = call i32 @uloc_setKeywordValue_69(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %115, i8* %100, i32 %87, i32* nonnull %117) #14
  %119 = load i32, i32* %117, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %114
  %122 = sext i32 %118 to i64
  %123 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8* %100, i64 %122) #14
  br label %195

124:                                              ; preds = %114
  %125 = icmp eq i32 %119, 15
  br i1 %125, label %126, label %174

126:                                              ; preds = %124
  %127 = add nsw i32 %118, 1
  %128 = icmp ult i32 %96, %127
  br i1 %128, label %129, label %149

129:                                              ; preds = %126
  %130 = lshr i32 %96, 2
  %131 = add nuw i32 %96, 1
  %132 = add i32 %131, %130
  %133 = icmp ugt i32 %132, 4
  %134 = select i1 %133, i32 %132, i32 4
  %135 = icmp ugt i32 %134, %127
  %136 = select i1 %135, i32 %134, i32 %127
  %137 = icmp ult i32 %96, %136
  br i1 %137, label %138, label %149, !prof !3

138:                                              ; preds = %129
  %139 = icmp eq i64 %97, 0
  %140 = zext i32 %136 to i64
  %141 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %140) #14
  %142 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %141) #14
  %143 = ptrtoint i8* %142 to i64
  br i1 %139, label %149, label %144

144:                                              ; preds = %138
  %145 = icmp eq i8* %142, null
  br i1 %145, label %148, label %146, !prof !4

146:                                              ; preds = %144
  %147 = zext i32 %87 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %142, i8* nonnull align 1 %100, i64 %147, i1 false) #14
  br label %148

148:                                              ; preds = %144, %146
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %100) #14
  br label %149

149:                                              ; preds = %148, %129, %138, %126
  %150 = phi i64 [ %97, %126 ], [ %143, %148 ], [ %97, %129 ], [ %143, %138 ]
  %151 = inttoptr i64 %150 to i8*
  %152 = zext i32 %87 to i64
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = zext i32 %127 to i64
  %155 = getelementptr inbounds i8, i8* %151, i64 %154
  %156 = ptrtoint i8* %155 to i64
  %157 = ptrtoint i8* %153 to i64
  %158 = sub i64 %156, %157
  call void @llvm.memset.p0i8.i64(i8* align 1 %153, i8 0, i64 %158, i1 false) #14
  %159 = load i8, i8* %80, align 1
  %160 = icmp slt i8 %159, 0
  %161 = load i64, i64* %76, align 8
  %162 = zext i8 %159 to i64
  %163 = select i1 %160, i64 %161, i64 %162
  %164 = getelementptr inbounds i8, i8* %151, i64 %163
  %165 = sub i64 %154, %163
  call void @llvm.memset.p0i8.i64(i8* align 1 %164, i8 0, i64 %165, i1 false)
  store i32 0, i32* %117, align 4
  %166 = call i32 @uloc_setKeywordValue_69(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %115, i8* %151, i32 %127, i32* nonnull %117) #14
  %167 = load i32, i32* %117, align 4
  %168 = icmp slt i32 %167, 1
  %169 = icmp eq i32 %118, %166
  %170 = and i1 %169, %168
  br i1 %170, label %171, label %174

171:                                              ; preds = %149
  %172 = sext i32 %118 to i64
  %173 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8* %151, i64 %172) #14
  br label %195

174:                                              ; preds = %149, %124
  %175 = phi i64 [ %150, %149 ], [ %97, %124 ]
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i33
  %187 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #14
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !4

192:                                              ; preds = %183
  call void @llvm.trap() #14
  unreachable

193:                                              ; preds = %183
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %184, align 4
  br label %195

195:                                              ; preds = %193, %178, %174, %171, %121
  %196 = phi i64 [ %150, %171 ], [ %97, %121 ], [ %175, %174 ], [ %175, %178 ], [ %175, %193 ]
  %197 = phi %"class.WTF::StringImpl"* [ %173, %171 ], [ %123, %121 ], [ null, %174 ], [ %176, %178 ], [ %176, %193 ]
  %198 = load i32, i32* %117, align 4
  %199 = icmp slt i32 %198, 1
  br i1 %199, label %201, label %200

200:                                              ; preds = %195
  call void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"* nonnull %4) #14
  br label %201

201:                                              ; preds = %195, %200
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116) #14
  %202 = icmp eq i64 %196, 0
  br i1 %202, label %205, label %203, !prof !3

203:                                              ; preds = %201
  %204 = inttoptr i64 %196 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %204) #14
  br label %205

205:                                              ; preds = %201, %203
  %206 = load i8, i8* %80, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %205
  %209 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %205, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #14
  br label %211

211:                                              ; preds = %2, %71, %57, %28, %15, %210
  %212 = phi %"class.WTF::StringImpl"* [ %197, %210 ], [ %7, %15 ], [ %7, %28 ], [ %7, %57 ], [ %7, %71 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %212
}

declare i32 @uloc_setKeywordValue_69(i8*, i8*, i8*, i32, i32*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutLocale22AcceptLanguagesChangedERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %3 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %2, i64 0, i32 5
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %7) #14
  br i1 %8, label %50, label %9

9:                                                ; preds = %1
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %9
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %3 to i64*
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %30, i64* %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #14
  br label %47

47:                                               ; preds = %29, %43, %46
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %2, i64 0, i32 3
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %48, align 8
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %2, i64 0, i32 4
  store i8 0, i8* %49, align 8
  br label %50

50:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutLocale15ClearForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = alloca [29 x i8], align 4
  %2 = getelementptr inbounds [29 x i8], [29 x i8]* %1, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 29, i8* nonnull %2)
  %3 = getelementptr inbounds [29 x i8], [29 x i8]* %1, i64 0, i64 4
  %4 = getelementptr inbounds [29 x i8], [29 x i8]* %1, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 29, i1 false)
  %5 = tail call fastcc dereferenceable(64) %"struct.blink::(anonymous namespace)::PerThreadData"* @_ZN5blink12_GLOBAL__N_116GetPerThreadDataEv()
  %6 = bitcast %"struct.blink::(anonymous namespace)::PerThreadData"* %5 to i64*
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  store atomic i64 0, i64* %6 monotonic, align 8
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 0, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, -2147483648
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 1
  %16 = bitcast %"class.blink::LayoutLocale"** %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %3, i64 25, i1 false)
  %17 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PerThreadData", %"struct.blink::(anonymous namespace)::PerThreadData"* %5, i64 0, i32 5
  %18 = bitcast %"class.WTF::String"* %17 to i64*
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store i64 0, i64* %18, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %35

35:                                               ; preds = %34, %31, %0
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %36, label %70, label %37, !prof !3

37:                                               ; preds = %35
  %38 = icmp eq i32 %10, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %10 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %42, i32 1
  tail call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* %48) #14
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #14
  br label %70

70:                                               ; preds = %35, %68
  call void @llvm.lifetime.end.p0i8(i64 29, i8* nonnull %2)
  ret void
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3WTF14ThreadSpecificIN5blink12_GLOBAL__N_113PerThreadDataEE7DestroyEPv(i8*) #4 align 2 {
  %2 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #14
  br i1 %2, label %62, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 56
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #14
  br label %21

21:                                               ; preds = %20, %17, %3
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"**
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %22, align 8
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, null
  br i1 %24, label %61, label %25, !prof !3

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %0, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  br label %32

32:                                               ; preds = %56, %30
  %33 = phi i64 [ 0, %30 ], [ %57, %56 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, inttoptr (i64 -1 to i8*)
  br i1 %37, label %56, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33, i32 1
  tail call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* %39) #14
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #14
  br label %56

56:                                               ; preds = %55, %52, %38, %32
  %57 = add nuw nsw i64 %33, 1
  %58 = icmp eq i64 %57, %31
  br i1 %58, label %59, label %32

59:                                               ; preds = %56, %25
  %60 = bitcast %"struct.WTF::KeyValuePair"* %23 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #14
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %22, align 8
  br label %61

61:                                               ; preds = %21, %59
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %0) #14
  br label %62

62:                                               ; preds = %1, %61
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %struct.hb_language_impl_t* @hb_language_from_string(i8*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  %17 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.4"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.4"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #14
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #14
  br label %55

55:                                               ; preds = %5, %53, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #14
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #14
  %85 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink12LayoutLocaleEEEEEENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, i8** dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink12LayoutLocaleEEEEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #14
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink12LayoutLocaleEEEEEENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.scoped_refptr.5, align 8
  %5 = alloca %class.scoped_refptr.5, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #14
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %14
  tail call void @llvm.trap() #14
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %24, %9, %3
  %27 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %28 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %27, i64* %28, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br label %45

45:                                               ; preds = %26, %41, %44
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %47 = bitcast %class.scoped_refptr.5* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %5, i64 0, i32 0
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %48, align 8
  %49 = bitcast %class.scoped_refptr.5* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = bitcast %class.scoped_refptr.5* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.scoped_refptr.5* %4 to i64*
  store i64 0, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %74

24:                                               ; preds = %120
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %121, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %124, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %122, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* %48) #14
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #14
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %28, %68
  %71 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, -2147483648
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair"* %33

74:                                               ; preds = %21, %120
  %75 = phi i64 [ %121, %120 ], [ %23, %21 ]
  %76 = phi i32 [ %122, %120 ], [ %13, %21 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %123, %120 ], [ %22, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %124, %120 ], [ null, %21 ]
  %79 = phi i32 [ %125, %120 ], [ 0, %21 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %"struct.WTF::KeyValuePair"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %85 [
    i64 -1, label %120
    i64 0, label %120
  ]

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %86) #14
  %88 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, 0
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 1
  call void @_ZN13scoped_refptrIN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.5* %89) #14
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #14
  br label %106

106:                                              ; preds = %85, %102, %105
  %107 = load i64, i64* %83, align 8
  %108 = bitcast %"struct.WTF::KeyValuePair"* %88 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80, i32 1
  %110 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %109, i64 0, i32 0
  %111 = bitcast %class.scoped_refptr.5* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %class.scoped_refptr.5* %89 to i64*
  store i64 %112, i64* %113, align 8
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %110, align 8
  %114 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %80
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, %3
  %117 = select i1 %116, %"struct.WTF::KeyValuePair"* %88, %"struct.WTF::KeyValuePair"* %78
  %118 = load i32, i32* %12, align 8
  %119 = ptrtoint %"struct.WTF::KeyValuePair"* %114 to i64
  br label %120

120:                                              ; preds = %74, %74, %106
  %121 = phi i64 [ %75, %74 ], [ %119, %106 ], [ %75, %74 ]
  %122 = phi i32 [ %76, %74 ], [ %118, %106 ], [ %76, %74 ]
  %123 = phi %"struct.WTF::KeyValuePair"* [ %77, %74 ], [ %114, %106 ], [ %77, %74 ]
  %124 = phi %"struct.WTF::KeyValuePair"* [ %78, %74 ], [ %117, %106 ], [ %78, %74 ]
  %125 = add i32 %79, 1
  %126 = icmp eq i32 %125, %122
  br i1 %126, label %24, label %74
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink12LayoutLocaleEEEENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #14
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #14
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #14
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #14
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #14
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #14
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #14
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #14
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 1, i32 1048575}
