; ModuleID = '../../third_party/boringssl/src/crypto/digest_extra/digest_extra.c'
source_filename = "../../third_party/boringssl/src/crypto/digest_extra/digest_extra.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nid_to_digest = type { i32, %struct.env_md_st* ()*, i8*, i8* }
%struct.env_md_st = type { i32, i32, i32, void (%struct.env_md_ctx_st*)*, void (%struct.env_md_ctx_st*, i8*, i64)*, void (%struct.env_md_ctx_st*, i8*)*, i32, i32 }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type { void (%struct.evp_pkey_ctx_st*)*, %struct.evp_pkey_ctx_st* (%struct.evp_pkey_ctx_st*)* }
%struct.anon = type { [9 x i8], i8, i32 }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.blake2b_state_st = type { [8 x i64], i64, i64, %union.anon, i64 }
%union.anon = type { [16 x i64] }

@nid_to_digest_mapping = internal unnamed_addr constant [17 x %struct.nid_to_digest] [%struct.nid_to_digest { i32 257, %struct.env_md_st* ()* @EVP_md4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0) }, %struct.nid_to_digest { i32 4, %struct.env_md_st* ()* @EVP_md5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0) }, %struct.nid_to_digest { i32 64, %struct.env_md_st* ()* @EVP_sha1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0) }, %struct.nid_to_digest { i32 675, %struct.env_md_st* ()* @EVP_sha224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0) }, %struct.nid_to_digest { i32 672, %struct.env_md_st* ()* @EVP_sha256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0) }, %struct.nid_to_digest { i32 673, %struct.env_md_st* ()* @EVP_sha384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0) }, %struct.nid_to_digest { i32 674, %struct.env_md_st* ()* @EVP_sha512, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0) }, %struct.nid_to_digest { i32 114, %struct.env_md_st* ()* @EVP_md5_sha1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i8* null }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_md5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha224, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha384, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0) }, %struct.nid_to_digest { i32 0, %struct.env_md_st* ()* @EVP_sha512, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [67 x i8] c"../../third_party/boringssl/src/crypto/digest_extra/digest_extra.c\00", align 1
@kMDOIDs = internal constant [7 x %struct.anon] [%struct.anon { [9 x i8] c"*\86H\86\F7\0D\02\04\00", i8 8, i32 257 }, %struct.anon { [9 x i8] c"*\86H\86\F7\0D\02\05\00", i8 8, i32 4 }, %struct.anon { [9 x i8] c"+\0E\03\02\1A\00\00\00\00", i8 5, i32 64 }, %struct.anon { [9 x i8] c"`\86H\01e\03\04\02\01", i8 9, i32 672 }, %struct.anon { [9 x i8] c"`\86H\01e\03\04\02\02", i8 9, i32 673 }, %struct.anon { [9 x i8] c"`\86H\01e\03\04\02\03", i8 9, i32 674 }, %struct.anon { [9 x i8] c"`\86H\01e\03\04\02\04", i8 9, i32 675 }], align 16
@evp_md_blake2b256 = internal constant %struct.env_md_st { i32 0, i32 32, i32 0, void (%struct.env_md_ctx_st*)* @blake2b256_init, void (%struct.env_md_ctx_st*, i8*, i64)* @blake2b256_update, void (%struct.env_md_ctx_st*, i8*)* @blake2b256_final, i32 128, i32 216 }, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"MD4\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"md4\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"MD5\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"md5\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"SHA1\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"sha1\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"SHA224\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"sha224\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"SHA256\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"SHA384\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"sha384\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"SHA512\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"sha512\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"MD5-SHA1\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"md5-sha1\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"DSA-SHA\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"dsaWithSHA\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"DSA-SHA1\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"dsaWithSHA1\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"ecdsa-with-SHA1\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"RSA-MD5\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"md5WithRSAEncryption\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"RSA-SHA1\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"sha1WithRSAEncryption\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"RSA-SHA224\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"sha224WithRSAEncryption\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"RSA-SHA256\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"sha256WithRSAEncryption\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"RSA-SHA384\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"sha384WithRSAEncryption\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"RSA-SHA512\00", align 1
@.str.33 = private unnamed_addr constant [24 x i8] c"sha512WithRSAEncryption\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @EVP_get_digestbynid(i32) local_unnamed_addr #0 {
  switch i32 %0, label %14 [
    i32 114, label %8
    i32 257, label %9
    i32 4, label %2
    i32 64, label %3
    i32 675, label %4
    i32 672, label %5
    i32 673, label %6
    i32 674, label %7
  ]

2:                                                ; preds = %1
  br label %9

3:                                                ; preds = %1
  br label %9

4:                                                ; preds = %1
  br label %9

5:                                                ; preds = %1
  br label %9

6:                                                ; preds = %1
  br label %9

7:                                                ; preds = %1
  br label %9

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %1, %8, %7, %6, %5, %4, %3, %2
  %10 = phi i64 [ 0, %1 ], [ 1, %2 ], [ 2, %3 ], [ 3, %4 ], [ 4, %5 ], [ 5, %6 ], [ 6, %7 ], [ 7, %8 ]
  %11 = getelementptr inbounds [17 x %struct.nid_to_digest], [17 x %struct.nid_to_digest]* @nid_to_digest_mapping, i64 0, i64 %10, i32 1
  %12 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %11, align 8
  %13 = tail call %struct.env_md_st* %12() #6
  br label %14

14:                                               ; preds = %1, %9
  %15 = phi %struct.env_md_st* [ %13, %9 ], [ null, %1 ]
  ret %struct.env_md_st* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @EVP_get_digestbyobj(%struct.asn1_object_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %26 [
    i32 0, label %17
    i32 114, label %11
    i32 257, label %12
    i32 4, label %5
    i32 64, label %6
    i32 675, label %7
    i32 672, label %8
    i32 673, label %9
    i32 674, label %10
  ]

5:                                                ; preds = %1
  br label %12

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  br label %12

8:                                                ; preds = %1
  br label %12

9:                                                ; preds = %1
  br label %12

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %1, %11, %10, %9, %8, %7, %6, %5
  %13 = phi i64 [ 1, %5 ], [ 2, %6 ], [ 3, %7 ], [ 4, %8 ], [ 5, %9 ], [ 6, %10 ], [ 7, %11 ], [ 0, %1 ]
  %14 = getelementptr inbounds [17 x %struct.nid_to_digest], [17 x %struct.nid_to_digest]* @nid_to_digest_mapping, i64 0, i64 %13, i32 1
  %15 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %14, align 8
  %16 = tail call %struct.env_md_st* %15() #6
  br label %26

17:                                               ; preds = %1
  %18 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #6
  %19 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 4
  %20 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  %22 = getelementptr inbounds %struct.asn1_object_st, %struct.asn1_object_st* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %2, i8* %21, i64 %24) #6
  %25 = call fastcc %struct.env_md_st* @cbs_to_md(%struct.cbs_st* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #6
  br label %26

26:                                               ; preds = %1, %12, %17
  %27 = phi %struct.env_md_st* [ %25, %17 ], [ %16, %12 ], [ null, %1 ]
  ret %struct.env_md_st* %27
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.env_md_st* @cbs_to_md(%struct.cbs_st*) unnamed_addr #0 {
  %2 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %3 = icmp eq i64 %2, 8
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %6 = tail call i32 @bcmp(i8* %5, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 0, i32 0, i64 0), i64 8)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1, %4
  %9 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %10 = icmp eq i64 %9, 8
  br i1 %10, label %18, label %22

11:                                               ; preds = %53, %46, %39, %32, %25, %18, %4
  %12 = phi i64 [ 0, %4 ], [ 1, %18 ], [ 2, %25 ], [ 3, %32 ], [ 4, %39 ], [ 5, %46 ], [ 6, %53 ]
  %13 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 %12, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = tail call %struct.env_md_st* @EVP_get_digestbynid(i32 %14)
  br label %16

16:                                               ; preds = %50, %53, %11
  %17 = phi %struct.env_md_st* [ %15, %11 ], [ null, %53 ], [ null, %50 ]
  ret %struct.env_md_st* %17

18:                                               ; preds = %8
  %19 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %20 = tail call i32 @bcmp(i8* %19, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 1, i32 0, i64 0), i64 8)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %11, label %22

22:                                               ; preds = %18, %8
  %23 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %24 = icmp eq i64 %23, 5
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %27 = tail call i32 @bcmp(i8* %26, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 2, i32 0, i64 0), i64 5)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %11, label %29

29:                                               ; preds = %25, %22
  %30 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %31 = icmp eq i64 %30, 9
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %34 = tail call i32 @bcmp(i8* %33, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 3, i32 0, i64 0), i64 9)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %11, label %36

36:                                               ; preds = %32, %29
  %37 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %38 = icmp eq i64 %37, 9
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %41 = tail call i32 @bcmp(i8* %40, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 4, i32 0, i64 0), i64 9)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %11, label %43

43:                                               ; preds = %39, %36
  %44 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %45 = icmp eq i64 %44, 9
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  %47 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %48 = tail call i32 @bcmp(i8* %47, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 5, i32 0, i64 0), i64 9)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %11, label %50

50:                                               ; preds = %46, %43
  %51 = tail call i64 @CBS_len(%struct.cbs_st* %0) #6
  %52 = icmp eq i64 %51, 9
  br i1 %52, label %53, label %16

53:                                               ; preds = %50
  %54 = tail call i8* @CBS_data(%struct.cbs_st* %0) #6
  %55 = tail call i32 @bcmp(i8* %54, i8* getelementptr inbounds ([7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 6, i32 0, i64 0), i64 9)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %11, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @EVP_parse_digest_algorithm(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = bitcast %struct.cbs_st* %3 to i8*
  %7 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %8 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 536870928) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %3, i32 6) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %1
  call void @ERR_put_error(i32 29, i32 0, i32 101, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 169) #6
  br label %35

15:                                               ; preds = %11
  %16 = call fastcc %struct.env_md_st* @cbs_to_md(%struct.cbs_st* nonnull %3)
  %17 = icmp eq %struct.env_md_st* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  call void @ERR_put_error(i32 29, i32 0, i32 102, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 175) #6
  br label %35

19:                                               ; preds = %15
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #6
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %19
  %23 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  %24 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4, i32 5) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #6
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #6
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30, %27, %22
  call void @ERR_put_error(i32 29, i32 0, i32 101, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 188) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  br label %35

34:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  br label %35

35:                                               ; preds = %18, %33, %34, %19, %14
  %36 = phi %struct.env_md_st* [ null, %14 ], [ null, %18 ], [ null, %33 ], [ %16, %34 ], [ %16, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret %struct.env_md_st* %36
}

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_marshal_digest_algorithm(%struct.cbb_st*, %struct.env_md_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 6) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %11, %2
  call void @ERR_put_error(i32 29, i32 0, i32 65, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 200) #6
  br label %39

15:                                               ; preds = %11
  %16 = call i32 @EVP_MD_type(%struct.env_md_st* %1) #6
  switch i32 %16, label %41 [
    i32 257, label %23
    i32 4, label %17
    i32 64, label %18
    i32 672, label %19
    i32 673, label %20
    i32 674, label %21
    i32 675, label %22
  ]

17:                                               ; preds = %15
  br label %23

18:                                               ; preds = %15
  br label %23

19:                                               ; preds = %15
  br label %23

20:                                               ; preds = %15
  br label %23

21:                                               ; preds = %15
  br label %23

22:                                               ; preds = %15
  br label %23

23:                                               ; preds = %15, %22, %21, %20, %19, %18, %17
  %24 = phi i64 [ 0, %15 ], [ 1, %17 ], [ 2, %18 ], [ 3, %19 ], [ 4, %20 ], [ 5, %21 ], [ 6, %22 ]
  %25 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 %24, i32 0, i64 0
  %26 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* @kMDOIDs, i64 0, i64 %24, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %25, i64 %28) #6
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %23
  call void @ERR_put_error(i32 29, i32 0, i32 65, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 209) #6
  br label %39

32:                                               ; preds = %23
  %33 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %5, i32 5) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = call i32 @CBB_flush(%struct.cbb_st* %0) #6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %32
  call void @ERR_put_error(i32 29, i32 0, i32 65, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 224) #6
  br label %39

39:                                               ; preds = %31, %41, %38, %35, %14
  %40 = phi i32 [ 0, %14 ], [ 0, %38 ], [ 0, %41 ], [ 0, %31 ], [ 1, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret i32 %40

41:                                               ; preds = %15
  call void @ERR_put_error(i32 29, i32 0, i32 102, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 218) #6
  br label %39
}

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @EVP_MD_type(%struct.env_md_st*) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.env_md_st* @EVP_get_digestbyname(i8* nocapture readonly) local_unnamed_addr #0 {
  br label %2

2:                                                ; preds = %15, %1
  %3 = phi i64 [ 0, %1 ], [ %16, %15 ]
  %4 = getelementptr inbounds [17 x %struct.nid_to_digest], [17 x %struct.nid_to_digest]* @nid_to_digest_mapping, i64 0, i64 %3, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds [17 x %struct.nid_to_digest], [17 x %struct.nid_to_digest]* @nid_to_digest_mapping, i64 0, i64 %3, i32 2
  %7 = load i8*, i8** %6, align 16
  %8 = tail call i32 @strcmp(i8* %7, i8* %0) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = icmp eq i64 %3, 10
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = tail call i32 @strcmp(i8* %5, i8* %0) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10, %12
  %16 = add nuw nsw i64 %3, 1
  %17 = icmp eq i64 %16, 17
  br i1 %17, label %23, label %2

18:                                               ; preds = %12, %2
  %19 = and i64 %3, 4294967295
  %20 = getelementptr inbounds [17 x %struct.nid_to_digest], [17 x %struct.nid_to_digest]* @nid_to_digest_mapping, i64 0, i64 %19, i32 1
  %21 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %20, align 8
  %22 = tail call %struct.env_md_st* %21() #6
  br label %23

23:                                               ; preds = %15, %18
  %24 = phi %struct.env_md_st* [ %22, %18 ], [ null, %15 ]
  ret %struct.env_md_st* %24
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.env_md_st* @EVP_blake2b256() local_unnamed_addr #4 {
  ret %struct.env_md_st* @evp_md_blake2b256
}

declare %struct.env_md_st* @EVP_md4() #2

declare %struct.env_md_st* @EVP_md5() #2

declare %struct.env_md_st* @EVP_sha1() #2

declare %struct.env_md_st* @EVP_sha224() #2

declare %struct.env_md_st* @EVP_sha256() #2

declare %struct.env_md_st* @EVP_sha384() #2

declare %struct.env_md_st* @EVP_sha512() #2

declare %struct.env_md_st* @EVP_md5_sha1() #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @blake2b256_init(%struct.env_md_ctx_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to %struct.blake2b_state_st**
  %4 = load %struct.blake2b_state_st*, %struct.blake2b_state_st** %3, align 8
  tail call void @BLAKE2B256_Init(%struct.blake2b_state_st* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @blake2b256_update(%struct.env_md_ctx_st* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.blake2b_state_st**
  %6 = load %struct.blake2b_state_st*, %struct.blake2b_state_st** %5, align 8
  tail call void @BLAKE2B256_Update(%struct.blake2b_state_st* %6, i8* %1, i64 %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @blake2b256_final(%struct.env_md_ctx_st* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.blake2b_state_st**
  %5 = load %struct.blake2b_state_st*, %struct.blake2b_state_st** %4, align 8
  tail call void @BLAKE2B256_Final(i8* %1, %struct.blake2b_state_st* %5) #6
  ret void
}

declare void @BLAKE2B256_Init(%struct.blake2b_state_st*) local_unnamed_addr #2

declare void @BLAKE2B256_Update(%struct.blake2b_state_st*, i8*, i64) local_unnamed_addr #2

declare void @BLAKE2B256_Final(i8*, %struct.blake2b_state_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
