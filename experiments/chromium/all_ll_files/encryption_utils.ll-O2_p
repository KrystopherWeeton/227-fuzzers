; ModuleID = '../../components/password_manager/core/browser/leak_detection/encryption_utils.cc'
source_filename = "../../components/password_manager/core/browser/leak_detection/encryption_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.6 }
%struct.anon.6 = type { %"struct.std::__1::__padding.7", i8 }
%"struct.std::__1::__padding.7" = type { [1 x i8] }
%"class.std::__1::allocator.9" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.std::__1::basic_string" }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.private_join_and_compute::StatusOr" = type { %"class.private_join_and_compute::Status", %"class.std::__1::unique_ptr" }
%"class.private_join_and_compute::Status" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.14"* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.private_join_and_compute::ECCommutativeCipher"* }
%"class.private_join_and_compute::ECCommutativeCipher" = type <{ %"class.std::__1::unique_ptr.17", %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.private_join_and_compute::Context"* }
%"class.private_join_and_compute::Context" = type { i32 (...)**, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.24", %struct.hmac_ctx_st, %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %struct.bignum_ctx* }
%struct.bignum_ctx = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.env_md_ctx_st* }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.private_join_and_compute::ECGroup" = type { %"class.private_join_and_compute::Context"*, %"class.std::__1::unique_ptr.33", %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum", %"struct.private_join_and_compute::ECGroup::CurveParams", %"class.private_join_and_compute::BigNum" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %struct.ec_group_st* }
%struct.ec_group_st = type opaque
%"struct.private_join_and_compute::ECGroup::CurveParams" = type { %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum" }
%"class.private_join_and_compute::BigNum" = type { %"class.std::__1::unique_ptr.28", %struct.bignum_ctx* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %struct.bignum_st* }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%"class.private_join_and_compute::StatusOr.43" = type { %"class.private_join_and_compute::Status", %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::default_delete.41" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_ = comdat any

$_ZN24private_join_and_compute7ECGroupD2Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

@_ZZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE13kUsernameSalt = internal constant [32 x i8] c"\C4\94\A3\95\F8\C0\E2>\A9#\04xp,r\18VT\99\B3\E9!\18l!\1A\01\22<EJ\FA", align 16
@_ZZN16password_manager29ScryptHashUsernameAndPasswordEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_E17kPasswordHashSalt = internal constant [32 x i8] c"0v*\D2?{\A1\9B\F8\E3B\FC\A1\A7\8D\06\E6k\E4\DB\B8O\81S\C5\03\C8\DB\BD\DE\A5 ", align 16
@.str = private unnamed_addr constant [30 x i8] c"ScryptHashUsernameAndPassword\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../components/password_manager/core/browser/leak_detection/encryption_utils.cc\00", align 1
@_ZZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_E7kPeriod = internal constant i8 46, align 1
@_ZZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEDsEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_E7kPeriod = internal constant i16 46, align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20CanonicalizeUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false) #9, !noalias !2
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %1, i64 %2) #9, !noalias !2
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false) #9, !alias.scope !2
  %9 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %4, i8 signext 64, i64 -1) #9, !noalias !2
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i64 0, i64 %9, %"class.std::__1::allocator"* nonnull dereferenceable(1) %10) #9
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !alias.scope !2
  %14 = icmp slt i8 %13, 0
  %15 = load i8*, i8** %6, align 8, !alias.scope !2
  %16 = select i1 %14, i8* %15, i8* %8
  %17 = load i64, i64* %7, align 8, !alias.scope !2
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %16, i64 %19, i8* nonnull @_ZZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_E7kPeriod, i64 1, %"class.std::__1::basic_string"* %0) #9
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !2
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !noalias !2
  call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %3, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9, !noalias !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20CanonicalizeUsernameEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.2"* noalias sret, i16*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.2", align 8
  %5 = bitcast %"class.std::__1::basic_string.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9, !noalias !5
  %6 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false) #9, !noalias !5
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.2"* nonnull sret %4, i16* %1, i64 %2) #9, !noalias !5
  %8 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string.2"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 24, i1 false) #9, !alias.scope !5
  %13 = load i8, i8* %11, align 1, !noalias !5
  %14 = icmp slt i8 %13, 0
  %15 = load i16*, i16** %6, align 8, !noalias !5
  %16 = load i64, i64* %7, align 8, !noalias !5
  %17 = bitcast %"class.std::__1::basic_string.2"* %4 to i16*
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i16* %15, i16* %17
  %20 = select i1 %14, i64 %16, i64 %18
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i16, i16* %19, i64 %20
  br label %24

24:                                               ; preds = %27, %22
  %25 = phi i16* [ %23, %22 ], [ %28, %27 ]
  %26 = icmp eq i16* %25, %19
  br i1 %26, label %36, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds i16, i16* %25, i64 -1
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 64
  br i1 %30, label %31, label %24

31:                                               ; preds = %27
  %32 = ptrtoint i16* %28 to i64
  %33 = ptrtoint i16* %19 to i64
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 1
  br label %36

36:                                               ; preds = %24, %31, %3
  %37 = phi i64 [ %35, %31 ], [ -1, %3 ], [ -1, %24 ]
  %38 = bitcast %"class.std::__1::basic_string.2"* %4 to %"class.std::__1::allocator.9"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.2"* %0, %"class.std::__1::basic_string.2"* nonnull dereferenceable(24) %4, i64 0, i64 %37, %"class.std::__1::allocator.9"* nonnull dereferenceable(1) %38) #9
  %39 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1, !alias.scope !5
  %42 = icmp slt i8 %41, 0
  %43 = load i16*, i16** %8, align 8, !alias.scope !5
  %44 = bitcast %"class.std::__1::basic_string.2"* %0 to i16*
  %45 = select i1 %42, i16* %43, i16* %44
  %46 = load i64, i64* %9, align 8, !alias.scope !5
  %47 = zext i8 %41 to i64
  %48 = select i1 %42, i64 %46, i64 %47
  %49 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %45, i64 %48, i16* nonnull @_ZZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEDsEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_E7kPeriod, i64 1, %"class.std::__1::basic_string.2"* %0) #9
  %50 = load i8, i8* %11, align 1, !noalias !5
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %36
  %53 = bitcast %"class.std::__1::basic_string.2"* %4 to i8**
  %54 = load i8*, i8** %53, align 8, !noalias !5
  call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %36, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9, !noalias !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast [2 x %"class.base::BasicStringPiece"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #9
  %8 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0
  %9 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE13kUsernameSalt, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 1
  store i64 32, i64* %12, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %4, i64 2, %"class.base::BasicStringPiece"* nonnull %8) #9
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %16, i8* %18, i8* %6
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %15 to i64
  %23 = select i1 %16, i64 %21, i64 %22
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %19, i64 %23) #9
  %24 = load i8, i8* %14, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %3
  %27 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %3, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager17BucketizeUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9, !noalias !8
  %12 = bitcast [2 x %"class.base::BasicStringPiece"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9, !noalias !8
  %13 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0
  %14 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 0
  store i8* %1, i8** %14, align 8, !noalias !8
  %15 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 0, i32 1
  store i64 %2, i64* %15, align 8, !noalias !8
  %16 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE13kUsernameSalt, i64 0, i64 0), i8** %16, align 8, !noalias !8
  %17 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %5, i64 0, i64 1, i32 1
  store i64 32, i64* %17, align 8, !noalias !8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %4, i64 2, %"class.base::BasicStringPiece"* nonnull %13) #9, !noalias !8
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1, !noalias !8
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !8
  %24 = select i1 %21, i8* %23, i8* %11
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !8
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i64 %26, i64 %27
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %24, i64 %28) #9
  %29 = load i8, i8* %19, align 1, !noalias !8
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %3
  %32 = load i8*, i8** %22, align 8, !noalias !8
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %3, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9, !noalias !8
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 0, i64 4, %"class.std::__1::allocator"* nonnull dereferenceable(1) %34) #9
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %33, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  %43 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %50 = zext i8 %45 to i64
  %51 = select i1 %46, i8* %47, i8* %49
  %52 = select i1 %46, i64 %48, i64 %50
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = getelementptr inbounds i8, i8* %53, i64 -1
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, -64
  store i8 %56, i8* %54, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager29ScryptHashUsernameAndPasswordEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.absl::optional"* noalias nocapture sret, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #9
  %15 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %6, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %15, %"class.base::Location"* nonnull dereferenceable(32) %7) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast [2 x %"class.base::BasicStringPiece"]* %9 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  %21 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0, i32 0
  store i8* %1, i8** %21, align 8
  %22 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0, i32 1
  store i64 %2, i64* %22, align 8
  %23 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 1, i32 0
  store i8* %3, i8** %23, align 8
  %24 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 1, i32 1
  store i64 %4, i64* %24, align 8
  %25 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %8, i64 2, %"class.base::BasicStringPiece"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  %26 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast [2 x %"class.base::BasicStringPiece"]* %11 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #9
  %31 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0
  %32 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 0
  store i8* %1, i8** %32, align 8
  %33 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 0, i32 1
  store i64 %2, i64* %33, align 8
  %34 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZZN16password_manager29ScryptHashUsernameAndPasswordEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_E17kPasswordHashSalt, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %11, i64 0, i64 1, i32 1
  store i64 32, i64* %35, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %10, i64 2, %"class.base::BasicStringPiece"* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #9
  %36 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #9
  %38 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %12, i64 33) #9
  %39 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i8*, i8** %17, align 8
  %44 = load i64, i64* %18, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i8* %43, i8* %16
  %47 = select i1 %42, i64 %44, i64 %45
  %48 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %27, align 8
  %53 = load i64, i64* %28, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i8* %52, i8* %26
  %56 = select i1 %51, i64 %53, i64 %54
  %57 = call i32 @EVP_PBE_scrypt(i8* %46, i64 %47, i8* %55, i64 %56, i64 4096, i64 8, i64 1, i64 33554432, i8* %38, i64 32) #9
  %58 = icmp eq i32 %57, 1
  %59 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %58, label %60, label %63

60:                                               ; preds = %5
  store i8 1, i8* %59, align 8, !alias.scope !11
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %36, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #9, !noalias !11
  br label %72

63:                                               ; preds = %5
  store i8 0, i8* %59, align 8
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %union.anon.11* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #9
  %66 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %60, %63, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  %73 = load i8, i8* %49, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %78 = load i8, i8* %40, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare i32 @EVP_PBE_scrypt(i8*, i64, i8*, i64, i64, i64, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager13CipherEncryptERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.absl::optional"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.private_join_and_compute::StatusOr", align 8
  %5 = alloca %"class.private_join_and_compute::StatusOr.43", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.private_join_and_compute::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN24private_join_and_compute19ECCommutativeCipher16CreateWithNewKeyEiNS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* nonnull sret %4, i32 415, i32 0) #9
  %8 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %104

11:                                               ; preds = %3
  %12 = bitcast %"class.private_join_and_compute::StatusOr.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.14"* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %17) #9
  %18 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %"class.std::__1::unique_ptr.14"* [ %18, %16 ], [ %14, %11 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %21, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher7EncryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* nonnull sret %5, %"class.private_join_and_compute::ECCommutativeCipher"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %23 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %80

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.14"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %31) #9
  %32 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi %"class.std::__1::unique_ptr.14"* [ %32, %30 ], [ %28, %26 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %35, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher18GetPrivateKeyBytesEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.private_join_and_compute::ECCommutativeCipher"* %36) #9
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %41, %33
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %27, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %46 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %50) #9
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi %"class.std::__1::basic_string"* [ %51, %49 ], [ %47, %44 ]
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #9
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %46, align 8
  %59 = icmp eq %"class.std::__1::basic_string"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %65, %60
  %69 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %68, %52
  %71 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %108

80:                                               ; preds = %19
  %81 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %89, %84
  %93 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %92, %80
  %95 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %94, %100
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %104

104:                                              ; preds = %103, %3
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %107 = bitcast %union.anon.11* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  br label %108

108:                                              ; preds = %79, %104
  %109 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %110, align 8
  store %"class.std::__1::unique_ptr.14"* null, %"class.std::__1::unique_ptr.14"** %110, align 8
  %112 = icmp eq %"class.std::__1::unique_ptr.14"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"* %114, %"class.std::__1::unique_ptr.14"* nonnull %111) #9
  br label %115

115:                                              ; preds = %113, %108
  %116 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN24private_join_and_compute19ECCommutativeCipher16CreateWithNewKeyEiNS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* sret, i32, i32) local_unnamed_addr #2

declare void @_ZNK24private_join_and_compute19ECCommutativeCipher7EncryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* sret, %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK24private_join_and_compute19ECCommutativeCipher18GetPrivateKeyBytesEv(%"class.std::__1::basic_string"* sret, %"class.private_join_and_compute::ECCommutativeCipher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager20CipherEncryptWithKeyERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.absl::optional"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.private_join_and_compute::StatusOr", align 8
  %5 = alloca %"class.private_join_and_compute::StatusOr.43", align 8
  %6 = bitcast %"class.private_join_and_compute::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  call void @_ZN24private_join_and_compute19ECCommutativeCipher13CreateFromKeyEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* nonnull sret %4, i32 415, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 0) #9
  %7 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %82

10:                                               ; preds = %3
  %11 = bitcast %"class.private_join_and_compute::StatusOr.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.14"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %16) #9
  %17 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %12, align 8
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi %"class.std::__1::unique_ptr.14"* [ %17, %15 ], [ %13, %10 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %20, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher7EncryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* nonnull sret %5, %"class.private_join_and_compute::ECCommutativeCipher"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %22 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br i1 %24, label %27, label %60

27:                                               ; preds = %18
  %28 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %30) #9
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %26, %27 ]
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #9
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %45, %40
  %49 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %32
  %51 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  br label %86

60:                                               ; preds = %18
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %67, %62
  %71 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %70, %60
  %73 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  br label %82

82:                                               ; preds = %81, %3
  %83 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 8
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %union.anon.11* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #9
  br label %86

86:                                               ; preds = %59, %82
  %87 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %88, align 8
  store %"class.std::__1::unique_ptr.14"* null, %"class.std::__1::unique_ptr.14"** %88, align 8
  %90 = icmp eq %"class.std::__1::unique_ptr.14"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.std::__1::unique_ptr"* %87 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"* %92, %"class.std::__1::unique_ptr.14"* nonnull %89) #9
  br label %93

93:                                               ; preds = %91, %86
  %94 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #10
  br label %102

102:                                              ; preds = %93, %99
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void
}

declare void @_ZN24private_join_and_compute19ECCommutativeCipher13CreateFromKeyEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager15CipherReEncryptERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.absl::optional"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.private_join_and_compute::StatusOr", align 8
  %5 = alloca %"class.private_join_and_compute::StatusOr.43", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.private_join_and_compute::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN24private_join_and_compute19ECCommutativeCipher16CreateWithNewKeyEiNS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* nonnull sret %4, i32 415, i32 0) #9
  %8 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %104

11:                                               ; preds = %3
  %12 = bitcast %"class.private_join_and_compute::StatusOr.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.14"* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %17) #9
  %18 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  br label %19

19:                                               ; preds = %11, %16
  %20 = phi %"class.std::__1::unique_ptr.14"* [ %18, %16 ], [ %14, %11 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %21, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher9ReEncryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* nonnull sret %5, %"class.private_join_and_compute::ECCommutativeCipher"* %22, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %23 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %80

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.14"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %31) #9
  %32 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %13, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi %"class.std::__1::unique_ptr.14"* [ %32, %30 ], [ %28, %26 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %35, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher18GetPrivateKeyBytesEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.private_join_and_compute::ECCommutativeCipher"* %36) #9
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %41, %33
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %27, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %46 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %50) #9
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi %"class.std::__1::basic_string"* [ %51, %49 ], [ %47, %44 ]
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #9
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %46, align 8
  %59 = icmp eq %"class.std::__1::basic_string"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %65, %60
  %69 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %68, %52
  %71 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %108

80:                                               ; preds = %19
  %81 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %89, %84
  %93 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %92, %80
  %95 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %94, %100
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %104

104:                                              ; preds = %103, %3
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %107 = bitcast %union.anon.11* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  br label %108

108:                                              ; preds = %79, %104
  %109 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %110, align 8
  store %"class.std::__1::unique_ptr.14"* null, %"class.std::__1::unique_ptr.14"** %110, align 8
  %112 = icmp eq %"class.std::__1::unique_ptr.14"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"* %114, %"class.std::__1::unique_ptr.14"* nonnull %111) #9
  br label %115

115:                                              ; preds = %113, %108
  %116 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %115, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  ret void
}

declare void @_ZNK24private_join_and_compute19ECCommutativeCipher9ReEncryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* sret, %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager13CipherDecryptERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%"class.absl::optional"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.private_join_and_compute::StatusOr", align 8
  %5 = alloca %"class.private_join_and_compute::StatusOr.43", align 8
  %6 = bitcast %"class.private_join_and_compute::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  call void @_ZN24private_join_and_compute19ECCommutativeCipher13CreateFromKeyEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* nonnull sret %4, i32 415, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 0) #9
  %7 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %82

10:                                               ; preds = %3
  %11 = bitcast %"class.private_join_and_compute::StatusOr.43"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.14"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %16) #9
  %17 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %12, align 8
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi %"class.std::__1::unique_ptr.14"* [ %17, %15 ], [ %13, %10 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %20, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher7DecryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* nonnull sret %5, %"class.private_join_and_compute::ECCommutativeCipher"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %22 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br i1 %24, label %27, label %60

27:                                               ; preds = %18
  %28 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %30) #9
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %26, %27 ]
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #9
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %45, %40
  %49 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %32
  %51 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  br label %86

60:                                               ; preds = %18
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %25, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %26, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %67, %62
  %71 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %70, %60
  %73 = getelementptr inbounds %"class.private_join_and_compute::StatusOr.43", %"class.private_join_and_compute::StatusOr.43"* %5, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  br label %82

82:                                               ; preds = %81, %3
  %83 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 8
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %union.anon.11* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #9
  br label %86

86:                                               ; preds = %59, %82
  %87 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %88, align 8
  store %"class.std::__1::unique_ptr.14"* null, %"class.std::__1::unique_ptr.14"** %88, align 8
  %90 = icmp eq %"class.std::__1::unique_ptr.14"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.std::__1::unique_ptr"* %87 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"* %92, %"class.std::__1::unique_ptr.14"* nonnull %89) #9
  br label %93

93:                                               ; preds = %91, %86
  %94 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %4, i64 0, i32 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #10
  br label %102

102:                                              ; preds = %93, %99
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #9
  ret void
}

declare void @_ZNK24private_join_and_compute19ECCommutativeCipher7DecryptERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.private_join_and_compute::StatusOr.43"* sret, %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager12CreateNewKeyEv(%"class.absl::optional"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = alloca %"class.private_join_and_compute::StatusOr", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.private_join_and_compute::StatusOr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @_ZN24private_join_and_compute19ECCommutativeCipher16CreateWithNewKeyEiNS0_8HashTypeE(%"class.private_join_and_compute::StatusOr"* nonnull sret %2, i32 415, i32 0) #9
  %5 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %2, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %23

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.14"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %2, i64 0, i32 0
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %14) #9
  %15 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %10, align 8
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi %"class.std::__1::unique_ptr.14"* [ %15, %13 ], [ %11, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %18, align 8
  call void @_ZNK24private_join_and_compute19ECCommutativeCipher18GetPrivateKeyBytesEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.private_join_and_compute::ECCommutativeCipher"* %19) #9
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %9, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br label %27

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %union.anon.11* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #9
  br label %27

27:                                               ; preds = %23, %16
  %28 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %2, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"** %29, align 8
  store %"class.std::__1::unique_ptr.14"* null, %"class.std::__1::unique_ptr.14"** %29, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.14"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::unique_ptr"* %28 to %"struct.std::__1::default_delete.41"*
  call void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"* %33, %"class.std::__1::unique_ptr.14"* nonnull %30) #9
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %2, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #9
  ret void
}

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteINS_10unique_ptrIN24private_join_and_compute19ECCommutativeCipherENS0_IS3_EEEEEclEPS5_(%"struct.std::__1::default_delete.41"*, %"class.std::__1::unique_ptr.14"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::unique_ptr.14"* %1, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.private_join_and_compute::ECCommutativeCipher"*, %"class.private_join_and_compute::ECCommutativeCipher"** %5, align 8
  store %"class.private_join_and_compute::ECCommutativeCipher"* null, %"class.private_join_and_compute::ECCommutativeCipher"** %5, align 8
  %7 = icmp eq %"class.private_join_and_compute::ECCommutativeCipher"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.private_join_and_compute::ECCommutativeCipher", %"class.private_join_and_compute::ECCommutativeCipher"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load %struct.bignum_st*, %struct.bignum_st** %9, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %9, align 8
  %11 = icmp eq %struct.bignum_st* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %10) #9
  br label %13

13:                                               ; preds = %12, %8
  %14 = getelementptr inbounds %"class.private_join_and_compute::ECCommutativeCipher", %"class.private_join_and_compute::ECCommutativeCipher"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %14, align 8
  %16 = icmp eq %struct.bignum_st* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %15) #9
  br label %18

18:                                               ; preds = %17, %13
  %19 = getelementptr inbounds %"class.private_join_and_compute::ECCommutativeCipher", %"class.private_join_and_compute::ECCommutativeCipher"* %6, i64 0, i32 1
  tail call void @_ZN24private_join_and_compute7ECGroupD2Ev(%"class.private_join_and_compute::ECGroup"* %19) #9
  %20 = getelementptr inbounds %"class.private_join_and_compute::ECCommutativeCipher", %"class.private_join_and_compute::ECCommutativeCipher"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.private_join_and_compute::Context"*, %"class.private_join_and_compute::Context"** %20, align 8
  store %"class.private_join_and_compute::Context"* null, %"class.private_join_and_compute::Context"** %20, align 8
  %22 = icmp eq %"class.private_join_and_compute::Context"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.private_join_and_compute::Context"* %21 to void (%"class.private_join_and_compute::Context"*)***
  %25 = load void (%"class.private_join_and_compute::Context"*)**, void (%"class.private_join_and_compute::Context"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.private_join_and_compute::Context"*)*, void (%"class.private_join_and_compute::Context"*)** %25, i64 1
  %27 = load void (%"class.private_join_and_compute::Context"*)*, void (%"class.private_join_and_compute::Context"*)** %26, align 8
  tail call void %27(%"class.private_join_and_compute::Context"* nonnull %21) #9
  br label %28

28:                                               ; preds = %23, %18
  %29 = bitcast %"class.private_join_and_compute::ECCommutativeCipher"* %6 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %4, %28
  %31 = bitcast %"class.std::__1::unique_ptr.14"* %1 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %30, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24private_join_and_compute7ECGroupD2Ev(%"class.private_join_and_compute::ECGroup"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %2, align 8
  %4 = icmp eq %struct.bignum_st* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %7, align 8
  %9 = icmp eq %struct.bignum_st* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %8) #9
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.bignum_st*, %struct.bignum_st** %12, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %12, align 8
  %14 = icmp eq %struct.bignum_st* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %13) #9
  br label %16

16:                                               ; preds = %15, %11
  %17 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %struct.bignum_st*, %struct.bignum_st** %17, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %17, align 8
  %19 = icmp eq %struct.bignum_st* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %18) #9
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %22, align 8
  %24 = icmp eq %struct.bignum_st* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %23) #9
  br label %26

26:                                               ; preds = %21, %25
  %27 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %struct.bignum_st*, %struct.bignum_st** %27, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %27, align 8
  %29 = icmp eq %struct.bignum_st* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %28) #9
  br label %31

31:                                               ; preds = %26, %30
  %32 = getelementptr inbounds %"class.private_join_and_compute::ECGroup", %"class.private_join_and_compute::ECGroup"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %struct.ec_group_st*, %struct.ec_group_st** %32, align 8
  store %struct.ec_group_st* null, %struct.ec_group_st** %32, align 8
  %34 = icmp eq %struct.ec_group_st* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @EC_GROUP_free(%struct.ec_group_st* nonnull %33) #9
  br label %36

36:                                               ; preds = %31, %35
  ret void
}

declare void @BN_clear_free(%struct.bignum_st*) local_unnamed_addr #2

declare void @EC_GROUP_free(%struct.ec_group_st*) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.2"* sret, i16*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, %"class.std::__1::basic_string.2"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.2"*, %"class.std::__1::basic_string.2"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.9"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string.2"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string.2"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #11
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.2"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string.2"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #11
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #10
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.2"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.2"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !14
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !14
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !17, !noalias !14
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !17, !noalias !14
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !14
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !14
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !17, !noalias !14
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !17, !noalias !14
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !14
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !14
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !17, !noalias !14
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !17, !noalias !14
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !14
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !14
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !17, !noalias !14
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !17, !noalias !14
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !19

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !14
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !14
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !17, !noalias !14
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !17, !noalias !14
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !21

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !23

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !24

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare void @_ZN24private_join_and_compute8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.private_join_and_compute::Status"* dereferenceable(32)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_: argument 0"}
!4 = distinct !{!4, !"_ZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEDsEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_: argument 0"}
!7 = distinct !{!7, !"_ZN16password_manager12_GLOBAL__N_121CanonicalizeUsernameTIN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEDsEENS4_12basic_stringIT0_NS5_IS9_EENS4_9allocatorIS9_EEEET_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!10 = distinct !{!10, !"_ZN16password_manager12HashUsernameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4absl13make_optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSA_: argument 0"}
!13 = distinct !{!13, !"_ZN4absl13make_optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSA_"}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !22}
!24 = distinct !{!24, !20}
