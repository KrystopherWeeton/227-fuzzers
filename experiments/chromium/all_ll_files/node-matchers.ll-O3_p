; ModuleID = '../../v8/src/compiler/node-matchers.cc'
source_filename = "../../v8/src/compiler/node-matchers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8::internal::compiler::BranchMatcher" = type { %"struct.v8::internal::compiler::NodeMatcher", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::NodeMatcher" = type { %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"struct.v8::internal::compiler::DiamondMatcher" = type { %"struct.v8::internal::compiler::NodeMatcher", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }

$_ZN2v88internal8compiler8IrOpcode18IsComparisonOpcodeENS2_5ValueE = comdat any

@_ZN2v88internal8compiler13BranchMatcherC1EPNS1_4NodeE = hidden unnamed_addr alias void (%"struct.v8::internal::compiler::BranchMatcher"*, %"class.v8::internal::compiler::Node"*), void (%"struct.v8::internal::compiler::BranchMatcher"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler13BranchMatcherC2EPNS1_4NodeE
@_ZN2v88internal8compiler14DiamondMatcherC1EPNS1_4NodeE = hidden unnamed_addr alias void (%"struct.v8::internal::compiler::DiamondMatcher"*, %"class.v8::internal::compiler::Node"*), void (%"struct.v8::internal::compiler::DiamondMatcher"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler14DiamondMatcherC2EPNS1_4NodeE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler11NodeMatcher12IsComparisonEv(%"struct.v8::internal::compiler::NodeMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::compiler::NodeMatcher", %"struct.v8::internal::compiler::NodeMatcher"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = zext i16 %7 to i32
  %9 = tail call zeroext i1 @_ZN2v88internal8compiler8IrOpcode18IsComparisonOpcodeENS2_5ValueE(i32 %8)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8compiler8IrOpcode18IsComparisonOpcodeENS2_5ValueE(i32) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %2 [
    i32 744, label %3
    i32 745, label %3
    i32 746, label %3
    i32 747, label %3
    i32 748, label %3
    i32 749, label %3
    i32 112, label %3
    i32 113, label %3
    i32 114, label %3
    i32 115, label %3
    i32 116, label %3
    i32 117, label %3
    i32 118, label %3
    i32 119, label %3
    i32 120, label %3
    i32 121, label %3
    i32 122, label %3
    i32 123, label %3
    i32 124, label %3
    i32 342, label %3
    i32 343, label %3
    i32 344, label %3
    i32 345, label %3
    i32 346, label %3
    i32 347, label %3
    i32 348, label %3
    i32 349, label %3
    i32 350, label %3
    i32 351, label %3
    i32 352, label %3
    i32 353, label %3
    i32 354, label %3
    i32 355, label %3
    i32 356, label %3
    i32 357, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13BranchMatcherC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BranchMatcher"* nocapture, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BranchMatcher", %"struct.v8::internal::compiler::BranchMatcher"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::BranchMatcher", %"struct.v8::internal::compiler::BranchMatcher"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::BranchMatcher", %"struct.v8::internal::compiler::BranchMatcher"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %7 = bitcast %"class.v8::internal::compiler::Node"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 2
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 2
  br i1 %11, label %12, label %46

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %12, %42
  %18 = phi i64 [ %44, %42 ], [ %15, %12 ]
  %19 = inttoptr i64 %18 to %"struct.v8::internal::compiler::Node::Use"*
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %19, i64 1
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %19, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = lshr i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %20, i64 %24
  %26 = and i32 %22, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::internal::compiler::Node::Use"* %25 to %"class.v8::internal::compiler::Node"*
  br label %33

30:                                               ; preds = %17
  %31 = bitcast %"struct.v8::internal::compiler::Node::Use"* %25 to %"class.v8::internal::compiler::Node"**
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  br label %33

33:                                               ; preds = %28, %30
  %34 = phi %"class.v8::internal::compiler::Node"* [ %29, %28 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %34, i64 0, i32 0
  %36 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %36, i64 0, i32 2
  %38 = load i16, i16* %37, align 8
  switch i16 %38, label %42 [
    i16 4, label %40
    i16 5, label %39
  ]

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %33, %39
  %41 = phi %"class.v8::internal::compiler::Node"** [ %5, %39 ], [ %4, %33 ]
  store %"class.v8::internal::compiler::Node"* %34, %"class.v8::internal::compiler::Node"** %41, align 8
  br label %42

42:                                               ; preds = %40, %33
  %43 = inttoptr i64 %18 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %17

46:                                               ; preds = %42, %12, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14DiamondMatcherC2EPNS1_4NodeE(%"struct.v8::internal::compiler::DiamondMatcher"* nocapture, %"class.v8::internal::compiler::Node"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::DiamondMatcher", %"struct.v8::internal::compiler::DiamondMatcher"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::DiamondMatcher", %"struct.v8::internal::compiler::DiamondMatcher"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::DiamondMatcher", %"struct.v8::internal::compiler::DiamondMatcher"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.v8::internal::compiler::DiamondMatcher", %"struct.v8::internal::compiler::DiamondMatcher"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = bitcast %"class.v8::internal::compiler::Node"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = and i32 %9, 251658240
  %11 = icmp eq i32 %10, 251658240
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = lshr i32 %9, 24
  %14 = and i32 %13, 15
  br label %22

15:                                               ; preds = %2
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %17 = add i64 %16, 32
  %18 = inttoptr i64 %17 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %19 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %12, %15
  %23 = phi i32 [ %14, %12 ], [ %21, %15 ]
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %133

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 2
  %29 = load i16, i16* %28, align 8
  %30 = icmp eq i16 %29, 10
  br i1 %30, label %31, label %133

31:                                               ; preds = %25
  %32 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %33 = add i64 %32, 32
  br i1 %11, label %34, label %38

34:                                               ; preds = %31
  %35 = inttoptr i64 %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 16
  br label %38

38:                                               ; preds = %31, %34
  %39 = phi i64 [ %37, %34 ], [ %33, %31 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"**
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 251658240
  %45 = icmp eq i32 %44, 251658240
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = lshr i32 %43, 24
  %48 = and i32 %47, 15
  br label %56

49:                                               ; preds = %38
  %50 = ptrtoint %"class.v8::internal::compiler::Node"* %41 to i64
  %51 = add i64 %50, 32
  %52 = inttoptr i64 %51 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %53 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %52, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  br label %56

56:                                               ; preds = %46, %49
  %57 = phi i32 [ %48, %46 ], [ %55, %49 ]
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %133

59:                                               ; preds = %56
  br i1 %11, label %60, label %64

60:                                               ; preds = %59
  %61 = inttoptr i64 %33 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 16
  br label %64

64:                                               ; preds = %59, %60
  %65 = phi i64 [ %63, %60 ], [ %33, %59 ]
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, i64 1
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 251658240
  %72 = icmp eq i32 %71, 251658240
  br i1 %72, label %76, label %73

73:                                               ; preds = %64
  %74 = lshr i32 %70, 24
  %75 = and i32 %74, 15
  br label %83

76:                                               ; preds = %64
  %77 = ptrtoint %"class.v8::internal::compiler::Node"* %68 to i64
  %78 = add i64 %77, 32
  %79 = inttoptr i64 %78 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %80 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %79, align 8
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  br label %83

83:                                               ; preds = %73, %76
  %84 = phi i32 [ %75, %73 ], [ %82, %76 ]
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %133

86:                                               ; preds = %83
  %87 = ptrtoint %"class.v8::internal::compiler::Node"* %41 to i64
  %88 = add i64 %87, 32
  br i1 %45, label %89, label %93

89:                                               ; preds = %86
  %90 = inttoptr i64 %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 16
  br label %93

93:                                               ; preds = %86, %89
  %94 = phi i64 [ %92, %89 ], [ %88, %86 ]
  %95 = inttoptr i64 %94 to %"class.v8::internal::compiler::Node"**
  %96 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, align 8
  %97 = ptrtoint %"class.v8::internal::compiler::Node"* %68 to i64
  %98 = add i64 %97, 32
  br i1 %72, label %99, label %103

99:                                               ; preds = %93
  %100 = inttoptr i64 %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 16
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi i64 [ %102, %99 ], [ %98, %93 ]
  %105 = inttoptr i64 %104 to %"class.v8::internal::compiler::Node"**
  %106 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %105, align 8
  %107 = icmp eq %"class.v8::internal::compiler::Node"* %96, %106
  br i1 %107, label %108, label %133

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %96, i64 0, i32 0
  %110 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %110, i64 0, i32 2
  %112 = load i16, i16* %111, align 8
  %113 = icmp eq i16 %112, 2
  br i1 %113, label %114, label %133

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 0
  %116 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %116, i64 0, i32 2
  %118 = load i16, i16* %117, align 8
  switch i16 %118, label %133 [
    i16 4, label %119
    i16 5, label %126
  ]

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 0
  %121 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %121, i64 0, i32 2
  %123 = load i16, i16* %122, align 8
  %124 = icmp eq i16 %123, 5
  br i1 %124, label %125, label %133

125:                                              ; preds = %119
  store %"class.v8::internal::compiler::Node"* %96, %"class.v8::internal::compiler::Node"** %4, align 8
  store %"class.v8::internal::compiler::Node"* %41, %"class.v8::internal::compiler::Node"** %5, align 8
  store %"class.v8::internal::compiler::Node"* %68, %"class.v8::internal::compiler::Node"** %6, align 8
  br label %133

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 0
  %128 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %128, i64 0, i32 2
  %130 = load i16, i16* %129, align 8
  %131 = icmp eq i16 %130, 4
  br i1 %131, label %132, label %133

132:                                              ; preds = %126
  store %"class.v8::internal::compiler::Node"* %96, %"class.v8::internal::compiler::Node"** %4, align 8
  store %"class.v8::internal::compiler::Node"* %68, %"class.v8::internal::compiler::Node"** %5, align 8
  store %"class.v8::internal::compiler::Node"* %41, %"class.v8::internal::compiler::Node"** %6, align 8
  br label %133

133:                                              ; preds = %114, %119, %56, %103, %108, %126, %132, %125, %83, %25, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
