; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc/legacy/analog_agc.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc/legacy/analog_agc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::AgcVad" = type { [8 x i32], i16, i16, i16, i16, i32, i16, i16, i32, i16 }
%"struct.webrtc::DigitalAgc" = type { i32, i32, i32, [32 x i32], i16, i16, %"struct.webrtc::AgcVad", %"struct.webrtc::AgcVad" }
%"struct.webrtc::LegacyAgc" = type { i32, i16, i16, i16, i8, %"struct.webrtc::WebRtcAgcConfig", %"struct.webrtc::WebRtcAgcConfig", i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, [8 x i32], i32, i32, i32, i32, i32, i32, [10 x i32], [2 x [5 x i32]], [2 x [10 x i32]], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, %"struct.webrtc::AgcVad", %"struct.webrtc::DigitalAgc", i16 }
%"struct.webrtc::WebRtcAgcConfig" = type { i16, i16, i8 }

@_ZN6webrtc12_GLOBAL__N_116kGainTableAnalogE = internal unnamed_addr constant [32 x i16] [i16 4096, i16 4251, i16 4412, i16 4579, i16 4752, i16 4932, i16 5118, i16 5312, i16 5513, i16 5722, i16 5938, i16 6163, i16 6396, i16 6638, i16 6889, i16 7150, i16 7420, i16 7701, i16 7992, i16 8295, i16 8609, i16 8934, i16 9273, i16 9623, i16 9987, i16 10365, i16 10758, i16 11165, i16 11587, i16 12025, i16 12480, i16 12953], align 16
@_ZN6webrtc12_GLOBAL__N_120kGainTableVirtualMicE = internal unnamed_addr constant [128 x i16] [i16 1052, i16 1081, i16 1110, i16 1141, i16 1172, i16 1204, i16 1237, i16 1271, i16 1305, i16 1341, i16 1378, i16 1416, i16 1454, i16 1494, i16 1535, i16 1577, i16 1620, i16 1664, i16 1710, i16 1757, i16 1805, i16 1854, i16 1905, i16 1957, i16 2010, i16 2065, i16 2122, i16 2180, i16 2239, i16 2301, i16 2364, i16 2428, i16 2495, i16 2563, i16 2633, i16 2705, i16 2779, i16 2855, i16 2933, i16 3013, i16 3096, i16 3180, i16 3267, i16 3357, i16 3449, i16 3543, i16 3640, i16 3739, i16 3842, i16 3947, i16 4055, i16 4166, i16 4280, i16 4397, i16 4517, i16 4640, i16 4767, i16 4898, i16 5032, i16 5169, i16 5311, i16 5456, i16 5605, i16 5758, i16 5916, i16 6078, i16 6244, i16 6415, i16 6590, i16 6770, i16 6956, i16 7146, i16 7341, i16 7542, i16 7748, i16 7960, i16 8178, i16 8402, i16 8631, i16 8867, i16 9110, i16 9359, i16 9615, i16 9878, i16 10148, i16 10426, i16 10711, i16 11004, i16 11305, i16 11614, i16 11932, i16 12258, i16 12593, i16 12938, i16 13292, i16 13655, i16 14029, i16 14412, i16 14807, i16 15212, i16 15628, i16 16055, i16 16494, i16 16945, i16 17409, i16 17885, i16 18374, i16 18877, i16 19393, i16 19923, i16 20468, i16 21028, i16 21603, i16 22194, i16 22801, i16 23425, i16 24065, i16 24724, i16 25400, i16 26095, i16 26808, i16 27541, i16 28295, i16 29069, i16 29864, i16 30681, i16 31520, i16 32382], align 16
@_ZN6webrtc12_GLOBAL__N_127kSuppressionTableVirtualMicE = internal unnamed_addr constant [128 x i16] [i16 1024, i16 1006, i16 988, i16 970, i16 952, i16 935, i16 918, i16 902, i16 886, i16 870, i16 854, i16 839, i16 824, i16 809, i16 794, i16 780, i16 766, i16 752, i16 739, i16 726, i16 713, i16 700, i16 687, i16 675, i16 663, i16 651, i16 639, i16 628, i16 616, i16 605, i16 594, i16 584, i16 573, i16 563, i16 553, i16 543, i16 533, i16 524, i16 514, i16 505, i16 496, i16 487, i16 478, i16 470, i16 461, i16 453, i16 445, i16 437, i16 429, i16 421, i16 414, i16 406, i16 399, i16 392, i16 385, i16 378, i16 371, i16 364, i16 358, i16 351, i16 345, i16 339, i16 333, i16 327, i16 321, i16 315, i16 309, i16 304, i16 298, i16 293, i16 288, i16 283, i16 278, i16 273, i16 268, i16 263, i16 258, i16 254, i16 249, i16 244, i16 240, i16 236, i16 232, i16 227, i16 223, i16 219, i16 215, i16 211, i16 208, i16 204, i16 200, i16 197, i16 193, i16 190, i16 186, i16 183, i16 180, i16 176, i16 173, i16 170, i16 167, i16 164, i16 161, i16 158, i16 155, i16 153, i16 150, i16 147, i16 145, i16 142, i16 139, i16 137, i16 134, i16 132, i16 130, i16 127, i16 125, i16 123, i16 121, i16 118, i16 116, i16 114, i16 112, i16 110, i16 108, i16 106, i16 104, i16 102], align 16
@_ZN6webrtc12_GLOBAL__N_18kOffset1E = internal unnamed_addr constant [8 x i16] [i16 25395, i16 23911, i16 22206, i16 20737, i16 19612, i16 18805, i16 17951, i16 17367], align 16
@_ZN6webrtc12_GLOBAL__N_17kSlope1E = internal unnamed_addr constant [8 x i16] [i16 21793, i16 12517, i16 7189, i16 4129, i16 2372, i16 1362, i16 472, i16 78], align 16
@_ZN6webrtc12_GLOBAL__N_18kOffset2E = internal unnamed_addr constant [8 x i16] [i16 18432, i16 18379, i16 18290, i16 18177, i16 18052, i16 17920, i16 17670, i16 17286], align 16
@_ZN6webrtc12_GLOBAL__N_17kSlope2E = internal unnamed_addr constant [8 x i16] [i16 2063, i16 1731, i16 1452, i16 1218, i16 1021, i16 857, i16 597, i16 337], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16WebRtcAgc_AddMicEPvPKPsmm(i8*, i16** nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %5 = alloca [16 x i16], align 16
  %6 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 0
  %8 = bitcast i8* %0 to i32*
  %9 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  %10 = load i32, i32* %8, align 4
  %11 = icmp eq i32 %10, 8000
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = icmp eq i64 %3, 80
  br i1 %13, label %16, label %194

14:                                               ; preds = %4
  %15 = icmp eq i64 %3, 160
  br i1 %15, label %16, label %194

16:                                               ; preds = %12, %14
  %17 = phi i16 [ 8, %12 ], [ 16, %14 ]
  %18 = getelementptr inbounds i8, i8* %0, i64 316
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i8, i8* %0, i64 324
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %20, %23
  br i1 %24, label %25, label %109

25:                                               ; preds = %16
  %26 = sub nsw i32 %20, %23
  %27 = shl i32 %26, 16
  %28 = ashr exact i32 %27, 16
  %29 = mul nsw i32 %28, 31
  %30 = getelementptr inbounds i8, i8* %0, i64 320
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %32, %23
  %34 = shl i32 %33, 16
  %35 = ashr exact i32 %34, 16
  %36 = sdiv i32 %29, %35
  %37 = getelementptr inbounds i8, i8* %0, i64 308
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 4
  %40 = zext i16 %39 to i32
  %41 = and i32 %36, 65535
  %42 = icmp ugt i32 %41, %40
  br i1 %42, label %45, label %43

43:                                               ; preds = %25
  %44 = icmp ult i32 %41, %40
  br i1 %44, label %45, label %48

45:                                               ; preds = %43, %25
  %46 = phi i16 [ 1, %25 ], [ -1, %43 ]
  %47 = add i16 %39, %46
  store i16 %47, i16* %38, align 4
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i16 [ %39, %43 ], [ %47, %45 ]
  %50 = zext i16 %49 to i64
  %51 = getelementptr inbounds [32 x i16], [32 x i16]* @_ZN6webrtc12_GLOBAL__N_116kGainTableAnalogE, i64 0, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = and i64 %2, 1
  %55 = icmp eq i64 %2, 1
  %56 = sub i64 %2, %54
  %57 = icmp eq i64 %54, 0
  br label %58

58:                                               ; preds = %106, %48
  %59 = phi i64 [ 0, %48 ], [ %107, %106 ]
  switch i64 %2, label %60 [
    i64 0, label %106
    i64 1, label %91
  ]

60:                                               ; preds = %58, %60
  %61 = phi i64 [ %88, %60 ], [ 0, %58 ]
  %62 = phi i64 [ %89, %60 ], [ %56, %58 ]
  %63 = getelementptr inbounds i16*, i16** %1, i64 %61
  %64 = load i16*, i16** %63, align 8
  %65 = getelementptr inbounds i16, i16* %64, i64 %59
  %66 = load i16, i16* %65, align 2
  %67 = sext i16 %66 to i32
  %68 = mul nsw i32 %67, %53
  %69 = lshr i32 %68, 12
  %70 = icmp sgt i32 %68, 134217727
  %71 = icmp slt i32 %68, -134217728
  %72 = trunc i32 %69 to i16
  %73 = select i1 %71, i16 -32768, i16 %72
  %74 = select i1 %70, i16 32767, i16 %73
  store i16 %74, i16* %65, align 2
  %75 = or i64 %61, 1
  %76 = getelementptr inbounds i16*, i16** %1, i64 %75
  %77 = load i16*, i16** %76, align 8
  %78 = getelementptr inbounds i16, i16* %77, i64 %59
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %53
  %82 = lshr i32 %81, 12
  %83 = icmp sgt i32 %81, 134217727
  %84 = icmp slt i32 %81, -134217728
  %85 = trunc i32 %82 to i16
  %86 = select i1 %84, i16 -32768, i16 %85
  %87 = select i1 %83, i16 32767, i16 %86
  store i16 %87, i16* %78, align 2
  %88 = add nuw i64 %61, 2
  %89 = add i64 %62, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %60

91:                                               ; preds = %60, %58
  %92 = phi i64 [ 0, %58 ], [ %88, %60 ]
  br i1 %57, label %106, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds i16*, i16** %1, i64 %92
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds i16, i16* %95, i64 %59
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i32
  %99 = mul nsw i32 %98, %53
  %100 = lshr i32 %99, 12
  %101 = icmp sgt i32 %99, 134217727
  %102 = icmp slt i32 %99, -134217728
  %103 = trunc i32 %100 to i16
  %104 = select i1 %102, i16 -32768, i16 %103
  %105 = select i1 %101, i16 32767, i16 %104
  store i16 %105, i16* %96, align 2
  br label %106

106:                                              ; preds = %93, %91, %58
  %107 = add nuw i64 %59, 1
  %108 = icmp eq i64 %107, %3
  br i1 %108, label %112, label %58

109:                                              ; preds = %16
  %110 = getelementptr inbounds i8, i8* %0, i64 308
  %111 = bitcast i8* %110 to i16*
  store i16 0, i16* %111, align 4
  br label %112

112:                                              ; preds = %106, %109
  %113 = getelementptr inbounds i8, i8* %0, i64 302
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = icmp sgt i16 %115, 0
  %117 = select i1 %116, i64 236, i64 196
  %118 = getelementptr inbounds i8, i8* %0, i64 %117
  %119 = bitcast i8* %118 to i32*
  %120 = zext i16 %17 to i32
  %121 = zext i16 %17 to i64
  %122 = add nsw i32 %120, -1
  %123 = trunc i32 %122 to i16
  %124 = add i16 %123, 1
  %125 = icmp slt i16 %124, 1
  %126 = icmp ugt i32 %122, 32767
  %127 = or i1 %125, %126
  %128 = icmp eq i16 %17, 8
  br label %129

129:                                              ; preds = %170, %112
  %130 = phi i64 [ 0, %112 ], [ %173, %170 ]
  %131 = load i16*, i16** %1, align 8
  %132 = mul nuw nsw i64 %130, %121
  br i1 %127, label %156, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds i16, i16* %131, i64 %132
  %135 = bitcast i16* %134 to <4 x i16>*
  %136 = load <4 x i16>, <4 x i16>* %135, align 2
  %137 = getelementptr inbounds i16, i16* %134, i64 4
  %138 = bitcast i16* %137 to <4 x i16>*
  %139 = load <4 x i16>, <4 x i16>* %138, align 2
  %140 = sext <4 x i16> %136 to <4 x i32>
  %141 = sext <4 x i16> %139 to <4 x i32>
  %142 = mul nsw <4 x i32> %140, %140
  %143 = mul nsw <4 x i32> %141, %141
  br i1 %128, label %144, label %248, !llvm.loop !2

144:                                              ; preds = %248, %133
  %145 = phi <4 x i32> [ %142, %133 ], [ %262, %248 ]
  %146 = phi <4 x i32> [ %143, %133 ], [ %263, %248 ]
  %147 = icmp sgt <4 x i32> %145, %146
  %148 = select <4 x i1> %147, <4 x i32> %145, <4 x i32> %146
  %149 = shufflevector <4 x i32> %148, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %150 = icmp sgt <4 x i32> %148, %149
  %151 = select <4 x i1> %150, <4 x i32> %148, <4 x i32> %149
  %152 = shufflevector <4 x i32> %151, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %153 = icmp sgt <4 x i32> %151, %152
  %154 = select <4 x i1> %153, <4 x i32> %151, <4 x i32> %152
  %155 = extractelement <4 x i32> %154, i32 0
  br label %170

156:                                              ; preds = %129, %156
  %157 = phi i16 [ %167, %156 ], [ 0, %129 ]
  %158 = phi i32 [ %166, %156 ], [ 0, %129 ]
  %159 = sext i16 %157 to i64
  %160 = add i64 %132, %159
  %161 = getelementptr inbounds i16, i16* %131, i64 %160
  %162 = load i16, i16* %161, align 2
  %163 = sext i16 %162 to i32
  %164 = mul nsw i32 %163, %163
  %165 = icmp sgt i32 %164, %158
  %166 = select i1 %165, i32 %164, i32 %158
  %167 = add i16 %157, 1
  %168 = sext i16 %167 to i32
  %169 = icmp slt i32 %168, %120
  br i1 %169, label %156, label %170, !llvm.loop !4

170:                                              ; preds = %156, %144
  %171 = phi i32 [ %155, %144 ], [ %166, %156 ]
  %172 = getelementptr inbounds i32, i32* %119, i64 %130
  store i32 %171, i32* %172, align 4
  %173 = add nuw nsw i64 %130, 1
  %174 = icmp eq i64 %173, 10
  br i1 %174, label %175, label %129

175:                                              ; preds = %170
  %176 = load i16, i16* %114, align 2
  %177 = icmp sgt i16 %176, 0
  %178 = select i1 %177, i64 176, i64 156
  %179 = getelementptr inbounds i8, i8* %0, i64 %178
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds i8, i8* %0, i64 60
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %8, align 4
  %184 = icmp eq i32 %183, 16000
  %185 = load i16*, i16** %1, align 8
  br i1 %184, label %186, label %187

186:                                              ; preds = %175
  call void @WebRtcSpl_DownsampleBy2(i16* %185, i64 32, i16* nonnull %7, i32* %182) #9
  br label %189

187:                                              ; preds = %175
  %188 = bitcast i16* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 2 %188, i64 32, i1 false)
  br label %189

189:                                              ; preds = %187, %186
  %190 = call i32 @WebRtcSpl_DotProductWithScale(i16* nonnull %7, i16* nonnull %7, i64 16, i32 4) #9
  store i32 %190, i32* %180, align 4
  %191 = load i32, i32* %8, align 4
  %192 = icmp eq i32 %191, 16000
  %193 = load i16*, i16** %1, align 8
  br i1 %192, label %199, label %196

194:                                              ; preds = %14, %12, %237
  %195 = phi i32 [ 0, %237 ], [ -1, %12 ], [ -1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret i32 %195

196:                                              ; preds = %189
  %197 = getelementptr inbounds i16, i16* %193, i64 16
  %198 = bitcast i16* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 2 %198, i64 32, i1 false)
  br label %201

199:                                              ; preds = %189
  %200 = getelementptr inbounds i16, i16* %193, i64 32
  call void @WebRtcSpl_DownsampleBy2(i16* %200, i64 32, i16* nonnull %7, i32* %182) #9
  br label %201

201:                                              ; preds = %199, %196
  %202 = call i32 @WebRtcSpl_DotProductWithScale(i16* nonnull %7, i16* nonnull %7, i64 16, i32 4) #9
  %203 = getelementptr inbounds i8, i8* %179, i64 4
  %204 = bitcast i8* %203 to i32*
  store i32 %202, i32* %204, align 4
  %205 = load i32, i32* %8, align 4
  %206 = icmp eq i32 %205, 16000
  %207 = load i16*, i16** %1, align 8
  br i1 %206, label %211, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds i16, i16* %207, i64 32
  %210 = bitcast i16* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 2 %210, i64 32, i1 false)
  br label %213

211:                                              ; preds = %201
  %212 = getelementptr inbounds i16, i16* %207, i64 64
  call void @WebRtcSpl_DownsampleBy2(i16* %212, i64 32, i16* nonnull %7, i32* %182) #9
  br label %213

213:                                              ; preds = %211, %208
  %214 = call i32 @WebRtcSpl_DotProductWithScale(i16* nonnull %7, i16* nonnull %7, i64 16, i32 4) #9
  %215 = getelementptr inbounds i8, i8* %179, i64 8
  %216 = bitcast i8* %215 to i32*
  store i32 %214, i32* %216, align 4
  %217 = load i32, i32* %8, align 4
  %218 = icmp eq i32 %217, 16000
  %219 = load i16*, i16** %1, align 8
  br i1 %218, label %223, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds i16, i16* %219, i64 48
  %222 = bitcast i16* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 2 %222, i64 32, i1 false)
  br label %225

223:                                              ; preds = %213
  %224 = getelementptr inbounds i16, i16* %219, i64 96
  call void @WebRtcSpl_DownsampleBy2(i16* %224, i64 32, i16* nonnull %7, i32* %182) #9
  br label %225

225:                                              ; preds = %223, %220
  %226 = call i32 @WebRtcSpl_DotProductWithScale(i16* nonnull %7, i16* nonnull %7, i64 16, i32 4) #9
  %227 = getelementptr inbounds i8, i8* %179, i64 12
  %228 = bitcast i8* %227 to i32*
  store i32 %226, i32* %228, align 4
  %229 = load i32, i32* %8, align 4
  %230 = icmp eq i32 %229, 16000
  %231 = load i16*, i16** %1, align 8
  br i1 %230, label %235, label %232

232:                                              ; preds = %225
  %233 = getelementptr inbounds i16, i16* %231, i64 64
  %234 = bitcast i16* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 2 %234, i64 32, i1 false)
  br label %237

235:                                              ; preds = %225
  %236 = getelementptr inbounds i16, i16* %231, i64 128
  call void @WebRtcSpl_DownsampleBy2(i16* %236, i64 32, i16* nonnull %7, i32* %182) #9
  br label %237

237:                                              ; preds = %235, %232
  %238 = call i32 @WebRtcSpl_DotProductWithScale(i16* nonnull %7, i16* nonnull %7, i64 16, i32 4) #9
  %239 = getelementptr inbounds i8, i8* %179, i64 16
  %240 = bitcast i8* %239 to i32*
  store i32 %238, i32* %240, align 4
  %241 = load i16, i16* %114, align 2
  %242 = icmp eq i16 %241, 0
  %243 = select i1 %242, i16 1, i16 2
  store i16 %243, i16* %114, align 2
  %244 = getelementptr inbounds i8, i8* %0, i64 352
  %245 = bitcast i8* %244 to %"struct.webrtc::AgcVad"*
  %246 = load i16*, i16** %1, align 8
  %247 = call signext i16 @_ZN6webrtc20WebRtcAgc_ProcessVadEPNS_6AgcVadEPKsm(%"struct.webrtc::AgcVad"* %245, i16* %246, i64 %3) #9
  br label %194

248:                                              ; preds = %133
  %249 = add nuw i64 %132, 8
  %250 = getelementptr inbounds i16, i16* %131, i64 %249
  %251 = bitcast i16* %250 to <4 x i16>*
  %252 = load <4 x i16>, <4 x i16>* %251, align 2
  %253 = getelementptr inbounds i16, i16* %250, i64 4
  %254 = bitcast i16* %253 to <4 x i16>*
  %255 = load <4 x i16>, <4 x i16>* %254, align 2
  %256 = sext <4 x i16> %252 to <4 x i32>
  %257 = sext <4 x i16> %255 to <4 x i32>
  %258 = mul nsw <4 x i32> %256, %256
  %259 = mul nsw <4 x i32> %257, %257
  %260 = icmp ugt <4 x i32> %258, %142
  %261 = icmp ugt <4 x i32> %259, %143
  %262 = select <4 x i1> %260, <4 x i32> %258, <4 x i32> %142
  %263 = select <4 x i1> %261, <4 x i32> %259, <4 x i32> %143
  br label %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @WebRtcSpl_DownsampleBy2(i16*, i64, i16*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @WebRtcSpl_DotProductWithScale(i16*, i16*, i64, i32) local_unnamed_addr #2

declare signext i16 @_ZN6webrtc20WebRtcAgc_ProcessVadEPNS_6AgcVadEPKsm(%"struct.webrtc::AgcVad"*, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc19WebRtcAgc_AddFarendEPvPKsm(i8*, i16*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to i32*
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %16 [
    i32 8000, label %8
    i32 16000, label %10
    i32 32000, label %10
    i32 48000, label %10
  ]

8:                                                ; preds = %5
  %9 = icmp eq i64 %2, 80
  br i1 %9, label %12, label %16

10:                                               ; preds = %5, %5, %5
  %11 = icmp eq i64 %2, 160
  br i1 %11, label %12, label %16

12:                                               ; preds = %10, %8
  %13 = getelementptr inbounds i8, i8* %0, i64 408
  %14 = bitcast i8* %13 to %"struct.webrtc::DigitalAgc"*
  %15 = tail call i32 @_ZN6webrtc28WebRtcAgc_AddFarendToDigitalEPNS_10DigitalAgcEPKsm(%"struct.webrtc::DigitalAgc"* %14, i16* %1, i64 %2) #9
  br label %16

16:                                               ; preds = %5, %10, %8, %3, %12
  %17 = phi i32 [ %15, %12 ], [ -1, %3 ], [ -1, %8 ], [ -1, %10 ], [ -1, %5 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc27WebRtcAgc_GetAddFarendErrorEPvm(i8* readonly, i64) local_unnamed_addr #3 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i32*
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %12 [
    i32 8000, label %7
    i32 16000, label %9
    i32 32000, label %9
    i32 48000, label %9
  ]

7:                                                ; preds = %4
  %8 = icmp eq i64 %1, 80
  br i1 %8, label %11, label %12

9:                                                ; preds = %4, %4, %4
  %10 = icmp eq i64 %1, 160
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %9
  br label %12

12:                                               ; preds = %4, %9, %7, %2, %11
  %13 = phi i32 [ 0, %11 ], [ -1, %2 ], [ -1, %7 ], [ -1, %9 ], [ -1, %4 ]
  ret i32 %13
}

declare i32 @_ZN6webrtc28WebRtcAgc_AddFarendToDigitalEPNS_10DigitalAgcEPKsm(%"struct.webrtc::DigitalAgc"*, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc20WebRtcAgc_VirtualMicEPvPKPsmmiPi(i8*, i16** nocapture readonly, i64, i64, i32, i32* nocapture) local_unnamed_addr #0 {
  %7 = bitcast i8* %0 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 8000
  %10 = select i1 %9, i32 5500, i32 11000
  %11 = load i16*, i16** %1, align 8
  %12 = load i16, i16* %11, align 2
  %13 = sext i16 %12 to i32
  %14 = icmp ugt i64 %3, 1
  br i1 %14, label %15, label %43

15:                                               ; preds = %6
  %16 = mul nsw i32 %13, %13
  br label %17

17:                                               ; preds = %15, %17
  %18 = phi i32 [ %37, %17 ], [ 0, %15 ]
  %19 = phi i32 [ %27, %17 ], [ %16, %15 ]
  %20 = phi i64 [ %35, %17 ], [ 1, %15 ]
  %21 = icmp ult i32 %19, %10
  %22 = getelementptr inbounds i16, i16* %11, i64 %20
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = mul nsw i32 %24, %24
  %26 = select i1 %21, i32 %25, i32 0
  %27 = add i32 %19, %26
  %28 = add i64 %20, -1
  %29 = getelementptr inbounds i16, i16* %11, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = xor i16 %30, %23
  %32 = lshr i16 %31, 15
  %33 = zext i16 %32 to i32
  %34 = add nsw i32 %18, %33
  %35 = add nuw i64 %20, 1
  %36 = shl i32 %34, 16
  %37 = ashr exact i32 %36, 16
  %38 = icmp eq i64 %35, %3
  br i1 %38, label %39, label %17

39:                                               ; preds = %17
  %40 = icmp ult i32 %27, 500
  %41 = icmp slt i32 %36, 393216
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %6, %39
  %44 = getelementptr inbounds i8, i8* %0, i64 664
  %45 = bitcast i8* %44 to i16*
  store i16 1, i16* %45, align 4
  br label %62

46:                                               ; preds = %39
  %47 = icmp slt i32 %36, 1048576
  br i1 %47, label %48, label %51

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* %0, i64 664
  %50 = bitcast i8* %49 to i16*
  store i16 0, i16* %50, align 4
  br label %62

51:                                               ; preds = %46
  %52 = icmp ugt i32 %27, %10
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds i8, i8* %0, i64 664
  %55 = bitcast i8* %54 to i16*
  store i16 1, i16* %55, align 4
  br label %62

56:                                               ; preds = %51
  %57 = icmp sgt i32 %36, 1245184
  %58 = getelementptr inbounds i8, i8* %0, i64 664
  %59 = bitcast i8* %58 to i16*
  br i1 %57, label %60, label %61

60:                                               ; preds = %56
  store i16 1, i16* %59, align 4
  br label %62

61:                                               ; preds = %56
  store i16 0, i16* %59, align 4
  br label %62

62:                                               ; preds = %48, %60, %61, %53, %43
  %63 = getelementptr inbounds i8, i8* %0, i64 348
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 4
  %66 = sext i16 %65 to i32
  %67 = shl i32 %4, %66
  %68 = getelementptr inbounds i8, i8* %0, i64 316
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds i8, i8* %0, i64 324
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %70, %73
  %75 = select i1 %74, i32 %73, i32 %70
  %76 = getelementptr inbounds i8, i8* %0, i64 304
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %67, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %62
  store i32 %67, i32* %77, align 4
  store i32 127, i32* %69, align 4
  store i32 127, i32* %5, align 4
  %81 = getelementptr inbounds i8, i8* %0, i64 312
  %82 = bitcast i8* %81 to i32*
  store i32 127, i32* %82, align 4
  br label %87

83:                                               ; preds = %62
  %84 = icmp sgt i32 %75, 127
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = add nsw i32 %75, -128
  br label %90

87:                                               ; preds = %80, %83
  %88 = phi i32 [ 127, %80 ], [ %75, %83 ]
  %89 = sub nsw i32 127, %88
  br label %90

90:                                               ; preds = %87, %85
  %91 = phi i32 [ %89, %87 ], [ %86, %85 ]
  %92 = phi [128 x i16]* [ @_ZN6webrtc12_GLOBAL__N_127kSuppressionTableVirtualMicE, %87 ], [ @_ZN6webrtc12_GLOBAL__N_120kGainTableVirtualMicE, %85 ]
  %93 = phi i32 [ %88, %87 ], [ %75, %85 ]
  %94 = icmp eq i64 %3, 0
  br i1 %94, label %197, label %95

95:                                               ; preds = %90
  %96 = sext i32 %91 to i64
  %97 = getelementptr inbounds [128 x i16], [128 x i16]* %92, i64 0, i64 %96
  %98 = load i16, i16* %97, align 2
  %99 = icmp ugt i64 %2, 1
  %100 = add i64 %2, -1
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %2, 2
  %103 = sub i64 %100, %101
  %104 = icmp eq i64 %101, 0
  br label %105

105:                                              ; preds = %194, %95
  %106 = phi i64 [ 0, %95 ], [ %195, %194 ]
  %107 = phi i16 [ %98, %95 ], [ %143, %194 ]
  %108 = phi i32 [ %93, %95 ], [ %142, %194 ]
  %109 = load i16*, i16** %1, align 8
  %110 = getelementptr inbounds i16, i16* %109, i64 %106
  %111 = load i16, i16* %110, align 2
  %112 = sext i16 %111 to i32
  %113 = zext i16 %107 to i32
  %114 = mul nsw i32 %112, %113
  %115 = icmp sgt i32 %114, 33554431
  br i1 %115, label %116, label %123

116:                                              ; preds = %105
  %117 = add nsw i32 %108, -1
  %118 = icmp sgt i32 %117, 126
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = add nsw i32 %108, -128
  br label %133

121:                                              ; preds = %116
  %122 = sub i32 128, %108
  br label %133

123:                                              ; preds = %105
  %124 = ashr i32 %114, 10
  %125 = icmp slt i32 %114, -33554432
  br i1 %125, label %126, label %141

126:                                              ; preds = %123
  %127 = add nsw i32 %108, -1
  %128 = icmp sgt i32 %127, 126
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = add nsw i32 %108, -128
  br label %133

131:                                              ; preds = %126
  %132 = sub i32 128, %108
  br label %133

133:                                              ; preds = %131, %129, %119, %121
  %134 = phi i32 [ %122, %121 ], [ %120, %119 ], [ %130, %129 ], [ %132, %131 ]
  %135 = phi [128 x i16]* [ @_ZN6webrtc12_GLOBAL__N_127kSuppressionTableVirtualMicE, %121 ], [ @_ZN6webrtc12_GLOBAL__N_120kGainTableVirtualMicE, %119 ], [ @_ZN6webrtc12_GLOBAL__N_120kGainTableVirtualMicE, %129 ], [ @_ZN6webrtc12_GLOBAL__N_127kSuppressionTableVirtualMicE, %131 ]
  %136 = phi i32 [ %117, %121 ], [ %117, %119 ], [ %127, %129 ], [ %127, %131 ]
  %137 = phi i32 [ 32767, %121 ], [ 32767, %119 ], [ -32768, %129 ], [ -32768, %131 ]
  %138 = sext i32 %134 to i64
  %139 = getelementptr inbounds [128 x i16], [128 x i16]* %135, i64 0, i64 %138
  %140 = load i16, i16* %139, align 2
  br label %141

141:                                              ; preds = %133, %123
  %142 = phi i32 [ %108, %123 ], [ %136, %133 ]
  %143 = phi i16 [ %107, %123 ], [ %140, %133 ]
  %144 = phi i32 [ %124, %123 ], [ %137, %133 ]
  %145 = trunc i32 %144 to i16
  store i16 %145, i16* %110, align 2
  br i1 %99, label %146, label %194

146:                                              ; preds = %141
  %147 = zext i16 %143 to i32
  br i1 %102, label %179, label %148

148:                                              ; preds = %146, %148
  %149 = phi i64 [ %176, %148 ], [ 1, %146 ]
  %150 = phi i64 [ %177, %148 ], [ %103, %146 ]
  %151 = getelementptr inbounds i16*, i16** %1, i64 %149
  %152 = load i16*, i16** %151, align 8
  %153 = getelementptr inbounds i16, i16* %152, i64 %106
  %154 = load i16, i16* %153, align 2
  %155 = sext i16 %154 to i32
  %156 = mul nsw i32 %155, %147
  %157 = ashr i32 %156, 10
  %158 = icmp slt i32 %157, 32767
  %159 = select i1 %158, i32 %157, i32 32767
  %160 = icmp sgt i32 %159, -32768
  %161 = select i1 %160, i32 %159, i32 -32768
  %162 = trunc i32 %161 to i16
  store i16 %162, i16* %153, align 2
  %163 = add nuw i64 %149, 1
  %164 = getelementptr inbounds i16*, i16** %1, i64 %163
  %165 = load i16*, i16** %164, align 8
  %166 = getelementptr inbounds i16, i16* %165, i64 %106
  %167 = load i16, i16* %166, align 2
  %168 = sext i16 %167 to i32
  %169 = mul nsw i32 %168, %147
  %170 = ashr i32 %169, 10
  %171 = icmp slt i32 %170, 32767
  %172 = select i1 %171, i32 %170, i32 32767
  %173 = icmp sgt i32 %172, -32768
  %174 = select i1 %173, i32 %172, i32 -32768
  %175 = trunc i32 %174 to i16
  store i16 %175, i16* %166, align 2
  %176 = add nuw i64 %149, 2
  %177 = add i64 %150, -2
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %148

179:                                              ; preds = %148, %146
  %180 = phi i64 [ 1, %146 ], [ %176, %148 ]
  br i1 %104, label %194, label %181

181:                                              ; preds = %179
  %182 = getelementptr inbounds i16*, i16** %1, i64 %180
  %183 = load i16*, i16** %182, align 8
  %184 = getelementptr inbounds i16, i16* %183, i64 %106
  %185 = load i16, i16* %184, align 2
  %186 = sext i16 %185 to i32
  %187 = mul nsw i32 %186, %147
  %188 = ashr i32 %187, 10
  %189 = icmp slt i32 %188, 32767
  %190 = select i1 %189, i32 %188, i32 32767
  %191 = icmp sgt i32 %190, -32768
  %192 = select i1 %191, i32 %190, i32 -32768
  %193 = trunc i32 %192 to i16
  store i16 %193, i16* %184, align 2
  br label %194

194:                                              ; preds = %181, %179, %141
  %195 = add nuw i64 %106, 1
  %196 = icmp eq i64 %195, %3
  br i1 %196, label %197, label %105

197:                                              ; preds = %194, %90
  %198 = phi i32 [ %93, %90 ], [ %142, %194 ]
  %199 = getelementptr inbounds i8, i8* %0, i64 312
  %200 = bitcast i8* %199 to i32*
  store i32 %198, i32* %200, align 4
  %201 = load i16, i16* %64, align 4
  %202 = sext i16 %201 to i32
  %203 = ashr i32 %198, %202
  store i32 %203, i32* %5, align 4
  %204 = tail call i32 @_ZN6webrtc16WebRtcAgc_AddMicEPvPKPsmm(i8* %0, i16** %1, i64 %2, i64 %3)
  %205 = icmp ne i32 %204, 0
  %206 = sext i1 %205 to i32
  ret i32 %206
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29WebRtcAgc_UpdateAgcThresholdsEPNS_9LegacyAgcE(%"struct.webrtc::LegacyAgc"* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 4
  %4 = mul i16 %3, 5
  %5 = add i16 %4, 5
  %6 = sext i16 %5 to i32
  %7 = tail call signext i16 @WebRtcSpl_DivW32W16ResW16(i32 %6, i16 signext 11) #9
  %8 = add i16 %7, 4
  %9 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 17
  %10 = icmp sgt i16 %8, 4
  %11 = select i1 %10, i16 %8, i16 4
  store i16 %11, i16* %9, align 2
  %12 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 3
  %13 = load i16, i16* %12, align 4
  %14 = icmp eq i16 %13, 3
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = load i16, i16* %2, align 4
  store i16 %16, i16* %9, align 2
  br label %17

17:                                               ; preds = %15, %1
  %18 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 16
  store i16 20, i16* %18, align 4
  %19 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 9
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 13420950, i32 16895980, i32 10660640, i32 21270780>, <4 x i32>* %20, align 4
  %21 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 13
  store i32 8468050, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 14
  store i32 42440780, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 15
  store i32 4244080, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 19
  store i32 16895980, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 20
  store i32 10660640, i32* %25, align 4
  ret void
}

declare signext i16 @WebRtcSpl_DivW32W16ResW16(i32, i16 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc24WebRtcAgc_SaturationCtrlEPNS_9LegacyAgcEPhPi(%"struct.webrtc::LegacyAgc"* nocapture, i8* nocapture, i32* nocapture readonly) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 29
  %5 = load i32, i32* %2, align 4
  %6 = icmp sgt i32 %5, 918552575
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = lshr i32 %5, 20
  %9 = load i16, i16* %4, align 2
  %10 = trunc i32 %8 to i16
  %11 = add i16 %9, %10
  store i16 %11, i16* %4, align 2
  br label %12

12:                                               ; preds = %3, %7
  %13 = getelementptr inbounds i32, i32* %2, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 918552575
  br i1 %15, label %23, label %28

16:                                               ; preds = %102
  store i8 1, i8* %1, align 1
  store i16 0, i16* %4, align 2
  br label %17

17:                                               ; preds = %16, %102
  %18 = phi i16 [ 0, %16 ], [ %103, %102 ]
  %19 = sext i16 %18 to i32
  %20 = mul nsw i32 %19, 32440
  %21 = lshr i32 %20, 15
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* %4, align 2
  ret void

23:                                               ; preds = %12
  %24 = lshr i32 %14, 20
  %25 = load i16, i16* %4, align 2
  %26 = trunc i32 %24 to i16
  %27 = add i16 %25, %26
  store i16 %27, i16* %4, align 2
  br label %28

28:                                               ; preds = %23, %12
  %29 = getelementptr inbounds i32, i32* %2, i64 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 918552575
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = lshr i32 %30, 20
  %34 = load i16, i16* %4, align 2
  %35 = trunc i32 %33 to i16
  %36 = add i16 %34, %35
  store i16 %36, i16* %4, align 2
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds i32, i32* %2, i64 3
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 918552575
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = lshr i32 %39, 20
  %43 = load i16, i16* %4, align 2
  %44 = trunc i32 %42 to i16
  %45 = add i16 %43, %44
  store i16 %45, i16* %4, align 2
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds i32, i32* %2, i64 4
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 918552575
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = lshr i32 %48, 20
  %52 = load i16, i16* %4, align 2
  %53 = trunc i32 %51 to i16
  %54 = add i16 %52, %53
  store i16 %54, i16* %4, align 2
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds i32, i32* %2, i64 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 918552575
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = lshr i32 %57, 20
  %61 = load i16, i16* %4, align 2
  %62 = trunc i32 %60 to i16
  %63 = add i16 %61, %62
  store i16 %63, i16* %4, align 2
  br label %64

64:                                               ; preds = %59, %55
  %65 = getelementptr inbounds i32, i32* %2, i64 6
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, 918552575
  br i1 %67, label %68, label %73

68:                                               ; preds = %64
  %69 = lshr i32 %66, 20
  %70 = load i16, i16* %4, align 2
  %71 = trunc i32 %69 to i16
  %72 = add i16 %70, %71
  store i16 %72, i16* %4, align 2
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds i32, i32* %2, i64 7
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 918552575
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = lshr i32 %75, 20
  %79 = load i16, i16* %4, align 2
  %80 = trunc i32 %78 to i16
  %81 = add i16 %79, %80
  store i16 %81, i16* %4, align 2
  br label %82

82:                                               ; preds = %77, %73
  %83 = getelementptr inbounds i32, i32* %2, i64 8
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 918552575
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = lshr i32 %84, 20
  %88 = load i16, i16* %4, align 2
  %89 = trunc i32 %87 to i16
  %90 = add i16 %88, %89
  store i16 %90, i16* %4, align 2
  br label %91

91:                                               ; preds = %86, %82
  %92 = getelementptr inbounds i32, i32* %2, i64 9
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 918552575
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = load i16, i16* %4, align 2
  br label %102

97:                                               ; preds = %91
  %98 = lshr i32 %93, 20
  %99 = load i16, i16* %4, align 2
  %100 = trunc i32 %98 to i16
  %101 = add i16 %99, %100
  store i16 %101, i16* %4, align 2
  br label %102

102:                                              ; preds = %95, %97
  %103 = phi i16 [ %96, %95 ], [ %101, %97 ]
  %104 = icmp sgt i16 %103, 25000
  br i1 %104, label %16, label %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc18WebRtcAgc_ZeroCtrlEPNS_9LegacyAgcEPiS2_(%"struct.webrtc::LegacyAgc"* nocapture, i32* nocapture, i32* nocapture readonly) local_unnamed_addr #4 {
  %4 = load i32, i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds i32, i32* %2, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = add nsw i64 %5, %8
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %9, %12
  %14 = getelementptr inbounds i32, i32* %2, i64 3
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %13, %16
  %18 = getelementptr inbounds i32, i32* %2, i64 4
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %17, %20
  %22 = getelementptr inbounds i32, i32* %2, i64 5
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %21, %24
  %26 = getelementptr inbounds i32, i32* %2, i64 6
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %25, %28
  %30 = getelementptr inbounds i32, i32* %2, i64 7
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %29, %32
  %34 = getelementptr inbounds i32, i32* %2, i64 8
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = add nsw i64 %33, %36
  %38 = getelementptr inbounds i32, i32* %2, i64 9
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %37, %40
  %42 = icmp slt i64 %41, 500
  %43 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 36
  br i1 %42, label %44, label %47

44:                                               ; preds = %3
  %45 = load i16, i16* %43, align 4
  %46 = add i16 %45, 10
  br label %47

47:                                               ; preds = %3, %44
  %48 = phi i16 [ %46, %44 ], [ 0, %3 ]
  store i16 %48, i16* %43, align 4
  %49 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 40
  %50 = load i16, i16* %49, align 4
  %51 = icmp sgt i16 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = add nsw i16 %50, -10
  store i16 %53, i16* %49, align 4
  br label %54

54:                                               ; preds = %52, %47
  %55 = icmp sgt i16 %48, 500
  br i1 %55, label %56, label %77

56:                                               ; preds = %54
  store i16 0, i16* %43, align 4
  %57 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 47
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 49
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %58, 1
  %62 = add i32 %61, %60
  %63 = sdiv i32 %62, 2
  %64 = load i32, i32* %1, align 4
  %65 = icmp slt i32 %64, %63
  br i1 %65, label %66, label %74

66:                                               ; preds = %56
  %67 = mul nsw i32 %64, 1126
  %68 = ashr i32 %67, 10
  store i32 %68, i32* %1, align 4
  %69 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 51
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %68, %70
  %72 = select i1 %71, i32 %68, i32 %70
  store i32 %72, i32* %1, align 4
  %73 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 45
  store i32 %72, i32* %73, align 4
  br label %74

74:                                               ; preds = %66, %56
  %75 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 39
  store i16 0, i16* %75, align 2
  %76 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 24
  store i32 0, i32* %76, align 4
  store i16 8000, i16* %49, align 4
  br label %77

77:                                               ; preds = %74, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc29WebRtcAgc_SpeakerInactiveCtrlEPNS_9LegacyAgcE(%"struct.webrtc::LegacyAgc"* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 54, i32 6
  %3 = load i16, i16* %2, align 4
  %4 = sext i16 %3 to i32
  %5 = icmp slt i16 %3, 2500
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 30
  store i16 1500, i16* %7, align 4
  br label %25

8:                                                ; preds = %1
  %9 = icmp slt i16 %3, 4500
  br i1 %9, label %10, label %16

10:                                               ; preds = %8
  %11 = sub nsw i32 4500, %4
  %12 = sdiv i32 %11, 2
  %13 = shl nsw i32 %12, 16
  %14 = add i32 %13, 26214400
  %15 = ashr exact i32 %14, 16
  br label %16

16:                                               ; preds = %10, %8
  %17 = phi i32 [ %15, %10 ], [ 400, %8 ]
  %18 = getelementptr inbounds %"struct.webrtc::LegacyAgc", %"struct.webrtc::LegacyAgc"* %0, i64 0, i32 30
  %19 = load i16, i16* %18, align 4
  %20 = sext i16 %19 to i32
  %21 = mul nsw i32 %20, 31
  %22 = add nsw i32 %21, %17
  %23 = lshr i32 %22, 5
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* %18, align 4
  br label %25

25:                                               ; preds = %16, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc18WebRtcAgc_ExpCurveEsPs(i16 signext, i16* nocapture) local_unnamed_addr #5 {
  %3 = icmp sgt i16 %0, 5243
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = icmp sgt i16 %0, 7864
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = icmp sgt i16 %0, 12124
  %8 = select i1 %7, i16 7, i16 6
  br label %20

9:                                                ; preds = %4
  %10 = icmp sgt i16 %0, 6554
  %11 = select i1 %10, i16 5, i16 4
  br label %20

12:                                               ; preds = %2
  %13 = icmp sgt i16 %0, 2621
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = icmp sgt i16 %0, 3932
  %16 = select i1 %15, i16 3, i16 2
  br label %20

17:                                               ; preds = %12
  %18 = icmp sgt i16 %0, 1311
  %19 = zext i1 %18 to i16
  br label %20

20:                                               ; preds = %17, %14, %9, %6
  %21 = phi i16 [ %8, %6 ], [ %11, %9 ], [ %16, %14 ], [ %19, %17 ]
  store i16 %21, i16* %1, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc23WebRtcAgc_ProcessAnalogEPviPissPh(i8*, i32, i32* nocapture, i16 signext, i16 signext, i8* nocapture) local_unnamed_addr #0 {
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  store i8 0, i8* %7, align 1
  %8 = bitcast i8* %0 to %"struct.webrtc::LegacyAgc"*
  %9 = getelementptr inbounds i8, i8* %0, i64 348
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 4
  %12 = sext i16 %11 to i32
  %13 = shl i32 %1, %12
  %14 = getelementptr inbounds i8, i8* %0, i64 324
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %13, %16
  br i1 %17, label %553, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds i8, i8* %0, i64 332
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %13, %21
  br i1 %22, label %553, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds i8, i8* %0, i64 290
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %23
  store i16 1, i16* %25, align 2
  %29 = getelementptr inbounds i8, i8* %0, i64 320
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %31, %21
  %33 = mul nsw i32 %32, 51
  %34 = ashr i32 %33, 9
  %35 = add nsw i32 %34, %21
  %36 = icmp slt i32 %13, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %0, i64 8
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 4
  %41 = icmp eq i16 %40, 1
  %42 = select i1 %41, i32 %35, i32 %13
  br label %43

43:                                               ; preds = %37, %28
  %44 = phi i32 [ %13, %28 ], [ %42, %37 ]
  %45 = getelementptr inbounds i8, i8* %0, i64 316
  %46 = bitcast i8* %45 to i32*
  store i32 %44, i32* %46, align 4
  br label %47

47:                                               ; preds = %43, %23
  %48 = phi i32 [ %44, %43 ], [ %13, %23 ]
  %49 = icmp eq i32 %48, %16
  %50 = getelementptr inbounds i8, i8* %0, i64 316
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %16
  %54 = select i1 %53, i32 %52, i32 %16
  %55 = select i1 %49, i32 %54, i32 %48
  %56 = icmp eq i32 %55, %52
  br i1 %56, label %78, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %0, i64 336
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %55, %60
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %0, i64 320
  %64 = bitcast i8* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = sub nsw i32 %65, %21
  %67 = mul nsw i32 %66, 51
  %68 = ashr i32 %67, 9
  %69 = add nsw i32 %68, %21
  store i32 %69, i32* %51, align 4
  br label %78

70:                                               ; preds = %57
  %71 = icmp eq i32 %55, %52
  br i1 %71, label %78, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds i8, i8* %0, i64 344
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %1
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  store i32 %55, i32* %51, align 4
  br label %78

78:                                               ; preds = %62, %47, %72, %70, %77
  %79 = phi i32 [ %52, %70 ], [ %55, %77 ], [ %52, %72 ], [ %69, %62 ], [ %52, %47 ]
  %80 = getelementptr inbounds i8, i8* %0, i64 320
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %79, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %78
  store i32 %79, i32* %81, align 4
  br label %85

85:                                               ; preds = %84, %78
  %86 = getelementptr inbounds i8, i8* %0, i64 344
  %87 = bitcast i8* %86 to i32*
  store i32 %1, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %0, i64 196
  %89 = bitcast i8* %88 to i32*
  call void @_ZN6webrtc24WebRtcAgc_SaturationCtrlEPNS_9LegacyAgcEPhPi(%"struct.webrtc::LegacyAgc"* %8, i8* nonnull %7, i32* %89)
  %90 = load i8, i8* %7, align 1
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %139

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %0, i64 108
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = sdiv i32 %95, 8
  %97 = mul nsw i32 %96, 7
  store i32 %97, i32* %94, align 4
  %98 = load i32, i32* %51, align 4
  %99 = getelementptr inbounds i8, i8* %0, i64 340
  %100 = bitcast i8* %99 to i32*
  store i32 %98, i32* %100, align 4
  %101 = load i32, i32* %20, align 4
  %102 = sub nsw i32 %79, %101
  %103 = mul i32 %102, 29591
  %104 = lshr i32 %103, 15
  %105 = add i32 %104, %101
  %106 = add nsw i32 %79, -2
  %107 = icmp sgt i32 %105, %106
  %108 = select i1 %107, i32 %106, i32 %105
  store i32 %108, i32* %51, align 4
  %109 = getelementptr inbounds i8, i8* %0, i64 336
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %108, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %92
  store i8 1, i8* %5, align 1
  br label %114

114:                                              ; preds = %113, %92
  %115 = getelementptr inbounds i8, i8* %0, i64 286
  %116 = bitcast i8* %115 to i16*
  store i16 -100, i16* %116, align 2
  %117 = getelementptr inbounds i8, i8* %0, i64 298
  %118 = bitcast i8* %117 to i16*
  store i16 0, i16* %118, align 2
  %119 = getelementptr inbounds i8, i8* %0, i64 112
  %120 = bitcast i8* %119 to i32*
  store i32 0, i32* %120, align 4
  %121 = getelementptr inbounds i8, i8* %0, i64 296
  %122 = bitcast i8* %121 to i16*
  store i16 520, i16* %122, align 4
  %123 = getelementptr inbounds i8, i8* %0, i64 294
  %124 = bitcast i8* %123 to i16*
  store i16 340, i16* %124, align 2
  %125 = getelementptr inbounds i8, i8* %0, i64 288
  %126 = bitcast i8* %125 to i16*
  store i16 0, i16* %126, align 4
  %127 = getelementptr inbounds i8, i8* %0, i64 300
  %128 = bitcast i8* %127 to i16*
  store i16 0, i16* %128, align 4
  %129 = getelementptr inbounds i8, i8* %0, i64 32
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds i8, i8* %0, i64 92
  %133 = bitcast i8* %132 to i32*
  store i32 %131, i32* %133, align 4
  %134 = getelementptr inbounds i8, i8* %0, i64 36
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds i8, i8* %0, i64 96
  %138 = bitcast i8* %137 to i32*
  store i32 %136, i32* %138, align 4
  br label %139

139:                                              ; preds = %114, %85
  %140 = phi i32 [ %108, %114 ], [ %79, %85 ]
  %141 = load i32, i32* %89, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %0, i64 200
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = add nsw i64 %146, %142
  %148 = getelementptr inbounds i8, i8* %0, i64 204
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = add nsw i64 %147, %151
  %153 = getelementptr inbounds i8, i8* %0, i64 208
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = add nsw i64 %152, %156
  %158 = getelementptr inbounds i8, i8* %0, i64 212
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = add nsw i64 %157, %161
  %163 = getelementptr inbounds i8, i8* %0, i64 216
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = add nsw i64 %162, %166
  %168 = getelementptr inbounds i8, i8* %0, i64 220
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = sext i32 %170 to i64
  %172 = add nsw i64 %167, %171
  %173 = getelementptr inbounds i8, i8* %0, i64 224
  %174 = bitcast i8* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = add nsw i64 %172, %176
  %178 = getelementptr inbounds i8, i8* %0, i64 228
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = add nsw i64 %177, %181
  %183 = getelementptr inbounds i8, i8* %0, i64 232
  %184 = bitcast i8* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = add nsw i64 %182, %186
  %188 = icmp slt i64 %187, 500
  %189 = getelementptr inbounds i8, i8* %0, i64 292
  %190 = bitcast i8* %189 to i16*
  br i1 %188, label %191, label %194

191:                                              ; preds = %139
  %192 = load i16, i16* %190, align 4
  %193 = add i16 %192, 10
  br label %194

194:                                              ; preds = %191, %139
  %195 = phi i16 [ %193, %191 ], [ 0, %139 ]
  store i16 %195, i16* %190, align 4
  %196 = getelementptr inbounds i8, i8* %0, i64 300
  %197 = bitcast i8* %196 to i16*
  %198 = load i16, i16* %197, align 4
  %199 = icmp sgt i16 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %194
  %201 = add nsw i16 %198, -10
  store i16 %201, i16* %197, align 4
  br label %202

202:                                              ; preds = %200, %194
  %203 = icmp sgt i16 %195, 500
  br i1 %203, label %204, label %225

204:                                              ; preds = %202
  store i16 0, i16* %190, align 4
  %205 = load i32, i32* %15, align 4
  %206 = load i32, i32* %20, align 4
  %207 = add i32 %205, 1
  %208 = add i32 %207, %206
  %209 = sdiv i32 %208, 2
  %210 = icmp slt i32 %140, %209
  br i1 %210, label %211, label %219

211:                                              ; preds = %204
  %212 = mul nsw i32 %140, 1126
  %213 = ashr i32 %212, 10
  %214 = getelementptr inbounds i8, i8* %0, i64 340
  %215 = bitcast i8* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = icmp slt i32 %213, %216
  %218 = select i1 %217, i32 %213, i32 %216
  store i32 %218, i32* %51, align 4
  br label %219

219:                                              ; preds = %211, %204
  %220 = phi i32 [ %218, %211 ], [ %140, %204 ]
  %221 = getelementptr inbounds i8, i8* %0, i64 298
  %222 = bitcast i8* %221 to i16*
  store i16 0, i16* %222, align 2
  %223 = getelementptr inbounds i8, i8* %0, i64 112
  %224 = bitcast i8* %223 to i32*
  store i32 0, i32* %224, align 4
  store i16 8000, i16* %197, align 4
  br label %225

225:                                              ; preds = %202, %219
  %226 = phi i32 [ %220, %219 ], [ %140, %202 ]
  %227 = getelementptr inbounds i8, i8* %0, i64 396
  %228 = bitcast i8* %227 to i16*
  %229 = load i16, i16* %228, align 4
  %230 = sext i16 %229 to i32
  %231 = icmp slt i16 %229, 2500
  br i1 %231, label %232, label %235

232:                                              ; preds = %225
  %233 = getelementptr inbounds i8, i8* %0, i64 280
  %234 = bitcast i8* %233 to i16*
  store i16 1500, i16* %234, align 4
  br label %253

235:                                              ; preds = %225
  %236 = icmp slt i16 %229, 4500
  br i1 %236, label %237, label %243

237:                                              ; preds = %235
  %238 = sub nsw i32 4500, %230
  %239 = sdiv i32 %238, 2
  %240 = shl nsw i32 %239, 16
  %241 = add i32 %240, 26214400
  %242 = ashr exact i32 %241, 16
  br label %243

243:                                              ; preds = %237, %235
  %244 = phi i32 [ %242, %237 ], [ 400, %235 ]
  %245 = getelementptr inbounds i8, i8* %0, i64 280
  %246 = bitcast i8* %245 to i16*
  %247 = load i16, i16* %246, align 4
  %248 = sext i16 %247 to i32
  %249 = mul nsw i32 %248, 31
  %250 = add nsw i32 %249, %244
  %251 = lshr i32 %250, 5
  %252 = trunc i32 %251 to i16
  store i16 %252, i16* %246, align 4
  br label %253

253:                                              ; preds = %232, %243
  %254 = phi i16* [ %234, %232 ], [ %246, %243 ]
  %255 = getelementptr inbounds i8, i8* %0, i64 156
  %256 = bitcast i8* %255 to [5 x i32]*
  %257 = getelementptr inbounds i8, i8* %0, i64 116
  %258 = bitcast i8* %257 to [10 x i32]*
  %259 = getelementptr inbounds i8, i8* %0, i64 276
  %260 = bitcast i8* %259 to i16*
  %261 = getelementptr inbounds i8, i8* %0, i64 100
  %262 = bitcast i8* %261 to i32*
  %263 = getelementptr inbounds i8, i8* %0, i64 104
  %264 = bitcast i8* %263 to i32*
  %265 = getelementptr inbounds i8, i8* %0, i64 298
  %266 = bitcast i8* %265 to i16*
  %267 = getelementptr inbounds i8, i8* %0, i64 112
  %268 = bitcast i8* %267 to i32*
  %269 = getelementptr inbounds i8, i8* %0, i64 108
  %270 = bitcast i8* %269 to i32*
  %271 = getelementptr inbounds i8, i8* %0, i64 48
  %272 = bitcast i8* %271 to i32*
  %273 = getelementptr inbounds i8, i8* %0, i64 92
  %274 = bitcast i8* %273 to i32*
  %275 = getelementptr inbounds i8, i8* %0, i64 52
  %276 = bitcast i8* %275 to i32*
  %277 = getelementptr inbounds i8, i8* %0, i64 96
  %278 = bitcast i8* %277 to i32*
  %279 = getelementptr inbounds i8, i8* %0, i64 288
  %280 = bitcast i8* %279 to i16*
  %281 = getelementptr inbounds i8, i8* %0, i64 296
  %282 = bitcast i8* %281 to i16*
  %283 = getelementptr inbounds i8, i8* %0, i64 294
  %284 = bitcast i8* %283 to i16*
  %285 = getelementptr inbounds i8, i8* %0, i64 40
  %286 = bitcast i8* %285 to i32*
  %287 = getelementptr inbounds i8, i8* %0, i64 44
  %288 = bitcast i8* %287 to i32*
  %289 = getelementptr inbounds i8, i8* %0, i64 284
  %290 = bitcast i8* %289 to i16*
  %291 = getelementptr inbounds i8, i8* %0, i64 286
  %292 = bitcast i8* %291 to i16*
  %293 = getelementptr inbounds i8, i8* %0, i64 328
  %294 = bitcast i8* %293 to i32*
  %295 = add nsw i32 %79, 1
  %296 = add nsw i32 %79, 2
  %297 = getelementptr inbounds i8, i8* %0, i64 340
  %298 = bitcast i8* %297 to i32*
  %299 = add nsw i32 %79, -1
  %300 = load i16, i16* %260, align 4
  br label %301

301:                                              ; preds = %518, %253
  %302 = phi i16 [ %300, %253 ], [ %317, %518 ]
  %303 = phi i64 [ 0, %253 ], [ %520, %518 ]
  %304 = phi i32 [ %226, %253 ], [ %519, %518 ]
  %305 = getelementptr inbounds [5 x i32], [5 x i32]* %256, i64 0, i64 %303
  %306 = load i32, i32* %305, align 4
  %307 = sext i16 %302 to i64
  %308 = getelementptr inbounds [10 x i32], [10 x i32]* %258, i64 0, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = sub nsw i32 %306, %309
  %311 = ashr i32 %310, 3
  %312 = load i32, i32* %262, align 4
  %313 = add nsw i32 %311, %312
  store i32 %313, i32* %262, align 4
  store i32 %306, i32* %308, align 4
  %314 = load i16, i16* %260, align 4
  %315 = add i16 %314, 1
  %316 = icmp eq i16 %315, 10
  %317 = select i1 %316, i16 0, i16 %315
  store i16 %317, i16* %260, align 4
  %318 = load i32, i32* %264, align 4
  %319 = sub nsw i32 %306, %318
  %320 = ashr i32 %319, 6
  %321 = add nsw i32 %320, %318
  store i32 %321, i32* %264, align 4
  %322 = load i16, i16* %254, align 4
  %323 = icmp slt i16 %322, %3
  br i1 %323, label %324, label %518

324:                                              ; preds = %301
  %325 = load i16, i16* %266, align 2
  %326 = icmp slt i16 %325, 250
  br i1 %326, label %327, label %332

327:                                              ; preds = %324
  %328 = add nsw i16 %325, 2
  store i16 %328, i16* %266, align 2
  %329 = load i32, i32* %268, align 4
  %330 = icmp sgt i32 %321, %329
  br i1 %330, label %331, label %338

331:                                              ; preds = %327
  store i32 %321, i32* %268, align 4
  br label %338

332:                                              ; preds = %324
  %333 = icmp eq i16 %325, 250
  br i1 %333, label %334, label %338

334:                                              ; preds = %332
  store i16 252, i16* %266, align 2
  %335 = load i32, i32* %268, align 4
  %336 = ashr i32 %335, 3
  %337 = mul nsw i32 %336, 10
  store i32 %337, i32* %270, align 4
  br label %338

338:                                              ; preds = %332, %334, %327, %331
  %339 = load i32, i32* %262, align 4
  %340 = load i32, i32* %270, align 4
  %341 = sub nsw i32 %339, %340
  %342 = ashr i32 %341, 10
  %343 = add nsw i32 %342, %340
  store i32 %343, i32* %270, align 4
  %344 = load i32, i32* %272, align 4
  %345 = icmp sgt i32 %343, %344
  br i1 %345, label %346, label %369

346:                                              ; preds = %338
  %347 = load i16, i16* %292, align 2
  %348 = add i16 %347, 2
  store i16 %348, i16* %292, align 2
  store i16 0, i16* %290, align 4
  store i16 0, i16* %280, align 4
  %349 = load i16, i16* %284, align 2
  %350 = icmp sgt i16 %348, %349
  br i1 %350, label %351, label %518

351:                                              ; preds = %346
  store i16 0, i16* %292, align 2
  %352 = ashr i32 %343, 6
  %353 = mul nsw i32 %352, 53
  store i32 %353, i32* %270, align 4
  %354 = load i32, i32* %81, align 4
  %355 = mul nsw i32 %354, 15
  %356 = load i32, i32* %51, align 4
  %357 = add nsw i32 %355, %356
  %358 = sdiv i32 %357, 16
  %359 = load i32, i32* %15, align 4
  %360 = icmp sgt i32 %358, %359
  %361 = select i1 %360, i32 %358, i32 %359
  store i32 %361, i32* %81, align 4
  store i32 %356, i32* %298, align 4
  %362 = load i32, i32* %20, align 4
  %363 = sub nsw i32 %304, %362
  %364 = mul i32 %363, 31130
  %365 = lshr i32 %364, 15
  %366 = add i32 %365, %362
  %367 = icmp slt i32 %366, %79
  %368 = select i1 %367, i32 %366, i32 %299
  store i32 %368, i32* %51, align 4
  store i16 0, i16* %266, align 2
  store i32 0, i32* %268, align 4
  br label %518

369:                                              ; preds = %338
  %370 = load i32, i32* %274, align 4
  %371 = icmp sgt i32 %343, %370
  br i1 %371, label %372, label %395

372:                                              ; preds = %369
  %373 = load i16, i16* %292, align 2
  %374 = add i16 %373, 2
  store i16 %374, i16* %292, align 2
  store i16 0, i16* %290, align 4
  store i16 0, i16* %280, align 4
  %375 = load i16, i16* %282, align 4
  %376 = icmp sgt i16 %374, %375
  br i1 %376, label %377, label %518

377:                                              ; preds = %372
  store i16 0, i16* %292, align 2
  %378 = sdiv i32 %343, 64
  %379 = mul nsw i32 %378, 53
  store i32 %379, i32* %270, align 4
  %380 = load i32, i32* %81, align 4
  %381 = mul nsw i32 %380, 15
  %382 = load i32, i32* %51, align 4
  %383 = add nsw i32 %381, %382
  %384 = sdiv i32 %383, 16
  %385 = load i32, i32* %15, align 4
  %386 = icmp sgt i32 %384, %385
  %387 = select i1 %386, i32 %384, i32 %385
  store i32 %387, i32* %81, align 4
  store i32 %382, i32* %298, align 4
  %388 = load i32, i32* %20, align 4
  %389 = sub nsw i32 %304, %388
  %390 = mul i32 %389, 31621
  %391 = lshr i32 %390, 15
  %392 = add i32 %391, %388
  %393 = icmp slt i32 %392, %79
  %394 = select i1 %393, i32 %392, i32 %299
  store i32 %394, i32* %51, align 4
  br label %518

395:                                              ; preds = %369
  %396 = load i32, i32* %276, align 4
  %397 = icmp slt i32 %343, %396
  br i1 %397, label %398, label %452

398:                                              ; preds = %395
  store i16 0, i16* %292, align 2
  store i16 0, i16* %280, align 4
  %399 = load i16, i16* %290, align 4
  %400 = add i16 %399, 2
  store i16 %400, i16* %290, align 4
  %401 = load i16, i16* %284, align 2
  %402 = icmp sgt i16 %400, %401
  br i1 %402, label %403, label %518

403:                                              ; preds = %398
  store i16 0, i16* %290, align 4
  %404 = load i32, i32* %20, align 4
  %405 = load i32, i32* %294, align 4
  %406 = icmp eq i32 %405, %404
  %407 = sub nsw i32 %304, %404
  br i1 %406, label %430, label %408

408:                                              ; preds = %403
  %409 = shl i32 %407, 14
  %410 = sub nsw i32 %405, %404
  %411 = sdiv i32 %409, %410
  %412 = trunc i32 %411 to i16
  %413 = icmp sgt i16 %412, 5243
  br i1 %413, label %414, label %422

414:                                              ; preds = %408
  %415 = icmp sgt i16 %412, 7864
  br i1 %415, label %416, label %419

416:                                              ; preds = %414
  %417 = icmp sgt i16 %412, 12124
  %418 = select i1 %417, i64 7, i64 6
  br label %430

419:                                              ; preds = %414
  %420 = icmp sgt i16 %412, 6554
  %421 = select i1 %420, i64 5, i64 4
  br label %430

422:                                              ; preds = %408
  %423 = icmp sgt i16 %412, 2621
  br i1 %423, label %424, label %427

424:                                              ; preds = %422
  %425 = icmp sgt i16 %412, 3932
  %426 = select i1 %425, i64 3, i64 2
  br label %430

427:                                              ; preds = %422
  %428 = icmp sgt i16 %412, 1311
  %429 = zext i1 %428 to i64
  br label %430

430:                                              ; preds = %403, %427, %424, %419, %416
  %431 = phi i32 [ %411, %427 ], [ %411, %424 ], [ %411, %419 ], [ %411, %416 ], [ 16384, %403 ]
  %432 = phi i64 [ %429, %427 ], [ %426, %424 ], [ %421, %419 ], [ %418, %416 ], [ 7, %403 ]
  %433 = getelementptr inbounds [8 x i16], [8 x i16]* @_ZN6webrtc12_GLOBAL__N_18kOffset1E, i64 0, i64 %432
  %434 = load i16, i16* %433, align 2
  %435 = getelementptr inbounds [8 x i16], [8 x i16]* @_ZN6webrtc12_GLOBAL__N_17kSlope1E, i64 0, i64 %432
  %436 = load i16, i16* %435, align 2
  %437 = sext i16 %436 to i32
  %438 = shl i32 %431, 16
  %439 = ashr exact i32 %438, 16
  %440 = mul nsw i32 %439, %437
  %441 = lshr i32 %440, 13
  %442 = trunc i32 %441 to i16
  %443 = sub i16 %434, %442
  %444 = sdiv i32 %343, 64
  %445 = mul nsw i32 %444, 67
  store i32 %445, i32* %270, align 4
  %446 = sext i16 %443 to i32
  %447 = mul i32 %407, %446
  %448 = lshr i32 %447, 14
  %449 = add i32 %448, %404
  %450 = icmp slt i32 %449, %296
  %451 = select i1 %450, i32 %296, i32 %449
  store i32 %451, i32* %51, align 4
  br label %518

452:                                              ; preds = %395
  %453 = load i32, i32* %278, align 4
  %454 = icmp slt i32 %343, %453
  br i1 %454, label %455, label %509

455:                                              ; preds = %452
  store i16 0, i16* %292, align 2
  store i16 0, i16* %280, align 4
  %456 = load i16, i16* %290, align 4
  %457 = add i16 %456, 2
  store i16 %457, i16* %290, align 4
  %458 = load i16, i16* %282, align 4
  %459 = icmp sgt i16 %457, %458
  br i1 %459, label %460, label %518

460:                                              ; preds = %455
  store i16 0, i16* %290, align 4
  %461 = load i32, i32* %20, align 4
  %462 = load i32, i32* %294, align 4
  %463 = icmp eq i32 %462, %461
  %464 = sub nsw i32 %304, %461
  br i1 %463, label %487, label %465

465:                                              ; preds = %460
  %466 = shl i32 %464, 14
  %467 = sub nsw i32 %462, %461
  %468 = sdiv i32 %466, %467
  %469 = trunc i32 %468 to i16
  %470 = icmp sgt i16 %469, 5243
  br i1 %470, label %471, label %479

471:                                              ; preds = %465
  %472 = icmp sgt i16 %469, 7864
  br i1 %472, label %473, label %476

473:                                              ; preds = %471
  %474 = icmp sgt i16 %469, 12124
  %475 = select i1 %474, i64 7, i64 6
  br label %487

476:                                              ; preds = %471
  %477 = icmp sgt i16 %469, 6554
  %478 = select i1 %477, i64 5, i64 4
  br label %487

479:                                              ; preds = %465
  %480 = icmp sgt i16 %469, 2621
  br i1 %480, label %481, label %484

481:                                              ; preds = %479
  %482 = icmp sgt i16 %469, 3932
  %483 = select i1 %482, i64 3, i64 2
  br label %487

484:                                              ; preds = %479
  %485 = icmp sgt i16 %469, 1311
  %486 = zext i1 %485 to i64
  br label %487

487:                                              ; preds = %460, %484, %481, %476, %473
  %488 = phi i32 [ %468, %484 ], [ %468, %481 ], [ %468, %476 ], [ %468, %473 ], [ 16384, %460 ]
  %489 = phi i64 [ %486, %484 ], [ %483, %481 ], [ %478, %476 ], [ %475, %473 ], [ 7, %460 ]
  %490 = getelementptr inbounds [8 x i16], [8 x i16]* @_ZN6webrtc12_GLOBAL__N_18kOffset2E, i64 0, i64 %489
  %491 = load i16, i16* %490, align 2
  %492 = getelementptr inbounds [8 x i16], [8 x i16]* @_ZN6webrtc12_GLOBAL__N_17kSlope2E, i64 0, i64 %489
  %493 = load i16, i16* %492, align 2
  %494 = sext i16 %493 to i32
  %495 = shl i32 %488, 16
  %496 = ashr exact i32 %495, 16
  %497 = mul nsw i32 %496, %494
  %498 = lshr i32 %497, 13
  %499 = trunc i32 %498 to i16
  %500 = sub i16 %491, %499
  %501 = sdiv i32 %343, 64
  %502 = mul nsw i32 %501, 67
  store i32 %502, i32* %270, align 4
  %503 = sext i16 %500 to i32
  %504 = mul i32 %464, %503
  %505 = lshr i32 %504, 14
  %506 = add i32 %505, %461
  %507 = icmp sgt i32 %506, %79
  %508 = select i1 %507, i32 %506, i32 %295
  store i32 %508, i32* %51, align 4
  br label %518

509:                                              ; preds = %452
  %510 = load i16, i16* %280, align 4
  %511 = icmp sgt i16 %510, 4000
  br i1 %511, label %512, label %515

512:                                              ; preds = %509
  store i16 1000, i16* %282, align 4
  store i16 500, i16* %284, align 2
  %513 = load i32, i32* %286, align 4
  store i32 %513, i32* %274, align 4
  %514 = load i32, i32* %288, align 4
  store i32 %514, i32* %278, align 4
  br label %517

515:                                              ; preds = %509
  %516 = add nsw i16 %510, 2
  store i16 %516, i16* %280, align 4
  br label %517

517:                                              ; preds = %515, %512
  store i16 0, i16* %290, align 4
  store i16 0, i16* %292, align 2
  store i32 %304, i32* %51, align 4
  br label %518

518:                                              ; preds = %301, %377, %372, %517, %487, %455, %398, %430, %346, %351
  %519 = phi i32 [ %368, %351 ], [ %304, %346 ], [ %394, %377 ], [ %304, %372 ], [ %451, %430 ], [ %304, %398 ], [ %508, %487 ], [ %304, %455 ], [ %304, %517 ], [ %304, %301 ]
  %520 = add nuw nsw i64 %303, 1
  %521 = icmp eq i64 %520, 5
  br i1 %521, label %522, label %301

522:                                              ; preds = %518
  %523 = icmp eq i16 %4, 1
  br i1 %523, label %530, label %524

524:                                              ; preds = %522
  %525 = load i16, i16* %197, align 4
  %526 = add i16 %525, -1
  %527 = icmp ult i16 %526, 7999
  br i1 %527, label %530, label %528

528:                                              ; preds = %524
  %529 = load i32, i32* %51, align 4
  br label %534

530:                                              ; preds = %524, %522
  %531 = load i32, i32* %51, align 4
  %532 = icmp sgt i32 %531, %79
  br i1 %532, label %533, label %534

533:                                              ; preds = %530
  store i32 %79, i32* %51, align 4
  br label %534

534:                                              ; preds = %528, %530, %533
  %535 = phi i32 [ %529, %528 ], [ %531, %530 ], [ %79, %533 ]
  %536 = load i32, i32* %81, align 4
  %537 = icmp sgt i32 %535, %536
  br i1 %537, label %543, label %538

538:                                              ; preds = %534
  %539 = getelementptr inbounds i8, i8* %0, i64 336
  %540 = bitcast i8* %539 to i32*
  %541 = load i32, i32* %540, align 4
  %542 = icmp slt i32 %535, %541
  br i1 %542, label %543, label %545

543:                                              ; preds = %538, %534
  %544 = phi i32 [ %536, %534 ], [ %541, %538 ]
  store i32 %544, i32* %51, align 4
  br label %545

545:                                              ; preds = %543, %538
  %546 = phi i32 [ %535, %538 ], [ %544, %543 ]
  %547 = load i32, i32* %15, align 4
  %548 = icmp slt i32 %546, %547
  %549 = select i1 %548, i32 %546, i32 %547
  %550 = load i16, i16* %10, align 4
  %551 = sext i16 %550 to i32
  %552 = ashr i32 %549, %551
  store i32 %552, i32* %2, align 4
  br label %553

553:                                              ; preds = %18, %6, %545
  %554 = phi i32 [ 0, %545 ], [ -1, %6 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  ret i32 %554
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17WebRtcAgc_AnalyzeEPvPKPKsmmiPisPhS5_(i8*, i16**, i64, i64, i32, i32* nocapture, i16 signext, i8* nocapture, i32*) local_unnamed_addr #0 {
  %10 = icmp eq i8* %0, null
  br i1 %10, label %57, label %11

11:                                               ; preds = %9
  %12 = bitcast i8* %0 to i32*
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %57 [
    i32 8000, label %14
    i32 16000, label %16
    i32 32000, label %16
    i32 48000, label %16
  ]

14:                                               ; preds = %11
  %15 = icmp eq i64 %3, 80
  br i1 %15, label %18, label %57

16:                                               ; preds = %11, %11, %11
  %17 = icmp eq i64 %3, 160
  br i1 %17, label %18, label %57

18:                                               ; preds = %14, %16
  store i8 0, i8* %7, align 1
  store i32 %4, i32* %5, align 4
  %19 = getelementptr inbounds i8, i8* %0, i64 408
  %20 = bitcast i8* %19 to %"struct.webrtc::DigitalAgc"*
  %21 = load i32, i32* %12, align 4
  %22 = getelementptr inbounds i8, i8* %0, i64 664
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 4
  %25 = tail call i32 @_ZN6webrtc29WebRtcAgc_ComputeDigitalGainsEPNS_10DigitalAgcEPKPKsmjsPi(%"struct.webrtc::DigitalAgc"* %20, i16** %1, i64 %2, i32 %21, i16 signext %24, i32* %8) #9
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %57, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %0, i64 8
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = icmp slt i16 %30, 3
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = load i16, i16* %23, align 4
  %34 = icmp ne i16 %33, 0
  %35 = icmp eq i16 %30, 2
  %36 = and i1 %35, %34
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8, i8* %0, i64 388
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 4
  %41 = tail call i32 @_ZN6webrtc23WebRtcAgc_ProcessAnalogEPviPissPh(i8* nonnull %0, i32 %4, i32* %5, i16 signext %40, i16 signext %6, i8* %7)
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %57, label %43

43:                                               ; preds = %32, %37, %27
  %44 = getelementptr inbounds i8, i8* %0, i64 302
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp sgt i16 %46, 1
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, i8* %0, i64 196
  %50 = getelementptr inbounds i8, i8* %0, i64 236
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 40, i1 false)
  %51 = getelementptr inbounds i8, i8* %0, i64 156
  %52 = getelementptr inbounds i8, i8* %0, i64 176
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 20, i1 false)
  br label %55

53:                                               ; preds = %43
  %54 = icmp eq i16 %46, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %48, %53
  %56 = add nsw i16 %46, -1
  store i16 %56, i16* %45, align 2
  br label %57

57:                                               ; preds = %18, %37, %55, %53, %11, %16, %14, %9
  %58 = phi i32 [ -1, %9 ], [ -1, %14 ], [ -1, %16 ], [ -1, %11 ], [ -1, %18 ], [ -1, %37 ], [ 0, %55 ], [ 0, %53 ]
  ret i32 %58
}

declare i32 @_ZN6webrtc29WebRtcAgc_ComputeDigitalGainsEPNS_10DigitalAgcEPKPKsmjsPi(%"struct.webrtc::DigitalAgc"*, i16**, i64, i32, i16 signext, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17WebRtcAgc_ProcessEPKvPKiPKPKsmPKPs(i8* nocapture readonly, i32*, i16**, i64, i16**) local_unnamed_addr #0 {
  %6 = bitcast i8* %0 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZN6webrtc27WebRtcAgc_ApplyDigitalGainsEPKimjPKPKsPKPs(i32* %1, i64 %3, i32 %7, i16** %2, i16** %4) #9
  ret i32 %8
}

declare i32 @_ZN6webrtc27WebRtcAgc_ApplyDigitalGainsEPKimjPKPKsPKPs(i32*, i64, i32, i16**, i16**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8*, i48) local_unnamed_addr #0 {
  %3 = trunc i48 %1 to i16
  %4 = lshr i48 %1, 16
  %5 = trunc i48 %4 to i16
  %6 = lshr i48 %1, 32
  %7 = trunc i48 %6 to i8
  %8 = icmp eq i8* %0, null
  br i1 %8, label %82, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 4
  %13 = icmp eq i16 %12, 42
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %0, i64 26
  %16 = bitcast i8* %15 to i16*
  store i16 18002, i16* %16, align 2
  br label %82

17:                                               ; preds = %9
  %18 = and i48 %1, 1090921693184
  %19 = icmp eq i48 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %0, i64 26
  %22 = bitcast i8* %21 to i16*
  store i16 18004, i16* %22, align 2
  br label %82

23:                                               ; preds = %17
  %24 = getelementptr inbounds i8, i8* %0, i64 10
  store i8 %7, i8* %24, align 2
  %25 = getelementptr inbounds i8, i8* %0, i64 4
  %26 = bitcast i8* %25 to i16*
  store i16 %5, i16* %26, align 4
  %27 = icmp ugt i16 %3, 31
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %0, i64 26
  %30 = bitcast i8* %29 to i16*
  store i16 18004, i16* %30, align 2
  br label %82

31:                                               ; preds = %23
  %32 = getelementptr inbounds i8, i8* %0, i64 6
  %33 = bitcast i8* %32 to i16*
  store i16 %3, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %0, i64 8
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 4
  %37 = icmp eq i16 %36, 3
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = add i16 %5, %3
  store i16 %39, i16* %26, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i16 [ %39, %38 ], [ %5, %31 ]
  %42 = mul i16 %41, 5
  %43 = add i16 %42, 5
  %44 = sext i16 %43 to i32
  %45 = tail call signext i16 @WebRtcSpl_DivW32W16ResW16(i32 %44, i16 signext 11) #9
  %46 = add i16 %45, 4
  %47 = getelementptr inbounds i8, i8* %0, i64 58
  %48 = bitcast i8* %47 to i16*
  %49 = icmp sgt i16 %46, 4
  %50 = select i1 %49, i16 %46, i16 4
  store i16 %50, i16* %48, align 2
  %51 = load i16, i16* %35, align 4
  %52 = icmp eq i16 %51, 3
  %53 = load i16, i16* %26, align 4
  %54 = select i1 %52, i16 %53, i16 %50
  store i16 %54, i16* %48, align 2
  %55 = select i1 %52, i16 %53, i16 %50
  %56 = getelementptr inbounds i8, i8* %0, i64 56
  %57 = bitcast i8* %56 to i16*
  store i16 20, i16* %57, align 4
  %58 = getelementptr inbounds i8, i8* %0, i64 28
  %59 = bitcast i8* %58 to <4 x i32>*
  store <4 x i32> <i32 13420950, i32 16895980, i32 10660640, i32 21270780>, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i8, i8* %0, i64 44
  %61 = bitcast i8* %60 to i32*
  store i32 8468050, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %0, i64 48
  %63 = bitcast i8* %62 to i32*
  store i32 42440780, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %0, i64 52
  %65 = bitcast i8* %64 to i32*
  store i32 4244080, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %0, i64 92
  %67 = bitcast i8* %66 to i32*
  store i32 16895980, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %0, i64 96
  %69 = bitcast i8* %68 to i32*
  store i32 10660640, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %0, i64 420
  %71 = bitcast i8* %70 to i32*
  %72 = load i16, i16* %33, align 2
  %73 = load i8, i8* %24, align 2
  %74 = tail call i32 @_ZN6webrtc28WebRtcAgc_CalculateGainTableEPisshs(i32* %71, i16 signext %53, i16 signext %72, i8 zeroext %73, i16 signext %55) #9
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %82, label %76

76:                                               ; preds = %40
  %77 = getelementptr inbounds i8, i8* %0, i64 18
  %78 = getelementptr inbounds i8, i8* %0, i64 20
  %79 = bitcast i8* %78 to i16*
  store i16 %5, i16* %79, align 2
  %80 = getelementptr inbounds i8, i8* %0, i64 22
  store i8 %7, i8* %80, align 2
  %81 = bitcast i8* %77 to i16*
  store i16 %3, i16* %81, align 2
  br label %82

82:                                               ; preds = %40, %2, %76, %28, %20, %14
  %83 = phi i32 [ -1, %14 ], [ -1, %20 ], [ -1, %28 ], [ 0, %76 ], [ -1, %2 ], [ -1, %40 ]
  ret i32 %83
}

declare i32 @_ZN6webrtc28WebRtcAgc_CalculateGainTableEPisshs(i32*, i16 signext, i16 signext, i8 zeroext, i16 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6webrtc20WebRtcAgc_get_configEPvPNS_15WebRtcAgcConfigE(i8*, %"struct.webrtc::WebRtcAgcConfig"*) local_unnamed_addr #4 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = icmp eq %"struct.webrtc::WebRtcAgcConfig"* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %0, i64 26
  %8 = bitcast i8* %7 to i16*
  store i16 18003, i16* %8, align 2
  br label %29

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 4
  %13 = icmp eq i16 %12, 42
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %0, i64 26
  %16 = bitcast i8* %15 to i16*
  store i16 18002, i16* %16, align 2
  br label %29

17:                                               ; preds = %9
  %18 = getelementptr inbounds i8, i8* %0, i64 18
  %19 = getelementptr inbounds i8, i8* %0, i64 22
  %20 = load i8, i8* %19, align 2
  %21 = getelementptr inbounds %"struct.webrtc::WebRtcAgcConfig", %"struct.webrtc::WebRtcAgcConfig"* %1, i64 0, i32 2
  store i8 %20, i8* %21, align 2
  %22 = bitcast i8* %18 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = getelementptr inbounds %"struct.webrtc::WebRtcAgcConfig", %"struct.webrtc::WebRtcAgcConfig"* %1, i64 0, i32 0
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %0, i64 20
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds %"struct.webrtc::WebRtcAgcConfig", %"struct.webrtc::WebRtcAgcConfig"* %1, i64 0, i32 1
  store i16 %27, i16* %28, align 2
  br label %29

29:                                               ; preds = %2, %17, %14, %6
  %30 = phi i32 [ -1, %6 ], [ -1, %14 ], [ 0, %17 ], [ -1, %2 ]
  ret i32 %30
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @_ZN6webrtc16WebRtcAgc_CreateEv() local_unnamed_addr #6 {
  %1 = tail call noalias i8* @malloc(i64 668) #9
  %2 = getelementptr inbounds i8, i8* %1, i64 24
  %3 = bitcast i8* %2 to i16*
  store i16 0, i16* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 26
  %5 = bitcast i8* %4 to i16*
  store i16 0, i16* %5, align 2
  ret i8* %1
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8* nocapture) local_unnamed_addr #0 {
  tail call void @free(i8* %0) #9
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc14WebRtcAgc_InitEPviisj(i8*, i32, i32, i16 signext, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds i8, i8* %0, i64 408
  %7 = bitcast i8* %6 to %"struct.webrtc::DigitalAgc"*
  %8 = tail call i32 @_ZN6webrtc21WebRtcAgc_InitDigitalEPNS_10DigitalAgcEs(%"struct.webrtc::DigitalAgc"* %7, i16 signext %3) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %114

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %0, i64 278
  %12 = bitcast i8* %11 to i16*
  store i16 0, i16* %12, align 2
  %13 = icmp ugt i16 %3, 3
  br i1 %13, label %118, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %0, i64 8
  %16 = bitcast i8* %15 to i16*
  store i16 %3, i16* %16, align 4
  %17 = bitcast i8* %0 to i32*
  store i32 %4, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %0, i64 352
  %19 = bitcast i8* %18 to %"struct.webrtc::AgcVad"*
  tail call void @_ZN6webrtc17WebRtcAgc_InitVadEPNS_6AgcVadE(%"struct.webrtc::AgcVad"* %19) #9
  %20 = getelementptr inbounds i8, i8* %0, i64 348
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %16, align 4
  %23 = icmp eq i16 %22, 2
  store i16 0, i16* %21, align 4
  %24 = select i1 %23, i32 255, i32 %2
  %25 = select i1 %23, i32 0, i32 %1
  %26 = sub nsw i32 %24, %25
  %27 = sdiv i32 %26, 4
  %28 = getelementptr inbounds i8, i8* %0, i64 332
  %29 = bitcast i8* %28 to i32*
  store i32 %25, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %0, i64 324
  %31 = bitcast i8* %30 to i32*
  store i32 %24, i32* %31, align 4
  %32 = add nsw i32 %27, %24
  %33 = getelementptr inbounds i8, i8* %0, i64 320
  %34 = bitcast i8* %33 to i32*
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %0, i64 328
  %36 = bitcast i8* %35 to i32*
  store i32 %32, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %0, i64 340
  %38 = bitcast i8* %37 to i32*
  store i32 %24, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %0, i64 344
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %0, i64 316
  %42 = bitcast i8* %41 to i32*
  %43 = select i1 %23, i32 127, i32 %2
  store i32 %43, i32* %42, align 4
  %44 = getelementptr inbounds i8, i8* %0, i64 304
  %45 = bitcast i8* %44 to i32*
  store i32 %43, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %0, i64 312
  %47 = bitcast i8* %46 to i32*
  store i32 127, i32* %47, align 4
  %48 = sub nsw i32 %32, %25
  %49 = mul nsw i32 %48, 10
  %50 = ashr i32 %49, 8
  %51 = add nsw i32 %50, %25
  %52 = getelementptr inbounds i8, i8* %0, i64 336
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %0, i64 284
  %55 = getelementptr inbounds i8, i8* %0, i64 300
  %56 = bitcast i8* %55 to i16*
  store i16 0, i16* %56, align 4
  %57 = getelementptr inbounds i8, i8* %0, i64 308
  %58 = bitcast i8* %57 to i16*
  store i16 0, i16* %58, align 4
  %59 = getelementptr inbounds i8, i8* %0, i64 296
  %60 = bitcast i8* %59 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 10, i1 false)
  store i16 520, i16* %60, align 4
  %61 = getelementptr inbounds i8, i8* %0, i64 294
  %62 = bitcast i8* %61 to i16*
  store i16 340, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %0, i64 298
  %64 = bitcast i8* %63 to i16*
  store i16 0, i16* %64, align 2
  %65 = getelementptr inbounds i8, i8* %0, i64 112
  %66 = getelementptr inbounds i8, i8* %0, i64 280
  %67 = bitcast i8* %66 to i16*
  store i16 400, i16* %67, align 4
  %68 = getelementptr inbounds i8, i8* %0, i64 282
  %69 = bitcast i8* %68 to i16*
  store i16 0, i16* %69, align 2
  %70 = bitcast i8* %65 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1000, i32 1000, i32 1000>, <4 x i32>* %70, align 4
  %71 = getelementptr inbounds i8, i8* %0, i64 128
  %72 = bitcast i8* %71 to <4 x i32>*
  store <4 x i32> <i32 1000, i32 1000, i32 1000, i32 1000>, <4 x i32>* %72, align 4
  %73 = getelementptr inbounds i8, i8* %0, i64 144
  %74 = bitcast i8* %73 to i32*
  store i32 1000, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %0, i64 148
  %76 = bitcast i8* %75 to i32*
  store i32 1000, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %0, i64 152
  %78 = bitcast i8* %77 to i32*
  store i32 1000, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %0, i64 100
  %80 = bitcast i8* %79 to i32*
  store i32 1250, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %0, i64 276
  %82 = bitcast i8* %81 to i16*
  store i16 0, i16* %82, align 4
  %83 = getelementptr inbounds i8, i8* %0, i64 104
  %84 = bitcast i8* %83 to i32*
  store i32 16284, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %0, i64 156
  call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 20, i1 false)
  %86 = getelementptr inbounds i8, i8* %0, i64 196
  %87 = getelementptr inbounds i8, i8* %0, i64 302
  %88 = bitcast i8* %87 to i16*
  store i16 0, i16* %88, align 2
  %89 = getelementptr inbounds i8, i8* %0, i64 60
  %90 = bitcast i8* %89 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 80, i1 false)
  tail call void @WebRtcSpl_MemSetW32(i32* %90, i32 0, i64 8) #9
  %91 = getelementptr inbounds i8, i8* %0, i64 24
  %92 = bitcast i8* %91 to i16*
  store i16 42, i16* %92, align 4
  %93 = getelementptr inbounds i8, i8* %0, i64 12
  %94 = getelementptr inbounds i8, i8* %0, i64 16
  store i8 1, i8* %94, align 4
  %95 = bitcast i8* %93 to i16*
  store i16 3, i16* %95, align 4
  %96 = getelementptr inbounds i8, i8* %0, i64 14
  %97 = bitcast i8* %96 to i16*
  store i16 9, i16* %97, align 2
  %98 = bitcast i8* %93 to i48*
  %99 = load i48, i48* %98, align 4
  %100 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %0, i48 %99)
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %114, label %102

102:                                              ; preds = %14
  %103 = getelementptr inbounds i8, i8* %0, i64 28
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i8, i8* %0, i64 108
  %107 = bitcast i8* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %0, i64 664
  %109 = bitcast i8* %108 to i16*
  store i16 0, i16* %109, align 4
  %110 = icmp sle i32 %24, %25
  %111 = icmp ugt i32 %24, 67108863
  %112 = or i1 %110, %111
  %113 = sext i1 %112 to i32
  ret i32 %113

114:                                              ; preds = %14, %5
  %115 = phi i16 [ 18002, %5 ], [ 18000, %14 ]
  %116 = getelementptr inbounds i8, i8* %0, i64 26
  %117 = bitcast i8* %116 to i16*
  store i16 %115, i16* %117, align 2
  br label %118

118:                                              ; preds = %114, %10
  ret i32 -1
}

declare i32 @_ZN6webrtc21WebRtcAgc_InitDigitalEPNS_10DigitalAgcEs(%"struct.webrtc::DigitalAgc"*, i16 signext) local_unnamed_addr #2

declare void @_ZN6webrtc17WebRtcAgc_InitVadEPNS_6AgcVadE(%"struct.webrtc::AgcVad"*) local_unnamed_addr #2

declare void @WebRtcSpl_MemSetW32(i32*, i32, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
