; ModuleID = '../../third_party/boringssl/src/crypto/asn1/tasn_new.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/tasn_new.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_VALUE_st = type opaque
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.ASN1_EXTERN_FUNCS_st = type { i8*, i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)*, i32 (%struct.ASN1_VALUE_st**, i8**, %struct.ASN1_ITEM_st*, i32, i32)*, i32 (%struct.bio_st*, %struct.ASN1_VALUE_st**, i32, i8*, %struct.asn1_pctx_st*)* }
%struct.ASN1_TLC_st = type { i8, i32, i64, i32, i32, i32 }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.asn1_pctx_st = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/asn1/tasn_new.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.ASN1_VALUE_st*, align 8
  %3 = bitcast %struct.ASN1_VALUE_st** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #3
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %2, align 8
  %4 = call fastcc i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st** nonnull %2, %struct.ASN1_ITEM_st* %0, i32 0) #3
  %5 = icmp sgt i32 %4, 0
  %6 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %2, align 8
  %7 = select i1 %5, %struct.ASN1_VALUE_st* %6, %struct.ASN1_VALUE_st* null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #3
  ret %struct.ASN1_VALUE_st* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_item_ex_new(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #0 {
  %3 = tail call fastcc i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i32 0)
  ret i32 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.ASN1_AUX_st**
  %6 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %5, align 8
  %7 = icmp eq %struct.ASN1_AUX_st* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %6, i64 0, i32 3
  %10 = load i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)** %9, align 8
  %11 = icmp eq i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8, %3
  br label %13

13:                                               ; preds = %8, %12
  %14 = phi i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* [ null, %12 ], [ %10, %8 ]
  %15 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = sext i8 %16 to i32
  switch i32 %17, label %273 [
    i32 4, label %18
    i32 0, label %28
    i32 5, label %122
    i32 2, label %125
    i32 1, label %146
  ]

18:                                               ; preds = %13
  %19 = icmp eq %struct.ASN1_AUX_st* %6, null
  br i1 %19, label %273, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %6, i64 0, i32 1
  %22 = bitcast i32* %21 to i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)**
  %23 = load i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)** %22, align 8
  %24 = icmp eq i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* %23, null
  br i1 %24, label %273, label %25

25:                                               ; preds = %20
  %26 = tail call i32 %23(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %270, label %273

28:                                               ; preds = %13
  %29 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 2
  %30 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %29, align 8
  %31 = icmp eq %struct.ASN1_TEMPLATE_st* %30, null
  br i1 %31, label %119, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %30, i64 0, i32 4
  %34 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %33, align 8
  %35 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %30, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %101, label %39

39:                                               ; preds = %32
  %40 = and i64 %36, 774
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %65, %39
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

43:                                               ; preds = %39, %65
  %44 = phi %struct.ASN1_TEMPLATE_st* [ %63, %65 ], [ %30, %39 ]
  %45 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %44, i64 0, i32 4
  %46 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %45, align 8
  %47 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 0
  %48 = load i8, i8* %47, align 8
  %49 = sext i8 %48 to i32
  switch i32 %49, label %273 [
    i32 4, label %50
    i32 0, label %61
    i32 5, label %85
    i32 2, label %100
    i32 1, label %100
  ]

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 4
  %52 = bitcast i8** %51 to %struct.ASN1_EXTERN_FUNCS_st**
  %53 = load %struct.ASN1_EXTERN_FUNCS_st*, %struct.ASN1_EXTERN_FUNCS_st** %52, align 8
  %54 = icmp eq %struct.ASN1_EXTERN_FUNCS_st* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.ASN1_EXTERN_FUNCS_st, %struct.ASN1_EXTERN_FUNCS_st* %53, i64 0, i32 3
  %57 = load void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)** %56, align 8
  %58 = icmp eq void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void %57(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %46) #3
  br label %273

60:                                               ; preds = %55, %50
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

61:                                               ; preds = %43
  %62 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 2
  %63 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %62, align 8
  %64 = icmp eq %struct.ASN1_TEMPLATE_st* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %63, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 774
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %43, label %42

70:                                               ; preds = %61
  %71 = icmp eq %struct.ASN1_ITEM_st* %46, null
  %72 = icmp eq i8 %48, 5
  %73 = or i1 %71, %72
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = bitcast %struct.ASN1_VALUE_st** %0 to i32*
  store i32 %82, i32* %83, align 4
  br label %273

84:                                               ; preds = %74, %70
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

85:                                               ; preds = %43
  %86 = icmp eq %struct.ASN1_ITEM_st* %46, null
  %87 = icmp eq i8 %48, 5
  %88 = or i1 %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %46, i64 0, i32 5
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  %98 = bitcast %struct.ASN1_VALUE_st** %0 to i32*
  store i32 %97, i32* %98, align 4
  br label %273

99:                                               ; preds = %89, %85
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

100:                                              ; preds = %43, %43
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

101:                                              ; preds = %32
  %102 = and i64 %36, 768
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %273

105:                                              ; preds = %101
  %106 = and i64 %36, 6
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = tail call %struct.stack_st* @sk_new_null() #3
  %110 = icmp eq %struct.stack_st* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 243) #3
  br label %270

112:                                              ; preds = %108
  %113 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.stack_st**
  store %struct.stack_st* %109, %struct.stack_st** %113, align 8
  br label %273

114:                                              ; preds = %105
  %115 = trunc i64 %36 to i32
  %116 = and i32 %115, 1024
  %117 = tail call fastcc i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %34, i32 %116) #3
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %270, label %273

119:                                              ; preds = %28
  %120 = tail call fastcc i32 @ASN1_primitive_new(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1)
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %270, label %273

122:                                              ; preds = %13
  %123 = tail call fastcc i32 @ASN1_primitive_new(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1)
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %270, label %273

125:                                              ; preds = %13
  %126 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %14, null
  br i1 %126, label %127, label %129

127:                                              ; preds = %125
  %128 = tail call i32 %14(i32 0, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  switch i32 %128, label %129 [
    i32 0, label %272
    i32 2, label %273
  ]

129:                                              ; preds = %127, %125
  %130 = icmp eq i32 %2, 0
  br i1 %130, label %131, label %141

131:                                              ; preds = %129
  %132 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 5
  %133 = load i64, i64* %132, align 8
  %134 = tail call i8* @OPENSSL_malloc(i64 %133) #3
  %135 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  store i8* %134, i8** %135, align 8
  %136 = icmp eq i8* %134, null
  br i1 %136, label %270, label %137

137:                                              ; preds = %131
  %138 = load i64, i64* %132, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %134, i8 0, i64 %138, i1 false) #3
  br label %141

141:                                              ; preds = %140, %137, %129
  %142 = tail call i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st** %0, i32 -1, %struct.ASN1_ITEM_st* %1) #3
  br i1 %126, label %143, label %273

143:                                              ; preds = %141
  %144 = tail call i32 %14(i32 1, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %271, label %273

146:                                              ; preds = %13
  %147 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %14, null
  br i1 %147, label %148, label %150

148:                                              ; preds = %146
  %149 = tail call i32 %14(i32 0, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  switch i32 %149, label %150 [
    i32 0, label %272
    i32 2, label %273
  ]

150:                                              ; preds = %148, %146
  %151 = icmp eq i32 %2, 0
  br i1 %151, label %152, label %163

152:                                              ; preds = %150
  %153 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 5
  %154 = load i64, i64* %153, align 8
  %155 = tail call i8* @OPENSSL_malloc(i64 %154) #3
  %156 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  store i8* %155, i8** %156, align 8
  %157 = icmp eq i8* %155, null
  br i1 %157, label %270, label %158

158:                                              ; preds = %152
  %159 = load i64, i64* %153, align 8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %155, i8 0, i64 %159, i1 false) #3
  br label %162

162:                                              ; preds = %158, %161
  tail call void @asn1_refcount_set_one(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1) #3
  tail call void @asn1_enc_init(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1) #3
  br label %163

163:                                              ; preds = %150, %162
  %164 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = icmp sgt i64 %165, 0
  br i1 %166, label %167, label %265

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 2
  %169 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %168, align 8
  br label %170

170:                                              ; preds = %167, %260
  %171 = phi i64 [ 0, %167 ], [ %262, %260 ]
  %172 = phi %struct.ASN1_TEMPLATE_st* [ %169, %167 ], [ %261, %260 ]
  %173 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %172) #3
  %174 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %172, i64 0, i32 4
  %175 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %174, align 8
  %176 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %172, i64 0, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %242, label %180

180:                                              ; preds = %170
  %181 = and i64 %177, 774
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %206, %180
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

184:                                              ; preds = %180, %206
  %185 = phi %struct.ASN1_TEMPLATE_st* [ %204, %206 ], [ %172, %180 ]
  %186 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %185, i64 0, i32 4
  %187 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %186, align 8
  %188 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 0
  %189 = load i8, i8* %188, align 8
  %190 = sext i8 %189 to i32
  switch i32 %190, label %260 [
    i32 4, label %191
    i32 0, label %202
    i32 5, label %226
    i32 2, label %241
    i32 1, label %241
  ]

191:                                              ; preds = %184
  %192 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 4
  %193 = bitcast i8** %192 to %struct.ASN1_EXTERN_FUNCS_st**
  %194 = load %struct.ASN1_EXTERN_FUNCS_st*, %struct.ASN1_EXTERN_FUNCS_st** %193, align 8
  %195 = icmp eq %struct.ASN1_EXTERN_FUNCS_st* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.ASN1_EXTERN_FUNCS_st, %struct.ASN1_EXTERN_FUNCS_st* %194, i64 0, i32 3
  %198 = load void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)** %197, align 8
  %199 = icmp eq void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %196
  tail call void %198(%struct.ASN1_VALUE_st** %173, %struct.ASN1_ITEM_st* %187) #3
  br label %260

201:                                              ; preds = %196, %191
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

202:                                              ; preds = %184
  %203 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 2
  %204 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %203, align 8
  %205 = icmp eq %struct.ASN1_TEMPLATE_st* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %204, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = and i64 %208, 774
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %184, label %183

211:                                              ; preds = %202
  %212 = icmp eq %struct.ASN1_ITEM_st* %187, null
  %213 = icmp eq i8 %189, 5
  %214 = or i1 %212, %213
  br i1 %214, label %225, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = trunc i64 %217 to i32
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %225

220:                                              ; preds = %215
  %221 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 5
  %222 = load i64, i64* %221, align 8
  %223 = trunc i64 %222 to i32
  %224 = bitcast %struct.ASN1_VALUE_st** %173 to i32*
  store i32 %223, i32* %224, align 4
  br label %260

225:                                              ; preds = %215, %211
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

226:                                              ; preds = %184
  %227 = icmp eq %struct.ASN1_ITEM_st* %187, null
  %228 = icmp eq i8 %189, 5
  %229 = or i1 %227, %228
  br i1 %229, label %240, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = trunc i64 %232 to i32
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %235, label %240

235:                                              ; preds = %230
  %236 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %187, i64 0, i32 5
  %237 = load i64, i64* %236, align 8
  %238 = trunc i64 %237 to i32
  %239 = bitcast %struct.ASN1_VALUE_st** %173 to i32*
  store i32 %238, i32* %239, align 4
  br label %260

240:                                              ; preds = %230, %226
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

241:                                              ; preds = %184, %184
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

242:                                              ; preds = %170
  %243 = and i64 %177, 768
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %246, label %245

245:                                              ; preds = %242
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %173, align 8
  br label %260

246:                                              ; preds = %242
  %247 = and i64 %177, 6
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %246
  %250 = tail call %struct.stack_st* @sk_new_null() #3
  %251 = icmp eq %struct.stack_st* %250, null
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 243) #3
  br label %269

253:                                              ; preds = %249
  %254 = bitcast %struct.ASN1_VALUE_st** %173 to %struct.stack_st**
  store %struct.stack_st* %250, %struct.stack_st** %254, align 8
  br label %260

255:                                              ; preds = %246
  %256 = trunc i64 %177 to i32
  %257 = and i32 %256, 1024
  %258 = tail call fastcc i32 @asn1_item_ex_combine_new(%struct.ASN1_VALUE_st** %173, %struct.ASN1_ITEM_st* %175, i32 %257) #3
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %269, label %260

260:                                              ; preds = %184, %241, %240, %235, %225, %220, %201, %200, %183, %253, %245, %255
  %261 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %172, i64 1
  %262 = add nuw nsw i64 %171, 1
  %263 = load i64, i64* %164, align 8
  %264 = icmp sgt i64 %263, %262
  br i1 %264, label %170, label %265

265:                                              ; preds = %260, %163
  br i1 %147, label %266, label %273

266:                                              ; preds = %265
  %267 = tail call i32 %14(i32 1, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %271, label %273

269:                                              ; preds = %255, %252
  tail call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i32 %2) #3
  br label %270

270:                                              ; preds = %111, %25, %114, %119, %122, %131, %152, %269
  tail call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 181) #3
  br label %273

271:                                              ; preds = %143, %266
  tail call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i32 %2) #3
  br label %272

272:                                              ; preds = %148, %127, %271
  tail call void @ERR_put_error(i32 12, i32 0, i32 101, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 187) #3
  br label %273

273:                                              ; preds = %43, %100, %99, %94, %84, %79, %60, %59, %42, %112, %104, %13, %141, %265, %266, %143, %122, %119, %114, %18, %20, %25, %148, %127, %272, %270
  %274 = phi i32 [ 0, %270 ], [ 0, %272 ], [ 1, %127 ], [ 1, %148 ], [ 1, %25 ], [ 1, %20 ], [ 1, %18 ], [ 1, %114 ], [ 1, %119 ], [ 1, %122 ], [ 1, %143 ], [ 1, %266 ], [ 1, %265 ], [ 1, %141 ], [ 1, %13 ], [ 1, %104 ], [ 1, %112 ], [ 1, %42 ], [ 1, %59 ], [ 1, %60 ], [ 1, %79 ], [ 1, %84 ], [ 1, %94 ], [ 1, %99 ], [ 1, %100 ], [ 1, %43 ]
  ret i32 %274
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ASN1_primitive_new(%struct.ASN1_VALUE_st** nocapture, %struct.ASN1_ITEM_st* readonly) unnamed_addr #0 {
  %3 = icmp eq %struct.ASN1_ITEM_st* %1, null
  br i1 %3, label %48, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 5
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  switch i32 %11, label %30 [
    i32 6, label %12
    i32 1, label %15
    i32 5, label %20
    i32 -4, label %21
  ]

12:                                               ; preds = %8
  %13 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 0) #3
  %14 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %13, %struct.asn1_object_st** %14, align 8
  br label %48

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = bitcast %struct.ASN1_VALUE_st** %0 to i32*
  store i32 %18, i32* %19, align 4
  br label %48

20:                                               ; preds = %8
  store %struct.ASN1_VALUE_st* inttoptr (i64 1 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %0, align 8
  br label %48

21:                                               ; preds = %8
  %22 = tail call i8* @OPENSSL_malloc(i64 16) #3
  %23 = icmp eq i8* %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = bitcast i8* %25 to i8**
  store i8* null, i8** %26, align 8
  %27 = bitcast i8* %22 to i32*
  store i32 -1, i32* %27, align 8
  %28 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  store i8* %22, i8** %28, align 8
  %29 = bitcast i8* %22 to %struct.ASN1_VALUE_st*
  br label %44

30:                                               ; preds = %4, %8
  %31 = phi i32 [ %11, %8 ], [ -1, %4 ]
  %32 = tail call %struct.asn1_string_st* @ASN1_STRING_type_new(i32 %31) #3
  %33 = load i8, i8* %5, align 8
  %34 = icmp eq i8 %33, 5
  %35 = icmp ne %struct.asn1_string_st* %32, null
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %32, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = or i64 %39, 64
  store i64 %40, i64* %38, align 8
  br label %41

41:                                               ; preds = %37, %30
  %42 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %32, %struct.asn1_string_st** %42, align 8
  %43 = bitcast %struct.asn1_string_st* %32 to %struct.ASN1_VALUE_st*
  br label %44

44:                                               ; preds = %41, %24
  %45 = phi %struct.ASN1_VALUE_st* [ %43, %41 ], [ %29, %24 ]
  %46 = icmp ne %struct.ASN1_VALUE_st* %45, null
  %47 = zext i1 %46 to i32
  br label %48

48:                                               ; preds = %44, %21, %2, %20, %15, %12
  %49 = phi i32 [ 1, %20 ], [ 1, %15 ], [ 1, %12 ], [ 0, %2 ], [ 0, %21 ], [ %47, %44 ]
  ret i32 %49
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st**, i32, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare void @asn1_refcount_set_one(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare void @asn1_enc_init(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*) local_unnamed_addr #2

declare void @asn1_item_combine_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i32) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_STRING_type_new(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
