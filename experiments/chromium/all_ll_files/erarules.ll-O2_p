; ModuleID = '../../third_party/icu/source/i18n/erarules.cpp'
source_filename = "../../third_party/icu/source/i18n/erarules.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::EraRules" = type { %"class.icu_69::LocalMemory", i32, i32 }
%"class.icu_69::LocalMemory" = type { %"class.icu_69::LocalPointerBase" }
%"class.icu_69::LocalPointerBase" = type { i32* }
%"class.icu_69::TimeZone" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1, [32 x i8] }
%struct.anon.1 = type { i16, i32, i32, i16* }
%struct.UResourceBundle = type opaque

@.str = private unnamed_addr constant [17 x i8] c"supplementalData\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"calendarData\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"eras\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"named\00", align 1
@_ZN6icu_69L9VAL_FALSEE = internal constant [5 x i16] [i16 102, i16 97, i16 108, i16 115, i16 101], align 2

@_ZN6icu_698EraRulesC1ERNS_11LocalMemoryIiEEi = hidden unnamed_addr alias void (%"class.icu_69::EraRules"*, %"class.icu_69::LocalMemory"*, i32), void (%"class.icu_69::EraRules"*, %"class.icu_69::LocalMemory"*, i32)* @_ZN6icu_698EraRulesC2ERNS_11LocalMemoryIiEEi
@_ZN6icu_698EraRulesD1Ev = hidden unnamed_addr alias void (%"class.icu_69::EraRules"*), void (%"class.icu_69::EraRules"*)* @_ZN6icu_698EraRulesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_698EraRulesC2ERNS_11LocalMemoryIiEEi(%"class.icu_69::EraRules"* nocapture, %"class.icu_69::LocalMemory"* nocapture dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 0, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  tail call void @uprv_free_69(i8* null) #9
  %6 = getelementptr inbounds %"class.icu_69::LocalMemory", %"class.icu_69::LocalMemory"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.icu_69::LocalMemory"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.icu_69::EraRules"* %0 to i64*
  store i64 %8, i64* %9, align 8
  store i32* null, i32** %6, align 8
  tail call void @_ZN6icu_698EraRules14initCurrentEraEv(%"class.icu_69::EraRules"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_698EraRules14initCurrentEraEv(%"class.icu_69::EraRules"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 0, i32* %2, align 4
  %12 = tail call double @ucal_getNow_69() #9
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  store i32 -1431655766, i32* %3, align 4
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %4, align 4
  %15 = tail call %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone13createDefaultEv() #9
  %16 = icmp eq %"class.icu_69::TimeZone"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.icu_69::TimeZone"* %15 to void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)***
  %19 = load void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)**, void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)** %19, i64 6
  %21 = load void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)*, void (%"class.icu_69::TimeZone"*, double, i8, i32*, i32*, i32*)** %20, align 8
  call void %21(%"class.icu_69::TimeZone"* nonnull %15, double %12, i8 signext 0, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %2) #9
  %22 = bitcast %"class.icu_69::TimeZone"* %15 to void (%"class.icu_69::TimeZone"*)***
  %23 = load void (%"class.icu_69::TimeZone"*)**, void (%"class.icu_69::TimeZone"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.icu_69::TimeZone"*)*, void (%"class.icu_69::TimeZone"*)** %23, i64 1
  %25 = load void (%"class.icu_69::TimeZone"*)*, void (%"class.icu_69::TimeZone"*)** %24, align 8
  call void %25(%"class.icu_69::TimeZone"* nonnull %15) #9
  %26 = load i32, i32* %3, align 4
  %27 = load i32, i32* %4, align 4
  %28 = add nsw i32 %27, %26
  %29 = sitofp i32 %28 to double
  %30 = fadd double %12, %29
  br label %31

31:                                               ; preds = %1, %17
  %32 = phi double [ %30, %17 ], [ %12, %1 ]
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #9
  store i32 -1431655766, i32* %5, align 4
  %34 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #9
  store i32 -1431655766, i32* %6, align 4
  %35 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #9
  store i32 -1431655766, i32* %7, align 4
  %36 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #9
  store i32 -1431655766, i32* %8, align 4
  %37 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  store i32 -1431655766, i32* %9, align 4
  %38 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #9
  store i32 -1431655766, i32* %10, align 4
  call void @_ZN6icu_695Grego12timeToFieldsEdRiS1_S1_S1_S1_S1_(double %32, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10) #9
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %7, align 4
  %42 = shl i32 %39, 16
  %43 = shl i32 %40, 8
  %44 = add i32 %43, 256
  %45 = or i32 %41, %42
  %46 = or i32 %45, %44
  %47 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = sext i32 %48 to i64
  br label %51

51:                                               ; preds = %55, %31
  %52 = phi i64 [ %53, %55 ], [ %50, %31 ]
  %53 = add nsw i64 %52, -1
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load i32*, i32** %49, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %53
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %46, %58
  br i1 %59, label %51, label %60

60:                                               ; preds = %55, %51
  %61 = trunc i64 %53 to i32
  %62 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 2
  store i32 %61, i32* %62, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_698EraRulesD2Ev(%"class.icu_69::EraRules"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::EraRules"* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::EraRules"* @_ZN6icu_698EraRules14createInstanceEPKcaR10UErrorCode(i8*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %170

8:                                                ; preds = %3
  %9 = tail call %struct.UResourceBundle* @ures_openDirect_69(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32* %2) #9
  %10 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), %struct.UResourceBundle* %9, i32* %2) #9
  %11 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %9, i8* %0, %struct.UResourceBundle* %9, i32* %2) #9
  %12 = tail call %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %struct.UResourceBundle* %9, i32* %2) #9
  %13 = load i32, i32* %2, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %166

15:                                               ; preds = %8
  %16 = tail call i32 @ures_getSize_69(%struct.UResourceBundle* %9) #9
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 2
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #10
  %20 = bitcast i8* %19 to i32*
  %21 = ptrtoint i8* %19 to i64
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  store i32 7, i32* %2, align 4
  br label %162

24:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 %18, i1 false)
  %25 = bitcast i8** %4 to i8*
  %26 = bitcast i8** %4 to i64*
  %27 = bitcast i32* %5 to i8*
  br label %28

28:                                               ; preds = %138, %24
  %29 = phi i32 [ 2147483647, %24 ], [ %134, %138 ]
  %30 = call signext i8 @ures_hasNext_69(%struct.UResourceBundle* %9) #9
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %140, label %32

32:                                               ; preds = %28
  %33 = call %struct.UResourceBundle* @ures_getNextResource_69(%struct.UResourceBundle* %9, %struct.UResourceBundle* null, i32* %2) #9
  %34 = load i32, i32* %2, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %133

36:                                               ; preds = %32
  %37 = call i8* @ures_getKey_69(%struct.UResourceBundle* %33) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %38 = call i64 @strtol(i8* %37, i8** nonnull %4, i32 10) #9
  %39 = trunc i64 %38 to i32
  %40 = load i64, i64* %26, align 8
  %41 = ptrtoint i8* %37 to i64
  %42 = sub i64 %40, %41
  %43 = call i64 @strlen(i8* %37) #11
  %44 = icmp eq i64 %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %36
  store i32 3, i32* %2, align 4
  br label %130

46:                                               ; preds = %36
  %47 = icmp sgt i32 %39, -1
  %48 = icmp sgt i32 %16, %39
  %49 = and i1 %47, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  store i32 3, i32* %2, align 4
  br label %130

51:                                               ; preds = %46
  %52 = shl i64 %38, 32
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds i32, i32* %20, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  store i32 3, i32* %2, align 4
  br label %130

58:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #9
  store i32 -1431655766, i32* %5, align 4
  br label %59

59:                                               ; preds = %111, %58
  %60 = phi i8 [ 1, %58 ], [ %108, %111 ]
  %61 = call signext i8 @ures_hasNext_69(%struct.UResourceBundle* %33) #9
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %113, label %63

63:                                               ; preds = %59
  %64 = call %struct.UResourceBundle* @ures_getNextResource_69(%struct.UResourceBundle* %33, %struct.UResourceBundle* null, i32* %2) #9
  %65 = load i32, i32* %2, align 4
  %66 = icmp slt i32 %65, 1
  br i1 %66, label %67, label %106

67:                                               ; preds = %63
  %68 = call i8* @ures_getKey_69(%struct.UResourceBundle* %64) #9
  %69 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #11
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %98

71:                                               ; preds = %67
  %72 = call i32* @ures_getIntVector_69(%struct.UResourceBundle* %64, i32* nonnull %5, i32* %2) #9
  %73 = load i32, i32* %2, align 4
  %74 = icmp slt i32 %73, 1
  br i1 %74, label %75, label %106

75:                                               ; preds = %71
  %76 = load i32, i32* %5, align 4
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %92

78:                                               ; preds = %75
  %79 = load i32, i32* %72, align 4
  %80 = getelementptr inbounds i32, i32* %72, i64 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %72, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %79, 32768
  %85 = icmp ult i32 %84, 65536
  %86 = add i32 %81, -1
  %87 = icmp ult i32 %86, 12
  %88 = and i1 %85, %87
  %89 = add i32 %83, -1
  %90 = icmp ult i32 %89, 31
  %91 = and i1 %90, %88
  br i1 %91, label %93, label %92

92:                                               ; preds = %78, %75
  store i32 3, i32* %2, align 4
  br label %106

93:                                               ; preds = %78
  %94 = shl i32 %79, 16
  %95 = shl i32 %81, 8
  %96 = or i32 %95, %94
  %97 = or i32 %96, %83
  store i32 %97, i32* %54, align 4
  br label %106

98:                                               ; preds = %67
  %99 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #11
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = call i16* @ures_getString_69(%struct.UResourceBundle* %64, i32* nonnull %5, i32* %2) #9
  %103 = call i32 @u_strncmp_69(i16* %102, i16* getelementptr inbounds ([5 x i16], [5 x i16]* @_ZN6icu_69L9VAL_FALSEE, i64 0, i64 0), i32 5) #9
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i8 0, i8 %60
  br label %106

106:                                              ; preds = %71, %92, %101, %98, %93, %63
  %107 = phi i32 [ 1, %63 ], [ 0, %93 ], [ 0, %98 ], [ 0, %101 ], [ 1, %92 ], [ 1, %71 ]
  %108 = phi i8 [ %60, %63 ], [ %60, %93 ], [ %60, %98 ], [ %105, %101 ], [ %60, %92 ], [ %60, %71 ]
  %109 = icmp eq %struct.UResourceBundle* %64, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  call void @ures_close_69(%struct.UResourceBundle* nonnull %64) #9
  br label %111

111:                                              ; preds = %106, %110
  %112 = icmp eq i32 %107, 0
  br i1 %112, label %59, label %127

113:                                              ; preds = %59
  %114 = load i32, i32* %54, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %113
  %117 = icmp eq i32 %39, 0
  br i1 %117, label %119, label %118

118:                                              ; preds = %116
  store i32 3, i32* %2, align 4
  br label %127

119:                                              ; preds = %116
  store i32 -2147483391, i32* %54, align 4
  br label %120

120:                                              ; preds = %113, %119
  %121 = icmp eq i8 %60, 0
  %122 = icmp sgt i32 %29, %39
  br i1 %121, label %125, label %123

123:                                              ; preds = %120
  br i1 %122, label %127, label %124

124:                                              ; preds = %123
  store i32 3, i32* %2, align 4
  br label %127

125:                                              ; preds = %120
  %126 = select i1 %122, i32 %39, i32 %29
  br label %127

127:                                              ; preds = %111, %125, %123, %124, %118
  %128 = phi i32 [ %29, %124 ], [ %29, %118 ], [ %29, %123 ], [ %126, %125 ], [ %29, %111 ]
  %129 = phi i32 [ 1, %124 ], [ 1, %118 ], [ 0, %123 ], [ 0, %125 ], [ 1, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #9
  br label %130

130:                                              ; preds = %127, %57, %50, %45
  %131 = phi i32 [ %29, %45 ], [ %29, %50 ], [ %29, %57 ], [ %128, %127 ]
  %132 = phi i32 [ 1, %45 ], [ 1, %50 ], [ 1, %57 ], [ %129, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %133

133:                                              ; preds = %32, %130
  %134 = phi i32 [ %131, %130 ], [ %29, %32 ]
  %135 = phi i32 [ %132, %130 ], [ 1, %32 ]
  %136 = icmp eq %struct.UResourceBundle* %33, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %133
  call void @ures_close_69(%struct.UResourceBundle* nonnull %33) #9
  br label %138

138:                                              ; preds = %133, %137
  %139 = icmp eq i32 %135, 0
  br i1 %139, label %28, label %162

140:                                              ; preds = %28
  %141 = icmp eq i32 %29, 2147483647
  %142 = icmp ne i8 %1, 0
  %143 = or i1 %142, %141
  %144 = call i8* @_ZN6icu_697UMemorynwEm(i64 16) #9
  %145 = icmp eq i8* %144, null
  br i1 %143, label %149, label %146

146:                                              ; preds = %140
  br i1 %145, label %160, label %147

147:                                              ; preds = %146
  %148 = bitcast i8* %144 to %"class.icu_69::EraRules"*
  br label %152

149:                                              ; preds = %140
  br i1 %145, label %160, label %150

150:                                              ; preds = %149
  %151 = bitcast i8* %144 to %"class.icu_69::EraRules"*
  br label %152

152:                                              ; preds = %150, %147
  %153 = phi i32 [ %16, %150 ], [ %29, %147 ]
  %154 = phi %"class.icu_69::EraRules"* [ %151, %150 ], [ %148, %147 ]
  %155 = bitcast i8* %144 to i32**
  store i32* null, i32** %155, align 8
  %156 = getelementptr inbounds i8, i8* %144, i64 8
  %157 = bitcast i8* %156 to i32*
  store i32 %153, i32* %157, align 8
  call void @uprv_free_69(i8* null) #9
  %158 = bitcast i8* %144 to i64*
  store i64 %21, i64* %158, align 8
  call void @_ZN6icu_698EraRules14initCurrentEraEv(%"class.icu_69::EraRules"* nonnull %154) #9
  %159 = icmp eq %"class.icu_69::EraRules"* %154, null
  br i1 %159, label %160, label %162

160:                                              ; preds = %149, %146, %152
  %161 = phi i64 [ 0, %152 ], [ %21, %146 ], [ %21, %149 ]
  store i32 7, i32* %2, align 4
  br label %162

162:                                              ; preds = %138, %152, %160, %23
  %163 = phi i64 [ %161, %160 ], [ 0, %152 ], [ %21, %23 ], [ %21, %138 ]
  %164 = phi %"class.icu_69::EraRules"* [ null, %160 ], [ %154, %152 ], [ null, %23 ], [ null, %138 ]
  %165 = inttoptr i64 %163 to i8*
  call void @uprv_free_69(i8* %165) #9
  br label %166

166:                                              ; preds = %8, %162
  %167 = phi %"class.icu_69::EraRules"* [ %164, %162 ], [ null, %8 ]
  %168 = icmp eq %struct.UResourceBundle* %9, null
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  call void @ures_close_69(%struct.UResourceBundle* nonnull %9) #9
  br label %170

170:                                              ; preds = %169, %166, %3
  %171 = phi %"class.icu_69::EraRules"* [ null, %3 ], [ %167, %166 ], [ %167, %169 ]
  ret %"class.icu_69::EraRules"* %171
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.UResourceBundle* @ures_openDirect_69(i8*, i8*, i32*) local_unnamed_addr #2

declare %struct.UResourceBundle* @ures_getByKey_69(%struct.UResourceBundle*, i8*, %struct.UResourceBundle*, i32*) local_unnamed_addr #2

declare i32 @ures_getSize_69(%struct.UResourceBundle*) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare signext i8 @ures_hasNext_69(%struct.UResourceBundle*) local_unnamed_addr #2

declare %struct.UResourceBundle* @ures_getNextResource_69(%struct.UResourceBundle*, %struct.UResourceBundle*, i32*) local_unnamed_addr #2

declare i8* @ures_getKey_69(%struct.UResourceBundle*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare i32* @ures_getIntVector_69(%struct.UResourceBundle*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i16* @ures_getString_69(%struct.UResourceBundle*, i32*, i32*) local_unnamed_addr #2

declare i32 @u_strncmp_69(i16*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6icu_698EraRules12getStartDateEiRA3_iR10UErrorCode(%"class.icu_69::EraRules"* nocapture readonly, i32, [3 x i32]* nocapture dereferenceable(12), i32* nocapture dereferenceable(4)) local_unnamed_addr #8 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %33

7:                                                ; preds = %4
  %8 = icmp slt i32 %1, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %9, %7
  store i32 1, i32* %3, align 4
  br label %33

14:                                               ; preds = %9
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %15
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -2147483391
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = ashr i32 %19, 16
  %23 = lshr i32 %19, 8
  %24 = and i32 %23, 255
  %25 = and i32 %19, 255
  br label %26

26:                                               ; preds = %14, %21
  %27 = phi i32 [ %22, %21 ], [ -1, %14 ]
  %28 = phi i32 [ %24, %21 ], [ 1, %14 ]
  %29 = phi i32 [ %25, %21 ], [ 1, %14 ]
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  store i32 %27, i32* %30, align 4
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  store i32 %28, i32* %31, align 4
  %32 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  store i32 %29, i32* %32, align 4
  br label %33

33:                                               ; preds = %4, %26, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_698EraRules12getStartYearEiR10UErrorCode(%"class.icu_69::EraRules"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %22

6:                                                ; preds = %3
  %7 = icmp slt i32 %1, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %6
  store i32 1, i32* %2, align 4
  br label %22

13:                                               ; preds = %8
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %14
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -2147483391
  %20 = ashr i32 %18, 16
  %21 = select i1 %19, i32 -1, i32 %20
  ret i32 %21

22:                                               ; preds = %3, %12
  ret i32 2147483647
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_698EraRules11getEraIndexEiiiR10UErrorCode(%"class.icu_69::EraRules"* nocapture readonly, i32, i32, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #8 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %75

8:                                                ; preds = %5
  %9 = add i32 %2, -1
  %10 = icmp ugt i32 %9, 11
  %11 = add i32 %3, -1
  %12 = icmp ugt i32 %11, 30
  %13 = or i1 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 1, i32* %4, align 4
  br label %75

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.icu_69::EraRules", %"class.icu_69::EraRules"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %20
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %1, -32768
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = icmp eq i32 %24, -2147483391
  br i1 %27, label %36, label %37

28:                                               ; preds = %15
  %29 = icmp sgt i32 %1, 32767
  br i1 %29, label %36, label %30

30:                                               ; preds = %28
  %31 = shl i32 %1, 16
  %32 = shl i32 %2, 8
  %33 = or i32 %32, %31
  %34 = or i32 %33, %3
  %35 = icmp slt i32 %34, %24
  br i1 %35, label %37, label %36

36:                                               ; preds = %30, %26, %28
  br label %37

37:                                               ; preds = %30, %26, %36
  %38 = phi i32 [ %19, %36 ], [ 0, %26 ], [ 0, %30 ]
  %39 = add nsw i32 %17, -1
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %75

41:                                               ; preds = %37
  %42 = icmp sgt i32 %1, 32767
  %43 = shl i32 %1, 16
  %44 = shl i32 %2, 8
  %45 = or i32 %44, %43
  %46 = or i32 %45, %3
  %47 = icmp sgt i32 %2, 1
  %48 = icmp sgt i32 %3, 1
  %49 = or i1 %47, %48
  %50 = sext i1 %49 to i32
  br label %51

51:                                               ; preds = %41, %68
  %52 = phi i32 [ %38, %41 ], [ %72, %68 ]
  %53 = phi i32 [ %17, %41 ], [ %71, %68 ]
  %54 = add nsw i32 %52, %53
  %55 = sdiv i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %22, i64 %56
  %58 = load i32, i32* %57, align 4
  br i1 %25, label %59, label %62

59:                                               ; preds = %51
  %60 = icmp eq i32 %58, -2147483391
  %61 = select i1 %60, i32 %50, i32 1
  br label %68

62:                                               ; preds = %51
  br i1 %42, label %68, label %63

63:                                               ; preds = %62
  %64 = icmp sgt i32 %46, %58
  %65 = icmp ne i32 %46, %58
  %66 = zext i1 %65 to i32
  %67 = select i1 %64, i32 -1, i32 %66
  br label %68

68:                                               ; preds = %59, %62, %63
  %69 = phi i32 [ -1, %62 ], [ %67, %63 ], [ %61, %59 ]
  %70 = icmp slt i32 %69, 1
  %71 = select i1 %70, i32 %53, i32 %55
  %72 = select i1 %70, i32 %55, i32 %52
  %73 = add nsw i32 %71, -1
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %51, label %75

75:                                               ; preds = %68, %37, %5, %14
  %76 = phi i32 [ -1, %14 ], [ -1, %5 ], [ %38, %37 ], [ %72, %68 ]
  ret i32 %76
}

declare double @ucal_getNow_69() local_unnamed_addr #2

declare %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone13createDefaultEv() local_unnamed_addr #2

declare void @_ZN6icu_695Grego12timeToFieldsEdRiS1_S1_S1_S1_S1_(double, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #2

declare void @ures_close_69(%struct.UResourceBundle*) local_unnamed_addr #2

declare void @uprv_free_69(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
