; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/text_encoding_registry.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/text_encoding_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"struct.WTF::TextCodecFactory" }
%"struct.WTF::TextCodecFactory" = type { %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::HashMap.1" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"struct.WTF::KeyValuePair.5"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5" = type { i8*, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Mutex>::InstanceStorage" = type { %"class.WTF::Mutex"* }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }

$_ZN3WTF16CopyKeysToVectorIPKcS2_NS_20TextEncodingNameHashENS_10HashTraitsIS2_EES5_NS_18PartitionAllocatorENS_6VectorINS_6StringELj0ES6_EEEEvRKNS_7HashMapIT_T0_T1_T2_T3_T4_EERT5_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S6_SB_EERS2_SG_EENS_18HashTableAddResultISC_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSD_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_S4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN3WTFL16g_text_codec_mapE = internal unnamed_addr global %"class.WTF::HashMap"* null, align 8
@_ZN3WTFL24g_text_encoding_name_mapE = internal unnamed_addr global %"class.WTF::HashMap.1"* null, align 8
@_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKcNS_16TextCodecFactoryENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS7_IS4_EENS_18PartitionAllocatorEEEEES3_v = private unnamed_addr constant [219 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<const char *, WTF::TextCodecFactory, WTF::PtrHash<const char>, WTF::HashTraits<const char *>, WTF::HashTraits<WTF::TextCodecFactory>, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKcS3_NS_20TextEncodingNameHashENS_10HashTraitsIS3_EES6_NS_18PartitionAllocatorEEEEES3_v = private unnamed_addr constant [202 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<const char *, const char *, WTF::TextEncodingNameHash, WTF::HashTraits<const char *>, WTF::HashTraits<const char *>, WTF::PartitionAllocator>]\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"8859_1\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"ISO-8859-8-I\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"iso-8859-8\00", align 1
@.str.3 = private unnamed_addr constant [77 x i8] c"../../third_party/blink/renderer/platform/wtf/text/text_encoding_registry.cc\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"alias \00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c" maps to \00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c" already, but someone is trying to make it map to \00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcS3_EEEES3_v = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const char *, const char *>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcNS_16TextCodecFactoryEEEEES3_v = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const char *, WTF::TextCodecFactory>]\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 = internal unnamed_addr global i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::TextCodec"* @_ZN3WTF12NewTextCodecERKNS_12TextEncodingE(%"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 40) #13
  %9 = bitcast i8* %8 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %9, i1 zeroext false) #13
  store i8* %8, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  br label %10

10:                                               ; preds = %1, %4, %7
  %11 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #13
  %13 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZN3WTFL16g_text_codec_mapE, align 8
  %14 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  br i1 %19, label %86, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  %24 = zext i32 %23 to i64
  %25 = shl i64 %16, 32
  %26 = xor i64 %25, -1
  %27 = add i64 %26, %16
  %28 = lshr i64 %27, 22
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 13
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 8
  %34 = xor i64 %33, %32
  %35 = mul i64 %34, 9
  %36 = lshr i64 %35, 15
  %37 = xor i64 %36, %35
  %38 = shl i64 %37, 27
  %39 = xor i64 %38, -1
  %40 = add i64 %37, %39
  %41 = lshr i64 %40, 31
  %42 = xor i64 %41, %40
  %43 = trunc i64 %42 to i32
  %44 = and i32 %23, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %45
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, %15
  br i1 %49, label %78, label %50

50:                                               ; preds = %20
  %51 = xor i32 %43, -1
  %52 = lshr i32 %43, 23
  %53 = add i32 %52, %51
  %54 = shl i32 %53, 12
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 7
  %57 = xor i32 %56, %55
  %58 = shl i32 %57, 2
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 20
  %61 = xor i32 %60, %59
  %62 = or i32 %61, 1
  %63 = zext i32 %62 to i64
  br label %64

64:                                               ; preds = %69, %50
  %65 = phi i8* [ %48, %50 ], [ %76, %69 ]
  %66 = phi i64 [ %45, %50 ], [ %73, %69 ]
  %67 = phi i64 [ 0, %50 ], [ %71, %69 ]
  %68 = icmp eq i8* %65, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = icmp eq i64 %67, 0
  %71 = select i1 %70, i64 %63, i64 %67
  %72 = add i64 %71, %66
  %73 = and i64 %72, %24
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, %15
  br i1 %77, label %78, label %64

78:                                               ; preds = %69, %20
  %79 = phi %"struct.WTF::KeyValuePair"* [ %46, %20 ], [ %74, %69 ]
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1, i32 0
  %83 = load %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)** %82, align 8
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1, i32 1
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %64, %10, %78, %81
  %87 = phi %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)* [ %83, %81 ], [ null, %78 ], [ null, %10 ], [ null, %64 ]
  %88 = phi i8* [ %85, %81 ], [ null, %78 ], [ null, %10 ], [ null, %64 ]
  %89 = tail call %"class.WTF::TextCodec"* %87(%"class.WTF::TextEncoding"* dereferenceable(8) %0, i8* %88) #13
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #13
  ret %"class.WTF::TextCodec"* %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3WTF31AtomicCanonicalTextEncodingNameEPKc(i8*) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %1
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %46, label %7

7:                                                ; preds = %4
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16, !prof !2

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call noalias i8* @malloc(i64 40) #13
  %15 = bitcast i8* %14 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %15, i1 zeroext false) #13
  store i8* %14, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  br label %16

16:                                               ; preds = %7, %10, %13
  %17 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %18 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %17, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #13
  %19 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %20 = icmp eq %"class.WTF::HashMap.1"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call fastcc void @_ZN3WTFL22BuildBaseTextCodecMapsEv()
  %22 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  br label %23

23:                                               ; preds = %16, %21
  %24 = phi %"class.WTF::HashMap.1"* [ %19, %16 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %24, i64 0, i32 0
  %26 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"* %25, i8** nonnull dereferenceable(8) %2) #13
  %27 = icmp eq %"struct.WTF::KeyValuePair.5"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %26, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %23, %28
  %33 = load atomic i8, i8* @_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 acquire, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  call void @_ZN3WTF20TextCodecReplacement21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  call void @_ZN3WTF20TextCodecReplacement14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  call void @_ZN3WTF12TextCodecICU21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  call void @_ZN3WTF12TextCodecICU14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  store atomic i8 1, i8* @_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 release, align 1
  %37 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %38 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %37, i64 0, i32 0
  %39 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"* %38, i8** nonnull dereferenceable(8) %2) #13
  %40 = icmp eq %"struct.WTF::KeyValuePair.5"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %39, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %32, %41, %36, %28
  %45 = phi i8* [ %30, %28 ], [ null, %32 ], [ %43, %41 ], [ null, %36 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #13
  br label %46

46:                                               ; preds = %1, %4, %44
  %47 = phi i8* [ %45, %44 ], [ null, %4 ], [ null, %1 ]
  ret i8* %47
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTFL22BuildBaseTextCodecMapsEv() unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 40) #13
  %8 = bitcast i8* %7 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #13
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  br label %9

9:                                                ; preds = %0, %3, %6
  %10 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKcNS_16TextCodecFactoryENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS7_IS4_EENS_18PartitionAllocatorEEEEES3_v, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #13
  store i8* %10, i8** bitcast (%"class.WTF::HashMap"** @_ZN3WTFL16g_text_codec_mapE to i8**), align 8
  %11 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKcS3_NS_20TextEncodingNameHashENS_10HashTraitsIS3_EES6_NS_18PartitionAllocatorEEEEES3_v, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  store i8* %11, i8** bitcast (%"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE to i8**), align 8
  tail call void @_ZN3WTF15TextCodecLatin121RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF15TextCodecLatin114RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  tail call void @_ZN3WTF13TextCodecUTF821RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF13TextCodecUTF814RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  tail call void @_ZN3WTF14TextCodecUTF1621RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF14TextCodecUTF1614RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  tail call void @_ZN3WTF20TextCodecUserDefined21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF20TextCodecUserDefined14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN3WTF31AtomicCanonicalTextEncodingNameERKNS_6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca [64 x i8], align 16
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %90, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %90, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  br i1 %14, label %24, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %18 = zext i32 %8 to i64
  %19 = tail call i8* @memchr(i8* %17, i32 0, i64 %18) #14
  %20 = icmp eq i8* %19, null
  %21 = ptrtoint i8* %19 to i64
  %22 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %23 = sub i64 %21, %22
  br i1 %20, label %39, label %35

24:                                               ; preds = %10
  %25 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %26 = zext i32 %8 to i64
  br label %27

27:                                               ; preds = %32, %24
  %28 = phi i64 [ %33, %32 ], [ 0, %24 ]
  %29 = getelementptr inbounds i16, i16* %25, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nuw nsw i64 %28, 1
  %34 = icmp eq i64 %33, %26
  br i1 %34, label %39, label %27

35:                                               ; preds = %27, %16
  %36 = phi i64 [ %23, %16 ], [ %28, %27 ]
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %90

39:                                               ; preds = %32, %35, %16
  %40 = load atomic i32, i32* %11 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %45 = zext i32 %8 to i64
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %46) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 64, i1 false) #13
  %47 = icmp eq i32 %8, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %43, %57
  %49 = phi i64 [ %58, %57 ], [ 0, %43 ]
  %50 = getelementptr inbounds i8, i8* %44, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i64 %49, 63
  br i1 %52, label %64, label %53

53:                                               ; preds = %48
  %54 = sext i8 %51 to i32
  %55 = zext i8 %51 to i32
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %49, 1
  %59 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %49
  store i8 %51, i8* %59, align 1
  %60 = icmp eq i64 %58, %45
  br i1 %60, label %61, label %48

61:                                               ; preds = %57, %43
  %62 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %45
  store i8 0, i8* %62, align 1
  %63 = call i8* @_ZN3WTF31AtomicCanonicalTextEncodingNameEPKc(i8* nonnull %46) #13
  br label %64

64:                                               ; preds = %48, %53, %61
  %65 = phi i8* [ %63, %61 ], [ null, %53 ], [ null, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %46) #13
  br label %90

66:                                               ; preds = %39
  %67 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %68 = zext i32 %8 to i64
  %69 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %69) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -86, i64 64, i1 false) #13
  %70 = icmp eq i32 %8, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %66, %81
  %72 = phi i64 [ %82, %81 ], [ 0, %66 ]
  %73 = getelementptr inbounds i16, i16* %67, i64 %72
  %74 = load i16, i16* %73, align 2
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i64 %72, 63
  br i1 %76, label %88, label %77

77:                                               ; preds = %71
  %78 = sext i8 %75 to i32
  %79 = zext i16 %74 to i32
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  %82 = add nuw nsw i64 %72, 1
  %83 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %72
  store i8 %75, i8* %83, align 1
  %84 = icmp eq i64 %82, %68
  br i1 %84, label %85, label %71

85:                                               ; preds = %81, %66
  %86 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %68
  store i8 0, i8* %86, align 1
  %87 = call i8* @_ZN3WTF31AtomicCanonicalTextEncodingNameEPKc(i8* nonnull %69) #13
  br label %88

88:                                               ; preds = %71, %77, %85
  %89 = phi i8* [ %87, %85 ], [ null, %77 ], [ null, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %69) #13
  br label %90

90:                                               ; preds = %35, %1, %6, %88, %64
  %91 = phi i8* [ %65, %64 ], [ %89, %88 ], [ null, %6 ], [ null, %35 ], [ null, %1 ]
  ret i8* %91
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3WTF30NoExtendedTextEncodingNameUsedEv() local_unnamed_addr #2 {
  %1 = load atomic i8, i8* @_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 acquire, align 1
  %2 = and i8 %1, 1
  %3 = icmp eq i8 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF29TextEncodingAliasesForTestingEv(%"class.WTF::Vector"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #13
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = tail call noalias i8* @malloc(i64 40) #13
  %10 = bitcast i8* %9 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %10, i1 zeroext false) #13
  store i8* %9, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3WTFL21EncodingRegistryMutexEvE7s_mutex) #13
  br label %11

11:                                               ; preds = %1, %5, %8
  %12 = load %"class.WTF::Mutex"*, %"class.WTF::Mutex"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN3WTFL21EncodingRegistryMutexEvE7s_mutex, i64 0, i32 0, i32 0), align 8
  %13 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %12, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #13
  %14 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %15 = icmp eq %"class.WTF::HashMap.1"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  tail call fastcc void @_ZN3WTFL22BuildBaseTextCodecMapsEv()
  br label %17

17:                                               ; preds = %11, %16
  %18 = load atomic i8, i8* @_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 acquire, align 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN3WTF20TextCodecReplacement21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF20TextCodecReplacement14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  tail call void @_ZN3WTF12TextCodecICU21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)* nonnull @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_) #13
  tail call void @_ZN3WTF12TextCodecICU14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)* nonnull @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_) #13
  store atomic i8 1, i8* @_ZN3WTF12_GLOBAL__N_128g_did_extend_text_codec_mapsE.0.0 release, align 1
  br label %22

22:                                               ; preds = %17, %21
  %23 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  tail call void @_ZN3WTF16CopyKeysToVectorIPKcS2_NS_20TextEncodingNameHashENS_10HashTraitsIS2_EES5_NS_18PartitionAllocatorENS_6VectorINS_6StringELj0ES6_EEEEvRKNS_7HashMapIT_T0_T1_T2_T3_T4_EERT5_(%"class.WTF::HashMap.1"* dereferenceable(24) %23, %"class.WTF::Vector"* dereferenceable(16) %0)
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF16CopyKeysToVectorIPKcS2_NS_20TextEncodingNameHashENS_10HashTraitsIS2_EES5_NS_18PartitionAllocatorENS_6VectorINS_6StringELj0ES6_EEEEvRKNS_7HashMapIT_T0_T1_T2_T3_T4_EERT5_(%"class.WTF::HashMap.1"* dereferenceable(24), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %5)
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %9, i64 %12
  br i1 %7, label %30, label %14

14:                                               ; preds = %2
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.5"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.5"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.5"* %21, %13
  br i1 %22, label %30, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.5"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.5"* %24, %13
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %3 to i64*
  br label %31

30:                                               ; preds = %20, %76, %86, %83, %2, %23
  ret void

31:                                               ; preds = %26, %86
  %32 = phi i32 [ 0, %26 ], [ %87, %86 ]
  %33 = phi %"struct.WTF::KeyValuePair.5"* [ %24, %26 ], [ %80, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %33, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = call i64 @strlen(i8* nonnull %35) #14
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i64 [ %38, %37 ], [ 0, %31 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %35, i64 %40) #13
  %41 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %32) #13
  %42 = load i64, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %43 = bitcast %"class.WTF::String"* %41 to i64*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #13
  br label %60

60:                                               ; preds = %39, %56, %59
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %33, i64 1
  %78 = icmp eq %"struct.WTF::KeyValuePair.5"* %77, %13
  br i1 %78, label %30, label %79

79:                                               ; preds = %76, %83
  %80 = phi %"struct.WTF::KeyValuePair.5"* [ %84, %83 ], [ %77, %76 ]
  %81 = bitcast %"struct.WTF::KeyValuePair.5"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  switch i64 %82, label %86 [
    i64 -1, label %83
    i64 0, label %83
  ]

83:                                               ; preds = %79, %79
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %80, i64 1
  %85 = icmp eq %"struct.WTF::KeyValuePair.5"* %84, %13
  br i1 %85, label %30, label %79

86:                                               ; preds = %79
  %87 = add i32 %32, 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.5"* %80, %13
  br i1 %88, label %30, label %31
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #6

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #6

declare void @_ZN3WTF15TextCodecLatin121RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3WTFL24AddToTextEncodingNameMapEPKcS1_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  %9 = ptrtoint i8* %0 to i64
  br label %10

10:                                               ; preds = %13, %2
  %11 = phi i8* [ %0, %2 ], [ %14, %13 ]
  %12 = load i8, i8* %11, align 1
  switch i8 %12, label %13 [
    i8 0, label %15
    i8 44, label %92
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i64 1
  br label %10

15:                                               ; preds = %10
  %16 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %92, label %18

18:                                               ; preds = %15
  %19 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %20 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %21 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %20, i64 0, i32 0
  %22 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"* %21, i8** nonnull dereferenceable(8) %7) #13
  %23 = icmp eq %"struct.WTF::KeyValuePair.5"* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  store i8* null, i8** %8, align 8
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %22, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  store i8* %27, i8** %8, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %24, %25
  %30 = bitcast i8** %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast i8** %8 to i64*
  store i64 %31, i64* %32, align 8
  %33 = inttoptr i64 %31 to i8*
  br label %34

34:                                               ; preds = %25, %29
  %35 = phi i8* [ %27, %25 ], [ %33, %29 ]
  %36 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast i8** %3 to i64*
  store i64 %9, i64* %37, align 8
  %38 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %39 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %38, i64 0, i32 0
  %40 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"* %39, i8** nonnull dereferenceable(8) %3) #13
  %41 = icmp eq %"struct.WTF::KeyValuePair.5"* %40, null
  br i1 %41, label %88, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %40, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  %46 = icmp eq i8* %44, %35
  %47 = or i1 %45, %46
  br i1 %47, label %88, label %48

48:                                               ; preds = %42
  %49 = load i8*, i8** %3, align 8
  %50 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #14
  %51 = icmp eq i32 %50, 0
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  br i1 %51, label %53, label %71

53:                                               ; preds = %48
  %54 = call i32 @strcmp(i8* nonnull %44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #14
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %71

56:                                               ; preds = %53
  %57 = icmp eq i8* %35, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %56
  %59 = call i64 @strlen(i8* nonnull %35) #14
  %60 = icmp ult i64 %59, 4294967296
  br i1 %60, label %62, label %61, !prof !3

61:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

62:                                               ; preds = %58
  %63 = trunc i64 %59 to i32
  br label %64

64:                                               ; preds = %62, %56
  %65 = phi i32 [ %63, %62 ], [ 0, %56 ]
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %35, i8** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %65, i32* %69, align 8
  %70 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [11 x i8]* nonnull dereferenceable(11) @.str.2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br i1 %70, label %88, label %72

71:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br label %72

72:                                               ; preds = %71, %64
  %73 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %73, label %74, label %88

74:                                               ; preds = %72
  %75 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %75) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3, i64 0, i64 0), i32 137, i32 2) #13
  %76 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %77 = bitcast %"class.std::__1::basic_ostringstream"* %76 to %"class.std::__1::basic_ostream"*
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #13
  %79 = load i8*, i8** %3, align 8
  %80 = call i64 @strlen(i8* %79) #13
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %78, i8* %79, i64 %80) #13
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #13
  %83 = call i64 @strlen(i8* nonnull %44) #13
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %82, i8* nonnull %44, i64 %83) #13
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %84, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i64 50) #13
  %86 = call i64 @strlen(i8* %35) #13
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %85, i8* %35, i64 %86) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %75) #13
  br label %88

88:                                               ; preds = %34, %42, %64, %72, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %89 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %90 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %89, i64 0, i32 0
  %91 = call { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S6_SB_EERS2_SG_EENS_18HashTableAddResultISC_S4_EEOT0_OT1_(%"class.WTF::HashTable.2"* %90, i8** nonnull dereferenceable(8) %6, i8** nonnull dereferenceable(8) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %92

92:                                               ; preds = %10, %15, %88
  ret void
}

declare void @_ZN3WTF15TextCodecLatin114RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3WTFL17AddToTextCodecMapEPKcPFNSt3__110unique_ptrINS_9TextCodecENS2_14default_deleteIS4_EEEERKNS_12TextEncodingEPKvESC_(i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"struct.WTF::TextCodecFactory", align 8
  store i8* %0, i8** %4, align 8
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %8 = load %"class.WTF::HashMap.1"*, %"class.WTF::HashMap.1"** @_ZN3WTFL24g_text_encoding_name_mapE, align 8
  %9 = getelementptr inbounds %"class.WTF::HashMap.1", %"class.WTF::HashMap.1"* %8, i64 0, i32 0
  %10 = call %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"* %9, i8** nonnull dereferenceable(8) %4) #13
  %11 = icmp eq %"struct.WTF::KeyValuePair.5"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %10, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi i8* [ %14, %12 ], [ null, %3 ]
  store i8* %16, i8** %5, align 8
  %17 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** @_ZN3WTFL16g_text_codec_mapE, align 8
  %18 = bitcast %"struct.WTF::TextCodecFactory"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"struct.WTF::TextCodecFactory", %"struct.WTF::TextCodecFactory"* %6, i64 0, i32 0
  store %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)* %1, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)** %19, align 8
  %20 = getelementptr inbounds %"struct.WTF::TextCodecFactory", %"struct.WTF::TextCodecFactory"* %6, i64 0, i32 1
  store i8* %2, i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %17, i64 0, i32 0
  %22 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_S4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %21, i8** nonnull dereferenceable(8) %5, %"struct.WTF::TextCodecFactory"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

declare void @_ZN3WTF13TextCodecUTF821RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF13TextCodecUTF814RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF14TextCodecUTF1621RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF14TextCodecUTF1614RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF20TextCodecUserDefined21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF20TextCodecUserDefined14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #6

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S6_SB_EERS2_SG_EENS_18HashTableAddResultISC_S4_EEOT0_OT1_(%"class.WTF::HashTable.2"*, i8** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.5"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* null)
  %9 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.5"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i8*, i8** %1, align 8
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = ptrtoint i8* %16 to i64
  br i1 %18, label %37, label %20

20:                                               ; preds = %10, %20
  %21 = phi i8 [ %33, %20 ], [ %17, %10 ]
  %22 = phi i32 [ %32, %20 ], [ -1640531527, %10 ]
  %23 = phi i8* [ %24, %20 ], [ %16, %10 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = zext i8 %21 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = add i32 %22, %28
  %30 = mul i32 %29, 1025
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = load i8, i8* %24, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %20

35:                                               ; preds = %20
  %36 = mul i32 %32, 9
  br label %37

37:                                               ; preds = %10, %35
  %38 = phi i32 [ -1879881855, %10 ], [ %36, %35 ]
  %39 = lshr i32 %38, 11
  %40 = xor i32 %39, %38
  %41 = mul i32 %40, 32769
  %42 = and i32 %41, %14
  %43 = zext i32 %42 to i64
  %44 = xor i32 %41, -1
  %45 = lshr i32 %41, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %86, %37
  %58 = phi i64 [ 0, %37 ], [ %89, %86 ]
  %59 = phi i64 [ %43, %37 ], [ %91, %86 ]
  %60 = phi %"struct.WTF::KeyValuePair.5"* [ null, %37 ], [ %87, %86 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %11, i64 %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %61, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = ptrtoint i8* %63 to i64
  switch i64 %64, label %65 [
    i64 0, label %92
    i64 -1, label %86
  ]

65:                                               ; preds = %57, %77
  %66 = phi i8* [ %79, %77 ], [ %63, %57 ]
  %67 = phi i8* [ %78, %77 ], [ %16, %57 ]
  %68 = load i8, i8* %66, align 1
  %69 = load i8, i8* %67, align 1
  %70 = zext i8 %68 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %69 to i64
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %72, %75
  br i1 %76, label %77, label %86

77:                                               ; preds = %65
  %78 = getelementptr inbounds i8, i8* %67, i64 1
  %79 = getelementptr inbounds i8, i8* %66, i64 1
  %80 = icmp ne i8 %68, 0
  %81 = icmp ne i8 %69, 0
  %82 = and i1 %80, %81
  br i1 %82, label %65, label %83

83:                                               ; preds = %77
  %84 = or i8 %69, %68
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %123, label %86

86:                                               ; preds = %65, %57, %83
  %87 = phi %"struct.WTF::KeyValuePair.5"* [ %60, %83 ], [ %61, %57 ], [ %60, %65 ]
  %88 = icmp eq i64 %58, 0
  %89 = select i1 %88, i64 %56, i64 %58
  %90 = add i64 %89, %59
  %91 = and i64 %90, %15
  br label %57

92:                                               ; preds = %57
  %93 = icmp eq %"struct.WTF::KeyValuePair.5"* %60, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %92
  %95 = bitcast %"struct.WTF::KeyValuePair.5"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 16, i1 false) #13
  %96 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, 2147483647
  %99 = and i32 %98, 2147483647
  %100 = and i32 %97, -2147483648
  %101 = or i32 %99, %100
  store i32 %101, i32* %96, align 8
  %102 = bitcast i8** %1 to i64*
  %103 = load i64, i64* %102, align 8
  br label %104

104:                                              ; preds = %92, %94
  %105 = phi i64 [ %103, %94 ], [ %19, %92 ]
  %106 = phi %"struct.WTF::KeyValuePair.5"* [ %60, %94 ], [ %61, %92 ]
  %107 = bitcast %"struct.WTF::KeyValuePair.5"* %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %106, i64 0, i32 1
  %109 = bitcast i8** %2 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast i8** %108 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  %115 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = add i32 %116, %114
  %118 = shl i32 %117, 1
  %119 = load i32, i32* %12, align 8
  %120 = icmp ult i32 %118, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %104
  %122 = tail call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* %106)
  br label %123

123:                                              ; preds = %83, %104, %121
  %124 = phi i8 [ 1, %104 ], [ 1, %121 ], [ 0, %83 ]
  %125 = phi %"struct.WTF::KeyValuePair.5"* [ %106, %104 ], [ %122, %121 ], [ %61, %83 ]
  %126 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } undef, %"struct.WTF::KeyValuePair.5"* %125, 0
  %127 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %126, i8 %124, 1
  ret { %"struct.WTF::KeyValuePair.5"*, i8 } %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2"*, %"struct.WTF::KeyValuePair.5"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcS3_EEEES3_v, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.5"*
  %37 = call %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSD_(%"class.WTF::HashTable.2"* %0, %"struct.WTF::KeyValuePair.5"* %36, i32 %32, %"struct.WTF::KeyValuePair.5"* %1) #13
  ret %"struct.WTF::KeyValuePair.5"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSD_(%"class.WTF::HashTable.2"*, %"struct.WTF::KeyValuePair.5"*, i32, %"struct.WTF::KeyValuePair.5"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2", align 8
  %6 = bitcast %"class.WTF::HashTable.2"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.5"* %1, %"struct.WTF::KeyValuePair.5"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.5"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.5"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.2"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.5"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.5"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.5"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.5"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.5"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2"* nonnull %5, i8** dereferenceable(8) %53) #13
  %55 = extractvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.5"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.5"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #13
  %58 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.5"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.5"* %55, %"struct.WTF::KeyValuePair.5"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.5"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.5"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.5"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.5"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i8*, i8** %1, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %25, %12 ], [ %10, %2 ]
  %14 = phi i32 [ %24, %12 ], [ -1640531527, %2 ]
  %15 = phi i8* [ %16, %12 ], [ %9, %2 ]
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  %17 = zext i8 %13 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = add i32 %14, %20
  %22 = mul i32 %21, 1025
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = load i8, i8* %16, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %12

27:                                               ; preds = %12
  %28 = mul i32 %24, 9
  br label %29

29:                                               ; preds = %27, %2
  %30 = phi i32 [ -1879881855, %2 ], [ %28, %27 ]
  %31 = lshr i32 %30, 11
  %32 = xor i32 %31, %30
  %33 = mul i32 %32, 32769
  %34 = and i32 %33, %7
  %35 = zext i32 %34 to i64
  %36 = xor i32 %33, -1
  %37 = lshr i32 %33, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %81, %29
  %50 = phi %"struct.WTF::KeyValuePair.5"* [ null, %29 ], [ %82, %81 ]
  %51 = phi i64 [ 0, %29 ], [ %84, %81 ]
  %52 = phi i64 [ %35, %29 ], [ %86, %81 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %53, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = ptrtoint i8* %55 to i64
  switch i64 %56, label %60 [
    i64 0, label %57
    i64 -1, label %81
  ]

57:                                               ; preds = %49
  %58 = icmp eq %"struct.WTF::KeyValuePair.5"* %50, null
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.5"* %53, %"struct.WTF::KeyValuePair.5"* %50
  br label %87

60:                                               ; preds = %49, %72
  %61 = phi i8* [ %74, %72 ], [ %55, %49 ]
  %62 = phi i8* [ %73, %72 ], [ %9, %49 ]
  %63 = load i8, i8* %61, align 1
  %64 = load i8, i8* %62, align 1
  %65 = zext i8 %63 to i64
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %64 to i64
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %67, %70
  br i1 %71, label %72, label %81

72:                                               ; preds = %60
  %73 = getelementptr inbounds i8, i8* %62, i64 1
  %74 = getelementptr inbounds i8, i8* %61, i64 1
  %75 = icmp ne i8 %63, 0
  %76 = icmp ne i8 %64, 0
  %77 = and i1 %75, %76
  br i1 %77, label %60, label %78

78:                                               ; preds = %72
  %79 = or i8 %64, %63
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %60, %78, %49
  %82 = phi %"struct.WTF::KeyValuePair.5"* [ %50, %78 ], [ %53, %49 ], [ %50, %60 ]
  %83 = icmp eq i64 %51, 0
  %84 = select i1 %83, i64 %48, i64 %51
  %85 = add i64 %84, %52
  %86 = and i64 %85, %8
  br label %49

87:                                               ; preds = %78, %57
  %88 = phi %"struct.WTF::KeyValuePair.5"* [ %59, %57 ], [ %53, %78 ]
  %89 = phi i8 [ 0, %57 ], [ 1, %78 ]
  %90 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } undef, %"struct.WTF::KeyValuePair.5"* %88, 0
  %91 = insertvalue { %"struct.WTF::KeyValuePair.5"*, i8 } %90, i8 %89, 1
  ret { %"struct.WTF::KeyValuePair.5"*, i8 } %91
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_S4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), %"struct.WTF::TextCodecFactory"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = inttoptr i64 %17 to i8*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi i8* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq i8* %59, %43
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  %66 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %92 = bitcast %"struct.WTF::TextCodecFactory"* %91 to i8*
  %93 = bitcast %"struct.WTF::TextCodecFactory"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #13
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %87
  %104 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %105

105:                                              ; preds = %58, %87, %103
  %106 = phi i8 [ 1, %87 ], [ 1, %103 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %89, %87 ], [ %104, %103 ], [ %60, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKcNS_16TextCodecFactoryEEEEES3_v, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #13
  br label %39

39:                                               ; preds = %31, %38
  %40 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #13
  ret %"struct.WTF::KeyValuePair"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"* nonnull %5, i8** dereferenceable(8) %53) #13
  %55 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #13
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKcNS_12KeyValuePairIS2_NS_16TextCodecFactoryEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast i8** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = inttoptr i64 %10 to i8*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi i8* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq i8* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

declare void @_ZN3WTF20TextCodecReplacement21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF20TextCodecReplacement14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF12TextCodecICU21RegisterEncodingNamesEPFvPKcS2_E(void (i8*, i8*)*) local_unnamed_addr #6

declare void @_ZN3WTF12TextCodecICU14RegisterCodecsEPFvPKcPFNSt3__110unique_ptrINS_9TextCodecENS3_14default_deleteIS5_EEEERKNS_12TextEncodingEPKvESD_E(void (i8*, %"class.WTF::TextCodec"* (%"class.WTF::TextEncoding"*, i8*)*, i8*)*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.5"* @_ZNK3WTF9HashTableIPKcNS_12KeyValuePairIS2_S2_EENS_24KeyValuePairKeyExtractorENS_20TextEncodingNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EES9_EES9_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.2"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.5"*, %"struct.WTF::KeyValuePair.5"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.5"* %4, null
  br i1 %5, label %84, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2", %"class.WTF::HashTable.2"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i8*, i8** %1, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %6, %14
  %15 = phi i8 [ %27, %14 ], [ %12, %6 ]
  %16 = phi i32 [ %26, %14 ], [ -1640531527, %6 ]
  %17 = phi i8* [ %18, %14 ], [ %11, %6 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = zext i8 %15 to i64
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = add i32 %16, %22
  %24 = mul i32 %23, 1025
  %25 = lshr i32 %24, 6
  %26 = xor i32 %25, %24
  %27 = load i8, i8* %18, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %14

29:                                               ; preds = %14
  %30 = mul i32 %26, 9
  br label %31

31:                                               ; preds = %29, %6
  %32 = phi i32 [ -1879881855, %6 ], [ %30, %29 ]
  %33 = lshr i32 %32, 11
  %34 = xor i32 %33, %32
  %35 = mul i32 %34, 32769
  %36 = and i32 %35, %9
  %37 = zext i32 %36 to i64
  %38 = xor i32 %35, -1
  %39 = lshr i32 %35, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %79, %31
  %52 = phi i64 [ 0, %31 ], [ %81, %79 ]
  %53 = phi i64 [ %37, %31 ], [ %83, %79 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.5", %"struct.WTF::KeyValuePair.5"* %54, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = ptrtoint i8* %56 to i64
  switch i64 %57, label %58 [
    i64 0, label %84
    i64 -1, label %79
  ]

58:                                               ; preds = %51, %70
  %59 = phi i8* [ %72, %70 ], [ %56, %51 ]
  %60 = phi i8* [ %71, %70 ], [ %11, %51 ]
  %61 = load i8, i8* %59, align 1
  %62 = load i8, i8* %60, align 1
  %63 = zext i8 %61 to i64
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %62 to i64
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %65, %68
  br i1 %69, label %70, label %79

70:                                               ; preds = %58
  %71 = getelementptr inbounds i8, i8* %60, i64 1
  %72 = getelementptr inbounds i8, i8* %59, i64 1
  %73 = icmp ne i8 %61, 0
  %74 = icmp ne i8 %62, 0
  %75 = and i1 %73, %74
  br i1 %75, label %58, label %76

76:                                               ; preds = %70
  %77 = or i8 %62, %61
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %58, %76, %51
  %80 = icmp eq i64 %52, 0
  %81 = select i1 %80, i64 %50, i64 %52
  %82 = add i64 %81, %53
  %83 = and i64 %82, %10
  br label %51

84:                                               ; preds = %51, %76, %2
  %85 = phi %"struct.WTF::KeyValuePair.5"* [ null, %2 ], [ %54, %76 ], [ null, %51 ]
  ret %"struct.WTF::KeyValuePair.5"* %85
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %91, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %33
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %10
  br i1 %35, label %91, label %15

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %38, %1
  br i1 %39, label %40, label %79

40:                                               ; preds = %36
  %41 = lshr i32 %38, 2
  %42 = add nuw i32 %38, 1
  %43 = add i32 %42, %41
  %44 = icmp ugt i32 %43, 4
  %45 = select i1 %44, i32 %43, i32 4
  %46 = icmp ugt i32 %45, %1
  %47 = select i1 %46, i32 %45, i32 %1
  %48 = icmp ult i32 %38, %47
  br i1 %48, label %49, label %79, !prof !3

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %52 = icmp eq %"class.WTF::String"* %51, null
  %53 = zext i32 %47 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %53) #13
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %52, label %56, label %61

56:                                               ; preds = %49
  %57 = ptrtoint i8* %55 to i64
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = lshr i64 %54, 3
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %37, align 8
  br label %79

61:                                               ; preds = %49
  %62 = lshr i64 %54, 3
  %63 = ptrtoint i8* %55 to i64
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %65 = icmp ne i8* %55, null
  %66 = icmp ne %"class.WTF::String"* %64, null
  %67 = and i1 %65, %66
  %68 = bitcast %"class.WTF::String"* %64 to i8*
  br i1 %67, label %69, label %75, !prof !3

69:                                               ; preds = %61
  %70 = load i32, i32* %3, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %68, i64 %72, i1 false) #13
  %73 = bitcast %"class.WTF::Vector"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %69, %61
  %76 = phi i8* [ %74, %69 ], [ %68, %61 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #13
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %63, i64* %77 monotonic, align 8
  %78 = trunc i64 %62 to i32
  store i32 %78, i32* %37, align 8
  br label %79

79:                                               ; preds = %75, %56, %40, %36
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** %80, align 8
  %82 = load i32, i32* %3, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %83
  %85 = zext i32 %1 to i64
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %85
  %87 = bitcast %"class.WTF::String"* %84 to i8*
  %88 = ptrtoint %"class.WTF::String"* %86 to i64
  %89 = ptrtoint %"class.WTF::String"* %84 to i64
  %90 = sub i64 %88, %89
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 %90, i1 false) #13
  br label %91

91:                                               ; preds = %33, %6, %79
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
