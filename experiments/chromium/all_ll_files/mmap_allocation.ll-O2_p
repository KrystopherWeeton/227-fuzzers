; ModuleID = '../../third_party/tflite/src/tensorflow/lite/mmap_allocation.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/mmap_allocation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.tflite::MMAPAllocation" = type { %"class.tflite::Allocation.base", i32, i8*, i64 }
%"class.tflite::Allocation.base" = type <{ i32 (...)**, %"class.tflite::ErrorReporter"*, i32 }>
%"class.tflite::ErrorReporter" = type { i32 (...)** }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

@_ZTVN6tflite14MMAPAllocationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tflite::MMAPAllocation"*)* @_ZN6tflite14MMAPAllocationD2Ev to i8*), i8* bitcast (void (%"class.tflite::MMAPAllocation"*)* @_ZN6tflite14MMAPAllocationD0Ev to i8*), i8* bitcast (i8* (%"class.tflite::MMAPAllocation"*)* @_ZNK6tflite14MMAPAllocation4baseEv to i8*), i8* bitcast (i64 (%"class.tflite::MMAPAllocation"*)* @_ZNK6tflite14MMAPAllocation5bytesEv to i8*), i8* bitcast (i1 (%"class.tflite::MMAPAllocation"*)* @_ZNK6tflite14MMAPAllocation5validEv to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"Could not open '%s'.\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Mmap of '%s' failed.\00", align 1

@_ZN6tflite14MMAPAllocationC1EPKcPNS_13ErrorReporterE = hidden unnamed_addr alias void (%"class.tflite::MMAPAllocation"*, i8*, %"class.tflite::ErrorReporter"*), void (%"class.tflite::MMAPAllocation"*, i8*, %"class.tflite::ErrorReporter"*)* @_ZN6tflite14MMAPAllocationC2EPKcPNS_13ErrorReporterE
@_ZN6tflite14MMAPAllocationD1Ev = hidden unnamed_addr alias void (%"class.tflite::MMAPAllocation"*), void (%"class.tflite::MMAPAllocation"*)* @_ZN6tflite14MMAPAllocationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite14MMAPAllocationC2EPKcPNS_13ErrorReporterE(%"class.tflite::MMAPAllocation"* nocapture, i8*, %"class.tflite::ErrorReporter"*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.stat, align 8
  %5 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 0, i32 1
  store %"class.tflite::ErrorReporter"* %2, %"class.tflite::ErrorReporter"** %6, align 8
  %7 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite14MMAPAllocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 1
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 2
  store i8* inttoptr (i64 -1 to i8*), i8** %9, align 8
  %10 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 3
  store i64 0, i64* %10, align 8
  %11 = tail call i32 (i8*, i32, ...) @open64(i8* %1, i32 0) #8
  store i32 %11, i32* %8, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = load %"class.tflite::ErrorReporter"*, %"class.tflite::ErrorReporter"** %6, align 8
  %15 = tail call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* %1) #8
  br label %29

16:                                               ; preds = %3
  %17 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 144, i1 false)
  %18 = bitcast %struct.stat* %4 to %struct.stat64*
  %19 = call i32 @__fxstat64(i32 1, i32 %11, %struct.stat64* nonnull %18) #8
  %20 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 8
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %10, align 8
  %22 = load i32, i32* %8, align 4
  %23 = call i8* @mmap64(i8* null, i64 %21, i32 1, i32 1, i32 %22, i64 0) #8
  store i8* %23, i8** %9, align 8
  %24 = icmp eq i8* %23, inttoptr (i64 -1 to i8*)
  br i1 %24, label %25, label %28

25:                                               ; preds = %16
  %26 = load %"class.tflite::ErrorReporter"*, %"class.tflite::ErrorReporter"** %6, align 8
  %27 = call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* %1) #8
  br label %28

28:                                               ; preds = %16, %25
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #8
  br label %29

29:                                               ; preds = %28, %13
  ret void
}

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #1

declare i32 @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite14MMAPAllocationD2Ev(%"class.tflite::MMAPAllocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite14MMAPAllocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, inttoptr (i64 -1 to i8*)
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = tail call i32 @munmap(i8* %4, i64 %8) #8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @close(i32 %12) #8
  br label %16

16:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite14MMAPAllocationD0Ev(%"class.tflite::MMAPAllocation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite14MMAPAllocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, inttoptr (i64 -1 to i8*)
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = tail call i32 @munmap(i8* %4, i64 %8) #8
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @close(i32 %12) #8
  br label %16

16:                                               ; preds = %10, %14
  %17 = bitcast %"class.tflite::MMAPAllocation"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK6tflite14MMAPAllocation4baseEv(%"class.tflite::MMAPAllocation"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6tflite14MMAPAllocation5bytesEv(%"class.tflite::MMAPAllocation"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6tflite14MMAPAllocation5validEv(%"class.tflite::MMAPAllocation"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.tflite::MMAPAllocation", %"class.tflite::MMAPAllocation"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, inttoptr (i64 -1 to i8*)
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6tflite14MMAPAllocation11IsSupportedEv() local_unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
