; ModuleID = '../../chrome/browser/web_applications/extensions/bookmark_app_util.cc'
source_filename = "../../chrome/browser/web_applications/extensions/bookmark_app_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.52", %"class.std::__1::map.93", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.13" }
%"class.std::__1::__tree.13" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.34" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.39" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i32*, i32*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.58" }
%"union.absl::variant_internal::DestructibleUnionImpl.58" = type { %"union.absl::variant_internal::DestructibleUnionImpl.59" }
%"union.absl::variant_internal::DestructibleUnionImpl.59" = type { %"union.absl::variant_internal::DestructibleUnionImpl.60" }
%"union.absl::variant_internal::DestructibleUnionImpl.60" = type { %"union.absl::variant_internal::DestructibleUnionImpl.61" }
%"union.absl::variant_internal::DestructibleUnionImpl.61" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.extensions::ExtensionPrefs" = type { %class.KeyedService, %"class.content::BrowserContext"*, %class.PrefService*, %"class.base::FilePath", %class.ExtensionPrefValueMap*, %"class.base::Clock"*, i8, [7 x i8], %"class.base::ObserverList" }
%class.KeyedService = type { i32 (...)** }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %class.scoped_refptr.133, %"class.base::RepeatingCallback.134", %class.scoped_refptr.135, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.115", i8, %"class.std::__1::unique_ptr.124" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.114", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.114" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.115" = type { %"class.std::__1::__tree.116" }
%"class.std::__1::__tree.116" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.133 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.134" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.135 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.136", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.151", [4 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { float }
%class.ExtensionPrefValueMap = type opaque
%"class.base::Clock" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.154", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.156" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::ExtensionSet::const_iterator" = type { %"class.std::__1::__map_const_iterator" }
%"class.std::__1::__map_const_iterator" = type { %"class.std::__1::__tree_const_iterator" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList.175", %"class.content::BrowserContext"* }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.166" }
%"class.std::__1::map.166" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.175" = type <{ %"class.std::__1::vector.154", %"class.base::LinkedList.176", i64, i32, [4 x i8] }>
%"class.base::LinkedList.176" = type { %"class.base::LinkNode.177" }
%"class.base::LinkNode.177" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%class.ExtensionIconSet = type { %"class.std::__1::map.187" }
%"class.std::__1::map.187" = type { %"class.std::__1::__tree.188" }
%"class.std::__1::__tree.188" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %struct.IconSizes*, %struct.IconSizes*, %"class.std::__1::__compressed_pair.203" }
%struct.IconSizes = type { %"class.std::__1::vector.180", %"class.std::__1::vector.180", %"class.std::__1::vector.180" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %struct.IconSizes* }
%"class.std::__1::map.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.2" }

$_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm = comdat any

$_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

@_ZN10extensions12_GLOBAL__N_121kPrefLocallyInstalledE = internal constant [17 x i8] c"locallyInstalled\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions32SetBookmarkAppIsLocallyInstalledEPN7content14BrowserContextEPKNS_9ExtensionEb(%"class.content::BrowserContext"*, %"class.extensions::Extension"*, i1 zeroext) local_unnamed_addr #0 {
  %4 = tail call %"class.extensions::ExtensionPrefs"* @_ZN10extensions14ExtensionPrefs3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #10
  %6 = tail call i8* @_Znwm(i64 32) #11
  %7 = bitcast i8* %6 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %7, i1 zeroext %2) #10
  tail call void @_ZN10extensions14ExtensionPrefs19UpdateExtensionPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EENS1_10unique_ptrINSA_5ValueENS1_14default_deleteISE_EEEE(%"class.extensions::ExtensionPrefs"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN10extensions12_GLOBAL__N_121kPrefLocallyInstalledE, i64 0, i64 0), i64 16, %"class.base::Value"* nonnull %7) #10
  ret void
}

declare %"class.extensions::ExtensionPrefs"* @_ZN10extensions14ExtensionPrefs3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare void @_ZN10extensions14ExtensionPrefs19UpdateExtensionPrefERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EENS1_10unique_ptrINSA_5ValueENS1_14default_deleteISE_EEEE(%"class.extensions::ExtensionPrefs"*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i64, %"class.base::Value"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions29BookmarkAppIsLocallyInstalledEPN7content14BrowserContextEPKNS_9ExtensionE(%"class.content::BrowserContext"*, %"class.extensions::Extension"*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = tail call %"class.extensions::ExtensionPrefs"* @_ZN10extensions14ExtensionPrefs3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #10
  %6 = call zeroext i1 @_ZNK10extensions14ExtensionPrefs17ReadPrefAsBooleanERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEPb(%"class.extensions::ExtensionPrefs"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN10extensions12_GLOBAL__N_121kPrefLocallyInstalledE, i64 0, i64 0), i64 16, i8* nonnull %3) #10
  %7 = load i8, i8* %3, align 1
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %6, true
  %10 = or i1 %8, %9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions29BookmarkAppIsLocallyInstalledEPKNS_14ExtensionPrefsEPKNS_9ExtensionE(%"class.extensions::ExtensionPrefs"*, %"class.extensions::Extension"*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #10
  %5 = call zeroext i1 @_ZNK10extensions14ExtensionPrefs17ReadPrefAsBooleanERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEPb(%"class.extensions::ExtensionPrefs"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN10extensions12_GLOBAL__N_121kPrefLocallyInstalledE, i64 0, i64 0), i64 16, i8* nonnull %3) #10
  %6 = load i8, i8* %3, align 1
  %7 = icmp ne i8 %6, 0
  %8 = xor i1 %5, true
  %9 = or i1 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK10extensions14ExtensionPrefs17ReadPrefAsBooleanERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEPb(%"class.extensions::ExtensionPrefs"*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions31IsInNavigationScopeForLaunchUrlERK4GURLS2_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %class.GURL, align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  call void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* nonnull sret %3, %class.GURL* %0) #10
  %6 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %3) #10
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %3) #10
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %18 to i64
  %25 = select i1 %19, i64 %23, i64 %24
  %26 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #10
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %36 = select i1 %32, i8* %34, i8* %35
  store i8* %36, i8** %28, align 8
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %31 to i64
  %41 = select i1 %32, i64 %39, i64 %40
  store i64 %41, i64* %37, align 8
  %42 = shl i64 %14, 32
  %43 = ashr exact i64 %42, 32
  %44 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %43)
  %45 = extractvalue { i8*, i64 } %44, 1
  %46 = icmp eq i64 %25, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %2
  %48 = extractvalue { i8*, i64 } %44, 0
  %49 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %50 = select i1 %19, i8* %21, i8* %49
  %51 = call i32 @bcmp(i8* %50, i8* %48, i64 %25) #10
  %52 = icmp eq i32 %51, 0
  br label %53

53:                                               ; preds = %2, %47
  %54 = phi i1 [ false, %2 ], [ %52, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  ret i1 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4GURL18GetWithoutFilenameEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions30CountUserInstalledBookmarkAppsEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.extensions::ExtensionSet::const_iterator", align 8
  %4 = alloca %"class.extensions::ExtensionSet::const_iterator", align 8
  %5 = tail call %"class.extensions::ExtensionPrefs"* @_ZN10extensions14ExtensionPrefs3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  %6 = tail call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  %7 = bitcast %"class.extensions::ExtensionSet::const_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.extensions::ExtensionSet::const_iterator", %"class.extensions::ExtensionSet::const_iterator"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.extensions::ExtensionRegistry", %"class.extensions::ExtensionRegistry"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8, !noalias !2
  call void @_ZN10extensions12ExtensionSet14const_iteratorC1ENSt3__120__map_const_iteratorINS2_21__tree_const_iteratorINS2_12__value_typeINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE13scoped_refptrIKNS_9ExtensionEEEEPNS2_11__tree_nodeISG_PvEElEEEE(%"class.extensions::ExtensionSet::const_iterator"* nonnull %3, %"class.std::__1::__tree_end_node"* %10) #10
  %11 = bitcast %"class.extensions::ExtensionSet::const_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.extensions::ExtensionSet::const_iterator", %"class.extensions::ExtensionSet::const_iterator"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %12, align 8
  %13 = getelementptr inbounds %"class.extensions::ExtensionRegistry", %"class.extensions::ExtensionRegistry"* %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN10extensions12ExtensionSet14const_iteratorC1ENSt3__120__map_const_iteratorINS2_21__tree_const_iteratorINS2_12__value_typeINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE13scoped_refptrIKNS_9ExtensionEEEEPNS2_11__tree_nodeISG_PvEElEEEE(%"class.extensions::ExtensionSet::const_iterator"* nonnull %4, %"class.std::__1::__tree_end_node"* %13) #10
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %16 = icmp eq %"class.std::__1::__tree_end_node"* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.extensions::ExtensionSet::const_iterator"* %3 to %"class.std::__1::__tree_node_base"**
  br label %21

19:                                               ; preds = %84, %1
  %20 = phi i32 [ 0, %1 ], [ %50, %84 ]
  call void @_ZN10extensions12ExtensionSet14const_iteratorD1Ev(%"class.extensions::ExtensionSet::const_iterator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN10extensions12ExtensionSet14const_iteratorD1Ev(%"class.extensions::ExtensionSet::const_iterator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret i32 %20

21:                                               ; preds = %17, %84
  %22 = phi %"class.std::__1::__tree_end_node"* [ %14, %17 ], [ %85, %84 ]
  %23 = phi i32 [ 0, %17 ], [ %50, %84 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 7
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.extensions::Extension"**
  %26 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %25, align 8
  %27 = icmp eq %"class.extensions::Extension"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %21, %28
  %32 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %26, i64 0, i32 23
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 -86, i8* %2, align 1
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %26) #10
  %38 = call zeroext i1 @_ZNK10extensions14ExtensionPrefs17ReadPrefAsBooleanERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEPb(%"class.extensions::ExtensionPrefs"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN10extensions12_GLOBAL__N_121kPrefLocallyInstalledE, i64 0, i64 0), i64 16, i8* nonnull %2) #10
  %39 = load i8, i8* %2, align 1
  %40 = icmp ne i8 %39, 0
  %41 = xor i1 %38, true
  %42 = or i1 %40, %41
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load i32, i32* %32, align 8
  %45 = lshr i32 %44, 7
  %46 = and i32 %45, 1
  %47 = xor i32 %46, 1
  %48 = add nsw i32 %47, %23
  br label %49

49:                                               ; preds = %31, %36, %43
  %50 = phi i32 [ %48, %43 ], [ %23, %31 ], [ %23, %36 ]
  br i1 %27, label %57, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  call void @_ZN10extensions9ExtensionD1Ev(%"class.extensions::Extension"* nonnull %26) #10
  %56 = bitcast %"class.extensions::Extension"* %26 to i8*
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %49, %51, %55
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %68

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %58
  br i1 %67, label %84, label %75

68:                                               ; preds = %57, %68
  %69 = phi %"class.std::__1::__tree_node_base"* [ %71, %68 ], [ %60, %57 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %68

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0
  br label %84

75:                                               ; preds = %62, %75
  %76 = phi %"class.std::__1::__tree_end_node"** [ %79, %75 ], [ %63, %62 ]
  %77 = bitcast %"class.std::__1::__tree_end_node"** %76 to %"class.std::__1::__tree_node_base"**
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 2
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %78
  br i1 %83, label %84, label %75

84:                                               ; preds = %75, %62, %73
  %85 = phi %"class.std::__1::__tree_end_node"* [ %74, %73 ], [ %64, %62 ], [ %80, %75 ]
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %8, align 8
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %87 = icmp eq %"class.std::__1::__tree_end_node"* %85, %86
  br i1 %87, label %19, label %21
}

declare %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions12ExtensionSet14const_iteratorD1Ev(%"class.extensions::ExtensionSet::const_iterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions33GetBookmarkAppDownloadedIconSizesEPKNS_9ExtensionE(%"class.std::__1::vector.180"* noalias sret, %"class.extensions::Extension"*) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(24) %class.ExtensionIconSet* @_ZN10extensions9IconsInfo8GetIconsEPKNS_9ExtensionE(%"class.extensions::Extension"* %1) #10
  %4 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.180"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %class.ExtensionIconSet, %class.ExtensionIconSet* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i32** %5 to i64*
  %10 = bitcast %"class.std::__1::vector.180"* %0 to i64*
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %8, 4611686018427387903
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

15:                                               ; preds = %12
  %16 = bitcast i32** %4 to i64*
  %17 = shl i64 %8, 2
  %18 = tail call i8* @_Znwm(i64 %17) #11
  %19 = bitcast i8* %18 to i32*
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds i32, i32* %19, i64 %8
  %22 = ptrtoint i32* %21 to i64
  %23 = ptrtoint i8* %18 to i64
  store i64 %23, i64* %10, align 8
  store i64 %20, i64* %16, align 8
  store i64 %22, i64* %9, align 8
  br label %24

24:                                               ; preds = %15, %2
  %25 = phi i64 [ 0, %2 ], [ %20, %15 ]
  %26 = phi i32* [ null, %2 ], [ %21, %15 ]
  %27 = phi i32* [ null, %2 ], [ %19, %15 ]
  %28 = getelementptr inbounds %class.ExtensionIconSet, %class.ExtensionIconSet* %3, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %class.ExtensionIconSet, %class.ExtensionIconSet* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = bitcast i32** %4 to i64*
  br label %35

34:                                               ; preds = %121, %24
  ret void

35:                                               ; preds = %124, %32
  %36 = phi i64 [ %25, %32 ], [ %127, %124 ]
  %37 = phi i32* [ %26, %32 ], [ %126, %124 ]
  %38 = phi i32* [ %27, %32 ], [ %125, %124 ]
  %39 = phi %"class.std::__1::__tree_end_node"* [ %29, %32 ], [ %122, %124 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to i32*
  %42 = icmp eq i32* %38, %37
  br i1 %42, label %47, label %43

43:                                               ; preds = %35
  %44 = load i32, i32* %41, align 4
  store i32 %44, i32* %38, align 4
  %45 = getelementptr inbounds i32, i32* %38, i64 1
  %46 = ptrtoint i32* %45 to i64
  store i64 %46, i64* %33, align 8
  br label %93

47:                                               ; preds = %35
  %48 = ptrtoint i32* %37 to i64
  %49 = load i64, i64* %10, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector.180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #12
  unreachable

56:                                               ; preds = %47
  %57 = icmp ult i64 %51, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %56
  %59 = ashr exact i64 %50, 1
  %60 = icmp ult i64 %59, %52
  %61 = select i1 %60, i64 %52, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #12
  unreachable

66:                                               ; preds = %63, %56
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %56 ]
  %68 = shl i64 %67, 2
  %69 = tail call i8* @_Znwm(i64 %68) #11
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i32* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds i32, i32* %73, i64 %51
  %75 = getelementptr inbounds i32, i32* %73, i64 %72
  %76 = ptrtoint i32* %75 to i64
  %77 = load i32, i32* %41, align 4
  store i32 %77, i32* %74, align 4
  %78 = getelementptr inbounds i32, i32* %74, i64 1
  %79 = ptrtoint i32* %78 to i64
  %80 = sub i64 %36, %49
  %81 = ashr exact i64 %80, 2
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i32, i32* %74, i64 %82
  %84 = ptrtoint i32* %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %71
  %87 = bitcast i32* %83 to i8*
  %88 = inttoptr i64 %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 %80, i1 false) #10
  br label %89

89:                                               ; preds = %86, %71
  store i64 %84, i64* %10, align 8
  store i64 %79, i64* %33, align 8
  store i64 %76, i64* %9, align 8
  %90 = icmp eq i64 %49, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %49 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %43, %89, %91
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %97, label %105

97:                                               ; preds = %93
  %98 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.std::__1::__tree_end_node"**
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  br i1 %104, label %121, label %112

105:                                              ; preds = %93, %105
  %106 = phi %"class.std::__1::__tree_node_base"* [ %108, %105 ], [ %95, %93 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %105

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 0
  br label %121

112:                                              ; preds = %97, %112
  %113 = phi %"class.std::__1::__tree_end_node"** [ %116, %112 ], [ %100, %97 ]
  %114 = bitcast %"class.std::__1::__tree_end_node"** %113 to %"class.std::__1::__tree_node_base"**
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, %115
  br i1 %120, label %121, label %112

121:                                              ; preds = %112, %97, %110
  %122 = phi %"class.std::__1::__tree_end_node"* [ %111, %110 ], [ %101, %97 ], [ %117, %112 ]
  %123 = icmp eq %"class.std::__1::__tree_end_node"* %122, %30
  br i1 %123, label %34, label %124

124:                                              ; preds = %121
  %125 = load i32*, i32** %4, align 8
  %126 = load i32*, i32** %5, align 8
  %127 = ptrtoint i32* %125 to i64
  br label %35
}

declare dereferenceable(24) %class.ExtensionIconSet* @_ZN10extensions9IconsInfo8GetIconsEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions47GetBookmarkAppDownloadedShortcutsMenuIconsSizesEPKNS_9ExtensionE(%"class.std::__1::vector.201"* noalias sret, %"class.extensions::Extension"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.180", align 16
  %4 = alloca %struct.IconSizes, align 8
  %5 = alloca %"class.std::__1::vector.180", align 16
  %6 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.201"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  %9 = tail call dereferenceable(24) %"class.std::__1::map.208"* @_ZN10extensions23WebAppShortcutIconsInfo16GetShortcutIconsEPKNS_9ExtensionE(%"class.extensions::Extension"* %1) #10
  %10 = getelementptr inbounds %"class.std::__1::map.208", %"class.std::__1::map.208"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  tail call void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.201"* %0, i64 %11)
  %12 = getelementptr inbounds %"class.std::__1::map.208", %"class.std::__1::map.208"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::map.208", %"class.std::__1::map.208"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %33, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector.180"* %3 to i8*
  %18 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %3, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i32** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.180"* %3 to i64*
  %23 = bitcast i32** %19 to i64*
  %24 = bitcast %struct.IconSizes* %4 to i8*
  %25 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast i32** %27 to i64*
  %29 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 0
  %30 = bitcast %struct.IconSizes** %6 to i64*
  %31 = bitcast %"class.std::__1::vector.180"* %3 to <2 x i64>*
  %32 = bitcast %"class.std::__1::vector.180"* %5 to <2 x i64>*
  br label %34

33:                                               ; preds = %110, %2
  ret void

34:                                               ; preds = %16, %110
  %35 = phi %"class.std::__1::__tree_end_node"* [ %13, %16 ], [ %111, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 24, i1 false) #10
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 5
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 7
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = icmp ugt i64 %39, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @abort() #12
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %39, 2
  %46 = call i8* @_Znwm(i64 %45) #11
  %47 = bitcast i8* %46 to i32*
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds i32, i32* %47, i64 %39
  %50 = ptrtoint i32* %49 to i64
  %51 = ptrtoint i8* %46 to i64
  store i64 %51, i64* %22, align 16
  store i64 %48, i64* %23, align 8
  store i64 %50, i64* %21, align 16
  br label %52

52:                                               ; preds = %44, %34
  %53 = phi i64 [ 0, %34 ], [ %48, %44 ]
  %54 = phi i32* [ null, %34 ], [ %49, %44 ]
  %55 = phi i32* [ null, %34 ], [ %47, %44 ]
  %56 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 6
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %57, %58
  br i1 %59, label %60, label %113

60:                                               ; preds = %202, %52
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 72, i1 false)
  call void @_ZN9IconSizesC1Ev(%struct.IconSizes* nonnull %4) #10
  %61 = load <2 x i64>, <2 x i64>* %31, align 16
  store <2 x i64> %61, <2 x i64>* %32, align 16
  %62 = load i64, i64* %21, align 16
  store i64 %62, i64* %28, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 24, i1 false) #10
  call void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes* nonnull %4, i32 0, %"class.std::__1::vector.180"* nonnull %5) #10
  %63 = load i32*, i32** %29, align 16
  %64 = icmp eq i32* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = ptrtoint i32* %63 to i64
  store i64 %66, i64* %26, align 8
  %67 = bitcast i32* %63 to i8*
  call void @_ZdlPv(i8* %67) #11
  br label %68

68:                                               ; preds = %60, %65
  %69 = load %struct.IconSizes*, %struct.IconSizes** %6, align 8
  %70 = load %struct.IconSizes*, %struct.IconSizes** %7, align 8
  %71 = icmp ult %struct.IconSizes* %69, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %69, %struct.IconSizes* nonnull dereferenceable(72) %4) #10
  %73 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %69, i64 1
  %74 = ptrtoint %struct.IconSizes* %73 to i64
  store i64 %74, i64* %30, align 8
  br label %76

75:                                               ; preds = %68
  call void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.201"* %0, %struct.IconSizes* nonnull dereferenceable(72) %4) #10
  br label %76

76:                                               ; preds = %72, %75
  call void @_ZN9IconSizesD1Ev(%struct.IconSizes* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #10
  %77 = load i32*, i32** %18, align 16
  %78 = icmp eq i32* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = ptrtoint i32* %77 to i64
  store i64 %80, i64* %23, align 8
  %81 = bitcast i32* %77 to i8*
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 1, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 2
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_end_node"**
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %87
  br i1 %93, label %110, label %101

94:                                               ; preds = %82, %94
  %95 = phi %"class.std::__1::__tree_node_base"* [ %97, %94 ], [ %84, %82 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %94

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0
  br label %110

101:                                              ; preds = %86, %101
  %102 = phi %"class.std::__1::__tree_end_node"** [ %105, %101 ], [ %89, %86 ]
  %103 = bitcast %"class.std::__1::__tree_end_node"** %102 to %"class.std::__1::__tree_node_base"**
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %104
  br i1 %109, label %110, label %101

110:                                              ; preds = %101, %86, %99
  %111 = phi %"class.std::__1::__tree_end_node"* [ %100, %99 ], [ %90, %86 ], [ %106, %101 ]
  %112 = icmp eq %"class.std::__1::__tree_end_node"* %111, %14
  br i1 %112, label %33, label %34

113:                                              ; preds = %52, %205
  %114 = phi i64 [ %208, %205 ], [ %53, %52 ]
  %115 = phi i32* [ %207, %205 ], [ %54, %52 ]
  %116 = phi i32* [ %206, %205 ], [ %55, %52 ]
  %117 = phi %"class.std::__1::__tree_end_node"* [ %203, %205 ], [ %57, %52 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 4
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to i32*
  %120 = icmp ult i32* %116, %115
  %121 = ptrtoint i32* %115 to i64
  br i1 %120, label %122, label %126

122:                                              ; preds = %113
  %123 = load i32, i32* %119, align 4
  store i32 %123, i32* %116, align 4
  %124 = getelementptr inbounds i32, i32* %116, i64 1
  %125 = ptrtoint i32* %124 to i64
  store i64 %125, i64* %23, align 8
  br label %174

126:                                              ; preds = %113
  %127 = ptrtoint i32* %116 to i64
  %128 = load i64, i64* %22, align 16
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 2
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 4611686018427387903
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::vector.180"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %134) #12
  unreachable

135:                                              ; preds = %126
  %136 = sub i64 %121, %128
  %137 = ashr exact i64 %136, 2
  %138 = icmp ult i64 %137, 2305843009213693951
  br i1 %138, label %139, label %147

139:                                              ; preds = %135
  %140 = ashr exact i64 %136, 1
  %141 = icmp ult i64 %140, %131
  %142 = select i1 %141, i64 %131, i64 %140
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %139
  %145 = icmp ugt i64 %142, 4611686018427387903
  br i1 %145, label %146, label %147

146:                                              ; preds = %144
  call void @abort() #12
  unreachable

147:                                              ; preds = %144, %135
  %148 = phi i64 [ %142, %144 ], [ 4611686018427387903, %135 ]
  %149 = shl i64 %148, 2
  %150 = call i8* @_Znwm(i64 %149) #11
  %151 = bitcast i8* %150 to i32*
  br label %152

152:                                              ; preds = %147, %139
  %153 = phi i64 [ %148, %147 ], [ 0, %139 ]
  %154 = phi i32* [ %151, %147 ], [ null, %139 ]
  %155 = getelementptr inbounds i32, i32* %154, i64 %130
  %156 = getelementptr inbounds i32, i32* %154, i64 %153
  %157 = ptrtoint i32* %156 to i64
  %158 = load i32, i32* %119, align 4
  store i32 %158, i32* %155, align 4
  %159 = getelementptr inbounds i32, i32* %155, i64 1
  %160 = ptrtoint i32* %159 to i64
  %161 = sub i64 %114, %128
  %162 = ashr exact i64 %161, 2
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds i32, i32* %155, i64 %163
  %165 = ptrtoint i32* %164 to i64
  %166 = icmp sgt i64 %161, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %152
  %168 = bitcast i32* %164 to i8*
  %169 = inttoptr i64 %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 %161, i1 false) #10
  br label %170

170:                                              ; preds = %167, %152
  store i64 %165, i64* %22, align 16
  store i64 %160, i64* %23, align 8
  store i64 %157, i64* %21, align 16
  %171 = icmp eq i64 %128, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = inttoptr i64 %128 to i8*
  call void @_ZdlPv(i8* %173) #11
  br label %174

174:                                              ; preds = %122, %170, %172
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 1, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node_base"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 2
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_end_node"**
  %182 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, %179
  br i1 %185, label %202, label %193

186:                                              ; preds = %174, %186
  %187 = phi %"class.std::__1::__tree_node_base"* [ %189, %186 ], [ %176, %174 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %186

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0
  br label %202

193:                                              ; preds = %178, %193
  %194 = phi %"class.std::__1::__tree_end_node"** [ %197, %193 ], [ %181, %178 ]
  %195 = bitcast %"class.std::__1::__tree_end_node"** %194 to %"class.std::__1::__tree_node_base"**
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %196, i64 0, i32 2
  %198 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 0, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, %196
  br i1 %201, label %202, label %193

202:                                              ; preds = %193, %178, %191
  %203 = phi %"class.std::__1::__tree_end_node"* [ %192, %191 ], [ %182, %178 ], [ %198, %193 ]
  %204 = icmp eq %"class.std::__1::__tree_end_node"* %203, %58
  br i1 %204, label %60, label %205

205:                                              ; preds = %202
  %206 = load i32*, i32** %19, align 8
  %207 = load i32*, i32** %20, align 16
  %208 = ptrtoint i32* %206 to i64
  br label %113
}

declare dereferenceable(24) %"class.std::__1::map.208"* @_ZN10extensions23WebAppShortcutIconsInfo16GetShortcutIconsEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.201"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.IconSizes** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.201"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %struct.IconSizes*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %struct.IconSizes** %13 to i64*
  %15 = icmp ugt i64 %1, 256204778801521550
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 72
  %21 = mul i64 %1, 72
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %struct.IconSizes*
  %24 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %23, i64 %20
  %25 = ptrtoint %struct.IconSizes* %24 to i64
  %26 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %23, i64 %1
  %27 = ptrtoint %struct.IconSizes* %26 to i64
  %28 = inttoptr i64 %18 to %struct.IconSizes*
  %29 = icmp eq %struct.IconSizes* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %struct.IconSizes* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %struct.IconSizes* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %31, i64 -1
  %34 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %32, i64 -1
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %33, %struct.IconSizes* dereferenceable(72) %34) #10
  %35 = icmp eq %struct.IconSizes* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %struct.IconSizes* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %struct.IconSizes*, %struct.IconSizes** %13, align 8
  %40 = inttoptr i64 %38 to %struct.IconSizes*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %struct.IconSizes* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %struct.IconSizes* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %struct.IconSizes* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %struct.IconSizes* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %48, i64 -1
  tail call void @_ZN9IconSizesD1Ev(%struct.IconSizes* %49) #10
  %50 = icmp eq %struct.IconSizes* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare void @_ZN9IconSizesC1Ev(%struct.IconSizes*) unnamed_addr #1

declare void @_ZN9IconSizes18SetSizesForPurposeEN5blink5mojom29ManifestImageResource_PurposeENSt3__16vectorIiNS3_9allocatorIiEEEE(%struct.IconSizes*, i32, %"class.std::__1::vector.180"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9IconSizesD1Ev(%struct.IconSizes*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10extensions40GetLaunchContainerAndTypeFromDisplayModeEN5blink5mojom11DisplayModeE(i32) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZN7web_app38ConvertDisplayModeToAppLaunchContainerEN5blink5mojom11DisplayModeE(i32 %0) #10
  switch i32 %2, label %8 [
    i32 3, label %9
    i32 1, label %3
    i32 2, label %4
    i32 0, label %5
  ]

3:                                                ; preds = %1
  br label %9

4:                                                ; preds = %1
  br label %9

5:                                                ; preds = %1
  %6 = icmp eq i32 %0, 4
  %7 = select i1 %6, i64 8589934592, i64 12884901888
  br label %9

8:                                                ; preds = %1
  unreachable

9:                                                ; preds = %1, %5, %4, %3
  %10 = phi i64 [ 2, %5 ], [ 2, %4 ], [ 1, %3 ], [ 3, %1 ]
  %11 = phi i64 [ %7, %5 ], [ 4294967296, %4 ], [ 4294967296, %3 ], [ 4294967296, %1 ]
  %12 = or i64 %11, %10
  ret i64 %12
}

declare i32 @_ZN7web_app38ConvertDisplayModeToAppLaunchContainerEN5blink5mojom11DisplayModeE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10extensions12ExtensionSet14const_iteratorC1ENSt3__120__map_const_iteratorINS2_21__tree_const_iteratorINS2_12__value_typeINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE13scoped_refptrIKNS_9ExtensionEEEEPNS2_11__tree_nodeISG_PvEElEEEE(%"class.extensions::ExtensionSet::const_iterator"*, %"class.std::__1::__tree_end_node"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions9ExtensionD1Ev(%"class.extensions::Extension"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9IconSizesC1EOS_(%struct.IconSizes*, %struct.IconSizes* dereferenceable(72)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9IconSizesNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.201"*, %struct.IconSizes* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.IconSizes** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.201"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.201"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.IconSizes** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %struct.IconSizes*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.IconSizes* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %33, i64 %9
  %35 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %33, i64 %32
  %36 = ptrtoint %struct.IconSizes* %35 to i64
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %34, %struct.IconSizes* dereferenceable(72) %1) #10
  %37 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %34, i64 1
  %38 = ptrtoint %struct.IconSizes* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.201", %"class.std::__1::vector.201"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.IconSizes*, %struct.IconSizes** %39, align 8
  %41 = load %struct.IconSizes*, %struct.IconSizes** %3, align 8
  %42 = icmp eq %struct.IconSizes* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.IconSizes* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %struct.IconSizes* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.IconSizes* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %46, i64 -1
  %49 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %47, i64 -1
  tail call void @_ZN9IconSizesC1EOS_(%struct.IconSizes* %48, %struct.IconSizes* dereferenceable(72) %49) #10
  %50 = icmp eq %struct.IconSizes* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %struct.IconSizes*, %struct.IconSizes** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %struct.IconSizes* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %struct.IconSizes* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %struct.IconSizes* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %struct.IconSizes*
  %60 = icmp eq %struct.IconSizes* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %struct.IconSizes* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %struct.IconSizes, %struct.IconSizes* %62, i64 -1
  tail call void @_ZN9IconSizesD1Ev(%struct.IconSizes* %63) #10
  %64 = icmp eq %struct.IconSizes* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10extensions12ExtensionSet5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK10extensions12ExtensionSet5beginEv"}
