; ModuleID = '../../third_party/blink/renderer/core/script/worklet_modulator_impl.cc'
source_filename = "../../third_party/blink/renderer/core/script/worklet_modulator_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.240" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WorkletModulatorImpl" = type { %"class.blink::ModulatorImplBase.base", [4 x i8] }
%"class.blink::ModulatorImplBase.base" = type <{ %"class.blink::Modulator", %"class.blink::Member", %class.scoped_refptr.224, %"class.blink::Member.230", %"class.blink::Member.232", %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.238", i32 }>
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptState"* }
%class.scoped_refptr.224 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.225" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i32 }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ModuleMap"* }
%"class.blink::ModuleMap" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ModuleTreeLinkerRegistry"* }
%"class.blink::ModuleTreeLinkerRegistry" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::ModuleRecordResolver"* }
%"class.blink::ModuleRecordResolver" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::DynamicModuleResolver"* }
%"class.blink::DynamicModuleResolver" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ImportMap"* }
%"class.blink::ImportMap" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.177", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.181", %"class.blink::HeapHashMap.190", %"class.std::__1::unique_ptr.200", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.212", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.215" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.190" = type { %"class.WTF::HashMap.193" }
%"class.WTF::HashMap.193" = type { %"class.WTF::HashTable.194" }
%"class.WTF::HashTable.194" = type <{ %"struct.WTF::KeyValuePair.196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.196" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.197" }
%"class.blink::TraceWrapperV8Reference.197" = type { %"class.v8::TracedReference.198" }
%"class.v8::TracedReference.198" = type { %"class.v8::BasicTracedReference.199" }
%"class.v8::BasicTracedReference.199" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.203" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.212" = type { %"class.v8::Persistent.213" }
%"class.v8::Persistent.213" = type { %"class.v8::PersistentBase.214" }
%"class.v8::PersistentBase.214" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.215" = type { %"class.WTF::HashMap.218" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.221" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.222" }
%"class.blink::Persistent.222" = type { %"class.blink::PersistentBase.223" }
%"class.blink::PersistentBase.223" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ModulatorImplBase" = type <{ %"class.blink::Modulator", %"class.blink::Member", %class.scoped_refptr.224, %"class.blink::Member.230", %"class.blink::Member.232", %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.238", i32, [4 x i8] }>
%"class.blink::ModuleScriptFetcher" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.245", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.287", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.407", %"class.blink::ResourceResponse", %class.scoped_refptr.409, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.261", i8, %"class.absl::optional.272", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.255" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::KURL"* }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, [7 x i8], %union.anon.265 }
%union.anon.265 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.268 }
%union.anon.268 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.272" = type { %"class.absl::optional_internal::optional_data.273" }
%"class.absl::optional_internal::optional_data.273" = type { %"class.absl::optional_internal::optional_data_base.274" }
%"class.absl::optional_internal::optional_data_base.274" = type { %"class.absl::optional_internal::optional_data_dtor_base.275" }
%"class.absl::optional_internal::optional_data_dtor_base.275" = type { i8, %union.anon.276 }
%union.anon.276 = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.250" }
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl.253" }
%"struct.std::__1::__cxx_atomic_impl.253" = type { %"struct.std::__1::__cxx_atomic_base_impl.254" }
%"struct.std::__1::__cxx_atomic_base_impl.254" = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.277", %"class.WTF::Vector.282" }
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { i32*, i32, i32 }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.386" }
%"class.WTF::HashMap.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"struct.WTF::KeyValuePair.389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.389" = type <{ %"class.blink::WeakMember.818", i32, [4 x i8] }>
%"class.blink::WeakMember.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.245", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.395", %"class.WTF::String", %"class.WTF::HashSet.396", i8, i8, %class.scoped_refptr.401, %class.scoped_refptr.402, %class.scoped_refptr.404 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.395" = type { i8 }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"struct.std::__1::pair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.400" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.401 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.402 = type { %"class.base::RefCountedData.403"* }
%"class.base::RefCountedData.403" = type opaque
%class.scoped_refptr.404 = type { %"class.base::RefCountedData.405"* }
%"class.base::RefCountedData.405" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.349" }
%"class.base::time_internal::TimeBase.349" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.295, %class.scoped_refptr.295, %class.scoped_refptr.295, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.301, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.313", %"class.absl::optional.318", %"class.absl::optional.328", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.338", %"class.absl::optional.328", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.328", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.338", %"class.absl::optional.343", i8, %class.scoped_refptr.348 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.290" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.290" = type { %"class.absl::optional_internal::optional_data.291" }
%"class.absl::optional_internal::optional_data.291" = type { %"class.absl::optional_internal::optional_data_base.292" }
%"class.absl::optional_internal::optional_data_base.292" = type { %"class.absl::optional_internal::optional_data_dtor_base.293" }
%"class.absl::optional_internal::optional_data_dtor_base.293" = type { i8, %union.anon.294 }
%union.anon.294 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.295 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.431", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.290", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.295 }
%"class.WTF::RefCounted.431" = type { %"class.base::RefCounted.432" }
%"class.base::RefCounted.432" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.296" }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.301 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.302", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.311, i8, %"class.url::Origin" }
%"class.base::RefCounted.302" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.249 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.303" }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"class.std::__1::unique_ptr.305"*, %"class.std::__1::unique_ptr.305"*, %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.std::__1::unique_ptr.305"* }
%class.scoped_refptr.311 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.312", [4 x i8] }>
%"class.base::RefCountedThreadSafe.312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.323", %"class.WTF::Vector.282", %"class.WTF::String" }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %class.scoped_refptr.295*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.333", %"class.absl::optional.333" }
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.base::TimeDelta" }
%"class.absl::optional.328" = type { %"class.absl::optional_internal::optional_data.329" }
%"class.absl::optional_internal::optional_data.329" = type { %"class.absl::optional_internal::optional_data_base.330" }
%"class.absl::optional_internal::optional_data_base.330" = type { %"class.absl::optional_internal::optional_data_dtor_base.331" }
%"class.absl::optional_internal::optional_data_dtor_base.331" = type { i8, %union.anon.332 }
%union.anon.332 = type { %"class.WTF::String" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.343" = type { %"class.absl::optional_internal::optional_data.344" }
%"class.absl::optional_internal::optional_data.344" = type { %"class.absl::optional_internal::optional_data_base.345" }
%"class.absl::optional_internal::optional_data_base.345" = type { %"class.absl::optional_internal::optional_data_dtor_base.346" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.348 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.810", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.810" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.811" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i32*, i32*, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i32* }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.350", %class.scoped_refptr.365, %class.scoped_refptr.366, %"struct.blink::CacheControlHeader", %"class.absl::optional.333", %"class.absl::optional.367", %"class.absl::optional.367", %"class.absl::optional.367", i64, %"class.blink::KURL", %"class.WTF::Vector.372", %"class.WTF::String", %"class.WTF::Vector.282", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.338", %"class.WTF::Vector.282", %"class.blink::KURL", %"class.absl::optional.377" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.350" = type { %"class.absl::optional_internal::optional_data.351" }
%"class.absl::optional_internal::optional_data.351" = type { %"class.absl::optional_internal::optional_data_base.352" }
%"class.absl::optional_internal::optional_data_base.352" = type { %"class.absl::optional_internal::optional_data_dtor_base.353" }
%"class.absl::optional_internal::optional_data_dtor_base.353" = type { i8, %union.anon.354 }
%union.anon.354 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.282", %"class.WTF::String", i64, i64, %"class.WTF::Vector.355", %"class.WTF::Vector.360" }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.365 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.366 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.base::Time" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.377" = type { %"class.absl::optional_internal::optional_data.378" }
%"class.absl::optional_internal::optional_data.378" = type { %"class.absl::optional_internal::optional_data_base.379" }
%"class.absl::optional_internal::optional_data_base.379" = type { %"class.absl::optional_internal::optional_data_dtor_base.380" }
%"class.absl::optional_internal::optional_data_dtor_base.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.409 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.410", i64, %"class.WTF::Vector.412", %"class.WTF::Vector.417" }
%"class.WTF::RefCounted.410" = type { %"class.base::RefCounted.411" }
%"class.base::RefCounted.411" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { i8*, i32, i32 }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.std::__1::unique_ptr.420"*, i32, i32 }
%"class.std::__1::unique_ptr.420" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.423", %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.513", i32, i8, [3 x i8], %"class.blink::HeapVector.515", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.534", %"class.blink::Member.540", %"class.blink::Member.542", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.453" }
%"class.blink::HeapHashMap.453" = type { %"class.WTF::HashMap.456" }
%"class.WTF::HashMap.456" = type { %"class.WTF::HashTable.457" }
%"class.WTF::HashTable.457" = type <{ %"struct.WTF::KeyValuePair.459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.459" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.467" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.460" }
%"class.blink::HeapHashSet.460" = type { %"class.WTF::HashSet.463" }
%"class.WTF::HashSet.463" = type { %"class.WTF::HashTable.464" }
%"class.WTF::HashTable.464" = type <{ %"class.blink::WeakMember.466"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.466" = type opaque
%"class.blink::Supplementable.467" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.468" }
%"class.blink::HeapHashMap.468" = type { %"class.WTF::HashMap.471" }
%"class.WTF::HashMap.471" = type { %"class.WTF::HashTable.472" }
%"class.WTF::HashTable.472" = type <{ %"struct.WTF::KeyValuePair.474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.474" = type { i8*, %"class.blink::Member.821" }
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.823" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.475, %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.501", %"class.std::__1::unique_ptr.501", %"class.blink::Member.507", i32, [4 x i8], %"class.WTF::HashSet.509", i32, i32 }
%class.scoped_refptr.475 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.488", %"class.std::__1::map.497"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.479" }
%"class.std::__1::__tree.479" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.488" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.497" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.515" = type { %"class.WTF::Vector.518" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.blink::Member.521"*, i32, i32 }
%"class.blink::Member.521" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.527", i32, i32 }
%"class.blink::HeapHashMap.527" = type { %"class.WTF::HashMap.530" }
%"class.WTF::HashMap.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"struct.WTF::KeyValuePair.533"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.533" = type opaque
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.525", i8, [7 x i8], %"class.WTF::Vector.546", %"class.blink::HeapVector.581", i8, [7 x i8], %"class.WTF::HashSet.509", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.546" = type { %"class.WTF::VectorBuffer.547" }
%"class.WTF::VectorBuffer.547" = type { %"class.WTF::VectorBufferBase.548" }
%"class.WTF::VectorBufferBase.548" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.549" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.552", %"class.WTF::HashMap.559", %"class.WTF::HashMap.564", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.282", i32, %"class.mojo::StructPtr.569", %"class.WTF::Vector.282" }
%"class.mojo::StructPtr.552" = type { %"class.std::__1::unique_ptr.553" }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type opaque
%"class.WTF::HashMap.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.569" = type { %"class.std::__1::unique_ptr.570" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.282", i8, i8, [6 x i8] }>
%"class.blink::HeapVector.581" = type { %"class.WTF::Vector.584" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %"class.blink::Member.587"*, i32, i32 }
%"class.blink::Member.587" = type opaque
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.295, i8, [7 x i8], %"class.blink::CrossThreadPersistent.629", i32, i32, %"class.blink::Member.638", %"class.blink::WorkerThread"*, %"class.util::TokenType.640", %"class.std::__1::unique_ptr.642", i8, i8, [6 x i8] }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.604", %"class.blink::Member.610", %"class.blink::HeapHashSet.612", %class.scoped_refptr.619, %"class.blink::Member.621", %"class.blink::Member.623", i32, %"class.WTF::Vector.546", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.627" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.446" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439", [32 x i8] }
%"class.WTF::VectorBufferBase.439" = type { %"struct.std::__1::pair.440"*, i32, i32 }
%"struct.std::__1::pair.440" = type { %"class.WTF::AtomicString", %"class.blink::Member.441" }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::HeapVector.443"* }
%"class.blink::HeapVector.443" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.WTF::Vector.449"* }
%"class.WTF::Vector.449" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.513", i32, i8, [3 x i8], %"class.blink::HeapVector.515", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.534", %"class.blink::Member.540", %"class.blink::Member.542", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.589" }
%"class.blink::PersistentBase.589" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.592" }
%"class.blink::Supplementable.592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.593" }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type { i8*, %"class.blink::Member.825" }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::Supplement.827"* }
%"class.blink::Supplement.827" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.828" }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.600" }
%"struct.std::__1::atomic.600" = type { %"struct.std::__1::__atomic_base.601" }
%"struct.std::__1::__atomic_base.601" = type { %"struct.std::__1::__cxx_atomic_impl.602" }
%"struct.std::__1::__cxx_atomic_impl.602" = type { %"struct.std::__1::__cxx_atomic_base_impl.603" }
%"struct.std::__1::__cxx_atomic_base_impl.603" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.650", %"class.blink::Member.651", %"class.blink::Member.653", %"class.blink::Member.655", %class.scoped_refptr.224, %class.scoped_refptr.224, %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.665", %"class.blink::Member.669", %"class.blink::Member.727", %"class.blink::HeapHashMap.729", %"class.blink::HeapHashSet.736", %"class.blink::HeapHashSet.736", %"class.blink::HeapHashMap.743", %"class.blink::HeapVector.750", %"class.blink::Member.757", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.760", %"class.WTF::Vector.767", %"class.blink::HeapHashSet.773", %"class.blink::HeapHashSet.773", %"class.std::__1::unique_ptr.779", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.788", i8, i8, %"class.base::WeakPtrFactory.790" }
%"class.blink::ThreadState::PrefinalizerRegistration.650" = type { i8 }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.663" }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.673", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.675", %"class.WTF::HashSet.680", i8, [3 x i8], i32, %"class.blink::HeapHashMap.684", %"class.std::__1::map.691", %"class.std::__1::map.702", %"class.std::__1::unique_ptr.711", %"class.blink::Member.659", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.724", %"class.mojo::InlinedStructPtr.726", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"struct.WTF::KeyValuePair.679"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.679" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.684" = type { %"class.WTF::HashMap.687" }
%"class.WTF::HashMap.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ %"struct.WTF::KeyValuePair.690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.690" = type opaque
%"class.std::__1::map.691" = type { %"class.std::__1::__tree.692" }
%"class.std::__1::__tree.692" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.693", %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.702" = type { %"class.std::__1::__tree.703" }
%"class.std::__1::__tree.703" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.704", %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.726" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.729" = type { %"class.WTF::HashMap.732" }
%"class.WTF::HashMap.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ %"struct.WTF::KeyValuePair.735"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.735" = type opaque
%"class.blink::HeapHashSet.736" = type { %"class.WTF::HashSet.739" }
%"class.WTF::HashSet.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"class.blink::WeakMember.742"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.742" = type { %"class.blink::MemberBase.246" }
%"class.blink::HeapHashMap.743" = type { %"class.WTF::HashMap.746" }
%"class.WTF::HashMap.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"struct.WTF::KeyValuePair.749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.749" = type opaque
%"class.blink::HeapVector.750" = type { %"class.WTF::Vector.753" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::Member.245"*, i32, i32 }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.618", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.224, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.759 }
%class.scoped_refptr.759 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.715", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.715" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.716" }
%"struct.std::__1::atomic.716" = type { %"struct.std::__1::__atomic_base.717" }
%"struct.std::__1::__atomic_base.717" = type { %"struct.std::__1::__atomic_base.718" }
%"struct.std::__1::__atomic_base.718" = type { %"struct.std::__1::__cxx_atomic_impl.719" }
%"struct.std::__1::__cxx_atomic_impl.719" = type { %"struct.std::__1::__cxx_atomic_base_impl.720" }
%"struct.std::__1::__cxx_atomic_base_impl.720" = type { i8 }
%"class.blink::WeakMember.618" = type { %"class.blink::MemberBase.611" }
%"class.blink::HeapHashMap.760" = type { %"class.WTF::HashMap.763" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type opaque
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { %class.scoped_refptr.770*, i32, i32 }
%class.scoped_refptr.770 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.773" = type { %"class.WTF::HashSet.776" }
%"class.WTF::HashSet.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"class.blink::Member.407"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.WTF::HashSet.782"* }
%"class.WTF::HashSet.782" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.714 }
%class.scoped_refptr.714 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.786" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.790" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.612" = type { %"class.WTF::HashSet.615" }
%"class.WTF::HashSet.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"class.blink::WeakMember.618"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.619 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.620", [4 x i8] }>
%"class.base::RefCounted.620" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.625", i32, [4 x i8] }>
%"class.std::__1::bitset.625" = type { %"class.std::__1::__bitset.626" }
%"class.std::__1::__bitset.626" = type { [25 x i64] }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::Modulator"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.629" = type { %"class.blink::PersistentBase.630" }
%"class.blink::PersistentBase.630" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.633", %"class.WTF::Mutex" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.util::TokenType.640" = type { %"class.base::StrongAlias.641" }
%"class.base::StrongAlias.641" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.blink::WorkletModuleScriptFetcher" = type <{ %"class.blink::ModuleScriptFetcher.base", [7 x i8], %"class.blink::CrossThreadPersistent.629", %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ModuleScriptFetcher.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.396", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.395", [6 x i8] }>
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.blink::ModuleScriptFetchRequest" = type opaque
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::ModuleScript" = type opaque
%"struct.blink::ModuleRequest" = type { %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::Vector.797" }
%"class.WTF::Vector.797" = type { %"class.WTF::VectorBuffer.798" }
%"class.WTF::VectorBuffer.798" = type { %"class.WTF::VectorBufferBase.799" }
%"class.WTF::VectorBufferBase.799" = type { %"struct.blink::ImportAssertion"*, i32, i32 }
%"struct.blink::ImportAssertion" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ReferrerScriptInfo" = type opaque
%"class.blink::ScriptPromiseResolver" = type opaque
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.802", %class.scoped_refptr.401 }
%"class.blink::TraceWrapperV8Reference.802" = type { %"class.v8::TracedReference.803" }
%"class.v8::TracedReference.803" = type { %"class.v8::BasicTracedReference.804" }
%"class.v8::BasicTracedReference.804" = type { %"class.v8::TracedReferenceBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }

$_ZN5blink20WorkletModulatorImplD0Ev = comdat any

$_ZNK5blink9Modulator18NameInHeapSnapshotEv = comdat any

$_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv = comdat any

$_ZN5blink17ModulatorImplBase10TaskRunnerEv = comdat any

$_ZN5blink17ModulatorImplBase14GetScriptStateEv = comdat any

$_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv = comdat any

$_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv = comdat any

$_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE = comdat any

$_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26WorkletModuleScriptFetcherEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_26WorkletModuleScriptFetcherEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_26WorkletModuleScriptFetcherEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_26WorkletModuleScriptFetcherEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20WorkletModulatorImplE = hidden unnamed_addr constant { [31 x i8*], [3 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::Visitor"*)* @_ZNK5blink17ModulatorImplBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkletModulatorImpl"*)* @_ZN5blink20WorkletModulatorImplD0Ev to i8*), i8* bitcast (i8* (%"class.blink::Modulator"*)* @_ZNK5blink9Modulator18NameInHeapSnapshotEv to i8*), i8* bitcast (%"class.blink::ModuleRecordResolver"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase10TaskRunnerEv to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase14GetScriptStateEv to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase17GetV8CacheOptionsEv to i8*), i8* bitcast (i1 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase19IsScriptingDisabledEv to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)* @_ZN5blink17ModulatorImplBase9FetchTreeERKNS_4KURLENS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsENS_27ModuleScriptCustomFetchTypeEPNS_16ModuleTreeClientE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*)* @_ZN5blink17ModulatorImplBase11FetchSingleERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)* @_ZN5blink17ModulatorImplBase31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_16ModuleTreeClientE to i8*), i8* bitcast (%"class.blink::ModuleScript"* (%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"*, i32)* @_ZN5blink17ModulatorImplBase22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*, %"class.blink::KURL"*, %"class.WTF::String"*)* @_ZN5blink17ModulatorImplBase22ResolveModuleSpecifierERKN3WTF6StringERKNS_4KURLEPS2_ to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*, %"class.blink::KURL"*, %"class.blink::ReferrerScriptInfo"*, %"class.blink::ScriptPromiseResolver"*)* @_ZN5blink17ModulatorImplBase18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)* @_ZNK5blink17ModulatorImplBase15CreateTypeErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"*)* @_ZNK5blink17ModulatorImplBase17CreateSyntaxErrorERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ImportMap"*, %"class.blink::ScriptValue"*)* @_ZN5blink17ModulatorImplBase17RegisterImportMapEPKNS_9ImportMapENS_11ScriptValueE to i8*), i8* bitcast (%"class.blink::ImportMap"* (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*)* @_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, i32)* @_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE to i8*), i8* bitcast (void ()* @_ZNK5blink17ModulatorImplBase27HostGetImportMetaPropertiesEN2v85LocalINS1_6ModuleEEE to i8*), i8* bitcast (i1 (%"class.blink::ModulatorImplBase"*)* @_ZN5blink17ModulatorImplBase15HasValidContextEv to i8*), i8* bitcast (void ()* @_ZN5blink17ModulatorImplBase17InstantiateModuleEN2v85LocalINS1_6ModuleEEERKNS_4KURLE to i8*), i8* bitcast (void ()* @_ZN5blink17ModulatorImplBase30ModuleRequestsFromModuleRecordEN2v85LocalINS1_6ModuleEEE to i8*), i8* bitcast (i32 (%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"*)* @_ZNK5blink17ModulatorImplBase21ModuleTypeFromRequestERKNS_13ModuleRequestE to i8*), i8* bitcast (%"class.blink::ModuleScriptFetcher"* (%"class.blink::WorkletModulatorImpl"*, i32)* @_ZN5blink20WorkletModulatorImpl25CreateModuleScriptFetcherENS_27ModuleScriptCustomFetchTypeEN4base7PassKeyINS_18ModuleScriptLoaderEEE to i8*), i8* bitcast (void (%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*)* @_ZN5blink17ModulatorImplBase30ProduceCacheModuleTreeTopLevelEPNS_12ModuleScriptE to i8*), i8* bitcast (i1 (%"class.blink::WorkletModulatorImpl"*, %"class.WTF::String"*)* @_ZN5blink20WorkletModulatorImpl24IsDynamicImportForbiddenEPN3WTF6StringE to i8*)], [3 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i8* (%"class.blink::Modulator"*)* @_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv to i8*)] }, align 8
@.str = private unnamed_addr constant [46 x i8] c"import() is disallowed on WorkletGlobalScope.\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"Modulator\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26WorkletModuleScriptFetcherEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_26WorkletModuleScriptFetcherEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26WorkletModuleScriptFetcherEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink26WorkletModuleScriptFetcherE = external unnamed_addr constant { [11 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink20WorkletModulatorImplC1EPNS_11ScriptStateE = hidden unnamed_addr alias void (%"class.blink::WorkletModulatorImpl"*, %"class.blink::ScriptState"*), void (%"class.blink::WorkletModulatorImpl"*, %"class.blink::ScriptState"*)* @_ZN5blink20WorkletModulatorImplC2EPNS_11ScriptStateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20WorkletModulatorImplC2EPNS_11ScriptStateE(%"class.blink::WorkletModulatorImpl"*, %"class.blink::ScriptState"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WorkletModulatorImpl"* %0 to %"class.blink::ModulatorImplBase"*
  tail call void @_ZN5blink17ModulatorImplBaseC2EPNS_11ScriptStateE(%"class.blink::ModulatorImplBase"* %3, %"class.blink::ScriptState"* %1) #5
  %4 = bitcast %"class.blink::WorkletModulatorImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink20WorkletModulatorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [3 x i8*] }, { [31 x i8*], [3 x i8*] }* @_ZTVN5blink20WorkletModulatorImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  ret void
}

declare void @_ZN5blink17ModulatorImplBaseC2EPNS_11ScriptStateE(%"class.blink::ModulatorImplBase"*, %"class.blink::ScriptState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ModuleScriptFetcher"* @_ZN5blink20WorkletModulatorImpl25CreateModuleScriptFetcherENS_27ModuleScriptCustomFetchTypeEN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::WorkletModulatorImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WorkletModulatorImpl"* %0 to %"class.blink::ModulatorImplBase"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink17ModulatorImplBase19GetExecutionContextEv(%"class.blink::ModulatorImplBase"* %3) #5
  %5 = icmp eq %"class.blink::ExecutionContext"* %4, null
  %6 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %4, i64 -1, i32 22
  %7 = bitcast %"class.blink::DOMTimerCoordinator"* %6 to %"class.blink::WorkletGlobalScope"*
  %8 = select i1 %5, %"class.blink::WorkletGlobalScope"* null, %"class.blink::WorkletGlobalScope"* %7
  %9 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %8, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %9, align 8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26WorkletModuleScriptFetcherEEEPhm(i64 168) #5
  %12 = bitcast i8* %11 to %"class.blink::WorkletModuleScriptFetcher"*
  tail call void @_ZN5blink26WorkletModuleScriptFetcherC1EPNS_25WorkletModuleResponsesMapEN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::WorkletModuleScriptFetcher"* %12, %"class.blink::WorkletModuleResponsesMap"* %10) #5
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = bitcast i8* %11 to %"class.blink::ModuleScriptFetcher"*
  ret %"class.blink::ModuleScriptFetcher"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink17ModulatorImplBase19GetExecutionContextEv(%"class.blink::ModulatorImplBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20WorkletModulatorImpl24IsDynamicImportForbiddenEPN3WTF6StringE(%"class.blink::WorkletModulatorImpl"* nocapture readnone, %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #5
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %6 = bitcast %"class.WTF::String"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %8 = bitcast %"class.WTF::String"* %1 to i64*
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %7, i64* %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #5
  br label %25

25:                                               ; preds = %2, %21, %24
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #5
  br label %41

41:                                               ; preds = %25, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret i1 true
}

declare void @_ZNK5blink17ModulatorImplBase5TraceEPNS_7VisitorE(%"class.blink::ModulatorImplBase"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink17ModulatorImplBaseD2Ev(%"class.blink::ModulatorImplBase"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorkletModulatorImplD0Ev(%"class.blink::WorkletModulatorImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::WorkletModulatorImpl"* %0 to %"class.blink::ModulatorImplBase"*
  tail call void @_ZN5blink17ModulatorImplBaseD2Ev(%"class.blink::ModulatorImplBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink9Modulator18NameInHeapSnapshotEv(%"class.blink::Modulator"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ModuleRecordResolver"* @_ZN5blink17ModulatorImplBase23GetModuleRecordResolverEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ModuleRecordResolver"*, %"class.blink::ModuleRecordResolver"** %2, align 8
  ret %"class.blink::ModuleRecordResolver"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink17ModulatorImplBase10TaskRunnerEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  ret %"class.base::SingleThreadTaskRunner"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink17ModulatorImplBase14GetScriptStateEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  ret %"class.blink::ScriptState"* %3
}

declare i32 @_ZNK5blink17ModulatorImplBase17GetV8CacheOptionsEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17ModulatorImplBase19IsScriptingDisabledEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase9FetchTreeERKNS_4KURLENS_10ModuleTypeEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationERKNS_18ScriptFetchOptionsENS_27ModuleScriptCustomFetchTypeEPNS_16ModuleTreeClientE(%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64), i32, %"class.blink::ModuleTreeClient"*) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase11FetchSingleERKNS_24ModuleScriptFetchRequestEPNS_15ResourceFetcherENS_16ModuleGraphLevelENS_27ModuleScriptCustomFetchTypeEPNS_18SingleModuleClientE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScriptFetchRequest"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::SingleModuleClient"*) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase31FetchDescendantsForInlineScriptEPNS_12ModuleScriptEPNS_15ResourceFetcherENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationEPNS_16ModuleTreeClientE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*) unnamed_addr #1

declare %"class.blink::ModuleScript"* @_ZN5blink17ModulatorImplBase22GetFetchedModuleScriptERKNS_4KURLENS_10ModuleTypeE(%"class.blink::ModulatorImplBase"*, %"class.blink::KURL"* dereferenceable(112), i32) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase22ResolveModuleSpecifierERKN3WTF6StringERKNS_4KURLEPS2_(%"class.blink::KURL"* sret, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"*) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase18ResolveDynamicallyERKNS_13ModuleRequestERKNS_4KURLERKNS_18ReferrerScriptInfoEPNS_21ScriptPromiseResolverE(%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"* dereferenceable(32), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ReferrerScriptInfo"*, %"class.blink::ScriptPromiseResolver"*) unnamed_addr #1

declare void @_ZNK5blink17ModulatorImplBase15CreateTypeErrorERKN3WTF6StringE(%"class.blink::ScriptValue"* sret, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink17ModulatorImplBase17CreateSyntaxErrorERKN3WTF6StringE(%"class.blink::ScriptValue"* sret, %"class.blink::ModulatorImplBase"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase17RegisterImportMapEPKNS_9ImportMapENS_11ScriptValueE(%"class.blink::ModulatorImplBase"*, %"class.blink::ImportMap"*, %"class.blink::ScriptValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ImportMap"* @_ZNK5blink17ModulatorImplBase19GetImportMapForTestEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::ImportMap"*, %"class.blink::ImportMap"** %2, align 8
  ret %"class.blink::ImportMap"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17ModulatorImplBase27GetAcquiringImportMapsStateEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ModulatorImplBase27SetAcquiringImportMapsStateENS_9Modulator24AcquiringImportMapsStateE(%"class.blink::ModulatorImplBase"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ModulatorImplBase", %"class.blink::ModulatorImplBase"* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 8
  ret void
}

declare void @_ZNK5blink17ModulatorImplBase27HostGetImportMetaPropertiesEN2v85LocalINS1_6ModuleEEE() unnamed_addr

declare zeroext i1 @_ZN5blink17ModulatorImplBase15HasValidContextEv(%"class.blink::ModulatorImplBase"*) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase17InstantiateModuleEN2v85LocalINS1_6ModuleEEERKNS_4KURLE() unnamed_addr

declare void @_ZN5blink17ModulatorImplBase30ModuleRequestsFromModuleRecordEN2v85LocalINS1_6ModuleEEE() unnamed_addr

declare i32 @_ZNK5blink17ModulatorImplBase21ModuleTypeFromRequestERKNS_13ModuleRequestE(%"class.blink::ModulatorImplBase"*, %"struct.blink::ModuleRequest"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink17ModulatorImplBase30ProduceCacheModuleTreeTopLevelEPNS_12ModuleScriptE(%"class.blink::ModulatorImplBase"*, %"class.blink::ModuleScript"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZThn8_NK5blink9Modulator18NameInHeapSnapshotEv(%"class.blink::Modulator"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink26WorkletModuleScriptFetcherC1EPNS_25WorkletModuleResponsesMapEN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::WorkletModuleResponsesMap"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26WorkletModuleScriptFetcherEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.250"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26WorkletModuleScriptFetcherEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.250"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26WorkletModuleScriptFetcherEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScriptFetcher"*
  tail call void @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptFetcher"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_26WorkletModuleScriptFetcherEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink26WorkletModuleScriptFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 48
  %4 = bitcast i8* %3 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %4) #5
  %5 = getelementptr inbounds i8, i8* %0, i64 40
  %6 = bitcast i8* %5 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %1
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #5
  %12 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %13 = load atomic i64, i64* %6 monotonic, align 8
  %14 = inttoptr i64 %13 to %"class.blink::PersistentNode"*
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %12, i64 0, i32 0, i32 0
  %18 = bitcast %"class.blink::CrossThreadPersistentRegion"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %13 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %14, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %21, align 8
  store %"class.blink::PersistentNode"* %14, %"class.blink::PersistentNode"** %17, align 8
  br label %22

22:                                               ; preds = %16, %9
  store atomic i64 0, i64* %6 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #5
  br label %23

23:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26WorkletModuleScriptFetcherEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.250"*) local_unnamed_addr #1

declare void @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptFetcher"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
