; ModuleID = '../../content/browser/indexed_db/indexed_db_compaction_task.cc'
source_filename = "../../content/browser/indexed_db/indexed_db_compaction_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.content::IndexedDBCompactionTask" = type { %"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask" }
%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask" = type { i32 (...)**, i8, %"class.leveldb::DB"* }
%"class.leveldb::DB" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::IndexedDBDatabaseMetadata"*, %"struct.blink::IndexedDBDatabaseMetadata"*, %"class.std::__1::__compressed_pair" }
%"struct.blink::IndexedDBDatabaseMetadata" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::IndexedDBDatabaseMetadata"* }

@_ZTVN7content23IndexedDBCompactionTaskE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::IndexedDBCompactionTask"*)* @_ZN7content23IndexedDBCompactionTaskD2Ev to i8*), i8* bitcast (void (%"class.content::IndexedDBCompactionTask"*)* @_ZN7content23IndexedDBCompactionTaskD0Ev to i8*), i8* bitcast (i1 (%"class.content::IndexedDBCompactionTask"*)* @_ZNK7content23IndexedDBCompactionTask16RequiresMetadataEv to i8*), i8* bitcast (void (%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"*, %"class.std::__1::vector"*)* @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTask11SetMetadataEPKNSt3__16vectorIN5blink25IndexedDBDatabaseMetadataENS2_9allocatorIS5_EEEE to i8*), i8* bitcast (void (%"class.content::IndexedDBCompactionTask"*, i32)* @_ZN7content23IndexedDBCompactionTask4StopENS_26IndexedDBPreCloseTaskQueue10StopReasonE to i8*), i8* bitcast (i1 (%"class.content::IndexedDBCompactionTask"*)* @_ZN7content23IndexedDBCompactionTask8RunRoundEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [13 x i8] c"CompactRange\00", align 1

@_ZN7content23IndexedDBCompactionTaskC1EPN7leveldb2DBE = hidden unnamed_addr alias void (%"class.content::IndexedDBCompactionTask"*, %"class.leveldb::DB"*), void (%"class.content::IndexedDBCompactionTask"*, %"class.leveldb::DB"*)* @_ZN7content23IndexedDBCompactionTaskC2EPN7leveldb2DBE
@_ZN7content23IndexedDBCompactionTaskD1Ev = hidden unnamed_addr alias void (%"class.content::IndexedDBCompactionTask"*), void (%"class.content::IndexedDBCompactionTask"*)* @_ZN7content23IndexedDBCompactionTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23IndexedDBCompactionTaskC2EPN7leveldb2DBE(%"class.content::IndexedDBCompactionTask"*, %"class.leveldb::DB"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::IndexedDBCompactionTask", %"class.content::IndexedDBCompactionTask"* %0, i64 0, i32 0
  tail call void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTaskC2EPN7leveldb2DBE(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"* %3, %"class.leveldb::DB"* %1) #6
  %4 = getelementptr inbounds %"class.content::IndexedDBCompactionTask", %"class.content::IndexedDBCompactionTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content23IndexedDBCompactionTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTaskC2EPN7leveldb2DBE(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"*, %"class.leveldb::DB"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTaskD2Ev(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23IndexedDBCompactionTaskD2Ev(%"class.content::IndexedDBCompactionTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::IndexedDBCompactionTask", %"class.content::IndexedDBCompactionTask"* %0, i64 0, i32 0
  tail call void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTaskD2Ev(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23IndexedDBCompactionTaskD0Ev(%"class.content::IndexedDBCompactionTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::IndexedDBCompactionTask", %"class.content::IndexedDBCompactionTask"* %0, i64 0, i32 0
  tail call void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTaskD2Ev(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"* %2) #6
  %3 = bitcast %"class.content::IndexedDBCompactionTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK7content23IndexedDBCompactionTask16RequiresMetadataEv(%"class.content::IndexedDBCompactionTask"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content23IndexedDBCompactionTask4StopENS_26IndexedDBPreCloseTaskQueue10StopReasonE(%"class.content::IndexedDBCompactionTask"* nocapture, i32) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content23IndexedDBCompactionTask8RunRoundEv(%"class.content::IndexedDBCompactionTask"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.content::IndexedDBCompactionTask", %"class.content::IndexedDBCompactionTask"* %0, i64 0, i32 0, i32 2
  %17 = load %"class.leveldb::DB"*, %"class.leveldb::DB"** %16, align 8
  %18 = bitcast %"class.leveldb::DB"* %17 to void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %19 = load void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %19, i64 11
  %21 = load void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::DB"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %20, align 8
  call void %21(%"class.leveldb::DB"* %17, %"class.leveldb::Slice"* null, %"class.leveldb::Slice"* null) #6
  %22 = icmp eq i8* %15, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %12
  %24 = load i8, i8* %15, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #6
  br label %27

27:                                               ; preds = %12, %23, %26
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN7content26IndexedDBPreCloseTaskQueue12PreCloseTask11SetMetadataEPKNSt3__16vectorIN5blink25IndexedDBDatabaseMetadataENS2_9allocatorIS5_EEEE(%"class.content::IndexedDBPreCloseTaskQueue::PreCloseTask"*, %"class.std::__1::vector"*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
