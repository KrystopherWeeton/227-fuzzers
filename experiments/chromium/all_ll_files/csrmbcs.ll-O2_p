; ModuleID = '../../third_party/icu/source/i18n/csrmbcs.cpp'
source_filename = "../../third_party/icu/source/i18n/csrmbcs.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.icu_69::IteratedChar" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.icu_69::CharsetRecog_mbcs" = type { %"class.icu_69::CharsetRecognizer" }
%"class.icu_69::CharsetRecognizer" = type { i32 (...)** }
%"class.icu_69::CharsetRecog_sjis" = type { %"class.icu_69::CharsetRecog_mbcs" }
%"class.icu_69::CharsetRecog_euc" = type { %"class.icu_69::CharsetRecog_mbcs" }
%"class.icu_69::CharsetRecog_euc_jp" = type { %"class.icu_69::CharsetRecog_euc" }
%"class.icu_69::CharsetRecog_euc_kr" = type { %"class.icu_69::CharsetRecog_euc" }
%"class.icu_69::CharsetRecog_big5" = type { %"class.icu_69::CharsetRecog_mbcs" }
%"class.icu_69::CharsetRecog_gb_18030" = type { %"class.icu_69::CharsetRecog_mbcs" }
%"class.icu_69::InputText" = type <{ i8*, i32, [4 x i8], i16*, i8, [7 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.icu_69::CharsetMatch" = type { %"class.icu_69::InputText"*, i32, i8*, i8* }

@_ZN6icu_69L16commonChars_sjisE = internal constant [57 x i16] [i16 -32448, i16 -32447, i16 -32446, i16 -32443, i16 -32421, i16 -32407, i16 -32406, i16 -32395, i16 -32394, i16 -32096, i16 -32094, i16 -32092, i16 -32087, i16 -32086, i16 -32085, i16 -32083, i16 -32081, i16 -32079, i16 -32077, i16 -32075, i16 -32073, i16 -32067, i16 -32066, i16 -32063, i16 -32060, i16 -32059, i16 -32058, i16 -32056, i16 -32055, i16 -32052, i16 -32051, i16 -32036, i16 -32032, i16 -32025, i16 -32024, i16 -32023, i16 -32022, i16 -32016, i16 -32015, i16 -31935, i16 -31933, i16 -31922, i16 -31921, i16 -31912, i16 -31906, i16 -31902, i16 -31897, i16 -31883, i16 -31882, i16 -31863, i16 -31862, i16 -31861, i16 -31859, i16 -31853, i16 -29034, i16 -27654, i16 -27222], align 16
@.str = private unnamed_addr constant [10 x i8] c"Shift_JIS\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"EUC-JP\00", align 1
@_ZN6icu_69L18commonChars_euc_jpE = internal constant [100 x i16] [i16 -24159, i16 -24158, i16 -24157, i16 -24154, i16 -24132, i16 -24118, i16 -24117, i16 -24106, i16 -24105, i16 -23390, i16 -23388, i16 -23386, i16 -23384, i16 -23382, i16 -23381, i16 -23380, i16 -23379, i16 -23377, i16 -23375, i16 -23373, i16 -23371, i16 -23369, i16 -23367, i16 -23365, i16 -23363, i16 -23361, i16 -23360, i16 -23359, i16 -23357, i16 -23356, i16 -23354, i16 -23353, i16 -23352, i16 -23351, i16 -23350, i16 -23349, i16 -23346, i16 -23345, i16 -23344, i16 -23330, i16 -23329, i16 -23327, i16 -23326, i16 -23324, i16 -23320, i16 -23319, i16 -23318, i16 -23317, i16 -23316, i16 -23313, i16 -23310, i16 -23309, i16 -23134, i16 -23133, i16 -23132, i16 -23130, i16 -23129, i16 -23126, i16 -23123, i16 -23121, i16 -23120, i16 -23117, i16 -23115, i16 -23113, i16 -23112, i16 -23111, i16 -23105, i16 -23101, i16 -23098, i16 -23097, i16 -23096, i16 -23095, i16 -23093, i16 -23088, i16 -23083, i16 -23082, i16 -23081, i16 -23074, i16 -23072, i16 -23071, i16 -23067, i16 -23063, i16 -23062, i16 -23061, i16 -23060, i16 -23059, i16 -23053, i16 -18263, i16 -17964, i16 -17682, i16 -17464, i16 -16656, i16 -16457, i16 -15126, i16 -14596, i16 -14403, i16 -13640, i16 -13581, i16 -13348, i16 -12847], align 16
@.str.3 = private unnamed_addr constant [7 x i8] c"EUC-KR\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"ko\00", align 1
@_ZN6icu_69L18commonChars_euc_krE = internal constant [100 x i16] [i16 -20319, i16 -20301, i16 -20283, i16 -20275, i16 -20268, i16 -20250, i16 -20243, i16 -20232, i16 -20230, i16 -20228, i16 -20040, i16 -20039, i16 -20025, i16 -20009, i16 -19998, i16 -19542, i16 -19525, i16 -19262, i16 -19249, i16 -19239, i16 -19221, i16 -19035, i16 -19019, i16 -19009, i16 -19001, i16 -18967, i16 -18701, i16 -18513, i16 -18494, i16 -18482, i16 -18266, i16 -18258, i16 -18250, i16 -18248, i16 -18245, i16 -18199, i16 -18005, i16 -18002, i16 -17972, i16 -17970, i16 -17923, i16 -17736, i16 -17714, i16 -17712, i16 -17679, i16 -17433, i16 -17421, i16 -17411, i16 -17235, i16 -17222, i16 -17198, i16 -17162, i16 -16966, i16 -16960, i16 -16957, i16 -16955, i16 -16698, i16 -16696, i16 -16673, i16 -16658, i16 -16648, i16 -16646, i16 -16479, i16 -16471, i16 -16448, i16 -16412, i16 -16405, i16 -16404, i16 -16392, i16 -16217, i16 -16209, i16 -16200, i16 -16198, i16 -16197, i16 -16195, i16 -16185, i16 -16180, i16 -16178, i16 -16177, i16 -16170, i16 -16166, i16 -16155, i16 -16133, i16 -16132, i16 -15964, i16 -15962, i16 -15946, i16 -15914, i16 -15905, i16 -15882, i16 -15880, i16 -15199, i16 -14899, i16 -14674, i16 -14385, i16 -14383, i16 -14382, i16 -14376, i16 -14363, i16 -14163], align 16
@.str.5 = private unnamed_addr constant [5 x i8] c"Big5\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"zh\00", align 1
@_ZN6icu_69L16commonChars_big5E = internal constant [96 x i16] [i16 -24256, i16 -24255, i16 -24254, i16 -24253, i16 -24249, i16 -24247, i16 -24203, i16 -24202, i16 -23488, i16 -23482, i16 -23481, i16 -23480, i16 -23471, i16 -23468, i16 -23465, i16 -23452, i16 -23446, i16 -23444, i16 -23433, i16 -23389, i16 -23388, i16 -23385, i16 -23359, i16 -23346, i16 -23343, i16 -23329, i16 -23320, i16 -23299, i16 -23232, i16 -23224, i16 -23208, i16 -23191, i16 -23091, i16 -23065, i16 -22953, i16 -22943, i16 -22942, i16 -22936, i16 -22928, i16 -22872, i16 -22861, i16 -22855, i16 -22829, i16 -22821, i16 -22810, i16 -22798, i16 -22720, i16 -22703, i16 -22695, i16 -22566, i16 -22365, i16 -22363, i16 -22355, i16 -22319, i16 -22317, i16 -22300, i16 -22276, i16 -22080, i16 -22062, i16 -22029, i16 -21909, i16 -21830, i16 -21826, i16 -21812, i16 -21764, i16 -21433, i16 -21425, i16 -21328, i16 -21294, i16 -21159, i16 -20791, i16 -20512, i16 -20246, i16 -20113, i16 -19789, i16 -19772, i16 -19601, i16 -19380, i16 -19378, i16 -19124, i16 -19035, i16 -19011, i16 -18992, i16 -18984, i16 -18831, i16 -18451, i16 -18329, i16 -18108, i16 -17704, i16 -17596, i16 -17503, i16 -16943, i16 -15676, i16 -15431, i16 -15296, i16 -15265], align 16
@.str.7 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@_ZN6icu_69L20commonChars_gb_18030E = internal constant [100 x i16] [i16 -24159, i16 -24158, i16 -24157, i16 -24156, i16 -24144, i16 -24143, i16 -24079, i16 -24077, i16 -23647, i16 -23636, i16 -23622, i16 -20056, i16 -20040, i16 -20034, i16 -19781, i16 -19511, i16 -19466, i16 -19213, i16 -19011, i16 -19004, i16 -18973, i16 -18769, i16 -18732, i16 -18720, i16 -18526, i16 -18520, i16 -18499, i16 -18474, i16 -18467, i16 -18252, i16 -18209, i16 -18186, i16 -18005, i16 -17975, i16 -17960, i16 -17926, i16 -17923, i16 -17715, i16 -17497, i16 -17450, i16 -17439, i16 -17414, i16 -17220, i16 -17189, i16 -17154, i16 -16948, i16 -16691, i16 -16675, i16 -16460, i16 -16442, i16 -16439, i16 -16204, i16 -16147, i16 -15925, i16 -15653, i16 -15417, i16 -15140, i16 -15126, i16 -14900, i16 -14601, i16 -14344, i16 -14165, i16 -14133, i16 -14123, i16 -14105, i16 -13873, i16 -13830, i16 -13647, i16 -13643, i16 -13625, i16 -13616, i16 -13610, i16 -13579, i16 -13571, i16 -13076, i16 -12808, i16 -12630, i16 -12604, i16 -12590, i16 -12571, i16 -12363, i16 -12350, i16 -12330, i16 -12094, i16 -12091, i16 -12080, i16 -12076, i16 -11865, i16 -11606, i16 -11598, i16 -11595, i16 -11589, i16 -11564, i16 -11325, i16 -11312, i16 -11267, i16 -11070, i16 -11046, i16 -10782, i16 -10544], align 16
@_ZTVN6icu_6917CharsetRecog_mbcsE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_mbcsE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6917CharsetRecog_mbcsE = hidden constant [29 x i8] c"N6icu_6917CharsetRecog_mbcsE\00", align 1
@_ZTIN6icu_6917CharsetRecognizerE = external constant i8*
@_ZTIN6icu_6917CharsetRecog_mbcsE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CharsetRecog_mbcsE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917CharsetRecognizerE to i8*) }, align 8
@_ZTVN6icu_6917CharsetRecog_sjisE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_sjisE to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_sjis"*)* @_ZNK6icu_6917CharsetRecog_sjis7getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_sjis"*)* @_ZNK6icu_6917CharsetRecog_sjis11getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_sjis"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6917CharsetRecog_sjis5matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_sjis"*)* @_ZN6icu_6917CharsetRecog_sjisD0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_sjis"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6917CharsetRecog_sjis8nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6917CharsetRecog_sjisE = hidden constant [29 x i8] c"N6icu_6917CharsetRecog_sjisE\00", align 1
@_ZTIN6icu_6917CharsetRecog_sjisE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CharsetRecog_sjisE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_mbcsE to i8*) }, align 8
@_ZTVN6icu_6916CharsetRecog_eucE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916CharsetRecog_eucE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_euc"*)* @_ZN6icu_6916CharsetRecog_eucD0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_euc"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6916CharsetRecog_euc8nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6916CharsetRecog_eucE = hidden constant [28 x i8] c"N6icu_6916CharsetRecog_eucE\00", align 1
@_ZTIN6icu_6916CharsetRecog_eucE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN6icu_6916CharsetRecog_eucE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_mbcsE to i8*) }, align 8
@_ZTVN6icu_6919CharsetRecog_euc_jpE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919CharsetRecog_euc_jpE to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_euc_jp"*)* @_ZNK6icu_6919CharsetRecog_euc_jp7getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_euc_jp"*)* @_ZNK6icu_6919CharsetRecog_euc_jp11getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_euc_jp"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6919CharsetRecog_euc_jp5matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_euc_jp"*)* @_ZN6icu_6919CharsetRecog_euc_jpD0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_euc"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6916CharsetRecog_euc8nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6919CharsetRecog_euc_jpE = hidden constant [31 x i8] c"N6icu_6919CharsetRecog_euc_jpE\00", align 1
@_ZTIN6icu_6919CharsetRecog_euc_jpE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN6icu_6919CharsetRecog_euc_jpE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916CharsetRecog_eucE to i8*) }, align 8
@_ZTVN6icu_6919CharsetRecog_euc_krE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919CharsetRecog_euc_krE to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_euc_kr"*)* @_ZNK6icu_6919CharsetRecog_euc_kr7getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_euc_kr"*)* @_ZNK6icu_6919CharsetRecog_euc_kr11getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_euc_kr"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6919CharsetRecog_euc_kr5matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_euc_kr"*)* @_ZN6icu_6919CharsetRecog_euc_krD0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_euc"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6916CharsetRecog_euc8nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6919CharsetRecog_euc_krE = hidden constant [31 x i8] c"N6icu_6919CharsetRecog_euc_krE\00", align 1
@_ZTIN6icu_6919CharsetRecog_euc_krE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN6icu_6919CharsetRecog_euc_krE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916CharsetRecog_eucE to i8*) }, align 8
@_ZTVN6icu_6917CharsetRecog_big5E = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_big5E to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_big5"*)* @_ZNK6icu_6917CharsetRecog_big57getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_big5"*)* @_ZNK6icu_6917CharsetRecog_big511getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_big5"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6917CharsetRecog_big55matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_big5"*)* @_ZN6icu_6917CharsetRecog_big5D0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_big5"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6917CharsetRecog_big58nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6917CharsetRecog_big5E = hidden constant [29 x i8] c"N6icu_6917CharsetRecog_big5E\00", align 1
@_ZTIN6icu_6917CharsetRecog_big5E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CharsetRecog_big5E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_mbcsE to i8*) }, align 8
@_ZTVN6icu_6921CharsetRecog_gb_18030E = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6921CharsetRecog_gb_18030E to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_gb_18030"*)* @_ZNK6icu_6921CharsetRecog_gb_180307getNameEv to i8*), i8* bitcast (i8* (%"class.icu_69::CharsetRecog_gb_18030"*)* @_ZNK6icu_6921CharsetRecog_gb_1803011getLanguageEv to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_gb_18030"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*)* @_ZNK6icu_6921CharsetRecog_gb_180305matchEPNS_9InputTextEPNS_12CharsetMatchE to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CharsetRecog_gb_18030"*)* @_ZN6icu_6921CharsetRecog_gb_18030D0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CharsetRecog_gb_18030"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)* @_ZNK6icu_6921CharsetRecog_gb_180308nextCharEPNS_12IteratedCharEPNS_9InputTextE to i8*)] }, align 8
@_ZTSN6icu_6921CharsetRecog_gb_18030E = hidden constant [33 x i8] c"N6icu_6921CharsetRecog_gb_18030E\00", align 1
@_ZTIN6icu_6921CharsetRecog_gb_18030E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZTSN6icu_6921CharsetRecog_gb_18030E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CharsetRecog_mbcsE to i8*) }, align 8

@_ZN6icu_6912IteratedCharC1Ev = hidden unnamed_addr alias void (%"class.icu_69::IteratedChar"*), void (%"class.icu_69::IteratedChar"*)* @_ZN6icu_6912IteratedCharC2Ev
@_ZN6icu_6917CharsetRecog_mbcsD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_mbcs"*), void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev
@_ZN6icu_6917CharsetRecog_sjisD2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_sjis"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_sjis"*)*)
@_ZN6icu_6917CharsetRecog_sjisD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_sjis"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_sjis"*)*)
@_ZN6icu_6916CharsetRecog_eucD2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc"*)*)
@_ZN6icu_6916CharsetRecog_eucD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc"*)*)
@_ZN6icu_6919CharsetRecog_euc_jpD2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc_jp"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc_jp"*)*)
@_ZN6icu_6919CharsetRecog_euc_jpD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc_jp"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc_jp"*)*)
@_ZN6icu_6919CharsetRecog_euc_krD2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc_kr"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc_kr"*)*)
@_ZN6icu_6919CharsetRecog_euc_krD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_euc_kr"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_euc_kr"*)*)
@_ZN6icu_6917CharsetRecog_big5D2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_big5"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_big5"*)*)
@_ZN6icu_6917CharsetRecog_big5D1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_big5"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_big5"*)*)
@_ZN6icu_6921CharsetRecog_gb_18030D2Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_gb_18030"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_gb_18030"*)*)
@_ZN6icu_6921CharsetRecog_gb_18030D1Ev = hidden unnamed_addr alias void (%"class.icu_69::CharsetRecog_gb_18030"*), bitcast (void (%"class.icu_69::CharsetRecog_mbcs"*)* @_ZN6icu_6917CharsetRecog_mbcsD2Ev to void (%"class.icu_69::CharsetRecog_gb_18030"*)*)

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6912IteratedCharC2Ev(%"class.icu_69::IteratedChar"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6912IteratedChar8nextByteEPNS_9InputTextE(%"class.icu_69::IteratedChar"* nocapture, %"class.icu_69::InputText"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %1, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %0, i64 0, i32 4
  store i8 1, i8* %9, align 1
  br label %18

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %1, i64 0, i32 7
  %12 = load i8*, i8** %11, align 8
  %13 = add nsw i32 %4, 1
  store i32 %13, i32* %3, align 4
  %14 = sext i32 %4 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  br label %18

18:                                               ; preds = %10, %8
  %19 = phi i32 [ -1, %8 ], [ %17, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind
declare void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_mbcsD2Ev(%"class.icu_69::CharsetRecog_mbcs"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_mbcs", %"class.icu_69::CharsetRecog_mbcs"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_mbcsD0Ev(%"class.icu_69::CharsetRecog_mbcs"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::InputText"*, i16* readonly, i32) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.icu_69::IteratedChar", align 4
  %6 = bitcast %"class.icu_69::IteratedChar"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %5, i64 0, i32 3
  %11 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %5, i64 0, i32 4
  %12 = bitcast %"class.icu_69::IteratedChar"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 16, i1 false)
  store i32 0, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i8 0, i8* %10, align 4
  store i8 0, i8* %11, align 1
  %13 = bitcast %"class.icu_69::CharsetRecog_mbcs"* %0 to i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)***
  %14 = icmp eq i16* %2, null
  %15 = add nsw i32 %3, -1
  %16 = icmp slt i32 %3, 1
  br label %17

17:                                               ; preds = %61, %4
  %18 = phi i32 [ 0, %4 ], [ %62, %61 ]
  %19 = phi i32 [ 0, %4 ], [ %63, %61 ]
  %20 = phi i32 [ 0, %4 ], [ %64, %61 ]
  %21 = phi i32 [ 0, %4 ], [ %28, %61 ]
  %22 = load i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)**, i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)*** %13, align 8
  %23 = getelementptr inbounds i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)*, i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)** %22, i64 5
  %24 = load i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)*, i8 (%"class.icu_69::CharsetRecog_mbcs"*, %"class.icu_69::IteratedChar"*, %"class.icu_69::InputText"*)** %23, align 8
  %25 = call signext i8 %24(%"class.icu_69::CharsetRecog_mbcs"* %0, %"class.icu_69::IteratedChar"* nonnull %5, %"class.icu_69::InputText"* %1) #10
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %69, label %27

27:                                               ; preds = %17
  %28 = add nuw nsw i32 %21, 1
  %29 = load i8, i8* %10, align 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = add nsw i32 %20, 1
  br label %61

33:                                               ; preds = %27
  %34 = load i32, i32* %7, align 4
  %35 = icmp ult i32 %34, 256
  br i1 %35, label %61, label %36

36:                                               ; preds = %33
  %37 = add nsw i32 %18, 1
  br i1 %14, label %61, label %38

38:                                               ; preds = %36
  %39 = trunc i32 %34 to i16
  br i1 %16, label %61, label %40

40:                                               ; preds = %38, %49
  %41 = phi i32 [ %55, %49 ], [ %15, %38 ]
  %42 = phi i32 [ %54, %49 ], [ %15, %38 ]
  %43 = phi i32 [ %53, %49 ], [ 0, %38 ]
  %44 = sdiv i32 %41, 2
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %2, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, %39
  br i1 %48, label %57, label %49

49:                                               ; preds = %40
  %50 = icmp ult i16 %47, %39
  %51 = add nsw i32 %44, 1
  %52 = add nsw i32 %44, -1
  %53 = select i1 %50, i32 %51, i32 %43
  %54 = select i1 %50, i32 %42, i32 %52
  %55 = add nsw i32 %53, %54
  %56 = icmp sgt i32 %53, %54
  br i1 %56, label %61, label %40

57:                                               ; preds = %40
  %58 = icmp sgt i32 %41, -2
  %59 = zext i1 %58 to i32
  %60 = add nsw i32 %19, %59
  br label %61

61:                                               ; preds = %49, %33, %57, %38, %36, %31
  %62 = phi i32 [ %18, %31 ], [ %37, %36 ], [ %37, %38 ], [ %37, %57 ], [ %18, %33 ], [ %37, %49 ]
  %63 = phi i32 [ %19, %31 ], [ %19, %36 ], [ %19, %38 ], [ %60, %57 ], [ %19, %33 ], [ %19, %49 ]
  %64 = phi i32 [ %32, %31 ], [ %20, %36 ], [ %20, %38 ], [ %20, %57 ], [ %20, %33 ], [ %20, %49 ]
  %65 = icmp slt i32 %64, 2
  %66 = mul nsw i32 %64, 5
  %67 = icmp slt i32 %66, %62
  %68 = or i1 %65, %67
  br i1 %68, label %17, label %102

69:                                               ; preds = %17
  %70 = icmp slt i32 %18, 11
  %71 = icmp eq i32 %20, 0
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %69
  %74 = icmp eq i32 %18, 0
  %75 = icmp ult i32 %21, 10
  %76 = and i1 %74, %75
  %77 = select i1 %76, i32 0, i32 10
  br label %102

78:                                               ; preds = %69
  %79 = mul nsw i32 %20, 20
  %80 = icmp slt i32 %18, %79
  br i1 %80, label %102, label %81

81:                                               ; preds = %78
  br i1 %14, label %82, label %85

82:                                               ; preds = %81
  %83 = add nsw i32 %18, 30
  %84 = sub i32 %83, %79
  br label %96

85:                                               ; preds = %81
  %86 = sitofp i32 %18 to double
  %87 = fmul double %86, 2.500000e-01
  %88 = call double @log(double %87) #10
  %89 = fdiv double 9.000000e+01, %88
  %90 = sitofp i32 %19 to double
  %91 = fadd double %90, 1.000000e+00
  %92 = call double @log(double %91) #10
  %93 = fmul double %92, %89
  %94 = fadd double %93, 1.000000e+01
  %95 = fptosi double %94 to i32
  br label %96

96:                                               ; preds = %85, %82
  %97 = phi i32 [ %95, %85 ], [ %84, %82 ]
  %98 = icmp slt i32 %97, 100
  %99 = select i1 %98, i32 %97, i32 100
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  br label %102

102:                                              ; preds = %61, %78, %96, %73
  %103 = phi i32 [ %77, %73 ], [ %101, %96 ], [ 0, %78 ], [ 0, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i32 %103
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_sjisD0Ev(%"class.icu_69::CharsetRecog_sjis"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_sjis", %"class.icu_69::CharsetRecog_sjis"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  %3 = bitcast %"class.icu_69::CharsetRecog_sjis"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CharsetRecog_sjis8nextCharEPNS_12IteratedCharEPNS_9InputTextE(%"class.icu_69::CharsetRecog_sjis"* nocapture readnone, %"class.icu_69::IteratedChar"* nocapture, %"class.icu_69::InputText"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %5, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 -1, i32* %13, align 4
  br label %49

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 7
  %16 = load i8*, i8** %15, align 8
  %17 = add nsw i32 %5, 1
  store i32 %17, i32* %4, align 4
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 %21, i32* %22, align 4
  %23 = icmp sgt i8 %20, -1
  %24 = add nsw i32 %21, -161
  %25 = icmp ult i32 %24, 63
  %26 = or i1 %23, %25
  br i1 %26, label %49, label %27

27:                                               ; preds = %14
  %28 = load i32, i32* %8, align 8
  %29 = icmp slt i32 %17, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %31, align 1
  br label %41

32:                                               ; preds = %27
  %33 = load i8*, i8** %15, align 8
  %34 = add nsw i32 %5, 2
  store i32 %34, i32* %4, align 4
  %35 = sext i32 %17 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %21, 8
  %40 = or i32 %39, %38
  store i32 %40, i32* %22, align 4
  br label %41

41:                                               ; preds = %30, %32
  %42 = phi i32 [ %38, %32 ], [ -1, %30 ]
  %43 = and i32 %42, -64
  %44 = icmp eq i32 %43, 64
  %45 = add nsw i32 %42, -128
  %46 = icmp ult i32 %45, 127
  %47 = or i1 %44, %46
  br i1 %47, label %49, label %48

48:                                               ; preds = %41
  store i8 1, i8* %7, align 4
  br label %49

49:                                               ; preds = %11, %48, %41, %14
  %50 = phi i8 [ 1, %14 ], [ 1, %41 ], [ 1, %48 ], [ 0, %11 ]
  ret i8 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CharsetRecog_sjis5matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_sjis"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CharsetRecog_sjis", %"class.icu_69::CharsetRecog_sjis"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"* %4, %"class.icu_69::InputText"* %1, i16* getelementptr inbounds ([57 x i16], [57 x i16]* @_ZN6icu_69L16commonChars_sjisE, i64 0, i64 0), i32 57)
  %6 = getelementptr inbounds %"class.icu_69::CharsetRecog_sjis", %"class.icu_69::CharsetRecog_sjis"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %6, i32 %5, i8* null, i8* null) #10
  %7 = icmp sgt i32 %5, 0
  %8 = zext i1 %7 to i8
  ret i8 %8
}

declare void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetRecognizer"*, i32, i8*, i8*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6917CharsetRecog_sjis7getNameEv(%"class.icu_69::CharsetRecog_sjis"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6917CharsetRecog_sjis11getLanguageEv(%"class.icu_69::CharsetRecog_sjis"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6916CharsetRecog_eucD0Ev(%"class.icu_69::CharsetRecog_euc"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6916CharsetRecog_euc8nextCharEPNS_12IteratedCharEPNS_9InputTextE(%"class.icu_69::CharsetRecog_euc"* nocapture readnone, %"class.icu_69::IteratedChar"* nocapture, %"class.icu_69::InputText"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %5, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 -1, i32* %13, align 4
  br label %67

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 7
  %16 = load i8*, i8** %15, align 8
  %17 = add nsw i32 %5, 1
  store i32 %17, i32* %4, align 4
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 %21, i32* %22, align 4
  %23 = icmp ult i8 %20, -114
  br i1 %23, label %67, label %24

24:                                               ; preds = %14
  %25 = load i32, i32* %8, align 8
  %26 = icmp slt i32 %17, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %28, align 1
  br label %38

29:                                               ; preds = %24
  %30 = load i8*, i8** %15, align 8
  %31 = add nsw i32 %5, 2
  store i32 %31, i32* %4, align 4
  %32 = sext i32 %17 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %21, 8
  %37 = or i32 %36, %35
  store i32 %37, i32* %22, align 4
  br label %38

38:                                               ; preds = %27, %29
  %39 = phi i32 [ %37, %29 ], [ %21, %27 ]
  %40 = phi i32 [ %31, %29 ], [ %17, %27 ]
  %41 = phi i32 [ %35, %29 ], [ -1, %27 ]
  %42 = add nsw i32 %21, -161
  %43 = icmp ult i32 %42, 94
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = icmp slt i32 %41, 161
  br i1 %45, label %46, label %67

46:                                               ; preds = %44
  store i8 1, i8* %7, align 4
  br label %67

47:                                               ; preds = %38
  switch i8 %20, label %67 [
    i8 -114, label %48
    i8 -113, label %51
  ]

48:                                               ; preds = %47
  %49 = icmp slt i32 %41, 161
  br i1 %49, label %50, label %67

50:                                               ; preds = %48
  store i8 1, i8* %7, align 4
  br label %67

51:                                               ; preds = %47
  %52 = load i32, i32* %8, align 8
  %53 = icmp slt i32 %40, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %55, align 1
  store i32 -1, i32* %22, align 4
  br label %66

56:                                               ; preds = %51
  %57 = load i8*, i8** %15, align 8
  %58 = add nsw i32 %40, 1
  store i32 %58, i32* %4, align 4
  %59 = sext i32 %40 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nsw i32 %39, 8
  %64 = or i32 %63, %62
  store i32 %64, i32* %22, align 4
  %65 = icmp ult i8 %61, -95
  br i1 %65, label %66, label %67

66:                                               ; preds = %54, %56
  store i8 1, i8* %7, align 4
  br label %67

67:                                               ; preds = %11, %66, %56, %47, %48, %50, %44, %46, %14
  %68 = phi i8 [ 1, %14 ], [ 1, %46 ], [ 1, %44 ], [ 1, %50 ], [ 1, %48 ], [ 1, %47 ], [ 1, %56 ], [ 1, %66 ], [ 0, %11 ]
  ret i8 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6919CharsetRecog_euc_jpD0Ev(%"class.icu_69::CharsetRecog_euc_jp"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_jp", %"class.icu_69::CharsetRecog_euc_jp"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  %3 = bitcast %"class.icu_69::CharsetRecog_euc_jp"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6919CharsetRecog_euc_jp7getNameEv(%"class.icu_69::CharsetRecog_euc_jp"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6919CharsetRecog_euc_jp11getLanguageEv(%"class.icu_69::CharsetRecog_euc_jp"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6919CharsetRecog_euc_jp5matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_euc_jp"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_jp", %"class.icu_69::CharsetRecog_euc_jp"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"* %4, %"class.icu_69::InputText"* %1, i16* getelementptr inbounds ([100 x i16], [100 x i16]* @_ZN6icu_69L18commonChars_euc_jpE, i64 0, i64 0), i32 100)
  %6 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_jp", %"class.icu_69::CharsetRecog_euc_jp"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %6, i32 %5, i8* null, i8* null) #10
  %7 = icmp sgt i32 %5, 0
  %8 = zext i1 %7 to i8
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6919CharsetRecog_euc_krD0Ev(%"class.icu_69::CharsetRecog_euc_kr"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_kr", %"class.icu_69::CharsetRecog_euc_kr"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  %3 = bitcast %"class.icu_69::CharsetRecog_euc_kr"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6919CharsetRecog_euc_kr7getNameEv(%"class.icu_69::CharsetRecog_euc_kr"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6919CharsetRecog_euc_kr11getLanguageEv(%"class.icu_69::CharsetRecog_euc_kr"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6919CharsetRecog_euc_kr5matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_euc_kr"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_kr", %"class.icu_69::CharsetRecog_euc_kr"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"* %4, %"class.icu_69::InputText"* %1, i16* getelementptr inbounds ([100 x i16], [100 x i16]* @_ZN6icu_69L18commonChars_euc_krE, i64 0, i64 0), i32 100)
  %6 = getelementptr inbounds %"class.icu_69::CharsetRecog_euc_kr", %"class.icu_69::CharsetRecog_euc_kr"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %6, i32 %5, i8* null, i8* null) #10
  %7 = icmp sgt i32 %5, 0
  %8 = zext i1 %7 to i8
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CharsetRecog_big5D0Ev(%"class.icu_69::CharsetRecog_big5"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_big5", %"class.icu_69::CharsetRecog_big5"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  %3 = bitcast %"class.icu_69::CharsetRecog_big5"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CharsetRecog_big58nextCharEPNS_12IteratedCharEPNS_9InputTextE(%"class.icu_69::CharsetRecog_big5"* nocapture readnone, %"class.icu_69::IteratedChar"* nocapture, %"class.icu_69::InputText"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %5, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 -1, i32* %13, align 4
  br label %43

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 7
  %16 = load i8*, i8** %15, align 8
  %17 = add nsw i32 %5, 1
  store i32 %17, i32* %4, align 4
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 %21, i32* %22, align 4
  %23 = icmp sgt i8 %20, -2
  br i1 %23, label %43, label %24

24:                                               ; preds = %14
  %25 = load i32, i32* %8, align 8
  %26 = icmp slt i32 %17, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %28, align 1
  br label %42

29:                                               ; preds = %24
  %30 = load i8*, i8** %15, align 8
  %31 = add nsw i32 %5, 2
  store i32 %31, i32* %4, align 4
  %32 = sext i32 %17 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %21, 8
  %37 = or i32 %36, %35
  store i32 %37, i32* %22, align 4
  %38 = icmp ult i8 %34, 64
  %39 = or i32 %35, 128
  %40 = icmp eq i32 %39, 255
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %27, %29
  store i8 1, i8* %7, align 4
  br label %43

43:                                               ; preds = %11, %42, %29, %14
  %44 = phi i8 [ 1, %14 ], [ 1, %29 ], [ 1, %42 ], [ 0, %11 ]
  ret i8 %44
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6917CharsetRecog_big57getNameEv(%"class.icu_69::CharsetRecog_big5"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6917CharsetRecog_big511getLanguageEv(%"class.icu_69::CharsetRecog_big5"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CharsetRecog_big55matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_big5"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CharsetRecog_big5", %"class.icu_69::CharsetRecog_big5"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"* %4, %"class.icu_69::InputText"* %1, i16* getelementptr inbounds ([96 x i16], [96 x i16]* @_ZN6icu_69L16commonChars_big5E, i64 0, i64 0), i32 96)
  %6 = getelementptr inbounds %"class.icu_69::CharsetRecog_big5", %"class.icu_69::CharsetRecog_big5"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %6, i32 %5, i8* null, i8* null) #10
  %7 = icmp sgt i32 %5, 0
  %8 = zext i1 %7 to i8
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921CharsetRecog_gb_18030D0Ev(%"class.icu_69::CharsetRecog_gb_18030"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CharsetRecog_gb_18030", %"class.icu_69::CharsetRecog_gb_18030"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6917CharsetRecognizerD2Ev(%"class.icu_69::CharsetRecognizer"* %2) #10
  %3 = bitcast %"class.icu_69::CharsetRecog_gb_18030"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6921CharsetRecog_gb_180308nextCharEPNS_12IteratedCharEPNS_9InputTextE(%"class.icu_69::CharsetRecog_gb_18030"* nocapture readnone, %"class.icu_69::IteratedChar"* nocapture, %"class.icu_69::InputText"* nocapture readonly) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 3
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %5, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 -1, i32* %13, align 4
  br label %87

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.icu_69::InputText", %"class.icu_69::InputText"* %2, i64 0, i32 7
  %16 = load i8*, i8** %15, align 8
  %17 = add nsw i32 %5, 1
  store i32 %17, i32* %4, align 4
  %18 = sext i32 %5 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 0
  store i32 %21, i32* %22, align 4
  %23 = icmp ult i8 %20, -127
  br i1 %23, label %87, label %24

24:                                               ; preds = %14
  %25 = load i32, i32* %8, align 8
  %26 = icmp slt i32 %17, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %28, align 1
  br label %38

29:                                               ; preds = %24
  %30 = load i8*, i8** %15, align 8
  %31 = add nsw i32 %5, 2
  store i32 %31, i32* %4, align 4
  %32 = sext i32 %17 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %21, 8
  %37 = or i32 %36, %35
  store i32 %37, i32* %22, align 4
  br label %38

38:                                               ; preds = %27, %29
  %39 = phi i32 [ %37, %29 ], [ %21, %27 ]
  %40 = phi i32 [ %31, %29 ], [ %17, %27 ]
  %41 = phi i32 [ %35, %29 ], [ -1, %27 ]
  %42 = add nsw i32 %21, -129
  %43 = icmp ult i32 %42, 126
  br i1 %43, label %44, label %87

44:                                               ; preds = %38
  %45 = add nsw i32 %41, -64
  %46 = icmp ult i32 %45, 63
  %47 = add nsw i32 %41, -80
  %48 = icmp ult i32 %47, 175
  %49 = or i1 %46, %48
  br i1 %49, label %87, label %50

50:                                               ; preds = %44
  %51 = add nsw i32 %41, -48
  %52 = icmp ult i32 %51, 10
  br i1 %52, label %53, label %86

53:                                               ; preds = %50
  %54 = load i32, i32* %8, align 8
  %55 = icmp slt i32 %40, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %57, align 1
  br label %86

58:                                               ; preds = %53
  %59 = load i8*, i8** %15, align 8
  %60 = add nsw i32 %40, 1
  store i32 %60, i32* %4, align 4
  %61 = sext i32 %40 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = add nsw i32 %64, -129
  %66 = icmp ult i32 %65, 126
  br i1 %66, label %67, label %86

67:                                               ; preds = %58
  %68 = load i32, i32* %8, align 8
  %69 = icmp slt i32 %60, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.icu_69::IteratedChar", %"class.icu_69::IteratedChar"* %1, i64 0, i32 4
  store i8 1, i8* %71, align 1
  br label %86

72:                                               ; preds = %67
  %73 = load i8*, i8** %15, align 8
  %74 = add nsw i32 %40, 2
  store i32 %74, i32* %4, align 4
  %75 = sext i32 %60 to i64
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %78, -48
  %80 = icmp ult i32 %79, 10
  br i1 %80, label %81, label %86

81:                                               ; preds = %72
  %82 = shl i32 %39, 16
  %83 = shl nuw nsw i32 %64, 8
  %84 = or i32 %83, %78
  %85 = or i32 %84, %82
  store i32 %85, i32* %22, align 4
  br label %87

86:                                               ; preds = %70, %56, %58, %72, %50
  store i8 1, i8* %7, align 4
  br label %87

87:                                               ; preds = %11, %38, %86, %44, %14, %81
  %88 = phi i8 [ 1, %81 ], [ 1, %14 ], [ 1, %44 ], [ 1, %86 ], [ 1, %38 ], [ 0, %11 ]
  ret i8 %88
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6921CharsetRecog_gb_180307getNameEv(%"class.icu_69::CharsetRecog_gb_18030"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6icu_6921CharsetRecog_gb_1803011getLanguageEv(%"class.icu_69::CharsetRecog_gb_18030"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6921CharsetRecog_gb_180305matchEPNS_9InputTextEPNS_12CharsetMatchE(%"class.icu_69::CharsetRecog_gb_18030"*, %"class.icu_69::InputText"*, %"class.icu_69::CharsetMatch"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CharsetRecog_gb_18030", %"class.icu_69::CharsetRecog_gb_18030"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZNK6icu_6917CharsetRecog_mbcs10match_mbcsEPNS_9InputTextEPKti(%"class.icu_69::CharsetRecog_mbcs"* %4, %"class.icu_69::InputText"* %1, i16* getelementptr inbounds ([100 x i16], [100 x i16]* @_ZN6icu_69L20commonChars_gb_18030E, i64 0, i64 0), i32 100)
  %6 = getelementptr inbounds %"class.icu_69::CharsetRecog_gb_18030", %"class.icu_69::CharsetRecog_gb_18030"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_6912CharsetMatch3setEPNS_9InputTextEPKNS_17CharsetRecognizerEiPKcS7_(%"class.icu_69::CharsetMatch"* %2, %"class.icu_69::InputText"* %1, %"class.icu_69::CharsetRecognizer"* %6, i32 %5, i8* null, i8* null) #10
  %7 = icmp sgt i32 %5, 0
  %8 = zext i1 %7 to i8
  ret i8 %8
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
