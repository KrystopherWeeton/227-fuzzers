; ModuleID = '../../v8/src/numbers/bignum.cc'
source_filename = "../../v8/src/numbers/bignum.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Bignum" = type { [128 x i32], %"class.v8::internal::Vector", i32, i32 }
%"class.v8::internal::Vector" = type { i32*, i64 }

@_ZZN2v88internal6Bignum20MultiplyByPowerOfTenEiE12kFive1_to_12 = internal unnamed_addr constant [12 x i32] [i32 5, i32 25, i32 125, i32 625, i32 3125, i32 15625, i32 78125, i32 390625, i32 1953125, i32 9765625, i32 48828125, i32 244140625], align 16
@.str.1 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal6BignumC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::Bignum"*), void (%"class.v8::internal::Bignum"*)* @_ZN2v88internal6BignumC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6BignumC2Ev(%"class.v8::internal::Bignum"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 0, i64 0
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  store i32* %2, i32** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 1
  store i64 128, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 4
  store i32 0, i32* %2, align 4
  br label %8

7:                                                ; preds = %8
  ret void

8:                                                ; preds = %20, %1
  %9 = phi i64 [ 1, %1 ], [ %23, %20 ]
  %10 = load i32*, i32** %3, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %9
  store i32 0, i32* %11, align 4
  %12 = add nuw nsw i64 %9, 1
  %13 = load i32*, i32** %3, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %12
  store i32 0, i32* %14, align 4
  %15 = add nuw nsw i64 %9, 2
  %16 = load i32*, i32** %3, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %15
  store i32 0, i32* %17, align 4
  %18 = add nuw nsw i64 %9, 3
  %19 = icmp eq i64 %18, 128
  br i1 %19, label %7, label %20

20:                                               ; preds = %8
  %21 = load i32*, i32** %3, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 %18
  store i32 0, i32* %22, align 4
  %23 = add nuw nsw i64 %9, 4
  br label %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum12AssignUInt16Et(%"class.v8::internal::Bignum"* nocapture, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = load i32*, i32** %7, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %9
  store i32 0, i32* %11, align 4
  %12 = add nuw nsw i64 %9, 1
  %13 = load i32, i32* %3, align 8
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %8, label %16

16:                                               ; preds = %8, %2
  store i32 0, i32* %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %17, align 4
  %18 = icmp eq i16 %1, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = zext i16 %1 to i32
  %21 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %22 = load i32*, i32** %21, align 8
  store i32 %20, i32* %22, align 4
  store i32 1, i32* %3, align 8
  br label %23

23:                                               ; preds = %16, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum4ZeroEv(%"class.v8::internal::Bignum"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %9

7:                                                ; preds = %9, %1
  store i32 0, i32* %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 4
  ret void

9:                                                ; preds = %5, %9
  %10 = phi i64 [ 0, %5 ], [ %13, %9 ]
  %11 = load i32*, i32** %6, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %10
  store i32 0, i32* %12, align 4
  %13 = add nuw nsw i64 %10, 1
  %14 = load i32, i32* %2, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %9, label %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum12AssignUInt64Em(%"class.v8::internal::Bignum"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %12, %8 ]
  %10 = load i32*, i32** %7, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 %9
  store i32 0, i32* %11, align 4
  %12 = add nuw nsw i64 %9, 1
  %13 = load i32, i32* %3, align 8
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %8, label %16

16:                                               ; preds = %8, %2
  store i32 0, i32* %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %17, align 4
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %21 = trunc i64 %1 to i32
  %22 = and i32 %21, 268435455
  %23 = load i32*, i32** %20, align 8
  store i32 %22, i32* %23, align 4
  %24 = lshr i64 %1, 28
  %25 = trunc i64 %24 to i32
  %26 = and i32 %25, 268435455
  %27 = load i32*, i32** %20, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 1
  store i32 %26, i32* %28, align 4
  %29 = lshr i64 %1, 56
  %30 = trunc i64 %29 to i32
  %31 = load i32*, i32** %20, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 2
  store i32 %30, i32* %32, align 4
  store i32 3, i32* %3, align 8
  %33 = load i32*, i32** %20, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %19
  store i32 2, i32* %3, align 8
  %38 = getelementptr inbounds i32, i32* %33, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %42

41:                                               ; preds = %43
  store i32 0, i32* %3, align 8
  store i32 0, i32* %17, align 4
  br label %42

42:                                               ; preds = %19, %37, %43, %41, %16
  ret void

43:                                               ; preds = %37
  store i32 1, i32* %3, align 8
  %44 = load i32, i32* %33, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %41, label %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum5ClampEv(%"class.v8::internal::Bignum"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %7 = sext i32 %3 to i64
  %8 = load i32*, i32** %6, align 8
  br label %9

9:                                                ; preds = %5, %15
  %10 = phi i64 [ %7, %5 ], [ %11, %15 ]
  %11 = add nsw i64 %10, -1
  %12 = getelementptr inbounds i32, i32* %8, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %9
  %16 = trunc i64 %11 to i32
  store i32 %16, i32* %2, align 8
  %17 = icmp sgt i64 %11, 0
  br i1 %17, label %9, label %18

18:                                               ; preds = %15
  %19 = trunc i64 %11 to i32
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi i32 [ %3, %1 ], [ %19, %18 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %24, align 4
  br label %25

25:                                               ; preds = %9, %23, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum12AssignBignumERKS1_(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %20

12:                                               ; preds = %20, %2
  %13 = phi i32 [ %7, %2 ], [ %28, %20 ]
  %14 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %33

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %19 = sext i32 %13 to i64
  br label %35

20:                                               ; preds = %9, %20
  %21 = phi i64 [ 0, %9 ], [ %27, %20 ]
  %22 = load i32*, i32** %10, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 %21
  %24 = load i32, i32* %23, align 4
  %25 = load i32*, i32** %11, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %21
  store i32 %24, i32* %26, align 4
  %27 = add nuw nsw i64 %21, 1
  %28 = load i32, i32* %6, align 8
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  br i1 %30, label %20, label %12

31:                                               ; preds = %35
  %32 = load i32, i32* %6, align 8
  br label %33

33:                                               ; preds = %31, %12
  %34 = phi i32 [ %32, %31 ], [ %13, %12 ]
  store i32 %34, i32* %14, align 8
  ret void

35:                                               ; preds = %17, %35
  %36 = phi i64 [ %19, %17 ], [ %39, %35 ]
  %37 = load i32*, i32** %18, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %36
  store i32 0, i32* %38, align 4
  %39 = add nsw i64 %36, 1
  %40 = load i32, i32* %14, align 8
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  br i1 %42, label %35, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum19AssignDecimalStringENS0_6VectorIKcEE(%"class.v8::internal::Bignum"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::internal::Bignum", align 8
  %5 = alloca %"class.v8::internal::Bignum", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %15, %11 ]
  %13 = load i32*, i32** %10, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %12
  store i32 0, i32* %14, align 4
  %15 = add nuw nsw i64 %12, 1
  %16 = load i32, i32* %6, align 8
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %11, label %19

19:                                               ; preds = %11, %3
  store i32 0, i32* %6, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %20, align 4
  %21 = trunc i64 %2 to i32
  %22 = icmp sgt i32 %21, 18
  br i1 %22, label %23, label %227

23:                                               ; preds = %19
  %24 = bitcast %"class.v8::internal::Bignum"* %4 to i8*
  %25 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 0, i64 0
  %26 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 2
  %29 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 3
  %30 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 0, i64 1
  %31 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %4, i64 0, i32 0, i64 2
  br label %32

32:                                               ; preds = %23, %223
  %33 = phi i64 [ 0, %23 ], [ %164, %223 ]
  %34 = phi i32 [ %21, %23 ], [ %165, %223 ]
  %35 = getelementptr inbounds i8, i8* %1, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i64
  %38 = add nuw nsw i64 %33, 1
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i64
  %42 = mul nsw i64 %37, 10
  %43 = add nsw i64 %42, -528
  %44 = add nsw i64 %43, %41
  %45 = add nuw nsw i64 %33, 2
  %46 = getelementptr inbounds i8, i8* %1, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i64
  %49 = mul nsw i64 %44, 10
  %50 = add nsw i64 %49, -48
  %51 = add nsw i64 %50, %48
  %52 = add nuw nsw i64 %33, 3
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i64
  %56 = mul i64 %51, 10
  %57 = add nsw i64 %56, -48
  %58 = add nsw i64 %57, %55
  %59 = add nuw nsw i64 %33, 4
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i64
  %63 = mul i64 %58, 10
  %64 = add nsw i64 %63, -48
  %65 = add nsw i64 %64, %62
  %66 = add nuw nsw i64 %33, 5
  %67 = getelementptr inbounds i8, i8* %1, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i64
  %70 = mul i64 %65, 10
  %71 = add nsw i64 %70, -48
  %72 = add nsw i64 %71, %69
  %73 = add nuw nsw i64 %33, 6
  %74 = getelementptr inbounds i8, i8* %1, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i64
  %77 = mul i64 %72, 10
  %78 = add nsw i64 %77, -48
  %79 = add nsw i64 %78, %76
  %80 = add nuw nsw i64 %33, 7
  %81 = getelementptr inbounds i8, i8* %1, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i64
  %84 = mul i64 %79, 10
  %85 = add nsw i64 %84, -48
  %86 = add nsw i64 %85, %83
  %87 = add nuw nsw i64 %33, 8
  %88 = getelementptr inbounds i8, i8* %1, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i64
  %91 = mul i64 %86, 10
  %92 = add nsw i64 %91, -48
  %93 = add nsw i64 %92, %90
  %94 = add nuw nsw i64 %33, 9
  %95 = getelementptr inbounds i8, i8* %1, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i64
  %98 = mul i64 %93, 10
  %99 = add nsw i64 %98, -48
  %100 = add nsw i64 %99, %97
  %101 = add nuw nsw i64 %33, 10
  %102 = getelementptr inbounds i8, i8* %1, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = sext i8 %103 to i64
  %105 = mul i64 %100, 10
  %106 = add nsw i64 %105, -48
  %107 = add nsw i64 %106, %104
  %108 = add nuw nsw i64 %33, 11
  %109 = getelementptr inbounds i8, i8* %1, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i64
  %112 = mul i64 %107, 10
  %113 = add nsw i64 %112, -48
  %114 = add nsw i64 %113, %111
  %115 = add nuw nsw i64 %33, 12
  %116 = getelementptr inbounds i8, i8* %1, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = sext i8 %117 to i64
  %119 = mul i64 %114, 10
  %120 = add nsw i64 %119, -48
  %121 = add nsw i64 %120, %118
  %122 = add nuw nsw i64 %33, 13
  %123 = getelementptr inbounds i8, i8* %1, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i64
  %126 = mul i64 %121, 10
  %127 = add nsw i64 %126, -48
  %128 = add nsw i64 %127, %125
  %129 = add nuw nsw i64 %33, 14
  %130 = getelementptr inbounds i8, i8* %1, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i64
  %133 = mul i64 %128, 10
  %134 = add nsw i64 %133, -48
  %135 = add nsw i64 %134, %132
  %136 = add nuw nsw i64 %33, 15
  %137 = getelementptr inbounds i8, i8* %1, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i64
  %140 = mul i64 %135, 10
  %141 = add nsw i64 %140, -48
  %142 = add nsw i64 %141, %139
  %143 = add nuw nsw i64 %33, 16
  %144 = getelementptr inbounds i8, i8* %1, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i64
  %147 = mul i64 %142, 10
  %148 = add nsw i64 %147, -48
  %149 = add nsw i64 %148, %146
  %150 = add nuw nsw i64 %33, 17
  %151 = getelementptr inbounds i8, i8* %1, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i64
  %154 = mul i64 %149, 10
  %155 = add i64 %154, -48
  %156 = add i64 %155, %153
  %157 = add nuw nsw i64 %33, 18
  %158 = getelementptr inbounds i8, i8* %1, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i64
  %161 = mul i64 %156, 10
  %162 = add i64 %161, -48
  %163 = add i64 %162, %160
  %164 = add nuw nsw i64 %33, 19
  %165 = add nsw i32 %34, -19
  call void @_ZN2v88internal6Bignum20MultiplyByPowerOfTenEi(%"class.v8::internal::Bignum"* %0, i32 19)
  %166 = icmp eq i64 %163, 0
  br i1 %166, label %223, label %167

167:                                              ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %24) #6
  store i32* %25, i32** %26, align 8
  store i64 128, i64* %27, align 8
  store i32 0, i32* %28, align 8
  store i32 0, i32* %29, align 4
  store i32 0, i32* %25, align 8
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 8
  br label %168

168:                                              ; preds = %168, %167
  %169 = phi i64 [ 3, %167 ], [ %184, %168 ]
  %170 = load i32*, i32** %26, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 %169
  store i32 0, i32* %171, align 4
  %172 = add nuw nsw i64 %169, 1
  %173 = load i32*, i32** %26, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 %172
  store i32 0, i32* %174, align 4
  %175 = add nuw nsw i64 %169, 2
  %176 = load i32*, i32** %26, align 8
  %177 = getelementptr inbounds i32, i32* %176, i64 %175
  store i32 0, i32* %177, align 4
  %178 = add nuw nsw i64 %169, 3
  %179 = load i32*, i32** %26, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %178
  store i32 0, i32* %180, align 4
  %181 = add nuw nsw i64 %169, 4
  %182 = load i32*, i32** %26, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 %181
  store i32 0, i32* %183, align 4
  %184 = add nuw nsw i64 %169, 5
  %185 = icmp eq i64 %184, 128
  br i1 %185, label %186, label %168

186:                                              ; preds = %168
  %187 = load i32, i32* %28, align 8
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %197

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %193, %189 ], [ 0, %186 ]
  %191 = load i32*, i32** %26, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 %190
  store i32 0, i32* %192, align 4
  %193 = add nuw nsw i64 %190, 1
  %194 = load i32, i32* %28, align 8
  %195 = sext i32 %194 to i64
  %196 = icmp slt i64 %193, %195
  br i1 %196, label %189, label %197

197:                                              ; preds = %189, %186
  store i32 0, i32* %29, align 4
  %198 = trunc i64 %163 to i32
  %199 = and i32 %198, 268435455
  %200 = load i32*, i32** %26, align 8
  store i32 %199, i32* %200, align 4
  %201 = lshr i64 %163, 28
  %202 = trunc i64 %201 to i32
  %203 = and i32 %202, 268435455
  %204 = load i32*, i32** %26, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 1
  store i32 %203, i32* %205, align 4
  %206 = lshr i64 %163, 56
  %207 = trunc i64 %206 to i32
  %208 = load i32*, i32** %26, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 2
  store i32 %207, i32* %209, align 4
  store i32 3, i32* %28, align 8
  %210 = load i32*, i32** %26, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 2
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %222

214:                                              ; preds = %197
  store i32 2, i32* %28, align 8
  %215 = getelementptr inbounds i32, i32* %210, i64 1
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %219, label %222

218:                                              ; preds = %219
  store i32 0, i32* %28, align 8
  store i32 0, i32* %29, align 4
  br label %222

219:                                              ; preds = %214
  store i32 1, i32* %28, align 8
  %220 = load i32, i32* %210, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %218, label %222

222:                                              ; preds = %219, %218, %214, %197
  call void @_ZN2v88internal6Bignum9AddBignumERKS1_(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %24) #6
  br label %223

223:                                              ; preds = %32, %222
  %224 = icmp sgt i32 %165, 18
  br i1 %224, label %32, label %225

225:                                              ; preds = %223
  %226 = trunc i64 %164 to i32
  br label %227

227:                                              ; preds = %225, %19
  %228 = phi i32 [ 0, %19 ], [ %226, %225 ]
  %229 = phi i32 [ %21, %19 ], [ %165, %225 ]
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %227
  call void @_ZN2v88internal6Bignum20MultiplyByPowerOfTenEi(%"class.v8::internal::Bignum"* %0, i32 %229)
  br label %313

232:                                              ; preds = %227
  %233 = add nsw i32 %229, %228
  %234 = zext i32 %228 to i64
  %235 = sext i32 %233 to i64
  br label %236

236:                                              ; preds = %236, %232
  %237 = phi i64 [ %234, %232 ], [ %245, %236 ]
  %238 = phi i64 [ 0, %232 ], [ %244, %236 ]
  %239 = getelementptr inbounds i8, i8* %1, i64 %237
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i64
  %242 = mul i64 %238, 10
  %243 = add i64 %242, -48
  %244 = add i64 %243, %241
  %245 = add nuw nsw i64 %237, 1
  %246 = icmp slt i64 %245, %235
  br i1 %246, label %236, label %247

247:                                              ; preds = %236
  call void @_ZN2v88internal6Bignum20MultiplyByPowerOfTenEi(%"class.v8::internal::Bignum"* %0, i32 %229)
  %248 = icmp eq i64 %244, 0
  br i1 %248, label %313, label %249

249:                                              ; preds = %247
  %250 = bitcast %"class.v8::internal::Bignum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %250) #6
  %251 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 0, i64 0
  %252 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 1, i32 0
  store i32* %251, i32** %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 1, i32 1
  store i64 128, i64* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 2
  store i32 0, i32* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 3
  store i32 0, i32* %255, align 4
  store i32 0, i32* %251, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 0, i64 1
  store i32 0, i32* %256, align 4
  %257 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %5, i64 0, i32 0, i64 2
  store i32 0, i32* %257, align 8
  br label %258

258:                                              ; preds = %258, %249
  %259 = phi i64 [ 3, %249 ], [ %274, %258 ]
  %260 = load i32*, i32** %252, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 %259
  store i32 0, i32* %261, align 4
  %262 = add nuw nsw i64 %259, 1
  %263 = load i32*, i32** %252, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 %262
  store i32 0, i32* %264, align 4
  %265 = add nuw nsw i64 %259, 2
  %266 = load i32*, i32** %252, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %265
  store i32 0, i32* %267, align 4
  %268 = add nuw nsw i64 %259, 3
  %269 = load i32*, i32** %252, align 8
  %270 = getelementptr inbounds i32, i32* %269, i64 %268
  store i32 0, i32* %270, align 4
  %271 = add nuw nsw i64 %259, 4
  %272 = load i32*, i32** %252, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 %271
  store i32 0, i32* %273, align 4
  %274 = add nuw nsw i64 %259, 5
  %275 = icmp eq i64 %274, 128
  br i1 %275, label %276, label %258

276:                                              ; preds = %258
  %277 = load i32, i32* %254, align 8
  %278 = icmp sgt i32 %277, 0
  br i1 %278, label %279, label %287

279:                                              ; preds = %276, %279
  %280 = phi i64 [ %283, %279 ], [ 0, %276 ]
  %281 = load i32*, i32** %252, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %280
  store i32 0, i32* %282, align 4
  %283 = add nuw nsw i64 %280, 1
  %284 = load i32, i32* %254, align 8
  %285 = sext i32 %284 to i64
  %286 = icmp slt i64 %283, %285
  br i1 %286, label %279, label %287

287:                                              ; preds = %279, %276
  store i32 0, i32* %255, align 4
  %288 = trunc i64 %244 to i32
  %289 = and i32 %288, 268435455
  %290 = load i32*, i32** %252, align 8
  store i32 %289, i32* %290, align 4
  %291 = lshr i64 %244, 28
  %292 = trunc i64 %291 to i32
  %293 = and i32 %292, 268435455
  %294 = load i32*, i32** %252, align 8
  %295 = getelementptr inbounds i32, i32* %294, i64 1
  store i32 %293, i32* %295, align 4
  %296 = lshr i64 %244, 56
  %297 = trunc i64 %296 to i32
  %298 = load i32*, i32** %252, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 2
  store i32 %297, i32* %299, align 4
  store i32 3, i32* %254, align 8
  %300 = load i32*, i32** %252, align 8
  %301 = getelementptr inbounds i32, i32* %300, i64 2
  %302 = load i32, i32* %301, align 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %312

304:                                              ; preds = %287
  store i32 2, i32* %254, align 8
  %305 = getelementptr inbounds i32, i32* %300, i64 1
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %309, label %312

308:                                              ; preds = %309
  store i32 0, i32* %254, align 8
  store i32 0, i32* %255, align 4
  br label %312

309:                                              ; preds = %304
  store i32 1, i32* %254, align 8
  %310 = load i32, i32* %300, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %308, label %312

312:                                              ; preds = %309, %308, %304, %287
  call void @_ZN2v88internal6Bignum9AddBignumERKS1_(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %250) #6
  br label %313

313:                                              ; preds = %231, %247, %312
  %314 = load i32, i32* %6, align 8
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %316, label %331

316:                                              ; preds = %313
  %317 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %318 = sext i32 %314 to i64
  %319 = load i32*, i32** %317, align 8
  br label %320

320:                                              ; preds = %326, %316
  %321 = phi i64 [ %318, %316 ], [ %322, %326 ]
  %322 = add nsw i64 %321, -1
  %323 = getelementptr inbounds i32, i32* %319, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %335

326:                                              ; preds = %320
  %327 = trunc i64 %322 to i32
  store i32 %327, i32* %6, align 8
  %328 = icmp sgt i64 %322, 0
  br i1 %328, label %320, label %329

329:                                              ; preds = %326
  %330 = trunc i64 %322 to i32
  br label %331

331:                                              ; preds = %329, %313
  %332 = phi i32 [ %314, %313 ], [ %330, %329 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  store i32 0, i32* %20, align 4
  br label %335

335:                                              ; preds = %320, %331, %334
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum20MultiplyByPowerOfTenEi(%"class.v8::internal::Bignum"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %204, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %204, label %8

8:                                                ; preds = %4
  %9 = icmp sgt i32 %1, 26
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %18

12:                                               ; preds = %60, %8
  %13 = phi i32 [ %6, %8 ], [ %61, %60 ]
  %14 = phi i32 [ %1, %8 ], [ %62, %60 ]
  %15 = icmp sgt i32 %14, 12
  br i1 %15, label %16, label %105

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %64

18:                                               ; preds = %10, %60
  %19 = phi i32 [ %6, %10 ], [ %61, %60 ]
  %20 = phi i32 [ %1, %10 ], [ %62, %60 ]
  %21 = icmp sgt i32 %19, 0
  br i1 %21, label %24, label %60

22:                                               ; preds = %24
  %23 = icmp eq i64 %40, 0
  br i1 %23, label %60, label %45

24:                                               ; preds = %18, %24
  %25 = phi i64 [ %41, %24 ], [ 0, %18 ]
  %26 = phi i64 [ %40, %24 ], [ 0, %18 ]
  %27 = load i32*, i32** %11, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = mul nuw i64 %30, 4195354525
  %32 = and i64 %26, 268435455
  %33 = add nuw i64 %31, %32
  %34 = trunc i64 %33 to i32
  %35 = and i32 %34, 268435455
  store i32 %35, i32* %28, align 4
  %36 = lshr i64 %26, 28
  %37 = lshr i64 %33, 28
  %38 = mul i64 %30, 27755575600
  %39 = add i64 %38, %36
  %40 = add i64 %39, %37
  %41 = add nuw nsw i64 %25, 1
  %42 = load i32, i32* %5, align 8
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %41, %43
  br i1 %44, label %24, label %22

45:                                               ; preds = %22, %50
  %46 = phi i32 [ %57, %50 ], [ %42, %22 ]
  %47 = phi i64 [ %58, %50 ], [ %40, %22 ]
  %48 = icmp sgt i32 %46, 127
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

50:                                               ; preds = %45
  %51 = trunc i64 %47 to i32
  %52 = and i32 %51, 268435455
  %53 = sext i32 %46 to i64
  %54 = load i32*, i32** %11, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %53
  store i32 %52, i32* %55, align 4
  %56 = load i32, i32* %5, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %5, align 8
  %58 = lshr i64 %47, 28
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %45

60:                                               ; preds = %50, %18, %22
  %61 = phi i32 [ %19, %18 ], [ %42, %22 ], [ %57, %50 ]
  %62 = add nsw i32 %20, -27
  %63 = icmp sgt i32 %62, 26
  br i1 %63, label %18, label %12

64:                                               ; preds = %16, %101
  %65 = phi i32 [ %13, %16 ], [ %102, %101 ]
  %66 = phi i32 [ %14, %16 ], [ %103, %101 ]
  %67 = icmp sgt i32 %65, 0
  br i1 %67, label %70, label %101

68:                                               ; preds = %70
  %69 = icmp eq i64 %81, 0
  br i1 %69, label %101, label %86

70:                                               ; preds = %64, %70
  %71 = phi i64 [ %82, %70 ], [ 0, %64 ]
  %72 = phi i64 [ %81, %70 ], [ 0, %64 ]
  %73 = load i32*, i32** %17, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 1220703125
  %78 = add nuw i64 %77, %72
  %79 = trunc i64 %78 to i32
  %80 = and i32 %79, 268435455
  store i32 %80, i32* %74, align 4
  %81 = lshr i64 %78, 28
  %82 = add nuw nsw i64 %71, 1
  %83 = load i32, i32* %5, align 8
  %84 = sext i32 %83 to i64
  %85 = icmp slt i64 %82, %84
  br i1 %85, label %70, label %68

86:                                               ; preds = %68, %91
  %87 = phi i32 [ %98, %91 ], [ %83, %68 ]
  %88 = phi i64 [ %99, %91 ], [ %81, %68 ]
  %89 = icmp sgt i32 %87, 127
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

91:                                               ; preds = %86
  %92 = trunc i64 %88 to i32
  %93 = and i32 %92, 268435455
  %94 = sext i32 %87 to i64
  %95 = load i32*, i32** %17, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 %94
  store i32 %93, i32* %96, align 4
  %97 = load i32, i32* %5, align 8
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %5, align 8
  %99 = lshr i64 %88, 28
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %86

101:                                              ; preds = %91, %64, %68
  %102 = phi i32 [ %65, %64 ], [ %83, %68 ], [ %98, %91 ]
  %103 = add nsw i32 %66, -13
  %104 = icmp sgt i32 %103, 12
  br i1 %104, label %64, label %105

105:                                              ; preds = %101, %12
  %106 = phi i32 [ %13, %12 ], [ %102, %101 ]
  %107 = phi i32 [ %14, %12 ], [ %103, %101 ]
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %166

109:                                              ; preds = %105
  %110 = add nsw i32 %107, -1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [12 x i32], [12 x i32]* @_ZZN2v88internal6Bignum20MultiplyByPowerOfTenEiE12kFive1_to_12, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  switch i32 %113, label %128 [
    i32 1, label %166
    i32 0, label %114
  ]

114:                                              ; preds = %109
  %115 = icmp sgt i32 %106, 0
  br i1 %115, label %116, label %126

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %122, %118 ]
  %120 = load i32*, i32** %117, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 %119
  store i32 0, i32* %121, align 4
  %122 = add nuw nsw i64 %119, 1
  %123 = load i32, i32* %5, align 8
  %124 = sext i32 %123 to i64
  %125 = icmp slt i64 %122, %124
  br i1 %125, label %118, label %126

126:                                              ; preds = %118, %114
  store i32 0, i32* %5, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %127, align 4
  br label %204

128:                                              ; preds = %109
  %129 = icmp sgt i32 %106, 0
  br i1 %129, label %130, label %166

130:                                              ; preds = %128
  %131 = zext i32 %113 to i64
  %132 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %135

133:                                              ; preds = %135
  %134 = icmp eq i64 %146, 0
  br i1 %134, label %166, label %151

135:                                              ; preds = %135, %130
  %136 = phi i64 [ 0, %130 ], [ %147, %135 ]
  %137 = phi i64 [ 0, %130 ], [ %146, %135 ]
  %138 = load i32*, i32** %132, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 %136
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = mul nuw i64 %141, %131
  %143 = add i64 %142, %137
  %144 = trunc i64 %143 to i32
  %145 = and i32 %144, 268435455
  store i32 %145, i32* %139, align 4
  %146 = lshr i64 %143, 28
  %147 = add nuw nsw i64 %136, 1
  %148 = load i32, i32* %5, align 8
  %149 = sext i32 %148 to i64
  %150 = icmp slt i64 %147, %149
  br i1 %150, label %135, label %133

151:                                              ; preds = %133, %156
  %152 = phi i32 [ %163, %156 ], [ %148, %133 ]
  %153 = phi i64 [ %164, %156 ], [ %146, %133 ]
  %154 = icmp sgt i32 %152, 127
  br i1 %154, label %155, label %156

155:                                              ; preds = %151
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

156:                                              ; preds = %151
  %157 = trunc i64 %153 to i32
  %158 = and i32 %157, 268435455
  %159 = sext i32 %152 to i64
  %160 = load i32*, i32** %132, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 %159
  store i32 %158, i32* %161, align 4
  %162 = load i32, i32* %5, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %5, align 8
  %164 = lshr i64 %153, 28
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %151

166:                                              ; preds = %156, %109, %105, %133, %128
  %167 = phi i32 [ %148, %133 ], [ %106, %128 ], [ %106, %105 ], [ %106, %109 ], [ %163, %156 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %204, label %169

169:                                              ; preds = %166
  %170 = sdiv i32 %1, 28
  %171 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %172, %170
  store i32 %173, i32* %171, align 4
  %174 = srem i32 %1, 28
  %175 = icmp sgt i32 %167, 127
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

177:                                              ; preds = %169
  %178 = icmp sgt i32 %167, 0
  br i1 %178, label %179, label %204

179:                                              ; preds = %177
  %180 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %181 = sub nsw i32 28, %174
  br label %184

182:                                              ; preds = %184
  %183 = icmp eq i32 %190, 0
  br i1 %183, label %204, label %198

184:                                              ; preds = %184, %179
  %185 = phi i64 [ 0, %179 ], [ %194, %184 ]
  %186 = phi i32 [ 0, %179 ], [ %190, %184 ]
  %187 = load i32*, i32** %180, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 %185
  %189 = load i32, i32* %188, align 4
  %190 = lshr i32 %189, %181
  %191 = shl i32 %189, %174
  %192 = add i32 %191, %186
  %193 = and i32 %192, 268435455
  store i32 %193, i32* %188, align 4
  %194 = add nuw nsw i64 %185, 1
  %195 = load i32, i32* %5, align 8
  %196 = sext i32 %195 to i64
  %197 = icmp slt i64 %194, %196
  br i1 %197, label %184, label %182

198:                                              ; preds = %182
  %199 = sext i32 %195 to i64
  %200 = load i32*, i32** %180, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 %199
  store i32 %190, i32* %201, align 4
  %202 = load i32, i32* %5, align 8
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %5, align 8
  br label %204

204:                                              ; preds = %198, %182, %177, %166, %126, %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum9AddUInt64Em(%"class.v8::internal::Bignum"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.v8::internal::Bignum", align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %71, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::internal::Bignum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 1, i32 0
  store i32* %7, i32** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 1, i32 1
  store i64 128, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 3
  store i32 0, i32* %11, align 4
  store i32 0, i32* %7, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %3, i64 0, i32 0, i64 1
  store i32 0, i32* %12, align 4
  br label %13

13:                                               ; preds = %13, %5
  %14 = phi i64 [ 2, %5 ], [ %32, %13 ]
  %15 = load i32*, i32** %8, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %14
  store i32 0, i32* %16, align 4
  %17 = or i64 %14, 1
  %18 = load i32*, i32** %8, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %17
  store i32 0, i32* %19, align 4
  %20 = add nuw nsw i64 %14, 2
  %21 = load i32*, i32** %8, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 %20
  store i32 0, i32* %22, align 4
  %23 = add nuw nsw i64 %14, 3
  %24 = load i32*, i32** %8, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %23
  store i32 0, i32* %25, align 4
  %26 = add nuw nsw i64 %14, 4
  %27 = load i32*, i32** %8, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %26
  store i32 0, i32* %28, align 4
  %29 = add nuw nsw i64 %14, 5
  %30 = load i32*, i32** %8, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %29
  store i32 0, i32* %31, align 4
  %32 = add nuw nsw i64 %14, 6
  %33 = icmp eq i64 %32, 128
  br i1 %33, label %34, label %13

34:                                               ; preds = %13
  %35 = load i32, i32* %10, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %34, %37
  %38 = phi i64 [ %41, %37 ], [ 0, %34 ]
  %39 = load i32*, i32** %8, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %38
  store i32 0, i32* %40, align 4
  %41 = add nuw nsw i64 %38, 1
  %42 = load i32, i32* %10, align 8
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %41, %43
  br i1 %44, label %37, label %45

45:                                               ; preds = %37, %34
  store i32 0, i32* %11, align 4
  %46 = trunc i64 %1 to i32
  %47 = and i32 %46, 268435455
  %48 = load i32*, i32** %8, align 8
  store i32 %47, i32* %48, align 4
  %49 = lshr i64 %1, 28
  %50 = trunc i64 %49 to i32
  %51 = and i32 %50, 268435455
  %52 = load i32*, i32** %8, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 %51, i32* %53, align 4
  %54 = lshr i64 %1, 56
  %55 = trunc i64 %54 to i32
  %56 = load i32*, i32** %8, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 2
  store i32 %55, i32* %57, align 4
  store i32 3, i32* %10, align 8
  %58 = load i32*, i32** %8, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %70

62:                                               ; preds = %45
  store i32 2, i32* %10, align 8
  %63 = getelementptr inbounds i32, i32* %58, i64 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %70

66:                                               ; preds = %67
  store i32 0, i32* %10, align 8
  store i32 0, i32* %11, align 4
  br label %70

67:                                               ; preds = %62
  store i32 1, i32* %10, align 8
  %68 = load i32, i32* %58, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %66, label %70

70:                                               ; preds = %45, %62, %66, %67
  call void @_ZN2v88internal6Bignum9AddBignumERKS1_(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* nonnull dereferenceable(536) %3)
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %6) #6
  br label %71

71:                                               ; preds = %2, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum15AssignHexStringENS0_6VectorIKcEE(%"class.v8::internal::Bignum"* nocapture, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %13, %9 ]
  %11 = load i32*, i32** %8, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %10
  store i32 0, i32* %12, align 4
  %13 = add nuw nsw i64 %10, 1
  %14 = load i32, i32* %4, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %3
  store i32 0, i32* %4, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %18, align 4
  %19 = trunc i64 %2 to i32
  %20 = sdiv i32 %19, 7
  %21 = icmp sgt i32 %19, 895
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

23:                                               ; preds = %17
  %24 = add nsw i32 %19, -1
  %25 = icmp sgt i32 %19, 6
  br i1 %25, label %26, label %39

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %28 = zext i32 %20 to i64
  br label %29

29:                                               ; preds = %206, %26
  %30 = phi i64 [ 0, %26 ], [ %213, %206 ]
  %31 = phi i32 [ %24, %26 ], [ %194, %206 ]
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %32, -1
  %34 = getelementptr inbounds i8, i8* %1, i64 %32
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = add i8 %35, -48
  %38 = icmp ult i8 %37, 10
  br i1 %38, label %52, label %45

39:                                               ; preds = %206, %23
  %40 = phi i32 [ %24, %23 ], [ %194, %206 ]
  store i32 %20, i32* %4, align 8
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %92, label %42

42:                                               ; preds = %39
  %43 = add nuw i32 %40, 1
  %44 = zext i32 %43 to i64
  br label %63

45:                                               ; preds = %29
  %46 = add i8 %35, -97
  %47 = icmp ult i8 %46, 6
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = add i8 %35, -65
  %50 = icmp ult i8 %49, 6
  br i1 %50, label %52, label %51

51:                                               ; preds = %203, %186, %169, %152, %135, %118, %48
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

52:                                               ; preds = %48, %45, %29
  %53 = phi i32 [ -48, %29 ], [ -87, %45 ], [ -55, %48 ]
  %54 = add nsw i32 %53, %36
  %55 = add nsw i64 %32, -2
  %56 = getelementptr inbounds i8, i8* %1, i64 %33
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = add i8 %57, -48
  %60 = icmp ult i8 %59, 10
  br i1 %60, label %121, label %115

61:                                               ; preds = %79
  %62 = icmp eq i32 %82, 0
  br i1 %62, label %92, label %85

63:                                               ; preds = %79, %42
  %64 = phi i64 [ 0, %42 ], [ %83, %79 ]
  %65 = phi i32 [ 0, %42 ], [ %82, %79 ]
  %66 = shl i32 %65, 4
  %67 = getelementptr inbounds i8, i8* %1, i64 %64
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = add i8 %68, -48
  %71 = icmp ult i8 %70, 10
  br i1 %71, label %79, label %72

72:                                               ; preds = %63
  %73 = add i8 %68, -97
  %74 = icmp ult i8 %73, 6
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = add i8 %68, -65
  %77 = icmp ult i8 %76, 6
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

79:                                               ; preds = %75, %72, %63
  %80 = phi i32 [ -48, %63 ], [ -87, %72 ], [ -55, %75 ]
  %81 = add nsw i32 %80, %69
  %82 = add i32 %81, %66
  %83 = add nuw nsw i64 %64, 1
  %84 = icmp eq i64 %83, %44
  br i1 %84, label %61, label %63

85:                                               ; preds = %61
  %86 = sext i32 %20 to i64
  %87 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %86
  store i32 %82, i32* %89, align 4
  %90 = load i32, i32* %4, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %4, align 8
  br label %92

92:                                               ; preds = %39, %61, %85
  %93 = phi i32 [ %91, %85 ], [ %20, %61 ], [ %20, %39 ]
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %110

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %97 = sext i32 %93 to i64
  %98 = load i32*, i32** %96, align 8
  br label %99

99:                                               ; preds = %105, %95
  %100 = phi i64 [ %97, %95 ], [ %101, %105 ]
  %101 = add nsw i64 %100, -1
  %102 = getelementptr inbounds i32, i32* %98, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %99
  %106 = trunc i64 %101 to i32
  store i32 %106, i32* %4, align 8
  %107 = icmp sgt i64 %101, 0
  br i1 %107, label %99, label %108

108:                                              ; preds = %105
  %109 = trunc i64 %101 to i32
  br label %110

110:                                              ; preds = %108, %92
  %111 = phi i32 [ %93, %92 ], [ %109, %108 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  store i32 0, i32* %18, align 4
  br label %114

114:                                              ; preds = %99, %110, %113
  ret void

115:                                              ; preds = %52
  %116 = add i8 %57, -97
  %117 = icmp ult i8 %116, 6
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = add i8 %57, -65
  %120 = icmp ult i8 %119, 6
  br i1 %120, label %121, label %51

121:                                              ; preds = %52, %115, %118
  %122 = phi i32 [ -55, %118 ], [ -87, %115 ], [ -48, %52 ]
  %123 = add nsw i32 %122, %58
  %124 = shl nsw i32 %123, 4
  %125 = add nsw i32 %124, %54
  %126 = add nsw i64 %32, -3
  %127 = getelementptr inbounds i8, i8* %1, i64 %55
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = add i8 %128, -48
  %131 = icmp ult i8 %130, 10
  br i1 %131, label %138, label %132

132:                                              ; preds = %121
  %133 = add i8 %128, -97
  %134 = icmp ult i8 %133, 6
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = add i8 %128, -65
  %137 = icmp ult i8 %136, 6
  br i1 %137, label %138, label %51

138:                                              ; preds = %121, %132, %135
  %139 = phi i32 [ -55, %135 ], [ -87, %132 ], [ -48, %121 ]
  %140 = add nsw i32 %139, %129
  %141 = shl nsw i32 %140, 8
  %142 = add nsw i32 %141, %125
  %143 = add nsw i64 %32, -4
  %144 = getelementptr inbounds i8, i8* %1, i64 %126
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = add i8 %145, -48
  %148 = icmp ult i8 %147, 10
  br i1 %148, label %155, label %149

149:                                              ; preds = %138
  %150 = add i8 %145, -97
  %151 = icmp ult i8 %150, 6
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = add i8 %145, -65
  %154 = icmp ult i8 %153, 6
  br i1 %154, label %155, label %51

155:                                              ; preds = %138, %149, %152
  %156 = phi i32 [ -55, %152 ], [ -87, %149 ], [ -48, %138 ]
  %157 = add nsw i32 %156, %146
  %158 = shl nsw i32 %157, 12
  %159 = add nsw i32 %158, %142
  %160 = add nsw i64 %32, -5
  %161 = getelementptr inbounds i8, i8* %1, i64 %143
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = add i8 %162, -48
  %165 = icmp ult i8 %164, 10
  br i1 %165, label %172, label %166

166:                                              ; preds = %155
  %167 = add i8 %162, -97
  %168 = icmp ult i8 %167, 6
  br i1 %168, label %172, label %169

169:                                              ; preds = %166
  %170 = add i8 %162, -65
  %171 = icmp ult i8 %170, 6
  br i1 %171, label %172, label %51

172:                                              ; preds = %155, %166, %169
  %173 = phi i32 [ -55, %169 ], [ -87, %166 ], [ -48, %155 ]
  %174 = add nsw i32 %173, %163
  %175 = shl nsw i32 %174, 16
  %176 = add i32 %175, %159
  %177 = add nsw i64 %32, -6
  %178 = getelementptr inbounds i8, i8* %1, i64 %160
  %179 = load i8, i8* %178, align 1
  %180 = sext i8 %179 to i32
  %181 = add i8 %179, -48
  %182 = icmp ult i8 %181, 10
  br i1 %182, label %189, label %183

183:                                              ; preds = %172
  %184 = add i8 %179, -97
  %185 = icmp ult i8 %184, 6
  br i1 %185, label %189, label %186

186:                                              ; preds = %183
  %187 = add i8 %179, -65
  %188 = icmp ult i8 %187, 6
  br i1 %188, label %189, label %51

189:                                              ; preds = %172, %183, %186
  %190 = phi i32 [ -55, %186 ], [ -87, %183 ], [ -48, %172 ]
  %191 = add nsw i32 %190, %180
  %192 = shl nsw i32 %191, 20
  %193 = add i32 %192, %176
  %194 = add i32 %31, -7
  %195 = getelementptr inbounds i8, i8* %1, i64 %177
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = add i8 %196, -48
  %199 = icmp ult i8 %198, 10
  br i1 %199, label %206, label %200

200:                                              ; preds = %189
  %201 = add i8 %196, -97
  %202 = icmp ult i8 %201, 6
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = add i8 %196, -65
  %205 = icmp ult i8 %204, 6
  br i1 %205, label %206, label %51

206:                                              ; preds = %189, %200, %203
  %207 = phi i32 [ -55, %203 ], [ -87, %200 ], [ -48, %189 ]
  %208 = add nsw i32 %207, %197
  %209 = shl i32 %208, 24
  %210 = add i32 %209, %193
  %211 = load i32*, i32** %27, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 %30
  store i32 %210, i32* %212, align 4
  %213 = add nuw nsw i64 %30, 1
  %214 = icmp eq i64 %213, %28
  br i1 %214, label %39, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum9AddBignumERKS1_(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  br label %112

11:                                               ; preds = %2
  %12 = sub i32 %4, %6
  %13 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %12
  %16 = icmp sgt i32 %15, 128
  br i1 %16, label %40, label %17

17:                                               ; preds = %11
  %18 = icmp sgt i32 %14, 0
  br i1 %18, label %19, label %41

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %21 = sext i32 %14 to i64
  %22 = sext i32 %12 to i64
  %23 = add nsw i64 %21, -1
  %24 = and i64 %21, 3
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %19, %26
  %27 = phi i64 [ %29, %26 ], [ %21, %19 ]
  %28 = phi i64 [ %35, %26 ], [ %24, %19 ]
  %29 = add nsw i64 %27, -1
  %30 = load i32*, i32** %20, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %29
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i64 %29, %22
  %34 = getelementptr inbounds i32, i32* %30, i64 %33
  store i32 %32, i32* %34, align 4
  %35 = add i64 %28, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %26, !llvm.loop !2

37:                                               ; preds = %26, %19
  %38 = phi i64 [ %21, %19 ], [ %29, %26 ]
  %39 = icmp ult i64 %23, 3
  br i1 %39, label %41, label %51

40:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

41:                                               ; preds = %37, %51, %17
  %42 = icmp sgt i32 %12, 0
  br i1 %42, label %43, label %89

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %45 = zext i32 %12 to i64
  %46 = add nsw i64 %45, -1
  %47 = and i64 %45, 3
  %48 = icmp ult i64 %46, 3
  br i1 %48, label %78, label %49

49:                                               ; preds = %43
  %50 = sub nsw i64 %45, %47
  br label %95

51:                                               ; preds = %37, %51
  %52 = phi i64 [ %71, %51 ], [ %38, %37 ]
  %53 = add nsw i64 %52, -1
  %54 = load i32*, i32** %20, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i64 %53, %22
  %58 = getelementptr inbounds i32, i32* %54, i64 %57
  store i32 %56, i32* %58, align 4
  %59 = add nsw i64 %52, -2
  %60 = load i32*, i32** %20, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %59
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i64 %59, %22
  %64 = getelementptr inbounds i32, i32* %60, i64 %63
  store i32 %62, i32* %64, align 4
  %65 = add nsw i64 %52, -3
  %66 = load i32*, i32** %20, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %65
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i64 %65, %22
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  store i32 %68, i32* %70, align 4
  %71 = add nsw i64 %52, -4
  %72 = load i32*, i32** %20, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %71
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i64 %71, %22
  %76 = getelementptr inbounds i32, i32* %72, i64 %75
  store i32 %74, i32* %76, align 4
  %77 = icmp sgt i64 %71, 0
  br i1 %77, label %51, label %41

78:                                               ; preds = %95, %43
  %79 = phi i64 [ 0, %43 ], [ %109, %95 ]
  %80 = icmp eq i64 %47, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %86, %81 ], [ %79, %78 ]
  %83 = phi i64 [ %87, %81 ], [ %47, %78 ]
  %84 = load i32*, i32** %44, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %82
  store i32 0, i32* %85, align 4
  %86 = add nuw nsw i64 %82, 1
  %87 = add i64 %83, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %81, !llvm.loop !4

89:                                               ; preds = %78, %81, %41
  %90 = load i32, i32* %13, align 8
  %91 = add nsw i32 %90, %12
  store i32 %91, i32* %13, align 8
  %92 = load i32, i32* %3, align 4
  %93 = sub nsw i32 %92, %12
  store i32 %93, i32* %3, align 4
  %94 = load i32, i32* %5, align 4
  br label %112

95:                                               ; preds = %95, %49
  %96 = phi i64 [ 0, %49 ], [ %109, %95 ]
  %97 = phi i64 [ %50, %49 ], [ %110, %95 ]
  %98 = load i32*, i32** %44, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 %96
  store i32 0, i32* %99, align 4
  %100 = or i64 %96, 1
  %101 = load i32*, i32** %44, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 %100
  store i32 0, i32* %102, align 4
  %103 = or i64 %96, 2
  %104 = load i32*, i32** %44, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %103
  store i32 0, i32* %105, align 4
  %106 = or i64 %96, 3
  %107 = load i32*, i32** %44, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %106
  store i32 0, i32* %108, align 4
  %109 = add nuw nsw i64 %96, 4
  %110 = add i64 %97, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %78, label %95

112:                                              ; preds = %8, %89
  %113 = phi i32 [ %6, %8 ], [ %94, %89 ]
  %114 = phi i32 [ %4, %8 ], [ %93, %89 ]
  %115 = phi i32 [ %10, %8 ], [ %91, %89 ]
  %116 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %117 = add nsw i32 %114, %115
  %118 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = add nsw i32 %113, %119
  %121 = icmp slt i32 %117, %120
  %122 = select i1 %121, i32 %120, i32 %117
  %123 = sub i32 1, %114
  %124 = add i32 %123, %122
  %125 = icmp sgt i32 %124, 128
  br i1 %125, label %126, label %127

126:                                              ; preds = %112
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

127:                                              ; preds = %112
  %128 = sub i32 %113, %114
  %129 = icmp sgt i32 %119, 0
  br i1 %129, label %130, label %173

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %133 = sext i32 %128 to i64
  br label %141

134:                                              ; preds = %141
  %135 = trunc i64 %155 to i32
  %136 = icmp eq i32 %154, 0
  br i1 %136, label %173, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %139 = shl i64 %155, 32
  %140 = ashr exact i64 %139, 32
  br label %160

141:                                              ; preds = %130, %141
  %142 = phi i64 [ %133, %130 ], [ %155, %141 ]
  %143 = phi i64 [ 0, %130 ], [ %156, %141 ]
  %144 = phi i32 [ 0, %130 ], [ %154, %141 ]
  %145 = load i32*, i32** %131, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 %142
  %147 = load i32, i32* %146, align 4
  %148 = load i32*, i32** %132, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %143
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %147, %144
  %152 = add i32 %151, %150
  %153 = and i32 %152, 268435455
  store i32 %153, i32* %146, align 4
  %154 = lshr i32 %152, 28
  %155 = add nsw i64 %142, 1
  %156 = add nuw nsw i64 %143, 1
  %157 = load i32, i32* %118, align 8
  %158 = sext i32 %157 to i64
  %159 = icmp slt i64 %156, %158
  br i1 %159, label %141, label %134

160:                                              ; preds = %137, %160
  %161 = phi i64 [ %140, %137 ], [ %169, %160 ]
  %162 = phi i32 [ %154, %137 ], [ %168, %160 ]
  %163 = load i32*, i32** %138, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 %161
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, %162
  %167 = and i32 %166, 268435455
  store i32 %167, i32* %164, align 4
  %168 = lshr i32 %166, 28
  %169 = add i64 %161, 1
  %170 = icmp eq i32 %168, 0
  br i1 %170, label %171, label %160

171:                                              ; preds = %160
  %172 = trunc i64 %169 to i32
  br label %173

173:                                              ; preds = %127, %171, %134
  %174 = phi i32 [ %135, %134 ], [ %172, %171 ], [ %128, %127 ]
  %175 = load i32, i32* %116, align 4
  %176 = icmp slt i32 %174, %175
  %177 = select i1 %176, i32 %175, i32 %174
  store i32 %177, i32* %116, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum5AlignERKS1_(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %8, label %98

8:                                                ; preds = %2
  %9 = sub i32 %4, %6
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, %9
  %13 = icmp sgt i32 %12, 128
  br i1 %13, label %34, label %14

14:                                               ; preds = %8
  %15 = icmp sgt i32 %11, 0
  br i1 %15, label %16, label %35

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %18 = sext i32 %11 to i64
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %16
  %22 = add nsw i64 %18, -1
  %23 = add nsw i32 %11, -1
  %24 = load i32*, i32** %17, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %22
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %23, %9
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %24, i64 %28
  store i32 %26, i32* %29, align 4
  br label %30

30:                                               ; preds = %16, %21
  %31 = phi i64 [ %18, %16 ], [ %22, %21 ]
  %32 = phi i32 [ %11, %16 ], [ %23, %21 ]
  %33 = icmp eq i32 %11, 1
  br i1 %33, label %35, label %45

34:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

35:                                               ; preds = %30, %45, %14
  %36 = icmp sgt i32 %9, 0
  br i1 %36, label %37, label %76

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %39 = zext i32 %9 to i64
  %40 = add nsw i64 %39, -1
  %41 = and i64 %39, 3
  %42 = icmp ult i64 %40, 3
  br i1 %42, label %65, label %43

43:                                               ; preds = %37
  %44 = sub nsw i64 %39, %41
  br label %81

45:                                               ; preds = %30, %45
  %46 = phi i64 [ %56, %45 ], [ %31, %30 ]
  %47 = phi i32 [ %57, %45 ], [ %32, %30 ]
  %48 = add nsw i64 %46, -1
  %49 = add nsw i32 %47, -1
  %50 = load i32*, i32** %17, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %48
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %49, %9
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %50, i64 %54
  store i32 %52, i32* %55, align 4
  %56 = add nsw i64 %46, -2
  %57 = add nsw i32 %47, -2
  %58 = load i32*, i32** %17, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %56
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %57, %9
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %58, i64 %62
  store i32 %60, i32* %63, align 4
  %64 = icmp sgt i64 %56, 0
  br i1 %64, label %45, label %35

65:                                               ; preds = %81, %37
  %66 = phi i64 [ 0, %37 ], [ %95, %81 ]
  %67 = icmp eq i64 %41, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %73, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %74, %68 ], [ %41, %65 ]
  %71 = load i32*, i32** %38, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %69
  store i32 0, i32* %72, align 4
  %73 = add nuw nsw i64 %69, 1
  %74 = add i64 %70, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %68, !llvm.loop !5

76:                                               ; preds = %65, %68, %35
  %77 = load i32, i32* %10, align 8
  %78 = add nsw i32 %77, %9
  store i32 %78, i32* %10, align 8
  %79 = load i32, i32* %3, align 4
  %80 = sub nsw i32 %79, %9
  store i32 %80, i32* %3, align 4
  br label %98

81:                                               ; preds = %81, %43
  %82 = phi i64 [ 0, %43 ], [ %95, %81 ]
  %83 = phi i64 [ %44, %43 ], [ %96, %81 ]
  %84 = load i32*, i32** %38, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %82
  store i32 0, i32* %85, align 4
  %86 = or i64 %82, 1
  %87 = load i32*, i32** %38, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 %86
  store i32 0, i32* %88, align 4
  %89 = or i64 %82, 2
  %90 = load i32*, i32** %38, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 %89
  store i32 0, i32* %91, align 4
  %92 = or i64 %82, 3
  %93 = load i32*, i32** %38, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %92
  store i32 0, i32* %94, align 4
  %95 = add nuw nsw i64 %82, 4
  %96 = add i64 %83, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %65, label %81

98:                                               ; preds = %76, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum14SubtractBignumERKS1_(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %8, label %109

8:                                                ; preds = %2
  %9 = sub i32 %4, %6
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, %9
  %13 = icmp sgt i32 %12, 128
  br i1 %13, label %37, label %14

14:                                               ; preds = %8
  %15 = icmp sgt i32 %11, 0
  br i1 %15, label %16, label %38

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %18 = sext i32 %11 to i64
  %19 = sext i32 %9 to i64
  %20 = add nsw i64 %18, -1
  %21 = and i64 %18, 3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %16, %23
  %24 = phi i64 [ %26, %23 ], [ %18, %16 ]
  %25 = phi i64 [ %32, %23 ], [ %21, %16 ]
  %26 = add nsw i64 %24, -1
  %27 = load i32*, i32** %17, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %26
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i64 %26, %19
  %31 = getelementptr inbounds i32, i32* %27, i64 %30
  store i32 %29, i32* %31, align 4
  %32 = add i64 %25, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %23, !llvm.loop !6

34:                                               ; preds = %23, %16
  %35 = phi i64 [ %18, %16 ], [ %26, %23 ]
  %36 = icmp ult i64 %20, 3
  br i1 %36, label %38, label %48

37:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

38:                                               ; preds = %34, %48, %14
  %39 = icmp sgt i32 %9, 0
  br i1 %39, label %40, label %86

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %42 = zext i32 %9 to i64
  %43 = add nsw i64 %42, -1
  %44 = and i64 %42, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %75, label %46

46:                                               ; preds = %40
  %47 = sub nsw i64 %42, %44
  br label %92

48:                                               ; preds = %34, %48
  %49 = phi i64 [ %68, %48 ], [ %35, %34 ]
  %50 = add nsw i64 %49, -1
  %51 = load i32*, i32** %17, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %50
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i64 %50, %19
  %55 = getelementptr inbounds i32, i32* %51, i64 %54
  store i32 %53, i32* %55, align 4
  %56 = add nsw i64 %49, -2
  %57 = load i32*, i32** %17, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %56
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i64 %56, %19
  %61 = getelementptr inbounds i32, i32* %57, i64 %60
  store i32 %59, i32* %61, align 4
  %62 = add nsw i64 %49, -3
  %63 = load i32*, i32** %17, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i64 %62, %19
  %67 = getelementptr inbounds i32, i32* %63, i64 %66
  store i32 %65, i32* %67, align 4
  %68 = add nsw i64 %49, -4
  %69 = load i32*, i32** %17, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %68
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i64 %68, %19
  %73 = getelementptr inbounds i32, i32* %69, i64 %72
  store i32 %71, i32* %73, align 4
  %74 = icmp sgt i64 %68, 0
  br i1 %74, label %48, label %38

75:                                               ; preds = %92, %40
  %76 = phi i64 [ 0, %40 ], [ %106, %92 ]
  %77 = icmp eq i64 %44, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %83, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %84, %78 ], [ %44, %75 ]
  %81 = load i32*, i32** %41, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %79
  store i32 0, i32* %82, align 4
  %83 = add nuw nsw i64 %79, 1
  %84 = add i64 %80, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %78, !llvm.loop !7

86:                                               ; preds = %75, %78, %38
  %87 = load i32, i32* %10, align 8
  %88 = add nsw i32 %87, %9
  store i32 %88, i32* %10, align 8
  %89 = load i32, i32* %3, align 4
  %90 = sub nsw i32 %89, %9
  store i32 %90, i32* %3, align 4
  %91 = load i32, i32* %5, align 4
  br label %109

92:                                               ; preds = %92, %46
  %93 = phi i64 [ 0, %46 ], [ %106, %92 ]
  %94 = phi i64 [ %47, %46 ], [ %107, %92 ]
  %95 = load i32*, i32** %41, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 %93
  store i32 0, i32* %96, align 4
  %97 = or i64 %93, 1
  %98 = load i32*, i32** %41, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 %97
  store i32 0, i32* %99, align 4
  %100 = or i64 %93, 2
  %101 = load i32*, i32** %41, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 %100
  store i32 0, i32* %102, align 4
  %103 = or i64 %93, 3
  %104 = load i32*, i32** %41, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %103
  store i32 0, i32* %105, align 4
  %106 = add nuw nsw i64 %93, 4
  %107 = add i64 %94, -4
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %75, label %92

109:                                              ; preds = %2, %86
  %110 = phi i32 [ %4, %2 ], [ %90, %86 ]
  %111 = phi i32 [ %6, %2 ], [ %91, %86 ]
  %112 = sub nsw i32 %111, %110
  %113 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %156

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  br label %124

119:                                              ; preds = %124
  %120 = icmp eq i32 %139, 0
  br i1 %120, label %156, label %121

121:                                              ; preds = %119
  %122 = trunc i64 %140 to i32
  %123 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %145

124:                                              ; preds = %116, %124
  %125 = phi i64 [ 0, %116 ], [ %140, %124 ]
  %126 = phi i32 [ 0, %116 ], [ %139, %124 ]
  %127 = phi i32 [ 0, %116 ], [ %141, %124 ]
  %128 = add nsw i32 %127, %112
  %129 = sext i32 %128 to i64
  %130 = load i32*, i32** %117, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 %129
  %132 = load i32, i32* %131, align 4
  %133 = load i32*, i32** %118, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %125
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %132, %135
  %137 = sub i32 %136, %126
  %138 = and i32 %137, 268435455
  store i32 %138, i32* %131, align 4
  %139 = lshr i32 %137, 31
  %140 = add nuw nsw i64 %125, 1
  %141 = add nuw nsw i32 %127, 1
  %142 = load i32, i32* %113, align 8
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %140, %143
  br i1 %144, label %124, label %119

145:                                              ; preds = %121, %145
  %146 = phi i32 [ %122, %121 ], [ %154, %145 ]
  %147 = add nsw i32 %146, %112
  %148 = sext i32 %147 to i64
  %149 = load i32*, i32** %123, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 %148
  %151 = load i32, i32* %150, align 4
  %152 = add i32 %151, -1
  %153 = and i32 %152, 268435455
  store i32 %153, i32* %150, align 4
  %154 = add nuw nsw i32 %146, 1
  %155 = icmp sgt i32 %152, -1
  br i1 %155, label %156, label %145

156:                                              ; preds = %145, %109, %119
  %157 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %160, label %175

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %162 = sext i32 %158 to i64
  %163 = load i32*, i32** %161, align 8
  br label %164

164:                                              ; preds = %170, %160
  %165 = phi i64 [ %162, %160 ], [ %166, %170 ]
  %166 = add nsw i64 %165, -1
  %167 = getelementptr inbounds i32, i32* %163, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %179

170:                                              ; preds = %164
  %171 = trunc i64 %166 to i32
  store i32 %171, i32* %157, align 8
  %172 = icmp sgt i64 %166, 0
  br i1 %172, label %164, label %173

173:                                              ; preds = %170
  %174 = trunc i64 %166 to i32
  br label %175

175:                                              ; preds = %173, %156
  %176 = phi i32 [ %158, %156 ], [ %174, %173 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  store i32 0, i32* %3, align 4
  br label %179

179:                                              ; preds = %164, %175, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum9ShiftLeftEi(%"class.v8::internal::Bignum"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = sdiv i32 %1, 28
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %7
  store i32 %10, i32* %8, align 4
  %11 = srem i32 %1, 28
  %12 = icmp sgt i32 %4, 127
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

14:                                               ; preds = %6
  %15 = icmp sgt i32 %4, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %18 = sub nsw i32 28, %11
  br label %21

19:                                               ; preds = %21
  %20 = icmp eq i32 %27, 0
  br i1 %20, label %41, label %35

21:                                               ; preds = %21, %16
  %22 = phi i64 [ 0, %16 ], [ %31, %21 ]
  %23 = phi i32 [ 0, %16 ], [ %27, %21 ]
  %24 = load i32*, i32** %17, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %22
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, %18
  %28 = shl i32 %26, %11
  %29 = add i32 %28, %23
  %30 = and i32 %29, 268435455
  store i32 %30, i32* %25, align 4
  %31 = add nuw nsw i64 %22, 1
  %32 = load i32, i32* %3, align 8
  %33 = sext i32 %32 to i64
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %21, label %19

35:                                               ; preds = %19
  %36 = sext i32 %32 to i64
  %37 = load i32*, i32** %17, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %36
  store i32 %27, i32* %38, align 4
  %39 = load i32, i32* %3, align 8
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %3, align 8
  br label %41

41:                                               ; preds = %35, %19, %14, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum15BigitsShiftLeftEi(%"class.v8::internal::Bignum"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %8 = sub nsw i32 28, %1
  br label %11

9:                                                ; preds = %11
  %10 = icmp eq i32 %17, 0
  br i1 %10, label %32, label %25

11:                                               ; preds = %6, %11
  %12 = phi i64 [ 0, %6 ], [ %21, %11 ]
  %13 = phi i32 [ 0, %6 ], [ %17, %11 ]
  %14 = load i32*, i32** %7, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 %12
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, %8
  %18 = shl i32 %16, %1
  %19 = add i32 %18, %13
  %20 = and i32 %19, 268435455
  store i32 %20, i32* %15, align 4
  %21 = add nuw nsw i64 %12, 1
  %22 = load i32, i32* %3, align 8
  %23 = sext i32 %22 to i64
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %11, label %9

25:                                               ; preds = %9
  %26 = sext i32 %22 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %26
  store i32 %17, i32* %29, align 4
  %30 = load i32, i32* %3, align 8
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %3, align 8
  br label %32

32:                                               ; preds = %2, %9, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum16MultiplyByUInt32Ej(%"class.v8::internal::Bignum"* nocapture, i32) local_unnamed_addr #2 align 2 {
  switch i32 %1, label %19 [
    i32 1, label %61
    i32 0, label %3
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %13, %9 ]
  %11 = load i32*, i32** %8, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %10
  store i32 0, i32* %12, align 4
  %13 = add nuw nsw i64 %10, 1
  %14 = load i32, i32* %4, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %3
  store i32 0, i32* %4, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %18, align 4
  br label %61

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %61

23:                                               ; preds = %19
  %24 = zext i32 %1 to i64
  %25 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %30

26:                                               ; preds = %30
  %27 = icmp eq i64 %41, 0
  br i1 %27, label %61, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %46

30:                                               ; preds = %23, %30
  %31 = phi i64 [ 0, %23 ], [ %42, %30 ]
  %32 = phi i64 [ 0, %23 ], [ %41, %30 ]
  %33 = load i32*, i32** %25, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = mul nuw i64 %36, %24
  %38 = add i64 %37, %32
  %39 = trunc i64 %38 to i32
  %40 = and i32 %39, 268435455
  store i32 %40, i32* %34, align 4
  %41 = lshr i64 %38, 28
  %42 = add nuw nsw i64 %31, 1
  %43 = load i32, i32* %20, align 8
  %44 = sext i32 %43 to i64
  %45 = icmp slt i64 %42, %44
  br i1 %45, label %30, label %26

46:                                               ; preds = %28, %51
  %47 = phi i32 [ %43, %28 ], [ %58, %51 ]
  %48 = phi i64 [ %41, %28 ], [ %59, %51 ]
  %49 = icmp sgt i32 %47, 127
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

51:                                               ; preds = %46
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 268435455
  %54 = sext i32 %47 to i64
  %55 = load i32*, i32** %29, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  store i32 %53, i32* %56, align 4
  %57 = load i32, i32* %20, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %20, align 8
  %59 = lshr i64 %48, 28
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %46

61:                                               ; preds = %51, %19, %26, %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum16MultiplyByUInt64Em(%"class.v8::internal::Bignum"* nocapture, i64) local_unnamed_addr #2 align 2 {
  switch i64 %1, label %19 [
    i64 1, label %68
    i64 0, label %3
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i64 [ 0, %7 ], [ %13, %9 ]
  %11 = load i32*, i32** %8, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 %10
  store i32 0, i32* %12, align 4
  %13 = add nuw nsw i64 %10, 1
  %14 = load i32, i32* %4, align 8
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %3
  store i32 0, i32* %4, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %18, align 4
  br label %68

19:                                               ; preds = %2
  %20 = and i64 %1, 4294967295
  %21 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %68

24:                                               ; preds = %19
  %25 = lshr i64 %1, 32
  %26 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %27 = shl nuw nsw i64 %25, 4
  br label %32

28:                                               ; preds = %32
  %29 = icmp eq i64 %48, 0
  br i1 %29, label %68, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %53

32:                                               ; preds = %24, %32
  %33 = phi i64 [ 0, %24 ], [ %49, %32 ]
  %34 = phi i64 [ 0, %24 ], [ %48, %32 ]
  %35 = load i32*, i32** %26, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %33
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = mul nuw i64 %20, %38
  %40 = and i64 %34, 268435455
  %41 = add i64 %39, %40
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 268435455
  store i32 %43, i32* %36, align 4
  %44 = lshr i64 %34, 28
  %45 = lshr i64 %41, 28
  %46 = mul i64 %27, %38
  %47 = add i64 %46, %44
  %48 = add i64 %47, %45
  %49 = add nuw nsw i64 %33, 1
  %50 = load i32, i32* %21, align 8
  %51 = sext i32 %50 to i64
  %52 = icmp slt i64 %49, %51
  br i1 %52, label %32, label %28

53:                                               ; preds = %30, %58
  %54 = phi i32 [ %50, %30 ], [ %65, %58 ]
  %55 = phi i64 [ %48, %30 ], [ %66, %58 ]
  %56 = icmp sgt i32 %54, 127
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

58:                                               ; preds = %53
  %59 = trunc i64 %55 to i32
  %60 = and i32 %59, 268435455
  %61 = sext i32 %54 to i64
  %62 = load i32*, i32** %31, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 %61
  store i32 %60, i32* %63, align 4
  %64 = load i32, i32* %21, align 8
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %21, align 8
  %66 = lshr i64 %55, 28
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %53

68:                                               ; preds = %58, %19, %28, %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum6SquareEv(%"class.v8::internal::Bignum"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = shl i32 %3, 1
  %5 = icmp sgt i32 %3, 64
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = icmp sgt i32 %3, 0
  br i1 %7, label %8, label %37

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %10 = sext i32 %3 to i64
  br label %17

11:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

12:                                               ; preds = %17
  %13 = icmp sgt i32 %25, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %16 = sext i32 %3 to i64
  br label %28

17:                                               ; preds = %8, %17
  %18 = phi i64 [ 0, %8 ], [ %24, %17 ]
  %19 = load i32*, i32** %9, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 %18
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i64 %18, %10
  %23 = getelementptr inbounds i32, i32* %19, i64 %22
  store i32 %21, i32* %23, align 4
  %24 = add nuw nsw i64 %18, 1
  %25 = load i32, i32* %2, align 8
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %17, label %12

28:                                               ; preds = %96, %14
  %29 = phi i64 [ 0, %14 ], [ %102, %96 ]
  %30 = phi i64 [ 0, %14 ], [ %101, %96 ]
  %31 = add nuw i64 %29, 1
  %32 = load i32*, i32** %15, align 8
  %33 = and i64 %31, 1
  %34 = icmp eq i64 %29, 0
  br i1 %34, label %79, label %35

35:                                               ; preds = %28
  %36 = sub nuw i64 %31, %33
  br label %48

37:                                               ; preds = %96, %6, %12
  %38 = phi i64 [ 0, %12 ], [ 0, %6 ], [ %101, %96 ]
  %39 = phi i32 [ %25, %12 ], [ %3, %6 ], [ %103, %96 ]
  %40 = icmp slt i32 %39, %4
  br i1 %40, label %41, label %106

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %43 = sext i32 %3 to i64
  %44 = sext i32 %39 to i64
  %45 = sext i32 %4 to i64
  %46 = xor i32 %39, 1
  %47 = sub i32 -2, %39
  br label %130

48:                                               ; preds = %48, %35
  %49 = phi i64 [ 0, %35 ], [ %76, %48 ]
  %50 = phi i64 [ %29, %35 ], [ %75, %48 ]
  %51 = phi i64 [ %30, %35 ], [ %74, %48 ]
  %52 = phi i64 [ %36, %35 ], [ %77, %48 ]
  %53 = add nsw i64 %50, %16
  %54 = getelementptr inbounds i32, i32* %32, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i64 %49, %16
  %57 = getelementptr inbounds i32, i32* %32, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %55 to i64
  %60 = zext i32 %58 to i64
  %61 = mul nuw i64 %60, %59
  %62 = add i64 %61, %51
  %63 = add nsw i64 %50, -1
  %64 = or i64 %49, 1
  %65 = add nsw i64 %63, %16
  %66 = getelementptr inbounds i32, i32* %32, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i64 %64, %16
  %69 = getelementptr inbounds i32, i32* %32, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %67 to i64
  %72 = zext i32 %70 to i64
  %73 = mul nuw i64 %72, %71
  %74 = add i64 %73, %62
  %75 = add nsw i64 %50, -2
  %76 = add nuw nsw i64 %49, 2
  %77 = add i64 %52, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %48

79:                                               ; preds = %48, %28
  %80 = phi i64 [ undef, %28 ], [ %74, %48 ]
  %81 = phi i64 [ 0, %28 ], [ %76, %48 ]
  %82 = phi i64 [ %29, %28 ], [ %75, %48 ]
  %83 = phi i64 [ %30, %28 ], [ %74, %48 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %79
  %86 = add nsw i64 %81, %16
  %87 = getelementptr inbounds i32, i32* %32, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = add nsw i64 %82, %16
  %91 = getelementptr inbounds i32, i32* %32, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = mul nuw i64 %89, %93
  %95 = add i64 %94, %83
  br label %96

96:                                               ; preds = %79, %85
  %97 = phi i64 [ %80, %79 ], [ %95, %85 ]
  %98 = trunc i64 %97 to i32
  %99 = and i32 %98, 268435455
  %100 = getelementptr inbounds i32, i32* %32, i64 %29
  store i32 %99, i32* %100, align 4
  %101 = lshr i64 %97, 28
  %102 = add nuw nsw i64 %29, 1
  %103 = load i32, i32* %2, align 8
  %104 = sext i32 %103 to i64
  %105 = icmp slt i64 %102, %104
  br i1 %105, label %28, label %37

106:                                              ; preds = %201, %37
  store i32 %4, i32* %2, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = shl nsw i32 %108, 1
  store i32 %109, i32* %107, align 4
  br i1 %7, label %110, label %125

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %112 = sext i32 %4 to i64
  %113 = load i32*, i32** %111, align 8
  br label %114

114:                                              ; preds = %120, %110
  %115 = phi i64 [ %112, %110 ], [ %116, %120 ]
  %116 = add nsw i64 %115, -1
  %117 = getelementptr inbounds i32, i32* %113, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %114
  %121 = trunc i64 %116 to i32
  store i32 %121, i32* %2, align 8
  %122 = icmp sgt i64 %116, 0
  br i1 %122, label %114, label %123

123:                                              ; preds = %120
  %124 = trunc i64 %116 to i32
  br label %125

125:                                              ; preds = %123, %106
  %126 = phi i32 [ %4, %106 ], [ %124, %123 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  store i32 0, i32* %107, align 4
  br label %129

129:                                              ; preds = %114, %125, %128
  ret void

130:                                              ; preds = %208, %41
  %131 = phi i32 [ %211, %208 ], [ 0, %41 ]
  %132 = phi i32 [ %210, %208 ], [ %39, %41 ]
  %133 = phi i64 [ %206, %208 ], [ %44, %41 ]
  %134 = phi i32 [ %136, %208 ], [ %39, %41 ]
  %135 = phi i64 [ %209, %208 ], [ %38, %41 ]
  %136 = add i32 %134, 1
  %137 = add nsw i32 %132, -1
  %138 = trunc i64 %133 to i32
  %139 = sub nsw i32 %138, %137
  %140 = icmp slt i32 %139, %132
  %141 = load i32*, i32** %42, align 8
  br i1 %140, label %142, label %201

142:                                              ; preds = %130
  %143 = sub i32 %47, %131
  %144 = sub i32 %46, %131
  %145 = sub i32 %136, %132
  %146 = sext i32 %145 to i64
  %147 = sext i32 %132 to i64
  %148 = shl i32 %132, 1
  %149 = and i32 %144, 1
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %164, label %151

151:                                              ; preds = %142
  %152 = add nsw i64 %147, -1
  %153 = add nsw i64 %152, %43
  %154 = getelementptr inbounds i32, i32* %141, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i64 %146, %43
  %157 = getelementptr inbounds i32, i32* %141, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %155 to i64
  %160 = zext i32 %158 to i64
  %161 = mul nuw i64 %160, %159
  %162 = add i64 %161, %135
  %163 = add nsw i64 %146, 1
  br label %164

164:                                              ; preds = %151, %142
  %165 = phi i64 [ %162, %151 ], [ undef, %142 ]
  %166 = phi i64 [ %152, %151 ], [ %147, %142 ]
  %167 = phi i64 [ %163, %151 ], [ %146, %142 ]
  %168 = phi i64 [ %162, %151 ], [ %135, %142 ]
  %169 = sub i32 0, %148
  %170 = icmp eq i32 %143, %169
  br i1 %170, label %201, label %171

171:                                              ; preds = %164, %171
  %172 = phi i64 [ %187, %171 ], [ %166, %164 ]
  %173 = phi i64 [ %198, %171 ], [ %167, %164 ]
  %174 = phi i64 [ %197, %171 ], [ %168, %164 ]
  %175 = add i64 %172, -1
  %176 = add nsw i64 %175, %43
  %177 = getelementptr inbounds i32, i32* %141, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i64 %173, %43
  %180 = getelementptr inbounds i32, i32* %141, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %178 to i64
  %183 = zext i32 %181 to i64
  %184 = mul nuw i64 %183, %182
  %185 = add i64 %184, %174
  %186 = add nsw i64 %173, 1
  %187 = add i64 %172, -2
  %188 = add nsw i64 %187, %43
  %189 = getelementptr inbounds i32, i32* %141, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i64 %186, %43
  %192 = getelementptr inbounds i32, i32* %141, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %190 to i64
  %195 = zext i32 %193 to i64
  %196 = mul nuw i64 %195, %194
  %197 = add i64 %196, %185
  %198 = add nsw i64 %173, 2
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %132, %199
  br i1 %200, label %201, label %171

201:                                              ; preds = %164, %171, %130
  %202 = phi i64 [ %135, %130 ], [ %165, %164 ], [ %197, %171 ]
  %203 = trunc i64 %202 to i32
  %204 = and i32 %203, 268435455
  %205 = getelementptr inbounds i32, i32* %141, i64 %133
  store i32 %204, i32* %205, align 4
  %206 = add nsw i64 %133, 1
  %207 = icmp eq i64 %206, %45
  br i1 %207, label %106, label %208

208:                                              ; preds = %201
  %209 = lshr i64 %202, 28
  %210 = load i32, i32* %2, align 8
  %211 = add i32 %131, 1
  br label %130
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum17AssignPowerUInt16Eti(%"class.v8::internal::Bignum"*, i16 zeroext, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %4, label %8, label %23

8:                                                ; preds = %3
  br i1 %7, label %9, label %19

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %15, %11 ]
  %13 = load i32*, i32** %10, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 %12
  store i32 0, i32* %14, align 4
  %15 = add nuw nsw i64 %12, 1
  %16 = load i32, i32* %5, align 8
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %11, label %19

19:                                               ; preds = %11, %8
  %20 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %22 = load i32*, i32** %21, align 8
  store i32 1, i32* %22, align 4
  store i32 1, i32* %5, align 8
  br label %284

23:                                               ; preds = %3
  br i1 %7, label %24, label %34

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %30, %26 ]
  %28 = load i32*, i32** %25, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %27
  store i32 0, i32* %29, align 4
  %30 = add nuw nsw i64 %27, 1
  %31 = load i32, i32* %5, align 8
  %32 = sext i32 %31 to i64
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %26, label %34

34:                                               ; preds = %26, %23
  store i32 0, i32* %5, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  store i32 0, i32* %35, align 4
  %36 = zext i16 %1 to i32
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %44, %34
  %40 = phi i32 [ 0, %34 ], [ %48, %44 ]
  %41 = phi i16 [ %1, %34 ], [ %47, %44 ]
  %42 = phi i32 [ %36, %34 ], [ %49, %44 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %58, label %52

44:                                               ; preds = %34, %44
  %45 = phi i16 [ %47, %44 ], [ %1, %34 ]
  %46 = phi i32 [ %48, %44 ], [ 0, %34 ]
  %47 = lshr i16 %45, 1
  %48 = add nuw nsw i32 %46, 1
  %49 = zext i16 %47 to i32
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %44, label %39

52:                                               ; preds = %39, %52
  %53 = phi i32 [ %56, %52 ], [ 0, %39 ]
  %54 = phi i32 [ %55, %52 ], [ %42, %39 ]
  %55 = ashr i32 %54, 1
  %56 = add nuw nsw i32 %53, 1
  %57 = icmp eq i32 %55, 0
  br i1 %57, label %58, label %52

58:                                               ; preds = %52, %39
  %59 = phi i32 [ 0, %39 ], [ %56, %52 ]
  %60 = mul nsw i32 %59, %2
  %61 = icmp sgt i32 %60, 3555
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

63:                                               ; preds = %58, %63
  %64 = phi i32 [ %66, %63 ], [ 1, %58 ]
  %65 = icmp sgt i32 %64, %2
  %66 = shl i32 %64, 1
  br i1 %65, label %67, label %63

67:                                               ; preds = %63
  %68 = ashr i32 %64, 2
  %69 = zext i16 %41 to i64
  %70 = icmp eq i32 %68, 0
  br i1 %70, label %95, label %71

71:                                               ; preds = %67
  %72 = sub nsw i32 64, %59
  %73 = zext i32 %72 to i64
  %74 = shl nsw i64 -1, %73
  br label %75

75:                                               ; preds = %71, %88
  %76 = phi i8 [ 0, %71 ], [ %90, %88 ]
  %77 = phi i64 [ %69, %71 ], [ %89, %88 ]
  %78 = phi i32 [ %68, %71 ], [ %91, %88 ]
  %79 = mul i64 %77, %77
  %80 = and i32 %78, %2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = and i64 %79, %74
  %84 = icmp eq i64 %83, 0
  %85 = select i1 %84, i64 %69, i64 1
  %86 = mul i64 %85, %79
  %87 = select i1 %84, i8 %76, i8 1
  br label %88

88:                                               ; preds = %82, %75
  %89 = phi i64 [ %79, %75 ], [ %86, %82 ]
  %90 = phi i8 [ %76, %75 ], [ %87, %82 ]
  %91 = ashr i32 %78, 1
  %92 = icmp ne i32 %91, 0
  %93 = icmp ult i64 %89, 4294967296
  %94 = and i1 %92, %93
  br i1 %94, label %75, label %95

95:                                               ; preds = %88, %67
  %96 = phi i32 [ 0, %67 ], [ %91, %88 ]
  %97 = phi i64 [ %69, %67 ], [ %89, %88 ]
  %98 = phi i8 [ 0, %67 ], [ %90, %88 ]
  store i32 0, i32* %5, align 8
  store i32 0, i32* %35, align 4
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %126, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %102 = trunc i64 %97 to i32
  %103 = and i32 %102, 268435455
  %104 = load i32*, i32** %101, align 8
  store i32 %103, i32* %104, align 4
  %105 = lshr i64 %97, 28
  %106 = trunc i64 %105 to i32
  %107 = and i32 %106, 268435455
  %108 = load i32*, i32** %101, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 1
  store i32 %107, i32* %109, align 4
  %110 = lshr i64 %97, 56
  %111 = trunc i64 %110 to i32
  %112 = load i32*, i32** %101, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 2
  store i32 %111, i32* %113, align 4
  store i32 3, i32* %5, align 8
  %114 = load i32*, i32** %101, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %126

118:                                              ; preds = %100
  store i32 2, i32* %5, align 8
  %119 = getelementptr inbounds i32, i32* %114, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %126

122:                                              ; preds = %123
  store i32 0, i32* %5, align 8
  store i32 0, i32* %35, align 4
  br label %126

123:                                              ; preds = %118
  store i32 1, i32* %5, align 8
  %124 = load i32, i32* %114, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %122, label %126

126:                                              ; preds = %95, %100, %118, %122, %123
  %127 = phi i32 [ 0, %95 ], [ 3, %100 ], [ 2, %118 ], [ 0, %122 ], [ 1, %123 ]
  %128 = and i8 %98, 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %181, label %130

130:                                              ; preds = %126
  switch i16 %41, label %144 [
    i16 1, label %181
    i16 0, label %131
  ]

131:                                              ; preds = %130
  %132 = icmp eq i32 %127, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %139, %135 ]
  %137 = load i32*, i32** %134, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 %136
  store i32 0, i32* %138, align 4
  %139 = add nuw nsw i64 %136, 1
  %140 = load i32, i32* %5, align 8
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %139, %141
  br i1 %142, label %135, label %143

143:                                              ; preds = %135, %131
  store i32 0, i32* %5, align 8
  store i32 0, i32* %35, align 4
  br label %181

144:                                              ; preds = %130
  %145 = icmp eq i32 %127, 0
  br i1 %145, label %181, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %150

148:                                              ; preds = %150
  %149 = icmp eq i64 %161, 0
  br i1 %149, label %181, label %166

150:                                              ; preds = %150, %146
  %151 = phi i64 [ 0, %146 ], [ %162, %150 ]
  %152 = phi i64 [ 0, %146 ], [ %161, %150 ]
  %153 = load i32*, i32** %147, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 %151
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = mul nuw nsw i64 %156, %69
  %158 = add nuw nsw i64 %157, %152
  %159 = trunc i64 %158 to i32
  %160 = and i32 %159, 268435455
  store i32 %160, i32* %154, align 4
  %161 = lshr i64 %158, 28
  %162 = add nuw nsw i64 %151, 1
  %163 = load i32, i32* %5, align 8
  %164 = sext i32 %163 to i64
  %165 = icmp slt i64 %162, %164
  br i1 %165, label %150, label %148

166:                                              ; preds = %148, %171
  %167 = phi i32 [ %178, %171 ], [ %163, %148 ]
  %168 = phi i64 [ %179, %171 ], [ %161, %148 ]
  %169 = icmp sgt i32 %167, 127
  br i1 %169, label %170, label %171

170:                                              ; preds = %166
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

171:                                              ; preds = %166
  %172 = trunc i64 %168 to i32
  %173 = and i32 %172, 268435455
  %174 = sext i32 %167 to i64
  %175 = load i32*, i32** %147, align 8
  %176 = getelementptr inbounds i32, i32* %175, i64 %174
  store i32 %173, i32* %176, align 4
  %177 = load i32, i32* %5, align 8
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %5, align 8
  %179 = lshr i64 %168, 28
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %166

181:                                              ; preds = %171, %144, %148, %143, %130, %126
  %182 = icmp eq i32 %96, 0
  br i1 %182, label %246, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %185 = icmp eq i16 %41, 1
  br i1 %185, label %186, label %190

186:                                              ; preds = %183, %186
  %187 = phi i32 [ %188, %186 ], [ %96, %183 ]
  tail call void @_ZN2v88internal6Bignum6SquareEv(%"class.v8::internal::Bignum"* %0)
  %188 = ashr i32 %187, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %246, label %186

190:                                              ; preds = %183, %243
  %191 = phi i32 [ %244, %243 ], [ %96, %183 ]
  tail call void @_ZN2v88internal6Bignum6SquareEv(%"class.v8::internal::Bignum"* %0)
  %192 = and i32 %191, %2
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %243, label %194

194:                                              ; preds = %190
  switch i16 %41, label %207 [
    i16 1, label %243
    i16 0, label %195
  ]

195:                                              ; preds = %194
  %196 = load i32, i32* %5, align 8
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %206

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %202, %198 ], [ 0, %195 ]
  %200 = load i32*, i32** %184, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 %199
  store i32 0, i32* %201, align 4
  %202 = add nuw nsw i64 %199, 1
  %203 = load i32, i32* %5, align 8
  %204 = sext i32 %203 to i64
  %205 = icmp slt i64 %202, %204
  br i1 %205, label %198, label %206

206:                                              ; preds = %198, %195
  store i32 0, i32* %5, align 8
  store i32 0, i32* %35, align 4
  br label %243

207:                                              ; preds = %194
  %208 = load i32, i32* %5, align 8
  %209 = icmp sgt i32 %208, 0
  br i1 %209, label %212, label %243

210:                                              ; preds = %212
  %211 = icmp eq i64 %223, 0
  br i1 %211, label %243, label %228

212:                                              ; preds = %207, %212
  %213 = phi i64 [ %224, %212 ], [ 0, %207 ]
  %214 = phi i64 [ %223, %212 ], [ 0, %207 ]
  %215 = load i32*, i32** %184, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 %213
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i64
  %219 = mul nuw nsw i64 %218, %69
  %220 = add nuw nsw i64 %219, %214
  %221 = trunc i64 %220 to i32
  %222 = and i32 %221, 268435455
  store i32 %222, i32* %216, align 4
  %223 = lshr i64 %220, 28
  %224 = add nuw nsw i64 %213, 1
  %225 = load i32, i32* %5, align 8
  %226 = sext i32 %225 to i64
  %227 = icmp slt i64 %224, %226
  br i1 %227, label %212, label %210

228:                                              ; preds = %210, %233
  %229 = phi i32 [ %240, %233 ], [ %225, %210 ]
  %230 = phi i64 [ %241, %233 ], [ %223, %210 ]
  %231 = icmp sgt i32 %229, 127
  br i1 %231, label %232, label %233

232:                                              ; preds = %228
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

233:                                              ; preds = %228
  %234 = trunc i64 %230 to i32
  %235 = and i32 %234, 268435455
  %236 = sext i32 %229 to i64
  %237 = load i32*, i32** %184, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 %236
  store i32 %235, i32* %238, align 4
  %239 = load i32, i32* %5, align 8
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %5, align 8
  %241 = lshr i64 %230, 28
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %228

243:                                              ; preds = %233, %210, %207, %206, %194, %190
  %244 = ashr i32 %191, 1
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %190

246:                                              ; preds = %243, %186, %181
  %247 = mul nsw i32 %40, %2
  %248 = load i32, i32* %5, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %284, label %250

250:                                              ; preds = %246
  %251 = sdiv i32 %247, 28
  %252 = load i32, i32* %35, align 4
  %253 = add nsw i32 %252, %251
  store i32 %253, i32* %35, align 4
  %254 = srem i32 %247, 28
  %255 = icmp sgt i32 %248, 127
  br i1 %255, label %256, label %257

256:                                              ; preds = %250
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

257:                                              ; preds = %250
  %258 = icmp sgt i32 %248, 0
  br i1 %258, label %259, label %284

259:                                              ; preds = %257
  %260 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %261 = sub nsw i32 28, %254
  br label %264

262:                                              ; preds = %264
  %263 = icmp eq i32 %270, 0
  br i1 %263, label %284, label %278

264:                                              ; preds = %264, %259
  %265 = phi i64 [ 0, %259 ], [ %274, %264 ]
  %266 = phi i32 [ 0, %259 ], [ %270, %264 ]
  %267 = load i32*, i32** %260, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %265
  %269 = load i32, i32* %268, align 4
  %270 = lshr i32 %269, %261
  %271 = shl i32 %269, %254
  %272 = add i32 %271, %266
  %273 = and i32 %272, 268435455
  store i32 %273, i32* %268, align 4
  %274 = add nuw nsw i64 %265, 1
  %275 = load i32, i32* %5, align 8
  %276 = sext i32 %275 to i64
  %277 = icmp slt i64 %274, %276
  br i1 %277, label %264, label %262

278:                                              ; preds = %262
  %279 = sext i32 %275 to i64
  %280 = load i32*, i32** %260, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %279
  store i32 %270, i32* %281, align 4
  %282 = load i32, i32* %5, align 8
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %5, align 8
  br label %284

284:                                              ; preds = %278, %262, %257, %246, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN2v88internal6Bignum21DivideModuloIntBignumERKS1_(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %4
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, %9
  %13 = icmp slt i32 %7, %12
  br i1 %13, label %244, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %6, %11
  br i1 %15, label %16, label %118

16:                                               ; preds = %14
  %17 = sub i32 %6, %11
  %18 = add nsw i32 %17, %4
  %19 = icmp sgt i32 %18, 128
  br i1 %19, label %43, label %20

20:                                               ; preds = %16
  %21 = icmp sgt i32 %4, 0
  br i1 %21, label %22, label %44

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %24 = sext i32 %4 to i64
  %25 = sext i32 %17 to i64
  %26 = add nsw i64 %24, -1
  %27 = and i64 %24, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %22, %29
  %30 = phi i64 [ %32, %29 ], [ %24, %22 ]
  %31 = phi i64 [ %38, %29 ], [ %27, %22 ]
  %32 = add nsw i64 %30, -1
  %33 = load i32*, i32** %23, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %32
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i64 %32, %25
  %37 = getelementptr inbounds i32, i32* %33, i64 %36
  store i32 %35, i32* %37, align 4
  %38 = add i64 %31, -1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %29, !llvm.loop !8

40:                                               ; preds = %29, %22
  %41 = phi i64 [ %24, %22 ], [ %32, %29 ]
  %42 = icmp ult i64 %26, 3
  br i1 %42, label %44, label %54

43:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

44:                                               ; preds = %40, %54, %20
  %45 = icmp sgt i32 %17, 0
  br i1 %45, label %46, label %92

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %48 = zext i32 %17 to i64
  %49 = add nsw i64 %48, -1
  %50 = and i64 %48, 3
  %51 = icmp ult i64 %49, 3
  br i1 %51, label %81, label %52

52:                                               ; preds = %46
  %53 = sub nsw i64 %48, %50
  br label %101

54:                                               ; preds = %40, %54
  %55 = phi i64 [ %74, %54 ], [ %41, %40 ]
  %56 = add nsw i64 %55, -1
  %57 = load i32*, i32** %23, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %56
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i64 %56, %25
  %61 = getelementptr inbounds i32, i32* %57, i64 %60
  store i32 %59, i32* %61, align 4
  %62 = add nsw i64 %55, -2
  %63 = load i32*, i32** %23, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i64 %62, %25
  %67 = getelementptr inbounds i32, i32* %63, i64 %66
  store i32 %65, i32* %67, align 4
  %68 = add nsw i64 %55, -3
  %69 = load i32*, i32** %23, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %68
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i64 %68, %25
  %73 = getelementptr inbounds i32, i32* %69, i64 %72
  store i32 %71, i32* %73, align 4
  %74 = add nsw i64 %55, -4
  %75 = load i32*, i32** %23, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 %74
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i64 %74, %25
  %79 = getelementptr inbounds i32, i32* %75, i64 %78
  store i32 %77, i32* %79, align 4
  %80 = icmp sgt i64 %74, 0
  br i1 %80, label %54, label %44

81:                                               ; preds = %101, %46
  %82 = phi i64 [ 0, %46 ], [ %115, %101 ]
  %83 = icmp eq i64 %50, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %89, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %90, %84 ], [ %50, %81 ]
  %87 = load i32*, i32** %47, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 %85
  store i32 0, i32* %88, align 4
  %89 = add nuw nsw i64 %85, 1
  %90 = add i64 %86, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %84, !llvm.loop !9

92:                                               ; preds = %81, %84, %44
  %93 = load i32, i32* %3, align 8
  %94 = add nsw i32 %93, %17
  store i32 %94, i32* %3, align 8
  %95 = load i32, i32* %5, align 4
  %96 = sub nsw i32 %95, %17
  store i32 %96, i32* %5, align 4
  %97 = load i32, i32* %8, align 8
  %98 = load i32, i32* %10, align 4
  %99 = add i32 %93, %95
  %100 = add nsw i32 %98, %97
  br label %118

101:                                              ; preds = %101, %52
  %102 = phi i64 [ 0, %52 ], [ %115, %101 ]
  %103 = phi i64 [ %53, %52 ], [ %116, %101 ]
  %104 = load i32*, i32** %47, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %102
  store i32 0, i32* %105, align 4
  %106 = or i64 %102, 1
  %107 = load i32*, i32** %47, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 %106
  store i32 0, i32* %108, align 4
  %109 = or i64 %102, 2
  %110 = load i32*, i32** %47, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 %109
  store i32 0, i32* %111, align 4
  %112 = or i64 %102, 3
  %113 = load i32*, i32** %47, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 %112
  store i32 0, i32* %114, align 4
  %115 = add nuw nsw i64 %102, 4
  %116 = add i64 %103, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %81, label %101

118:                                              ; preds = %14, %92
  %119 = phi i32 [ %12, %14 ], [ %100, %92 ]
  %120 = phi i32 [ %7, %14 ], [ %99, %92 ]
  %121 = phi i32 [ %9, %14 ], [ %97, %92 ]
  %122 = phi i32 [ %4, %14 ], [ %94, %92 ]
  %123 = icmp sgt i32 %120, %119
  %124 = add nsw i32 %122, -1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 %125
  %129 = load i32, i32* %128, align 4
  br i1 %123, label %130, label %149

130:                                              ; preds = %118, %130
  %131 = phi i32 [ %146, %130 ], [ %129, %118 ]
  %132 = phi i32 [ %134, %130 ], [ 0, %118 ]
  %133 = add i32 %131, %132
  tail call void @_ZN2v88internal6Bignum13SubtractTimesERKS1_i(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* dereferenceable(536) %1, i32 %131)
  %134 = and i32 %133, 65535
  %135 = load i32, i32* %3, align 8
  %136 = load i32, i32* %5, align 4
  %137 = add nsw i32 %136, %135
  %138 = load i32, i32* %8, align 8
  %139 = load i32, i32* %10, align 4
  %140 = add nsw i32 %139, %138
  %141 = icmp sgt i32 %137, %140
  %142 = add nsw i32 %135, -1
  %143 = sext i32 %142 to i64
  %144 = load i32*, i32** %126, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 %143
  %146 = load i32, i32* %145, align 4
  br i1 %141, label %130, label %147

147:                                              ; preds = %130
  %148 = getelementptr inbounds i32, i32* %144, i64 %143
  br label %149

149:                                              ; preds = %147, %118
  %150 = phi i32 [ 0, %118 ], [ %134, %147 ]
  %151 = phi i32 [ %121, %118 ], [ %138, %147 ]
  %152 = phi i32* [ %128, %118 ], [ %148, %147 ]
  %153 = phi i32 [ %129, %118 ], [ %146, %147 ]
  %154 = add nsw i32 %151, -1
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 %155
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %151, 1
  br i1 %160, label %161, label %187

161:                                              ; preds = %149
  %162 = udiv i32 %153, %159
  %163 = mul i32 %162, %159
  %164 = sub i32 %153, %163
  store i32 %164, i32* %152, align 4
  %165 = add nsw i32 %162, %150
  %166 = trunc i32 %165 to i16
  %167 = load i32, i32* %3, align 8
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %169, label %183

169:                                              ; preds = %161
  %170 = sext i32 %167 to i64
  %171 = load i32*, i32** %126, align 8
  br label %172

172:                                              ; preds = %178, %169
  %173 = phi i64 [ %170, %169 ], [ %174, %178 ]
  %174 = add nsw i64 %173, -1
  %175 = getelementptr inbounds i32, i32* %171, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %244

178:                                              ; preds = %172
  %179 = trunc i64 %174 to i32
  store i32 %179, i32* %3, align 8
  %180 = icmp sgt i64 %174, 0
  br i1 %180, label %172, label %181

181:                                              ; preds = %178
  %182 = trunc i64 %174 to i32
  br label %183

183:                                              ; preds = %181, %161
  %184 = phi i32 [ %167, %161 ], [ %182, %181 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %244

186:                                              ; preds = %183
  store i32 0, i32* %5, align 4
  br label %244

187:                                              ; preds = %149
  %188 = add i32 %159, 1
  %189 = udiv i32 %153, %188
  %190 = add nsw i32 %189, %150
  %191 = trunc i32 %190 to i16
  tail call void @_ZN2v88internal6Bignum13SubtractTimesERKS1_i(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* dereferenceable(536) %1, i32 %189)
  %192 = add nsw i32 %189, 1
  %193 = mul i32 %192, %159
  %194 = icmp ugt i32 %193, %153
  br i1 %194, label %244, label %195

195:                                              ; preds = %187, %242
  %196 = phi i16 [ %243, %242 ], [ %191, %187 ]
  %197 = load i32, i32* %8, align 8
  %198 = load i32, i32* %10, align 4
  %199 = add i32 %198, %197
  %200 = load i32, i32* %3, align 8
  %201 = load i32, i32* %5, align 4
  %202 = add nsw i32 %201, %200
  %203 = icmp slt i32 %199, %202
  br i1 %203, label %242, label %204

204:                                              ; preds = %195
  %205 = icmp sgt i32 %199, %202
  br i1 %205, label %244, label %206

206:                                              ; preds = %204
  %207 = icmp slt i32 %201, %198
  %208 = select i1 %207, i32 %201, i32 %198
  %209 = load i32*, i32** %156, align 8
  %210 = load i32*, i32** %126, align 8
  %211 = sext i32 %199 to i64
  %212 = sext i32 %201 to i64
  %213 = sext i32 %198 to i64
  %214 = sext i32 %208 to i64
  %215 = sext i32 %202 to i64
  br label %216

216:                                              ; preds = %240, %206
  %217 = phi i64 [ %211, %206 ], [ %218, %240 ]
  %218 = add nsw i64 %217, -1
  %219 = icmp sgt i64 %217, %214
  br i1 %219, label %220, label %242

220:                                              ; preds = %216
  %221 = icmp sgt i64 %217, %211
  %222 = icmp sle i64 %217, %213
  %223 = or i1 %222, %221
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = sub nsw i64 %218, %213
  %226 = getelementptr inbounds i32, i32* %209, i64 %225
  %227 = load i32, i32* %226, align 4
  br label %228

228:                                              ; preds = %224, %220
  %229 = phi i32 [ %227, %224 ], [ 0, %220 ]
  %230 = icmp sgt i64 %217, %215
  %231 = icmp sle i64 %217, %212
  %232 = or i1 %231, %230
  br i1 %232, label %237, label %233

233:                                              ; preds = %228
  %234 = sub nsw i64 %218, %212
  %235 = getelementptr inbounds i32, i32* %210, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %228
  %238 = phi i32 [ %236, %233 ], [ 0, %228 ]
  %239 = icmp ult i32 %229, %238
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = icmp ugt i32 %229, %238
  br i1 %241, label %244, label %216

242:                                              ; preds = %237, %216, %195
  tail call void @_ZN2v88internal6Bignum14SubtractBignumERKS1_(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* dereferenceable(536) %1)
  %243 = add i16 %196, 1
  br label %195

244:                                              ; preds = %204, %240, %172, %186, %183, %187, %2
  %245 = phi i16 [ 0, %2 ], [ %191, %187 ], [ %166, %183 ], [ %166, %186 ], [ %166, %172 ], [ %196, %240 ], [ %196, %204 ]
  ret i16 %245
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Bignum13SubtractTimesERKS1_i(%"class.v8::internal::Bignum"* nocapture, %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536), i32) local_unnamed_addr #2 align 2 {
  %4 = icmp slt i32 %2, 3
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %102

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %9, %7 ], [ 0, %5 ]
  tail call void @_ZN2v88internal6Bignum14SubtractBignumERKS1_(%"class.v8::internal::Bignum"* %0, %"class.v8::internal::Bignum"* dereferenceable(536) %1)
  %9 = add nuw nsw i32 %8, 1
  %10 = icmp eq i32 %9, %2
  br i1 %10, label %102, label %7

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  br label %36

24:                                               ; preds = %36, %11
  %25 = phi i32 [ 0, %11 ], [ %59, %36 ]
  %26 = phi i32 [ %18, %11 ], [ %62, %36 ]
  %27 = add nsw i32 %26, %16
  %28 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %27, %29
  br i1 %30, label %31, label %80

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %33 = add i32 %26, %13
  %34 = sub i32 %33, %15
  %35 = sext i32 %34 to i64
  br label %65

36:                                               ; preds = %20, %36
  %37 = phi i64 [ 0, %20 ], [ %60, %36 ]
  %38 = phi i32 [ 0, %20 ], [ %59, %36 ]
  %39 = phi i32 [ 0, %20 ], [ %61, %36 ]
  %40 = load i32*, i32** %22, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 %37
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = mul nsw i64 %43, %21
  %45 = zext i32 %38 to i64
  %46 = add nsw i64 %44, %45
  %47 = add nsw i32 %39, %16
  %48 = sext i32 %47 to i64
  %49 = load i32*, i32** %23, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %48
  %51 = load i32, i32* %50, align 4
  %52 = trunc i64 %46 to i32
  %53 = and i32 %52, 268435455
  %54 = sub i32 %51, %53
  %55 = and i32 %54, 268435455
  store i32 %55, i32* %50, align 4
  %56 = lshr i32 %54, 31
  %57 = lshr i64 %46, 28
  %58 = trunc i64 %57 to i32
  %59 = add i32 %56, %58
  %60 = add nuw nsw i64 %37, 1
  %61 = add nuw nsw i32 %39, 1
  %62 = load i32, i32* %17, align 8
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %60, %63
  br i1 %64, label %36, label %24

65:                                               ; preds = %31, %69
  %66 = phi i64 [ %35, %31 ], [ %76, %69 ]
  %67 = phi i32 [ %25, %31 ], [ %75, %69 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %65
  %70 = load i32*, i32** %32, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %66
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %72, %67
  %74 = and i32 %73, 268435455
  store i32 %74, i32* %71, align 4
  %75 = lshr i32 %73, 31
  %76 = add nsw i64 %66, 1
  %77 = load i32, i32* %28, align 8
  %78 = sext i32 %77 to i64
  %79 = icmp slt i64 %76, %78
  br i1 %79, label %65, label %80

80:                                               ; preds = %69, %24
  %81 = phi i32 [ %29, %24 ], [ %77, %69 ]
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %98

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %85 = sext i32 %81 to i64
  %86 = load i32*, i32** %84, align 8
  br label %87

87:                                               ; preds = %93, %83
  %88 = phi i64 [ %85, %83 ], [ %89, %93 ]
  %89 = add nsw i64 %88, -1
  %90 = getelementptr inbounds i32, i32* %86, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %102

93:                                               ; preds = %87
  %94 = trunc i64 %89 to i32
  store i32 %94, i32* %28, align 8
  %95 = icmp sgt i64 %89, 0
  br i1 %95, label %87, label %96

96:                                               ; preds = %93
  %97 = trunc i64 %89 to i32
  br label %98

98:                                               ; preds = %96, %80
  %99 = phi i32 [ %81, %80 ], [ %97, %96 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  store i32 0, i32* %14, align 4
  br label %102

102:                                              ; preds = %65, %87, %7, %5, %101, %98
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Bignum11ToHexStringEPci(%"class.v8::internal::Bignum"* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = icmp slt i32 %2, 2
  br i1 %8, label %146, label %9

9:                                                ; preds = %7
  store i8 48, i8* %1, align 1
  %10 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 0, i8* %10, align 1
  br label %146

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, %5
  %15 = mul i32 %14, 7
  %16 = add i32 %15, -7
  %17 = add nsw i32 %5, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %18
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %11, %24
  %25 = phi i32 [ %28, %24 ], [ 0, %11 ]
  %26 = phi i32 [ %27, %24 ], [ %22, %11 ]
  %27 = lshr i32 %26, 4
  %28 = add nuw nsw i32 %25, 1
  %29 = icmp eq i32 %27, 0
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %11
  %31 = phi i32 [ 0, %11 ], [ %28, %24 ]
  %32 = add nsw i32 %16, %31
  %33 = icmp slt i32 %32, %2
  br i1 %33, label %34, label %146

34:                                               ; preds = %30
  %35 = add nsw i32 %32, -1
  %36 = sext i32 %32 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  store i8 0, i8* %37, align 1
  %38 = load i32, i32* %12, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = getelementptr i8, i8* %1, i64 -6
  br label %42

42:                                               ; preds = %40, %42
  %43 = phi i32 [ %48, %42 ], [ 0, %40 ]
  %44 = phi i32 [ %47, %42 ], [ %35, %40 ]
  %45 = sext i32 %44 to i64
  %46 = getelementptr i8, i8* %41, i64 %45
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 48, i64 7, i1 false)
  %47 = add i32 %44, -7
  %48 = add nuw nsw i32 %43, 1
  %49 = load i32, i32* %12, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %42, label %51

51:                                               ; preds = %42, %34
  %52 = phi i32 [ %35, %34 ], [ %47, %42 ]
  %53 = load i32, i32* %4, align 8
  %54 = add nsw i32 %53, -1
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %51
  %57 = sext i32 %54 to i64
  br label %58

58:                                               ; preds = %67, %56
  %59 = phi i64 [ %57, %56 ], [ %132, %67 ]
  %60 = phi i32 [ %52, %56 ], [ %127, %67 ]
  %61 = load i32*, i32** %19, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %59
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %146, label %65

65:                                               ; preds = %58
  %66 = sext i32 %60 to i64
  br label %134

67:                                               ; preds = %51, %67
  %68 = phi i64 [ %129, %67 ], [ 0, %51 ]
  %69 = phi i32 [ %127, %67 ], [ %52, %51 ]
  %70 = load i32*, i32** %19, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %69 to i64
  %74 = and i32 %72, 15
  %75 = icmp ult i32 %74, 10
  %76 = trunc i32 %74 to i8
  %77 = select i1 %75, i8 48, i8 55
  %78 = add nuw nsw i8 %77, %76
  %79 = add nsw i64 %73, -1
  %80 = getelementptr inbounds i8, i8* %1, i64 %73
  store i8 %78, i8* %80, align 1
  %81 = lshr i32 %72, 4
  %82 = and i32 %81, 15
  %83 = icmp ult i32 %82, 10
  %84 = trunc i32 %82 to i8
  %85 = select i1 %83, i8 48, i8 55
  %86 = add nuw nsw i8 %85, %84
  %87 = add nsw i64 %73, -2
  %88 = getelementptr inbounds i8, i8* %1, i64 %79
  store i8 %86, i8* %88, align 1
  %89 = lshr i32 %72, 8
  %90 = and i32 %89, 15
  %91 = icmp ult i32 %90, 10
  %92 = trunc i32 %90 to i8
  %93 = select i1 %91, i8 48, i8 55
  %94 = add nuw nsw i8 %93, %92
  %95 = add nsw i64 %73, -3
  %96 = getelementptr inbounds i8, i8* %1, i64 %87
  store i8 %94, i8* %96, align 1
  %97 = lshr i32 %72, 12
  %98 = and i32 %97, 15
  %99 = icmp ult i32 %98, 10
  %100 = trunc i32 %98 to i8
  %101 = select i1 %99, i8 48, i8 55
  %102 = add nuw nsw i8 %101, %100
  %103 = add nsw i64 %73, -4
  %104 = getelementptr inbounds i8, i8* %1, i64 %95
  store i8 %102, i8* %104, align 1
  %105 = lshr i32 %72, 16
  %106 = and i32 %105, 15
  %107 = icmp ult i32 %106, 10
  %108 = trunc i32 %106 to i8
  %109 = select i1 %107, i8 48, i8 55
  %110 = add nuw nsw i8 %109, %108
  %111 = add nsw i64 %73, -5
  %112 = getelementptr inbounds i8, i8* %1, i64 %103
  store i8 %110, i8* %112, align 1
  %113 = lshr i32 %72, 20
  %114 = and i32 %113, 15
  %115 = icmp ult i32 %114, 10
  %116 = trunc i32 %114 to i8
  %117 = select i1 %115, i8 48, i8 55
  %118 = add nuw nsw i8 %117, %116
  %119 = add nsw i64 %73, -6
  %120 = getelementptr inbounds i8, i8* %1, i64 %111
  store i8 %118, i8* %120, align 1
  %121 = lshr i32 %72, 24
  %122 = and i32 %121, 15
  %123 = icmp ult i32 %122, 10
  %124 = trunc i32 %122 to i8
  %125 = select i1 %123, i8 48, i8 55
  %126 = add nuw nsw i8 %125, %124
  %127 = add i32 %69, -7
  %128 = getelementptr inbounds i8, i8* %1, i64 %119
  store i8 %126, i8* %128, align 1
  %129 = add nuw nsw i64 %68, 1
  %130 = load i32, i32* %4, align 8
  %131 = add nsw i32 %130, -1
  %132 = sext i32 %131 to i64
  %133 = icmp slt i64 %129, %132
  br i1 %133, label %67, label %58

134:                                              ; preds = %65, %134
  %135 = phi i64 [ %66, %65 ], [ %142, %134 ]
  %136 = phi i32 [ %63, %65 ], [ %144, %134 ]
  %137 = and i32 %136, 15
  %138 = icmp ult i32 %137, 10
  %139 = trunc i32 %137 to i8
  %140 = select i1 %138, i8 48, i8 55
  %141 = add nuw nsw i8 %140, %139
  %142 = add nsw i64 %135, -1
  %143 = getelementptr inbounds i8, i8* %1, i64 %135
  store i8 %141, i8* %143, align 1
  %144 = lshr i32 %136, 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %134

146:                                              ; preds = %134, %58, %30, %7, %9
  %147 = phi i1 [ true, %9 ], [ false, %7 ], [ false, %30 ], [ true, %58 ], [ true, %134 ]
  ret i1 %147
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal6Bignum7BigitAtEi(%"class.v8::internal::Bignum"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %4
  %8 = icmp sle i32 %7, %1
  %9 = icmp sgt i32 %6, %1
  %10 = or i1 %9, %8
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = sub nsw i32 %1, %6
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 %13
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %2, %11
  %19 = phi i32 [ %17, %11 ], [ 0, %2 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal6Bignum7CompareERKS1_S3_(%"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536), %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, %4
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, %9
  %13 = icmp slt i32 %7, %12
  br i1 %13, label %54, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %7, %12
  br i1 %15, label %54, label %16

16:                                               ; preds = %14
  %17 = icmp slt i32 %11, %6
  %18 = select i1 %17, i32 %11, i32 %6
  %19 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = sext i32 %7 to i64
  %24 = sext i32 %11 to i64
  %25 = sext i32 %6 to i64
  %26 = sext i32 %18 to i64
  %27 = sext i32 %12 to i64
  br label %28

28:                                               ; preds = %16, %52
  %29 = phi i64 [ %23, %16 ], [ %30, %52 ]
  %30 = add nsw i64 %29, -1
  %31 = icmp sgt i64 %29, %26
  br i1 %31, label %32, label %54

32:                                               ; preds = %28
  %33 = icmp sgt i64 %29, %23
  %34 = icmp sle i64 %29, %25
  %35 = or i1 %34, %33
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = sub nsw i64 %30, %25
  %38 = getelementptr inbounds i32, i32* %20, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %32, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %42 = icmp sgt i64 %29, %27
  %43 = icmp sle i64 %29, %24
  %44 = or i1 %43, %42
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = sub nsw i64 %30, %24
  %47 = getelementptr inbounds i32, i32* %22, i64 %46
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %40, %45
  %50 = phi i32 [ %48, %45 ], [ 0, %40 ]
  %51 = icmp ult i32 %41, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = icmp ugt i32 %41, %50
  br i1 %53, label %54, label %28

54:                                               ; preds = %52, %28, %49, %2, %14
  %55 = phi i32 [ -1, %2 ], [ 1, %14 ], [ 1, %52 ], [ 0, %28 ], [ -1, %49 ]
  ret i32 %55
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536), %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536), %"class.v8::internal::Bignum"* nocapture readonly dereferenceable(536)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %5
  %9 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, %10
  %14 = icmp slt i32 %8, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = tail call i32 @_ZN2v88internal6Bignum11PlusCompareERKS1_S3_S3_(%"class.v8::internal::Bignum"* dereferenceable(536) %1, %"class.v8::internal::Bignum"* dereferenceable(536) %0, %"class.v8::internal::Bignum"* dereferenceable(536) %2)
  br label %92

17:                                               ; preds = %3
  %18 = add nsw i32 %8, 1
  %19 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %2, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, %20
  %24 = icmp slt i32 %18, %23
  br i1 %24, label %92, label %25

25:                                               ; preds = %17
  %26 = icmp sgt i32 %8, %23
  br i1 %26, label %92, label %27

27:                                               ; preds = %25
  %28 = icmp sge i32 %7, %13
  %29 = icmp slt i32 %8, %23
  %30 = and i1 %28, %29
  br i1 %30, label %92, label %31

31:                                               ; preds = %27
  %32 = icmp slt i32 %12, %7
  %33 = select i1 %32, i32 %12, i32 %7
  %34 = icmp slt i32 %22, %33
  %35 = select i1 %34, i32 %22, i32 %33
  %36 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %1, i64 0, i32 1, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %2, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = sext i32 %23 to i64
  %43 = sext i32 %12 to i64
  %44 = sext i32 %7 to i64
  %45 = sext i32 %22 to i64
  %46 = sext i32 %35 to i64
  %47 = sext i32 %8 to i64
  %48 = sext i32 %13 to i64
  br label %49

49:                                               ; preds = %85, %31
  %50 = phi i64 [ %52, %85 ], [ %42, %31 ]
  %51 = phi i32 [ %88, %85 ], [ 0, %31 ]
  %52 = add nsw i64 %50, -1
  %53 = icmp sgt i64 %50, %46
  br i1 %53, label %54, label %89

54:                                               ; preds = %49
  %55 = icmp sgt i64 %50, %47
  %56 = icmp sle i64 %50, %44
  %57 = or i1 %56, %55
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = sub nsw i64 %52, %44
  %60 = getelementptr inbounds i32, i32* %37, i64 %59
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %54, %58
  %63 = phi i32 [ %61, %58 ], [ 0, %54 ]
  %64 = icmp sgt i64 %50, %48
  %65 = icmp sle i64 %50, %43
  %66 = or i1 %65, %64
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = sub nsw i64 %52, %43
  %69 = getelementptr inbounds i32, i32* %39, i64 %68
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %62, %67
  %72 = phi i32 [ %70, %67 ], [ 0, %62 ]
  %73 = icmp sgt i64 %50, %42
  %74 = icmp sle i64 %50, %45
  %75 = or i1 %74, %73
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = sub nsw i64 %52, %45
  %78 = getelementptr inbounds i32, i32* %41, i64 %77
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %71, %76
  %81 = phi i32 [ %79, %76 ], [ 0, %71 ]
  %82 = add i32 %72, %63
  %83 = add i32 %81, %51
  %84 = icmp ult i32 %83, %82
  br i1 %84, label %92, label %85

85:                                               ; preds = %80
  %86 = sub i32 %83, %82
  %87 = icmp ugt i32 %86, 1
  %88 = shl i32 %86, 28
  br i1 %87, label %92, label %49

89:                                               ; preds = %49
  %90 = icmp ne i32 %51, 0
  %91 = sext i1 %90 to i32
  br label %92

92:                                               ; preds = %80, %85, %27, %89, %25, %17, %15
  %93 = phi i32 [ %16, %15 ], [ -1, %17 ], [ 1, %25 ], [ %91, %89 ], [ -1, %27 ], [ -1, %85 ], [ 1, %80 ]
  ret i32 %93
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Bignum9IsClampedEv(%"class.v8::internal::Bignum"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = add nsw i32 %3, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Bignum", %"class.v8::internal::Bignum"* %0, i64 0, i32 1, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %5, %1
  %14 = phi i1 [ true, %1 ], [ %12, %5 ]
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
