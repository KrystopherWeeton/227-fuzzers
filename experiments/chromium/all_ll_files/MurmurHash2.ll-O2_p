; ModuleID = '../../third_party/smhasher/src/MurmurHash2.cpp'
source_filename = "../../third_party/smhasher/src/MurmurHash2.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z11MurmurHash2PKvij(i8* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = xor i32 %2, %1
  %5 = icmp sgt i32 %1, 3
  br i1 %5, label %6, label %59

6:                                                ; preds = %3
  %7 = add nsw i32 %1, -4
  %8 = and i32 %7, -4
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 4
  %11 = getelementptr i8, i8* %0, i64 %10
  %12 = add nsw i32 %1, -4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %6
  %16 = bitcast i8* %0 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = mul i32 %17, 1540483477
  %19 = lshr i32 %18, 24
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, 1540483477
  %22 = mul i32 %4, 1540483477
  %23 = xor i32 %21, %22
  %24 = getelementptr inbounds i8, i8* %0, i64 4
  %25 = add nsw i32 %1, -4
  br label %26

26:                                               ; preds = %15, %6
  %27 = phi i32 [ %1, %6 ], [ %25, %15 ]
  %28 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %29 = phi i32 [ %4, %6 ], [ %23, %15 ]
  %30 = phi i32 [ undef, %6 ], [ %23, %15 ]
  %31 = icmp ult i32 %12, 4
  br i1 %31, label %56, label %32

32:                                               ; preds = %26, %32
  %33 = phi i32 [ %54, %32 ], [ %27, %26 ]
  %34 = phi i8* [ %53, %32 ], [ %28, %26 ]
  %35 = phi i32 [ %52, %32 ], [ %29, %26 ]
  %36 = bitcast i8* %34 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = mul i32 %37, 1540483477
  %39 = lshr i32 %38, 24
  %40 = xor i32 %39, %38
  %41 = mul i32 %40, 1540483477
  %42 = mul i32 %35, 1540483477
  %43 = xor i32 %41, %42
  %44 = getelementptr inbounds i8, i8* %34, i64 4
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = mul i32 %46, 1540483477
  %48 = lshr i32 %47, 24
  %49 = xor i32 %48, %47
  %50 = mul i32 %49, 1540483477
  %51 = mul i32 %43, 1540483477
  %52 = xor i32 %50, %51
  %53 = getelementptr inbounds i8, i8* %34, i64 8
  %54 = add nsw i32 %33, -8
  %55 = icmp sgt i32 %54, 3
  br i1 %55, label %32, label %56

56:                                               ; preds = %32, %26
  %57 = phi i32 [ %30, %26 ], [ %52, %32 ]
  %58 = and i32 %7, 3
  br label %59

59:                                               ; preds = %56, %3
  %60 = phi i32 [ %4, %3 ], [ %57, %56 ]
  %61 = phi i8* [ %0, %3 ], [ %11, %56 ]
  %62 = phi i32 [ %1, %3 ], [ %58, %56 ]
  switch i32 %62, label %82 [
    i32 3, label %63
    i32 2, label %69
    i32 1, label %76
  ]

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %61, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = xor i32 %67, %60
  br label %69

69:                                               ; preds = %59, %63
  %70 = phi i32 [ %60, %59 ], [ %68, %63 ]
  %71 = getelementptr inbounds i8, i8* %61, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = xor i32 %74, %70
  br label %76

76:                                               ; preds = %59, %69
  %77 = phi i32 [ %60, %59 ], [ %75, %69 ]
  %78 = load i8, i8* %61, align 1
  %79 = zext i8 %78 to i32
  %80 = xor i32 %77, %79
  %81 = mul i32 %80, 1540483477
  br label %82

82:                                               ; preds = %76, %59
  %83 = phi i32 [ %60, %59 ], [ %81, %76 ]
  %84 = lshr i32 %83, 13
  %85 = xor i32 %84, %83
  %86 = mul i32 %85, 1540483477
  %87 = lshr i32 %86, 15
  %88 = xor i32 %87, %86
  ret i32 %88
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_Z13MurmurHash64APKvim(i8* readonly, i32, i64) local_unnamed_addr #0 {
  %4 = sext i32 %1 to i64
  %5 = mul i64 %4, -4132994306676758123
  %6 = xor i64 %5, %2
  %7 = bitcast i8* %0 to i64*
  %8 = sdiv i32 %1, 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i64, i64* %7, i64 %9
  %11 = icmp eq i64* %10, %7
  br i1 %11, label %54, label %12

12:                                               ; preds = %3
  %13 = shl nsw i64 %9, 3
  %14 = getelementptr i8, i8* %0, i64 %13
  %15 = shl nsw i64 %9, 3
  %16 = add nsw i64 %15, -8
  %17 = and i64 %16, 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %7, align 8
  %23 = mul i64 %22, -4132994306676758123
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -4132994306676758123
  %27 = xor i64 %26, %6
  %28 = mul i64 %27, -4132994306676758123
  br label %29

29:                                               ; preds = %19, %12
  %30 = phi i64 [ undef, %12 ], [ %28, %19 ]
  %31 = phi i64 [ %6, %12 ], [ %28, %19 ]
  %32 = phi i64* [ %7, %12 ], [ %21, %19 ]
  %33 = icmp eq i64 %16, 0
  br i1 %33, label %54, label %34

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %52, %34 ], [ %31, %29 ]
  %36 = phi i64* [ %45, %34 ], [ %32, %29 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 1
  %38 = load i64, i64* %36, align 8
  %39 = mul i64 %38, -4132994306676758123
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -4132994306676758123
  %43 = xor i64 %42, %35
  %44 = mul i64 %43, -4132994306676758123
  %45 = getelementptr inbounds i64, i64* %36, i64 2
  %46 = load i64, i64* %37, align 8
  %47 = mul i64 %46, -4132994306676758123
  %48 = lshr i64 %47, 47
  %49 = xor i64 %48, %47
  %50 = mul i64 %49, -4132994306676758123
  %51 = xor i64 %50, %44
  %52 = mul i64 %51, -4132994306676758123
  %53 = icmp eq i64* %45, %10
  br i1 %53, label %54, label %34

54:                                               ; preds = %29, %34, %3
  %55 = phi i8* [ %0, %3 ], [ %14, %34 ], [ %14, %29 ]
  %56 = phi i64 [ %6, %3 ], [ %30, %29 ], [ %52, %34 ]
  %57 = and i32 %1, 7
  switch i32 %57, label %105 [
    i32 7, label %58
    i32 6, label %64
    i32 5, label %71
    i32 4, label %78
    i32 3, label %85
    i32 2, label %92
    i32 1, label %99
  ]

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %55, i64 6
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = shl nuw nsw i64 %61, 48
  %63 = xor i64 %62, %56
  br label %64

64:                                               ; preds = %54, %58
  %65 = phi i64 [ %56, %54 ], [ %63, %58 ]
  %66 = getelementptr inbounds i8, i8* %55, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 40
  %70 = xor i64 %69, %65
  br label %71

71:                                               ; preds = %54, %64
  %72 = phi i64 [ %56, %54 ], [ %70, %64 ]
  %73 = getelementptr inbounds i8, i8* %55, i64 4
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = shl nuw nsw i64 %75, 32
  %77 = xor i64 %76, %72
  br label %78

78:                                               ; preds = %54, %71
  %79 = phi i64 [ %56, %54 ], [ %77, %71 ]
  %80 = getelementptr inbounds i8, i8* %55, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = shl nuw nsw i64 %82, 24
  %84 = xor i64 %83, %79
  br label %85

85:                                               ; preds = %54, %78
  %86 = phi i64 [ %56, %54 ], [ %84, %78 ]
  %87 = getelementptr inbounds i8, i8* %55, i64 2
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = shl nuw nsw i64 %89, 16
  %91 = xor i64 %90, %86
  br label %92

92:                                               ; preds = %54, %85
  %93 = phi i64 [ %56, %54 ], [ %91, %85 ]
  %94 = getelementptr inbounds i8, i8* %55, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = shl nuw nsw i64 %96, 8
  %98 = xor i64 %97, %93
  br label %99

99:                                               ; preds = %54, %92
  %100 = phi i64 [ %56, %54 ], [ %98, %92 ]
  %101 = load i8, i8* %55, align 1
  %102 = zext i8 %101 to i64
  %103 = xor i64 %100, %102
  %104 = mul i64 %103, -4132994306676758123
  br label %105

105:                                              ; preds = %99, %54
  %106 = phi i64 [ %56, %54 ], [ %104, %99 ]
  %107 = lshr i64 %106, 47
  %108 = xor i64 %107, %106
  %109 = mul i64 %108, -4132994306676758123
  %110 = lshr i64 %109, 47
  %111 = xor i64 %110, %109
  ret i64 %111
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_Z13MurmurHash64BPKvim(i8* nocapture readonly, i32, i64) local_unnamed_addr #0 {
  %4 = trunc i64 %2 to i32
  %5 = xor i32 %4, %1
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = bitcast i8* %0 to i32*
  %9 = icmp sgt i32 %1, 7
  br i1 %9, label %10, label %42

10:                                               ; preds = %3
  %11 = add nsw i32 %1, -8
  %12 = and i32 %11, -8
  %13 = zext i32 %12 to i64
  %14 = add nuw nsw i64 %13, 8
  %15 = getelementptr i8, i8* %0, i64 %14
  %16 = bitcast i8* %15 to i32*
  br label %17

17:                                               ; preds = %10, %17
  %18 = phi i32 [ %38, %17 ], [ %1, %10 ]
  %19 = phi i32 [ %29, %17 ], [ %5, %10 ]
  %20 = phi i32 [ %37, %17 ], [ %7, %10 ]
  %21 = phi i32* [ %30, %17 ], [ %8, %10 ]
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  %23 = load i32, i32* %21, align 4
  %24 = mul i32 %23, 1540483477
  %25 = lshr i32 %24, 24
  %26 = xor i32 %25, %24
  %27 = mul i32 %26, 1540483477
  %28 = mul i32 %19, 1540483477
  %29 = xor i32 %27, %28
  %30 = getelementptr inbounds i32, i32* %21, i64 2
  %31 = load i32, i32* %22, align 4
  %32 = mul i32 %31, 1540483477
  %33 = lshr i32 %32, 24
  %34 = xor i32 %33, %32
  %35 = mul i32 %34, 1540483477
  %36 = mul i32 %20, 1540483477
  %37 = xor i32 %35, %36
  %38 = add nsw i32 %18, -8
  %39 = icmp sgt i32 %38, 7
  br i1 %39, label %17, label %40

40:                                               ; preds = %17
  %41 = and i32 %11, 7
  br label %42

42:                                               ; preds = %40, %3
  %43 = phi i32* [ %8, %3 ], [ %16, %40 ]
  %44 = phi i32 [ %7, %3 ], [ %37, %40 ]
  %45 = phi i32 [ %5, %3 ], [ %29, %40 ]
  %46 = phi i32 [ %1, %3 ], [ %41, %40 ]
  %47 = icmp sgt i32 %46, 3
  br i1 %47, label %48, label %58

48:                                               ; preds = %42
  %49 = getelementptr inbounds i32, i32* %43, i64 1
  %50 = load i32, i32* %43, align 4
  %51 = mul i32 %50, 1540483477
  %52 = lshr i32 %51, 24
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 1540483477
  %55 = mul i32 %45, 1540483477
  %56 = xor i32 %54, %55
  %57 = add nsw i32 %46, -4
  br label %58

58:                                               ; preds = %48, %42
  %59 = phi i32* [ %49, %48 ], [ %43, %42 ]
  %60 = phi i32 [ %56, %48 ], [ %45, %42 ]
  %61 = phi i32 [ %57, %48 ], [ %46, %42 ]
  switch i32 %61, label %88 [
    i32 3, label %66
    i32 2, label %62
    i32 1, label %64
  ]

62:                                               ; preds = %58
  %63 = bitcast i32* %59 to i8*
  br label %73

64:                                               ; preds = %58
  %65 = bitcast i32* %59 to i8*
  br label %81

66:                                               ; preds = %58
  %67 = bitcast i32* %59 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 16
  %72 = xor i32 %71, %44
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %63, %62 ], [ %67, %66 ]
  %75 = phi i32 [ %44, %62 ], [ %72, %66 ]
  %76 = getelementptr inbounds i8, i8* %74, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = xor i32 %79, %75
  br label %81

81:                                               ; preds = %64, %73
  %82 = phi i8* [ %65, %64 ], [ %74, %73 ]
  %83 = phi i32 [ %44, %64 ], [ %80, %73 ]
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i32
  %86 = xor i32 %83, %85
  %87 = mul i32 %86, 1540483477
  br label %88

88:                                               ; preds = %81, %58
  %89 = phi i32 [ %44, %58 ], [ %87, %81 ]
  %90 = lshr i32 %89, 18
  %91 = xor i32 %90, %60
  %92 = mul i32 %91, 1540483477
  %93 = lshr i32 %92, 22
  %94 = xor i32 %93, %89
  %95 = mul i32 %94, 1540483477
  %96 = lshr i32 %95, 17
  %97 = xor i32 %96, %92
  %98 = mul i32 %97, 1540483477
  %99 = lshr i32 %98, 19
  %100 = xor i32 %99, %95
  %101 = mul i32 %100, 1540483477
  %102 = zext i32 %98 to i64
  %103 = shl nuw i64 %102, 32
  %104 = zext i32 %101 to i64
  %105 = or i64 %103, %104
  ret i64 %105
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z12MurmurHash2APKvij(i8* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %1, 3
  br i1 %4, label %5, label %58

5:                                                ; preds = %3
  %6 = add nsw i32 %1, -4
  %7 = and i32 %6, -4
  %8 = zext i32 %7 to i64
  %9 = add nuw nsw i64 %8, 4
  %10 = getelementptr i8, i8* %0, i64 %9
  %11 = add nsw i32 %1, -4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %5
  %15 = bitcast i8* %0 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = mul i32 %16, 1540483477
  %18 = lshr i32 %17, 24
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, 1540483477
  %21 = mul i32 %2, 1540483477
  %22 = xor i32 %20, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 4
  %24 = add nsw i32 %1, -4
  br label %25

25:                                               ; preds = %14, %5
  %26 = phi i32 [ %1, %5 ], [ %24, %14 ]
  %27 = phi i32 [ %2, %5 ], [ %22, %14 ]
  %28 = phi i8* [ %0, %5 ], [ %23, %14 ]
  %29 = phi i32 [ undef, %5 ], [ %22, %14 ]
  %30 = icmp ult i32 %11, 4
  br i1 %30, label %55, label %31

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %53, %31 ], [ %26, %25 ]
  %33 = phi i32 [ %51, %31 ], [ %27, %25 ]
  %34 = phi i8* [ %52, %31 ], [ %28, %25 ]
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 %36, 1540483477
  %38 = lshr i32 %37, 24
  %39 = xor i32 %38, %37
  %40 = mul i32 %39, 1540483477
  %41 = mul i32 %33, 1540483477
  %42 = xor i32 %40, %41
  %43 = getelementptr inbounds i8, i8* %34, i64 4
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = mul i32 %45, 1540483477
  %47 = lshr i32 %46, 24
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 1540483477
  %50 = mul i32 %42, 1540483477
  %51 = xor i32 %49, %50
  %52 = getelementptr inbounds i8, i8* %34, i64 8
  %53 = add nsw i32 %32, -8
  %54 = icmp sgt i32 %53, 3
  br i1 %54, label %31, label %55

55:                                               ; preds = %31, %25
  %56 = phi i32 [ %29, %25 ], [ %51, %31 ]
  %57 = and i32 %6, 3
  br label %58

58:                                               ; preds = %55, %3
  %59 = phi i8* [ %0, %3 ], [ %10, %55 ]
  %60 = phi i32 [ %2, %3 ], [ %56, %55 ]
  %61 = phi i32 [ %1, %3 ], [ %57, %55 ]
  switch i32 %61, label %80 [
    i32 3, label %62
    i32 2, label %67
    i32 1, label %74
  ]

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %59, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 16
  br label %67

67:                                               ; preds = %58, %62
  %68 = phi i32 [ 0, %58 ], [ %66, %62 ]
  %69 = getelementptr inbounds i8, i8* %59, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %72, %68
  br label %74

74:                                               ; preds = %58, %67
  %75 = phi i32 [ 0, %58 ], [ %73, %67 ]
  %76 = load i8, i8* %59, align 1
  %77 = zext i8 %76 to i32
  %78 = xor i32 %75, %77
  %79 = mul i32 %78, 1540483477
  br label %80

80:                                               ; preds = %74, %58
  %81 = phi i32 [ 0, %58 ], [ %79, %74 ]
  %82 = lshr i32 %81, 24
  %83 = xor i32 %82, %81
  %84 = mul i32 %83, 1540483477
  %85 = mul i32 %60, 1540483477
  %86 = xor i32 %84, %85
  %87 = mul i32 %1, 1540483477
  %88 = lshr i32 %87, 24
  %89 = xor i32 %88, %87
  %90 = mul i32 %89, 1540483477
  %91 = mul i32 %86, 1540483477
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 13
  %94 = xor i32 %93, %92
  %95 = mul i32 %94, 1540483477
  %96 = lshr i32 %95, 15
  %97 = xor i32 %96, %95
  ret i32 %97
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z18MurmurHashNeutral2PKvij(i8* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = xor i32 %2, %1
  %5 = icmp sgt i32 %1, 3
  br i1 %5, label %6, label %44

6:                                                ; preds = %3
  %7 = add nsw i32 %1, -4
  %8 = and i32 %7, -4
  %9 = zext i32 %8 to i64
  %10 = add nuw nsw i64 %9, 4
  %11 = getelementptr i8, i8* %0, i64 %10
  br label %12

12:                                               ; preds = %6, %12
  %13 = phi i32 [ %40, %12 ], [ %1, %6 ]
  %14 = phi i8* [ %39, %12 ], [ %0, %6 ]
  %15 = phi i32 [ %38, %12 ], [ %4, %6 ]
  %16 = load i8, i8* %14, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %14, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %17
  %23 = getelementptr inbounds i8, i8* %14, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %22, %26
  %28 = getelementptr inbounds i8, i8* %14, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw i32 %30, 24
  %32 = or i32 %27, %31
  %33 = mul i32 %32, 1540483477
  %34 = lshr i32 %33, 24
  %35 = xor i32 %34, %33
  %36 = mul i32 %35, 1540483477
  %37 = mul i32 %15, 1540483477
  %38 = xor i32 %36, %37
  %39 = getelementptr inbounds i8, i8* %14, i64 4
  %40 = add nsw i32 %13, -4
  %41 = icmp sgt i32 %40, 3
  br i1 %41, label %12, label %42

42:                                               ; preds = %12
  %43 = and i32 %7, 3
  br label %44

44:                                               ; preds = %42, %3
  %45 = phi i32 [ %4, %3 ], [ %38, %42 ]
  %46 = phi i8* [ %0, %3 ], [ %11, %42 ]
  %47 = phi i32 [ %1, %3 ], [ %43, %42 ]
  switch i32 %47, label %67 [
    i32 3, label %48
    i32 2, label %54
    i32 1, label %61
  ]

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %46, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 16
  %53 = xor i32 %52, %45
  br label %54

54:                                               ; preds = %44, %48
  %55 = phi i32 [ %45, %44 ], [ %53, %48 ]
  %56 = getelementptr inbounds i8, i8* %46, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  %60 = xor i32 %59, %55
  br label %61

61:                                               ; preds = %44, %54
  %62 = phi i32 [ %45, %44 ], [ %60, %54 ]
  %63 = load i8, i8* %46, align 1
  %64 = zext i8 %63 to i32
  %65 = xor i32 %62, %64
  %66 = mul i32 %65, 1540483477
  br label %67

67:                                               ; preds = %61, %44
  %68 = phi i32 [ %45, %44 ], [ %66, %61 ]
  %69 = lshr i32 %68, 13
  %70 = xor i32 %69, %68
  %71 = mul i32 %70, 1540483477
  %72 = lshr i32 %71, 15
  %73 = xor i32 %72, %71
  ret i32 %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z18MurmurHashAligned2PKvij(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = xor i32 %2, %1
  %5 = ptrtoint i8* %0 to i64
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 3
  %8 = icmp ne i32 %7, 0
  %9 = icmp sgt i32 %1, 3
  %10 = and i1 %9, %8
  br i1 %10, label %38, label %11

11:                                               ; preds = %3
  br i1 %9, label %12, label %244

12:                                               ; preds = %11
  %13 = add nsw i32 %1, -4
  %14 = and i32 %13, -4
  %15 = zext i32 %14 to i64
  %16 = add nuw nsw i64 %15, 4
  %17 = getelementptr i8, i8* %0, i64 %16
  %18 = add nsw i32 %1, -4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %12
  %22 = bitcast i8* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = mul i32 %23, 1540483477
  %25 = lshr i32 %24, 24
  %26 = xor i32 %25, %24
  %27 = mul i32 %26, 1540483477
  %28 = mul i32 %4, 1540483477
  %29 = xor i32 %27, %28
  %30 = getelementptr inbounds i8, i8* %0, i64 4
  %31 = add nsw i32 %1, -4
  br label %32

32:                                               ; preds = %21, %12
  %33 = phi i32 [ %1, %12 ], [ %31, %21 ]
  %34 = phi i8* [ %0, %12 ], [ %30, %21 ]
  %35 = phi i32 [ %4, %12 ], [ %29, %21 ]
  %36 = phi i32 [ undef, %12 ], [ %29, %21 ]
  %37 = icmp ult i32 %18, 4
  br i1 %37, label %241, label %217

38:                                               ; preds = %3
  switch i32 %7, label %56 [
    i32 1, label %39
    i32 2, label %44
    i32 3, label %51
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds i8, i8* %0, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 16
  br label %44

44:                                               ; preds = %38, %39
  %45 = phi i32 [ 0, %38 ], [ %43, %39 ]
  %46 = getelementptr inbounds i8, i8* %0, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %49, %45
  br label %51

51:                                               ; preds = %38, %44
  %52 = phi i32 [ 0, %38 ], [ %50, %44 ]
  %53 = load i8, i8* %0, align 1
  %54 = zext i8 %53 to i32
  %55 = or i32 %52, %54
  br label %56

56:                                               ; preds = %51, %38
  %57 = phi i32 [ 0, %38 ], [ %55, %51 ]
  %58 = shl nuw nsw i32 %7, 3
  %59 = shl i32 %57, %58
  %60 = sub nuw nsw i32 4, %7
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %0, i64 %61
  %63 = sub nsw i32 %1, %60
  %64 = shl nuw nsw i32 %60, 3
  %65 = icmp sgt i32 %63, 3
  br i1 %65, label %66, label %135

66:                                               ; preds = %56
  %67 = add i32 %7, %1
  %68 = add i32 %67, -8
  %69 = and i32 %68, -4
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, %61
  %72 = add nuw nsw i64 %71, 4
  %73 = add i32 %7, %1
  %74 = add i32 %73, -8
  %75 = and i32 %74, 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %66
  %78 = bitcast i8* %62 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = lshr i32 %59, %58
  %81 = shl i32 %79, %64
  %82 = or i32 %81, %80
  %83 = mul i32 %82, 1540483477
  %84 = lshr i32 %83, 24
  %85 = xor i32 %84, %83
  %86 = mul i32 %85, 1540483477
  %87 = mul i32 %4, 1540483477
  %88 = xor i32 %86, %87
  %89 = getelementptr inbounds i8, i8* %62, i64 4
  %90 = add nsw i32 %63, -4
  br label %91

91:                                               ; preds = %77, %66
  %92 = phi i32 [ %63, %66 ], [ %90, %77 ]
  %93 = phi i8* [ %62, %66 ], [ %89, %77 ]
  %94 = phi i32 [ %59, %66 ], [ %79, %77 ]
  %95 = phi i32 [ %4, %66 ], [ %88, %77 ]
  %96 = phi i32 [ undef, %66 ], [ %79, %77 ]
  %97 = phi i32 [ undef, %66 ], [ %88, %77 ]
  %98 = icmp ult i32 %74, 4
  br i1 %98, label %130, label %99

99:                                               ; preds = %91, %99
  %100 = phi i32 [ %128, %99 ], [ %92, %91 ]
  %101 = phi i8* [ %127, %99 ], [ %93, %91 ]
  %102 = phi i32 [ %117, %99 ], [ %94, %91 ]
  %103 = phi i32 [ %126, %99 ], [ %95, %91 ]
  %104 = bitcast i8* %101 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %102, %58
  %107 = shl i32 %105, %64
  %108 = or i32 %107, %106
  %109 = mul i32 %108, 1540483477
  %110 = lshr i32 %109, 24
  %111 = xor i32 %110, %109
  %112 = mul i32 %111, 1540483477
  %113 = mul i32 %103, 1540483477
  %114 = xor i32 %112, %113
  %115 = getelementptr inbounds i8, i8* %101, i64 4
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = lshr i32 %105, %58
  %119 = shl i32 %117, %64
  %120 = or i32 %119, %118
  %121 = mul i32 %120, 1540483477
  %122 = lshr i32 %121, 24
  %123 = xor i32 %122, %121
  %124 = mul i32 %123, 1540483477
  %125 = mul i32 %114, 1540483477
  %126 = xor i32 %124, %125
  %127 = getelementptr inbounds i8, i8* %101, i64 8
  %128 = add nsw i32 %100, -8
  %129 = icmp sgt i32 %128, 3
  br i1 %129, label %99, label %130

130:                                              ; preds = %99, %91
  %131 = phi i32 [ %96, %91 ], [ %117, %99 ]
  %132 = phi i32 [ %97, %91 ], [ %126, %99 ]
  %133 = getelementptr i8, i8* %0, i64 %72
  %134 = and i32 %68, 3
  br label %135

135:                                              ; preds = %130, %56
  %136 = phi i32 [ %4, %56 ], [ %132, %130 ]
  %137 = phi i32 [ %59, %56 ], [ %131, %130 ]
  %138 = phi i8* [ %62, %56 ], [ %133, %130 ]
  %139 = phi i32 [ %63, %56 ], [ %134, %130 ]
  %140 = icmp slt i32 %139, %7
  br i1 %140, label %192, label %141

141:                                              ; preds = %135
  switch i32 %7, label %159 [
    i32 3, label %142
    i32 2, label %147
    i32 1, label %154
  ]

142:                                              ; preds = %141
  %143 = getelementptr inbounds i8, i8* %138, i64 2
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = shl nuw nsw i32 %145, 16
  br label %147

147:                                              ; preds = %141, %142
  %148 = phi i32 [ 0, %141 ], [ %146, %142 ]
  %149 = getelementptr inbounds i8, i8* %138, i64 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = shl nuw nsw i32 %151, 8
  %153 = or i32 %152, %148
  br label %154

154:                                              ; preds = %141, %147
  %155 = phi i32 [ 0, %141 ], [ %153, %147 ]
  %156 = load i8, i8* %138, align 1
  %157 = zext i8 %156 to i32
  %158 = or i32 %155, %157
  br label %159

159:                                              ; preds = %154, %141
  %160 = phi i32 [ 0, %141 ], [ %158, %154 ]
  %161 = lshr i32 %137, %58
  %162 = shl i32 %160, %64
  %163 = or i32 %162, %161
  %164 = mul i32 %163, 1540483477
  %165 = lshr i32 %164, 24
  %166 = xor i32 %165, %164
  %167 = mul i32 %166, 1540483477
  %168 = mul i32 %136, 1540483477
  %169 = xor i32 %167, %168
  %170 = zext i32 %7 to i64
  %171 = getelementptr inbounds i8, i8* %138, i64 %170
  %172 = sub nsw i32 %139, %7
  switch i32 %172, label %267 [
    i32 3, label %173
    i32 2, label %179
    i32 1, label %186
  ]

173:                                              ; preds = %159
  %174 = getelementptr inbounds i8, i8* %171, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 16
  %178 = xor i32 %177, %169
  br label %179

179:                                              ; preds = %159, %173
  %180 = phi i32 [ %169, %159 ], [ %178, %173 ]
  %181 = getelementptr inbounds i8, i8* %171, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = xor i32 %184, %180
  br label %186

186:                                              ; preds = %159, %179
  %187 = phi i32 [ %169, %159 ], [ %185, %179 ]
  %188 = load i8, i8* %171, align 1
  %189 = zext i8 %188 to i32
  %190 = xor i32 %187, %189
  %191 = mul i32 %190, 1540483477
  br label %267

192:                                              ; preds = %135
  switch i32 %139, label %267 [
    i32 3, label %193
    i32 2, label %198
    i32 1, label %205
    i32 0, label %210
  ]

193:                                              ; preds = %192
  %194 = getelementptr inbounds i8, i8* %138, i64 2
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 16
  br label %198

198:                                              ; preds = %192, %193
  %199 = phi i32 [ 0, %192 ], [ %197, %193 ]
  %200 = getelementptr inbounds i8, i8* %138, i64 1
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = shl nuw nsw i32 %202, 8
  %204 = or i32 %203, %199
  br label %205

205:                                              ; preds = %192, %198
  %206 = phi i32 [ 0, %192 ], [ %204, %198 ]
  %207 = load i8, i8* %138, align 1
  %208 = zext i8 %207 to i32
  %209 = or i32 %206, %208
  br label %210

210:                                              ; preds = %192, %205
  %211 = phi i32 [ %139, %192 ], [ %209, %205 ]
  %212 = lshr i32 %137, %58
  %213 = shl i32 %211, %64
  %214 = or i32 %213, %212
  %215 = xor i32 %214, %136
  %216 = mul i32 %215, 1540483477
  br label %267

217:                                              ; preds = %32, %217
  %218 = phi i32 [ %239, %217 ], [ %33, %32 ]
  %219 = phi i8* [ %238, %217 ], [ %34, %32 ]
  %220 = phi i32 [ %237, %217 ], [ %35, %32 ]
  %221 = bitcast i8* %219 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = mul i32 %222, 1540483477
  %224 = lshr i32 %223, 24
  %225 = xor i32 %224, %223
  %226 = mul i32 %225, 1540483477
  %227 = mul i32 %220, 1540483477
  %228 = xor i32 %226, %227
  %229 = getelementptr inbounds i8, i8* %219, i64 4
  %230 = bitcast i8* %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 %231, 1540483477
  %233 = lshr i32 %232, 24
  %234 = xor i32 %233, %232
  %235 = mul i32 %234, 1540483477
  %236 = mul i32 %228, 1540483477
  %237 = xor i32 %235, %236
  %238 = getelementptr inbounds i8, i8* %219, i64 8
  %239 = add nsw i32 %218, -8
  %240 = icmp sgt i32 %239, 3
  br i1 %240, label %217, label %241

241:                                              ; preds = %217, %32
  %242 = phi i32 [ %36, %32 ], [ %237, %217 ]
  %243 = and i32 %13, 3
  br label %244

244:                                              ; preds = %241, %11
  %245 = phi i32 [ %4, %11 ], [ %242, %241 ]
  %246 = phi i8* [ %0, %11 ], [ %17, %241 ]
  %247 = phi i32 [ %1, %11 ], [ %243, %241 ]
  switch i32 %247, label %267 [
    i32 3, label %248
    i32 2, label %254
    i32 1, label %261
  ]

248:                                              ; preds = %244
  %249 = getelementptr inbounds i8, i8* %246, i64 2
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = shl nuw nsw i32 %251, 16
  %253 = xor i32 %252, %245
  br label %254

254:                                              ; preds = %244, %248
  %255 = phi i32 [ %245, %244 ], [ %253, %248 ]
  %256 = getelementptr inbounds i8, i8* %246, i64 1
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = shl nuw nsw i32 %258, 8
  %260 = xor i32 %259, %255
  br label %261

261:                                              ; preds = %244, %254
  %262 = phi i32 [ %245, %244 ], [ %260, %254 ]
  %263 = load i8, i8* %246, align 1
  %264 = zext i8 %263 to i32
  %265 = xor i32 %262, %264
  %266 = mul i32 %265, 1540483477
  br label %267

267:                                              ; preds = %244, %261, %210, %192, %186, %159
  %268 = phi i32 [ %136, %192 ], [ %216, %210 ], [ %169, %159 ], [ %191, %186 ], [ %245, %244 ], [ %266, %261 ]
  %269 = lshr i32 %268, 13
  %270 = xor i32 %269, %268
  %271 = mul i32 %270, 1540483477
  %272 = lshr i32 %271, 15
  %273 = xor i32 %272, %271
  ret i32 %273
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
