; ModuleID = '../../base/third_party/xdg_user_dirs/xdg_user_dir_lookup.cc'
source_filename = "../../base/third_party/xdg_user_dirs/xdg_user_dir_lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"DESKTOP\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"/Desktop\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"XDG_CONFIG_HOME\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"/.config/user-dirs.dirs\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"/user-dirs.dirs\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"XDG_\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"_DIR\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"$HOME/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z19xdg_user_dir_lookupPKc(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [512 x i8], align 16
  %3 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %3) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 512, i1 false) #7
  %4 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %145, label %6

6:                                                ; preds = %1
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = load i8, i8* %7, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %9, %6
  %13 = tail call i64 @strlen(i8* nonnull %4) #8
  %14 = add i64 %13, 24
  %15 = tail call noalias i8* @malloc(i64 %14) #7
  %16 = icmp eq i8* %15, null
  br i1 %16, label %145, label %17

17:                                               ; preds = %12
  %18 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %15, i1 false, i1 true, i1 false) #7
  %19 = tail call i8* @__strcpy_chk(i8* nonnull %15, i8* nonnull %4, i64 %18) #7
  %20 = tail call i64 @strlen(i8* nonnull %15) #7
  %21 = getelementptr i8, i8* %15, i64 %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 24, i1 false) #7
  br label %32

22:                                               ; preds = %9
  %23 = tail call i64 @strlen(i8* nonnull %7) #8
  %24 = add i64 %23, 16
  %25 = tail call noalias i8* @malloc(i64 %24) #7
  %26 = icmp eq i8* %25, null
  br i1 %26, label %145, label %27

27:                                               ; preds = %22
  %28 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %25, i1 false, i1 true, i1 false) #7
  %29 = tail call i8* @__strcpy_chk(i8* nonnull %25, i8* nonnull %7, i64 %28) #7
  %30 = tail call i64 @strlen(i8* nonnull %25) #7
  %31 = getelementptr i8, i8* %25, i64 %30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 16, i1 false) #7
  br label %32

32:                                               ; preds = %27, %17
  %33 = phi i8* [ %15, %17 ], [ %25, %27 ]
  %34 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  tail call void @free(i8* nonnull %33) #7
  %35 = icmp eq %struct._IO_FILE* %34, null
  br i1 %35, label %145, label %36

36:                                               ; preds = %32
  %37 = call i8* @fgets(i8* nonnull %3, i32 512, %struct._IO_FILE* nonnull %34) #7
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = call i32 @fclose(%struct._IO_FILE* nonnull %34) #7
  br label %145

41:                                               ; preds = %36, %135
  %42 = phi i8* [ %117, %135 ], [ null, %36 ]
  br label %43

43:                                               ; preds = %64, %41
  %44 = call i64 @strlen(i8* nonnull %3) #8
  %45 = trunc i64 %44 to i32
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = shl i64 %44, 32
  %49 = add i64 %48, -4294967296
  %50 = ashr exact i64 %49, 32
  %51 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 10
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  store i8 0, i8* %51, align 1
  br label %55

55:                                               ; preds = %54, %47, %43
  br label %56

56:                                               ; preds = %55, %59
  %57 = phi i8* [ %60, %59 ], [ %3, %55 ]
  %58 = load i8, i8* %57, align 1
  switch i8 %58, label %61 [
    i8 32, label %59
    i8 9, label %59
  ]

59:                                               ; preds = %56, %56
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  br label %56

61:                                               ; preds = %56
  %62 = call i32 @strncmp(i8* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %78, %83, %92, %72, %67, %61
  %65 = call i8* @fgets(i8* nonnull %3, i32 512, %struct._IO_FILE* nonnull %34) #7
  %66 = icmp eq i8* %65, null
  br i1 %66, label %140, label %43

67:                                               ; preds = %61
  %68 = getelementptr inbounds i8, i8* %57, i64 4
  %69 = call i64 @strlen(i8* %0) #8
  %70 = call i32 @strncmp(i8* %68, i8* %0, i64 %69) #8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %64

72:                                               ; preds = %67
  %73 = getelementptr inbounds i8, i8* %68, i64 %69
  %74 = call i32 @strncmp(i8* %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %64

76:                                               ; preds = %72
  %77 = getelementptr inbounds i8, i8* %73, i64 4
  br label %78

78:                                               ; preds = %81, %76
  %79 = phi i8* [ %77, %76 ], [ %82, %81 ]
  %80 = load i8, i8* %79, align 1
  switch i8 %80, label %64 [
    i8 32, label %81
    i8 9, label %81
    i8 61, label %83
  ]

81:                                               ; preds = %78, %78
  %82 = getelementptr inbounds i8, i8* %79, i64 1
  br label %78

83:                                               ; preds = %78, %87
  %84 = phi i8* [ %85, %87 ], [ %79, %78 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = load i8, i8* %85, align 1
  switch i8 %86, label %64 [
    i8 32, label %87
    i8 9, label %87
    i8 34, label %88
  ]

87:                                               ; preds = %83, %83
  br label %83

88:                                               ; preds = %83
  %89 = getelementptr inbounds i8, i8* %84, i64 2
  %90 = call i32 @strncmp(i8* %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %89, align 1
  %94 = icmp eq i8 %93, 47
  br i1 %94, label %109, label %64

95:                                               ; preds = %88
  %96 = getelementptr inbounds i8, i8* %84, i64 8
  %97 = call i64 @strlen(i8* nonnull %4) #8
  %98 = call i64 @strlen(i8* %96) #8
  %99 = add i64 %97, 2
  %100 = add i64 %99, %98
  %101 = call noalias i8* @malloc(i64 %100) #7
  %102 = icmp eq i8* %101, null
  br i1 %102, label %138, label %103

103:                                              ; preds = %95
  %104 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %101, i1 false, i1 true, i1 false) #7
  %105 = call i8* @__strcpy_chk(i8* nonnull %101, i8* nonnull %4, i64 %104) #7
  %106 = call i64 @strlen(i8* nonnull %101) #7
  %107 = getelementptr i8, i8* %101, i64 %106
  %108 = bitcast i8* %107 to i16*
  store i16 47, i16* %108, align 1
  br label %115

109:                                              ; preds = %92
  %110 = call i64 @strlen(i8* %89) #8
  %111 = add i64 %110, 1
  %112 = call noalias i8* @malloc(i64 %111) #7
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %109
  store i8 0, i8* %112, align 1
  br label %115

115:                                              ; preds = %114, %103
  %116 = phi i8* [ %96, %103 ], [ %89, %114 ]
  %117 = phi i8* [ %101, %103 ], [ %112, %114 ]
  %118 = call i64 @strlen(i8* nonnull %117) #8
  %119 = getelementptr inbounds i8, i8* %117, i64 %118
  br label %120

120:                                              ; preds = %130, %115
  %121 = phi i8* [ %116, %115 ], [ %133, %130 ]
  %122 = phi i8* [ %119, %115 ], [ %134, %130 ]
  %123 = load i8, i8* %121, align 1
  switch i8 %123, label %130 [
    i8 0, label %135
    i8 34, label %135
    i8 92, label %124
  ]

124:                                              ; preds = %120
  %125 = getelementptr inbounds i8, i8* %121, i64 1
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 0
  %128 = select i1 %127, i8* %121, i8* %125
  %129 = load i8, i8* %128, align 1
  br label %130

130:                                              ; preds = %124, %120
  %131 = phi i8 [ %123, %120 ], [ %129, %124 ]
  %132 = phi i8* [ %121, %120 ], [ %128, %124 ]
  %133 = getelementptr inbounds i8, i8* %132, i64 1
  %134 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 %131, i8* %122, align 1
  br label %120

135:                                              ; preds = %120, %120
  store i8 0, i8* %122, align 1
  %136 = call i8* @fgets(i8* nonnull %3, i32 512, %struct._IO_FILE* nonnull %34) #7
  %137 = icmp eq i8* %136, null
  br i1 %137, label %140, label %41

138:                                              ; preds = %109, %95
  %139 = call i32 @fclose(%struct._IO_FILE* nonnull %34) #7
  br label %145

140:                                              ; preds = %135, %64
  %141 = phi i8* [ %42, %64 ], [ %117, %135 ]
  %142 = call i32 @fclose(%struct._IO_FILE* nonnull %34) #7
  %143 = icmp eq i8* %141, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #7
  br label %165

145:                                              ; preds = %1, %12, %22, %32, %39, %138, %140
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #7
  %146 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  %147 = icmp eq i8* %146, null
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = call noalias i8* @strdup(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %165

150:                                              ; preds = %145
  %151 = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %163

153:                                              ; preds = %150
  %154 = call i64 @strlen(i8* nonnull %146) #8
  %155 = add i64 %154, 9
  %156 = call noalias i8* @malloc(i64 %155) #7
  %157 = icmp eq i8* %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %153
  %159 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %156, i1 false, i1 true, i1 false) #7
  %160 = call i8* @__strcpy_chk(i8* nonnull %156, i8* nonnull %146, i64 %159) #7
  %161 = call i64 @strlen(i8* nonnull %156)
  %162 = getelementptr i8, i8* %156, i64 %161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 9, i1 false)
  br label %165

163:                                              ; preds = %150
  %164 = call noalias i8* @strdup(i8* nonnull %146) #7
  br label %165

165:                                              ; preds = %144, %153, %163, %158, %148
  %166 = phi i8* [ %149, %148 ], [ %156, %158 ], [ %164, %163 ], [ %141, %144 ], [ null, %153 ]
  ret i8* %166
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
