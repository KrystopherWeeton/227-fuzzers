; ModuleID = '../../third_party/blink/renderer/core/page/slot_scoped_traversal.cc'
source_filename = "../../third_party/blink/renderer/core/page/slot_scoped_traversal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector", %"class.blink::HeapVector", i8, %"class.blink::HeapLinkedHashSet" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.32", %"class.blink::Member.34", %"class.blink::Member.0", %"class.blink::Member.36", %"class.blink::Member.36", %"class.blink::Member.59", %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.68", %"class.blink::HeapVector.70" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.86", %"class.WTF::Vector.86", i8, i32, %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.107", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.110", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.116", %"class.blink::Member.118", %"class.blink::Member.76", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.121", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.52", %"class.blink::Member.50", %"class.blink::Member.136", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::UserActionElementSet", %"class.blink::Member.145", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.152", i16, i8, %"class.blink::Member.159", %"class.blink::Member.161", %"class.blink::Member.163", %"class.blink::Member.165", %"class.blink::TextLinkColors", %"class.blink::Member.167", i8, [7 x i8], %"class.blink::HeapHashMap.169", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.50", %"class.WTF::Vector.176", %"class.blink::Member.181", %"class.blink::Member.183", i8, %"class.blink::Member.50", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.185", %"class.blink::HeapVector.187", %"class.std::__1::unique_ptr.195", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.201", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.213", %"class.WTF::Vector.215", i8, i8, %"class.std::__1::unique_ptr.220", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.52", %"class.blink::HeapVector.226", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.234", i8, i32, %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.240", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.242", %"class.WTF::HashMap.244", %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.34", %"class.blink::Member.34", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.257", i8, i32, %"class.blink::Member.264", %"class.blink::Member.266", i32, %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", %"class.std::__1::unique_ptr.274", i64, %"class.std::__1::unique_ptr.280", i32, i32, %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::Member.290", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.292", %"class.WTF::Vector.294", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.299", %"class.blink::Member.306", %"class.std::__1::unique_ptr.308", %"class.blink::Member.314", i8, i8, %"class.WTF::String", %"class.blink::Member.316", i8, [7 x i8], %"class.blink::HeapHashMap.318", %"class.blink::HeapObserverSet", %"class.blink::Member.332", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.334", i32, i8, i8, %"class.blink::WeakMember.336", %"class.blink::Member.337" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.79" }
%"class.blink::HeapHashMap.79" = type { %"class.WTF::HashMap.82" }
%"class.WTF::HashMap.82" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"struct.WTF::KeyValuePair.85"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.85" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i32 }
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.138" }
%"class.blink::HeapHashMap.138" = type { %"class.WTF::HashMap.141" }
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.144" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.149" }
%"class.WTF::HashTable.149" = type <{ %"class.blink::WeakMember.151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.151" = type opaque
%"class.blink::HeapHashSet.152" = type { %"class.WTF::HashSet.155" }
%"class.WTF::HashSet.155" = type { %"class.WTF::HashTable.156" }
%"class.WTF::HashTable.156" = type <{ %"class.blink::WeakMember.158"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.158" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.163" = type { %"class.blink::MemberBase.164" }
%"class.blink::MemberBase.164" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.165" = type { %"class.blink::MemberBase.166" }
%"class.blink::MemberBase.166" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.169" = type { %"class.WTF::HashMap.172" }
%"class.WTF::HashMap.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"struct.WTF::KeyValuePair.175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.175" = type opaque
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.187" = type { %"class.WTF::Vector.190" }
%"class.WTF::Vector.190" = type { %"class.WTF::VectorBuffer.191" }
%"class.WTF::VectorBuffer.191" = type { %"class.WTF::VectorBufferBase.192" }
%"class.WTF::VectorBufferBase.192" = type { %"class.blink::Member.193"*, i32, i32 }
%"class.blink::Member.193" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.201" = type { %"class.WTF::HashSet.204" }
%"class.WTF::HashSet.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"class.blink::WeakMember.207"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.207" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.208", i32, [4 x i8] }>
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.52" = type { %"class.WTF::Vector.55" }
%"class.WTF::Vector.55" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { %"class.blink::Member.50"*, i32, i32 }
%"class.blink::HeapVector.226" = type { %"class.WTF::Vector.229" }
%"class.WTF::Vector.229" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231" }
%"class.WTF::VectorBufferBase.231" = type { %"class.blink::Member.232"*, i32, i32 }
%"class.blink::Member.232" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.34" }
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.244" = type { %"class.WTF::HashTable.245" }
%"class.WTF::HashTable.245" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.127, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.127 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.128" }>
%"class.base::RefCountedThreadSafe.128" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.130", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.130" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.131" }
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.35" }
%"class.blink::HeapHashSet.257" = type { %"class.WTF::HashSet.260" }
%"class.WTF::HashSet.260" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"class.blink::Member.263"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.263" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.294" = type { %"class.WTF::VectorBuffer.295" }
%"class.WTF::VectorBuffer.295" = type { %"class.WTF::VectorBufferBase.296" }
%"class.WTF::VectorBufferBase.296" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.299" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type opaque
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.318" = type { %"class.WTF::HashMap.321" }
%"class.WTF::HashMap.321" = type { %"class.WTF::HashTable.322" }
%"class.WTF::HashTable.322" = type <{ %"struct.WTF::KeyValuePair.324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.324" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.325" }
%"class.blink::HeapHashSet.325" = type { %"class.WTF::HashSet.328" }
%"class.WTF::HashSet.328" = type { %"class.WTF::HashTable.329" }
%"class.WTF::HashTable.329" = type <{ %"class.blink::WeakMember.331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.331" = type opaque
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.34", %"class.blink::HeapHashSet.341", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.348", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.341" = type { %"class.WTF::HashSet.344" }
%"class.WTF::HashSet.344" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"class.blink::Member.347"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.347" = type opaque
%"class.blink::HeapTaskRunnerTimer.348" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.349", { i64, i64 } }
%"class.blink::WeakMember.349" = type { %"class.blink::MemberBase.335" }
%"class.blink::WeakMember.336" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.42" }
%"class.WTF::HashMap.42" = type { %"class.WTF::HashTable.43" }
%"class.WTF::HashTable.43" = type <{ %"struct.WTF::KeyValuePair.45"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.45" = type { %"class.WTF::AtomicString", %"class.blink::Member.46" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.50", i32, %"class.blink::HeapVector.52" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.65" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::HeapHashMap.67"* }
%"class.blink::HeapHashMap.67" = type opaque
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.70" = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.21" }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.28", i32, i32 }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30" }
%"class.WTF::VectorBufferBase.30" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLSlotElement"* @_ZN5blink19SlotScopedTraversal18FindScopeOwnerSlotERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1, %11
  %4 = phi %"class.blink::Element"* [ %16, %11 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  %7 = icmp eq %"class.blink::HTMLSlotElement"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #4
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::Element"*
  br i1 %15, label %3, label %21

17:                                               ; preds = %3
  %18 = icmp eq %"class.blink::Element"* %4, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  br label %21

21:                                               ; preds = %11, %8, %1, %17, %19
  %22 = phi %"class.blink::HTMLSlotElement"* [ %20, %19 ], [ null, %17 ], [ null, %1 ], [ null, %8 ], [ null, %11 ]
  ret %"class.blink::HTMLSlotElement"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19SlotScopedTraversal38NearestInclusiveAncestorAssignedToSlotERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1, %11
  %4 = phi %"class.blink::Element"* [ %16, %11 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  %7 = icmp eq %"class.blink::HTMLSlotElement"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #4
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::Element"*
  br i1 %15, label %3, label %17

17:                                               ; preds = %11, %8, %3, %1
  %18 = phi %"class.blink::Element"* [ null, %1 ], [ null, %8 ], [ null, %11 ], [ %4, %3 ]
  ret %"class.blink::Element"* %18
}

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19SlotScopedTraversal4NextERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1, %11
  %4 = phi %"class.blink::Element"* [ %16, %11 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  %7 = icmp eq %"class.blink::HTMLSlotElement"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #4
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::Element"*
  br i1 %15, label %3, label %17

17:                                               ; preds = %3, %8, %11, %1
  %18 = phi %"class.blink::Element"* [ null, %1 ], [ %4, %3 ], [ null, %11 ], [ null, %8 ]
  %19 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* %0) #4
  %20 = icmp eq %"class.blink::ShadowRoot"* %19, null
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %21, %31
  %26 = phi %"class.blink::Node"* [ %33, %31 ], [ %23, %21 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %63, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %25

35:                                               ; preds = %31, %21, %17
  %36 = icmp eq %"class.blink::Element"* %18, %0
  br i1 %36, label %66, label %37

37:                                               ; preds = %35, %60
  %38 = phi %"class.blink::Element"* [ %61, %60 ], [ %0, %35 ]
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %38, i64 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %45, %37
  %41 = phi %"class.blink::Node"* [ %43, %45 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %63, label %40

50:                                               ; preds = %40
  %51 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %39) #4
  %52 = icmp eq %"class.blink::ContainerNode"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %51, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 12
  %57 = icmp eq i32 %56, 0
  %58 = bitcast %"class.blink::ContainerNode"* %51 to %"class.blink::Element"*
  %59 = select i1 %57, %"class.blink::Element"* %58, %"class.blink::Element"* null
  br label %60

60:                                               ; preds = %53, %50
  %61 = phi %"class.blink::Element"* [ %59, %53 ], [ null, %50 ]
  %62 = icmp eq %"class.blink::Element"* %61, %18
  br i1 %62, label %66, label %37

63:                                               ; preds = %25, %45
  %64 = phi %"class.blink::Node"* [ %43, %45 ], [ %26, %25 ]
  %65 = bitcast %"class.blink::Node"* %64 to %"class.blink::Element"*
  br label %113

66:                                               ; preds = %60, %35
  %67 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %18, i64 0, i32 0, i32 0
  %68 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %67) #4
  %69 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* %68) #4
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::Member"*, %"class.blink::Member"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 %75
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %66, %83
  %79 = phi %"class.blink::Member"* [ %84, %83 ], [ %72, %66 ]
  %80 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = icmp eq %"class.blink::Node"* %81, %67
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %79, i64 1
  %85 = icmp ult %"class.blink::Member"* %84, %76
  br i1 %85, label %78, label %93

86:                                               ; preds = %78
  %87 = ptrtoint %"class.blink::Member"* %79 to i64
  %88 = ptrtoint %"class.blink::Member"* %72 to i64
  %89 = sub i64 %87, %88
  %90 = lshr exact i64 %89, 3
  %91 = trunc i64 %90 to i32
  %92 = add i32 %91, 1
  br label %93

93:                                               ; preds = %83, %66, %86
  %94 = phi i32 [ %92, %86 ], [ 0, %66 ], [ 0, %83 ]
  %95 = icmp ult i32 %94, %74
  br i1 %95, label %96, label %113

96:                                               ; preds = %93, %107
  %97 = phi i32 [ %109, %107 ], [ %94, %93 ]
  %98 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.21"* %70, i32 %97) #4
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %100, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %102, %96
  %108 = load i32, i32* %73, align 4
  %109 = add i32 %97, 1
  %110 = icmp ult i32 %109, %108
  br i1 %110, label %96, label %113

111:                                              ; preds = %102
  %112 = bitcast %"class.blink::Node"* %100 to %"class.blink::Element"*
  br label %113

113:                                              ; preds = %107, %93, %111, %63
  %114 = phi %"class.blink::Element"* [ %65, %63 ], [ %112, %111 ], [ null, %93 ], [ null, %107 ]
  ret %"class.blink::Element"* %114
}

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19SlotScopedTraversal8PreviousERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1, %11
  %4 = phi %"class.blink::Element"* [ %16, %11 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  %7 = icmp eq %"class.blink::HTMLSlotElement"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #4
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::Element"*
  br i1 %15, label %3, label %17

17:                                               ; preds = %3, %8, %11, %1
  %18 = phi %"class.blink::Element"* [ null, %1 ], [ %4, %3 ], [ null, %11 ], [ null, %8 ]
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %18, i64 0, i32 0, i32 0
  %21 = icmp eq %"class.blink::Element"* %18, %0
  br i1 %21, label %67, label %22

22:                                               ; preds = %17, %27
  %23 = phi %"class.blink::Node"* [ %25, %27 ], [ %19, %17 ]
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 4, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %57, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %22

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  %34 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %33) #4
  %35 = icmp eq %"class.blink::ShadowRoot"* %34, null
  br i1 %35, label %40, label %137

36:                                               ; preds = %47
  %37 = bitcast %"class.blink::Node"* %48 to %"class.blink::Element"*
  %38 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* %37) #4
  %39 = icmp eq %"class.blink::ShadowRoot"* %38, null
  br i1 %39, label %40, label %135

40:                                               ; preds = %32, %36
  %41 = phi %"class.blink::Element"* [ %37, %36 ], [ %33, %32 ]
  %42 = phi %"class.blink::Node"* [ %48, %36 ], [ %25, %32 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 0, i32 0, i32 1
  %44 = bitcast %"class.blink::TraceWrapperV8Reference"* %43 to %"class.blink::Node"**
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %137, label %47

47:                                               ; preds = %40, %53
  %48 = phi %"class.blink::Node"* [ %55, %53 ], [ %45, %40 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 12
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %36, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 4, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %137, label %47

57:                                               ; preds = %22
  %58 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %19) #4
  %59 = icmp eq %"class.blink::ContainerNode"* %58, null
  br i1 %59, label %137, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %58, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 12
  %64 = icmp eq i32 %63, 0
  %65 = bitcast %"class.blink::ContainerNode"* %58 to %"class.blink::Element"*
  %66 = select i1 %64, %"class.blink::Element"* %65, %"class.blink::Element"* null
  br label %137

67:                                               ; preds = %17
  %68 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %20) #4
  %69 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* %68) #4
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::Member"*, %"class.blink::Member"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 %75
  br label %77

77:                                               ; preds = %80, %67
  %78 = phi %"class.blink::Member"* [ %76, %67 ], [ %81, %80 ]
  %79 = icmp ugt %"class.blink::Member"* %78, %72
  br i1 %79, label %80, label %92

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %78, i64 -1
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = icmp eq %"class.blink::Node"* %83, %20
  br i1 %84, label %85, label %77

85:                                               ; preds = %80
  %86 = ptrtoint %"class.blink::Member"* %81 to i64
  %87 = ptrtoint %"class.blink::Member"* %72 to i64
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 3
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %137, label %92

92:                                               ; preds = %77, %85
  %93 = phi i32 [ %90, %85 ], [ -1, %77 ]
  br label %94

94:                                               ; preds = %92, %131
  %95 = phi i32 [ %96, %131 ], [ %93, %92 ]
  %96 = add i32 %95, -1
  %97 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.21"* %70, i32 %96) #4
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %131, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 12
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %131

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::Node"* %99 to %"class.blink::Element"*
  %108 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %107) #4
  %109 = icmp eq %"class.blink::ShadowRoot"* %108, null
  br i1 %109, label %114, label %137

110:                                              ; preds = %121
  %111 = bitcast %"class.blink::Node"* %122 to %"class.blink::Element"*
  %112 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* %111) #4
  %113 = icmp eq %"class.blink::ShadowRoot"* %112, null
  br i1 %113, label %114, label %133

114:                                              ; preds = %106, %110
  %115 = phi %"class.blink::Element"* [ %111, %110 ], [ %107, %106 ]
  %116 = phi %"class.blink::Node"* [ %122, %110 ], [ %99, %106 ]
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1, i32 0, i32 0, i32 1
  %118 = bitcast %"class.blink::TraceWrapperV8Reference"* %117 to %"class.blink::Node"**
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %137, label %121

121:                                              ; preds = %114, %127
  %122 = phi %"class.blink::Node"* [ %129, %127 ], [ %119, %114 ]
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 12
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %110, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 4, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %137, label %121

131:                                              ; preds = %101, %94
  %132 = icmp eq i32 %96, 0
  br i1 %132, label %137, label %94

133:                                              ; preds = %110
  %134 = bitcast %"class.blink::Node"* %122 to %"class.blink::Element"*
  br label %137

135:                                              ; preds = %36
  %136 = bitcast %"class.blink::Node"* %48 to %"class.blink::Element"*
  br label %137

137:                                              ; preds = %40, %53, %131, %114, %127, %135, %133, %85, %106, %60, %57, %32
  %138 = phi %"class.blink::Element"* [ %66, %60 ], [ null, %57 ], [ %33, %32 ], [ %107, %106 ], [ null, %85 ], [ %134, %133 ], [ %136, %135 ], [ %115, %127 ], [ %115, %114 ], [ null, %131 ], [ %41, %53 ], [ %41, %40 ]
  ret %"class.blink::Element"* %138
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19SlotScopedTraversal19FirstAssignedToSlotERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* %0) #4
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %1, %22
  %11 = phi %"class.blink::Member"* [ %23, %22 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::Node"* %13 to %"class.blink::Element"*
  br label %25

22:                                               ; preds = %10, %15
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 1
  %24 = icmp eq %"class.blink::Member"* %23, %8
  br i1 %24, label %25, label %10

25:                                               ; preds = %22, %1, %20
  %26 = phi %"class.blink::Element"* [ %21, %20 ], [ null, %1 ], [ null, %22 ]
  ret %"class.blink::Element"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink19SlotScopedTraversal18LastAssignedToSlotERNS_15HTMLSlotElementE(%"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* %0) #4
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %51, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = zext i32 %4 to i64
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %8
  br label %11

11:                                               ; preds = %6, %47
  %12 = phi %"class.blink::Member"* [ %10, %6 ], [ %13, %47 ]
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 -1
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %47, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %47

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %24 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* nonnull %23) #4
  %25 = icmp eq %"class.blink::ShadowRoot"* %24, null
  br i1 %25, label %30, label %51

26:                                               ; preds = %37
  %27 = bitcast %"class.blink::Node"* %38 to %"class.blink::Element"*
  %28 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* %27) #4
  %29 = icmp eq %"class.blink::ShadowRoot"* %28, null
  br i1 %29, label %30, label %49

30:                                               ; preds = %22, %26
  %31 = phi %"class.blink::Element"* [ %27, %26 ], [ %23, %22 ]
  %32 = phi %"class.blink::Node"* [ %38, %26 ], [ %15, %22 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.blink::TraceWrapperV8Reference"* %33 to %"class.blink::Node"**
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %30, %43
  %38 = phi %"class.blink::Node"* [ %45, %43 ], [ %35, %30 ]
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 12
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %26, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 4, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %51, label %37

47:                                               ; preds = %17, %11
  %48 = icmp eq %"class.blink::Member"* %13, %9
  br i1 %48, label %51, label %11

49:                                               ; preds = %26
  %50 = bitcast %"class.blink::Node"* %38 to %"class.blink::Element"*
  br label %51

51:                                               ; preds = %47, %30, %43, %49, %1, %22
  %52 = phi %"class.blink::Element"* [ %23, %22 ], [ null, %1 ], [ %50, %49 ], [ %31, %43 ], [ %31, %30 ], [ null, %47 ]
  ret %"class.blink::Element"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19SlotScopedTraversal12IsSlotScopedERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::Element"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1, %11
  %4 = phi %"class.blink::Element"* [ %16, %11 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %5) #4
  %7 = icmp eq %"class.blink::HTMLSlotElement"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #4
  %10 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"class.blink::ContainerNode"* %9 to %"class.blink::Element"*
  br i1 %15, label %3, label %17

17:                                               ; preds = %3, %8, %11, %1
  %18 = phi %"class.blink::Element"* [ null, %1 ], [ %4, %3 ], [ null, %11 ], [ null, %8 ]
  %19 = icmp ne %"class.blink::Element"* %18, null
  ret i1 %19
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #4
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #4
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #4
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  %23 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
