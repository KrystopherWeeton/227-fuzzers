; ModuleID = '../../components/subresource_filter/content/browser/content_activation_list_utils.cc'
source_filename = "../../components/subresource_filter/content/browser/content_activation_list_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.safe_browsing::ThreatMetadata" = type { i32, %"class.std::__1::set", %"class.base::flat_map", %"class.std::__1::basic_string" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN18subresource_filter24kFilterAdsOnAbusiveSitesE = external global %"struct.base::Feature", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN18subresource_filter31GetListForThreatTypeAndMetadataEN13safe_browsing12SBThreatTypeERKNS0_14ThreatMetadataEPb(i32, %"struct.safe_browsing::ThreatMetadata"* nocapture readonly dereferenceable(80), i8* nocapture) local_unnamed_addr #0 {
  switch i32 %0, label %119 [
    i32 2, label %4
    i32 11, label %9
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"struct.safe_browsing::ThreatMetadata", %"struct.safe_browsing::ThreatMetadata"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  %8 = select i1 %7, i32 1, i32 2
  br label %119

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.safe_browsing::ThreatMetadata", %"struct.safe_browsing::ThreatMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.safe_browsing::ThreatMetadata", %"struct.safe_browsing::ThreatMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  %18 = inttoptr i64 %14 to %"struct.std::__1::pair"*
  br i1 %17, label %37, label %19

19:                                               ; preds = %9
  %20 = ashr exact i64 %16, 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi %"struct.std::__1::pair"* [ %11, %19 ], [ %33, %21 ]
  %23 = phi i64 [ %20, %19 ], [ %32, %21 ]
  %24 = lshr i64 %23, 1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %24
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 1
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %30 = xor i64 %24, -1
  %31 = add i64 %23, %30
  %32 = select i1 %28, i64 %31, i64 %24
  %33 = select i1 %28, %"struct.std::__1::pair"* %29, %"struct.std::__1::pair"* %22
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %21

35:                                               ; preds = %21
  %36 = ptrtoint %"struct.std::__1::pair"* %33 to i64
  br label %37

37:                                               ; preds = %35, %9
  %38 = phi i64 [ %36, %35 ], [ %15, %9 ]
  %39 = phi %"struct.std::__1::pair"* [ %33, %35 ], [ %11, %9 ]
  %40 = icmp eq %"struct.std::__1::pair"* %39, %18
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 1
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 1
  %47 = ptrtoint %"struct.std::__1::pair"* %46 to i64
  br label %48

48:                                               ; preds = %45, %41, %37
  %49 = phi i64 [ %47, %45 ], [ %38, %37 ], [ %38, %41 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::pair"*
  %51 = icmp eq %"struct.std::__1::pair"* %39, %50
  %52 = select i1 %51, %"struct.std::__1::pair"* %18, %"struct.std::__1::pair"* %39
  %53 = icmp ne %"struct.std::__1::pair"* %52, %18
  br i1 %17, label %72, label %54

54:                                               ; preds = %48
  %55 = ashr exact i64 %16, 3
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi %"struct.std::__1::pair"* [ %11, %54 ], [ %68, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %67, %56 ]
  %59 = lshr i64 %58, 1
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 %59
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 1
  %65 = xor i64 %59, -1
  %66 = add i64 %58, %65
  %67 = select i1 %63, i64 %66, i64 %59
  %68 = select i1 %63, %"struct.std::__1::pair"* %64, %"struct.std::__1::pair"* %57
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = ptrtoint %"struct.std::__1::pair"* %68 to i64
  br label %72

72:                                               ; preds = %70, %48
  %73 = phi i64 [ %71, %70 ], [ %15, %48 ]
  %74 = phi %"struct.std::__1::pair"* [ %68, %70 ], [ %11, %48 ]
  %75 = icmp eq %"struct.std::__1::pair"* %74, %18
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 1
  %82 = ptrtoint %"struct.std::__1::pair"* %81 to i64
  br label %83

83:                                               ; preds = %80, %76, %72
  %84 = phi i64 [ %82, %80 ], [ %73, %72 ], [ %73, %76 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::pair"*
  %86 = icmp eq %"struct.std::__1::pair"* %74, %85
  %87 = select i1 %86, %"struct.std::__1::pair"* %18, %"struct.std::__1::pair"* %74
  %88 = icmp eq %"struct.std::__1::pair"* %87, %18
  br i1 %88, label %101, label %89

89:                                               ; preds = %83
  %90 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN18subresource_filter24kFilterAdsOnAbusiveSitesE) #2
  %91 = and i1 %53, %90
  br i1 %91, label %92, label %101

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %119, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %119, label %100

100:                                              ; preds = %96
  store i8 1, i8* %2, align 1
  br label %119

101:                                              ; preds = %89, %83
  %102 = phi i1 [ %90, %89 ], [ false, %83 ]
  br i1 %53, label %103, label %108

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %2, align 1
  br label %119

108:                                              ; preds = %101
  br i1 %102, label %109, label %114

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  %113 = zext i1 %112 to i8
  store i8 %113, i8* %2, align 1
  br label %119

114:                                              ; preds = %108
  %115 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %117 = icmp eq %"struct.std::__1::pair"* %115, %116
  %118 = select i1 %117, i32 3, i32 0
  br label %119

119:                                              ; preds = %114, %109, %103, %100, %96, %92, %3, %4
  %120 = phi i32 [ %8, %4 ], [ 0, %3 ], [ 4, %100 ], [ 4, %103 ], [ 5, %109 ], [ 4, %92 ], [ 5, %96 ], [ %118, %114 ]
  ret i32 %120
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
