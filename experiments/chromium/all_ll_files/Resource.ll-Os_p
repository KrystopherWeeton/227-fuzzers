; ModuleID = '../../third_party/swiftshader/src/Common/Resource.cpp'
source_filename = "../../third_party/swiftshader/src/Common/Resource.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutexattr_t = type { i32 }

@_ZN2sw8ResourceC1Em = hidden unnamed_addr alias void (%"class.sw::Resource"*, i64), void (%"class.sw::Resource"*, i64)* @_ZN2sw8ResourceC2Em
@_ZN2sw8ResourceD1Ev = hidden unnamed_addr alias void (%"class.sw::Resource"*), void (%"class.sw::Resource"*)* @_ZN2sw8ResourceD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8ResourceC2Em(%"class.sw::Resource"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %5 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %4, %union.pthread_mutexattr_t* null) #5
  %6 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2
  tail call void @_ZN2sw5EventC1Ev(%"class.sw::Event"* %6) #5
  %7 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  store volatile i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 4
  store volatile i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  store volatile i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 6
  store i8 0, i8* %10, align 4
  %11 = tail call i8* @_ZN2sw8allocateEmm(i64 %1, i64 16) #5
  %12 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 7
  store i8* %11, i8** %12, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5EventC1Ev(%"class.sw::Event"*) unnamed_addr #1

; Function Attrs: optsize
declare i8* @_ZN2sw8allocateEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8ResourceD2Ev(%"class.sw::Resource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  tail call void @_ZN2sw10deallocateEPv(i8* %3) #5
  %4 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2
  tail call void @_ZN2sw5EventD1Ev(%"class.sw::Event"* %4) #5
  %5 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %6 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %5) #5
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw10deallocateEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZN2sw5EventD1Ev(%"class.sw::Event"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  %7 = load volatile i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 2
  %13 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 0
  br label %14

14:                                               ; preds = %9, %28
  %15 = load volatile i32, i32* %5, align 4
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  %18 = load volatile i32, i32* %10, align 8
  %19 = add nsw i32 %18, 1
  store volatile i32 %19, i32* %10, align 8
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  %21 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #5
  %22 = load volatile i8, i8* %12, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %17, %24
  %25 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %13, %union.pthread_mutex_t* %11) #5
  %26 = load volatile i8, i8* %12, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %24, label %28

28:                                               ; preds = %24, %17
  store volatile i8 0, i8* %12, align 8
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #5
  %30 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %31 = load volatile i32, i32* %10, align 8
  %32 = add nsw i32 %31, -1
  store volatile i32 %32, i32* %10, align 8
  %33 = load volatile i32, i32* %6, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %14, label %35

35:                                               ; preds = %28, %14, %2
  store volatile i32 %1, i32* %5, align 4
  %36 = load volatile i32, i32* %6, align 8
  %37 = add nsw i32 %36, 1
  store volatile i32 %37, i32* %6, align 8
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  %39 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 7
  %40 = load i8*, i8** %39, align 8
  ret i8* %40
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN2sw8Resource4lockENS_8AccessorES1_(%"class.sw::Resource"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #5
  %6 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  %7 = load volatile i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %42

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 1
  %13 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 2
  %14 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 6
  br label %16

16:                                               ; preds = %9, %39
  %17 = load volatile i32, i32* %10, align 4
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %19, label %42

19:                                               ; preds = %16
  %20 = load volatile i32, i32* %6, align 8
  %21 = add nsw i32 %20, -1
  store volatile i32 %21, i32* %6, align 8
  %22 = load volatile i32, i32* %6, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %39

24:                                               ; preds = %19
  %25 = load volatile i32, i32* %11, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #5
  store volatile i8 1, i8* %13, align 8
  %29 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %14) #5
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #5
  br label %39

31:                                               ; preds = %24
  %32 = load i8, i8* %15, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #5
  %36 = icmp eq %"class.sw::Resource"* %0, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %34
  tail call void @_ZN2sw8ResourceD2Ev(%"class.sw::Resource"* nonnull %0) #5
  %38 = bitcast %"class.sw::Resource"* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #6
  br label %78

39:                                               ; preds = %31, %27, %19
  %40 = load volatile i32, i32* %6, align 8
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %16, label %42

42:                                               ; preds = %16, %39, %3
  %43 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 4
  %44 = load volatile i32, i32* %6, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %72

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 1
  %49 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 2
  %50 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 0
  br label %51

51:                                               ; preds = %46, %65
  %52 = load volatile i32, i32* %43, align 4
  %53 = icmp eq i32 %52, %2
  br i1 %53, label %72, label %54

54:                                               ; preds = %51
  %55 = load volatile i32, i32* %47, align 8
  %56 = add nsw i32 %55, 1
  store volatile i32 %56, i32* %47, align 8
  %57 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #5
  %58 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %48) #5
  %59 = load volatile i8, i8* %49, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %54, %61
  %62 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %50, %union.pthread_mutex_t* %48) #5
  %63 = load volatile i8, i8* %49, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %61, label %65

65:                                               ; preds = %61, %54
  store volatile i8 0, i8* %49, align 8
  %66 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %48) #5
  %67 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #5
  %68 = load volatile i32, i32* %47, align 8
  %69 = add nsw i32 %68, -1
  store volatile i32 %69, i32* %47, align 8
  %70 = load volatile i32, i32* %6, align 8
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %51, label %72

72:                                               ; preds = %65, %51, %42
  store volatile i32 %2, i32* %43, align 4
  %73 = load volatile i32, i32* %6, align 8
  %74 = add nsw i32 %73, 1
  store volatile i32 %74, i32* %6, align 8
  %75 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #5
  %76 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 7
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %34, %37, %72
  %79 = phi i8* [ %77, %72 ], [ null, %37 ], [ null, %34 ]
  ret i8* %79
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #5
  %4 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  %5 = load volatile i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store volatile i32 %6, i32* %4, align 8
  %7 = load volatile i32, i32* %4, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %11 = load volatile i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 1
  %15 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %14) #5
  %16 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 2
  store volatile i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 0
  %18 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %17) #5
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #5
  br label %29

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #5
  %26 = icmp eq %"class.sw::Resource"* %0, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  tail call void @_ZN2sw8ResourceD2Ev(%"class.sw::Resource"* nonnull %0) #5
  %28 = bitcast %"class.sw::Resource"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #6
  br label %31

29:                                               ; preds = %20, %13, %1
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #5
  br label %31

31:                                               ; preds = %24, %27, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Resource6unlockENS_8AccessorE(%"class.sw::Resource"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  %6 = load volatile i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 2
  %13 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 6
  br label %15

15:                                               ; preds = %8, %38
  %16 = load volatile i32, i32* %9, align 4
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %41

18:                                               ; preds = %15
  %19 = load volatile i32, i32* %5, align 8
  %20 = add nsw i32 %19, -1
  store volatile i32 %20, i32* %5, align 8
  %21 = load volatile i32, i32* %5, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %18
  %24 = load volatile i32, i32* %10, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #5
  store volatile i8 1, i8* %12, align 8
  %28 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %13) #5
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #5
  br label %38

30:                                               ; preds = %23
  %31 = load i8, i8* %14, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  %35 = icmp eq %"class.sw::Resource"* %0, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  tail call void @_ZN2sw8ResourceD2Ev(%"class.sw::Resource"* nonnull %0) #5
  %37 = bitcast %"class.sw::Resource"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #6
  br label %43

38:                                               ; preds = %30, %26, %18
  %39 = load volatile i32, i32* %5, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %15, label %41

41:                                               ; preds = %15, %38, %2
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  br label %43

43:                                               ; preds = %33, %36, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 1, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #5
  %4 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 5
  %5 = load volatile i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 3
  %9 = load volatile i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #5
  %13 = icmp eq %"class.sw::Resource"* %0, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  tail call void @_ZN2sw8ResourceD2Ev(%"class.sw::Resource"* nonnull %0) #5
  %15 = bitcast %"class.sw::Resource"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #6
  br label %19

16:                                               ; preds = %7, %1
  %17 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 6
  store i8 1, i8* %17, align 4
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #5
  br label %19

19:                                               ; preds = %11, %14, %16
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sw::Resource", %"class.sw::Resource"* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize }
attributes #6 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
