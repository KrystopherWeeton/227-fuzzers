; ModuleID = '../../third_party/dawn/src/dawn_native/PersistentCache.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/PersistentCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::PersistentCache" = type { %"class.dawn_native::DeviceBase"*, %"class.dawn_platform::CachingInterface"* }
%"class.dawn_platform::CachingInterface" = type { i32 (...)** }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.30" }
%"struct.std::__1::array.30" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.31" }
%"class.std::__1::bitset.31" = type { %"class.std::__1::__bitset.32" }
%"class.std::__1::__bitset.32" = type { i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_platform::Platform" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%struct.WGPUDeviceImpl = type opaque

@_ZN11dawn_native15PersistentCacheC1EPNS_10DeviceBaseE = hidden unnamed_addr alias void (%"class.dawn_native::PersistentCache"*, %"class.dawn_native::DeviceBase"*), void (%"class.dawn_native::PersistentCache"*, %"class.dawn_native::DeviceBase"*)* @_ZN11dawn_native15PersistentCacheC2EPNS_10DeviceBaseE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15PersistentCacheC2EPNS_10DeviceBaseE(%"class.dawn_native::PersistentCache"* nocapture, %"class.dawn_native::DeviceBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::PersistentCache", %"class.dawn_native::PersistentCache"* %0, i64 0, i32 0
  store %"class.dawn_native::DeviceBase"* %1, %"class.dawn_native::DeviceBase"** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::PersistentCache", %"class.dawn_native::PersistentCache"* %0, i64 0, i32 1
  %5 = tail call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %1) #3
  %6 = icmp eq %"class.dawn_platform::Platform"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.dawn_platform::Platform"* %5 to %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)***
  %9 = load %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)**, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*** %8, align 8
  %10 = getelementptr inbounds %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)** %9, i64 5
  %11 = load %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)** %10, align 8
  %12 = tail call %"class.dawn_platform::CachingInterface"* %11(%"class.dawn_platform::Platform"* nonnull %5, i8* null, i64 0) #3
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi %"class.dawn_platform::CachingInterface"* [ %12, %7 ], [ null, %2 ]
  store %"class.dawn_platform::CachingInterface"* %14, %"class.dawn_platform::CachingInterface"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.dawn_platform::CachingInterface"* @_ZN11dawn_native15PersistentCache16GetPlatformCacheEv(%"class.dawn_native::PersistentCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::PersistentCache", %"class.dawn_native::PersistentCache"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %2, align 8
  %4 = tail call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %3) #3
  %5 = icmp eq %"class.dawn_platform::Platform"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.dawn_platform::Platform"* %4 to %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)***
  %8 = load %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)**, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)** %8, i64 5
  %10 = load %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)*, %"class.dawn_platform::CachingInterface"* (%"class.dawn_platform::Platform"*, i8*, i64)** %9, align 8
  %11 = tail call %"class.dawn_platform::CachingInterface"* %10(%"class.dawn_platform::Platform"* nonnull %4, i8* null, i64 0) #3
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi %"class.dawn_platform::CachingInterface"* [ %11, %6 ], [ null, %1 ]
  ret %"class.dawn_platform::CachingInterface"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN11dawn_native15PersistentCache8LoadDataERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.dawn_native::PersistentCache"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::PersistentCache", %"class.dawn_native::PersistentCache"* %0, i64 0, i32 1
  %4 = load %"class.dawn_platform::CachingInterface"*, %"class.dawn_platform::CachingInterface"** %3, align 8
  %5 = icmp eq %"class.dawn_platform::CachingInterface"* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.dawn_native::PersistentCache"* %0 to %struct.WGPUDeviceImpl**
  %8 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i8* %10 to i64
  %15 = sub i64 %13, %14
  %16 = bitcast %"class.dawn_platform::CachingInterface"* %4 to i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)***
  %17 = load i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)**, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %17, i64 2
  %19 = load i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %18, align 8
  %20 = tail call i64 %19(%"class.dawn_platform::CachingInterface"* nonnull %4, %struct.WGPUDeviceImpl* %8, i8* %10, i64 %15, i8* null, i64 0) #3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %6
  %23 = tail call i8* @_Znam(i64 %20) #4
  %24 = load %"class.dawn_platform::CachingInterface"*, %"class.dawn_platform::CachingInterface"** %3, align 8
  %25 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %7, align 8
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %12, align 8
  %28 = ptrtoint i8* %26 to i64
  %29 = sub i64 %27, %28
  %30 = bitcast %"class.dawn_platform::CachingInterface"* %24 to i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)***
  %31 = load i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)**, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %31, i64 2
  %33 = load i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, i64 (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %32, align 8
  %34 = tail call i64 %33(%"class.dawn_platform::CachingInterface"* %24, %struct.WGPUDeviceImpl* %25, i8* %26, i64 %29, i8* nonnull %23, i64 %20) #3
  br label %35

35:                                               ; preds = %22, %2, %6
  %36 = phi i64 [ 0, %2 ], [ 0, %6 ], [ %20, %22 ]
  %37 = phi i8* [ null, %2 ], [ null, %6 ], [ %23, %22 ]
  %38 = insertvalue { i8*, i64 } undef, i8* %37, 0
  %39 = insertvalue { i8*, i64 } %38, i64 %36, 1
  ret { i8*, i64 } %39
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15PersistentCache9StoreDataERKNSt3__16vectorIhNS1_9allocatorIhEEEEPKvm(%"class.dawn_native::PersistentCache"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::PersistentCache", %"class.dawn_native::PersistentCache"* %0, i64 0, i32 1
  %6 = load %"class.dawn_platform::CachingInterface"*, %"class.dawn_platform::CachingInterface"** %5, align 8
  %7 = icmp eq %"class.dawn_platform::CachingInterface"* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.dawn_native::PersistentCache"* %0 to %struct.WGPUDeviceImpl**
  %10 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint i8* %12 to i64
  %17 = sub i64 %15, %16
  %18 = bitcast %"class.dawn_platform::CachingInterface"* %6 to void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)***
  %19 = load void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)**, void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %19, i64 3
  %21 = load void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)*, void (%"class.dawn_platform::CachingInterface"*, %struct.WGPUDeviceImpl*, i8*, i64, i8*, i64)** %20, align 8
  tail call void %21(%"class.dawn_platform::CachingInterface"* nonnull %6, %struct.WGPUDeviceImpl* %10, i8* %12, i64 %17, i8* %2, i64 %3) #3
  br label %22

22:                                               ; preds = %4, %8
  ret void
}

declare %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
