; ModuleID = '../../third_party/blink/renderer/platform/fonts/skia/font_cache_skia.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/skia/font_cache_skia.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.7, %class.scoped_refptr.8, %class.scoped_refptr.18, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.25 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.9", %"class.WTF::RefCounted.16", [4 x i8] }>
%"class.blink::FontSettings.9" = type { %"class.WTF::Vector.10" }
%"class.WTF::Vector.10" = type { %"class.WTF::VectorBuffer.11" }
%"class.WTF::VectorBuffer.11" = type { %"class.WTF::VectorBufferBase.12" }
%"class.WTF::VectorBufferBase.12" = type { %"class.blink::FontTagValuePair.13"*, i32, i32 }
%"class.blink::FontTagValuePair.13" = type { i32, float }
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.18 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.19", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.22, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.22 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.23", [4 x i8] }>
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.25 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.33, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.253, i8, [7 x i8] }>
%class.sk_sp.33 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.1" }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.34" }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.253 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontFaceCreationParams>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontFaceCreationParams>::InstanceStorage" = type { %"class.blink::FontFaceCreationParams"* }
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"class.WTF::StaticSingleton.275" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic.1", i8, [3 x i8] }>
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30", [32 x i8] }
%"class.WTF::VectorBufferBase.30" = type { i8**, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.1", [4 x i8] }>
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.39, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.222", %"class.blink::FontDataCache", %"class.blink::Persistent.242", float, [4 x i8] }>
%class.sk_sp.39 = type { %class.SkFontMgr* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.216", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.155", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.73" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.149", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { i64 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { float }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.158", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.167" }
%"class.WTF::Vector.167" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.197" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.91"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.98"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.244" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.222" = type { %"class.WTF::HashTable.223" }
%"class.WTF::HashTable.223" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.227", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.232", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.237", i32, i32 }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.242" = type { %"class.blink::PersistentBase.243" }
%"class.blink::PersistentBase.243" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.254", %class.scoped_refptr.260, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.250" }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.252 }
%union.anon.252 = type { float }
%class.SkFont = type <{ %class.sk_sp.33, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.249, %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.260 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.261", [4 x i8] }>
%"class.WTF::RefCounted.261" = type { %"class.base::RefCounted.262" }
%"class.base::RefCounted.262" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::WebSandboxSupport" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi.substitute_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.6 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.7 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.8 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.18 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.25 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@__const._ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi.platform_data = private unnamed_addr constant %"class.blink::FontPlatformData" <{ %class.sk_sp.33 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, %"struct.blink::WebFontRenderStyle" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %class.scoped_refptr.253 { %"class.blink::HarfBuzzFace"* inttoptr (i64 -6148914691236517206 to %"class.blink::HarfBuzzFace"*) }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params = internal global i64 0, align 8
@_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params = internal global i64 0, align 8
@.str = private unnamed_addr constant [9 x i8] c"-webkit-\00", align 1
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton.275" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton.275" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal unnamed_addr global %"class.WTF::StaticSingleton.275" zeroinitializer, align 2
@_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton.275" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZN5blink17font_family_names10kSansSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names6kSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names10kMonospaceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names8kCursiveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names8kFantasyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase35is_font_src_local_matching_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink17font_family_names5kSansE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names6kArialE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@switch.table._ZN5blink9FontCache14CreateTypefaceERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsERNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE = private unnamed_addr constant [5 x %"class.WTF::AtomicString"**] [%"class.WTF::AtomicString"** @_ZN5blink17font_family_names6kSerifE, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names10kSansSerifE, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names10kMonospaceE, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names8kCursiveE, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names8kFantasyE], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ToAtomicStringERK8SkString(%class.SkString* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8* %4, i64 %7) #15
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9FontCache25GetFamilyNameForCharacterEP9SkFontMgriRKNS_15FontDescriptionENS_20FontFallbackPriorityE(%class.SkFontMgr*, i32, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.28", align 8
  %6 = alloca %class.SkFontStyle, align 4
  %7 = alloca %class.SkString, align 8
  %8 = bitcast %"class.WTF::Vector.28"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN5blink9FontCache24GetBcp47LocaleForRequestERKNS_15FontDescriptionENS_20FontFallbackPriorityE(%"class.WTF::Vector.28"* nonnull sret %5, %"class.blink::FontDescription"* dereferenceable(80) %2, i32 %3) #15
  %9 = bitcast %class.SkFontStyle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #15
  %10 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %6, i64 0, i32 0
  store i32 328080, i32* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = call %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr* %0, i8* null, %class.SkFontStyle* nonnull dereferenceable(4) %6, i8** %12, i32 %14, i32 %1) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #15
  %16 = icmp eq %class.SkTypeface* %15, null
  br i1 %16, label %17, label %39

17:                                               ; preds = %4
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %57, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %57

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #15
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %27
  call void @llvm.trap() #15
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %57

39:                                               ; preds = %4
  %40 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #15
  %41 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %41, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #15
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* nonnull %15, %class.SkString* nonnull %7) #15
  %42 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %41, align 8
  %43 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %42, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString8FromUTF8EPKcm(i8* %43, i64 %46) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #15
  %48 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %39
  %52 = bitcast %class.SkTypeface* %15 to %class.SkRefCntBase*
  %53 = bitcast %class.SkTypeface* %15 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #15
  br label %57

57:                                               ; preds = %17, %22, %37, %39, %51
  %58 = phi %"class.WTF::StringImpl"* [ %47, %39 ], [ %47, %51 ], [ %20, %37 ], [ %20, %22 ], [ null, %17 ]
  %59 = load i32, i32* %13, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %57
  store i32 0, i32* %13, align 4
  br label %62

62:                                               ; preds = %61, %57
  %63 = load i8**, i8*** %11, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %5, i64 0, i32 0, i32 1, i64 0
  %65 = bitcast i8* %64 to i8**
  %66 = icmp eq i8** %63, %65
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.29"* nonnull %68, i8** %63) #15
  br label %69

69:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #15
  ret %"class.WTF::StringImpl"* %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink9FontCache24GetBcp47LocaleForRequestERKNS_15FontDescriptionENS_20FontFallbackPriorityE(%"class.WTF::Vector.28"* sret, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #1

declare %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9FontCache12PlatformInitEv(%"class.blink::FontCache"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontDescription", align 8
  %5 = alloca %"class.blink::FontFaceCreationParams", align 8
  %6 = alloca %"class.blink::FontPlatformData", align 8
  %7 = bitcast %"class.blink::FontDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi.substitute_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %4, %"class.blink::FontDescription"* dereferenceable(80) %1) #15
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14, !prof !4

10:                                               ; preds = %3
  %11 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #15
  br label %14

14:                                               ; preds = %3, %10, %13
  %15 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* nonnull %4, i16 %15) #15
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !4

18:                                               ; preds = %14
  %19 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #15
  br label %22

22:                                               ; preds = %14, %18, %21
  %23 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %24 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 10, i32 0, i32 0
  store i16 %23, i16* %24, align 8
  %25 = bitcast %"class.blink::FontFaceCreationParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 48, i1 false)
  %26 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %78, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %29, %44
  %47 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %48, align 8
  %49 = load atomic i32, i32* %30 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #15
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  call void @llvm.trap() #15
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %46
  %65 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #15
  %67 = load atomic i32, i32* %30 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %64
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %64
  %75 = phi i32 [ %73, %72 ], [ %71, %64 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #15
  br label %82

78:                                               ; preds = %22
  %79 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 0
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 40, i1 false)
  br label %82

82:                                               ; preds = %74, %77, %78
  %83 = phi %"class.WTF::StringImpl"** [ %48, %74 ], [ %48, %77 ], [ %80, %78 ]
  %84 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %5, i32 0) #15
  %85 = icmp eq %"class.blink::FontPlatformData"* %84, null
  br i1 %85, label %117, label %86

86:                                               ; preds = %82
  %87 = call zeroext i1 @_ZN5blink16FontPlatformData21FontContainsCharacterEi(%"class.blink::FontPlatformData"* nonnull %84, i32 %2) #15
  br i1 %87, label %88, label %117

88:                                               ; preds = %86
  %89 = bitcast %"class.blink::FontPlatformData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %89) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 bitcast (%"class.blink::FontPlatformData"* @__const._ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi.platform_data to i8*), i64 72, i1 false)
  call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* nonnull %6, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %84) #15
  %90 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  %91 = load i16, i16* %90, align 8
  %92 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %98, !prof !4

94:                                               ; preds = %88
  %95 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #15
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #15
  br label %98

98:                                               ; preds = %88, %94, %97
  %99 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %100 = icmp sge i16 %91, %99
  %101 = zext i1 %100 to i8
  %102 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %6, i64 0, i32 3
  store i8 %101, i8* %102, align 4
  %103 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 2, i32 0
  %104 = load i16, i16* %103, align 4
  %105 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %111, !prof !4

107:                                              ; preds = %98
  %108 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %107
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %111

111:                                              ; preds = %98, %107, %110
  %112 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %113 = icmp eq i16 %104, %112
  %114 = zext i1 %113 to i8
  %115 = getelementptr inbounds %"class.blink::FontPlatformData", %"class.blink::FontPlatformData"* %6, i64 0, i32 4
  store i8 %114, i8* %115, align 1
  %116 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"* %0, %"class.blink::FontPlatformData"* nonnull %6, i32 1, i1 zeroext false) #15
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %89) #15
  br label %117

117:                                              ; preds = %86, %82, %111
  %118 = phi %"class.blink::SimpleFontData"* [ %116, %111 ], [ null, %82 ], [ null, %86 ]
  %119 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %5, i64 0, i32 2
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %124, %117
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %127, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #15
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #15
  ret %"class.blink::SimpleFontData"* %118
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"*, i16) local_unnamed_addr #1

declare %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16FontPlatformData21FontContainsCharacterEi(%"class.blink::FontPlatformData"*, i32) local_unnamed_addr #1

declare void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72)) unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  %17 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.24", %"class.base::RefCounted.24"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.24"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.24"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #15
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #15
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.17", %"class.base::RefCounted.17"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #15
  %62 = getelementptr inbounds %"class.base::RefCounted.17", %"class.base::RefCounted.17"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.17", %"class.base::RefCounted.17"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.17"* %66 to %"class.blink::FontTagValuePair.13"**
  %68 = load %"class.blink::FontTagValuePair.13"*, %"class.blink::FontTagValuePair.13"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.13"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.13"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !3

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.17", %"class.base::RefCounted.17"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #15
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.17"* %66 to i8*
  tail call void @free(i8* %78) #15
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #15
  %86 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !3

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #15
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted"* %90 to i8*
  tail call void @free(i8* %102) #15
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFaceCreationParams", align 8
  %5 = bitcast %"class.blink::FontFaceCreationParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %7 = bitcast %"struct.blink::FontDescription::BitFields"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 8
  %10 = trunc i64 %9 to i32
  %11 = and i32 %10, 7
  %12 = add nsw i32 %11, -2
  %13 = icmp ult i32 %12, 5
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds [5 x %"class.WTF::AtomicString"**], [5 x %"class.WTF::AtomicString"**]* @switch.table._ZN5blink9FontCache14CreateTypefaceERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsERNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE, i64 0, i64 %15
  %17 = load %"class.WTF::AtomicString"**, %"class.WTF::AtomicString"*** %16, align 8
  br label %18

18:                                               ; preds = %3, %14
  %19 = phi %"class.WTF::AtomicString"** [ %17, %14 ], [ @_ZN3WTF12g_empty_atomE, %3 ]
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %73, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #15
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %24, %39
  %42 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %43, align 8
  %44 = load atomic i32, i32* %25 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #15
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %47
  tail call void @llvm.trap() #15
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %41
  %60 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 32, i1 false) #15
  %62 = load atomic i32, i32* %25 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %59
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %59
  %70 = phi i32 [ %68, %67 ], [ %66, %59 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #15
  br label %77

73:                                               ; preds = %18
  %74 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 0
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::StringImpl"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 40, i1 false)
  br label %77

77:                                               ; preds = %69, %72, %73
  %78 = phi %"class.WTF::StringImpl"** [ %43, %69 ], [ %43, %72 ], [ %75, %73 ]
  %79 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %4, i32 3) #15
  %80 = icmp eq %"class.blink::FontPlatformData"* %79, null
  br i1 %80, label %81, label %216

81:                                               ; preds = %77
  %82 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params to i8*) acquire, align 8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %145, !prof !4

84:                                               ; preds = %81
  %85 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params) #15
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %145, label %87

87:                                               ; preds = %84
  %88 = call noalias i8* @malloc(i64 48) #15
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names5kSansE, align 8
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %141, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #15
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  call void @llvm.trap() #15
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %110

110:                                              ; preds = %108, %93
  %111 = bitcast i8* %88 to i32*
  store i32 0, i32* %111, align 8
  %112 = getelementptr inbounds i8, i8* %88, i64 8
  %113 = bitcast i8* %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %113, align 8
  %114 = load atomic i32, i32* %94 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %129

119:                                              ; preds = %110
  %120 = zext i32 %118 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #15
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %119
  call void @llvm.trap() #15
  unreachable

127:                                              ; preds = %119
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %117, align 4
  br label %129

129:                                              ; preds = %127, %110
  %130 = phi i32 [ %128, %127 ], [ %118, %110 ]
  %131 = getelementptr inbounds i8, i8* %88, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 32, i1 false) #15
  %132 = load atomic i32, i32* %94 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %129
  %136 = add i32 %130, -1
  store i32 %136, i32* %117, align 4
  br label %137

137:                                              ; preds = %135, %129
  %138 = phi i32 [ %136, %135 ], [ %130, %129 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #15
  br label %144

141:                                              ; preds = %87
  %142 = bitcast i8* %88 to i32*
  store i32 0, i32* %142, align 8
  %143 = getelementptr inbounds i8, i8* %88, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 40, i1 false) #15
  br label %144

144:                                              ; preds = %137, %140, %141
  store i8* %88, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params) #15
  br label %145

145:                                              ; preds = %81, %144, %84
  %146 = load %"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE22s_sans_creation_params, i64 0, i32 0, i32 0), align 8
  %147 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %146, i32 3) #15
  %148 = icmp eq %"class.blink::FontPlatformData"* %147, null
  br i1 %148, label %149, label %216

149:                                              ; preds = %145
  %150 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params to i8*) acquire, align 8
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %213, !prof !4

152:                                              ; preds = %149
  %153 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params) #15
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %213, label %155

155:                                              ; preds = %152
  %156 = call noalias i8* @malloc(i64 48) #15
  %157 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names6kArialE, align 8
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %209, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #15
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !2

175:                                              ; preds = %166
  call void @llvm.trap() #15
  unreachable

176:                                              ; preds = %166
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %167, align 4
  br label %178

178:                                              ; preds = %176, %161
  %179 = bitcast i8* %156 to i32*
  store i32 0, i32* %179, align 8
  %180 = getelementptr inbounds i8, i8* %156, i64 8
  %181 = bitcast i8* %180 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %181, align 8
  %182 = load atomic i32, i32* %162 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %197

187:                                              ; preds = %178
  %188 = zext i32 %186 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #15
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !2

194:                                              ; preds = %187
  call void @llvm.trap() #15
  unreachable

195:                                              ; preds = %187
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %185, align 4
  br label %197

197:                                              ; preds = %195, %178
  %198 = phi i32 [ %196, %195 ], [ %186, %178 ]
  %199 = getelementptr inbounds i8, i8* %156, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 32, i1 false) #15
  %200 = load atomic i32, i32* %162 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %197
  %204 = add i32 %198, -1
  store i32 %204, i32* %185, align 4
  br label %205

205:                                              ; preds = %203, %197
  %206 = phi i32 [ %204, %203 ], [ %198, %197 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #15
  br label %212

209:                                              ; preds = %155
  %210 = bitcast i8* %156 to i32*
  store i32 0, i32* %210, align 8
  %211 = getelementptr inbounds i8, i8* %156, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 40, i1 false) #15
  br label %212

212:                                              ; preds = %205, %208, %209
  store i8* %156, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params) #15
  br label %213

213:                                              ; preds = %152, %212, %149
  %214 = load %"class.blink::FontFaceCreationParams"*, %"class.blink::FontFaceCreationParams"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainEE23s_arial_creation_params, i64 0, i32 0, i32 0), align 8
  %215 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %214, i32 3) #15
  br label %216

216:                                              ; preds = %77, %145, %213
  %217 = phi %"class.blink::FontPlatformData"* [ %147, %145 ], [ %215, %213 ], [ %79, %77 ]
  %218 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"* %0, %"class.blink::FontPlatformData"* %217, i32 %2, i1 zeroext false) #15
  %219 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %4, i64 0, i32 2
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #16
  br label %227

227:                                              ; preds = %224, %216
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #15
  br label %243

243:                                              ; preds = %227, %239, %242
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #15
  ret %"class.blink::SimpleFontData"* %218
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache14CreateTypefaceERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsERNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%class.sk_sp.33* noalias sret, %"class.blink::FontCache"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* nocapture readonly dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %class.SkFontStyle, align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %class.SkFontStyle, align 4
  %14 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %77

17:                                               ; preds = %5
  %18 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #15
  %19 = bitcast %"class.blink::Platform"* %18 to %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)***
  %20 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)**, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %20, i64 2
  %22 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %21, align 8
  %23 = tail call %"class.blink::WebSandboxSupport"* %22(%"class.blink::Platform"* %18) #15
  %24 = icmp eq %"class.blink::WebSandboxSupport"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  tail call void @_ZN5blink18SkTypeface_Factory36FromFontConfigInterfaceIdAndTtcIndexEii(%class.sk_sp.33* sret %0, i32 %27, i32 %29) #15
  br label %234

30:                                               ; preds = %17
  %31 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  %41 = tail call i64 @strlen(i8* %40) #15
  %42 = icmp ugt i64 %41, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #17
  unreachable

45:                                               ; preds = %30
  %46 = icmp ult i64 %41, 23
  br i1 %46, label %56, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %41, 16
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #16
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %54, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %61

56:                                               ; preds = %45
  %57 = trunc i64 %41 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  %60 = icmp eq i64 %41, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %56, %47
  %62 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %55, %47 ]
  %63 = phi i8* [ %31, %56 ], [ %50, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %40, i64 %41, i1 false) #15
  br label %64

64:                                               ; preds = %56, %61
  %65 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %62, %61 ]
  %66 = phi i8* [ %31, %56 ], [ %63, %61 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %41
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 4
  %69 = load i32, i32* %68, align 4
  call void @_ZN5blink18SkTypeface_Factory23FromFilenameAndTtcIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%class.sk_sp.33* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 %69) #15
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #16
  br label %76

76:                                               ; preds = %64, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br label %234

77:                                               ; preds = %5
  %78 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #15
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #15
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %77
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %101 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #15
  br label %113

102:                                              ; preds = %98, %83
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %79, align 8
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  %106 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #15
  br i1 %105, label %113, label %107

107:                                              ; preds = %102
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %109 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %111, align 8
  %112 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %81, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #15
  br i1 %112, label %115, label %140

113:                                              ; preds = %100, %102
  %114 = phi i8* [ %101, %100 ], [ %106, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #15
  br label %115

115:                                              ; preds = %113, %107
  %116 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #15
  %117 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 12, i32 0
  %118 = bitcast %"struct.blink::FontDescription::BitFields"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = lshr i64 %119, 8
  %121 = trunc i64 %120 to i32
  %122 = and i32 %121, 7
  %123 = add nsw i32 %122, -2
  %124 = icmp ult i32 %123, 5
  br i1 %124, label %125, label %129

125:                                              ; preds = %115
  %126 = sext i32 %123 to i64
  %127 = getelementptr inbounds [5 x %"class.WTF::AtomicString"**], [5 x %"class.WTF::AtomicString"**]* @switch.table._ZN5blink9FontCache14CreateTypefaceERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsERNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE, i64 0, i64 %126
  %128 = load %"class.WTF::AtomicString"**, %"class.WTF::AtomicString"*** %127, align 8
  br label %129

129:                                              ; preds = %115, %125
  %130 = phi %"class.WTF::AtomicString"** [ %128, %125 ], [ @_ZN3WTF12g_empty_atomE, %115 ]
  %131 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %130, align 8
  %132 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %131, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %132, i32 0) #15
  %133 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %150

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #16
  br label %150

140:                                              ; preds = %107
  %141 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #15
  %142 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %142, i32 0) #15
  %143 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #16
  br label %150

150:                                              ; preds = %140, %147, %129, %137
  %151 = phi i8* [ %116, %137 ], [ %116, %129 ], [ %141, %147 ], [ %141, %140 ]
  %152 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* nonnull align 8 %151, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #15
  %153 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %1, i64 0, i32 3, i32 0
  %154 = load %class.SkFontMgr*, %class.SkFontMgr** %153, align 8
  %155 = icmp eq %class.SkFontMgr* %154, null
  br i1 %155, label %170, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %157, align 8
  %158 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  %164 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %165 = select i1 %161, i8* %163, i8* %164
  %166 = bitcast %class.SkFontStyle* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #15
  %167 = call i32 @_ZNK5blink15FontDescription13SkiaFontStyleEv(%"class.blink::FontDescription"* %2) #15
  %168 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %11, i64 0, i32 0
  store i32 %167, i32* %168, align 4
  %169 = call %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr* nonnull %154, i8* %165, %class.SkFontStyle* nonnull dereferenceable(4) %11) #15
  store %class.SkTypeface* %169, %class.SkTypeface** %157, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #15
  br label %217

170:                                              ; preds = %150
  %171 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #15
  %172 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %179 = select i1 %175, i8* %177, i8* %178
  %180 = call i64 @strlen(i8* %179) #15
  %181 = icmp ugt i64 %180, -17
  br i1 %181, label %182, label %184

182:                                              ; preds = %170
  %183 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %183) #17
  unreachable

184:                                              ; preds = %170
  %185 = icmp ult i64 %180, 23
  br i1 %185, label %195, label %186

186:                                              ; preds = %184
  %187 = add nuw i64 %180, 16
  %188 = and i64 %187, -16
  %189 = call i8* @_Znwm(i64 %188) #16
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %189, i8** %190, align 8
  %191 = or i64 %188, -9223372036854775808
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %180, i64* %193, align 8
  %194 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %200

195:                                              ; preds = %184
  %196 = trunc i64 %180 to i8
  %197 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  store i8 %196, i8* %198, align 1
  %199 = icmp eq i64 %180, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %195, %186
  %201 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %197, %195 ], [ %194, %186 ]
  %202 = phi i8* [ %171, %195 ], [ %189, %186 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %202, i8* align 1 %179, i64 %180, i1 false) #15
  br label %203

203:                                              ; preds = %195, %200
  %204 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %197, %195 ], [ %201, %200 ]
  %205 = phi i8* [ %171, %195 ], [ %202, %200 ]
  %206 = getelementptr inbounds i8, i8* %205, i64 %180
  store i8 0, i8* %206, align 1
  %207 = bitcast %class.SkFontStyle* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #15
  %208 = call i32 @_ZNK5blink15FontDescription13SkiaFontStyleEv(%"class.blink::FontDescription"* %2) #15
  %209 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %13, i64 0, i32 0
  store i32 %208, i32* %209, align 4
  call void @_ZN5blink18SkTypeface_Factory26FromFamilyNameAndFontStyleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK11SkFontStyle(%class.sk_sp.33* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %class.SkFontStyle* nonnull dereferenceable(4) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #15
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %203, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #15
  br label %217

217:                                              ; preds = %156, %216
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #15
  br label %233

233:                                              ; preds = %217, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %234

234:                                              ; preds = %233, %76, %25
  ret void
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare void @_ZN5blink18SkTypeface_Factory36FromFontConfigInterfaceIdAndTtcIndexEii(%class.sk_sp.33* sret, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink18SkTypeface_Factory23FromFilenameAndTtcIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%class.sk_sp.33* sret, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #1

declare i32 @_ZNK5blink15FontDescription13SkiaFontStyleEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

declare void @_ZN5blink18SkTypeface_Factory26FromFamilyNameAndFontStyleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK11SkFontStyle(%class.sk_sp.33* sret, %"class.std::__1::basic_string"* dereferenceable(24), %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontPlatformData"* @_ZN5blink9FontCache22CreateFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsEfNS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.33, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %class.sk_sp.33, align 8
  %9 = alloca %class.sk_sp.33, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #15
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_font_src_local_matching_enabled_E, align 1, !range !5
  %13 = icmp ne i8 %12, 0
  %14 = icmp eq i32 %4, 2
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = bitcast %class.sk_sp.33* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN5blink9FontCache28CreateTypefaceFromUniqueNameERKNS_22FontFaceCreationParamsE(%class.sk_sp.33* nonnull sret %8, %"class.blink::FontCache"* %0, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %2) #15
  br label %20

18:                                               ; preds = %5
  %19 = bitcast %class.sk_sp.33* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  call void @_ZN5blink9FontCache14CreateTypefaceERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsERNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE(%class.sk_sp.33* nonnull sret %9, %"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* dereferenceable(48) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi %class.sk_sp.33* [ %9, %18 ], [ %8, %16 ]
  %22 = phi i8* [ %19, %18 ], [ %17, %16 ]
  %23 = bitcast %class.sk_sp.33* %21 to i64*
  %24 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %25 = inttoptr i64 %24 to %class.SkTypeface*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %109, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  %29 = load i16, i16* %28, align 8
  %30 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %25, i64 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 57344
  %33 = icmp eq i32 %32, 0
  %34 = trunc i32 %31 to i16
  %35 = shl i16 %34, 2
  %36 = add i16 %35, 800
  %37 = select i1 %33, i16 %36, i16 -31969
  %38 = icmp sgt i16 %29, %37
  br i1 %38, label %46, label %39

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %41 = bitcast %"struct.blink::FontDescription::BitFields"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 29
  %44 = trunc i64 %43 to i8
  %45 = and i8 %44, 1
  br label %46

46:                                               ; preds = %39, %27
  %47 = phi i8 [ 1, %27 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 2, i32 0
  %49 = load i16, i16* %48, align 4
  %50 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %56, !prof !4

52:                                               ; preds = %46
  %53 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %56

56:                                               ; preds = %46, %52, %55
  %57 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.275"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %58 = icmp eq i16 %49, %57
  br i1 %58, label %59, label %66

59:                                               ; preds = %56
  %60 = load i32, i32* %30, align 4
  %61 = icmp ugt i32 %60, 16777215
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %64 = bitcast %"struct.blink::FontDescription::BitFields"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  br label %72

66:                                               ; preds = %59, %56
  %67 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %68 = bitcast %"struct.blink::FontDescription::BitFields"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 1073741824
  %71 = icmp ne i64 %70, 0
  br label %72

72:                                               ; preds = %62, %66
  %73 = phi i64 [ %65, %62 ], [ %69, %66 ]
  %74 = phi i1 [ true, %62 ], [ %71, %66 ]
  %75 = trunc i64 %73 to i32
  %76 = and i32 %75, 3
  %77 = bitcast %class.sk_sp.33* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = call noalias i8* @malloc(i64 72) #15
  %79 = bitcast i8* %78 to %"class.blink::FontPlatformData"*
  %80 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %6, i64 0, i32 0
  %81 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic
  store %class.SkTypeface* %25, %class.SkTypeface** %80, align 8
  %83 = icmp ne i8 %47, 0
  call void @_ZN5blink16FontPlatformDataC1E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"* %79, %class.sk_sp.33* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, float %3, i1 zeroext %83, i1 zeroext %74, i32 %76) #15
  %84 = load %class.SkTypeface*, %class.SkTypeface** %80, align 8
  %85 = icmp eq %class.SkTypeface* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %72
  %87 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkTypeface* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkTypeface* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #15
  br label %96

96:                                               ; preds = %90, %86, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  %97 = ptrtoint i8* %78 to i64
  %98 = call zeroext i1 @_ZN5blink21BitmapGlyphsBlockList37ShouldAvoidEmbeddedBitmapsForTypefaceERK10SkTypeface(%class.SkTypeface* nonnull dereferenceable(48) %25) #15
  %99 = zext i1 %98 to i8
  %100 = getelementptr inbounds i8, i8* %78, i64 38
  store i8 %99, i8* %100, align 2
  %101 = atomicrmw add i32* %81, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %96
  %104 = inttoptr i64 %24 to %class.SkRefCntBase*
  %105 = inttoptr i64 %24 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #15
  br label %109

109:                                              ; preds = %20, %96, %103
  %110 = phi i64 [ %97, %96 ], [ %97, %103 ], [ 0, %20 ]
  %111 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  %118 = inttoptr i64 %110 to %"class.blink::FontPlatformData"*
  ret %"class.blink::FontPlatformData"* %118
}

declare void @_ZN5blink9FontCache28CreateTypefaceFromUniqueNameERKNS_22FontFaceCreationParamsE(%class.sk_sp.33* sret, %"class.blink::FontCache"*, %"class.blink::FontFaceCreationParams"* dereferenceable(48)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21BitmapGlyphsBlockList37ShouldAvoidEmbeddedBitmapsForTypefaceERK10SkTypeface(%class.SkTypeface* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKcLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.29"*, i8**) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i8** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.27"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #15
  %21 = bitcast %"class.base::RefCounted.27"* %19 to i8*
  tail call void @free(i8* %21) #15
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.27"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #15
  %33 = bitcast %"class.base::RefCounted.27"* %31 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #15
  %40 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.27"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #15
  %46 = bitcast %"class.base::RefCounted.27"* %44 to i8*
  tail call void @free(i8* %46) #15
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.27"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #15
  %21 = bitcast %"class.base::RefCounted.27"* %19 to i8*
  tail call void @free(i8* %21) #15
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.27"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #15
  %33 = bitcast %"class.base::RefCounted.27"* %31 to i8*
  tail call void @free(i8* %33) #15
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #15
  %40 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.27"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #15
  %46 = bitcast %"class.base::RefCounted.27"* %44 to i8*
  tail call void @free(i8* %46) #15
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

declare void @_ZN5blink16FontPlatformDataC1E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"*, %class.sk_sp.33*, %"class.std::__1::basic_string"* dereferenceable(24), float, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{i8 0, i8 2}
