; ModuleID = '../../courgette/disassembler_win32_x86.cc'
source_filename = "../../courgette/disassembler_win32_x86.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::DisassemblerWin32X86" = type { %"class.courgette::DisassemblerWin32" }
%"class.courgette::DisassemblerWin32" = type { %"class.courgette::Disassembler", i8, %"class.std::__1::vector", %"class.std::__1::vector", i8*, i16, i16, i16, %"struct.courgette::Section"*, i8, i32, i32, i32, i32, i32, i64, i32, i32, %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory" }
%"class.courgette::Disassembler" = type { %"class.courgette::AddressTranslator", i8*, i64, i8*, i8* }
%"class.courgette::AddressTranslator" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.courgette::Section" = type { [8 x i8], i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%"class.courgette::ImageDataDirectory" = type { i32, i32 }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.courgette::InstructionReceptor" = type { i32 (...)** }
%"class.courgette::Rel32FinderX86" = type { %"class.courgette::Rel32Finder" }
%"class.courgette::Rel32Finder" = type { i32 (...)**, i32, i32, %"class.std::__1::vector" }
%"class.courgette::RvaVisitor" = type { i32 (...)** }
%"class.courgette::AssemblyProgram" = type { i32, i64, %"class.courgette::LabelManager", %"class.courgette::LabelManager", %"class.std::__1::vector.8", %"class.std::__1::vector.8" }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.courgette::Label"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.courgette::Label"**, %"class.courgette::Label"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.courgette::Label"** }

$_ZN9courgette11Rel32FinderD2Ev = comdat any

$_ZN9courgette17DisassemblerWin32D2Ev = comdat any

$_ZN9courgette20DisassemblerWin32X86D0Ev = comdat any

$_ZNK9courgette20DisassemblerWin32X864kindEv = comdat any

$_ZNK9courgette17DisassemblerWin3210image_baseEv = comdat any

$_ZNK9courgette20DisassemblerWin32X8610AbsVAWidthEv = comdat any

$_ZNK9courgette20DisassemblerWin32X8620SupportsRelTableTypeEi = comdat any

$_ZNK9courgette20DisassemblerWin32X8631RelativeOffsetOfDataDirectoriesEv = comdat any

$_ZN9courgette11Rel32FinderD0Ev = comdat any

$_ZTVN9courgette11Rel32FinderE = comdat any

@_ZTVN9courgette20DisassemblerWin32X86E = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.courgette::DisassemblerWin32"*, i64)* @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*, i32)* @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i64)* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i32)* @_ZNK9courgette12Disassembler12RVAToPointerEj to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X86"*, i8*)* @_ZNK9courgette20DisassemblerWin32X8618PointerToTargetRVAEPKh to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin32D2Ev to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32X86"*)* @_ZN9courgette20DisassemblerWin32X86D0Ev to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X86"*)* @_ZNK9courgette20DisassemblerWin32X864kindEv to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*)* @_ZNK9courgette17DisassemblerWin3210image_baseEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*)* @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3211ParseHeaderEv to i8*), i8* bitcast (void ()* @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32X86"*, %"struct.courgette::Section"*)* @_ZN9courgette20DisassemblerWin32X8627ParseRel32RelocsFromSectionEPKNS_7SectionE to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X86"*)* @_ZNK9courgette20DisassemblerWin32X8610AbsVAWidthEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32X86"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)* @_ZNK9courgette20DisassemblerWin32X867EmitAbsEPNS_5LabelEPNS_19InstructionReceptorE to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32X86"*, i32)* @_ZNK9courgette20DisassemblerWin32X8620SupportsRelTableTypeEi to i8*), i8* bitcast (i16 (%"class.courgette::DisassemblerWin32X86"*)* @_ZNK9courgette20DisassemblerWin32X8631RelativeOffsetOfDataDirectoriesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c".text\00", align 1
@_ZTVN9courgette11Rel32FinderE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD2Ev to i8*), i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN9courgette17DisassemblerWin32E = external unnamed_addr constant { [23 x i8*] }, align 8

@_ZN9courgette20DisassemblerWin32X86C1EPKhm = hidden unnamed_addr alias void (%"class.courgette::DisassemblerWin32X86"*, i8*, i64), void (%"class.courgette::DisassemblerWin32X86"*, i8*, i64)* @_ZN9courgette20DisassemblerWin32X86C2EPKhm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette20DisassemblerWin32X86C2EPKhm(%"class.courgette::DisassemblerWin32X86"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0
  tail call void @_ZN9courgette17DisassemblerWin32C2EPKhm(%"class.courgette::DisassemblerWin32"* %4, i8* %1, i64 %2) #7
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette20DisassemblerWin32X86E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN9courgette17DisassemblerWin32C2EPKhm(%"class.courgette::DisassemblerWin32"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette20DisassemblerWin32X8618PointerToTargetRVAEPKh(%"class.courgette::DisassemblerWin32X86"*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0
  %7 = bitcast %"class.courgette::DisassemblerWin32X86"* %0 to i64 (%"class.courgette::DisassemblerWin32"*)***
  %8 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %8, i64 8
  %10 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %9, align 8
  %11 = tail call i64 %10(%"class.courgette::DisassemblerWin32"* %6) #7
  %12 = icmp ugt i64 %11, %5
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %7, align 8
  %15 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %14, i64 8
  %16 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %15, align 8
  %17 = tail call i64 %16(%"class.courgette::DisassemblerWin32"* %6) #7
  %18 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 16
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = add i64 %17, %20
  %22 = icmp ugt i64 %21, %5
  br i1 %22, label %23, label %30

23:                                               ; preds = %13
  %24 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %7, align 8
  %25 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %24, i64 8
  %26 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %25, align 8
  %27 = tail call i64 %26(%"class.courgette::DisassemblerWin32"* %6) #7
  %28 = trunc i64 %27 to i32
  %29 = sub i32 %4, %28
  br label %30

30:                                               ; preds = %2, %13, %23
  %31 = phi i32 [ %29, %23 ], [ -1, %13 ], [ -1, %2 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette20DisassemblerWin32X8614Address32ToRVAEj(%"class.courgette::DisassemblerWin32X86"*, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0
  %5 = bitcast %"class.courgette::DisassemblerWin32X86"* %0 to i64 (%"class.courgette::DisassemblerWin32"*)***
  %6 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %6, i64 8
  %8 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %7, align 8
  %9 = tail call i64 %8(%"class.courgette::DisassemblerWin32"* %4) #7
  %10 = icmp ugt i64 %9, %3
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %5, align 8
  %13 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %12, i64 8
  %14 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %13, align 8
  %15 = tail call i64 %14(%"class.courgette::DisassemblerWin32"* %4) #7
  %16 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 16
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = add i64 %15, %18
  %20 = icmp ugt i64 %19, %3
  br i1 %20, label %21, label %28

21:                                               ; preds = %11
  %22 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %5, align 8
  %23 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %22, i64 8
  %24 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %23, align 8
  %25 = tail call i64 %24(%"class.courgette::DisassemblerWin32"* %4) #7
  %26 = trunc i64 %25 to i32
  %27 = sub i32 %1, %26
  br label %28

28:                                               ; preds = %2, %11, %21
  %29 = phi i32 [ %27, %21 ], [ -1, %11 ], [ -1, %2 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9courgette20DisassemblerWin32X867EmitAbsEPNS_5LabelEPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32X86"* nocapture readnone, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.courgette::InstructionReceptor"* %2 to i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)***
  %5 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)**, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %5, i64 8
  %7 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.courgette::InstructionReceptor"* %2, %"class.courgette::Label"* %1) #7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette20DisassemblerWin32X8627ParseRel32RelocsFromSectionEPKNS_7SectionE(%"class.courgette::DisassemblerWin32X86"*, %"struct.courgette::Section"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.courgette::Rel32FinderX86", align 8
  %4 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 0, i64 0
  %5 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %56

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp ult i32 %13, %14
  %16 = select i1 %15, i32 %13, i32 %14
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, %10
  %19 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.courgette::DisassemblerWin32X86"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %21 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %21, i64 2
  %23 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %22, align 8
  %24 = tail call i8* %23(%"class.courgette::Disassembler"* %19, i64 %10) #7
  %25 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %20, align 8
  %26 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %25, i64 2
  %27 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %26, align 8
  %28 = tail call i8* %27(%"class.courgette::Disassembler"* %19, i64 %18) #7
  %29 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0
  %30 = bitcast %"class.courgette::DisassemblerWin32X86"* %0 to i32 (%"class.courgette::DisassemblerWin32"*, i64)***
  %31 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)**, i32 (%"class.courgette::DisassemblerWin32"*, i64)*** %30, align 8
  %32 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)*, i32 (%"class.courgette::DisassemblerWin32"*, i64)** %31, align 8
  %33 = tail call i32 %32(%"class.courgette::DisassemblerWin32"* %29, i64 %10) #7
  %34 = load i32, i32* %11, align 1
  %35 = add i32 %34, %33
  %36 = bitcast %"class.courgette::Rel32FinderX86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #7
  %37 = getelementptr inbounds %"class.courgette::Rel32FinderX86", %"class.courgette::Rel32FinderX86"* %3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.courgette::Rel32FinderX86", %"class.courgette::Rel32FinderX86"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %39 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 22, i32 0
  %40 = bitcast %"class.courgette::Rel32FinderX86"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %41 = load i32, i32* %39, align 4
  %42 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 22, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, %41
  call void @_ZN9courgette14Rel32FinderX86C1Ejj(%"class.courgette::Rel32FinderX86"* nonnull %3, i32 %41, i32 %44) #7
  %45 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 2
  call void @_ZN9courgette14Rel32FinderX864FindEPKhS2_jjRKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.courgette::Rel32FinderX86"* nonnull %3, i8* %24, i8* %28, i32 %33, i32 %35, %"class.std::__1::vector"* dereferenceable(24) %45) #7
  %46 = getelementptr inbounds %"class.courgette::Rel32FinderX86", %"class.courgette::Rel32FinderX86"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 3
  call void @_ZN9courgette11Rel32Finder18SwapRel32LocationsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::Rel32Finder"* nonnull %46, %"class.std::__1::vector"* %47) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %48 = load i32*, i32** %38, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %7
  %51 = getelementptr inbounds %"class.courgette::Rel32FinderX86", %"class.courgette::Rel32FinderX86"* %3, i64 0, i32 0, i32 3, i32 0, i32 1
  %52 = ptrtoint i32* %48 to i64
  %53 = bitcast i32** %51 to i64*
  store i64 %52, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %7, %50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #7
  br label %56

56:                                               ; preds = %2, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN9courgette14Rel32FinderX86C1Ejj(%"class.courgette::Rel32FinderX86"*, i32, i32) unnamed_addr #1

declare void @_ZN9courgette14Rel32FinderX864FindEPKhS2_jjRKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.courgette::Rel32FinderX86"*, i8*, i8*, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN9courgette11Rel32Finder18SwapRel32LocationsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::Rel32Finder"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD2Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm(%"class.courgette::DisassemblerWin32"*, i64) unnamed_addr #1

declare i64 @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj(%"class.courgette::DisassemblerWin32"*, i32) unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm(%"class.courgette::Disassembler"*, i64) unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler12RVAToPointerEj(%"class.courgette::Disassembler"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette17DisassemblerWin32D2Ev(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  tail call void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* %21) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette20DisassemblerWin32X86D0Ev(%"class.courgette::DisassemblerWin32X86"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.courgette::DisassemblerWin32X86", %"class.courgette::DisassemblerWin32X86"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* %21) #7
  %22 = bitcast %"class.courgette::DisassemblerWin32X86"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9courgette20DisassemblerWin32X864kindEv(%"class.courgette::DisassemblerWin32X86"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK9courgette17DisassemblerWin3210image_baseEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 15
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare void @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE(%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*) unnamed_addr #1

declare zeroext i1 @_ZN9courgette17DisassemblerWin3211ParseHeaderEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare void @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9courgette20DisassemblerWin32X8610AbsVAWidthEv(%"class.courgette::DisassemblerWin32X86"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK9courgette20DisassemblerWin32X8620SupportsRelTableTypeEi(%"class.courgette::DisassemblerWin32X86"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 3
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZNK9courgette20DisassemblerWin32X8631RelativeOffsetOfDataDirectoriesEv(%"class.courgette::DisassemblerWin32X86"*) unnamed_addr #0 comdat align 2 {
  ret i16 96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD0Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind
declare void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
