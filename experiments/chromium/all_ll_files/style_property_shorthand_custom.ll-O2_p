; ModuleID = '../../third_party/blink/renderer/core/css/style_property_shorthand_custom.cc'
source_filename = "../../third_party/blink/renderer/core/css/style_property_shorthand_custom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::StylePropertyShorthand" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::StylePropertyShorthand"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties = internal global [4 x %"class.blink::CSSProperty"*] zeroinitializer, align 16
@_ZGVZN5blink29transitionShorthandForParsingEvE21kTransitionProperties = internal global i64 0, align 8
@_ZZN5blink29transitionShorthandForParsingEvE20transition_longhands = internal global %"class.blink::StylePropertyShorthand" { %"class.blink::CSSProperty"** getelementptr inbounds ([4 x %"class.blink::CSSProperty"*], [4 x %"class.blink::CSSProperty"*]* @_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties, i32 0, i32 0), i32 4, i32 515 }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN5blink29transitionShorthandForParsingEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink29transitionShorthandForParsingEvE21kTransitionProperties to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink29transitionShorthandForParsingEvE21kTransitionProperties) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTransitionDurationEv() #5
  store %"class.blink::CSSProperty"* %7, %"class.blink::CSSProperty"** getelementptr inbounds ([4 x %"class.blink::CSSProperty"*], [4 x %"class.blink::CSSProperty"*]* @_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties, i64 0, i64 0), align 16
  %8 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink38GetCSSPropertyTransitionTimingFunctionEv() #5
  store %"class.blink::CSSProperty"* %8, %"class.blink::CSSProperty"** getelementptr inbounds ([4 x %"class.blink::CSSProperty"*], [4 x %"class.blink::CSSProperty"*]* @_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties, i64 0, i64 1), align 8
  %9 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyTransitionDelayEv() #5
  store %"class.blink::CSSProperty"* %9, %"class.blink::CSSProperty"** getelementptr inbounds ([4 x %"class.blink::CSSProperty"*], [4 x %"class.blink::CSSProperty"*]* @_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties, i64 0, i64 2), align 16
  %10 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTransitionPropertyEv() #5
  store %"class.blink::CSSProperty"* %10, %"class.blink::CSSProperty"** getelementptr inbounds ([4 x %"class.blink::CSSProperty"*], [4 x %"class.blink::CSSProperty"*]* @_ZZN5blink29transitionShorthandForParsingEvE21kTransitionProperties, i64 0, i64 3), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink29transitionShorthandForParsingEvE21kTransitionProperties) #5
  br label %11

11:                                               ; preds = %3, %6, %0
  ret %"class.blink::StylePropertyShorthand"* @_ZZN5blink29transitionShorthandForParsingEvE20transition_longhands
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTransitionDurationEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink38GetCSSPropertyTransitionTimingFunctionEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyTransitionDelayEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink32GetCSSPropertyTransitionPropertyEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27indexOfShorthandForLonghandENS_13CSSPropertyIDERKN3WTF6VectorINS_22StylePropertyShorthandELj4ENS1_18PartitionAllocatorEEE(i32, %"class.WTF::Vector"* dereferenceable(80)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2, %12
  %7 = phi i32 [ %13, %12 ], [ 0, %2 ]
  %8 = tail call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZNK3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %7)
  %9 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %0
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = add nuw i32 %7, 1
  %14 = load i32, i32* %3, align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %6, label %16

16:                                               ; preds = %6, %12, %2
  %17 = phi i32 [ 0, %2 ], [ 0, %12 ], [ %7, %6 ]
  ret i32 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZNK3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::StylePropertyShorthand"*, %"class.blink::StylePropertyShorthand"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %24, i64 %25
  ret %"class.blink::StylePropertyShorthand"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
