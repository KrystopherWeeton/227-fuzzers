; ModuleID = '../../cc/trees/debug_rect_history.cc'
source_filename = "../../cc/trees/debug_rect_history.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.cc::DebugRectHistory" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"*, %"class.std::__1::__compressed_pair.0" }
%"struct.cc::DebugRect" = type { i32, %"class.gfx::Rect", i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.cc::DebugRect"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.1083", %class.scoped_refptr.1084, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.1090, %"class.std::__1::vector.1094", %"class.std::__1::unordered_map.1107", %"class.base::internal::flat_tree.1131", %"class.std::__1::unordered_map.1139", %"class.std::__1::unordered_map.1163", %"class.std::__1::unordered_map.1187", %"class.std::__1::unordered_map.1187", %"class.base::flat_map.1211", %"class.std::__1::vector.1221", %"class.base::internal::flat_tree.1310", %"class.base::internal::flat_tree.605", %"class.std::__1::vector.1311", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.127", %"class.std::__1::vector.127", %"class.std::__1::vector.1318", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1325, %class.scoped_refptr.1325, %"class.std::__1::unique_ptr.1330", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.640", %"class.std::__1::vector.763", %"class.std::__1::unique_ptr.1336", %"class.std::__1::vector.1342" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.115", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.gfx::Vector2dF", %"class.std::__1::vector.127", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.419", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.std::__1::set.488", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.498", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.539", %"class.base::RepeatingCallback.341", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.545", i8, i8, i8, i32, %"class.std::__1::unique_ptr.555", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.561", %"class.std::__1::vector.567", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.599", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.605", %"class.absl::optional.618", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.95", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.693", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.771", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.814", %"class.base::WeakPtrFactory.821" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.55, %class.scoped_refptr.56, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.57", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.55 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.56 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.64", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.64" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.95", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.103" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.85"*, i64 }
%"class.std::__1::unique_ptr.85" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.103" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.110" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.110" = type { %"class.base::internal::VectorBuffer.111", i64, i64 }
%"class.base::internal::VectorBuffer.111" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.cc::LayerTreeImpl"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.135", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.141", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.368", %"class.std::__1::vector.223", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.406", %"class.base::WeakPtrFactory.406" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.141" = type { %"class.std::__1::__hash_table.142" }
%"class.std::__1::__hash_table.142" = type <{ %"class.std::__1::unique_ptr.143", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.146"** }
%"struct.std::__1::__hash_node_base.146" = type { %"struct.std::__1::__hash_node_base.146"* }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::__bucket_list_deallocator.148" }
%"class.std::__1::__bucket_list_deallocator.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base.146" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.168, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.170", %"class.base::flat_map.200", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.210", %"class.std::__1::map.210", i8, %"class.std::__1::vector.219", %"class.base::WeakPtrFactory.235" }
%class.scoped_refptr.168 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.195" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.190", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.173, %"class.gfx::Rect", i32, %class.sk_sp.178, %class.sk_sp.186, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.187 }
%class.sk_sp.173 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.174", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { i8* }
%class.sk_sp.178 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.179" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.172, i32, i32 }
%class.sk_sp.172 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.65" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.181" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.186 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.187 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.188", [4 x i8] }>
%"class.base::RefCountedThreadSafe.188" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.189 }
%union.anon.189 = type { i64 }
%"class.absl::optional.190" = type { %"class.absl::optional_internal::optional_data.191" }
%"class.absl::optional_internal::optional_data.191" = type { %"class.absl::optional_internal::optional_data_base.192" }
%"class.absl::optional_internal::optional_data_base.192" = type { %"class.absl::optional_internal::optional_data_dtor_base.193" }
%"class.absl::optional_internal::optional_data_dtor_base.193" = type { i8, %union.anon.194 }
%union.anon.194 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.200" = type { %"class.base::internal::flat_tree.201" }
%"class.base::internal::flat_tree.201" = type { %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.std::__1::pair.204"*, %"struct.std::__1::pair.204"*, %"class.std::__1::__compressed_pair.205" }
%"struct.std::__1::pair.204" = type opaque
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::pair.204"* }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.230" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.221, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.99", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.99" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.221 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.223", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.222", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.222" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.235" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.236", i8, %class.scoped_refptr.168, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.246" }
%"class.base::flat_map.236" = type { %"class.base::internal::flat_tree.237" }
%"class.base::internal::flat_tree.237" = type { %"class.std::__1::vector.238" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.std::__1::pair.240"*, %"struct.std::__1::pair.240"*, %"class.std::__1::__compressed_pair.241" }
%"struct.std::__1::pair.240" = type { i32, %"class.std::__1::unique_ptr.1366" }
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::pair.240"* }
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.247", %"class.base::internal::flat_tree.247", %"class.std::__1::vector.255", i32, %"class.absl::optional.262", %"class.std::__1::unordered_map.267", %"class.std::__1::unordered_map.291", %"class.base::flat_map.315", %"class.base::WeakPtrFactory.325" }
%"class.base::internal::flat_tree.247" = type { %"class.std::__1::vector.248" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { i32*, i32*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { i32* }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.257" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.311", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::flat_map.315" = type { %"class.base::internal::flat_tree.316" }
%"class.base::internal::flat_tree.316" = type { %"class.std::__1::vector.317" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.std::__1::pair.319"*, %"struct.std::__1::pair.319"*, %"class.std::__1::__compressed_pair.320" }
%"struct.std::__1::pair.319" = type { i32, i32 }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::pair.319"* }
%"class.base::WeakPtrFactory.325" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.326", %"class.std::__1::vector.334" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.329" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.328, i16, i16, i32 }
%class.scoped_refptr.328 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.336" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.341", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.342" }
%"class.base::WeakPtrFactory.342" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.343" }
%"class.std::__1::__hash_table.343" = type <{ %"class.std::__1::unique_ptr.344", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.363", [4 x i8] }>
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346", %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.347"** }
%"struct.std::__1::__hash_node_base.347" = type { %"struct.std::__1::__hash_node_base.347"* }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.std::__1::__bucket_list_deallocator.349" }
%"class.std::__1::__bucket_list_deallocator.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.std::__1::__hash_node_base.347" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.368" = type { %"class.std::__1::__hash_table.369" }
%"class.std::__1::__hash_table.369" = type <{ %"class.std::__1::unique_ptr.370", %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.388", [4 x i8] }>
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372", %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.373"** }
%"struct.std::__1::__hash_node_base.373" = type { %"struct.std::__1::__hash_node_base.373"* }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.std::__1::__bucket_list_deallocator.375" }
%"class.std::__1::__bucket_list_deallocator.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::__hash_node_base.373" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %class.scoped_refptr.221*, %class.scoped_refptr.221*, %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.scoped_refptr.221* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.392" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.398", %"class.base::WeakPtrFactory.399" }
%"class.base::OnceCallback.398" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.399" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.400, i8, [7 x i8] }>
%class.scoped_refptr.400 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.401", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.401" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.402" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.base::WeakPtrFactory.406" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.410", %"class.absl::optional.410", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"struct.std::__1::pair.415" }
%"struct.std::__1::pair.415" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.435", %"class.absl::optional.435", %"class.absl::optional.435", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.454, %"class.absl::optional.455", %"class.std::__1::map.460" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.431" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.425"**, %"struct.std::__1::pair.425"**, %"struct.std::__1::pair.425"**, %"class.std::__1::__compressed_pair.426" }
%"struct.std::__1::pair.425" = type opaque
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::pair.425"** }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.435" = type { %"class.absl::optional_internal::optional_data.436" }
%"class.absl::optional_internal::optional_data.436" = type { %"class.absl::optional_internal::optional_data_base.437" }
%"class.absl::optional_internal::optional_data_base.437" = type { %"class.absl::optional_internal::optional_data_dtor_base.438" }
%"class.absl::optional_internal::optional_data_dtor_base.438" = type { i8, %union.anon.439 }
%union.anon.439 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.440", %"class.base::circular_deque.441", %"class.std::__1::map.443", %"class.absl::optional" }
%"class.base::RepeatingCallback.440" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.441" = type { %"class.base::internal::VectorBuffer.442", i64, i64 }
%"class.base::internal::VectorBuffer.442" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.443" = type { %"class.std::__1::__tree.444" }
%"class.std::__1::__tree.444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%struct.anon.454 = type { double, double }
%"class.absl::optional.455" = type { %"class.absl::optional_internal::optional_data.456" }
%"class.absl::optional_internal::optional_data.456" = type { %"class.absl::optional_internal::optional_data_base.457" }
%"class.absl::optional_internal::optional_data_base.457" = type { %"class.absl::optional_internal::optional_data_dtor_base.458" }
%"class.absl::optional_internal::optional_data_dtor_base.458" = type { i8, %union.anon.459 }
%union.anon.459 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.472" }
%"class.base::RingBuffer.472" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::DebugRectHistory"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.488" = type { %"class.std::__1::__tree.489" }
%"class.std::__1::__tree.489" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.490", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.498" = type { %"class.std::__1::__hash_table.499" }
%"class.std::__1::__hash_table.499" = type <{ %"class.std::__1::unique_ptr.500", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.518", [4 x i8] }>
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502", %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.std::__1::__hash_node_base.503"** }
%"struct.std::__1::__hash_node_base.503" = type { %"struct.std::__1::__hash_node_base.503"* }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.std::__1::__bucket_list_deallocator.505" }
%"class.std::__1::__bucket_list_deallocator.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.503" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.531" }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %"class.std::__1::unique_ptr.533"*, %"class.std::__1::unique_ptr.533"*, %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::unique_ptr.533" = type opaque
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.std::__1::unique_ptr.533"* }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.341" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.545" = type { %"class.std::__1::__tree.546" }
%"class.std::__1::__tree.546" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.567" = type { %"class.std::__1::__vector_base.568" }
%"class.std::__1::__vector_base.568" = type { %"struct.std::__1::pair.569"*, %"struct.std::__1::pair.569"*, %"class.std::__1::__compressed_pair.570" }
%"struct.std::__1::pair.569" = type opaque
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::pair.569"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.575", %"class.base::internal::flat_tree.247", %"class.base::internal::flat_tree.247", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.575" = type { %"class.base::internal::flat_tree.576" }
%"class.base::internal::flat_tree.576" = type { %"class.std::__1::vector.577" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"struct.std::__1::pair.579"*, %"struct.std::__1::pair.579"*, %"class.std::__1::__compressed_pair.580" }
%"struct.std::__1::pair.579" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.179", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1372", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1372" = type { %"class.std::__1::vector.1373" }
%"class.std::__1::vector.1373" = type { %"class.std::__1::__vector_base.1374" }
%"class.std::__1::__vector_base.1374" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1375" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::pair.579"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.585", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.586" }
%"class.base::RepeatingCallback.585" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.586" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.590" }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.618" = type { %"class.absl::optional_internal::optional_data.619" }
%"class.absl::optional_internal::optional_data.619" = type { %"class.absl::optional_internal::optional_data_base.620" }
%"class.absl::optional_internal::optional_data_base.620" = type { %"class.absl::optional_internal::optional_data_dtor_base.621" }
%"class.absl::optional_internal::optional_data_dtor_base.621" = type { i8, [7 x i8], %union.anon.622 }
%union.anon.622 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.623", %"struct.viz::Selection", i8, %"class.absl::optional.628", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.633", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.628" = type { %"class.absl::optional_internal::optional_data.629" }
%"class.absl::optional_internal::optional_data.629" = type { %"class.absl::optional_internal::optional_data_base.630" }
%"class.absl::optional_internal::optional_data_base.630" = type { %"class.absl::optional_internal::optional_data_dtor_base.631" }
%"class.absl::optional_internal::optional_data_dtor_base.631" = type { i8, %union.anon.632 }
%union.anon.632 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.633" = type { %"class.absl::optional_internal::optional_data.634" }
%"class.absl::optional_internal::optional_data.634" = type { %"class.absl::optional_internal::optional_data_base.635" }
%"class.absl::optional_internal::optional_data_base.635" = type { %"class.absl::optional_internal::optional_data_dtor_base.636" }
%"class.absl::optional_internal::optional_data_dtor_base.636" = type { i8, %union.anon.637 }
%union.anon.637 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.638" }
%"class.base::circular_deque.638" = type { %"class.base::internal::VectorBuffer.639", i64, i64 }
%"class.base::internal::VectorBuffer.639" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.640", %"class.std::__1::vector.640" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.648", %"class.base::flat_map.654", %"class.base::flat_map.664", %"class.base::RepeatingCallback.674", %"class.std::__1::vector.675", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.683", i64, i64 }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.654" = type { %"class.base::internal::flat_tree.655" }
%"class.base::internal::flat_tree.655" = type { %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"struct.std::__1::pair.658"*, %"struct.std::__1::pair.658"*, %"class.std::__1::__compressed_pair.659" }
%"struct.std::__1::pair.658" = type opaque
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"struct.std::__1::pair.658"* }
%"class.base::flat_map.664" = type { %"class.base::internal::flat_tree.665" }
%"class.base::internal::flat_tree.665" = type { %"class.std::__1::vector.666" }
%"class.std::__1::vector.666" = type { %"class.std::__1::__vector_base.667" }
%"class.std::__1::__vector_base.667" = type { %"struct.std::__1::pair.668"*, %"struct.std::__1::pair.668"*, %"class.std::__1::__compressed_pair.669" }
%"struct.std::__1::pair.668" = type opaque
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"struct.std::__1::pair.668"* }
%"class.base::RepeatingCallback.674" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.675" = type { %"class.std::__1::__vector_base.676" }
%"class.std::__1::__vector_base.676" = type { %"class.std::__1::unique_ptr.677"*, %"class.std::__1::unique_ptr.677"*, %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::unique_ptr.677" = type opaque
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.std::__1::unique_ptr.677"* }
%"class.base::flat_map.683" = type { %"class.base::internal::flat_tree.684" }
%"class.base::internal::flat_tree.684" = type { %"class.std::__1::vector.685" }
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"struct.std::__1::pair.687"*, %"struct.std::__1::pair.687"*, %"class.std::__1::__compressed_pair.688" }
%"struct.std::__1::pair.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"struct.std::__1::pair.687"* }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.699", %"class.base::internal::flat_tree.709" }
%"class.base::flat_map.699" = type { %"class.base::internal::flat_tree.700" }
%"class.base::internal::flat_tree.700" = type { %"class.std::__1::vector.701" }
%"class.std::__1::vector.701" = type { %"class.std::__1::__vector_base.702" }
%"class.std::__1::__vector_base.702" = type { %"struct.std::__1::pair.703"*, %"struct.std::__1::pair.703"*, %"class.std::__1::__compressed_pair.704" }
%"struct.std::__1::pair.703" = type opaque
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.std::__1::pair.703"* }
%"class.base::internal::flat_tree.709" = type { %"class.std::__1::vector.710" }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.722" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.712", %"class.absl::optional.717", %"struct.cc::ElementId" }
%"class.absl::optional.712" = type { %"class.absl::optional_internal::optional_data.713" }
%"class.absl::optional_internal::optional_data.713" = type { %"class.absl::optional_internal::optional_data_base.714" }
%"class.absl::optional_internal::optional_data_base.714" = type { %"class.absl::optional_internal::optional_data_dtor_base.715" }
%"class.absl::optional_internal::optional_data_dtor_base.715" = type { i8, %union.anon.716 }
%union.anon.716 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, %union.anon.721 }
%union.anon.721 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.739" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.727", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.727" = type { %"class.std::__1::__deque_base.728" }
%"class.std::__1::__deque_base.728" = type { %"struct.std::__1::__split_buffer.729", i64, %"class.std::__1::__compressed_pair.735" }
%"struct.std::__1::__split_buffer.729" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.730" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.base::circular_deque.739" = type { %"class.base::internal::VectorBuffer.740", i64, i64 }
%"class.base::internal::VectorBuffer.740" = type { %"struct.std::__1::pair.741"*, i64 }
%"struct.std::__1::pair.741" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.742", %"class.std::__1::map.747", %"class.std::__1::map.747" }
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, [3 x i8], %union.anon.746 }
%union.anon.746 = type { %"class.gfx::Transform" }
%"class.std::__1::map.747" = type { %"class.std::__1::__tree.748" }
%"class.std::__1::__tree.748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.756", %"class.std::__1::vector.763" }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.758" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.341", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.777" }
%"class.base::WeakPtrFactory.777" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.778", %"class.std::__1::map.785", i64 }
%"class.std::__1::list.778" = type { %"class.std::__1::__list_imp.779" }
%"class.std::__1::__list_imp.779" = type { %"struct.std::__1::__list_node_base.780", %"class.std::__1::__compressed_pair.781" }
%"struct.std::__1::__list_node_base.780" = type { %"struct.std::__1::__list_node_base.780"*, %"struct.std::__1::__list_node_base.780"* }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::map.785" = type { %"class.std::__1::__tree.786" }
%"class.std::__1::__tree.786" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.787", %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.796", %"class.base::internal::flat_tree.806", %"class.base::internal::flat_tree.806" }
%"class.base::flat_map.796" = type { %"class.base::internal::flat_tree.797" }
%"class.base::internal::flat_tree.797" = type { %"class.std::__1::vector.798" }
%"class.std::__1::vector.798" = type { %"class.std::__1::__vector_base.799" }
%"class.std::__1::__vector_base.799" = type { %"struct.std::__1::pair.800"*, %"struct.std::__1::pair.800"*, %"class.std::__1::__compressed_pair.801" }
%"struct.std::__1::pair.800" = type opaque
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"struct.std::__1::pair.800"* }
%"class.base::internal::flat_tree.806" = type { %"class.std::__1::vector.807" }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.809" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { i32*, i32*, %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { i32* }
%"class.base::WeakPtrFactory.821" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.897", %"class.base::flat_map.897", %"class.base::flat_map.897", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.897" = type { %"class.base::internal::flat_tree.898" }
%"class.base::internal::flat_tree.898" = type { %"class.std::__1::vector.899" }
%"class.std::__1::vector.899" = type { %"class.std::__1::__vector_base.900" }
%"class.std::__1::__vector_base.900" = type { %"struct.std::__1::pair.901"*, %"struct.std::__1::pair.901"*, %"class.std::__1::__compressed_pair.902" }
%"struct.std::__1::pair.901" = type opaque
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::pair.901"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.248", %"class.std::__1::vector.914", %"class.std::__1::vector.921" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.907", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.907" = type { %"class.std::__1::__vector_base.908" }
%"class.std::__1::__vector_base.908" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.909" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.914" = type { %"class.std::__1::__vector_base.915" }
%"class.std::__1::__vector_base.915" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.916" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.921" = type { %"class.std::__1::__vector_base.922" }
%"class.std::__1::__vector_base.922" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.923" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.928", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.979" }
%"class.cc::PropertyTree.928" = type { i32 (...)**, %"class.std::__1::vector.929", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.929" = type { %"class.std::__1::__vector_base.930" }
%"class.std::__1::__vector_base.930" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.951" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.945", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.931" }
%"class.std::__1::vector.931" = type { %"class.std::__1::__vector_base.932" }
%"class.std::__1::__vector_base.932" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.940" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.933, [20 x float], i32, [4 x i8], %"class.std::__1::vector.879", i32, [4 x i8] }>
%class.sk_sp.933 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.934, i32, %"class.absl::optional.935", i8, i32 }
%class.sk_sp.934 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.935" = type { %"class.absl::optional_internal::optional_data.936" }
%"class.absl::optional_internal::optional_data.936" = type { %"class.absl::optional_internal::optional_data_base.937" }
%"class.absl::optional_internal::optional_data_base.937" = type { %"class.absl::optional_internal::optional_data_dtor_base.938" }
%"class.absl::optional_internal::optional_data_dtor_base.938" = type { i8, %union.anon.939 }
%union.anon.939 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.879" = type { %"class.std::__1::__vector_base.880" }
%"class.std::__1::__vector_base.880" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.945" = type { %"class.absl::optional_internal::optional_data.946" }
%"class.absl::optional_internal::optional_data.946" = type { %"class.absl::optional_internal::optional_data_base.947" }
%"class.absl::optional_internal::optional_data_base.947" = type { %"class.absl::optional_internal::optional_data_dtor_base.948" }
%"class.absl::optional_internal::optional_data_dtor_base.948" = type { i8, %union.anon.949 }
%union.anon.949 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.950" }
%"class.base::internal::flat_tree.950" = type { %"class.std::__1::vector.814" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.956" }
%"class.std::__1::__hash_table.956" = type <{ %"class.std::__1::unique_ptr.957", %"class.std::__1::__compressed_pair.967", %"class.std::__1::__compressed_pair.972", %"class.std::__1::__compressed_pair.975", [4 x i8] }>
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959", %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::__hash_node_base.960"** }
%"struct.std::__1::__hash_node_base.960" = type { %"struct.std::__1::__hash_node_base.960"* }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.std::__1::__bucket_list_deallocator.962" }
%"class.std::__1::__bucket_list_deallocator.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"struct.std::__1::__hash_node_base.960" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::vector.979" = type { %"class.std::__1::__vector_base.980" }
%"class.std::__1::__vector_base.980" = type { %"class.std::__1::unique_ptr.981"*, %"class.std::__1::unique_ptr.981"*, %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.984" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type { %"class.std::__1::vector.987", %"class.std::__1::vector.994", i32, %"class.cc::DamageTracker::DamageAccumulator", i8, %"class.cc::DamageTracker::DamageAccumulator", %"class.std::__1::vector.1001" }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { %"struct.cc::DamageTracker::LayerRectMapData"*, %"struct.cc::DamageTracker::LayerRectMapData"*, %"class.std::__1::__compressed_pair.989" }
%"struct.cc::DamageTracker::LayerRectMapData" = type { i32, i32, %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.cc::DamageTracker::LayerRectMapData"* }
%"class.std::__1::vector.994" = type { %"class.std::__1::__vector_base.995" }
%"class.std::__1::__vector_base.995" = type { %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"struct.cc::DamageTracker::SurfaceRectMapData"*, %"class.std::__1::__compressed_pair.996" }
%"struct.cc::DamageTracker::SurfaceRectMapData" = type <{ i64, i32, %"class.gfx::Rect", [4 x i8] }>
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.cc::DamageTracker::SurfaceRectMapData"* }
%"class.cc::DamageTracker::DamageAccumulator" = type { i8, i32, i32, i32, i32 }
%"class.std::__1::vector.1001" = type { %"class.std::__1::__vector_base.1002" }
%"class.std::__1::__vector_base.1002" = type { %"struct.cc::DamageTracker::SurfaceWithRect"*, %"struct.cc::DamageTracker::SurfaceWithRect"*, %"class.std::__1::__compressed_pair.1003" }
%"struct.cc::DamageTracker::SurfaceWithRect" = type { %"class.cc::RenderSurfaceImpl"*, %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.cc::DamageTracker::SurfaceWithRect"* }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.std::__1::unique_ptr.981"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.1019" }
%"class.cc::PropertyTree.1019" = type { i32 (...)**, %"class.std::__1::vector.1020", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.1022" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.1027", i32, %"class.base::flat_map.1047", %"class.base::flat_map.1057", %"class.base::WeakPtr.1067" }
%"class.cc::PropertyTree.1027" = type { i32 (...)**, %"class.std::__1::vector.1028", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.1042" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.1030", i8, [7 x i8] }>
%"class.absl::optional.1030" = type { %"class.absl::optional_internal::optional_data.1031" }
%"class.absl::optional_internal::optional_data.1031" = type { %"class.absl::optional_internal::optional_data_base.1032" }
%"class.absl::optional_internal::optional_data_base.1032" = type { %"class.absl::optional_internal::optional_data_dtor_base.1033" }
%"class.absl::optional_internal::optional_data_dtor_base.1033" = type { i8, %union.anon.1034 }
%union.anon.1034 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1035", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1037" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.1047" = type { %"class.base::internal::flat_tree.1048" }
%"class.base::internal::flat_tree.1048" = type { %"class.std::__1::vector.1049" }
%"class.std::__1::vector.1049" = type { %"class.std::__1::__vector_base.1050" }
%"class.std::__1::__vector_base.1050" = type { %"struct.std::__1::pair.1051"*, %"struct.std::__1::pair.1051"*, %"class.std::__1::__compressed_pair.1052" }
%"struct.std::__1::pair.1051" = type opaque
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.std::__1::pair.1051"* }
%"class.base::flat_map.1057" = type { %"class.base::internal::flat_tree.1058" }
%"class.base::internal::flat_tree.1058" = type { %"class.std::__1::vector.1059" }
%"class.std::__1::vector.1059" = type { %"class.std::__1::__vector_base.1060" }
%"class.std::__1::__vector_base.1060" = type { %"struct.std::__1::pair.1061"*, %"struct.std::__1::pair.1061"*, %"class.std::__1::__compressed_pair.1062" }
%"struct.std::__1::pair.1061" = type opaque
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"struct.std::__1::pair.1061"* }
%"class.base::WeakPtr.1067" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.1068", %"class.std::__1::vector.1075" }
%"class.std::__1::vector.1068" = type { %"class.std::__1::__vector_base.1069" }
%"class.std::__1::__vector_base.1069" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"class.std::__1::vector.1077"*, %"class.std::__1::vector.1077"*, %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::vector.1077" = type opaque
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.std::__1::vector.1077"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.1083" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.1084 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1085" }
%"class.absl::optional.1085" = type { %"class.absl::optional_internal::optional_data.1086" }
%"class.absl::optional_internal::optional_data.1086" = type { %"class.absl::optional_internal::optional_data_base.1087" }
%"class.absl::optional_internal::optional_data_base.1087" = type { %"class.absl::optional_internal::optional_data_dtor_base.1088" }
%"class.absl::optional_internal::optional_data_dtor_base.1088" = type { i8, %union.anon.1089 }
%union.anon.1089 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1090 = type { %"class.cc::SyncedProperty.1091"* }
%"class.cc::SyncedProperty.1091" = type <{ %"class.base::RefCounted.1092", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.1092" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.1094" = type { %"class.std::__1::__vector_base.1095" }
%"class.std::__1::__vector_base.1095" = type { %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.852", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.822" }
%"class.base::flat_map.822" = type { %"class.base::internal::flat_tree.823" }
%"class.base::internal::flat_tree.823" = type { %"class.std::__1::vector.824" }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.835", %"class.std::__1::vector.835", %"class.std::__1::vector.842" }
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { i8**, i8**, %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { i8** }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.844" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.std::__1::unique_ptr.1096"* }
%"class.std::__1::unordered_map.1107" = type { %"class.std::__1::__hash_table.1108" }
%"class.std::__1::__hash_table.1108" = type <{ %"class.std::__1::unique_ptr.1109", %"class.std::__1::__compressed_pair.1119", %"class.std::__1::__compressed_pair.1124", %"class.std::__1::__compressed_pair.1127", [4 x i8] }>
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111", %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1112"** }
%"struct.std::__1::__hash_node_base.1112" = type { %"struct.std::__1::__hash_node_base.1112"* }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.std::__1::__bucket_list_deallocator.1114" }
%"class.std::__1::__bucket_list_deallocator.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"struct.std::__1::__hash_node_base.1112" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::internal::flat_tree.1131" = type { %"class.std::__1::vector.1132" }
%"class.std::__1::vector.1132" = type { %"class.std::__1::__vector_base.1133" }
%"class.std::__1::__vector_base.1133" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1139" = type { %"class.std::__1::__hash_table.1140" }
%"class.std::__1::__hash_table.1140" = type <{ %"class.std::__1::unique_ptr.1141", %"class.std::__1::__compressed_pair.1151", %"class.std::__1::__compressed_pair.1156", %"class.std::__1::__compressed_pair.1159", [4 x i8] }>
%"class.std::__1::unique_ptr.1141" = type { %"class.std::__1::__compressed_pair.1142" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143", %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.std::__1::__hash_node_base.1144"** }
%"struct.std::__1::__hash_node_base.1144" = type { %"struct.std::__1::__hash_node_base.1144"* }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.std::__1::__bucket_list_deallocator.1146" }
%"class.std::__1::__bucket_list_deallocator.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1144" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.1163" = type { %"class.std::__1::__hash_table.1164" }
%"class.std::__1::__hash_table.1164" = type <{ %"class.std::__1::unique_ptr.1165", %"class.std::__1::__compressed_pair.1175", %"class.std::__1::__compressed_pair.1180", %"class.std::__1::__compressed_pair.1183", [4 x i8] }>
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167", %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.std::__1::__hash_node_base.1168"** }
%"struct.std::__1::__hash_node_base.1168" = type { %"struct.std::__1::__hash_node_base.1168"* }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.std::__1::__bucket_list_deallocator.1170" }
%"class.std::__1::__bucket_list_deallocator.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.std::__1::__hash_node_base.1168" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map.1187" = type { %"class.std::__1::__hash_table.1188" }
%"class.std::__1::__hash_table.1188" = type <{ %"class.std::__1::unique_ptr.1189", %"class.std::__1::__compressed_pair.1199", %"class.std::__1::__compressed_pair.1204", %"class.std::__1::__compressed_pair.1207", [4 x i8] }>
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191", %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"struct.std::__1::__hash_node_base.1192"** }
%"struct.std::__1::__hash_node_base.1192" = type { %"struct.std::__1::__hash_node_base.1192"* }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.std::__1::__bucket_list_deallocator.1194" }
%"class.std::__1::__bucket_list_deallocator.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"struct.std::__1::__hash_node_base.1192" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::flat_map.1211" = type { %"class.base::internal::flat_tree.1212" }
%"class.base::internal::flat_tree.1212" = type { %"class.std::__1::vector.1213" }
%"class.std::__1::vector.1213" = type { %"class.std::__1::__vector_base.1214" }
%"class.std::__1::__vector_base.1214" = type { %"struct.std::__1::pair.1215"*, %"struct.std::__1::pair.1215"*, %"class.std::__1::__compressed_pair.1216" }
%"struct.std::__1::pair.1215" = type opaque
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"struct.std::__1::pair.1215"* }
%"class.std::__1::vector.1221" = type { %"class.std::__1::__vector_base.1222" }
%"class.std::__1::__vector_base.1222" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1305" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1223", %class.scoped_refptr.1231, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1283", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1288", %"class.base::flat_map.1295", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.852", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1226", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1268", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1231, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1226" = type { %"class.std::__1::__vector_base.1227" }
%"class.std::__1::__vector_base.1227" = type { %"class.std::__1::unique_ptr.1228"*, %"class.std::__1::unique_ptr.1228"*, %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1231, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1234", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1234" = type { %"class.std::__1::__hash_table.1235" }
%"class.std::__1::__hash_table.1235" = type <{ %"class.std::__1::unique_ptr.1236", %"class.std::__1::__compressed_pair.1246", %"class.std::__1::__compressed_pair.1251", %"class.std::__1::__compressed_pair.1254", [4 x i8] }>
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238", %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"struct.std::__1::__hash_node_base.1239"** }
%"struct.std::__1::__hash_node_base.1239" = type { %"struct.std::__1::__hash_node_base.1239"* }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.std::__1::__bucket_list_deallocator.1241" }
%"class.std::__1::__bucket_list_deallocator.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"struct.std::__1::__hash_node_base.1239" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.std::__1::unique_ptr.1228"* }
%"class.std::__1::deque.1268" = type { %"class.std::__1::__deque_base.1269" }
%"class.std::__1::__deque_base.1269" = type { %"struct.std::__1::__split_buffer.1270", i64, %"class.std::__1::__compressed_pair.1276" }
%"struct.std::__1::__split_buffer.1270" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1271" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1231 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1232", [4 x i8], i64, %class.scoped_refptr.1233, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1232" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1233 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1283" = type { %"class.absl::optional_internal::optional_data.1284" }
%"class.absl::optional_internal::optional_data.1284" = type { %"class.absl::optional_internal::optional_data_base.1285" }
%"class.absl::optional_internal::optional_data_base.1285" = type { %"class.absl::optional_internal::optional_data_dtor_base.1286" }
%"class.absl::optional_internal::optional_data_dtor_base.1286" = type { i8, %union.anon.1287 }
%union.anon.1287 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1288" = type { %"class.std::__1::__vector_base.1289" }
%"class.std::__1::__vector_base.1289" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1295" = type { %"class.base::internal::flat_tree.1296" }
%"class.base::internal::flat_tree.1296" = type { %"class.std::__1::vector.1297" }
%"class.std::__1::vector.1297" = type { %"class.std::__1::__vector_base.1298" }
%"class.std::__1::__vector_base.1298" = type { %"struct.std::__1::pair.1299"*, %"struct.std::__1::pair.1299"*, %"class.std::__1::__compressed_pair.1300" }
%"struct.std::__1::pair.1299" = type opaque
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.std::__1::pair.1299"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1310" = type { %"class.std::__1::vector.1221" }
%"class.base::internal::flat_tree.605" = type { %"class.std::__1::vector.606" }
%"class.std::__1::vector.606" = type { %"class.std::__1::__vector_base.607" }
%"class.std::__1::__vector_base.607" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.613" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.608", %"class.viz::SurfaceId" }
%"class.absl::optional.608" = type { %"class.absl::optional_internal::optional_data.609" }
%"class.absl::optional_internal::optional_data.609" = type { %"class.absl::optional_internal::optional_data_base.610" }
%"class.absl::optional_internal::optional_data_base.610" = type { %"class.absl::optional_internal::optional_data_dtor_base.611" }
%"class.absl::optional_internal::optional_data_dtor_base.611" = type { i8, %union.anon.612 }
%union.anon.612 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1311" = type { %"class.std::__1::__vector_base.1312" }
%"class.std::__1::__vector_base.1312" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.std::__1::unique_ptr.129"*, %"class.std::__1::unique_ptr.129"*, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::unique_ptr.129"* }
%"class.std::__1::vector.1318" = type { %"class.std::__1::__vector_base.1319" }
%"class.std::__1::__vector_base.1319" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1320" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1325 = type { %"class.cc::SyncedProperty.1326"* }
%"class.cc::SyncedProperty.1326" = type <{ %"class.base::RefCounted.1327", %"class.cc::AdditionGroup.1328", %"class.cc::AdditionGroup.1328", %"class.cc::AdditionGroup.1328", %"class.cc::AdditionGroup.1328", %"class.cc::AdditionGroup.1328", i8, [3 x i8] }>
%"class.base::RefCounted.1327" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1328" = type { float }
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.640" = type { %"class.std::__1::__vector_base.641" }
%"class.std::__1::__vector_base.641" = type { %"class.base::OnceCallback.642"*, %"class.base::OnceCallback.642"*, %"class.std::__1::__compressed_pair.643" }
%"class.base::OnceCallback.642" = type opaque
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.base::OnceCallback.642"* }
%"class.std::__1::vector.763" = type { %"class.std::__1::__vector_base.764" }
%"class.std::__1::__vector_base.764" = type { %"class.std::__1::unique_ptr.765"*, %"class.std::__1::unique_ptr.765"*, %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1353", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1353" = type { %"class.absl::optional_internal::optional_data.1354" }
%"class.absl::optional_internal::optional_data.1354" = type { %"class.absl::optional_internal::optional_data_base.1355" }
%"class.absl::optional_internal::optional_data_base.1355" = type { %"class.absl::optional_internal::optional_data_dtor_base.1356" }
%"class.absl::optional_internal::optional_data_dtor_base.1356" = type { i8, %union.anon.1357 }
%union.anon.1357 = type { i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.std::__1::unique_ptr.765"* }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %"class.std::__1::unique_ptr.1344"*, %"class.std::__1::unique_ptr.1344"*, %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::unique_ptr.1344" = type opaque
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.std::__1::unique_ptr.1344"* }
%"class.cc::HeadsUpDisplayLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::ResourcePool::InUsePoolResource", %"class.std::__1::unique_ptr.82", %"class.viz::DrawQuad"*, %class.sk_sp.877, %class.sk_sp.878, %"class.std::__1::vector.879", float, %"class.gfx::Size", i32, %"class.absl::optional.886", %"struct.cc::MemoryHistory::Entry", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::unique_ptr.891", %"class.base::TimeTicks" }
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.858", %"class.std::__1::unique_ptr.866" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.861", i64 }
%"class.util::IdType.861" = type { %"class.base::StrongAlias.862" }
%"class.base::StrongAlias.862" = type { i64 }
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.872", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional", float, i8, [3 x i8] }>
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { %"class.gfx::Rect" }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%class.sk_sp.877 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.878 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.absl::optional.886" = type { %"class.absl::optional_internal::optional_data.887" }
%"class.absl::optional_internal::optional_data.887" = type { %"class.absl::optional_internal::optional_data_base.888" }
%"class.absl::optional_internal::optional_data_base.888" = type { %"class.absl::optional_internal::optional_data_dtor_base.889" }
%"class.absl::optional_internal::optional_data_dtor_base.889" = type { i8, %union.anon.890 }
%union.anon.890 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.cc::WebVitalMetrics"* }
%"struct.cc::WebVitalMetrics" = type { i8, %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, double }
%"class.cc::Region::Iterator" = type { %"class.SkRegion::Iterator" }
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN8features18kWheelEventRegionsE = external global %"struct.base::Feature", align 8

@_ZN2cc16DebugRectHistoryC1Ev = hidden unnamed_addr alias void (%"class.cc::DebugRectHistory"*), void (%"class.cc::DebugRectHistory"*)* @_ZN2cc16DebugRectHistoryC2Ev
@_ZN2cc16DebugRectHistoryD1Ev = hidden unnamed_addr alias void (%"class.cc::DebugRectHistory"*), void (%"class.cc::DebugRectHistory"*)* @_ZN2cc16DebugRectHistoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.cc::DebugRectHistory"* @_ZN2cc16DebugRectHistory6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 24) #7
  %2 = bitcast i8* %1 to %"class.cc::DebugRectHistory"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 24, i1 false) #8
  ret %"class.cc::DebugRectHistory"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistoryC2Ev(%"class.cc::DebugRectHistory"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::DebugRectHistory"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistoryD2Ev(%"class.cc::DebugRectHistory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %2, align 8
  %4 = icmp eq %"struct.cc::DebugRect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::DebugRect"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.cc::DebugRect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::DebugRect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory29SaveDebugRectsForCurrentFrameEPNS_13LayerTreeImplEPNS_23HeadsUpDisplayLayerImplERKNSt3__16vectorIPNS_17RenderSurfaceImplENS5_9allocatorIS8_EEEERKNS_19LayerTreeDebugStateE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"*, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.std::__1::vector.1311"* nocapture readonly dereferenceable(24), %"class.cc::LayerTreeDebugState"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.cc::DebugRect"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 8
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.1096"* %15, %17
  br i1 %18, label %25, label %19

19:                                               ; preds = %13, %19
  %20 = phi %"class.std::__1::unique_ptr.1096"* [ %23, %19 ], [ %15, %13 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %21, align 8
  tail call void @_ZN2cc16DebugRectHistory34SaveTouchEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %22) #8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %20, i64 1
  %24 = icmp eq %"class.std::__1::unique_ptr.1096"* %23, %17
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %13, %5
  %26 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 9
  %27 = load i8, i8* %26, align 2, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN2cc16DebugRectHistory26SaveWheelEventHandlerRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerTreeImpl"* %1)
  br label %30

30:                                               ; preds = %25, %29
  %31 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 10
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %35, align 8
  %37 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.1096"* %36, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %34, %40
  %41 = phi %"class.std::__1::unique_ptr.1096"* [ %44, %40 ], [ %36, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %42, align 8
  tail call void @_ZN2cc16DebugRectHistory35SaveScrollEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %43) #8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %41, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.1096"* %44, %38
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %34, %30
  %47 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 11
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %51, align 8
  %53 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %54 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %53, align 8
  %55 = icmp eq %"class.std::__1::unique_ptr.1096"* %52, %54
  br i1 %55, label %62, label %56

56:                                               ; preds = %50, %56
  %57 = phi %"class.std::__1::unique_ptr.1096"* [ %60, %56 ], [ %52, %50 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %58, align 8
  tail call void @_ZN2cc16DebugRectHistory34SaveNonFastScrollableRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %59) #8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %57, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.1096"* %60, %54
  br i1 %61, label %62, label %56

62:                                               ; preds = %56, %50, %46
  %63 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 12
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  tail call void @_ZN2cc16DebugRectHistory34SaveMainThreadScrollingReasonRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerTreeImpl"* %1)
  br label %67

67:                                               ; preds = %62, %66
  %68 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 3
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_ZN2cc16DebugRectHistory20SaveLayoutShiftRectsEPNS_23HeadsUpDisplayLayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::HeadsUpDisplayLayerImpl"* %2)
  br label %72

72:                                               ; preds = %67, %71
  %73 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 4
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @_ZN2cc16DebugRectHistory14SavePaintRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerTreeImpl"* %1)
  br label %77

77:                                               ; preds = %72, %76
  %78 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 5
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.cc::HeadsUpDisplayLayerImpl"* %2 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc16DebugRectHistory24SavePropertyChangedRectsEPNS_13LayerTreeImplEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerTreeImpl"* %1, %"class.cc::LayerImpl"* %82)
  br label %83

83:                                               ; preds = %77, %81
  %84 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 6
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN2cc16DebugRectHistory22SaveSurfaceDamageRectsERKNSt3__16vectorIPNS_17RenderSurfaceImplENS1_9allocatorIS4_EEEE(%"class.cc::DebugRectHistory"* %0, %"class.std::__1::vector.1311"* dereferenceable(24) %3)
  br label %88

88:                                               ; preds = %83, %87
  %89 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %4, i64 0, i32 7
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  tail call void @_ZN2cc16DebugRectHistory20SaveScreenSpaceRectsERKNSt3__16vectorIPNS_17RenderSurfaceImplENS1_9allocatorIS4_EEEE(%"class.cc::DebugRectHistory"* %0, %"class.std::__1::vector.1311"* dereferenceable(24) %3)
  br label %93

93:                                               ; preds = %88, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory26SaveTouchEventHandlerRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.1096"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::unique_ptr.1096"* [ %13, %9 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %11, align 8
  tail call void @_ZN2cc16DebugRectHistory34SaveTouchEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %12)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 1
  %14 = icmp eq %"class.std::__1::unique_ptr.1096"* %13, %6
  br i1 %14, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory26SaveWheelEventHandlerRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::Region::Iterator", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kWheelEventRegionsE) #8
  br i1 %8, label %9, label %121

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.1096"* %11, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.cc::Region::Iterator"* %3 to i8*
  %17 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0, i32 3
  %18 = bitcast { i64, i64 }* %4 to i8*
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0, i32 2
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %22 = bitcast %"class.gfx::Transform"* %6 to i8*
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.cc::DebugRect"** %23 to i64*
  %26 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %27 = bitcast %"struct.cc::DebugRect"** %24 to i64*
  %28 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0
  %30 = bitcast { i64, i64 }* %4 to i8*
  br label %32

31:                                               ; preds = %39, %9, %121, %125, %220
  ret void

32:                                               ; preds = %15, %39
  %33 = phi %"class.std::__1::unique_ptr.1096"* [ %11, %15 ], [ %40, %39 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %35, i64 0, i32 14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc6Region5beginEv(%"class.cc::Region::Iterator"* nonnull sret %3, %"class.cc::Region"* %36) #8
  %37 = load i8, i8* %17, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %118, %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %33, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.1096"* %40, %13
  br i1 %41, label %31, label %32

42:                                               ; preds = %32, %118
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %43 = call { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16) %20) #8
  %44 = extractvalue { i64, i64 } %43, 0
  store i64 %44, i64* %21, align 8
  %45 = extractvalue { i64, i64 } %43, 1
  store i64 %45, i64* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %22) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %6, %"class.cc::LayerImpl"* %35) #8
  %46 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #8
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = extractvalue { i64, i64 } %46, 1
  %49 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %50 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %24, align 8
  %51 = icmp ult %"struct.cc::DebugRect"* %49, %50
  %52 = ptrtoint %"struct.cc::DebugRect"* %50 to i64
  br i1 %51, label %53, label %63

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 0, i32 0
  store i32 5, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 0, i32 1
  %56 = bitcast %"class.gfx::Rect"* %55 to i64*
  store i64 %47, i64* %56, align 4
  %57 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 0, i32 1, i32 1
  %58 = bitcast %"class.gfx::Size"* %57 to i64*
  store i64 %48, i64* %58, align 4
  %59 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 0, i32 2
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 0, i32 3
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %49, i64 1
  %62 = ptrtoint %"struct.cc::DebugRect"* %61 to i64
  store i64 %62, i64* %25, align 8
  br label %118

63:                                               ; preds = %42
  %64 = ptrtoint %"struct.cc::DebugRect"* %49 to i64
  %65 = load i64, i64* %26, align 8
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 28
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 658812288346769700
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #9
  unreachable

72:                                               ; preds = %63
  %73 = sub i64 %52, %65
  %74 = sdiv exact i64 %73, 28
  %75 = icmp ult i64 %74, 329406144173384850
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = shl nsw i64 %74, 1
  %78 = icmp ult i64 %77, %68
  %79 = select i1 %78, i64 %68, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %76, %72
  %82 = phi i64 [ %79, %76 ], [ 658812288346769700, %72 ]
  %83 = mul i64 %82, 28
  %84 = call i8* @_Znwm(i64 %83) #7
  %85 = bitcast i8* %84 to %"struct.cc::DebugRect"*
  br label %86

86:                                               ; preds = %81, %76
  %87 = phi i64 [ %82, %81 ], [ 0, %76 ]
  %88 = phi %"struct.cc::DebugRect"* [ %85, %81 ], [ null, %76 ]
  %89 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %67
  %90 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %87
  %91 = ptrtoint %"struct.cc::DebugRect"* %90 to i64
  %92 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %89, i64 0, i32 0
  store i32 5, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %67, i32 1
  %94 = bitcast %"class.gfx::Rect"* %93 to i64*
  store i64 %47, i64* %94, align 4
  %95 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %67, i32 1, i32 1
  %96 = bitcast %"class.gfx::Size"* %95 to i64*
  store i64 %48, i64* %96, align 4
  %97 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %67, i32 2
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %88, i64 %67, i32 3
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %89, i64 1
  %100 = ptrtoint %"struct.cc::DebugRect"* %99 to i64
  %101 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %28, align 8
  %102 = load i64, i64* %25, align 8
  %103 = ptrtoint %"struct.cc::DebugRect"* %101 to i64
  %104 = sub i64 %102, %103
  %105 = sdiv exact i64 %104, -28
  %106 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %89, i64 %105
  %107 = ptrtoint %"struct.cc::DebugRect"* %106 to i64
  %108 = icmp sgt i64 %104, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %86
  %110 = bitcast %"struct.cc::DebugRect"* %106 to i8*
  %111 = bitcast %"struct.cc::DebugRect"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %104, i1 false) #8
  %112 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %28, align 8
  br label %113

113:                                              ; preds = %109, %86
  %114 = phi %"struct.cc::DebugRect"* [ %101, %86 ], [ %112, %109 ]
  store i64 %107, i64* %26, align 8
  store i64 %100, i64* %25, align 8
  store i64 %91, i64* %27, align 8
  %115 = icmp eq %"struct.cc::DebugRect"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = bitcast %"struct.cc::DebugRect"* %114 to i8*
  call void @_ZdlPv(i8* %117) #7
  br label %118

118:                                              ; preds = %53, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %29) #8
  %119 = load i8, i8* %17, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %42, label %39

121:                                              ; preds = %2
  %122 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 46, i64 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i32 %123, 2
  br i1 %124, label %31, label %125

125:                                              ; preds = %121
  %126 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %1) #8
  %127 = icmp eq %"struct.cc::ScrollNode"* %126, null
  br i1 %127, label %31, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 5, i32 3
  %130 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %126, i64 0, i32 9
  %131 = load i32, i32* %130, align 8
  %132 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"* %129, i32 %131) #8
  %133 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #8
  %134 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %126, i64 0, i32 4
  %135 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  store i32 0, i32* %136, align 4
  %137 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1
  %138 = bitcast %"class.gfx::Size"* %134 to i64*
  %139 = bitcast %"class.gfx::Size"* %137 to i64*
  %140 = load i64, i64* %138, align 4
  store i64 %140, i64* %139, align 4
  %141 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %132, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #8
  %142 = extractvalue { i64, i64 } %141, 0
  %143 = extractvalue { i64, i64 } %141, 1
  %144 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %145 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %144, align 8
  %146 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %147 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %146, align 8
  %148 = icmp ult %"struct.cc::DebugRect"* %145, %147
  %149 = ptrtoint %"struct.cc::DebugRect"* %147 to i64
  br i1 %148, label %150, label %161

150:                                              ; preds = %128
  %151 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 0, i32 0
  store i32 5, i32* %151, align 4
  %152 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 0, i32 1
  %153 = bitcast %"class.gfx::Rect"* %152 to i64*
  store i64 %142, i64* %153, align 4
  %154 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 0, i32 1, i32 1
  %155 = bitcast %"class.gfx::Size"* %154 to i64*
  store i64 %143, i64* %155, align 4
  %156 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 0, i32 2
  store i32 0, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 0, i32 3
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %145, i64 1
  %159 = ptrtoint %"struct.cc::DebugRect"* %158 to i64
  %160 = bitcast %"struct.cc::DebugRect"** %144 to i64*
  store i64 %159, i64* %160, align 8
  br label %220

161:                                              ; preds = %128
  %162 = ptrtoint %"struct.cc::DebugRect"* %145 to i64
  %163 = bitcast %"struct.cc::DebugRect"** %144 to i64*
  %164 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %162, %165
  %167 = sdiv exact i64 %166, 28
  %168 = add nsw i64 %167, 1
  %169 = icmp ugt i64 %168, 658812288346769700
  br i1 %169, label %170, label %172

170:                                              ; preds = %161
  %171 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #9
  unreachable

172:                                              ; preds = %161
  %173 = bitcast %"struct.cc::DebugRect"** %146 to i64*
  %174 = sub i64 %149, %165
  %175 = sdiv exact i64 %174, 28
  %176 = icmp ult i64 %175, 329406144173384850
  br i1 %176, label %177, label %182

177:                                              ; preds = %172
  %178 = shl nsw i64 %175, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %187, label %182

182:                                              ; preds = %177, %172
  %183 = phi i64 [ %180, %177 ], [ 658812288346769700, %172 ]
  %184 = mul i64 %183, 28
  %185 = call i8* @_Znwm(i64 %184) #7
  %186 = bitcast i8* %185 to %"struct.cc::DebugRect"*
  br label %187

187:                                              ; preds = %182, %177
  %188 = phi i64 [ %183, %182 ], [ 0, %177 ]
  %189 = phi %"struct.cc::DebugRect"* [ %186, %182 ], [ null, %177 ]
  %190 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %167
  %191 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %188
  %192 = ptrtoint %"struct.cc::DebugRect"* %191 to i64
  %193 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %190, i64 0, i32 0
  store i32 5, i32* %193, align 4
  %194 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %167, i32 1
  %195 = bitcast %"class.gfx::Rect"* %194 to i64*
  store i64 %142, i64* %195, align 4
  %196 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %167, i32 1, i32 1
  %197 = bitcast %"class.gfx::Size"* %196 to i64*
  store i64 %143, i64* %197, align 4
  %198 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %167, i32 2
  store i32 0, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %189, i64 %167, i32 3
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %190, i64 1
  %201 = ptrtoint %"struct.cc::DebugRect"* %200 to i64
  %202 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %202, align 8
  %204 = load i64, i64* %163, align 8
  %205 = ptrtoint %"struct.cc::DebugRect"* %203 to i64
  %206 = sub i64 %204, %205
  %207 = sdiv exact i64 %206, -28
  %208 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %190, i64 %207
  %209 = ptrtoint %"struct.cc::DebugRect"* %208 to i64
  %210 = icmp sgt i64 %206, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %187
  %212 = bitcast %"struct.cc::DebugRect"* %208 to i8*
  %213 = bitcast %"struct.cc::DebugRect"* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 %206, i1 false) #8
  %214 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %202, align 8
  br label %215

215:                                              ; preds = %211, %187
  %216 = phi %"struct.cc::DebugRect"* [ %203, %187 ], [ %214, %211 ]
  store i64 %209, i64* %164, align 8
  store i64 %201, i64* %163, align 8
  store i64 %192, i64* %173, align 8
  %217 = icmp eq %"struct.cc::DebugRect"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %215
  %219 = bitcast %"struct.cc::DebugRect"* %216 to i8*
  call void @_ZdlPv(i8* %219) #7
  br label %220

220:                                              ; preds = %150, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #8
  br label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory27SaveScrollEventHandlerRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.1096"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::unique_ptr.1096"* [ %13, %9 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %11, align 8
  tail call void @_ZN2cc16DebugRectHistory35SaveScrollEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %12)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 1
  %14 = icmp eq %"class.std::__1::unique_ptr.1096"* %13, %6
  br i1 %14, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory26SaveNonFastScrollableRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.1096"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::unique_ptr.1096"* [ %13, %9 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %11, align 8
  tail call void @_ZN2cc16DebugRectHistory34SaveNonFastScrollableRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"* %0, %"class.cc::LayerImpl"* %12)
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %10, i64 1
  %14 = icmp eq %"class.std::__1::unique_ptr.1096"* %13, %6
  br i1 %14, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory34SaveMainThreadScrollingReasonRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 5, i32 6
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.1096"* %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.gfx::Transform"* %3 to i8*
  %13 = bitcast %"class.gfx::Rect"* %4 to i8*
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %17 = bitcast %"class.gfx::Size"* %16 to i64*
  %18 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.cc::DebugRect"** %18 to i64*
  %21 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %22 = bitcast %"struct.cc::DebugRect"** %19 to i64*
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %112, %2
  ret void

25:                                               ; preds = %11, %112
  %26 = phi %"class.std::__1::unique_ptr.1096"* [ %7, %11 ], [ %113, %112 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %28, i64 0, i32 23, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = call %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %5, i64 %30) #8
  %32 = icmp eq %"struct.cc::ScrollNode"* %31, null
  br i1 %32, label %112, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %31, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %112, label %37

37:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %3, %"class.cc::LayerImpl"* %28) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %38 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %28) #8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i64 %38, i64* %17, align 4
  %39 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #8
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %18, align 8
  %43 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %19, align 8
  %44 = icmp ult %"struct.cc::DebugRect"* %42, %43
  %45 = ptrtoint %"struct.cc::DebugRect"* %43 to i64
  br i1 %44, label %46, label %56

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 0
  store i32 8, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 1
  %49 = bitcast %"class.gfx::Rect"* %48 to i64*
  store i64 %40, i64* %49, align 4
  %50 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 1, i32 1
  %51 = bitcast %"class.gfx::Size"* %50 to i64*
  store i64 %41, i64* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 2
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 3
  store i32 %35, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 1
  %55 = ptrtoint %"struct.cc::DebugRect"* %54 to i64
  store i64 %55, i64* %20, align 8
  br label %111

56:                                               ; preds = %37
  %57 = ptrtoint %"struct.cc::DebugRect"* %42 to i64
  %58 = load i64, i64* %21, align 8
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 28
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 658812288346769700
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #9
  unreachable

65:                                               ; preds = %56
  %66 = sub i64 %45, %58
  %67 = sdiv exact i64 %66, 28
  %68 = icmp ult i64 %67, 329406144173384850
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %65
  %75 = phi i64 [ %72, %69 ], [ 658812288346769700, %65 ]
  %76 = mul i64 %75, 28
  %77 = call i8* @_Znwm(i64 %76) #7
  %78 = bitcast i8* %77 to %"struct.cc::DebugRect"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.cc::DebugRect"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60
  %83 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %80
  %84 = ptrtoint %"struct.cc::DebugRect"* %83 to i64
  %85 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 0, i32 0
  store i32 8, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 1
  %87 = bitcast %"class.gfx::Rect"* %86 to i64*
  store i64 %40, i64* %87, align 4
  %88 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 1, i32 1
  %89 = bitcast %"class.gfx::Size"* %88 to i64*
  store i64 %41, i64* %89, align 4
  %90 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 2
  store i32 0, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 3
  store i32 %35, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 1
  %93 = ptrtoint %"struct.cc::DebugRect"* %92 to i64
  %94 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %95 = load i64, i64* %20, align 8
  %96 = ptrtoint %"struct.cc::DebugRect"* %94 to i64
  %97 = sub i64 %95, %96
  %98 = sdiv exact i64 %97, -28
  %99 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 %98
  %100 = ptrtoint %"struct.cc::DebugRect"* %99 to i64
  %101 = icmp sgt i64 %97, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %79
  %103 = bitcast %"struct.cc::DebugRect"* %99 to i8*
  %104 = bitcast %"struct.cc::DebugRect"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %97, i1 false) #8
  %105 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  br label %106

106:                                              ; preds = %102, %79
  %107 = phi %"struct.cc::DebugRect"* [ %94, %79 ], [ %105, %102 ]
  store i64 %100, i64* %21, align 8
  store i64 %93, i64* %20, align 8
  store i64 %84, i64* %22, align 8
  %108 = icmp eq %"struct.cc::DebugRect"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  %110 = bitcast %"struct.cc::DebugRect"* %107 to i8*
  call void @_ZdlPv(i8* %110) #7
  br label %111

111:                                              ; preds = %46, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #8
  br label %112

112:                                              ; preds = %111, %33, %25
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %26, i64 1
  %114 = icmp eq %"class.std::__1::unique_ptr.1096"* %113, %9
  br i1 %114, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory20SaveLayoutShiftRectsEPNS_23HeadsUpDisplayLayerImplE(%"class.cc::DebugRectHistory"*, %"class.cc::HeadsUpDisplayLayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = tail call dereferenceable(24) %"class.std::__1::vector.879"* @_ZNK2cc23HeadsUpDisplayLayerImpl16LayoutShiftRectsEv(%"class.cc::HeadsUpDisplayLayerImpl"* %1) #8
  %6 = getelementptr inbounds %"class.std::__1::vector.879", %"class.std::__1::vector.879"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.879", %"class.std::__1::vector.879"* %5, i64 0, i32 0, i32 1
  %9 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %8, align 8
  %10 = icmp eq %"class.gfx::Rect"* %7, %9
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.gfx::Rect"* %3 to i8*
  %13 = bitcast %"class.gfx::Transform"* %4 to i8*
  %14 = bitcast %"class.cc::HeadsUpDisplayLayerImpl"* %1 to %"class.cc::LayerImpl"*
  %15 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.cc::DebugRect"** %15 to i64*
  %18 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %19 = bitcast %"struct.cc::DebugRect"** %16 to i64*
  %20 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %97, %2
  call void @_ZN2cc23HeadsUpDisplayLayerImpl21ClearLayoutShiftRectsEv(%"class.cc::HeadsUpDisplayLayerImpl"* %1) #8
  ret void

22:                                               ; preds = %11, %97
  %23 = phi %"class.gfx::Rect"* [ %7, %11 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %24 = bitcast %"class.gfx::Rect"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %24, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %13) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %4, %"class.cc::LayerImpl"* %14) #8
  %25 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #8
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = extractvalue { i64, i64 } %25, 1
  %28 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %15, align 8
  %29 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %16, align 8
  %30 = icmp ult %"struct.cc::DebugRect"* %28, %29
  %31 = ptrtoint %"struct.cc::DebugRect"* %29 to i64
  br i1 %30, label %32, label %42

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 0, i32 0
  store i32 10, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 0, i32 1
  %35 = bitcast %"class.gfx::Rect"* %34 to i64*
  store i64 %26, i64* %35, align 4
  %36 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 0, i32 1, i32 1
  %37 = bitcast %"class.gfx::Size"* %36 to i64*
  store i64 %27, i64* %37, align 4
  %38 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 0, i32 2
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 0, i32 3
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %28, i64 1
  %41 = ptrtoint %"struct.cc::DebugRect"* %40 to i64
  store i64 %41, i64* %17, align 8
  br label %97

42:                                               ; preds = %22
  %43 = ptrtoint %"struct.cc::DebugRect"* %28 to i64
  %44 = load i64, i64* %18, align 8
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 28
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 658812288346769700
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #9
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %31, %44
  %53 = sdiv exact i64 %52, 28
  %54 = icmp ult i64 %53, 329406144173384850
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = shl nsw i64 %53, 1
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55, %51
  %61 = phi i64 [ %58, %55 ], [ 658812288346769700, %51 ]
  %62 = mul i64 %61, 28
  %63 = call i8* @_Znwm(i64 %62) #7
  %64 = bitcast i8* %63 to %"struct.cc::DebugRect"*
  br label %65

65:                                               ; preds = %60, %55
  %66 = phi i64 [ %61, %60 ], [ 0, %55 ]
  %67 = phi %"struct.cc::DebugRect"* [ %64, %60 ], [ null, %55 ]
  %68 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %46
  %69 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %66
  %70 = ptrtoint %"struct.cc::DebugRect"* %69 to i64
  %71 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %68, i64 0, i32 0
  store i32 10, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %46, i32 1
  %73 = bitcast %"class.gfx::Rect"* %72 to i64*
  store i64 %26, i64* %73, align 4
  %74 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %46, i32 1, i32 1
  %75 = bitcast %"class.gfx::Size"* %74 to i64*
  store i64 %27, i64* %75, align 4
  %76 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %46, i32 2
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %46, i32 3
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %68, i64 1
  %79 = ptrtoint %"struct.cc::DebugRect"* %78 to i64
  %80 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %20, align 8
  %81 = load i64, i64* %17, align 8
  %82 = ptrtoint %"struct.cc::DebugRect"* %80 to i64
  %83 = sub i64 %81, %82
  %84 = sdiv exact i64 %83, -28
  %85 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %68, i64 %84
  %86 = ptrtoint %"struct.cc::DebugRect"* %85 to i64
  %87 = icmp sgt i64 %83, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %65
  %89 = bitcast %"struct.cc::DebugRect"* %85 to i8*
  %90 = bitcast %"struct.cc::DebugRect"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 %83, i1 false) #8
  %91 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %20, align 8
  br label %92

92:                                               ; preds = %88, %65
  %93 = phi %"struct.cc::DebugRect"* [ %80, %65 ], [ %91, %88 ]
  store i64 %86, i64* %18, align 8
  store i64 %79, i64* %17, align 8
  store i64 %70, i64* %19, align 8
  %94 = icmp eq %"struct.cc::DebugRect"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.cc::DebugRect"* %93 to i8*
  call void @_ZdlPv(i8* %96) #7
  br label %97

97:                                               ; preds = %32, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %23, i64 1
  %99 = icmp eq %"class.gfx::Rect"* %98, %9
  br i1 %99, label %21, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory14SavePaintRectsEPNS_13LayerTreeImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::Region", align 8
  %4 = alloca %"class.cc::Region::Iterator", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.1096"* %9, %11
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.cc::Region"* %3 to i8*
  %15 = bitcast %"class.cc::Region::Iterator"* %4 to i8*
  %16 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0, i32 3
  %17 = bitcast { i64, i64 }* %5 to i8*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %19 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %21 = bitcast %"class.gfx::Transform"* %7 to i8*
  %22 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.cc::DebugRect"** %22 to i64*
  %25 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %26 = bitcast %"struct.cc::DebugRect"** %23 to i64*
  %27 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0
  %29 = bitcast %"class.cc::Region"* %3 to i8*
  %30 = bitcast { i64, i64 }* %5 to i8*
  br label %32

31:                                               ; preds = %129, %2
  ret void

32:                                               ; preds = %13, %129
  %33 = phi %"class.std::__1::unique_ptr.1096"* [ %9, %13 ], [ %130, %129 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %36 = bitcast %"class.cc::LayerImpl"* %35 to void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %37 = load void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)**, void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)** %37, i64 24
  %39 = load void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)** %38, align 8
  call void %39(%"class.cc::Region"* nonnull sret %3, %"class.cc::LayerImpl"* %35) #8
  %40 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* nonnull %3) #8
  br i1 %40, label %129, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %35, i64 0, i32 10
  %43 = load i16, i16* %42, align 4
  %44 = trunc i16 %43 to i8
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %129

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc6Region5beginEv(%"class.cc::Region::Iterator"* nonnull sret %4, %"class.cc::Region"* nonnull %3) #8
  %47 = load i8, i8* %16, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %126, %46
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #8
  br label %129

50:                                               ; preds = %46, %126
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %51 = call { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16) %19) #8
  %52 = extractvalue { i64, i64 } %51, 0
  store i64 %52, i64* %20, align 8
  %53 = extractvalue { i64, i64 } %51, 1
  store i64 %53, i64* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %21) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %7, %"class.cc::LayerImpl"* %35) #8
  %54 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #8
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = extractvalue { i64, i64 } %54, 1
  %57 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %22, align 8
  %58 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %59 = icmp ult %"struct.cc::DebugRect"* %57, %58
  %60 = ptrtoint %"struct.cc::DebugRect"* %58 to i64
  br i1 %59, label %61, label %71

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 0, i32 0
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 0, i32 1
  %64 = bitcast %"class.gfx::Rect"* %63 to i64*
  store i64 %55, i64* %64, align 4
  %65 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 0, i32 1, i32 1
  %66 = bitcast %"class.gfx::Size"* %65 to i64*
  store i64 %56, i64* %66, align 4
  %67 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 0, i32 2
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 0, i32 3
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %57, i64 1
  %70 = ptrtoint %"struct.cc::DebugRect"* %69 to i64
  store i64 %70, i64* %24, align 8
  br label %126

71:                                               ; preds = %50
  %72 = ptrtoint %"struct.cc::DebugRect"* %57 to i64
  %73 = load i64, i64* %25, align 8
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, 28
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 658812288346769700
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #9
  unreachable

80:                                               ; preds = %71
  %81 = sub i64 %60, %73
  %82 = sdiv exact i64 %81, 28
  %83 = icmp ult i64 %82, 329406144173384850
  br i1 %83, label %84, label %89

84:                                               ; preds = %80
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84, %80
  %90 = phi i64 [ %87, %84 ], [ 658812288346769700, %80 ]
  %91 = mul i64 %90, 28
  %92 = call i8* @_Znwm(i64 %91) #7
  %93 = bitcast i8* %92 to %"struct.cc::DebugRect"*
  br label %94

94:                                               ; preds = %89, %84
  %95 = phi i64 [ %90, %89 ], [ 0, %84 ]
  %96 = phi %"struct.cc::DebugRect"* [ %93, %89 ], [ null, %84 ]
  %97 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %75
  %98 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %95
  %99 = ptrtoint %"struct.cc::DebugRect"* %98 to i64
  %100 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %97, i64 0, i32 0
  store i32 0, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %75, i32 1
  %102 = bitcast %"class.gfx::Rect"* %101 to i64*
  store i64 %55, i64* %102, align 4
  %103 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %75, i32 1, i32 1
  %104 = bitcast %"class.gfx::Size"* %103 to i64*
  store i64 %56, i64* %104, align 4
  %105 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %75, i32 2
  store i32 0, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %96, i64 %75, i32 3
  store i32 0, i32* %106, align 4
  %107 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %97, i64 1
  %108 = ptrtoint %"struct.cc::DebugRect"* %107 to i64
  %109 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %27, align 8
  %110 = load i64, i64* %24, align 8
  %111 = ptrtoint %"struct.cc::DebugRect"* %109 to i64
  %112 = sub i64 %110, %111
  %113 = sdiv exact i64 %112, -28
  %114 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %97, i64 %113
  %115 = ptrtoint %"struct.cc::DebugRect"* %114 to i64
  %116 = icmp sgt i64 %112, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %94
  %118 = bitcast %"struct.cc::DebugRect"* %114 to i8*
  %119 = bitcast %"struct.cc::DebugRect"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %112, i1 false) #8
  %120 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %27, align 8
  br label %121

121:                                              ; preds = %117, %94
  %122 = phi %"struct.cc::DebugRect"* [ %109, %94 ], [ %120, %117 ]
  store i64 %115, i64* %25, align 8
  store i64 %108, i64* %24, align 8
  store i64 %99, i64* %26, align 8
  %123 = icmp eq %"struct.cc::DebugRect"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = bitcast %"struct.cc::DebugRect"* %122 to i8*
  call void @_ZdlPv(i8* %125) #7
  br label %126

126:                                              ; preds = %61, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %28) #8
  %127 = load i8, i8* %16, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %50, label %49

129:                                              ; preds = %41, %32, %49
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %33, i64 1
  %131 = icmp eq %"class.std::__1::unique_ptr.1096"* %130, %11
  br i1 %131, label %31, label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory24SavePropertyChangedRectsEPNS_13LayerTreeImplEPNS_9LayerImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerTreeImpl"* nocapture readonly, %"class.cc::LayerImpl"* readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.1096"*, %"class.std::__1::unique_ptr.1096"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.1096"* %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.gfx::Transform"* %4 to i8*
  %13 = bitcast %"class.gfx::Rect"* %5 to i8*
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %17 = bitcast %"class.gfx::Size"* %16 to i64*
  %18 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.cc::DebugRect"** %18 to i64*
  %21 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %22 = bitcast %"struct.cc::DebugRect"** %19 to i64*
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %107, %3
  ret void

25:                                               ; preds = %11, %107
  %26 = phi %"class.std::__1::unique_ptr.1096"* [ %7, %11 ], [ %108, %107 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %27, align 8
  %29 = icmp eq %"class.cc::LayerImpl"* %28, %2
  br i1 %29, label %107, label %30

30:                                               ; preds = %25
  %31 = call zeroext i1 @_ZNK2cc9LayerImpl20LayerPropertyChangedEv(%"class.cc::LayerImpl"* %28) #8
  br i1 %31, label %32, label %107

32:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %4, %"class.cc::LayerImpl"* %28) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %33 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %28) #8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i64 %33, i64* %17, align 4
  %34 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #8
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  %37 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %18, align 8
  %38 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %19, align 8
  %39 = icmp ult %"struct.cc::DebugRect"* %37, %38
  %40 = ptrtoint %"struct.cc::DebugRect"* %38 to i64
  br i1 %39, label %41, label %51

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 0, i32 0
  store i32 1, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 0, i32 1
  %44 = bitcast %"class.gfx::Rect"* %43 to i64*
  store i64 %35, i64* %44, align 4
  %45 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 0, i32 1, i32 1
  %46 = bitcast %"class.gfx::Size"* %45 to i64*
  store i64 %36, i64* %46, align 4
  %47 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 0, i32 2
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 0, i32 3
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %37, i64 1
  %50 = ptrtoint %"struct.cc::DebugRect"* %49 to i64
  store i64 %50, i64* %20, align 8
  br label %106

51:                                               ; preds = %32
  %52 = ptrtoint %"struct.cc::DebugRect"* %37 to i64
  %53 = load i64, i64* %21, align 8
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 28
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 658812288346769700
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #9
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %40, %53
  %62 = sdiv exact i64 %61, 28
  %63 = icmp ult i64 %62, 329406144173384850
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %64, %60
  %70 = phi i64 [ %67, %64 ], [ 658812288346769700, %60 ]
  %71 = mul i64 %70, 28
  %72 = call i8* @_Znwm(i64 %71) #7
  %73 = bitcast i8* %72 to %"struct.cc::DebugRect"*
  br label %74

74:                                               ; preds = %69, %64
  %75 = phi i64 [ %70, %69 ], [ 0, %64 ]
  %76 = phi %"struct.cc::DebugRect"* [ %73, %69 ], [ null, %64 ]
  %77 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %55
  %78 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %75
  %79 = ptrtoint %"struct.cc::DebugRect"* %78 to i64
  %80 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 0, i32 0
  store i32 1, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %55, i32 1
  %82 = bitcast %"class.gfx::Rect"* %81 to i64*
  store i64 %35, i64* %82, align 4
  %83 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %55, i32 1, i32 1
  %84 = bitcast %"class.gfx::Size"* %83 to i64*
  store i64 %36, i64* %84, align 4
  %85 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %55, i32 2
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %76, i64 %55, i32 3
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 1
  %88 = ptrtoint %"struct.cc::DebugRect"* %87 to i64
  %89 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %90 = load i64, i64* %20, align 8
  %91 = ptrtoint %"struct.cc::DebugRect"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, -28
  %94 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %93
  %95 = ptrtoint %"struct.cc::DebugRect"* %94 to i64
  %96 = icmp sgt i64 %92, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %74
  %98 = bitcast %"struct.cc::DebugRect"* %94 to i8*
  %99 = bitcast %"struct.cc::DebugRect"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %92, i1 false) #8
  %100 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  br label %101

101:                                              ; preds = %97, %74
  %102 = phi %"struct.cc::DebugRect"* [ %89, %74 ], [ %100, %97 ]
  store i64 %95, i64* %21, align 8
  store i64 %88, i64* %20, align 8
  store i64 %79, i64* %22, align 8
  %103 = icmp eq %"struct.cc::DebugRect"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"struct.cc::DebugRect"* %102 to i8*
  call void @_ZdlPv(i8* %105) #7
  br label %106

106:                                              ; preds = %41, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #8
  br label %107

107:                                              ; preds = %30, %25, %106
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1096"* %26, i64 1
  %109 = icmp eq %"class.std::__1::unique_ptr.1096"* %108, %9
  br i1 %109, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory22SaveSurfaceDamageRectsERKNSt3__16vectorIPNS_17RenderSurfaceImplENS1_9allocatorIS4_EEEE(%"class.cc::DebugRectHistory"*, %"class.std::__1::vector.1311"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.std::__1::vector.1311", %"class.std::__1::vector.1311"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.cc::RenderSurfaceImpl"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1311"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %10, 3
  %14 = bitcast { i64, i64 }* %3 to i8*
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.cc::DebugRect"** %17 to i64*
  %20 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %21 = bitcast %"struct.cc::DebugRect"** %18 to i64*
  %22 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  br label %24

23:                                               ; preds = %109, %2
  ret void

24:                                               ; preds = %12, %109
  %25 = phi i64 [ %9, %12 ], [ %112, %109 ]
  %26 = phi i64 [ %13, %12 ], [ %114, %109 ]
  %27 = phi i64 [ 0, %12 ], [ %110, %109 ]
  %28 = inttoptr i64 %25 to %"class.cc::RenderSurfaceImpl"**
  %29 = xor i64 %27, -1
  %30 = add i64 %26, %29
  %31 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %28, i64 %30
  %32 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %32, i64 0, i32 4, i32 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %34 = call { i64, i64 } @_ZNK2cc17RenderSurfaceImpl13GetDamageRectEv(%"class.cc::RenderSurfaceImpl"* %32) #8
  %35 = extractvalue { i64, i64 } %34, 0
  store i64 %35, i64* %15, align 8
  %36 = extractvalue { i64, i64 } %34, 1
  store i64 %36, i64* %16, align 8
  %37 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %33, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #8
  %38 = extractvalue { i64, i64 } %37, 0
  %39 = extractvalue { i64, i64 } %37, 1
  %40 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %17, align 8
  %41 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %18, align 8
  %42 = icmp ult %"struct.cc::DebugRect"* %40, %41
  %43 = ptrtoint %"struct.cc::DebugRect"* %41 to i64
  br i1 %42, label %44, label %54

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 0, i32 0
  store i32 2, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 0, i32 1
  %47 = bitcast %"class.gfx::Rect"* %46 to i64*
  store i64 %38, i64* %47, align 4
  %48 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 0, i32 1, i32 1
  %49 = bitcast %"class.gfx::Size"* %48 to i64*
  store i64 %39, i64* %49, align 4
  %50 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 0, i32 2
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 0, i32 3
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %40, i64 1
  %53 = ptrtoint %"struct.cc::DebugRect"* %52 to i64
  store i64 %53, i64* %19, align 8
  br label %109

54:                                               ; preds = %24
  %55 = ptrtoint %"struct.cc::DebugRect"* %40 to i64
  %56 = load i64, i64* %20, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 28
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 658812288346769700
  br i1 %60, label %61, label %63

61:                                               ; preds = %54
  %62 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #9
  unreachable

63:                                               ; preds = %54
  %64 = sub i64 %43, %56
  %65 = sdiv exact i64 %64, 28
  %66 = icmp ult i64 %65, 329406144173384850
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = shl nsw i64 %65, 1
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %67, %63
  %73 = phi i64 [ %70, %67 ], [ 658812288346769700, %63 ]
  %74 = mul i64 %73, 28
  %75 = call i8* @_Znwm(i64 %74) #7
  %76 = bitcast i8* %75 to %"struct.cc::DebugRect"*
  br label %77

77:                                               ; preds = %72, %67
  %78 = phi i64 [ %73, %72 ], [ 0, %67 ]
  %79 = phi %"struct.cc::DebugRect"* [ %76, %72 ], [ null, %67 ]
  %80 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %58
  %81 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %78
  %82 = ptrtoint %"struct.cc::DebugRect"* %81 to i64
  %83 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %80, i64 0, i32 0
  store i32 2, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %58, i32 1
  %85 = bitcast %"class.gfx::Rect"* %84 to i64*
  store i64 %38, i64* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %58, i32 1, i32 1
  %87 = bitcast %"class.gfx::Size"* %86 to i64*
  store i64 %39, i64* %87, align 4
  %88 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %58, i32 2
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %79, i64 %58, i32 3
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %80, i64 1
  %91 = ptrtoint %"struct.cc::DebugRect"* %90 to i64
  %92 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %22, align 8
  %93 = load i64, i64* %19, align 8
  %94 = ptrtoint %"struct.cc::DebugRect"* %92 to i64
  %95 = sub i64 %93, %94
  %96 = sdiv exact i64 %95, -28
  %97 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %80, i64 %96
  %98 = ptrtoint %"struct.cc::DebugRect"* %97 to i64
  %99 = icmp sgt i64 %95, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %77
  %101 = bitcast %"struct.cc::DebugRect"* %97 to i8*
  %102 = bitcast %"struct.cc::DebugRect"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 %95, i1 false) #8
  %103 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %22, align 8
  br label %104

104:                                              ; preds = %100, %77
  %105 = phi %"struct.cc::DebugRect"* [ %92, %77 ], [ %103, %100 ]
  store i64 %98, i64* %20, align 8
  store i64 %91, i64* %19, align 8
  store i64 %82, i64* %21, align 8
  %106 = icmp eq %"struct.cc::DebugRect"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast %"struct.cc::DebugRect"* %105 to i8*
  call void @_ZdlPv(i8* %108) #7
  br label %109

109:                                              ; preds = %44, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  %110 = add nuw i64 %27, 1
  %111 = load i64, i64* %6, align 8
  %112 = load i64, i64* %8, align 8
  %113 = sub i64 %111, %112
  %114 = ashr exact i64 %113, 3
  %115 = icmp ult i64 %110, %114
  br i1 %115, label %24, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory20SaveScreenSpaceRectsERKNSt3__16vectorIPNS_17RenderSurfaceImplENS1_9allocatorIS4_EEEE(%"class.cc::DebugRectHistory"*, %"class.std::__1::vector.1311"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.std::__1::vector.1311", %"class.std::__1::vector.1311"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.cc::RenderSurfaceImpl"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1311"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %10, 3
  %14 = bitcast <2 x i64>* %3 to i8*
  %15 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.cc::DebugRect"** %15 to i64*
  %18 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %19 = bitcast %"struct.cc::DebugRect"** %16 to i64*
  %20 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %107, %2
  ret void

22:                                               ; preds = %12, %107
  %23 = phi i64 [ %9, %12 ], [ %110, %107 ]
  %24 = phi i64 [ %13, %12 ], [ %112, %107 ]
  %25 = phi i64 [ 0, %12 ], [ %108, %107 ]
  %26 = inttoptr i64 %23 to %"class.cc::RenderSurfaceImpl"**
  %27 = xor i64 %25, -1
  %28 = add i64 %24, %27
  %29 = getelementptr inbounds %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %26, i64 %28
  %30 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %30, i64 0, i32 4, i32 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %32 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %30, i64 0, i32 4, i32 3
  %33 = bitcast %"class.gfx::Rect"* %32 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 4
  store <2 x i64> %34, <2 x i64>* %3, align 16
  %35 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %31, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #8
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %15, align 8
  %39 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %16, align 8
  %40 = icmp ult %"struct.cc::DebugRect"* %38, %39
  %41 = ptrtoint %"struct.cc::DebugRect"* %39 to i64
  br i1 %40, label %42, label %52

42:                                               ; preds = %22
  %43 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 0, i32 0
  store i32 3, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 0, i32 1
  %45 = bitcast %"class.gfx::Rect"* %44 to i64*
  store i64 %36, i64* %45, align 4
  %46 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 0, i32 1, i32 1
  %47 = bitcast %"class.gfx::Size"* %46 to i64*
  store i64 %37, i64* %47, align 4
  %48 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 0, i32 2
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %38, i64 1
  %51 = ptrtoint %"struct.cc::DebugRect"* %50 to i64
  store i64 %51, i64* %17, align 8
  br label %107

52:                                               ; preds = %22
  %53 = ptrtoint %"struct.cc::DebugRect"* %38 to i64
  %54 = load i64, i64* %18, align 8
  %55 = sub i64 %53, %54
  %56 = sdiv exact i64 %55, 28
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 658812288346769700
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %52
  %62 = sub i64 %41, %54
  %63 = sdiv exact i64 %62, 28
  %64 = icmp ult i64 %63, 329406144173384850
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = shl nsw i64 %63, 1
  %67 = icmp ult i64 %66, %57
  %68 = select i1 %67, i64 %57, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %65, %61
  %71 = phi i64 [ %68, %65 ], [ 658812288346769700, %61 ]
  %72 = mul i64 %71, 28
  %73 = call i8* @_Znwm(i64 %72) #7
  %74 = bitcast i8* %73 to %"struct.cc::DebugRect"*
  br label %75

75:                                               ; preds = %70, %65
  %76 = phi i64 [ %71, %70 ], [ 0, %65 ]
  %77 = phi %"struct.cc::DebugRect"* [ %74, %70 ], [ null, %65 ]
  %78 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %56
  %79 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %76
  %80 = ptrtoint %"struct.cc::DebugRect"* %79 to i64
  %81 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %78, i64 0, i32 0
  store i32 3, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %56, i32 1
  %83 = bitcast %"class.gfx::Rect"* %82 to i64*
  store i64 %36, i64* %83, align 4
  %84 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %56, i32 1, i32 1
  %85 = bitcast %"class.gfx::Size"* %84 to i64*
  store i64 %37, i64* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %56, i32 2
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %77, i64 %56, i32 3
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %78, i64 1
  %89 = ptrtoint %"struct.cc::DebugRect"* %88 to i64
  %90 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %20, align 8
  %91 = load i64, i64* %17, align 8
  %92 = ptrtoint %"struct.cc::DebugRect"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, -28
  %95 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %78, i64 %94
  %96 = ptrtoint %"struct.cc::DebugRect"* %95 to i64
  %97 = icmp sgt i64 %93, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %75
  %99 = bitcast %"struct.cc::DebugRect"* %95 to i8*
  %100 = bitcast %"struct.cc::DebugRect"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %100, i64 %93, i1 false) #8
  %101 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %20, align 8
  br label %102

102:                                              ; preds = %98, %75
  %103 = phi %"struct.cc::DebugRect"* [ %90, %75 ], [ %101, %98 ]
  store i64 %96, i64* %18, align 8
  store i64 %89, i64* %17, align 8
  store i64 %80, i64* %19, align 8
  %104 = icmp eq %"struct.cc::DebugRect"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.cc::DebugRect"* %103 to i8*
  call void @_ZdlPv(i8* %106) #7
  br label %107

107:                                              ; preds = %42, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  %108 = add nuw i64 %25, 1
  %109 = load i64, i64* %6, align 8
  %110 = load i64, i64* %8, align 8
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 3
  %113 = icmp ult i64 %108, %112
  br i1 %113, label %22, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(24) %"class.std::__1::vector.879"* @_ZNK2cc23HeadsUpDisplayLayerImpl16LayoutShiftRectsEv(%"class.cc::HeadsUpDisplayLayerImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc23HeadsUpDisplayLayerImpl21ClearLayoutShiftRectsEv(%"class.cc::HeadsUpDisplayLayerImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK2cc6Region5beginEv(%"class.cc::Region::Iterator"* sret, %"class.cc::Region"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc6RegionD1Ev(%"class.cc::Region"*) unnamed_addr #4

declare zeroext i1 @_ZNK2cc9LayerImpl20LayerPropertyChangedEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK2cc17RenderSurfaceImpl13GetDamageRectEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory34SaveTouchEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::Region", align 8
  %4 = alloca %"class.cc::Region::Iterator", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 13
  %9 = bitcast %"class.cc::Region"* %3 to i8*
  %10 = bitcast %"class.cc::Region::Iterator"* %4 to i8*
  %11 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0, i32 3
  %12 = bitcast { i64, i64 }* %5 to i8*
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %16 = bitcast %"class.gfx::Transform"* %7 to i8*
  %17 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.cc::DebugRect"** %17 to i64*
  %20 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %21 = bitcast %"struct.cc::DebugRect"** %18 to i64*
  %22 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %4, i64 0, i32 0
  %24 = bitcast %"class.cc::Region"* %3 to i8*
  %25 = bitcast { i64, i64 }* %5 to i8*
  br label %27

26:                                               ; preds = %32
  ret void

27:                                               ; preds = %2, %32
  %28 = phi i32 [ 0, %2 ], [ %33, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %29 = call dereferenceable(24) %"class.cc::Region"* @_ZNK2cc17TouchActionRegion23GetRegionForTouchActionENS_11TouchActionE(%"class.cc::TouchActionRegion"* %8, i32 %28) #8
  call void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"* nonnull %3, %"class.cc::Region"* dereferenceable(24) %29) #8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc6Region5beginEv(%"class.cc::Region::Iterator"* nonnull sret %4, %"class.cc::Region"* nonnull %3) #8
  %30 = load i8, i8* %11, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %111, %27
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  %33 = add nuw nsw i32 %28, 1
  %34 = icmp eq i32 %33, 127
  br i1 %34, label %26, label %27

35:                                               ; preds = %27, %111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %36 = call { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16) %14) #8
  %37 = extractvalue { i64, i64 } %36, 0
  store i64 %37, i64* %15, align 8
  %38 = extractvalue { i64, i64 } %36, 1
  store i64 %38, i64* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %16) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %7, %"class.cc::LayerImpl"* %1) #8
  %39 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #8
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %17, align 8
  %43 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %18, align 8
  %44 = icmp ult %"struct.cc::DebugRect"* %42, %43
  %45 = ptrtoint %"struct.cc::DebugRect"* %43 to i64
  br i1 %44, label %46, label %56

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 0
  store i32 4, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 1
  %49 = bitcast %"class.gfx::Rect"* %48 to i64*
  store i64 %40, i64* %49, align 4
  %50 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 1, i32 1
  %51 = bitcast %"class.gfx::Size"* %50 to i64*
  store i64 %41, i64* %51, align 4
  %52 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 2
  store i32 %28, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 0, i32 3
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %42, i64 1
  %55 = ptrtoint %"struct.cc::DebugRect"* %54 to i64
  store i64 %55, i64* %19, align 8
  br label %111

56:                                               ; preds = %35
  %57 = ptrtoint %"struct.cc::DebugRect"* %42 to i64
  %58 = load i64, i64* %20, align 8
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 28
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 658812288346769700
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #9
  unreachable

65:                                               ; preds = %56
  %66 = sub i64 %45, %58
  %67 = sdiv exact i64 %66, 28
  %68 = icmp ult i64 %67, 329406144173384850
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %61
  %72 = select i1 %71, i64 %61, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %65
  %75 = phi i64 [ %72, %69 ], [ 658812288346769700, %65 ]
  %76 = mul i64 %75, 28
  %77 = call i8* @_Znwm(i64 %76) #7
  %78 = bitcast i8* %77 to %"struct.cc::DebugRect"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.cc::DebugRect"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60
  %83 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %80
  %84 = ptrtoint %"struct.cc::DebugRect"* %83 to i64
  %85 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 0, i32 0
  store i32 4, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 1
  %87 = bitcast %"class.gfx::Rect"* %86 to i64*
  store i64 %40, i64* %87, align 4
  %88 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 1, i32 1
  %89 = bitcast %"class.gfx::Size"* %88 to i64*
  store i64 %41, i64* %89, align 4
  %90 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 2
  store i32 %28, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %81, i64 %60, i32 3
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 1
  %93 = ptrtoint %"struct.cc::DebugRect"* %92 to i64
  %94 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %22, align 8
  %95 = load i64, i64* %19, align 8
  %96 = ptrtoint %"struct.cc::DebugRect"* %94 to i64
  %97 = sub i64 %95, %96
  %98 = sdiv exact i64 %97, -28
  %99 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %82, i64 %98
  %100 = ptrtoint %"struct.cc::DebugRect"* %99 to i64
  %101 = icmp sgt i64 %97, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %79
  %103 = bitcast %"struct.cc::DebugRect"* %99 to i8*
  %104 = bitcast %"struct.cc::DebugRect"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %97, i1 false) #8
  %105 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %22, align 8
  br label %106

106:                                              ; preds = %102, %79
  %107 = phi %"struct.cc::DebugRect"* [ %94, %79 ], [ %105, %102 ]
  store i64 %100, i64* %20, align 8
  store i64 %93, i64* %19, align 8
  store i64 %84, i64* %21, align 8
  %108 = icmp eq %"struct.cc::DebugRect"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  %110 = bitcast %"struct.cc::DebugRect"* %107 to i8*
  call void @_ZdlPv(i8* %110) #7
  br label %111

111:                                              ; preds = %109, %106, %46
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %23) #8
  %112 = load i8, i8* %11, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %35, label %32
}

declare dereferenceable(24) %"class.cc::Region"* @_ZNK2cc17TouchActionRegion23GetRegionForTouchActionENS_11TouchActionE(%"class.cc::TouchActionRegion"*, i32) local_unnamed_addr #3

declare void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

declare dereferenceable(68) %"class.gfx::Transform"* @_ZNK2cc13TransformTree8ToScreenEi(%"class.cc::TransformTree"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory35SaveScrollEventHandlerRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %6, i64 0, i32 45
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %98, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %3, %"class.cc::LayerImpl"* %1) #8
  %12 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = call i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* %1) #8
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %17 = bitcast %"class.gfx::Size"* %16 to i64*
  store i64 %13, i64* %17, align 4
  %18 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #8
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %25 = icmp ult %"struct.cc::DebugRect"* %22, %24
  %26 = ptrtoint %"struct.cc::DebugRect"* %24 to i64
  br i1 %25, label %27, label %38

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 0, i32 0
  store i32 6, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 0, i32 1
  %30 = bitcast %"class.gfx::Rect"* %29 to i64*
  store i64 %19, i64* %30, align 4
  %31 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 0, i32 1, i32 1
  %32 = bitcast %"class.gfx::Size"* %31 to i64*
  store i64 %20, i64* %32, align 4
  %33 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 0, i32 2
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 0, i32 3
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %22, i64 1
  %36 = ptrtoint %"struct.cc::DebugRect"* %35 to i64
  %37 = bitcast %"struct.cc::DebugRect"** %21 to i64*
  store i64 %36, i64* %37, align 8
  br label %97

38:                                               ; preds = %10
  %39 = ptrtoint %"struct.cc::DebugRect"* %22 to i64
  %40 = bitcast %"struct.cc::DebugRect"** %21 to i64*
  %41 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = sdiv exact i64 %43, 28
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 658812288346769700
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #9
  unreachable

49:                                               ; preds = %38
  %50 = bitcast %"struct.cc::DebugRect"** %23 to i64*
  %51 = sub i64 %26, %42
  %52 = sdiv exact i64 %51, 28
  %53 = icmp ult i64 %52, 329406144173384850
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = shl nsw i64 %52, 1
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %54, %49
  %60 = phi i64 [ %57, %54 ], [ 658812288346769700, %49 ]
  %61 = mul i64 %60, 28
  %62 = call i8* @_Znwm(i64 %61) #7
  %63 = bitcast i8* %62 to %"struct.cc::DebugRect"*
  br label %64

64:                                               ; preds = %59, %54
  %65 = phi i64 [ %60, %59 ], [ 0, %54 ]
  %66 = phi %"struct.cc::DebugRect"* [ %63, %59 ], [ null, %54 ]
  %67 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %44
  %68 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %65
  %69 = ptrtoint %"struct.cc::DebugRect"* %68 to i64
  %70 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 0, i32 0
  store i32 6, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %44, i32 1
  %72 = bitcast %"class.gfx::Rect"* %71 to i64*
  store i64 %19, i64* %72, align 4
  %73 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %44, i32 1, i32 1
  %74 = bitcast %"class.gfx::Size"* %73 to i64*
  store i64 %20, i64* %74, align 4
  %75 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %44, i32 2
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %66, i64 %44, i32 3
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 1
  %78 = ptrtoint %"struct.cc::DebugRect"* %77 to i64
  %79 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %80 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %79, align 8
  %81 = load i64, i64* %40, align 8
  %82 = ptrtoint %"struct.cc::DebugRect"* %80 to i64
  %83 = sub i64 %81, %82
  %84 = sdiv exact i64 %83, -28
  %85 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %67, i64 %84
  %86 = ptrtoint %"struct.cc::DebugRect"* %85 to i64
  %87 = icmp sgt i64 %83, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %64
  %89 = bitcast %"struct.cc::DebugRect"* %85 to i8*
  %90 = bitcast %"struct.cc::DebugRect"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 %83, i1 false) #8
  %91 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %79, align 8
  br label %92

92:                                               ; preds = %88, %64
  %93 = phi %"struct.cc::DebugRect"* [ %80, %64 ], [ %91, %88 ]
  store i64 %86, i64* %41, align 8
  store i64 %78, i64* %40, align 8
  store i64 %69, i64* %50, align 8
  %94 = icmp eq %"struct.cc::DebugRect"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.cc::DebugRect"* %93 to i8*
  call void @_ZdlPv(i8* %96) #7
  br label %97

97:                                               ; preds = %27, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #8
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16DebugRectHistory34SaveNonFastScrollableRectsCallbackEPNS_9LayerImplE(%"class.cc::DebugRectHistory"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::Region::Iterator", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 12
  %8 = bitcast %"class.cc::Region::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc6Region5beginEv(%"class.cc::Region::Iterator"* nonnull sret %3, %"class.cc::Region"* %7) #8
  %9 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %2
  %13 = bitcast { i64, i64 }* %4 to i8*
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %17 = bitcast %"class.gfx::Transform"* %6 to i8*
  %18 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.cc::DebugRect"** %18 to i64*
  %21 = bitcast %"class.cc::DebugRectHistory"* %0 to i64*
  %22 = bitcast %"struct.cc::DebugRect"** %19 to i64*
  %23 = getelementptr inbounds %"class.cc::DebugRectHistory", %"class.cc::DebugRectHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.cc::Region::Iterator", %"class.cc::Region::Iterator"* %3, i64 0, i32 0
  %25 = bitcast { i64, i64 }* %4 to i8*
  br label %27

26:                                               ; preds = %103, %2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #8
  ret void

27:                                               ; preds = %12, %103
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %28 = call { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16) %15) #8
  %29 = extractvalue { i64, i64 } %28, 0
  store i64 %29, i64* %16, align 8
  %30 = extractvalue { i64, i64 } %28, 1
  store i64 %30, i64* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #8
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %6, %"class.cc::LayerImpl"* %1) #8
  %31 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #8
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  %34 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %18, align 8
  %35 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %19, align 8
  %36 = icmp ult %"struct.cc::DebugRect"* %34, %35
  %37 = ptrtoint %"struct.cc::DebugRect"* %35 to i64
  br i1 %36, label %38, label %48

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 0, i32 0
  store i32 7, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 0, i32 1
  %41 = bitcast %"class.gfx::Rect"* %40 to i64*
  store i64 %32, i64* %41, align 4
  %42 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 0, i32 1, i32 1
  %43 = bitcast %"class.gfx::Size"* %42 to i64*
  store i64 %33, i64* %43, align 4
  %44 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 0, i32 2
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 0, i32 3
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %34, i64 1
  %47 = ptrtoint %"struct.cc::DebugRect"* %46 to i64
  store i64 %47, i64* %20, align 8
  br label %103

48:                                               ; preds = %27
  %49 = ptrtoint %"struct.cc::DebugRect"* %34 to i64
  %50 = load i64, i64* %21, align 8
  %51 = sub i64 %49, %50
  %52 = sdiv exact i64 %51, 28
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 658812288346769700
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = bitcast %"class.cc::DebugRectHistory"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #9
  unreachable

57:                                               ; preds = %48
  %58 = sub i64 %37, %50
  %59 = sdiv exact i64 %58, 28
  %60 = icmp ult i64 %59, 329406144173384850
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = shl nsw i64 %59, 1
  %63 = icmp ult i64 %62, %53
  %64 = select i1 %63, i64 %53, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61, %57
  %67 = phi i64 [ %64, %61 ], [ 658812288346769700, %57 ]
  %68 = mul i64 %67, 28
  %69 = call i8* @_Znwm(i64 %68) #7
  %70 = bitcast i8* %69 to %"struct.cc::DebugRect"*
  br label %71

71:                                               ; preds = %66, %61
  %72 = phi i64 [ %67, %66 ], [ 0, %61 ]
  %73 = phi %"struct.cc::DebugRect"* [ %70, %66 ], [ null, %61 ]
  %74 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %52
  %75 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %72
  %76 = ptrtoint %"struct.cc::DebugRect"* %75 to i64
  %77 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %74, i64 0, i32 0
  store i32 7, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %52, i32 1
  %79 = bitcast %"class.gfx::Rect"* %78 to i64*
  store i64 %32, i64* %79, align 4
  %80 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %52, i32 1, i32 1
  %81 = bitcast %"class.gfx::Size"* %80 to i64*
  store i64 %33, i64* %81, align 4
  %82 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %52, i32 2
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %73, i64 %52, i32 3
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %74, i64 1
  %85 = ptrtoint %"struct.cc::DebugRect"* %84 to i64
  %86 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  %87 = load i64, i64* %20, align 8
  %88 = ptrtoint %"struct.cc::DebugRect"* %86 to i64
  %89 = sub i64 %87, %88
  %90 = sdiv exact i64 %89, -28
  %91 = getelementptr inbounds %"struct.cc::DebugRect", %"struct.cc::DebugRect"* %74, i64 %90
  %92 = ptrtoint %"struct.cc::DebugRect"* %91 to i64
  %93 = icmp sgt i64 %89, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %71
  %95 = bitcast %"struct.cc::DebugRect"* %91 to i8*
  %96 = bitcast %"struct.cc::DebugRect"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %89, i1 false) #8
  %97 = load %"struct.cc::DebugRect"*, %"struct.cc::DebugRect"** %23, align 8
  br label %98

98:                                               ; preds = %94, %71
  %99 = phi %"struct.cc::DebugRect"* [ %86, %71 ], [ %97, %94 ]
  store i64 %92, i64* %21, align 8
  store i64 %85, i64* %20, align 8
  store i64 %76, i64* %22, align 8
  %100 = icmp eq %"struct.cc::DebugRect"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"struct.cc::DebugRect"* %99 to i8*
  call void @_ZdlPv(i8* %102) #7
  br label %103

103:                                              ; preds = %38, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %24) #8
  %104 = load i8, i8* %9, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %27, label %26
}

declare %"struct.cc::ScrollNode"* @_ZNK2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx13SkIRectToRectERK7SkIRect(%struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #3

declare %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
