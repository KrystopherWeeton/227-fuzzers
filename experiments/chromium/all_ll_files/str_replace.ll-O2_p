; ModuleID = '../../third_party/abseil-cpp/absl/strings/str_replace.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/str_replace.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"*, %"class.std::__1::__compressed_pair" }
%"struct.absl::strings_internal::ViableSubstitution" = type { %"class.absl::string_view", %"class.absl::string_view", i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.absl::strings_internal::ViableSubstitution"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.std::initializer_list" = type { %"struct.std::__1::pair"*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4absl13StrReplaceAllISt16initializer_listINSt3__14pairINS_11string_viewES4_EEEEEiRKT_PNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = comdat any

$_ZN4absl16strings_internal17FindSubstitutionsISt16initializer_listINSt3__14pairINS_11string_viewES5_EEEEENS3_6vectorINS0_18ViableSubstitutionENS3_9allocatorIS9_EEEES5_RKT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4absl16strings_internal18ApplySubstitutionsENS_11string_viewEPNSt3__16vectorINS0_18ViableSubstitutionENS2_9allocatorIS4_EEEEPNS2_12basic_stringIcNS2_11char_traitsIcEENS5_IcEEEE(i8*, i64, %"class.std::__1::vector"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %5 = alloca %"class.absl::string_view", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 16
  %8 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %13 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %12, align 8
  %14 = icmp eq %"struct.absl::strings_internal::ViableSubstitution"* %11, %13
  br i1 %14, label %126, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  %19 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  %20 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %12 to i64*
  %21 = bitcast %"class.std::__1::vector"* %2 to i64*
  %22 = bitcast %"class.absl::AlphaNum"* %7 to <2 x i64>*
  br label %23

23:                                               ; preds = %15, %119
  %24 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %13, %15 ], [ %120, %119 ]
  %25 = phi i32 [ 0, %15 ], [ %59, %119 ]
  %26 = phi i64 [ 0, %15 ], [ %58, %119 ]
  %27 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 -1, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, %26
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 -1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %56

33:                                               ; preds = %23
  %34 = load i64, i64* %9, align 8
  %35 = icmp ult i64 %34, %26
  br i1 %35, label %50, label %36

36:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #9
  %37 = sub i64 %28, %26
  %38 = sub i64 %34, %26
  %39 = icmp ugt i64 %38, %37
  %40 = select i1 %39, i64 %37, i64 %38
  %41 = icmp sgt i64 %40, -1
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %36
  call void @llvm.trap() #9
  unreachable

43:                                               ; preds = %36
  %44 = load i8*, i8** %8, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %26
  store i8* %45, i8** %17, align 8
  store i64 %40, i64* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #9
  %46 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 -1, i32 1, i32 0
  %47 = bitcast i8** %46 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  store <2 x i64> %48, <2 x i64>* %22, align 16
  call void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumESA_(%"class.std::__1::basic_string"* %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #9
  %49 = load i64, i64* %27, align 8
  br label %50

50:                                               ; preds = %33, %43
  %51 = phi i64 [ %28, %33 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 -1, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, %51
  %55 = add nsw i32 %25, 1
  br label %56

56:                                               ; preds = %30, %50
  %57 = phi i64 [ %53, %50 ], [ %32, %30 ]
  %58 = phi i64 [ %54, %50 ], [ %26, %30 ]
  %59 = phi i32 [ %55, %50 ], [ %25, %30 ]
  %60 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 -1, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = call i64 @_ZNK4absl11string_view4findES0_m(%"class.absl::string_view"* nonnull %5, i8* %61, i64 %57, i64 %58) #9
  store i64 %62, i64* %27, align 8
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %12, align 8
  %66 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %65, i64 -1
  store %"struct.absl::strings_internal::ViableSubstitution"* %66, %"struct.absl::strings_internal::ViableSubstitution"** %12, align 8
  br label %119

67:                                               ; preds = %56
  %68 = load i64, i64* %20, align 8
  %69 = load i64, i64* %21, align 8
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, 40
  %72 = add nsw i64 %71, -1
  %73 = icmp eq i64 %72, 0
  %74 = inttoptr i64 %68 to %"struct.absl::strings_internal::ViableSubstitution"*
  br i1 %73, label %119, label %75

75:                                               ; preds = %67
  %76 = inttoptr i64 %69 to %"struct.absl::strings_internal::ViableSubstitution"*
  br label %77

77:                                               ; preds = %115, %75
  %78 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %116, %115 ], [ %76, %75 ]
  %79 = phi i64 [ %113, %115 ], [ %72, %75 ]
  %80 = phi i64 [ %79, %115 ], [ %71, %75 ]
  %81 = add i64 %80, -2
  %82 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %81
  %83 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %79
  %84 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %81, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %79, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %94, label %89

89:                                               ; preds = %77
  %90 = icmp ult i64 %85, %87
  br i1 %90, label %91, label %117

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %79, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %100

94:                                               ; preds = %77
  %95 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %81, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %79, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %96, %98
  br i1 %99, label %100, label %117

100:                                              ; preds = %91, %94
  %101 = phi i64 [ %93, %91 ], [ %98, %94 ]
  %102 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %83 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %79, i32 1, i32 0
  %105 = bitcast i8** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8
  %107 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %83 to i8*
  %108 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 40, i1 false) #9
  %109 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %82 to i64*
  store i64 %103, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %81, i32 0, i32 1
  store i64 %101, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %78, i64 %81, i32 1, i32 0
  %112 = bitcast i8** %111 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %112, align 8
  store i64 %87, i64* %84, align 8
  %113 = add i64 %79, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %100
  %116 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %10, align 8
  br label %77

117:                                              ; preds = %89, %94, %100
  %118 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %12, align 8
  br label %119

119:                                              ; preds = %117, %67, %64
  %120 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %118, %117 ], [ %74, %67 ], [ %66, %64 ]
  %121 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %10, align 8
  %122 = icmp eq %"struct.absl::strings_internal::ViableSubstitution"* %121, %120
  br i1 %122, label %123, label %23

123:                                              ; preds = %119
  %124 = load i8*, i8** %8, align 8
  %125 = load i64, i64* %9, align 8
  br label %126

126:                                              ; preds = %123, %4
  %127 = phi i64 [ %1, %4 ], [ %125, %123 ]
  %128 = phi i8* [ %0, %4 ], [ %124, %123 ]
  %129 = phi i64 [ 0, %4 ], [ %58, %123 ]
  %130 = phi i32 [ 0, %4 ], [ %59, %123 ]
  %131 = getelementptr inbounds i8, i8* %128, i64 %129
  %132 = sub i64 %127, %129
  %133 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %3, i8* %131, i64 %132) #9
  ret i32 %130
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumESA_(%"class.std::__1::basic_string"*, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i64 @_ZNK4absl11string_view4findES0_m(%"class.absl::string_view"*, i8*, i64, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13StrReplaceAllENS_11string_viewESt16initializer_listINSt3__14pairIS0_S0_EEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64, %"struct.std::__1::pair"*, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::initializer_list", align 8
  %8 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %7, i64 0, i32 0
  store %"struct.std::__1::pair"* %3, %"struct.std::__1::pair"** %8, align 8
  %9 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %7, i64 0, i32 1
  store i64 %4, i64* %9, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9, !noalias !3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #9, !noalias !3
  call void @_ZN4absl16strings_internal17FindSubstitutionsISt16initializer_listINSt3__14pairINS_11string_viewES5_EEEEENS3_6vectorINS0_18ViableSubstitutionENS3_9allocatorIS9_EEEES5_RKT_(%"class.std::__1::vector"* nonnull sret %6, i8* %1, i64 %2, %"class.std::initializer_list"* nonnull dereferenceable(16) %7) #9, !noalias !3
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9, !alias.scope !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %2) #9
  %13 = call i32 @_ZN4absl16strings_internal18ApplySubstitutionsENS_11string_viewEPNSt3__16vectorINS0_18ViableSubstitutionENS2_9allocatorIS4_EEEEPNS2_12basic_stringIcNS2_11char_traitsIcEENS5_IcEEEE(i8* %1, i64 %2, %"class.std::__1::vector"* nonnull %6, %"class.std::__1::basic_string"* %0) #9
  %14 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %11, align 8, !noalias !3
  %15 = icmp eq %"struct.absl::strings_internal::ViableSubstitution"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %18 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %14 to i64
  %19 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %17 to i64*
  store i64 %18, i64* %19, align 8, !noalias !3
  %20 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %14 to i8*
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %5, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9, !noalias !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4absl13StrReplaceAllESt16initializer_listINSt3__14pairINS_11string_viewES3_EEEPNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.std::__1::pair"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::initializer_list", align 8
  %5 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  store %"struct.std::__1::pair"* %0, %"struct.std::__1::pair"** %5, align 8
  %6 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = call i32 @_ZN4absl13StrReplaceAllISt16initializer_listINSt3__14pairINS_11string_viewES4_EEEEEiRKT_PNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::initializer_list"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* %2)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4absl13StrReplaceAllISt16initializer_listINSt3__14pairINS_11string_viewES4_EEEEEiRKT_PNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::initializer_list"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = zext i8 %11 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %23

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp sgt i64 %20, -1
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %16
  tail call void @llvm.trap() #9
  unreachable

23:                                               ; preds = %13, %16
  %24 = phi i64 [ %18, %16 ], [ %15, %13 ]
  %25 = phi i64 [ %20, %16 ], [ %14, %13 ]
  %26 = inttoptr i64 %24 to i8*
  call void @_ZN4absl16strings_internal17FindSubstitutionsISt16initializer_listINSt3__14pairINS_11string_viewES5_EEEEENS3_6vectorINS0_18ViableSubstitutionENS3_9allocatorIS9_EEEES5_RKT_(%"class.std::__1::vector"* nonnull sret %3, i8* %26, i64 %25, %"class.std::initializer_list"* dereferenceable(16) %0)
  %27 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %6, align 8
  %28 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %7, align 8
  %29 = icmp eq %"struct.absl::strings_internal::ViableSubstitution"* %27, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  %33 = load i8, i8* %9, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %30
  %39 = zext i8 %33 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %4, i64 %41) #9
  %42 = load i8, i8* %9, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = zext i8 %42 to i64
  %46 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %47 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %55

48:                                               ; preds = %40
  %49 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %48
  call void @llvm.trap() #9
  unreachable

55:                                               ; preds = %44, %48
  %56 = phi i64* [ %47, %44 ], [ %49, %48 ]
  %57 = phi i64 [ %46, %44 ], [ %50, %48 ]
  %58 = phi i64 [ %45, %44 ], [ %52, %48 ]
  %59 = inttoptr i64 %57 to i8*
  %60 = call i32 @_ZN4absl16strings_internal18ApplySubstitutionsENS_11string_viewEPNSt3__16vectorINS0_18ViableSubstitutionENS2_9allocatorIS4_EEEEPNS2_12basic_stringIcNS2_11char_traitsIcEENS5_IcEEEE(i8* %59, i64 %58, %"class.std::__1::vector"* nonnull %3, %"class.std::__1::basic_string"* nonnull %4)
  %61 = load i64, i64* %56, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast i64* %62 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %31, i64 24, i1 false) #9
  %66 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  store i64 %61, i64* %66, align 8
  %67 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %67, align 8
  %68 = extractelement <2 x i64> %64, i32 1
  %69 = lshr i64 %68, 56
  %70 = trunc i64 %69 to i8
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %55
  %73 = inttoptr i64 %61 to i8*
  call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %55, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %75 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %6, align 8
  br label %76

76:                                               ; preds = %23, %74
  %77 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %27, %23 ], [ %75, %74 ]
  %78 = phi i32 [ 0, %23 ], [ %60, %74 ]
  %79 = icmp eq %"struct.absl::strings_internal::ViableSubstitution"* %77, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %77 to i64
  %82 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %7 to i64*
  store i64 %81, i64* %82, align 8
  %83 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %77 to i8*
  call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i32 %78
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16strings_internal17FindSubstitutionsISt16initializer_listINSt3__14pairINS_11string_viewES5_EEEEENS3_6vectorINS0_18ViableSubstitutionENS3_9allocatorIS9_EEEES5_RKT_(%"class.std::__1::vector"* noalias sret, i8*, i64, %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.absl::string_view", align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %10 to i64*
  %15 = bitcast %"class.std::__1::vector"* %0 to i64*
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %161, label %17

17:                                               ; preds = %4
  %18 = icmp ugt i64 %13, 461168601842738790
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void @abort() #11
  unreachable

20:                                               ; preds = %17
  %21 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %9 to i64*
  %22 = mul i64 %13, 40
  %23 = tail call i8* @_Znwm(i64 %22) #10
  %24 = bitcast i8* %23 to %"struct.absl::strings_internal::ViableSubstitution"*
  %25 = ptrtoint i8* %23 to i64
  %26 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %24, i64 %13
  %27 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %26 to i64
  store i64 %25, i64* %15, align 8
  store i64 %25, i64* %21, align 8
  store i64 %27, i64* %14, align 8
  %28 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i64 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 %13
  %31 = bitcast %"struct.absl::strings_internal::ViableSubstitution"** %9 to i64*
  br label %32

32:                                               ; preds = %20, %158
  %33 = phi %"struct.std::__1::pair"* [ %29, %20 ], [ %159, %158 ]
  %34 = bitcast %"struct.std::__1::pair"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %35 to i8*
  %39 = call i64 @_ZNK4absl11string_view4findES0_m(%"class.absl::string_view"* nonnull %5, i8* %38, i64 %37, i64 0) #9
  %40 = icmp eq i64 %39, -1
  %41 = icmp eq i64 %37, 0
  %42 = or i1 %41, %40
  br i1 %42, label %158, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %45 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %9, align 8
  %46 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %10, align 8
  %47 = icmp ult %"struct.absl::strings_internal::ViableSubstitution"* %45, %46
  %48 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %46 to i64
  br i1 %47, label %49, label %59

49:                                               ; preds = %43
  %50 = bitcast %"class.absl::string_view"* %44 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %45 to i64*
  store i64 %35, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %45, i64 0, i32 0, i32 1
  store i64 %37, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %45, i64 0, i32 1, i32 0
  %55 = bitcast i8** %54 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %55, align 8
  %56 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %45, i64 0, i32 2
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %45, i64 1
  %58 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %57 to i64
  store i64 %58, i64* %31, align 8
  br label %109

59:                                               ; preds = %43
  %60 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %45 to i64
  %61 = load i64, i64* %15, align 8
  %62 = sub i64 %60, %61
  %63 = sdiv exact i64 %62, 40
  %64 = add nsw i64 %63, 1
  %65 = icmp ugt i64 %64, 461168601842738790
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %67) #11
  unreachable

68:                                               ; preds = %59
  %69 = sub i64 %48, %61
  %70 = sdiv exact i64 %69, 40
  %71 = icmp ult i64 %70, 230584300921369395
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = shl nsw i64 %70, 1
  %74 = icmp ult i64 %73, %64
  %75 = select i1 %74, i64 %64, i64 %73
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %72, %68
  %78 = phi i64 [ %75, %72 ], [ 461168601842738790, %68 ]
  %79 = mul i64 %78, 40
  %80 = call i8* @_Znwm(i64 %79) #10
  %81 = bitcast i8* %80 to %"struct.absl::strings_internal::ViableSubstitution"*
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i64 [ %78, %77 ], [ 0, %72 ]
  %84 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %81, %77 ], [ null, %72 ]
  %85 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %84, i64 %63
  %86 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %84, i64 %83
  %87 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %86 to i64
  %88 = bitcast %"class.absl::string_view"* %44 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  %90 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %85 to i64*
  store i64 %35, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %84, i64 %63, i32 0, i32 1
  store i64 %37, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %84, i64 %63, i32 1, i32 0
  %93 = bitcast i8** %92 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 8
  %94 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %84, i64 %63, i32 2
  store i64 %39, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %85, i64 1
  %96 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %95 to i64
  %97 = sdiv exact i64 %62, -40
  %98 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %85, i64 %97
  %99 = ptrtoint %"struct.absl::strings_internal::ViableSubstitution"* %98 to i64
  %100 = icmp sgt i64 %62, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %82
  %102 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %98 to i8*
  %103 = inttoptr i64 %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 %62, i1 false) #9
  br label %104

104:                                              ; preds = %101, %82
  store i64 %99, i64* %15, align 8
  store i64 %96, i64* %31, align 8
  store i64 %87, i64* %14, align 8
  %105 = icmp eq i64 %61, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %61 to i8*
  call void @_ZdlPv(i8* %107) #10
  %108 = load i64, i64* %31, align 8
  br label %109

109:                                              ; preds = %106, %104, %49
  %110 = phi i64 [ %108, %106 ], [ %96, %104 ], [ %58, %49 ]
  %111 = load i64, i64* %15, align 8
  %112 = sub i64 %110, %111
  %113 = sdiv exact i64 %112, 40
  %114 = add nsw i64 %113, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %158, label %116

116:                                              ; preds = %109
  %117 = inttoptr i64 %111 to %"struct.absl::strings_internal::ViableSubstitution"*
  br label %118

118:                                              ; preds = %156, %116
  %119 = phi %"struct.absl::strings_internal::ViableSubstitution"* [ %157, %156 ], [ %117, %116 ]
  %120 = phi i64 [ %154, %156 ], [ %114, %116 ]
  %121 = phi i64 [ %120, %156 ], [ %113, %116 ]
  %122 = add i64 %121, -2
  %123 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %122
  %124 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %120
  %125 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %122, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %120, i32 2
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %126, %128
  br i1 %129, label %135, label %130

130:                                              ; preds = %118
  %131 = icmp ult i64 %126, %128
  br i1 %131, label %132, label %158

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %120, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  br label %141

135:                                              ; preds = %118
  %136 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %122, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %120, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = icmp ugt i64 %137, %139
  br i1 %140, label %141, label %158

141:                                              ; preds = %132, %135
  %142 = phi i64 [ %134, %132 ], [ %139, %135 ]
  %143 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %124 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %120, i32 1, i32 0
  %146 = bitcast i8** %145 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8
  %148 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %124 to i8*
  %149 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 40, i1 false) #9
  %150 = bitcast %"struct.absl::strings_internal::ViableSubstitution"* %123 to i64*
  store i64 %144, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %122, i32 0, i32 1
  store i64 %142, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.absl::strings_internal::ViableSubstitution", %"struct.absl::strings_internal::ViableSubstitution"* %119, i64 %122, i32 1, i32 0
  %153 = bitcast i8** %152 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %153, align 8
  store i64 %128, i64* %125, align 8
  %154 = add i64 %120, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %141
  %157 = load %"struct.absl::strings_internal::ViableSubstitution"*, %"struct.absl::strings_internal::ViableSubstitution"** %8, align 8
  br label %118

158:                                              ; preds = %130, %135, %141, %109, %32
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %160 = icmp eq %"struct.std::__1::pair"* %159, %30
  br i1 %160, label %161, label %32

161:                                              ; preds = %158, %4
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl13StrReplaceAllISt16initializer_listINSt3__14pairINS_11string_viewES4_EEEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES4_RKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl13StrReplaceAllISt16initializer_listINSt3__14pairINS_11string_viewES4_EEEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES4_RKT_"}
