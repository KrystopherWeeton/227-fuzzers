; ModuleID = '../../media/base/djb2.cc'
source_filename = "../../media/base/djb2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_Z8DJB2HashPKvmj(i8* nocapture readonly, i64, i32) local_unnamed_addr #0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %3
  %6 = add i64 %1, -1
  %7 = and i64 %1, 3
  %8 = icmp ult i64 %6, 3
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = sub i64 %1, %7
  br label %30

11:                                               ; preds = %30, %5
  %12 = phi i32 [ undef, %5 ], [ %56, %30 ]
  %13 = phi i64 [ 0, %5 ], [ %57, %30 ]
  %14 = phi i32 [ %2, %5 ], [ %56, %30 ]
  %15 = icmp eq i64 %7, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %11, %16
  %17 = phi i64 [ %25, %16 ], [ %13, %11 ]
  %18 = phi i32 [ %24, %16 ], [ %14, %11 ]
  %19 = phi i64 [ %26, %16 ], [ %7, %11 ]
  %20 = mul i32 %18, 33
  %21 = getelementptr inbounds i8, i8* %0, i64 %17
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = add i32 %20, %23
  %25 = add nuw i64 %17, 1
  %26 = add i64 %19, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %16, !llvm.loop !2

28:                                               ; preds = %11, %16, %3
  %29 = phi i32 [ %2, %3 ], [ %12, %11 ], [ %24, %16 ]
  ret i32 %29

30:                                               ; preds = %30, %9
  %31 = phi i64 [ 0, %9 ], [ %57, %30 ]
  %32 = phi i32 [ %2, %9 ], [ %56, %30 ]
  %33 = phi i64 [ %10, %9 ], [ %58, %30 ]
  %34 = mul i32 %32, 33
  %35 = getelementptr inbounds i8, i8* %0, i64 %31
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = add i32 %34, %37
  %39 = or i64 %31, 1
  %40 = mul i32 %38, 33
  %41 = getelementptr inbounds i8, i8* %0, i64 %39
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = add i32 %40, %43
  %45 = or i64 %31, 2
  %46 = mul i32 %44, 33
  %47 = getelementptr inbounds i8, i8* %0, i64 %45
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = add i32 %46, %49
  %51 = or i64 %31, 3
  %52 = mul i32 %50, 33
  %53 = getelementptr inbounds i8, i8* %0, i64 %51
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = add i32 %52, %55
  %57 = add nuw i64 %31, 4
  %58 = add i64 %33, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %11, label %30
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
