; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_multi_draw.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_multi_draw.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.base::span.488" = type { %"struct.base::internal::ExtentStorage", i32* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.189" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::TraceWrapperV8Reference.189" = type { %"class.v8::TracedReference.190" }
%"class.v8::TracedReference.190" = type { %"class.v8::BasicTracedReference.191" }
%"class.v8::BasicTracedReference.191" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WebGLMultiDraw" = type { %"class.blink::WebGLExtension" }
%"class.blink::WebGLExtension" = type { %"class.blink::ScriptWrappable", %"class.blink::WeakMember.192" }
%"class.blink::WeakMember.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::WebGLRenderingContextBase"* }
%"class.blink::WebGLRenderingContextBase" = type <{ %"class.blink::CanvasRenderingContext.base", [7 x i8], %"class.blink::DrawingBuffer::Client", %"class.blink::NoAllocDirectCallHost", %class.scoped_refptr.302, %"class.blink::Member.364", i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %class.scoped_refptr.266, i8, i8, i8, [5 x i8], %"class.blink::Member.367", %"class.blink::Member.370", %"class.blink::Member.370", %"class.WTF::Vector.384", i32, [4 x i8], %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", i8, [7 x i8], %"class.blink::Member.395", %"class.blink::HeapVector.423", i32, [4 x i8], %"class.WTF::Vector.432", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", %"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache", i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x float], i8, [3 x i8], [4 x i32], float, i32, [4 x i8], i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %"class.std::__1::unique_ptr.339", [45 x i8], [3 x i8], %"class.blink::HeapVector.442", %"class.WTF::HashSet", %"class.WTF::Vector.432", %"class.WTF::Vector.432", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", %"class.WTF::HashSet.450", i32, i32, %"class.base::MRUCache.454", i32, i8, [3 x i8], %"class.blink::CanvasColorParams", [4 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.195", i32 }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.210", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.246", i8, i32, i32, i32, %"class.WTF::Vector.261", i8, i8, i64, i64, %"class.base::RepeatingCallback.271", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.292" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.199" }
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__cxx_atomic_impl.202" }
%"struct.std::__1::__cxx_atomic_impl.202" = type { %"struct.std::__1::__cxx_atomic_base_impl.203" }
%"struct.std::__1::__cxx_atomic_base_impl.203" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.204" }
%"struct.std::__1::atomic.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.199" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.210" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.237", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.220, [384 x i64], %class.sk_sp.221, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.222", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.228" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.220 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.221 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.234, %class.SkPixmap, %class.sk_sp.236 }
%class.sk_sp.234 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.235, i32, i32 }
%class.sk_sp.235 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.199" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.204" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.236 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.249, %"class.std::__1::unique_ptr.250" }
%class.scoped_refptr.249 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.257", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.257" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263" }
%"class.WTF::VectorBufferBase.263" = type { %class.scoped_refptr.264*, i32, i32 }
%class.scoped_refptr.264 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.266, %"struct.gpu::SyncToken", %"class.base::WeakPtr.268", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.265" }
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.268" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.286" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.std::__1::pair.288"*, %"struct.std::__1::pair.288"*, %"class.std::__1::__compressed_pair.289" }
%"struct.std::__1::pair.288" = type { i32, i32 }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::pair.288"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.235, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::DrawingBuffer::Client" = type { i32 (...)** }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.296", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon.301 }
%union.anon.301 = type { i64 }
%class.scoped_refptr.302 = type { %"class.blink::DrawingBuffer"* }
%"class.blink::DrawingBuffer" = type { %"class.cc::TextureLayerClient", %"class.WTF::RefCounted.303", %"class.WTF::Vector.305", %"class.blink::DrawingBuffer::Client"*, i32, i32, %"class.std::__1::unique_ptr.313", %"class.gpu::gles2::GLES2Interface"*, %"class.std::__1::unique_ptr.339", %"class.blink::IntSize", i8, i8, i8, i8, i8, %"struct.blink::Platform::GraphicsInfo", i8, i8, i32, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i32, i32, i32, i32, %"struct.gpu::Mailbox", i32, %class.scoped_refptr.348, %class.scoped_refptr.348, i8, i8, i32, i8, i8, %"class.gfx::ColorSpace", i32, i8, i32, i32, i32, i8, i8, i8, i32, %class.scoped_refptr.357, %"class.WTF::Deque.358", i32, i8, i32, i32, %"class.base::WeakPtrFactory.363" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted.303" = type { %"class.base::RefCounted.304" }
%"class.base::RefCounted.304" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"struct.blink::DrawingBuffer::RegisteredBitmap"*, i32, i32 }
%"struct.blink::DrawingBuffer::RegisteredBitmap" = type { %class.scoped_refptr.308, %"class.cc::SharedBitmapIdRegistration" }
%class.scoped_refptr.308 = type { %"class.cc::CrossThreadSharedBitmap"* }
%"class.cc::CrossThreadSharedBitmap" = type <{ %"class.base::RefCountedThreadSafe.309", %"struct.gpu::Mailbox", [4 x i8], %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.gfx::Size", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::SharedBitmapIdRegistration" = type { %"class.base::WeakPtr.310", %"struct.gpu::Mailbox" }
%"class.base::WeakPtr.310" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::ObserverList", %"class.base::WeakPtrFactory.335" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.328", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.330" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.335" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.blink::Platform::GraphicsInfo" = type { i32, i32, i32, i8, i8, i8, i8, i8, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.183 }
%"class.blink::DrawingBuffer::ScopedStateRestorer" = type <{ %class.scoped_refptr.302, %"class.blink::DrawingBuffer::ScopedStateRestorer"*, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%class.scoped_refptr.348 = type { %"struct.blink::DrawingBuffer::ColorBuffer"* }
%"struct.blink::DrawingBuffer::ColorBuffer" = type { %"class.base::RefCountedThreadSafe.349", %"class.base::PlatformThreadRef", %"class.base::WeakPtr.350", %"class.blink::IntSize", i32, i32, %"class.std::__1::unique_ptr.351", i32, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"struct.gpu::SyncToken" }
%"class.base::RefCountedThreadSafe.349" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.350" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.scoped_refptr.357 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.WTF::Deque.358" = type { %"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<blink::DrawingBuffer::ColorBuffer>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %class.scoped_refptr.348*, i32, i32 }
%"class.base::WeakPtrFactory.363" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::WebGLContextGroup"* }
%"class.blink::WebGLContextGroup" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.192", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.266, %"class.base::WeakPtrFactory.366" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.366" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.266 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.267" }>
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::WebGLBuffer"* }
%"class.blink::WebGLBuffer" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, i64 }
%"class.blink::WebGLSharedPlatform3DObject.base" = type <{ %"class.blink::WebGLSharedObject", i32 }>
%"class.blink::WebGLSharedObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.364" }
%"class.blink::WebGLObject.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ThreadState::PrefinalizerRegistration.369", [3 x i8], i32, i32, i8, i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.369" = type { i8 }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::WebGLVertexArrayObjectBase"* }
%"class.blink::WebGLVertexArrayObjectBase" = type <{ %"class.blink::WebGLContextObject", i32, i32, i8, [7 x i8], %"class.blink::Member.367", %"class.blink::HeapVector", %"class.WTF::Vector.379", i8, [7 x i8] }>
%"class.blink::WebGLContextObject" = type { %"class.blink::WebGLObject.base", %"class.blink::Member.372" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.193" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.375" }
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.blink::Member.367"*, i32, i32 }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { i8*, i32, i32 }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { i32*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::WebGLProgram"* }
%"class.blink::WebGLProgram" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::WebGLFramebuffer"* }
%"class.blink::WebGLFramebuffer" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::WebGLRenderbuffer"* }
%"class.blink::WebGLRenderbuffer" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.407", i32, %"class.blink::Member.408", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.189", %"class.blink::SelfKeepAlive.420" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.399" }
%"class.blink::WeakMember.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.403" }
%"class.WTF::HashSet.403" = type { %"class.WTF::HashTable.404" }
%"class.WTF::HashTable.404" = type <{ %"class.blink::WeakMember.406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.406" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.407" = type { i8 }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.412, %"class.blink::Member.413", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.412 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.415" }
%"class.blink::Persistent.415" = type { %"class.blink::PersistentBase.416" }
%"class.blink::PersistentBase.416" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.417" }
%"class.base::StrongAlias.417" = type { %"class.base::UnguessableToken" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.418 }
%class.scoped_refptr.418 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.408", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.189", %class.scoped_refptr.419 }
%class.scoped_refptr.419 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::SelfKeepAlive.420" = type { %"class.blink::Persistent.421" }
%"class.blink::Persistent.421" = type { %"class.blink::PersistentBase.422" }
%"class.blink::PersistentBase.422" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::WebGLRenderingContextBase::TextureUnitState"*, i32, i32 }
%"class.blink::WebGLRenderingContextBase::TextureUnitState" = type { %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429", %"class.blink::Member.429" }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::WebGLTexture"* }
%"class.blink::WebGLTexture" = type { %"class.blink::WebGLSharedPlatform3DObject.base", i32, %"struct.blink::WebGLTexture::VideoFrameUploadMetadata" }
%"struct.blink::WebGLTexture::VideoFrameUploadMetadata" = type <{ i32, %"class.blink::IntRect", [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGLRenderingContextBase::LRUCanvasResourceProviderCache" = type { i32, %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.std::__1::unique_ptr.195"*, i32, i32 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::Extensions3DUtil"* }
%"class.blink::Extensions3DUtil" = type <{ %"class.gpu::gles2::GLES2Interface"*, %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.blink::HeapVector.442" = type { %"class.WTF::Vector.445" }
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.447" }
%"class.WTF::VectorBufferBase.447" = type { %"class.blink::Member.448"*, i32, i32 }
%"class.blink::Member.448" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { i32*, i32, i32 }
%"class.WTF::HashSet.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::MRUCache.454" = type { %"class.base::MRUCacheBase.455" }
%"class.base::MRUCacheBase.455" = type { i32 (...)**, %"class.std::__1::list.456", %"class.std::__1::map.463", i64 }
%"class.std::__1::list.456" = type { %"class.std::__1::__list_imp.457" }
%"class.std::__1::__list_imp.457" = type { %"struct.std::__1::__list_node_base.458", %"class.std::__1::__compressed_pair.459" }
%"struct.std::__1::__list_node_base.458" = type { %"struct.std::__1::__list_node_base.458"*, %"struct.std::__1::__list_node_base.458"* }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.463" = type { %"class.std::__1::__tree.464" }
%"class.std::__1::__tree.464" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.blink::V8UnionInt32ArrayOrLongSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::NotShared", %"class.WTF::Vector.480" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::NotShared" = type { %"class.blink::Member.476" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.478" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { i32*, i32, i32 }
%"class.v8::internal::Isolate" = type opaque

@.str = private unnamed_addr constant [15 x i8] c"WebGLMultiDraw\00", align 1
@_ZN5blink16V8WebGLMultiDraw18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink16V8WebGLMultiDraw24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink16V8WebGLMultiDraw33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink14WebGLMultiDraw18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink16V8WebGLMultiDraw18wrapper_type_info_E, align 8
@_ZZN5blink16V8WebGLMultiDraw30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw46MultiDrawArraysInstancedWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 8, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw37MultiDrawArraysWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 6, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw48MultiDrawElementsInstancedWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 9, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw39MultiDrawElementsWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 7, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [30 x i8] c"multiDrawArraysInstancedWEBGL\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"multiDrawArraysWEBGL\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"multiDrawElementsInstancedWEBGL\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"multiDrawElementsWEBGL\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8WebGLMultiDraw24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #3
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #3
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8WebGLMultiDraw18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #3
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #3
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink16V8WebGLMultiDraw30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8WebGLMultiDraw33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #3
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 11) #3
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #3
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #3
  %18 = trunc i16 %17 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %15
  tail call void @_ZN2v82V817FromJustIsNothingEv() #3
  br label %21

21:                                               ; preds = %7, %20, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16V8WebGLMultiDraw30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #3
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink16V8WebGLMultiDraw30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw46MultiDrawArraysInstancedWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.488", align 8
  %3 = alloca %"class.base::span.488", align 8
  %4 = alloca %"class.base::span.488", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #3
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 8
  br i1 %25, label %26, label %46, !prof !2

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #3
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 8, i32 %24) #3
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #3
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #3
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #3
  br label %285

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %64 [
    i16 1057, label %60
    i16 1056, label %60
    i16 1040, label %60
  ]

60:                                               ; preds = %46, %46, %46
  %61 = add i64 %50, 19
  %62 = inttoptr i64 %61 to %"class.blink::WebGLMultiDraw"**
  %63 = load %"class.blink::WebGLMultiDraw"*, %"class.blink::WebGLMultiDraw"** %62, align 1
  br label %76

64:                                               ; preds = %46
  %65 = bitcast i64* %49 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #3
  %67 = load i32, i32* %23, align 8
  %68 = bitcast i8* %66 to %"class.blink::WebGLMultiDraw"*
  %69 = icmp sgt i32 %67, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = load i64*, i64** %7, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 160
  %75 = inttoptr i64 %74 to %"class.v8::Value"*
  br label %80

76:                                               ; preds = %60, %64
  %77 = phi %"class.blink::WebGLMultiDraw"* [ %63, %60 ], [ %68, %64 ]
  %78 = bitcast i64** %47 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %70, %76
  %81 = phi %"class.blink::WebGLMultiDraw"* [ %68, %70 ], [ %77, %76 ]
  %82 = phi %"class.v8::Value"* [ %75, %70 ], [ %79, %76 ]
  %83 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %82) #3
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %80
  %85 = bitcast %"class.v8::Value"* %82 to %"class.v8::Uint32"*
  %86 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %85) #3
  br label %96

87:                                               ; preds = %80
  %88 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %82) #3
  br i1 %88, label %89, label %92, !prof !3

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::Value"* %82 to %"class.v8::Int32"*
  %91 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %90) #3
  br label %96

92:                                               ; preds = %87
  %93 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %94 = load i32, i32* %20, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %285

96:                                               ; preds = %89, %84, %92
  %97 = phi i32 [ %93, %92 ], [ %91, %89 ], [ %86, %84 ]
  %98 = load i32, i32* %23, align 8
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = load i64*, i64** %7, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %96
  %107 = load i64*, i64** %47, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %112 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %111, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %113 = load i32, i32* %20, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %285

115:                                              ; preds = %110
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %7, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %47, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %129) #3
  br i1 %130, label %131, label %134, !prof !3

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Uint32"*
  %133 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %132) #3
  br label %141

134:                                              ; preds = %128
  %135 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #3
  br i1 %135, label %136, label %139, !prof !3

136:                                              ; preds = %134
  %137 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %138 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %137) #3
  br label %141

139:                                              ; preds = %134
  %140 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %141

141:                                              ; preds = %131, %136, %139
  %142 = phi i32 [ %133, %131 ], [ %138, %136 ], [ %140, %139 ]
  %143 = load i32, i32* %20, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %285

145:                                              ; preds = %141
  %146 = load i32, i32* %23, align 8
  %147 = icmp sgt i32 %146, 3
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = load i64*, i64** %7, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %145
  %155 = load i64*, i64** %47, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %159, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %161 = load i32, i32* %20, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %285

163:                                              ; preds = %158
  %164 = load i32, i32* %23, align 8
  %165 = icmp sgt i32 %164, 4
  br i1 %165, label %172, label %166

166:                                              ; preds = %163
  %167 = load i64*, i64** %7, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 1
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, 160
  %171 = inttoptr i64 %170 to %"class.v8::Value"*
  br label %176

172:                                              ; preds = %163
  %173 = load i64*, i64** %47, align 8
  %174 = getelementptr inbounds i64, i64* %173, i64 4
  %175 = bitcast i64* %174 to %"class.v8::Value"*
  br label %176

176:                                              ; preds = %166, %172
  %177 = phi %"class.v8::Value"* [ %171, %166 ], [ %175, %172 ]
  %178 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %177) #3
  br i1 %178, label %179, label %182, !prof !3

179:                                              ; preds = %176
  %180 = bitcast %"class.v8::Value"* %177 to %"class.v8::Uint32"*
  %181 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %180) #3
  br label %189

182:                                              ; preds = %176
  %183 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %177) #3
  br i1 %183, label %184, label %187, !prof !3

184:                                              ; preds = %182
  %185 = bitcast %"class.v8::Value"* %177 to %"class.v8::Int32"*
  %186 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %185) #3
  br label %189

187:                                              ; preds = %182
  %188 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %177, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %189

189:                                              ; preds = %179, %184, %187
  %190 = phi i32 [ %181, %179 ], [ %186, %184 ], [ %188, %187 ]
  %191 = load i32, i32* %20, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %285

193:                                              ; preds = %189
  %194 = load i32, i32* %23, align 8
  %195 = icmp sgt i32 %194, 5
  br i1 %195, label %202, label %196

196:                                              ; preds = %193
  %197 = load i64*, i64** %7, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 160
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  br label %206

202:                                              ; preds = %193
  %203 = load i64*, i64** %47, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 5
  %205 = bitcast i64* %204 to %"class.v8::Value"*
  br label %206

206:                                              ; preds = %196, %202
  %207 = phi %"class.v8::Value"* [ %201, %196 ], [ %205, %202 ]
  %208 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %207, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %209 = load i32, i32* %20, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %285

211:                                              ; preds = %206
  %212 = load i32, i32* %23, align 8
  %213 = icmp sgt i32 %212, 6
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = load i64*, i64** %7, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 1
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, 160
  %219 = inttoptr i64 %218 to %"class.v8::Value"*
  br label %224

220:                                              ; preds = %211
  %221 = load i64*, i64** %47, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 6
  %223 = bitcast i64* %222 to %"class.v8::Value"*
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi %"class.v8::Value"* [ %219, %214 ], [ %223, %220 ]
  %226 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %225) #3
  br i1 %226, label %227, label %230, !prof !3

227:                                              ; preds = %224
  %228 = bitcast %"class.v8::Value"* %225 to %"class.v8::Uint32"*
  %229 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %228) #3
  br label %237

230:                                              ; preds = %224
  %231 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %225) #3
  br i1 %231, label %232, label %235, !prof !3

232:                                              ; preds = %230
  %233 = bitcast %"class.v8::Value"* %225 to %"class.v8::Int32"*
  %234 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %233) #3
  br label %237

235:                                              ; preds = %230
  %236 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %225, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %237

237:                                              ; preds = %227, %232, %235
  %238 = phi i32 [ %229, %227 ], [ %234, %232 ], [ %236, %235 ]
  %239 = load i32, i32* %20, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %285

241:                                              ; preds = %237
  %242 = load i32, i32* %23, align 8
  %243 = icmp sgt i32 %242, 7
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = load i64*, i64** %7, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, 160
  %249 = inttoptr i64 %248 to %"class.v8::Value"*
  br label %254

250:                                              ; preds = %241
  %251 = load i64*, i64** %47, align 8
  %252 = getelementptr inbounds i64, i64* %251, i64 7
  %253 = bitcast i64* %252 to %"class.v8::Value"*
  br label %254

254:                                              ; preds = %244, %250
  %255 = phi %"class.v8::Value"* [ %249, %244 ], [ %253, %250 ]
  %256 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %255) #3
  br i1 %256, label %257, label %260, !prof !3

257:                                              ; preds = %254
  %258 = bitcast %"class.v8::Value"* %255 to %"class.v8::Int32"*
  %259 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %258) #3
  br label %262

260:                                              ; preds = %254
  %261 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %255, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %262

262:                                              ; preds = %257, %260
  %263 = phi i32 [ %259, %257 ], [ %261, %260 ]
  %264 = load i32, i32* %20, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %285

266:                                              ; preds = %262
  %267 = bitcast %"class.base::span.488"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #3
  %268 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %112) #3
  %269 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 0, i32 0
  %270 = extractvalue { i64, i32* } %268, 0
  store i64 %270, i64* %269, align 8
  %271 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 1
  %272 = extractvalue { i64, i32* } %268, 1
  store i32* %272, i32** %271, align 8
  %273 = bitcast %"class.base::span.488"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #3
  %274 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %160) #3
  %275 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 0, i32 0
  %276 = extractvalue { i64, i32* } %274, 0
  store i64 %276, i64* %275, align 8
  %277 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 1
  %278 = extractvalue { i64, i32* } %274, 1
  store i32* %278, i32** %277, align 8
  %279 = bitcast %"class.base::span.488"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #3
  %280 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %208) #3
  %281 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %4, i64 0, i32 0, i32 0
  %282 = extractvalue { i64, i32* } %280, 0
  store i64 %282, i64* %281, align 8
  %283 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %4, i64 0, i32 1
  %284 = extractvalue { i64, i32* } %280, 1
  store i32* %284, i32** %283, align 8
  call void @_ZN5blink14WebGLMultiDraw28multiDrawArraysInstancedImplEjRKN4base4spanIKiLm18446744073709551615EEEjS6_jS6_ji(%"class.blink::WebGLMultiDraw"* %81, i32 %97, %"class.base::span.488"* nonnull dereferenceable(16) %2, i32 %142, %"class.base::span.488"* nonnull dereferenceable(16) %3, i32 %190, %"class.base::span.488"* nonnull dereferenceable(16) %4, i32 %238, i32 %263) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %273) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #3
  br label %285

285:                                              ; preds = %262, %237, %206, %189, %158, %141, %110, %92, %266, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %286 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %287 = load i64*, i64** %286, align 8
  %288 = icmp eq i64* %287, null
  br i1 %288, label %298, label %289

289:                                              ; preds = %285
  %290 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %291 = bitcast %"class.v8::Isolate"* %290 to %"class.v8::internal::Isolate"*
  %292 = load i64, i64* %287, align 8
  %293 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %291, i64 %292) #3
  %294 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %290) #3
  br i1 %294, label %298, label %295

295:                                              ; preds = %289
  %296 = bitcast i64* %293 to %"class.v8::Value"*
  %297 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %290, %"class.v8::Value"* %296) #3
  br label %298

298:                                              ; preds = %295, %289, %285
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #3
  br label %314

314:                                              ; preds = %298, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw37MultiDrawArraysWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.488", align 8
  %3 = alloca %"class.base::span.488", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #3
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 6
  br i1 %24, label %25, label %45, !prof !2

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #3
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %23) #3
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #3
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #3
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #3
  br label %230

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::WebGLMultiDraw"**
  %62 = load %"class.blink::WebGLMultiDraw"*, %"class.blink::WebGLMultiDraw"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #3
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::WebGLMultiDraw"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::WebGLMultiDraw"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::WebGLMultiDraw"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #3
  br i1 %82, label %83, label %86, !prof !3

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #3
  br label %95

86:                                               ; preds = %79
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #3
  br i1 %87, label %88, label %91, !prof !3

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #3
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %93 = load i32, i32* %19, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %230

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %22, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %6, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %46, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %110, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %112 = load i32, i32* %19, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %230

114:                                              ; preds = %109
  %115 = load i32, i32* %22, align 8
  %116 = icmp sgt i32 %115, 2
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = load i64*, i64** %6, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %114
  %124 = load i64*, i64** %46, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 2
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %128) #3
  br i1 %129, label %130, label %133, !prof !3

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Uint32"*
  %132 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %131) #3
  br label %140

133:                                              ; preds = %127
  %134 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %128) #3
  br i1 %134, label %135, label %138, !prof !3

135:                                              ; preds = %133
  %136 = bitcast %"class.v8::Value"* %128 to %"class.v8::Int32"*
  %137 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %136) #3
  br label %140

138:                                              ; preds = %133
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %128, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %140

140:                                              ; preds = %130, %135, %138
  %141 = phi i32 [ %132, %130 ], [ %137, %135 ], [ %139, %138 ]
  %142 = load i32, i32* %19, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %230

144:                                              ; preds = %140
  %145 = load i32, i32* %22, align 8
  %146 = icmp sgt i32 %145, 3
  br i1 %146, label %153, label %147

147:                                              ; preds = %144
  %148 = load i64*, i64** %6, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 160
  %152 = inttoptr i64 %151 to %"class.v8::Value"*
  br label %157

153:                                              ; preds = %144
  %154 = load i64*, i64** %46, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 3
  %156 = bitcast i64* %155 to %"class.v8::Value"*
  br label %157

157:                                              ; preds = %147, %153
  %158 = phi %"class.v8::Value"* [ %152, %147 ], [ %156, %153 ]
  %159 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %158, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %160 = load i32, i32* %19, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %230

162:                                              ; preds = %157
  %163 = load i32, i32* %22, align 8
  %164 = icmp sgt i32 %163, 4
  br i1 %164, label %171, label %165

165:                                              ; preds = %162
  %166 = load i64*, i64** %6, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 160
  %170 = inttoptr i64 %169 to %"class.v8::Value"*
  br label %175

171:                                              ; preds = %162
  %172 = load i64*, i64** %46, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 4
  %174 = bitcast i64* %173 to %"class.v8::Value"*
  br label %175

175:                                              ; preds = %165, %171
  %176 = phi %"class.v8::Value"* [ %170, %165 ], [ %174, %171 ]
  %177 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %176) #3
  br i1 %177, label %178, label %181, !prof !3

178:                                              ; preds = %175
  %179 = bitcast %"class.v8::Value"* %176 to %"class.v8::Uint32"*
  %180 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %179) #3
  br label %188

181:                                              ; preds = %175
  %182 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %176) #3
  br i1 %182, label %183, label %186, !prof !3

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::Value"* %176 to %"class.v8::Int32"*
  %185 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %184) #3
  br label %188

186:                                              ; preds = %181
  %187 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %176, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %188

188:                                              ; preds = %178, %183, %186
  %189 = phi i32 [ %180, %178 ], [ %185, %183 ], [ %187, %186 ]
  %190 = load i32, i32* %19, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %230

192:                                              ; preds = %188
  %193 = load i32, i32* %22, align 8
  %194 = icmp sgt i32 %193, 5
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load i64*, i64** %6, align 8
  %197 = getelementptr inbounds i64, i64* %196, i64 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 160
  %200 = inttoptr i64 %199 to %"class.v8::Value"*
  br label %205

201:                                              ; preds = %192
  %202 = load i64*, i64** %46, align 8
  %203 = getelementptr inbounds i64, i64* %202, i64 5
  %204 = bitcast i64* %203 to %"class.v8::Value"*
  br label %205

205:                                              ; preds = %195, %201
  %206 = phi %"class.v8::Value"* [ %200, %195 ], [ %204, %201 ]
  %207 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %206) #3
  br i1 %207, label %208, label %211, !prof !3

208:                                              ; preds = %205
  %209 = bitcast %"class.v8::Value"* %206 to %"class.v8::Int32"*
  %210 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %209) #3
  br label %213

211:                                              ; preds = %205
  %212 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %206, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %213

213:                                              ; preds = %208, %211
  %214 = phi i32 [ %210, %208 ], [ %212, %211 ]
  %215 = load i32, i32* %19, align 8
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %230

217:                                              ; preds = %213
  %218 = bitcast %"class.base::span.488"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #3
  %219 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %111) #3
  %220 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 0, i32 0
  %221 = extractvalue { i64, i32* } %219, 0
  store i64 %221, i64* %220, align 8
  %222 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 1
  %223 = extractvalue { i64, i32* } %219, 1
  store i32* %223, i32** %222, align 8
  %224 = bitcast %"class.base::span.488"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #3
  %225 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %159) #3
  %226 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 0, i32 0
  %227 = extractvalue { i64, i32* } %225, 0
  store i64 %227, i64* %226, align 8
  %228 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 1
  %229 = extractvalue { i64, i32* } %225, 1
  store i32* %229, i32** %228, align 8
  call void @_ZN5blink14WebGLMultiDraw19multiDrawArraysImplEjRKN4base4spanIKiLm18446744073709551615EEEjS6_ji(%"class.blink::WebGLMultiDraw"* %80, i32 %96, %"class.base::span.488"* nonnull dereferenceable(16) %2, i32 %141, %"class.base::span.488"* nonnull dereferenceable(16) %3, i32 %189, i32 %214) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #3
  br label %230

230:                                              ; preds = %213, %188, %157, %140, %109, %91, %217, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %231 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %232 = load i64*, i64** %231, align 8
  %233 = icmp eq i64* %232, null
  br i1 %233, label %243, label %234

234:                                              ; preds = %230
  %235 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %236 = bitcast %"class.v8::Isolate"* %235 to %"class.v8::internal::Isolate"*
  %237 = load i64, i64* %232, align 8
  %238 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %236, i64 %237) #3
  %239 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %235) #3
  br i1 %239, label %243, label %240

240:                                              ; preds = %234
  %241 = bitcast i64* %238 to %"class.v8::Value"*
  %242 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %235, %"class.v8::Value"* %241) #3
  br label %243

243:                                              ; preds = %240, %234, %230
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %259, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #3
  br label %259

259:                                              ; preds = %243, %255, %258
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw48MultiDrawElementsInstancedWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.488", align 8
  %3 = alloca %"class.base::span.488", align 8
  %4 = alloca %"class.base::span.488", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #3
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 9
  br i1 %25, label %26, label %46, !prof !2

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #3
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 9, i32 %24) #3
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #3
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #3
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #3
  br label %315

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %64 [
    i16 1057, label %60
    i16 1056, label %60
    i16 1040, label %60
  ]

60:                                               ; preds = %46, %46, %46
  %61 = add i64 %50, 19
  %62 = inttoptr i64 %61 to %"class.blink::WebGLMultiDraw"**
  %63 = load %"class.blink::WebGLMultiDraw"*, %"class.blink::WebGLMultiDraw"** %62, align 1
  br label %76

64:                                               ; preds = %46
  %65 = bitcast i64* %49 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #3
  %67 = load i32, i32* %23, align 8
  %68 = bitcast i8* %66 to %"class.blink::WebGLMultiDraw"*
  %69 = icmp sgt i32 %67, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = load i64*, i64** %7, align 8
  %72 = getelementptr inbounds i64, i64* %71, i64 1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 160
  %75 = inttoptr i64 %74 to %"class.v8::Value"*
  br label %80

76:                                               ; preds = %60, %64
  %77 = phi %"class.blink::WebGLMultiDraw"* [ %63, %60 ], [ %68, %64 ]
  %78 = bitcast i64** %47 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %70, %76
  %81 = phi %"class.blink::WebGLMultiDraw"* [ %68, %70 ], [ %77, %76 ]
  %82 = phi %"class.v8::Value"* [ %75, %70 ], [ %79, %76 ]
  %83 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %82) #3
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %80
  %85 = bitcast %"class.v8::Value"* %82 to %"class.v8::Uint32"*
  %86 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %85) #3
  br label %96

87:                                               ; preds = %80
  %88 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %82) #3
  br i1 %88, label %89, label %92, !prof !3

89:                                               ; preds = %87
  %90 = bitcast %"class.v8::Value"* %82 to %"class.v8::Int32"*
  %91 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %90) #3
  br label %96

92:                                               ; preds = %87
  %93 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %82, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %94 = load i32, i32* %20, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %315

96:                                               ; preds = %89, %84, %92
  %97 = phi i32 [ %93, %92 ], [ %91, %89 ], [ %86, %84 ]
  %98 = load i32, i32* %23, align 8
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = load i64*, i64** %7, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %96
  %107 = load i64*, i64** %47, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  %112 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %111, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %113 = load i32, i32* %20, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %315

115:                                              ; preds = %110
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %7, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %47, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %118, %124
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %129) #3
  br i1 %130, label %131, label %134, !prof !3

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Uint32"*
  %133 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %132) #3
  br label %141

134:                                              ; preds = %128
  %135 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %129) #3
  br i1 %135, label %136, label %139, !prof !3

136:                                              ; preds = %134
  %137 = bitcast %"class.v8::Value"* %129 to %"class.v8::Int32"*
  %138 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %137) #3
  br label %141

139:                                              ; preds = %134
  %140 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %129, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %141

141:                                              ; preds = %131, %136, %139
  %142 = phi i32 [ %133, %131 ], [ %138, %136 ], [ %140, %139 ]
  %143 = load i32, i32* %20, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %315

145:                                              ; preds = %141
  %146 = load i32, i32* %23, align 8
  %147 = icmp sgt i32 %146, 3
  br i1 %147, label %154, label %148

148:                                              ; preds = %145
  %149 = load i64*, i64** %7, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 1
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 160
  %153 = inttoptr i64 %152 to %"class.v8::Value"*
  br label %158

154:                                              ; preds = %145
  %155 = load i64*, i64** %47, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = bitcast i64* %156 to %"class.v8::Value"*
  br label %158

158:                                              ; preds = %148, %154
  %159 = phi %"class.v8::Value"* [ %153, %148 ], [ %157, %154 ]
  %160 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %159) #3
  br i1 %160, label %161, label %164, !prof !3

161:                                              ; preds = %158
  %162 = bitcast %"class.v8::Value"* %159 to %"class.v8::Uint32"*
  %163 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %162) #3
  br label %171

164:                                              ; preds = %158
  %165 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %159) #3
  br i1 %165, label %166, label %169, !prof !3

166:                                              ; preds = %164
  %167 = bitcast %"class.v8::Value"* %159 to %"class.v8::Int32"*
  %168 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %167) #3
  br label %171

169:                                              ; preds = %164
  %170 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %159, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %171

171:                                              ; preds = %161, %166, %169
  %172 = phi i32 [ %163, %161 ], [ %168, %166 ], [ %170, %169 ]
  %173 = load i32, i32* %20, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %315

175:                                              ; preds = %171
  %176 = load i32, i32* %23, align 8
  %177 = icmp sgt i32 %176, 4
  br i1 %177, label %184, label %178

178:                                              ; preds = %175
  %179 = load i64*, i64** %7, align 8
  %180 = getelementptr inbounds i64, i64* %179, i64 1
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 160
  %183 = inttoptr i64 %182 to %"class.v8::Value"*
  br label %188

184:                                              ; preds = %175
  %185 = load i64*, i64** %47, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 4
  %187 = bitcast i64* %186 to %"class.v8::Value"*
  br label %188

188:                                              ; preds = %178, %184
  %189 = phi %"class.v8::Value"* [ %183, %178 ], [ %187, %184 ]
  %190 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %189, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %191 = load i32, i32* %20, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %315

193:                                              ; preds = %188
  %194 = load i32, i32* %23, align 8
  %195 = icmp sgt i32 %194, 5
  br i1 %195, label %202, label %196

196:                                              ; preds = %193
  %197 = load i64*, i64** %7, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 160
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  br label %206

202:                                              ; preds = %193
  %203 = load i64*, i64** %47, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 5
  %205 = bitcast i64* %204 to %"class.v8::Value"*
  br label %206

206:                                              ; preds = %196, %202
  %207 = phi %"class.v8::Value"* [ %201, %196 ], [ %205, %202 ]
  %208 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %207) #3
  br i1 %208, label %209, label %212, !prof !3

209:                                              ; preds = %206
  %210 = bitcast %"class.v8::Value"* %207 to %"class.v8::Uint32"*
  %211 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %210) #3
  br label %219

212:                                              ; preds = %206
  %213 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %207) #3
  br i1 %213, label %214, label %217, !prof !3

214:                                              ; preds = %212
  %215 = bitcast %"class.v8::Value"* %207 to %"class.v8::Int32"*
  %216 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %215) #3
  br label %219

217:                                              ; preds = %212
  %218 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %207, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %219

219:                                              ; preds = %209, %214, %217
  %220 = phi i32 [ %211, %209 ], [ %216, %214 ], [ %218, %217 ]
  %221 = load i32, i32* %20, align 8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %315

223:                                              ; preds = %219
  %224 = load i32, i32* %23, align 8
  %225 = icmp sgt i32 %224, 6
  br i1 %225, label %232, label %226

226:                                              ; preds = %223
  %227 = load i64*, i64** %7, align 8
  %228 = getelementptr inbounds i64, i64* %227, i64 1
  %229 = load i64, i64* %228, align 8
  %230 = add i64 %229, 160
  %231 = inttoptr i64 %230 to %"class.v8::Value"*
  br label %236

232:                                              ; preds = %223
  %233 = load i64*, i64** %47, align 8
  %234 = getelementptr inbounds i64, i64* %233, i64 6
  %235 = bitcast i64* %234 to %"class.v8::Value"*
  br label %236

236:                                              ; preds = %226, %232
  %237 = phi %"class.v8::Value"* [ %231, %226 ], [ %235, %232 ]
  %238 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %237, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  %239 = load i32, i32* %20, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %315

241:                                              ; preds = %236
  %242 = load i32, i32* %23, align 8
  %243 = icmp sgt i32 %242, 7
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = load i64*, i64** %7, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, 160
  %249 = inttoptr i64 %248 to %"class.v8::Value"*
  br label %254

250:                                              ; preds = %241
  %251 = load i64*, i64** %47, align 8
  %252 = getelementptr inbounds i64, i64* %251, i64 7
  %253 = bitcast i64* %252 to %"class.v8::Value"*
  br label %254

254:                                              ; preds = %244, %250
  %255 = phi %"class.v8::Value"* [ %249, %244 ], [ %253, %250 ]
  %256 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %255) #3
  br i1 %256, label %257, label %260, !prof !3

257:                                              ; preds = %254
  %258 = bitcast %"class.v8::Value"* %255 to %"class.v8::Uint32"*
  %259 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %258) #3
  br label %267

260:                                              ; preds = %254
  %261 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %255) #3
  br i1 %261, label %262, label %265, !prof !3

262:                                              ; preds = %260
  %263 = bitcast %"class.v8::Value"* %255 to %"class.v8::Int32"*
  %264 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %263) #3
  br label %267

265:                                              ; preds = %260
  %266 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %255, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %267

267:                                              ; preds = %257, %262, %265
  %268 = phi i32 [ %259, %257 ], [ %264, %262 ], [ %266, %265 ]
  %269 = load i32, i32* %20, align 8
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %315

271:                                              ; preds = %267
  %272 = load i32, i32* %23, align 8
  %273 = icmp sgt i32 %272, 8
  br i1 %273, label %280, label %274

274:                                              ; preds = %271
  %275 = load i64*, i64** %7, align 8
  %276 = getelementptr inbounds i64, i64* %275, i64 1
  %277 = load i64, i64* %276, align 8
  %278 = add i64 %277, 160
  %279 = inttoptr i64 %278 to %"class.v8::Value"*
  br label %284

280:                                              ; preds = %271
  %281 = load i64*, i64** %47, align 8
  %282 = getelementptr inbounds i64, i64* %281, i64 8
  %283 = bitcast i64* %282 to %"class.v8::Value"*
  br label %284

284:                                              ; preds = %274, %280
  %285 = phi %"class.v8::Value"* [ %279, %274 ], [ %283, %280 ]
  %286 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %285) #3
  br i1 %286, label %287, label %290, !prof !3

287:                                              ; preds = %284
  %288 = bitcast %"class.v8::Value"* %285 to %"class.v8::Int32"*
  %289 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %288) #3
  br label %292

290:                                              ; preds = %284
  %291 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %285, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #3
  br label %292

292:                                              ; preds = %287, %290
  %293 = phi i32 [ %289, %287 ], [ %291, %290 ]
  %294 = load i32, i32* %20, align 8
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %315

296:                                              ; preds = %292
  %297 = bitcast %"class.base::span.488"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297) #3
  %298 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %112) #3
  %299 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 0, i32 0
  %300 = extractvalue { i64, i32* } %298, 0
  store i64 %300, i64* %299, align 8
  %301 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 1
  %302 = extractvalue { i64, i32* } %298, 1
  store i32* %302, i32** %301, align 8
  %303 = bitcast %"class.base::span.488"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %303) #3
  %304 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %190) #3
  %305 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 0, i32 0
  %306 = extractvalue { i64, i32* } %304, 0
  store i64 %306, i64* %305, align 8
  %307 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 1
  %308 = extractvalue { i64, i32* } %304, 1
  store i32* %308, i32** %307, align 8
  %309 = bitcast %"class.base::span.488"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %309) #3
  %310 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %238) #3
  %311 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %4, i64 0, i32 0, i32 0
  %312 = extractvalue { i64, i32* } %310, 0
  store i64 %312, i64* %311, align 8
  %313 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %4, i64 0, i32 1
  %314 = extractvalue { i64, i32* } %310, 1
  store i32* %314, i32** %313, align 8
  call void @_ZN5blink14WebGLMultiDraw30multiDrawElementsInstancedImplEjRKN4base4spanIKiLm18446744073709551615EEEjjS6_jS6_ji(%"class.blink::WebGLMultiDraw"* %81, i32 %97, %"class.base::span.488"* nonnull dereferenceable(16) %2, i32 %142, i32 %172, %"class.base::span.488"* nonnull dereferenceable(16) %3, i32 %220, %"class.base::span.488"* nonnull dereferenceable(16) %4, i32 %268, i32 %293) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %309) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %303) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297) #3
  br label %315

315:                                              ; preds = %292, %267, %236, %219, %188, %171, %141, %110, %92, %296, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %316 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  br i1 %318, label %328, label %319

319:                                              ; preds = %315
  %320 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %321 = bitcast %"class.v8::Isolate"* %320 to %"class.v8::internal::Isolate"*
  %322 = load i64, i64* %317, align 8
  %323 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %321, i64 %322) #3
  %324 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %320) #3
  br i1 %324, label %328, label %325

325:                                              ; preds = %319
  %326 = bitcast i64* %323 to %"class.v8::Value"*
  %327 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %320, %"class.v8::Value"* %326) #3
  br label %328

328:                                              ; preds = %325, %319, %315
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #3
  br label %344

344:                                              ; preds = %328, %340, %343
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119v8_webgl_multi_draw39MultiDrawElementsWEBGLOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.base::span.488", align 8
  %3 = alloca %"class.base::span.488", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #3
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 7
  br i1 %24, label %25, label %45, !prof !2

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #3
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %23) #3
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #3
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #3
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #3
  br label %260

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::WebGLMultiDraw"**
  %62 = load %"class.blink::WebGLMultiDraw"*, %"class.blink::WebGLMultiDraw"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #3
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::WebGLMultiDraw"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::WebGLMultiDraw"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::WebGLMultiDraw"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #3
  br i1 %82, label %83, label %86, !prof !3

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #3
  br label %95

86:                                               ; preds = %79
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #3
  br i1 %87, label %88, label %91, !prof !3

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #3
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %93 = load i32, i32* %19, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %260

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %22, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %6, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %46, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %110, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %112 = load i32, i32* %19, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %260

114:                                              ; preds = %109
  %115 = load i32, i32* %22, align 8
  %116 = icmp sgt i32 %115, 2
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = load i64*, i64** %6, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %114
  %124 = load i64*, i64** %46, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 2
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %128) #3
  br i1 %129, label %130, label %133, !prof !3

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Uint32"*
  %132 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %131) #3
  br label %140

133:                                              ; preds = %127
  %134 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %128) #3
  br i1 %134, label %135, label %138, !prof !3

135:                                              ; preds = %133
  %136 = bitcast %"class.v8::Value"* %128 to %"class.v8::Int32"*
  %137 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %136) #3
  br label %140

138:                                              ; preds = %133
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %128, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %140

140:                                              ; preds = %130, %135, %138
  %141 = phi i32 [ %132, %130 ], [ %137, %135 ], [ %139, %138 ]
  %142 = load i32, i32* %19, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %260

144:                                              ; preds = %140
  %145 = load i32, i32* %22, align 8
  %146 = icmp sgt i32 %145, 3
  br i1 %146, label %153, label %147

147:                                              ; preds = %144
  %148 = load i64*, i64** %6, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 160
  %152 = inttoptr i64 %151 to %"class.v8::Value"*
  br label %157

153:                                              ; preds = %144
  %154 = load i64*, i64** %46, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 3
  %156 = bitcast i64* %155 to %"class.v8::Value"*
  br label %157

157:                                              ; preds = %147, %153
  %158 = phi %"class.v8::Value"* [ %152, %147 ], [ %156, %153 ]
  %159 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %158) #3
  br i1 %159, label %160, label %163, !prof !3

160:                                              ; preds = %157
  %161 = bitcast %"class.v8::Value"* %158 to %"class.v8::Uint32"*
  %162 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %161) #3
  br label %170

163:                                              ; preds = %157
  %164 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %158) #3
  br i1 %164, label %165, label %168, !prof !3

165:                                              ; preds = %163
  %166 = bitcast %"class.v8::Value"* %158 to %"class.v8::Int32"*
  %167 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %166) #3
  br label %170

168:                                              ; preds = %163
  %169 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %158, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %170

170:                                              ; preds = %160, %165, %168
  %171 = phi i32 [ %162, %160 ], [ %167, %165 ], [ %169, %168 ]
  %172 = load i32, i32* %19, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %260

174:                                              ; preds = %170
  %175 = load i32, i32* %22, align 8
  %176 = icmp sgt i32 %175, 4
  br i1 %176, label %183, label %177

177:                                              ; preds = %174
  %178 = load i64*, i64** %6, align 8
  %179 = getelementptr inbounds i64, i64* %178, i64 1
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 160
  %182 = inttoptr i64 %181 to %"class.v8::Value"*
  br label %187

183:                                              ; preds = %174
  %184 = load i64*, i64** %46, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 4
  %186 = bitcast i64* %185 to %"class.v8::Value"*
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi %"class.v8::Value"* [ %182, %177 ], [ %186, %183 ]
  %189 = call %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %188, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  %190 = load i32, i32* %19, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %260

192:                                              ; preds = %187
  %193 = load i32, i32* %22, align 8
  %194 = icmp sgt i32 %193, 5
  br i1 %194, label %201, label %195

195:                                              ; preds = %192
  %196 = load i64*, i64** %6, align 8
  %197 = getelementptr inbounds i64, i64* %196, i64 1
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 160
  %200 = inttoptr i64 %199 to %"class.v8::Value"*
  br label %205

201:                                              ; preds = %192
  %202 = load i64*, i64** %46, align 8
  %203 = getelementptr inbounds i64, i64* %202, i64 5
  %204 = bitcast i64* %203 to %"class.v8::Value"*
  br label %205

205:                                              ; preds = %195, %201
  %206 = phi %"class.v8::Value"* [ %200, %195 ], [ %204, %201 ]
  %207 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %206) #3
  br i1 %207, label %208, label %211, !prof !3

208:                                              ; preds = %205
  %209 = bitcast %"class.v8::Value"* %206 to %"class.v8::Uint32"*
  %210 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %209) #3
  br label %218

211:                                              ; preds = %205
  %212 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %206) #3
  br i1 %212, label %213, label %216, !prof !3

213:                                              ; preds = %211
  %214 = bitcast %"class.v8::Value"* %206 to %"class.v8::Int32"*
  %215 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %214) #3
  br label %218

216:                                              ; preds = %211
  %217 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %206, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %218

218:                                              ; preds = %208, %213, %216
  %219 = phi i32 [ %210, %208 ], [ %215, %213 ], [ %217, %216 ]
  %220 = load i32, i32* %19, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %260

222:                                              ; preds = %218
  %223 = load i32, i32* %22, align 8
  %224 = icmp sgt i32 %223, 6
  br i1 %224, label %231, label %225

225:                                              ; preds = %222
  %226 = load i64*, i64** %6, align 8
  %227 = getelementptr inbounds i64, i64* %226, i64 1
  %228 = load i64, i64* %227, align 8
  %229 = add i64 %228, 160
  %230 = inttoptr i64 %229 to %"class.v8::Value"*
  br label %235

231:                                              ; preds = %222
  %232 = load i64*, i64** %46, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 6
  %234 = bitcast i64* %233 to %"class.v8::Value"*
  br label %235

235:                                              ; preds = %225, %231
  %236 = phi %"class.v8::Value"* [ %230, %225 ], [ %234, %231 ]
  %237 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %236) #3
  br i1 %237, label %238, label %241, !prof !3

238:                                              ; preds = %235
  %239 = bitcast %"class.v8::Value"* %236 to %"class.v8::Int32"*
  %240 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %239) #3
  br label %243

241:                                              ; preds = %235
  %242 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %236, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #3
  br label %243

243:                                              ; preds = %238, %241
  %244 = phi i32 [ %240, %238 ], [ %242, %241 ]
  %245 = load i32, i32* %19, align 8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %260

247:                                              ; preds = %243
  %248 = bitcast %"class.base::span.488"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #3
  %249 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %111) #3
  %250 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 0, i32 0
  %251 = extractvalue { i64, i32* } %249, 0
  store i64 %251, i64* %250, align 8
  %252 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %2, i64 0, i32 1
  %253 = extractvalue { i64, i32* } %249, 1
  store i32* %253, i32** %252, align 8
  %254 = bitcast %"class.base::span.488"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %254) #3
  %255 = call { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"* %189) #3
  %256 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 0, i32 0
  %257 = extractvalue { i64, i32* } %255, 0
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds %"class.base::span.488", %"class.base::span.488"* %3, i64 0, i32 1
  %259 = extractvalue { i64, i32* } %255, 1
  store i32* %259, i32** %258, align 8
  call void @_ZN5blink14WebGLMultiDraw21multiDrawElementsImplEjRKN4base4spanIKiLm18446744073709551615EEEjjS6_ji(%"class.blink::WebGLMultiDraw"* %80, i32 %96, %"class.base::span.488"* nonnull dereferenceable(16) %2, i32 %141, i32 %171, %"class.base::span.488"* nonnull dereferenceable(16) %3, i32 %219, i32 %244) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %254) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #3
  br label %260

260:                                              ; preds = %243, %218, %187, %170, %140, %109, %91, %247, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %261 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %262 = load i64*, i64** %261, align 8
  %263 = icmp eq i64* %262, null
  br i1 %263, label %273, label %264

264:                                              ; preds = %260
  %265 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %266 = bitcast %"class.v8::Isolate"* %265 to %"class.v8::internal::Isolate"*
  %267 = load i64, i64* %262, align 8
  %268 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %266, i64 %267) #3
  %269 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %265) #3
  br i1 %269, label %273, label %270

270:                                              ; preds = %264
  %271 = bitcast i64* %268 to %"class.v8::Value"*
  %272 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %265, %"class.v8::Value"* %271) #3
  br label %273

273:                                              ; preds = %270, %264, %260
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #3
  br label %289

289:                                              ; preds = %273, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #3
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::V8UnionInt32ArrayOrLongSequence"* @_ZN5blink31V8UnionInt32ArrayOrLongSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink14WebGLMultiDraw28multiDrawArraysInstancedImplEjRKN4base4spanIKiLm18446744073709551615EEEjS6_jS6_ji(%"class.blink::WebGLMultiDraw"*, i32, %"class.base::span.488"* dereferenceable(16), i32, %"class.base::span.488"* dereferenceable(16), i32, %"class.base::span.488"* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare { i64, i32* } @_ZN5blink20WebGLMultiDrawCommon8MakeSpanEPKNS_31V8UnionInt32ArrayOrLongSequenceE(%"class.blink::V8UnionInt32ArrayOrLongSequence"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink14WebGLMultiDraw19multiDrawArraysImplEjRKN4base4spanIKiLm18446744073709551615EEEjS6_ji(%"class.blink::WebGLMultiDraw"*, i32, %"class.base::span.488"* dereferenceable(16), i32, %"class.base::span.488"* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare void @_ZN5blink14WebGLMultiDraw30multiDrawElementsInstancedImplEjRKN4base4spanIKiLm18446744073709551615EEEjjS6_jS6_ji(%"class.blink::WebGLMultiDraw"*, i32, %"class.base::span.488"* dereferenceable(16), i32, i32, %"class.base::span.488"* dereferenceable(16), i32, %"class.base::span.488"* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare void @_ZN5blink14WebGLMultiDraw21multiDrawElementsImplEjRKN4base4spanIKiLm18446744073709551615EEEjjS6_ji(%"class.blink::WebGLMultiDraw"*, i32, %"class.base::span.488"* dereferenceable(16), i32, i32, %"class.base::span.488"* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
