; ModuleID = '../../third_party/ffmpeg/libavutil/x86/autorename_libavutil_x86_cpu.c'
source_filename = "../../third_party/ffmpeg/libavutil/x86/autorename_libavutil_x86_cpu.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.anon = type { [3 x i32] }

@.str = private unnamed_addr constant [13 x i8] c"AuthenticAMD\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"GenuineIntel\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_get_cpu_flags_x86() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %union.anon, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #4
  store i32 -1431655766, i32* %1, align 4
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #4
  store i32 -1431655766, i32* %2, align 4
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  store i32 -1431655766, i32* %3, align 4
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #4
  store i32 -1431655766, i32* %4, align 4
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #4
  store i32 -1431655766, i32* %5, align 4
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #4
  store i32 -1431655766, i32* %6, align 4
  %18 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #4
  store i32 0, i32* %7, align 4
  %19 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #4
  store i32 0, i32* %8, align 4
  %20 = bitcast %union.anon* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #4
  %21 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i64 0
  store i32 -1431655766, i32* %21, align 4
  %22 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i64 1
  store i32 -1431655766, i32* %22, align 4
  %23 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0, i64 2
  store i32 -1431655766, i32* %23, align 4
  %24 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #4
  store i32 0, i32* %10, align 4
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #4
  store i32 0, i32* %11, align 4
  call void @ff_cpu_cpuid(i32 0, i32* nonnull %5, i32* nonnull %21, i32* %23, i32* %22) #4
  %26 = load i32, i32* %5, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %116

28:                                               ; preds = %0
  call void @ff_cpu_cpuid(i32 1, i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %7) #4
  %29 = load i32, i32* %1, align 4
  %30 = lshr i32 %29, 8
  %31 = and i32 %30, 15
  %32 = lshr i32 %29, 20
  %33 = and i32 %32, 255
  %34 = add nuw nsw i32 %31, %33
  %35 = lshr i32 %29, 4
  %36 = and i32 %35, 15
  %37 = lshr i32 %29, 12
  %38 = and i32 %37, 240
  %39 = or i32 %36, %38
  %40 = load i32, i32* %7, align 4
  %41 = lshr i32 %40, 3
  %42 = and i32 %41, 4096
  %43 = lshr i32 %40, 23
  %44 = and i32 %43, 1
  %45 = or i32 %44, %42
  %46 = and i32 %40, 33554432
  %47 = lshr exact i32 %46, 24
  %48 = or i32 %45, %47
  %49 = lshr exact i32 %46, 22
  %50 = or i32 %48, %49
  %51 = lshr i32 %40, 22
  %52 = and i32 %51, 16
  %53 = or i32 %50, %52
  %54 = load i32, i32* %3, align 4
  %55 = shl i32 %54, 6
  %56 = and i32 %55, 64
  %57 = or i32 %53, %56
  %58 = lshr i32 %54, 2
  %59 = and i32 %58, 128
  %60 = or i32 %57, %59
  %61 = lshr i32 %54, 11
  %62 = and i32 %61, 256
  %63 = or i32 %60, %62
  %64 = and i32 %61, 512
  %65 = or i32 %63, %64
  %66 = lshr i32 %54, 6
  %67 = and i32 %66, 524288
  %68 = or i32 %65, %67
  %69 = and i32 %54, 402653184
  %70 = icmp eq i32 %69, 402653184
  br i1 %70, label %71, label %81

71:                                               ; preds = %28
  call void @ff_cpu_xgetbv(i32 0, i32* nonnull %10, i32* nonnull %11) #4
  %72 = load i32, i32* %10, align 4
  %73 = and i32 %72, 6
  %74 = icmp eq i32 %73, 6
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = load i32, i32* %3, align 4
  %77 = and i32 %76, 4096
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, i32 16384, i32 81920
  %80 = or i32 %79, %68
  br label %81

81:                                               ; preds = %75, %28, %71
  %82 = phi i32 [ %80, %75 ], [ %68, %28 ], [ %68, %71 ]
  %83 = load i32, i32* %5, align 4
  %84 = icmp sgt i32 %83, 6
  br i1 %84, label %85, label %116

85:                                               ; preds = %81
  call void @ff_cpu_cpuid(i32 7, i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4) #4
  %86 = and i32 %82, 16384
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %2, align 4
  %90 = shl i32 %89, 10
  %91 = and i32 %90, 32768
  %92 = or i32 %91, %82
  br label %93

93:                                               ; preds = %88, %85
  %94 = phi i32 [ %82, %85 ], [ %92, %88 ]
  %95 = load i32, i32* %10, align 4
  %96 = and i32 %95, 224
  %97 = icmp eq i32 %96, 224
  %98 = trunc i32 %94 to i16
  %99 = icmp slt i16 %98, 0
  %100 = and i1 %99, %97
  %101 = load i32, i32* %2, align 4
  br i1 %100, label %102, label %107

102:                                              ; preds = %93
  %103 = and i32 %101, -805109760
  %104 = icmp eq i32 %103, -805109760
  %105 = or i32 %94, 1048576
  %106 = select i1 %104, i32 %105, i32 %94
  br label %107

107:                                              ; preds = %93, %102
  %108 = phi i32 [ %106, %102 ], [ %94, %93 ]
  %109 = and i32 %101, 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = and i32 %101, 256
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 131072, i32 393216
  %115 = or i32 %114, %108
  br label %116

116:                                              ; preds = %0, %111, %107, %81
  %117 = phi i32 [ %39, %107 ], [ %39, %81 ], [ %39, %111 ], [ 0, %0 ]
  %118 = phi i32 [ %34, %107 ], [ %34, %81 ], [ %34, %111 ], [ 0, %0 ]
  %119 = phi i32 [ %108, %107 ], [ %82, %81 ], [ %115, %111 ], [ 0, %0 ]
  call void @ff_cpu_cpuid(i32 -2147483648, i32* nonnull %6, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4) #4
  %120 = load i32, i32* %6, align 4
  %121 = icmp ugt i32 %120, -2147483648
  br i1 %121, label %122, label %168

122:                                              ; preds = %116
  call void @ff_cpu_cpuid(i32 -2147483647, i32* nonnull %1, i32* nonnull %2, i32* nonnull %3, i32* nonnull %8) #4
  %123 = load i32, i32* %8, align 4
  %124 = icmp slt i32 %123, 0
  %125 = or i32 %119, 4
  %126 = select i1 %124, i32 %125, i32 %119
  %127 = lshr i32 %123, 25
  %128 = and i32 %127, 32
  %129 = or i32 %128, %126
  %130 = lshr i32 %123, 23
  %131 = and i32 %130, 1
  %132 = or i32 %129, %131
  %133 = lshr i32 %123, 21
  %134 = and i32 %133, 2
  %135 = or i32 %132, %134
  %136 = call i32 @bcmp(i8* nonnull %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12)
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %156

138:                                              ; preds = %122
  %139 = and i32 %126, 16
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i32, i32* %3, align 4
  %143 = shl i32 %142, 24
  %144 = and i32 %143, 1073741824
  %145 = xor i32 %144, 1073741824
  %146 = or i32 %145, %135
  br label %147

147:                                              ; preds = %141, %138
  %148 = phi i32 [ %135, %138 ], [ %146, %141 ]
  %149 = add nsw i32 %118, -21
  %150 = icmp ugt i32 %149, 1
  %151 = and i32 %148, 16384
  %152 = icmp eq i32 %151, 0
  %153 = or i1 %150, %152
  %154 = or i32 %148, 134217728
  %155 = select i1 %153, i32 %148, i32 %154
  br label %156

156:                                              ; preds = %147, %122
  %157 = phi i32 [ %135, %122 ], [ %155, %147 ]
  %158 = and i32 %157, 16384
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %156
  %161 = load i32, i32* %3, align 4
  %162 = lshr i32 %161, 1
  %163 = and i32 %162, 1024
  %164 = or i32 %163, %157
  %165 = lshr i32 %161, 5
  %166 = and i32 %165, 2048
  %167 = or i32 %164, %166
  br label %168

168:                                              ; preds = %160, %156, %116
  %169 = phi i32 [ %157, %156 ], [ %119, %116 ], [ %167, %160 ]
  %170 = call i32 @bcmp(i8* nonnull %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12)
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %200

172:                                              ; preds = %168
  %173 = icmp eq i32 %118, 6
  br i1 %173, label %174, label %184

174:                                              ; preds = %172
  switch i32 %117, label %184 [
    i32 14, label %175
    i32 13, label %175
    i32 9, label %175
  ]

175:                                              ; preds = %174, %174, %174
  %176 = and i32 %169, 16
  %177 = icmp eq i32 %176, 0
  %178 = xor i32 %169, 1073741840
  %179 = select i1 %177, i32 %169, i32 %178
  %180 = and i32 %179, 64
  %181 = icmp eq i32 %180, 0
  %182 = xor i32 %179, 536870976
  %183 = select i1 %181, i32 %179, i32 %182
  br label %184

184:                                              ; preds = %175, %174, %172
  %185 = phi i32 [ %169, %174 ], [ %169, %172 ], [ %183, %175 ]
  %186 = icmp eq i32 %117, 28
  %187 = and i1 %186, %173
  %188 = or i32 %185, 268435456
  %189 = select i1 %187, i32 %188, i32 %185
  %190 = trunc i32 %189 to i8
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %200

192:                                              ; preds = %184
  %193 = and i32 %189, 256
  %194 = icmp eq i32 %193, 0
  %195 = and i1 %173, %194
  %196 = icmp slt i32 %117, 23
  %197 = and i1 %196, %195
  %198 = or i32 %189, 67108864
  %199 = select i1 %197, i32 %198, i32 %189
  br label %200

200:                                              ; preds = %192, %168, %184
  %201 = phi i32 [ %169, %168 ], [ %189, %184 ], [ %199, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #4
  ret i32 %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @ff_cpu_cpuid(i32, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare void @ff_cpu_xgetbv(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @ff_get_cpu_max_align_x86() local_unnamed_addr #0 {
  %1 = tail call i32 @av_get_cpu_flags() #4
  %2 = and i32 %1, 1048576
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %0
  %5 = and i32 %1, 134335488
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = and i32 %1, 1946682328
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i64 8, i64 16
  br label %11

11:                                               ; preds = %7, %4, %0
  %12 = phi i64 [ 64, %0 ], [ 32, %4 ], [ %10, %7 ]
  ret i64 %12
}

declare i32 @av_get_cpu_flags() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
