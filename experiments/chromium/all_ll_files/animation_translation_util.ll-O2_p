; ModuleID = '../../third_party/blink/renderer/platform/animation/animation_translation_util.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/animation_translation_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TransformOperations" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::CompositorTransformOperations" = type { %"class.gfx::TransformOperations" }
%"class.gfx::TransformOperations" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%union.anon = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.anon.3, float }
%struct.anon.3 = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::TransformOperation"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%"class.blink::Length" = type <{ %union.anon.23, i8, i8, i8, i8 }>
%union.anon.23 = type { i32 }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.blink::SkewTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, i32, [4 x i8] }>
%"class.blink::MatrixTransformOperation" = type { %"class.blink::TransformOperation.base", double, double, double, double, double, double }
%"class.blink::Matrix3DTransformOperation" = type { %"class.blink::TransformOperation.base", %"class.blink::TransformationMatrix" }
%"class.blink::PerspectiveTransformOperation" = type { %"class.blink::TransformOperation.base", double }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31ToCompositorTransformOperationsERKNS_19TransformOperationsEPNS_29CompositorTransformOperationsERKNS_9FloatSizeE(%"class.blink::TransformOperations"* nocapture readonly dereferenceable(16), %"class.blink::CompositorTransformOperations"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::TransformationMatrix", align 16
  %5 = alloca %class.SkMatrix44, align 4
  %6 = alloca %"class.blink::TransformationMatrix", align 8
  %7 = alloca %class.SkMatrix44, align 4
  %8 = alloca %"class.blink::TransformationMatrix", align 8
  %9 = alloca %class.SkMatrix44, align 4
  %10 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.scoped_refptr*, %class.scoped_refptr** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %49, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.blink::TransformationMatrix"* %8 to i8*
  %19 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 0, i64 0
  %20 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 0, i64 1
  %21 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 1, i64 1
  %22 = bitcast double* %20 to i8*
  %23 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 1, i64 2
  %24 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 2, i64 2
  %25 = bitcast double* %23 to i8*
  %26 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 2, i64 3
  %27 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %8, i64 0, i32 0, i32 0, i64 3, i64 3
  %28 = bitcast double* %26 to i8*
  %29 = bitcast %class.SkMatrix44* %9 to i8*
  %30 = bitcast %"class.blink::TransformationMatrix"* %6 to i8*
  %31 = bitcast %class.SkMatrix44* %7 to i8*
  %32 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  %33 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 2
  %34 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 0
  %35 = bitcast double* %33 to i8*
  %36 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %37 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %38 = bitcast double* %36 to i8*
  %39 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 0
  %40 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 2
  %41 = bitcast %class.SkMatrix44* %5 to i8*
  %42 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %44 = bitcast %"class.blink::TransformationMatrix"* %4 to <2 x i64>*
  %45 = bitcast double* %34 to <2 x i64>*
  %46 = bitcast double* %37 to <2 x double>*
  %47 = bitcast double* %39 to <2 x i64>*
  %48 = bitcast double* %40 to <2 x double>*
  br label %50

49:                                               ; preds = %140, %3
  ret void

50:                                               ; preds = %17, %140
  %51 = phi %class.scoped_refptr* [ %11, %17 ], [ %141, %140 ]
  %52 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %51, i64 0, i32 0
  %53 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %52, align 8
  %54 = bitcast %"class.blink::TransformOperation"* %53 to i32 (%"class.blink::TransformOperation"*)***
  %55 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %55, i64 7
  %57 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %56, align 8
  %58 = call i32 %57(%"class.blink::TransformOperation"* %53) #3
  switch i32 %58, label %140 [
    i32 0, label %59
    i32 1, label %59
    i32 11, label %59
    i32 12, label %59
    i32 2, label %59
    i32 3, label %68
    i32 4, label %68
    i32 13, label %68
    i32 14, label %68
    i32 5, label %68
    i32 15, label %81
    i32 16, label %81
    i32 17, label %81
    i32 6, label %81
    i32 7, label %95
    i32 8, label %100
    i32 9, label %105
    i32 10, label %112
    i32 18, label %124
    i32 19, label %129
    i32 21, label %134
    i32 20, label %134
  ]

59:                                               ; preds = %50, %50, %50, %50, %50
  %60 = bitcast %class.scoped_refptr* %51 to %"class.blink::ScaleTransformOperation"**
  %61 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %61, i64 0, i32 2
  %63 = load double, double* %62, align 8
  %64 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %61, i64 0, i32 3
  %65 = load double, double* %64, align 8
  %66 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %61, i64 0, i32 4
  %67 = load double, double* %66, align 8
  call void @_ZN5blink29CompositorTransformOperations11AppendScaleEddd(%"class.blink::CompositorTransformOperations"* %1, double %63, double %65, double %67) #3
  br label %140

68:                                               ; preds = %50, %50, %50, %50, %50
  %69 = bitcast %class.scoped_refptr* %51 to %"class.blink::TranslateTransformOperation"**
  %70 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %70, i64 0, i32 1
  %72 = load float, float* %42, align 4
  %73 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %71, float %72) #3
  %74 = fpext float %73 to double
  %75 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %70, i64 0, i32 2
  %76 = load float, float* %43, align 4
  %77 = call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %75, float %76) #3
  %78 = fpext float %77 to double
  %79 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %70, i64 0, i32 4
  %80 = load double, double* %79, align 8
  call void @_ZN5blink29CompositorTransformOperations15AppendTranslateEddd(%"class.blink::CompositorTransformOperations"* %1, double %74, double %78, double %80) #3
  br label %140

81:                                               ; preds = %50, %50, %50, %50
  %82 = bitcast %class.scoped_refptr* %51 to %"class.blink::RotateTransformOperation"**
  %83 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = fpext float %85 to double
  %87 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %83, i64 0, i32 2, i32 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = fpext float %88 to double
  %90 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %83, i64 0, i32 2, i32 0, i32 2
  %91 = load float, float* %90, align 4
  %92 = fpext float %91 to double
  %93 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %83, i64 0, i32 2, i32 1
  %94 = load double, double* %93, align 8
  call void @_ZN5blink29CompositorTransformOperations12AppendRotateEdddd(%"class.blink::CompositorTransformOperations"* %1, double %86, double %89, double %92, double %94) #3
  br label %140

95:                                               ; preds = %50
  %96 = bitcast %class.scoped_refptr* %51 to %"class.blink::SkewTransformOperation"**
  %97 = load %"class.blink::SkewTransformOperation"*, %"class.blink::SkewTransformOperation"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::SkewTransformOperation", %"class.blink::SkewTransformOperation"* %97, i64 0, i32 2
  %99 = load double, double* %98, align 8
  call void @_ZN5blink29CompositorTransformOperations11AppendSkewXEd(%"class.blink::CompositorTransformOperations"* %1, double %99) #3
  br label %140

100:                                              ; preds = %50
  %101 = bitcast %class.scoped_refptr* %51 to %"class.blink::SkewTransformOperation"**
  %102 = load %"class.blink::SkewTransformOperation"*, %"class.blink::SkewTransformOperation"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::SkewTransformOperation", %"class.blink::SkewTransformOperation"* %102, i64 0, i32 3
  %104 = load double, double* %103, align 8
  call void @_ZN5blink29CompositorTransformOperations11AppendSkewYEd(%"class.blink::CompositorTransformOperations"* %1, double %104) #3
  br label %140

105:                                              ; preds = %50
  %106 = bitcast %class.scoped_refptr* %51 to %"class.blink::SkewTransformOperation"**
  %107 = load %"class.blink::SkewTransformOperation"*, %"class.blink::SkewTransformOperation"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::SkewTransformOperation", %"class.blink::SkewTransformOperation"* %107, i64 0, i32 2
  %109 = load double, double* %108, align 8
  %110 = getelementptr inbounds %"class.blink::SkewTransformOperation", %"class.blink::SkewTransformOperation"* %107, i64 0, i32 3
  %111 = load double, double* %110, align 8
  call void @_ZN5blink29CompositorTransformOperations10AppendSkewEdd(%"class.blink::CompositorTransformOperations"* %1, double %109, double %111) #3
  br label %140

112:                                              ; preds = %50
  %113 = bitcast %class.scoped_refptr* %51 to %"class.blink::MatrixTransformOperation"**
  %114 = load %"class.blink::MatrixTransformOperation"*, %"class.blink::MatrixTransformOperation"** %113, align 8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %32) #3
  %115 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %114, i64 0, i32 1
  %116 = bitcast double* %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8, !noalias !2
  %118 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %114, i64 0, i32 3
  %119 = bitcast double* %118 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !noalias !2
  %121 = getelementptr inbounds %"class.blink::MatrixTransformOperation", %"class.blink::MatrixTransformOperation"* %114, i64 0, i32 5
  %122 = bitcast double* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !noalias !2
  store <2 x i64> %117, <2 x i64>* %44, align 16, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 16 %35, i8 0, i64 16, i1 false) #3, !alias.scope !2
  store <2 x i64> %120, <2 x i64>* %45, align 16, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 16 %38, i8 0, i64 32, i1 false) #3, !alias.scope !2
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %46, align 16, !alias.scope !2
  store <2 x i64> %123, <2 x i64>* %47, align 16, !alias.scope !2
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %48, align 16, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %41) #3
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %5, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4) #3
  call void @_ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44(%"class.blink::CompositorTransformOperations"* %1, %class.SkMatrix44* nonnull dereferenceable(68) %5) #3
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %41) #3
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %32) #3
  br label %140

124:                                              ; preds = %50
  %125 = bitcast %class.scoped_refptr* %51 to %"class.blink::Matrix3DTransformOperation"**
  %126 = load %"class.blink::Matrix3DTransformOperation"*, %"class.blink::Matrix3DTransformOperation"** %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %30) #3
  %127 = getelementptr inbounds %"class.blink::Matrix3DTransformOperation", %"class.blink::Matrix3DTransformOperation"* %126, i64 0, i32 1
  %128 = bitcast %"class.blink::TransformationMatrix"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %128, i64 128, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %31) #3
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %7, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %6) #3
  call void @_ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44(%"class.blink::CompositorTransformOperations"* %1, %class.SkMatrix44* nonnull dereferenceable(68) %7) #3
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %31) #3
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %30) #3
  br label %140

129:                                              ; preds = %50
  %130 = bitcast %class.scoped_refptr* %51 to %"class.blink::PerspectiveTransformOperation"**
  %131 = load %"class.blink::PerspectiveTransformOperation"*, %"class.blink::PerspectiveTransformOperation"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::PerspectiveTransformOperation", %"class.blink::PerspectiveTransformOperation"* %131, i64 0, i32 1
  %133 = load double, double* %132, align 8
  call void @_ZN5blink29CompositorTransformOperations17AppendPerspectiveEd(%"class.blink::CompositorTransformOperations"* %1, double %133) #3
  br label %140

134:                                              ; preds = %50, %50
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %18) #3
  store double 1.000000e+00, double* %19, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #3
  store double 1.000000e+00, double* %21, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #3
  store double 1.000000e+00, double* %24, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #3
  store double 1.000000e+00, double* %27, align 8
  %135 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %52, align 8
  %136 = bitcast %"class.blink::TransformOperation"* %135 to void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)***
  %137 = load void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)**, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)** %137, i64 3
  %139 = load void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)** %138, align 8
  call void %139(%"class.blink::TransformOperation"* %135, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %8, %"class.blink::FloatSize"* dereferenceable(8) %2) #3
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %29) #3
  call void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* nonnull sret %9, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %8) #3
  call void @_ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44(%"class.blink::CompositorTransformOperations"* %1, %class.SkMatrix44* nonnull dereferenceable(68) %9) #3
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %29) #3
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %18) #3
  br label %140

140:                                              ; preds = %50, %134, %129, %124, %112, %105, %100, %95, %81, %68, %59
  %141 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %51, i64 1
  %142 = icmp eq %class.scoped_refptr* %141, %15
  br i1 %142, label %49, label %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink29CompositorTransformOperations11AppendScaleEddd(%"class.blink::CompositorTransformOperations"*, double, double, double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink29CompositorTransformOperations15AppendTranslateEddd(%"class.blink::CompositorTransformOperations"*, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink29CompositorTransformOperations12AppendRotateEdddd(%"class.blink::CompositorTransformOperations"*, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink29CompositorTransformOperations11AppendSkewXEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #2

declare void @_ZN5blink29CompositorTransformOperations11AppendSkewYEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #2

declare void @_ZN5blink29CompositorTransformOperations10AppendSkewEdd(%"class.blink::CompositorTransformOperations"*, double, double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink29CompositorTransformOperations12AppendMatrixERK10SkMatrix44(%"class.blink::CompositorTransformOperations"*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix12ToSkMatrix44ERKS0_(%class.SkMatrix44* sret, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

declare void @_ZN5blink29CompositorTransformOperations17AppendPerspectiveEd(%"class.blink::CompositorTransformOperations"*, double) local_unnamed_addr #2

declare float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink24MatrixTransformOperation6MatrixEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink24MatrixTransformOperation6MatrixEv"}
