; ModuleID = '../../third_party/skia/src/core/SkMatrixImageFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkMatrixImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.35 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.36 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrixImageFilter = type { %class.SkImageFilter_Base.base, %class.SkMatrix, %struct.SkSamplingOptions }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.20 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZN19SkMatrixImageFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK19SkMatrixImageFilter10getFactoryEv = comdat any

$_ZNK19SkMatrixImageFilter11getTypeNameEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@_ZTV19SkMatrixImageFilter = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%class.SkMatrixImageFilter*)* @_ZN19SkMatrixImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%class.SkMatrixImageFilter*)* @_ZNK19SkMatrixImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkMatrixImageFilter*)* @_ZNK19SkMatrixImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkMatrixImageFilter*, %class.SkWriteBuffer*)* @_ZNK19SkMatrixImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkMatrixImageFilter*, %struct.SkRect*)* @_ZNK19SkMatrixImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %class.SkMatrixImageFilter*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK19SkMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkMatrixImageFilter*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK19SkMatrixImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8
@__const._ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@__const._ZNK19SkMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.35 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.36 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.37 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.38 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [20 x i8] c"SkMatrixImageFilter\00", align 1

@_ZN19SkMatrixImageFilterC1ERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE = hidden unnamed_addr alias void (%class.SkMatrixImageFilter*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.sk_sp*), void (%class.SkMatrixImageFilter*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.sk_sp*)* @_ZN19SkMatrixImageFilterC2ERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkMatrixImageFilterC2ERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.SkMatrixImageFilter*, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.sk_sp*) unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* %5, %class.sk_sp* %3, i32 1, %struct.SkRect* null) #8
  %6 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV19SkMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1
  %8 = bitcast %class.SkMatrix* %7 to i8*
  %9 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 40, i1 false)
  %10 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 20, i1 false)
  %12 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %7) #8
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %12, align 4
  br label %19

19:                                               ; preds = %4, %16
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* noalias nocapture sret, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = tail call i8* @_Znwm(i64 136) #9
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %8 = bitcast %class.sk_sp* %3 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %7, align 8
  %10 = bitcast %class.sk_sp* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast i8* %6 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %11, %class.sk_sp* nonnull %5, i32 1, %struct.SkRect* null) #8
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV19SkMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 76
  %14 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 40, i1 false) #8
  %15 = getelementptr inbounds i8, i8* %6, i64 116
  %16 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 20, i1 false) #8
  %17 = getelementptr inbounds i8, i8* %6, i64 112
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %4
  %23 = bitcast i8* %13 to %class.SkMatrix*
  %24 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %23) #8
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %18, align 4
  br label %26

26:                                               ; preds = %4, %22
  %27 = bitcast %class.sk_sp* %0 to i8**
  store i8* %6, i8** %27, align 8
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %29 = load %class.SkImageFilter*, %class.SkImageFilter** %28, align 8
  %30 = icmp eq %class.SkImageFilter* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkImageFilter* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkImageFilter* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #8
  br label %41

41:                                               ; preds = %26, %31, %35
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters15MatrixTransformERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE(%class.sk_sp* noalias nocapture sret, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %3 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %6, align 8
  %9 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 136) #9, !noalias !2
  %11 = bitcast %class.sk_sp* %5 to i64*
  store i64 %8, i64* %11, align 8, !noalias !2
  %12 = bitcast i8* %10 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %12, %class.sk_sp* nonnull %5, i32 1, %struct.SkRect* null) #8, !noalias !2
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV19SkMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !noalias !2
  %14 = getelementptr inbounds i8, i8* %10, i64 76
  %15 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 40, i1 false) #8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %10, i64 116
  %17 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 20, i1 false) #8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %10, i64 112
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4, !noalias !2
  %21 = trunc i32 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %4
  %24 = bitcast i8* %14 to %class.SkMatrix*
  %25 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %24) #8, !noalias !2
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %19, align 4, !noalias !2
  br label %27

27:                                               ; preds = %23, %4
  %28 = bitcast %class.sk_sp* %0 to i8**
  store i8* %10, i8** %28, align 8, !alias.scope !2
  %29 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %30 = load %class.SkImageFilter*, %class.SkImageFilter** %29, align 8, !noalias !2
  %31 = icmp eq %class.SkImageFilter* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel, !noalias !2
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkImageFilter* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkImageFilter* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8, !noalias !2
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8, !noalias !2
  call void %41(%class.SkRefCntBase* nonnull %37) #8, !noalias !2
  br label %42

42:                                               ; preds = %36, %32, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %"class.SkImageFilter_Base::Common", align 8
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = bitcast %"class.SkImageFilter_Base::Common"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %4, i64 0, i32 1, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %4, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #8
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %16, align 8
  br label %83

17:                                               ; preds = %2
  %18 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %20 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %20, align 16
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %23, align 16
  store i32 16, i32* %19, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %5) #8
  %24 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %24) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer.sampling, i64 0, i32 0), i64 20, i1 false)
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8, !noalias !5
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 82
  br i1 %28, label %29, label %38

29:                                               ; preds = %17
  %30 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #8
  %31 = icmp ugt i32 %30, 3
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #8
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %35 = load i8, i8* %34, align 8, !range !8
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i32 %30, i32 0
  call void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nonnull %6, i32 %37, i32 1) #8
  br label %39

38:                                               ; preds = %17
  call void @_ZN14SkSamplingPriv4ReadER12SkReadBuffer(%struct.SkSamplingOptions* nonnull sret %6, %class.SkReadBuffer* dereferenceable(136) %1) #8
  br label %39

39:                                               ; preds = %33, %38
  %40 = bitcast i8* %9 to %class.sk_sp**
  %41 = load %class.sk_sp*, %class.sk_sp** %40, align 8, !noalias !9
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %41, i64 0, i32 0
  %43 = load %class.SkImageFilter*, %class.SkImageFilter** %42, align 8, !noalias !9
  %44 = icmp eq %class.SkImageFilter* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 1 monotonic, !noalias !9
  br label %48

48:                                               ; preds = %39, %45
  %49 = ptrtoint %class.SkImageFilter* %43 to i64
  %50 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = call i8* @_Znwm(i64 136) #9, !noalias !12
  %52 = bitcast %class.sk_sp* %3 to i64*
  store i64 %49, i64* %52, align 8, !noalias !12
  %53 = bitcast i8* %51 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %53, %class.sk_sp* nonnull %3, i32 1, %struct.SkRect* null) #8, !noalias !12
  %54 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTV19SkMatrixImageFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8, !noalias !12
  %55 = getelementptr inbounds i8, i8* %51, i64 76
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* nonnull align 16 %18, i64 40, i1 false) #8, !noalias !12
  %56 = getelementptr inbounds i8, i8* %51, i64 116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %24, i64 20, i1 false) #8, !noalias !12
  %57 = getelementptr inbounds i8, i8* %51, i64 112
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !12
  %60 = trunc i32 %59 to i8
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %48
  %63 = bitcast i8* %55 to %class.SkMatrix*
  %64 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %63) #8, !noalias !12
  %65 = zext i8 %64 to i32
  store i32 %65, i32* %58, align 4, !noalias !12
  br label %66

66:                                               ; preds = %62, %48
  %67 = ptrtoint i8* %51 to i64
  %68 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %69 = load %class.SkImageFilter*, %class.SkImageFilter** %68, align 8, !noalias !12
  %70 = icmp eq %class.SkImageFilter* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel, !noalias !12
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkImageFilter* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkImageFilter* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8, !noalias !12
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8, !noalias !12
  call void %80(%class.SkRefCntBase* nonnull %76) #8, !noalias !12
  br label %81

81:                                               ; preds = %66, %71, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %82 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %67, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  br label %83

83:                                               ; preds = %81, %15
  %84 = load i64, i64* %12, align 8
  %85 = and i64 %84, 4294967294
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast i8* %9 to %class.sk_sp**
  br label %93

89:                                               ; preds = %109, %83
  %90 = phi i64 [ %84, %83 ], [ %111, %109 ]
  %91 = and i64 %90, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %117, label %115

93:                                               ; preds = %109, %87
  %94 = phi i64 [ 0, %87 ], [ %110, %109 ]
  %95 = load %class.sk_sp*, %class.sk_sp** %88, align 8
  %96 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %95, i64 %94, i32 0
  %97 = load %class.SkImageFilter*, %class.SkImageFilter** %96, align 8
  %98 = icmp eq %class.SkImageFilter* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkImageFilter* %97 to %class.SkRefCntBase*
  %105 = bitcast %class.SkImageFilter* %97 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #8
  br label %109

109:                                              ; preds = %103, %99, %93
  %110 = add nuw nsw i64 %94, 1
  %111 = load i64, i64* %12, align 8
  %112 = lshr i64 %111, 1
  %113 = and i64 %112, 2147483647
  %114 = icmp ult i64 %110, %113
  br i1 %114, label %93, label %89

115:                                              ; preds = %89
  %116 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %116) #8
  br label %117

117:                                              ; preds = %89, %115
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkMatrixImageFilter7flattenER13SkWriteBuffer(%class.SkMatrixImageFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #8
  %4 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %6 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %6, i64 20
  %8 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %4) #8
  %9 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2
  tail call void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56) %1, %struct.SkSamplingOptions* dereferenceable(20) %9) #8
  ret void
}

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1

declare void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %class.SkMatrixImageFilter*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.skif::FilterResult", align 8
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %class.sk_sp.20, align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.SkISize*
  %14 = alloca %class.SkPaint, align 8
  %15 = bitcast %class.SkMatrixImageFilter* %1 to %class.SkImageFilter_Base*
  %16 = bitcast %"class.skif::FilterResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !noalias !15
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %6, %class.SkImageFilter_Base* %15, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #8, !noalias !15
  %17 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 0, i32 0
  %18 = load %class.SkSpecialImage*, %class.SkSpecialImage** %17, align 8, !noalias !18
  %19 = icmp eq %class.SkSpecialImage* %18, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 1, i32 0
  %22 = bitcast %struct.SkIPoint* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !18
  %24 = lshr i64 %23, 32
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !18
  %28 = atomicrmw add i32* %26, i32 -1 acq_rel, !noalias !15
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %38

30:                                               ; preds = %20
  %31 = bitcast %class.SkSpecialImage* %18 to %class.SkRefCntBase*
  %32 = bitcast %class.SkSpecialImage* %18 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8, !noalias !15
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8, !noalias !15
  call void %35(%class.SkRefCntBase* nonnull %31) #8, !noalias !15
  br label %38

36:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !noalias !15
  %37 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %37, align 8
  br label %209

38:                                               ; preds = %30, %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !noalias !15
  %39 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #8
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %41 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %41, align 16
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %43, align 16
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %44, align 16
  store i32 16, i32* %40, align 4
  %45 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %38
  %51 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %45) #8
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %46, align 4
  br label %53

53:                                               ; preds = %50, %38
  %54 = phi i32 [ %52, %50 ], [ %47, %38 ]
  %55 = and i32 %54, 15
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %7) #8
  br label %63

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %45, %class.SkMatrix* nonnull %7) #8
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %62, align 8
  br label %200

63:                                               ; preds = %57, %59
  %64 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %1, i64 0, i32 1
  %65 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %7, %class.SkMatrix* dereferenceable(40) %64) #8
  %66 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %7, %class.SkMatrix* dereferenceable(40) %45) #8
  %67 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 %68, %70
  %72 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %18, i64 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %73, %75
  %77 = shl i64 %23, 32
  %78 = ashr exact i64 %77, 32
  %79 = sext i32 %71 to i64
  %80 = add nsw i64 %78, %79
  %81 = icmp slt i64 %80, 2147483647
  %82 = select i1 %81, i64 %80, i64 2147483647
  %83 = icmp sgt i64 %82, -2147483647
  %84 = select i1 %83, i64 %82, i64 -2147483647
  %85 = ashr i64 %23, 32
  %86 = sext i32 %76 to i64
  %87 = add nsw i64 %85, %86
  %88 = icmp slt i64 %87, 2147483647
  %89 = select i1 %88, i64 %87, i64 2147483647
  %90 = icmp sgt i64 %89, -2147483647
  %91 = select i1 %90, i64 %89, i64 -2147483647
  %92 = trunc i64 %23 to i32
  %93 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #8
  %94 = sitofp i32 %92 to float
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = sitofp i32 %25 to float
  %97 = insertelement <2 x float> %95, float %96, i32 1
  %98 = trunc i64 %84 to i32
  %99 = sitofp i32 %98 to float
  %100 = insertelement <2 x float> undef, float %99, i32 0
  %101 = trunc i64 %91 to i32
  %102 = sitofp i32 %101 to float
  %103 = insertelement <2 x float> %100, float %102, i32 1
  %104 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %97, <2 x float>* %104, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %103, <2 x float>* %105, align 8
  %106 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #8
  %107 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %108 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %109 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %110 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %111 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 -1, i64 16, i1 false)
  %112 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %7, %struct.SkRect* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %9, i32 1) #8
  %113 = load float, float* %107, align 4
  %114 = call float @llvm.floor.f32(float %113) #8
  %115 = fcmp olt float %114, 0x41DFFFFFE0000000
  %116 = select i1 %115, float %114, float 0x41DFFFFFE0000000
  %117 = fcmp ogt float %116, 0xC1DFFFFFE0000000
  %118 = select i1 %117, float %116, float 0xC1DFFFFFE0000000
  %119 = fptosi float %118 to i32
  %120 = load float, float* %108, align 4
  %121 = call float @llvm.floor.f32(float %120) #8
  %122 = fcmp olt float %121, 0x41DFFFFFE0000000
  %123 = select i1 %122, float %121, float 0x41DFFFFFE0000000
  %124 = fcmp ogt float %123, 0xC1DFFFFFE0000000
  %125 = select i1 %124, float %123, float 0xC1DFFFFFE0000000
  %126 = fptosi float %125 to i32
  %127 = load float, float* %109, align 4
  %128 = call float @llvm.ceil.f32(float %127) #8
  %129 = fcmp olt float %128, 0x41DFFFFFE0000000
  %130 = select i1 %129, float %128, float 0x41DFFFFFE0000000
  %131 = fcmp ogt float %130, 0xC1DFFFFFE0000000
  %132 = select i1 %131, float %130, float 0xC1DFFFFFE0000000
  %133 = fptosi float %132 to i32
  %134 = load float, float* %110, align 4
  %135 = call float @llvm.ceil.f32(float %134) #8
  %136 = fcmp olt float %135, 0x41DFFFFFE0000000
  %137 = select i1 %136, float %135, float 0x41DFFFFFE0000000
  %138 = fcmp ogt float %137, 0xC1DFFFFFE0000000
  %139 = select i1 %138, float %137, float 0xC1DFFFFFE0000000
  %140 = fptosi float %139 to i32
  %141 = bitcast %class.sk_sp.20* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #8
  %142 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %11, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %142, align 8
  %143 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #8
  %144 = sub i32 %133, %119
  %145 = sub i32 %140, %126
  %146 = zext i32 %145 to i64
  %147 = shl nuw i64 %146, 32
  %148 = zext i32 %144 to i64
  %149 = or i64 %147, %148
  store i64 %149, i64* %12, align 8
  %150 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %151 = load %class.SkSpecialImage*, %class.SkSpecialImage** %150, align 8, !noalias !21
  %152 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %151, i64 0, i32 1
  %153 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %154 = load i32, i32* %153, align 8, !noalias !21
  %155 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %156 = load %class.SkColorSpace*, %class.SkColorSpace** %155, align 8, !noalias !21
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* nonnull sret %11, %class.SkSpecialImage* %151, i32 %154, %class.SkColorSpace* %156, %struct.SkISize* nonnull dereferenceable(8) %13, i32 2, %class.SkSurfaceProps* dereferenceable(8) %152) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #8
  %157 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %142, align 8
  %158 = icmp eq %class.SkSpecialSurface* %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %63
  %160 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %160, align 8
  br label %199

161:                                              ; preds = %63
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0, i64 0
  %163 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %164 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %157) #8
  %165 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %166 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #8
  %167 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #8
  %168 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %169 = extractvalue { <2 x float>, <2 x float> } %167, 0
  store <2 x float> %169, <2 x float>* %168, align 8
  %170 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %171 = extractvalue { <2 x float>, <2 x float> } %167, 1
  store <2 x float> %171, <2 x float>* %170, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %164, %struct.SkRGBA4f* nonnull dereferenceable(16) %165, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #8
  %172 = sitofp i32 %119 to float
  %173 = fsub float -0.000000e+00, %172
  %174 = sitofp i32 %126 to float
  %175 = fsub float -0.000000e+00, %174
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %164, float %173, float %175) #8
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %164, %class.SkMatrix* nonnull dereferenceable(40) %7) #8
  %176 = bitcast %class.SkPaint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %176) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %176, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK19SkMatrixImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %14) #8
  %177 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %14, i64 0, i32 8, i32 0, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, -261122
  %180 = or i32 %179, 1025
  store i32 %180, i32* %177, align 8
  %181 = load float, float* %162, align 8
  %182 = load float, float* %163, align 4
  %183 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %1, i64 0, i32 2
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %18, %class.SkCanvas* %164, float %181, float %182, %struct.SkSamplingOptions* dereferenceable(20) %183, %class.SkPaint* nonnull %14) #8
  %184 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %119, i32* %184, align 4
  %185 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %126, i32* %185, align 4
  %186 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %142, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %186) #8
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %176) #8
  %187 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %142, align 8
  %188 = icmp eq %class.SkSpecialSurface* %187, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %161
  %190 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %187, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkSpecialSurface* %187 to %class.SkRefCntBase*
  %195 = bitcast %class.SkSpecialSurface* %187 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #8
  br label %199

199:                                              ; preds = %159, %161, %189, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #8
  br label %200

200:                                              ; preds = %199, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #8
  %201 = atomicrmw add i32* %26, i32 -1 acq_rel
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %209

203:                                              ; preds = %200
  %204 = bitcast %class.SkSpecialImage* %18 to %class.SkRefCntBase*
  %205 = bitcast %class.SkSpecialImage* %18 to void (%class.SkRefCntBase*)***
  %206 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %205, align 8
  %207 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, i64 2
  %208 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, align 8
  call void %208(%class.SkRefCntBase* nonnull %204) #8
  br label %209

209:                                              ; preds = %36, %200, %203
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK19SkMatrixImageFilter17computeFastBoundsERK6SkRect(%class.SkMatrixImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = bitcast %class.SkMatrixImageFilter* %0 to %class.SkImageFilter*
  %9 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -1, i64 16, i1 false)
  %10 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %8, i32 0) #8
  %11 = icmp eq %class.SkImageFilter* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = tail call %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter* %8, i32 0) #8
  %14 = bitcast %class.SkImageFilter* %13 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %15 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %15, i64 7
  %17 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %16, align 8
  %18 = tail call { <2 x float>, <2 x float> } %17(%class.SkImageFilter* %13, %struct.SkRect* dereferenceable(16) %1) #8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 0
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %22 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %22, <2 x float>* %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %24, i64 16, i1 false)
  br label %25

25:                                               ; preds = %23, %12
  %26 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1
  %27 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -1, i64 16, i1 false)
  %28 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %26, %struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %6, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %30 = load <2 x float>, <2 x float>* %29, align 8
  %31 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %30, 0
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %33 = load <2 x float>, <2 x float>* %32, align 8
  %34 = insertvalue { <2 x float>, <2 x float> } %31, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %34
}

declare %class.SkImageFilter* @_ZNK13SkImageFilter8getInputEi(%class.SkImageFilter*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK19SkMatrixImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkMatrixImageFilter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %struct.SkRect, align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #8
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %13 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16
  store i32 16, i32* %12, align 4
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %5
  %22 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #8
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %17, align 4
  br label %24

24:                                               ; preds = %21, %5
  %25 = phi i32 [ %23, %21 ], [ %18, %5 ]
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #8
  br label %38

30:                                               ; preds = %24
  %31 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %2, %class.SkMatrix* nonnull %6) #8
  br i1 %31, label %38, label %32

32:                                               ; preds = %30
  %33 = bitcast %struct.SkIRect* %1 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %36 = bitcast i32* %35 to i64*
  %37 = load i64, i64* %36, align 4
  br label %185

38:                                               ; preds = %28, %30
  %39 = icmp eq i32 %3, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %38
  %41 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1
  %42 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* dereferenceable(40) %41) #8
  br label %74

43:                                               ; preds = %38
  %44 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #8
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %46 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %46, align 16
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %48, align 16
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %49, align 16
  store i32 16, i32* %45, align 4
  %50 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1
  %51 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = trunc i32 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %50) #8
  %57 = zext i8 %56 to i32
  store i32 %57, i32* %51, align 4
  br label %58

58:                                               ; preds = %55, %43
  %59 = phi i32 [ %57, %55 ], [ %52, %43 ]
  %60 = and i32 %59, 15
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %7) #8
  br label %66

64:                                               ; preds = %58
  %65 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %50, %class.SkMatrix* nonnull %7) #8
  br i1 %65, label %66, label %68

66:                                               ; preds = %64, %62
  %67 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* nonnull dereferenceable(40) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #8
  br label %74

68:                                               ; preds = %64
  %69 = bitcast %struct.SkIRect* %1 to i64*
  %70 = load i64, i64* %69, align 4
  %71 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %72 = bitcast i32* %71 to i64*
  %73 = load i64, i64* %72, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #8
  br label %185

74:                                               ; preds = %66, %40
  %75 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* dereferenceable(40) %2) #8
  %76 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  %77 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 0
  %78 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %80 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %81 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %82 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %82, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #8
  %83 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = sitofp i32 %84 to float
  %86 = insertelement <2 x float> undef, float %85, i32 0
  %87 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  %90 = insertelement <2 x float> %86, float %89, i32 1
  %91 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = sitofp i32 %92 to float
  %94 = insertelement <2 x float> undef, float %93, i32 0
  %95 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = sitofp i32 %96 to float
  %98 = insertelement <2 x float> %94, float %97, i32 1
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %90, <2 x float>* %99, align 8
  %100 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %98, <2 x float>* %100, align 8
  %101 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #8
  %102 = load float, float* %77, align 4
  %103 = call float @llvm.floor.f32(float %102) #8
  %104 = fcmp olt float %103, 0x41DFFFFFE0000000
  %105 = select i1 %104, float %103, float 0x41DFFFFFE0000000
  %106 = fcmp ogt float %105, 0xC1DFFFFFE0000000
  %107 = select i1 %106, float %105, float 0xC1DFFFFFE0000000
  %108 = fptosi float %107 to i32
  %109 = load float, float* %78, align 4
  %110 = call float @llvm.floor.f32(float %109) #8
  %111 = fcmp olt float %110, 0x41DFFFFFE0000000
  %112 = select i1 %111, float %110, float 0x41DFFFFFE0000000
  %113 = fcmp ogt float %112, 0xC1DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0xC1DFFFFFE0000000
  %115 = fptosi float %114 to i32
  %116 = load float, float* %79, align 4
  %117 = call float @llvm.ceil.f32(float %116) #8
  %118 = fcmp olt float %117, 0x41DFFFFFE0000000
  %119 = select i1 %118, float %117, float 0x41DFFFFFE0000000
  %120 = fcmp ogt float %119, 0xC1DFFFFFE0000000
  %121 = select i1 %120, float %119, float 0xC1DFFFFFE0000000
  %122 = fptosi float %121 to i32
  %123 = load float, float* %80, align 4
  %124 = call float @llvm.ceil.f32(float %123) #8
  %125 = fcmp olt float %124, 0x41DFFFFFE0000000
  %126 = select i1 %125, float %124, float 0x41DFFFFFE0000000
  %127 = fcmp ogt float %126, 0xC1DFFFFFE0000000
  %128 = select i1 %127, float %126, float 0xC1DFFFFFE0000000
  %129 = fptosi float %128 to i32
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %122 to i64
  %133 = or i64 %131, %132
  %134 = icmp eq i32 %3, 1
  br i1 %134, label %135, label %177

135:                                              ; preds = %74
  %136 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 0
  %137 = load i8, i8* %136, align 4, !range !8
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %155

139:                                              ; preds = %135
  %140 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 1, i32 0
  %141 = load float, float* %140, align 4
  %142 = fcmp oeq float %141, 0.000000e+00
  br i1 %142, label %143, label %155

143:                                              ; preds = %139
  %144 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 1, i32 1
  %145 = load float, float* %144, align 4
  %146 = fcmp oeq float %145, 0.000000e+00
  br i1 %146, label %147, label %155

147:                                              ; preds = %143
  %148 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %147
  %152 = getelementptr inbounds %class.SkMatrixImageFilter, %class.SkMatrixImageFilter* %0, i64 0, i32 2, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %177, label %155

155:                                              ; preds = %135, %139, %143, %147, %151
  %156 = icmp sgt i32 %108, -2147483646
  %157 = select i1 %156, i32 %108, i32 -2147483646
  %158 = add nsw i32 %157, -1
  %159 = icmp sgt i32 %115, -2147483646
  %160 = select i1 %159, i32 %115, i32 -2147483646
  %161 = add nsw i32 %160, -1
  %162 = sext i32 %122 to i64
  %163 = icmp slt i64 %162, 2147483646
  %164 = select i1 %163, i64 %162, i64 2147483646
  %165 = icmp sgt i64 %164, -2147483648
  %166 = select i1 %165, i64 %164, i64 -2147483648
  %167 = add nsw i64 %166, 1
  %168 = and i64 %167, 4294967295
  %169 = sext i32 %129 to i64
  %170 = icmp slt i64 %169, 2147483646
  %171 = select i1 %170, i64 %169, i64 2147483646
  %172 = icmp sgt i64 %171, -2147483648
  %173 = select i1 %172, i64 %171, i64 -2147483648
  %174 = shl nsw i64 %173, 32
  %175 = add i64 %174, 4294967296
  %176 = or i64 %175, %168
  br label %177

177:                                              ; preds = %74, %151, %155
  %178 = phi i32 [ %161, %155 ], [ %115, %151 ], [ %115, %74 ]
  %179 = phi i32 [ %158, %155 ], [ %108, %151 ], [ %108, %74 ]
  %180 = phi i64 [ %176, %155 ], [ %133, %151 ], [ %133, %74 ]
  %181 = zext i32 %178 to i64
  %182 = shl nuw i64 %181, 32
  %183 = zext i32 %179 to i64
  %184 = or i64 %182, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  br label %185

185:                                              ; preds = %68, %177, %32
  %186 = phi i64 [ %184, %177 ], [ %70, %68 ], [ %34, %32 ]
  %187 = phi i64 [ %180, %177 ], [ %73, %68 ], [ %37, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #8
  %188 = insertvalue { i64, i64 } undef, i64 %186, 0
  %189 = insertvalue { i64, i64 } %188, i64 %187, 1
  ret { i64, i64 } %189
}

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkMatrixImageFilterD0Ev(%class.SkMatrixImageFilter*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkMatrixImageFilter* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #8
  %3 = bitcast %class.SkMatrixImageFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK19SkMatrixImageFilter10getFactoryEv(%class.SkMatrixImageFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN19SkMatrixImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK19SkMatrixImageFilter11getTypeNameEv(%class.SkMatrixImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #1

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions*, i32, i32) unnamed_addr #1

declare void @_ZN14SkSamplingPriv4ReadER12SkReadBuffer(%struct.SkSamplingOptions* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE: argument 0"}
!4 = distinct !{!4, !"_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZZN19SkMatrixImageFilter10CreateProcER12SkReadBufferENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN19SkMatrixImageFilter10CreateProcER12SkReadBufferENK3$_0clEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!11 = distinct !{!11, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE: argument 0"}
!14 = distinct !{!14, !"_ZN19SkMatrixImageFilter4MakeERK8SkMatrixRK17SkSamplingOptions5sk_spI13SkImageFilterE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!17 = distinct !{!17, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!20 = distinct !{!20, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!23 = distinct !{!23, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
