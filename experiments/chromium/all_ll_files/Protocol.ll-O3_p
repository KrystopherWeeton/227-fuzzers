; ModuleID = 'gen/v8/src/inspector/protocol/Protocol.cpp'
source_filename = "gen/v8/src/inspector/protocol/Protocol.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8_inspector::protocol::DictionaryValue" = type { %"class.v8_inspector::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.18" }
%"class.v8_inspector::protocol::Value.base" = type <{ %"class.v8_crdtp::Serializable", i32 }>
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.std::__1::__compressed_pair.26" }
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8_inspector::String16"* }
%"class.v8_inspector::protocol::ListValue" = type { %"class.v8_inspector::protocol::Value.base", %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8_inspector::protocol::Value"* }
%"class.v8_inspector::protocol::Value" = type <{ %"class.v8_crdtp::Serializable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr"* }
%"class.v8_inspector::protocol::Object" = type { %"class.v8_crdtp::Serializable", %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8_inspector::protocol::DictionaryValue"* }
%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler" = type { %"class.v8_crdtp::ParserHandler", %"struct.v8_crdtp::Status", %"class.std::__1::unique_ptr", %"class.std::__1::vector", i8, %"class.v8_inspector::String16" }
%"class.v8_crdtp::ParserHandler" = type { i32 (...)** }
%"struct.v8_crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"class.std::__1::__compressed_pair.38" }
%"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState" = type { i8, %union.anon }
%union.anon = type { %"class.v8_inspector::protocol::DictionaryValue"* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.v8_inspector::protocol::Binary" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector.43"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i8*, i8*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8_inspector::protocol::FundamentalValue" = type { %"class.v8_inspector::protocol::Value.base", %union.anon.50 }
%union.anon.50 = type { double }
%"class.v8_inspector::protocol::StringValue" = type { %"class.v8_inspector::protocol::Value.base", %"class.v8_inspector::String16" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8_inspector::protocol::BinaryValue" = type { %"class.v8_inspector::protocol::Value.base", %"class.v8_inspector::protocol::Binary" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8_inspector::String16"* }
%"class.std::__1::tuple.132" = type { i8 }
%"struct.std::__1::pair.81" = type { %"class.v8_inspector::String16", %"class.v8_inspector::protocol::Value"* }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.v8_inspector::String16", %"class.std::__1::unique_ptr" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.11"*, i8, [7 x i8] }>
%"class.std::__1::allocator.11" = type { i8 }
%"class.v8_crdtp::cbor::EnvelopeEncoder" = type { i64 }
%"class.v8_crdtp::ErrorSupport" = type { %"class.std::__1::vector.90", %"class.std::__1::basic_string.98" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.v8_crdtp::ErrorSupport::Segment"*, %"struct.v8_crdtp::ErrorSupport::Segment"*, %"class.std::__1::__compressed_pair.93" }
%"struct.v8_crdtp::ErrorSupport::Segment" = type { i32, %union.anon.92 }
%union.anon.92 = type { i8* }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.v8_crdtp::ErrorSupport::Segment"* }
%"class.std::__1::basic_string.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.101 }
%union.anon.101 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8_crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr.107", %"class.v8_crdtp::cbor::CBORTokenizer", %"struct.v8_crdtp::Status", %"class.std::__1::vector.108" }
%"class.std::__1::shared_ptr.107" = type { %"class.std::__1::vector.43"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8_crdtp::cbor::CBORTokenizer" = type { %"class.v8_crdtp::span", i32, %"struct.v8_crdtp::Status", i64, i32, i64 }
%"class.v8_crdtp::span" = type { i8*, i64 }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.v8_crdtp::span.110"*, %"class.v8_crdtp::span.110"*, %"class.std::__1::__compressed_pair.111" }
%"class.v8_crdtp::span.110" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.v8_crdtp::span.110"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.v8_inspector::protocol::Object"* }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage" = type { [24 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E = comdat any

$_ZNSt3__16removeINS_11__wrap_iterIPN12v8_inspector8String16EEES3_EET_S6_S6_RKT0_ = comdat any

$_ZN12v8_inspector8protocol5ValueD0Ev = comdat any

$_ZN8v8_crdtp12SerializableD2Ev = comdat any

$_ZN12v8_inspector8protocol16FundamentalValueD0Ev = comdat any

$_ZN12v8_inspector8protocol11StringValueD2Ev = comdat any

$_ZN12v8_inspector8protocol11StringValueD0Ev = comdat any

$_ZN12v8_inspector8protocol11BinaryValueD2Ev = comdat any

$_ZN12v8_inspector8protocol11BinaryValueD0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE = comdat any

@_ZTVN12v8_inspector8protocol15DictionaryValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol15DictionaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::DictionaryValue"*)* @_ZN12v8_inspector8protocol15DictionaryValueD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::DictionaryValue"*)* @_ZN12v8_inspector8protocol15DictionaryValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i8*)* @_ZNK12v8_inspector8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, double*)* @_ZNK12v8_inspector8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i32*)* @_ZNK12v8_inspector8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)* @_ZNK12v8_inspector8protocol15DictionaryValue5cloneEv to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol9ListValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::ListValue"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol9ListValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::ListValue"*)* @_ZN12v8_inspector8protocol9ListValueD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::ListValue"*)* @_ZN12v8_inspector8protocol9ListValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i8*)* @_ZNK12v8_inspector8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, double*)* @_ZNK12v8_inspector8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i32*)* @_ZNK12v8_inspector8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::ListValue"*)* @_ZNK12v8_inspector8protocol9ListValue5cloneEv to i8*)] }, align 8
@.str = private unnamed_addr constant [16 x i8] c"object expected\00", align 1
@_ZTVN12v8_inspector8protocol6ObjectE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol6Object16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Object"*)* @_ZN12v8_inspector8protocol6ObjectD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Object"*)* @_ZN12v8_inspector8protocol6ObjectD0Ev to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol5ValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol5Value16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_crdtp::Serializable"*)* @_ZN8v8_crdtp12SerializableD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::Value"*)* @_ZN12v8_inspector8protocol5ValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i8*)* @_ZNK12v8_inspector8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, double*)* @_ZNK12v8_inspector8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i32*)* @_ZNK12v8_inspector8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)* @_ZNK12v8_inspector8protocol5Value5cloneEv to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol16FundamentalValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::FundamentalValue"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol16FundamentalValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_crdtp::Serializable"*)* @_ZN8v8_crdtp12SerializableD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::FundamentalValue"*)* @_ZN12v8_inspector8protocol16FundamentalValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::FundamentalValue"*, i8*)* @_ZNK12v8_inspector8protocol16FundamentalValue9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::FundamentalValue"*, double*)* @_ZNK12v8_inspector8protocol16FundamentalValue8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::FundamentalValue"*, i32*)* @_ZNK12v8_inspector8protocol16FundamentalValue9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::FundamentalValue"*)* @_ZNK12v8_inspector8protocol16FundamentalValue5cloneEv to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol11StringValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::StringValue"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol11StringValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::StringValue"*)* @_ZN12v8_inspector8protocol11StringValueD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::StringValue"*)* @_ZN12v8_inspector8protocol11StringValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i8*)* @_ZNK12v8_inspector8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, double*)* @_ZNK12v8_inspector8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i32*)* @_ZNK12v8_inspector8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::StringValue"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol11StringValue8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::StringValue"*)* @_ZNK12v8_inspector8protocol11StringValue5cloneEv to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol11BinaryValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::BinaryValue"*, %"class.std::__1::vector.43"*)* @_ZNK12v8_inspector8protocol11BinaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::BinaryValue"*)* @_ZN12v8_inspector8protocol11BinaryValueD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::BinaryValue"*)* @_ZN12v8_inspector8protocol11BinaryValueD0Ev to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i8*)* @_ZNK12v8_inspector8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, double*)* @_ZNK12v8_inspector8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, i32*)* @_ZNK12v8_inspector8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)* @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E to i8*), i8* bitcast (i1 (%"class.v8_inspector::protocol::BinaryValue"*, %"class.v8_inspector::protocol::Binary"*)* @_ZNK12v8_inspector8protocol11BinaryValue8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::BinaryValue"*)* @_ZNK12v8_inspector8protocol11BinaryValue5cloneEv to i8*)] }, align 8
@_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerD2Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerD0Ev to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleMapBeginEv to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleMapEndEv to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler16HandleArrayBeginEv to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleArrayEndEv to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler13HandleString8EN8v8_crdtp4spanIhEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i16*, i64)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleString16EN8v8_crdtp4spanItEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleBinaryEN8v8_crdtp4spanIhEE to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, double)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleDoubleEd to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i32)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler11HandleInt32Ei to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i1)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler10HandleBoolEb to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler10HandleNullEv to i8*), i8* bitcast (void (%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i32, i64)* @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler11HandleErrorEN8v8_crdtp6StatusE to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN12v8_inspector8protocol15DictionaryValueD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::DictionaryValue"*), void (%"class.v8_inspector::protocol::DictionaryValue"*)* @_ZN12v8_inspector8protocol15DictionaryValueD2Ev
@_ZN12v8_inspector8protocol15DictionaryValueC1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::DictionaryValue"*), void (%"class.v8_inspector::protocol::DictionaryValue"*)* @_ZN12v8_inspector8protocol15DictionaryValueC2Ev
@_ZN12v8_inspector8protocol9ListValueD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::ListValue"*), void (%"class.v8_inspector::protocol::ListValue"*)* @_ZN12v8_inspector8protocol9ListValueD2Ev
@_ZN12v8_inspector8protocol9ListValueC1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::ListValue"*), void (%"class.v8_inspector::protocol::ListValue"*)* @_ZN12v8_inspector8protocol9ListValueC2Ev
@_ZN12v8_inspector8protocol6ObjectC1ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::Object"*, %"class.v8_inspector::protocol::DictionaryValue"*), void (%"class.v8_inspector::protocol::Object"*, %"class.v8_inspector::protocol::DictionaryValue"*)* @_ZN12v8_inspector8protocol6ObjectC2ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE
@_ZN12v8_inspector8protocol6ObjectD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::protocol::Object"*), void (%"class.v8_inspector::protocol::Object"*)* @_ZN12v8_inspector8protocol6ObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZN12v8_inspector8protocol5Value11parseBinaryEPKhm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", align 8
  %4 = bitcast %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 1
  store i64 -1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 5
  %10 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #15
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #15
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0
  call void @_ZN8v8_crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8* %0, i64 %1, %"class.v8_crdtp::ParserHandler"* nonnull %12) #15
  %13 = load i32, i32* %6, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %16, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %16, align 8
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi %"class.v8_inspector::protocol::Value"* [ %17, %15 ], [ null, %2 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %20 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %24, %18
  %28 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 0
  %29 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %28, align 8
  %30 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29 to i64
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 1
  %34 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29, i64 0, i32 0
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %37, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %37, align 8
  %39 = icmp eq %"class.v8_inspector::protocol::Value"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.v8_inspector::protocol::Value"* %38 to void (%"class.v8_inspector::protocol::Value"*)***
  %42 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %42, i64 2
  %44 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %43, align 8
  call void %44(%"class.v8_inspector::protocol::Value"* nonnull %38) #15
  br label %45

45:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #15
  ret %"class.v8_inspector::protocol::Value"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8v8_crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8*, i64, %"class.v8_crdtp::ParserHandler"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerD2Ev(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %12, align 8
  %14 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13 to i64
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %21, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %21, align 8
  %23 = icmp eq %"class.v8_inspector::protocol::Value"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.v8_inspector::protocol::Value"* %22 to void (%"class.v8_inspector::protocol::Value"*)***
  %26 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %26, i64 2
  %28 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %27, align 8
  tail call void %28(%"class.v8_inspector::protocol::Value"* nonnull %22) #15
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol5Value9asBooleanEPb(%"class.v8_inspector::protocol::Value"* nocapture readnone, i8* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol5Value8asDoubleEPd(%"class.v8_inspector::protocol::Value"* nocapture readnone, double* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol5Value9asIntegerEPi(%"class.v8_inspector::protocol::Value"* nocapture readnone, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol5Value8asStringEPNS_8String16E(%"class.v8_inspector::protocol::Value"* nocapture readnone, %"class.v8_inspector::String16"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol5Value8asBinaryEPNS0_6BinaryE(%"class.v8_inspector::protocol::Value"* nocapture readnone, %"class.v8_inspector::protocol::Binary"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol5Value16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::Value"* nocapture readnone, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeNullEv() #15
  %4 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ult i8* %5, %7
  %9 = ptrtoint i8* %7 to i64
  br i1 %8, label %10, label %14

10:                                               ; preds = %2
  store i8 %3, i8* %5, align 1
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast i8** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %59

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  %16 = bitcast i8** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = add i64 %19, 1
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #17
  unreachable

24:                                               ; preds = %14
  %25 = bitcast i8** %6 to i64*
  %26 = sub i64 %9, %18
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %20
  %31 = select i1 %30, i64 %20, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %24
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %24 ]
  %35 = tail call i8* @_Znwm(i64 %34) #16
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 %3, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %16, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp sgt i64 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %45, i64 %48, i1 false) #15
  %54 = load i8*, i8** %44, align 8
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i8* [ %45, %36 ], [ %54, %53 ]
  store i64 %51, i64* %17, align 8
  store i64 %43, i64* %16, align 8
  store i64 %41, i64* %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZdlPv(i8* nonnull %56) #16
  br label %59

59:                                               ; preds = %10, %55, %58
  ret void
}

declare zeroext i8 @_ZN8v8_crdtp4cbor10EncodeNullEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol5Value5cloneEv(%"class.v8_inspector::protocol::Value"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #16
  %3 = bitcast i8* %2 to %"class.v8_inspector::protocol::Value"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  ret %"class.v8_inspector::protocol::Value"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol16FundamentalValue9asBooleanEPb(%"class.v8_inspector::protocol::FundamentalValue"* nocapture readonly, i8* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.50* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %1, align 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol16FundamentalValue8asDoubleEPd(%"class.v8_inspector::protocol::FundamentalValue"* nocapture readonly, double* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %15 [
    i32 3, label %5
    i32 2, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %7 = bitcast double* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast double* %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %12 = bitcast %union.anon.50* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  store double %14, double* %1, align 8
  br label %15

15:                                               ; preds = %2, %10, %5
  %16 = phi i1 [ true, %5 ], [ true, %10 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol16FundamentalValue9asIntegerEPi(%"class.v8_inspector::protocol::FundamentalValue"* nocapture readonly, i32* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.50* %7 to i32*
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %1, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol16FundamentalValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::FundamentalValue"* nocapture readonly, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %78 [
    i32 3, label %5
    i32 2, label %8
    i32 1, label %12
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  tail call void @_ZN8v8_crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double %7, %"class.std::__1::vector.43"* %1) #15
  br label %78

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %10 = bitcast %union.anon.50* %9 to i32*
  %11 = load i32, i32* %10, align 8
  tail call void @_ZN8v8_crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32 %11, %"class.std::__1::vector.43"* %1) #15
  br label %78

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %14 = bitcast %union.anon.50* %13 to i8*
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeTrueEv() #15
  br label %21

19:                                               ; preds = %12
  %20 = tail call zeroext i8 @_ZN8v8_crdtp4cbor11EncodeFalseEv() #15
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i8 [ %18, %17 ], [ %20, %19 ]
  %23 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ult i8* %24, %26
  %28 = ptrtoint i8* %26 to i64
  br i1 %27, label %29, label %33

29:                                               ; preds = %21
  store i8 %22, i8* %24, align 1
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast i8** %23 to i64*
  store i64 %31, i64* %32, align 8
  br label %78

33:                                               ; preds = %21
  %34 = ptrtoint i8* %24 to i64
  %35 = bitcast i8** %23 to i64*
  %36 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = add i64 %38, 1
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #17
  unreachable

43:                                               ; preds = %33
  %44 = bitcast i8** %25 to i64*
  %45 = sub i64 %28, %37
  %46 = icmp ult i64 %45, 4611686018427387903
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = shl i64 %45, 1
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %43
  %53 = phi i64 [ %50, %47 ], [ 9223372036854775807, %43 ]
  %54 = tail call i8* @_Znwm(i64 %53) #16
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %57 = phi i8* [ %54, %52 ], [ null, %47 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %38
  %59 = getelementptr inbounds i8, i8* %57, i64 %56
  %60 = ptrtoint i8* %59 to i64
  store i8 %22, i8* %58, align 1
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = ptrtoint i8* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i64, i64* %35, align 8
  %66 = ptrtoint i8* %64 to i64
  %67 = sub i64 %65, %66
  %68 = sub i64 0, %67
  %69 = getelementptr inbounds i8, i8* %58, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = icmp sgt i64 %67, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %64, i64 %67, i1 false) #15
  %73 = load i8*, i8** %63, align 8
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i8* [ %64, %55 ], [ %73, %72 ]
  store i64 %70, i64* %36, align 8
  store i64 %62, i64* %35, align 8
  store i64 %60, i64* %44, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call void @_ZdlPv(i8* nonnull %75) #16
  br label %78

78:                                               ; preds = %77, %74, %29, %2, %5, %8
  ret void
}

declare void @_ZN8v8_crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double, %"class.std::__1::vector.43"*) local_unnamed_addr #2

declare void @_ZN8v8_crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32, %"class.std::__1::vector.43"*) local_unnamed_addr #2

declare zeroext i8 @_ZN8v8_crdtp4cbor10EncodeTrueEv() local_unnamed_addr #2

declare zeroext i8 @_ZN8v8_crdtp4cbor11EncodeFalseEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol16FundamentalValue5cloneEv(%"class.v8_inspector::protocol::FundamentalValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %36 [
    i32 3, label %4
    i32 2, label %15
    i32 1, label %26
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %6 = bitcast double* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_Znwm(i64 24) #16
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = ptrtoint i8* %8 to i64
  br label %36

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %17 = bitcast %union.anon.50* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = tail call i8* @_Znwm(i64 24) #16
  %20 = bitcast i8* %19 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 2, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 %18, i32* %24, align 8
  %25 = ptrtoint i8* %19 to i64
  br label %36

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.v8_inspector::protocol::FundamentalValue", %"class.v8_inspector::protocol::FundamentalValue"* %0, i64 0, i32 1
  %28 = bitcast %union.anon.50* %27 to i8*
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = tail call i8* @_Znwm(i64 24) #16
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  store i8 %29, i8* %34, align 8
  %35 = ptrtoint i8* %30 to i64
  br label %36

36:                                               ; preds = %1, %26, %15, %4
  %37 = phi i64 [ %35, %26 ], [ %25, %15 ], [ %14, %4 ], [ 0, %1 ]
  %38 = inttoptr i64 %37 to %"class.v8_inspector::protocol::Value"*
  ret %"class.v8_inspector::protocol::Value"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol11StringValue8asStringEPNS_8String16E(%"class.v8_inspector::protocol::StringValue"*, %"class.v8_inspector::String16"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4) #15
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol11StringValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::StringValue"*, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* null, i64 0, %"class.std::__1::vector.43"* %1) #15
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %18 = select i1 %7, i16* %16, i16* %17
  %19 = icmp eq i16* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @_ZN8v8_crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16* nonnull %18, i64 %11, %"class.std::__1::vector.43"* %1) #15
  br label %21

21:                                               ; preds = %13, %14, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol11StringValue5cloneEv(%"class.v8_inspector::protocol::StringValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1
  %3 = tail call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %2)
  %4 = bitcast %"class.v8_inspector::protocol::StringValue"* %3 to %"class.v8_inspector::protocol::Value"*
  ret %"class.v8_inspector::protocol::Value"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #16
  %3 = bitcast i8* %2 to %"class.v8_inspector::protocol::StringValue"*
  %4 = bitcast i8* %2 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 4, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %13, i64 24, i1 false) #15
  br label %193

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = trunc i64 %19 to i8
  %23 = getelementptr inbounds i8, i8* %2, i64 39
  store i8 %22, i8* %23, align 1
  br label %42

24:                                               ; preds = %14
  %25 = icmp ugt i64 %19, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast i8* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #17
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %19, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #17
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #16
  %36 = bitcast i8* %7 to i8**
  store i8* %35, i8** %36, align 8
  %37 = or i64 %30, -9223372036854775808
  %38 = getelementptr inbounds i8, i8* %2, i64 32
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %2, i64 24
  %41 = bitcast i8* %40 to i64*
  store i64 %19, i64* %41, align 8
  br label %42

42:                                               ; preds = %33, %21
  %43 = phi i8* [ %7, %21 ], [ %35, %33 ]
  %44 = bitcast i8* %43 to i16*
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %140, label %48

48:                                               ; preds = %42
  %49 = shl i64 %19, 1
  %50 = add i64 %49, 2
  %51 = getelementptr i8, i8* %43, i64 %50
  %52 = add i64 %19, 1
  %53 = getelementptr i16, i16* %16, i64 %52
  %54 = bitcast i16* %53 to i8*
  %55 = icmp ult i8* %43, %54
  %56 = icmp ugt i8* %51, %17
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %48
  %59 = and i64 %46, -16
  %60 = getelementptr i16, i16* %44, i64 %59
  %61 = sub i64 %45, %59
  %62 = getelementptr i16, i16* %16, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %44, i64 %71
  %74 = getelementptr i16, i16* %16, i64 %71
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !3
  %77 = getelementptr i16, i16* %74, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !3
  %80 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !6, !noalias !3
  %81 = getelementptr i16, i16* %73, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !6, !noalias !3
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %44, i64 %83
  %85 = getelementptr i16, i16* %16, i64 %83
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !3
  %88 = getelementptr i16, i16* %85, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !3
  %91 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !6, !noalias !3
  %92 = getelementptr i16, i16* %84, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !6, !noalias !3
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %44, i64 %94
  %96 = getelementptr i16, i16* %16, i64 %94
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !3
  %99 = getelementptr i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !3
  %102 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !6, !noalias !3
  %103 = getelementptr i16, i16* %95, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !6, !noalias !3
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %44, i64 %105
  %107 = getelementptr i16, i16* %16, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !3
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !3
  %113 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !6, !noalias !3
  %114 = getelementptr i16, i16* %106, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !6, !noalias !3
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !8

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %44, i64 %123
  %126 = getelementptr i16, i16* %16, i64 %123
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !3
  %129 = getelementptr i16, i16* %126, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !3
  %132 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !6, !noalias !3
  %133 = getelementptr i16, i16* %125, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !6, !noalias !3
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !10

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %46, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %48, %42
  %141 = phi i16* [ %44, %48 ], [ %44, %42 ], [ %60, %138 ]
  %142 = phi i64 [ %45, %48 ], [ %45, %42 ], [ %61, %138 ]
  %143 = phi i16* [ %16, %48 ], [ %16, %42 ], [ %62, %138 ]
  %144 = add i64 %142, -1
  %145 = and i64 %142, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i16* [ %154, %147 ], [ %141, %140 ]
  %149 = phi i64 [ %153, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %155, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %150, align 2
  store i16 %152, i16* %148, align 2
  %153 = add i64 %149, -1
  %154 = getelementptr inbounds i16, i16* %148, i64 1
  %155 = getelementptr inbounds i16, i16* %150, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !12

158:                                              ; preds = %147, %140
  %159 = phi i16* [ %141, %140 ], [ %154, %147 ]
  %160 = phi i64 [ %142, %140 ], [ %153, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %155, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i16* [ %190, %163 ], [ %159, %158 ]
  %165 = phi i64 [ %189, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %191, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %164, align 2
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = getelementptr inbounds i16, i16* %166, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %164, i64 2
  %172 = getelementptr inbounds i16, i16* %166, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %164, i64 3
  %175 = getelementptr inbounds i16, i16* %166, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %164, i64 4
  %178 = getelementptr inbounds i16, i16* %166, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %164, i64 5
  %181 = getelementptr inbounds i16, i16* %166, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %164, i64 6
  %184 = getelementptr inbounds i16, i16* %166, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %164, i64 7
  %187 = getelementptr inbounds i16, i16* %166, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %165, -8
  %190 = getelementptr inbounds i16, i16* %164, i64 8
  %191 = getelementptr inbounds i16, i16* %166, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !13

193:                                              ; preds = %158, %163, %138, %12
  %194 = getelementptr inbounds i8, i8* %2, i64 40
  %195 = bitcast i8* %194 to i64*
  %196 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  ret %"class.v8_inspector::protocol::StringValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol11BinaryValue8asBinaryEPNS0_6BinaryE(%"class.v8_inspector::protocol::BinaryValue"* nocapture readonly, %"class.v8_inspector::protocol::Binary"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::protocol::Binary"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = ptrtoint %"class.std::__1::__shared_weak_count"* %7 to i64
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 1 monotonic
  br label %13

13:                                               ; preds = %10, %2
  %14 = bitcast %"class.v8_inspector::protocol::Binary"* %1 to i64*
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8_inspector::protocol::Binary", %"class.v8_inspector::protocol::Binary"* %1, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__shared_weak_count"** %15 to i64*
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %15, align 8
  store i64 %8, i64* %16, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 -1 acq_rel
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %25 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %26 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, i64 2
  %28 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, align 8
  tail call void %28(%"class.std::__1::__shared_count"* %24) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #15
  br label %29

29:                                               ; preds = %13, %19, %23
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol11BinaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::BinaryValue"* nocapture readonly, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::vector.43"*, %"class.std::__1::vector.43"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %4, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %4, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = sub i64 %9, %10
  tail call void @_ZN8v8_crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %6, i64 %11, %"class.std::__1::vector.43"* %1) #15
  ret void
}

declare void @_ZN8v8_crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.43"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol11BinaryValue5cloneEv(%"class.v8_inspector::protocol::BinaryValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1
  %3 = tail call i8* @_Znwm(i64 32) #16
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 5, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast %"class.v8_inspector::protocol::Binary"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %7 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 24
  %12 = bitcast i8* %11 to %"class.std::__1::__shared_weak_count"**
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  store %"class.std::__1::__shared_weak_count"* %14, %"class.std::__1::__shared_weak_count"** %12, align 8
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %14, i64 0, i32 0, i32 1
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  br label %19

19:                                               ; preds = %16, %1
  %20 = bitcast i8* %3 to %"class.v8_inspector::protocol::Value"*
  ret %"class.v8_inspector::protocol::Value"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValueD2Ev(%"class.v8_inspector::protocol::DictionaryValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %4, align 8
  %6 = icmp eq %"class.v8_inspector::String16"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::String16"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.v8_inspector::String16"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %13, i64 -1
  %15 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.v8_inspector::String16"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.18"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.v8_inspector::String16"* %5, %"class.v8_inspector::String16"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %29, %55
  %34 = phi %"struct.std::__1::__hash_node_base"* [ %36, %55 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 6
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.v8_inspector::protocol::Value"**
  %40 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %39, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %39, align 8
  %41 = icmp eq %"class.v8_inspector::protocol::Value"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.v8_inspector::protocol::Value"* %40 to void (%"class.v8_inspector::protocol::Value"*)***
  %44 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %44, i64 2
  %46 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %45, align 8
  tail call void %46(%"class.v8_inspector::protocol::Value"* nonnull %40) #15
  br label %47

47:                                               ; preds = %42, %33
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %37 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #16
  br label %55

55:                                               ; preds = %52, %47
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i8*
  tail call void @_ZdlPv(i8* %56) #16
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %55, %29
  %59 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %59, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base"** %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.std::__1::__hash_node_base"** %60 to i8*
  tail call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %58, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValueD0Ev(%"class.v8_inspector::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  tail call void @_ZN12v8_inspector8protocol15DictionaryValueD2Ev(%"class.v8_inspector::protocol::DictionaryValue"* %0) #15
  %2 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue10setBooleanERKNS_8String16Eb(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = zext i1 %2 to i8
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 %5, i8* %9, align 8
  %10 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"class.v8_inspector::protocol::Value"* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::protocol::Value"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.132", align 1
  %6 = ptrtoint %"class.v8_inspector::protocol::Value"* %2 to i64
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %8 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  %10 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %1, %"class.v8_inspector::String16"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.132", %"class.std::__1::tuple.132"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %13 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.132"* nonnull dereferenceable(1) %5) #15
  %14 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.v8_inspector::protocol::Value"**
  %17 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i64*
  store i64 %6, i64* %18, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.v8_inspector::protocol::Value"* %17 to void (%"class.v8_inspector::protocol::Value"*)***
  %22 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %22, i64 2
  %24 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %23, align 8
  call void %24(%"class.v8_inspector::protocol::Value"* nonnull %17) #15
  br label %25

25:                                               ; preds = %20, %3
  br i1 %9, label %26, label %224

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %27, align 8
  %29 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %29, align 8
  %31 = icmp eq %"class.v8_inspector::String16"* %28, %30
  br i1 %31, label %222, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8_inspector::String16"* %28 to i8*
  %39 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #15
  br label %215

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %44, 11
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = bitcast %"class.v8_inspector::String16"* %28 to i16*
  %48 = trunc i64 %44 to i8
  %49 = bitcast %"class.v8_inspector::String16"* %28 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %49, i64 0, i32 1, i32 1
  store i8 %48, i8* %50, align 1
  br label %68

51:                                               ; preds = %40
  %52 = icmp ugt i64 %44, 9223372036854775791
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.v8_inspector::String16"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %54) #17
  unreachable

55:                                               ; preds = %51
  %56 = add nuw nsw i64 %44, 8
  %57 = and i64 %56, -8
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void @abort() #17
  unreachable

60:                                               ; preds = %55
  %61 = shl i64 %57, 1
  %62 = call i8* @_Znwm(i64 %61) #16
  %63 = bitcast i8* %62 to i16*
  %64 = bitcast %"class.v8_inspector::String16"* %28 to i8**
  store i8* %62, i8** %64, align 8
  %65 = or i64 %57, -9223372036854775808
  %66 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %67, align 8
  br label %68

68:                                               ; preds = %60, %46
  %69 = phi i16* [ %47, %46 ], [ %63, %60 ]
  %70 = add nuw nsw i64 %44, 1
  %71 = add i64 %44, 1
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %162, label %73

73:                                               ; preds = %68
  %74 = add i64 %44, 1
  %75 = getelementptr i16, i16* %69, i64 %74
  %76 = getelementptr i16, i16* %42, i64 %74
  %77 = icmp ult i16* %69, %76
  %78 = icmp ult i16* %42, %75
  %79 = and i1 %77, %78
  br i1 %79, label %162, label %80

80:                                               ; preds = %73
  %81 = and i64 %71, -16
  %82 = getelementptr i16, i16* %69, i64 %81
  %83 = sub i64 %70, %81
  %84 = getelementptr i16, i16* %42, i64 %81
  %85 = add i64 %81, -16
  %86 = lshr exact i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 48
  br i1 %89, label %141, label %90

90:                                               ; preds = %80
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i16, i16* %69, i64 %93
  %96 = getelementptr i16, i16* %42, i64 %93
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !14
  %99 = getelementptr i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !14
  %102 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !17, !noalias !14
  %103 = getelementptr i16, i16* %95, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !17, !noalias !14
  %105 = or i64 %93, 16
  %106 = getelementptr i16, i16* %69, i64 %105
  %107 = getelementptr i16, i16* %42, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !14
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !14
  %113 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !17, !noalias !14
  %114 = getelementptr i16, i16* %106, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !17, !noalias !14
  %116 = or i64 %93, 32
  %117 = getelementptr i16, i16* %69, i64 %116
  %118 = getelementptr i16, i16* %42, i64 %116
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !14
  %121 = getelementptr i16, i16* %118, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !14
  %124 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !17, !noalias !14
  %125 = getelementptr i16, i16* %117, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !17, !noalias !14
  %127 = or i64 %93, 48
  %128 = getelementptr i16, i16* %69, i64 %127
  %129 = getelementptr i16, i16* %42, i64 %127
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !14
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !14
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !17, !noalias !14
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !17, !noalias !14
  %138 = add i64 %93, 64
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !19

141:                                              ; preds = %92, %80
  %142 = phi i64 [ 0, %80 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i16, i16* %69, i64 %145
  %148 = getelementptr i16, i16* %42, i64 %145
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !14
  %151 = getelementptr i16, i16* %148, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !14
  %154 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !17, !noalias !14
  %155 = getelementptr i16, i16* %147, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !17, !noalias !14
  %157 = add i64 %145, 16
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !20

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %71, %81
  br i1 %161, label %215, label %162

162:                                              ; preds = %160, %73, %68
  %163 = phi i16* [ %69, %73 ], [ %69, %68 ], [ %82, %160 ]
  %164 = phi i64 [ %70, %73 ], [ %70, %68 ], [ %83, %160 ]
  %165 = phi i16* [ %42, %73 ], [ %42, %68 ], [ %84, %160 ]
  %166 = add i64 %164, -1
  %167 = and i64 %164, 7
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %162, %169
  %170 = phi i16* [ %176, %169 ], [ %163, %162 ]
  %171 = phi i64 [ %175, %169 ], [ %164, %162 ]
  %172 = phi i16* [ %177, %169 ], [ %165, %162 ]
  %173 = phi i64 [ %178, %169 ], [ %167, %162 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %170, align 2
  %175 = add i64 %171, -1
  %176 = getelementptr inbounds i16, i16* %170, i64 1
  %177 = getelementptr inbounds i16, i16* %172, i64 1
  %178 = add i64 %173, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %169, !llvm.loop !21

180:                                              ; preds = %169, %162
  %181 = phi i16* [ %163, %162 ], [ %176, %169 ]
  %182 = phi i64 [ %164, %162 ], [ %175, %169 ]
  %183 = phi i16* [ %165, %162 ], [ %177, %169 ]
  %184 = icmp ult i64 %166, 7
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %185
  %186 = phi i16* [ %212, %185 ], [ %181, %180 ]
  %187 = phi i64 [ %211, %185 ], [ %182, %180 ]
  %188 = phi i16* [ %213, %185 ], [ %183, %180 ]
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %186, align 2
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %188, i64 1
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %186, i64 2
  %194 = getelementptr inbounds i16, i16* %188, i64 2
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %186, i64 3
  %197 = getelementptr inbounds i16, i16* %188, i64 3
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %186, i64 4
  %200 = getelementptr inbounds i16, i16* %188, i64 4
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %186, i64 5
  %203 = getelementptr inbounds i16, i16* %188, i64 5
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %186, i64 6
  %206 = getelementptr inbounds i16, i16* %188, i64 6
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %186, i64 7
  %209 = getelementptr inbounds i16, i16* %188, i64 7
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = add i64 %187, -8
  %212 = getelementptr inbounds i16, i16* %186, i64 8
  %213 = getelementptr inbounds i16, i16* %188, i64 8
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %215, label %185, !llvm.loop !22

215:                                              ; preds = %180, %185, %160, %37
  %216 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 1
  %217 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 1
  %220 = ptrtoint %"class.v8_inspector::String16"* %219 to i64
  %221 = bitcast %"class.v8_inspector::String16"** %27 to i64*
  store i64 %220, i64* %221, align 8
  br label %224

222:                                              ; preds = %26
  %223 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"* %223, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  br label %224

224:                                              ; preds = %25, %215, %222
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue10setIntegerERKNS_8String16Ei(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 2, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 %2, i32* %9, align 8
  %10 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"class.v8_inspector::protocol::Value"* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue9setDoubleERKNS_8String16Ed(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), double) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 3, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to double*
  store double %2, double* %9, align 8
  %10 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"class.v8_inspector::protocol::Value"* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue9setStringERKNS_8String16ES4_(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %2)
  %5 = bitcast %"class.v8_inspector::protocol::StringValue"* %4 to %"class.v8_inspector::protocol::Value"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %0, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"class.v8_inspector::protocol::Value"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue9setObjectERKNS_8String16ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEE(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::protocol::DictionaryValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.132", align 1
  %6 = ptrtoint %"class.v8_inspector::protocol::DictionaryValue"* %2 to i64
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %8 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  %10 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %1, %"class.v8_inspector::String16"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.132", %"class.std::__1::tuple.132"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %13 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.132"* nonnull dereferenceable(1) %5) #15
  %14 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.v8_inspector::protocol::Value"**
  %17 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i64*
  store i64 %6, i64* %18, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.v8_inspector::protocol::Value"* %17 to void (%"class.v8_inspector::protocol::Value"*)***
  %22 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %22, i64 2
  %24 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %23, align 8
  call void %24(%"class.v8_inspector::protocol::Value"* nonnull %17) #15
  br label %25

25:                                               ; preds = %20, %3
  br i1 %9, label %26, label %224

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %27, align 8
  %29 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %29, align 8
  %31 = icmp eq %"class.v8_inspector::String16"* %28, %30
  br i1 %31, label %222, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8_inspector::String16"* %28 to i8*
  %39 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #15
  br label %215

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %44, 11
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = bitcast %"class.v8_inspector::String16"* %28 to i16*
  %48 = trunc i64 %44 to i8
  %49 = bitcast %"class.v8_inspector::String16"* %28 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %49, i64 0, i32 1, i32 1
  store i8 %48, i8* %50, align 1
  br label %68

51:                                               ; preds = %40
  %52 = icmp ugt i64 %44, 9223372036854775791
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.v8_inspector::String16"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %54) #17
  unreachable

55:                                               ; preds = %51
  %56 = add nuw nsw i64 %44, 8
  %57 = and i64 %56, -8
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void @abort() #17
  unreachable

60:                                               ; preds = %55
  %61 = shl i64 %57, 1
  %62 = call i8* @_Znwm(i64 %61) #16
  %63 = bitcast i8* %62 to i16*
  %64 = bitcast %"class.v8_inspector::String16"* %28 to i8**
  store i8* %62, i8** %64, align 8
  %65 = or i64 %57, -9223372036854775808
  %66 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %67, align 8
  br label %68

68:                                               ; preds = %60, %46
  %69 = phi i16* [ %47, %46 ], [ %63, %60 ]
  %70 = add nuw nsw i64 %44, 1
  %71 = add i64 %44, 1
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %162, label %73

73:                                               ; preds = %68
  %74 = add i64 %44, 1
  %75 = getelementptr i16, i16* %69, i64 %74
  %76 = getelementptr i16, i16* %42, i64 %74
  %77 = icmp ult i16* %69, %76
  %78 = icmp ult i16* %42, %75
  %79 = and i1 %77, %78
  br i1 %79, label %162, label %80

80:                                               ; preds = %73
  %81 = and i64 %71, -16
  %82 = getelementptr i16, i16* %69, i64 %81
  %83 = sub i64 %70, %81
  %84 = getelementptr i16, i16* %42, i64 %81
  %85 = add i64 %81, -16
  %86 = lshr exact i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 48
  br i1 %89, label %141, label %90

90:                                               ; preds = %80
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i16, i16* %69, i64 %93
  %96 = getelementptr i16, i16* %42, i64 %93
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !23
  %99 = getelementptr i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !23
  %102 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !26, !noalias !23
  %103 = getelementptr i16, i16* %95, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !26, !noalias !23
  %105 = or i64 %93, 16
  %106 = getelementptr i16, i16* %69, i64 %105
  %107 = getelementptr i16, i16* %42, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !23
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !23
  %113 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !26, !noalias !23
  %114 = getelementptr i16, i16* %106, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !26, !noalias !23
  %116 = or i64 %93, 32
  %117 = getelementptr i16, i16* %69, i64 %116
  %118 = getelementptr i16, i16* %42, i64 %116
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !23
  %121 = getelementptr i16, i16* %118, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !23
  %124 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !26, !noalias !23
  %125 = getelementptr i16, i16* %117, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !26, !noalias !23
  %127 = or i64 %93, 48
  %128 = getelementptr i16, i16* %69, i64 %127
  %129 = getelementptr i16, i16* %42, i64 %127
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !23
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !23
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !26, !noalias !23
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !26, !noalias !23
  %138 = add i64 %93, 64
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !28

141:                                              ; preds = %92, %80
  %142 = phi i64 [ 0, %80 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i16, i16* %69, i64 %145
  %148 = getelementptr i16, i16* %42, i64 %145
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !23
  %151 = getelementptr i16, i16* %148, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !23
  %154 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !26, !noalias !23
  %155 = getelementptr i16, i16* %147, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !26, !noalias !23
  %157 = add i64 %145, 16
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !29

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %71, %81
  br i1 %161, label %215, label %162

162:                                              ; preds = %160, %73, %68
  %163 = phi i16* [ %69, %73 ], [ %69, %68 ], [ %82, %160 ]
  %164 = phi i64 [ %70, %73 ], [ %70, %68 ], [ %83, %160 ]
  %165 = phi i16* [ %42, %73 ], [ %42, %68 ], [ %84, %160 ]
  %166 = add i64 %164, -1
  %167 = and i64 %164, 7
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %162, %169
  %170 = phi i16* [ %176, %169 ], [ %163, %162 ]
  %171 = phi i64 [ %175, %169 ], [ %164, %162 ]
  %172 = phi i16* [ %177, %169 ], [ %165, %162 ]
  %173 = phi i64 [ %178, %169 ], [ %167, %162 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %170, align 2
  %175 = add i64 %171, -1
  %176 = getelementptr inbounds i16, i16* %170, i64 1
  %177 = getelementptr inbounds i16, i16* %172, i64 1
  %178 = add i64 %173, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %169, !llvm.loop !30

180:                                              ; preds = %169, %162
  %181 = phi i16* [ %163, %162 ], [ %176, %169 ]
  %182 = phi i64 [ %164, %162 ], [ %175, %169 ]
  %183 = phi i16* [ %165, %162 ], [ %177, %169 ]
  %184 = icmp ult i64 %166, 7
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %185
  %186 = phi i16* [ %212, %185 ], [ %181, %180 ]
  %187 = phi i64 [ %211, %185 ], [ %182, %180 ]
  %188 = phi i16* [ %213, %185 ], [ %183, %180 ]
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %186, align 2
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %188, i64 1
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %186, i64 2
  %194 = getelementptr inbounds i16, i16* %188, i64 2
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %186, i64 3
  %197 = getelementptr inbounds i16, i16* %188, i64 3
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %186, i64 4
  %200 = getelementptr inbounds i16, i16* %188, i64 4
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %186, i64 5
  %203 = getelementptr inbounds i16, i16* %188, i64 5
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %186, i64 6
  %206 = getelementptr inbounds i16, i16* %188, i64 6
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %186, i64 7
  %209 = getelementptr inbounds i16, i16* %188, i64 7
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = add i64 %187, -8
  %212 = getelementptr inbounds i16, i16* %186, i64 8
  %213 = getelementptr inbounds i16, i16* %188, i64 8
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %215, label %185, !llvm.loop !31

215:                                              ; preds = %180, %185, %160, %37
  %216 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 1
  %217 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 1
  %220 = ptrtoint %"class.v8_inspector::String16"* %219 to i64
  %221 = bitcast %"class.v8_inspector::String16"** %27 to i64*
  store i64 %220, i64* %221, align 8
  br label %224

222:                                              ; preds = %26
  %223 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"* %223, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  br label %224

224:                                              ; preds = %25, %215, %222
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue8setArrayERKNS_8String16ENSt3__110unique_ptrINS0_9ListValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::protocol::ListValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.132", align 1
  %6 = ptrtoint %"class.v8_inspector::protocol::ListValue"* %2 to i64
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %8 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  %10 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %1, %"class.v8_inspector::String16"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.132", %"class.std::__1::tuple.132"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %13 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %7, %"class.v8_inspector::String16"* dereferenceable(32) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.132"* nonnull dereferenceable(1) %5) #15
  %14 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.v8_inspector::protocol::Value"**
  %17 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i64*
  store i64 %6, i64* %18, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.v8_inspector::protocol::Value"* %17 to void (%"class.v8_inspector::protocol::Value"*)***
  %22 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %22, i64 2
  %24 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %23, align 8
  call void %24(%"class.v8_inspector::protocol::Value"* nonnull %17) #15
  br label %25

25:                                               ; preds = %20, %3
  br i1 %9, label %26, label %224

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %27, align 8
  %29 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %29, align 8
  %31 = icmp eq %"class.v8_inspector::String16"* %28, %30
  br i1 %31, label %222, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8_inspector::String16"* %28 to i8*
  %39 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #15
  br label %215

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %44, 11
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = bitcast %"class.v8_inspector::String16"* %28 to i16*
  %48 = trunc i64 %44 to i8
  %49 = bitcast %"class.v8_inspector::String16"* %28 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %49, i64 0, i32 1, i32 1
  store i8 %48, i8* %50, align 1
  br label %68

51:                                               ; preds = %40
  %52 = icmp ugt i64 %44, 9223372036854775791
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.v8_inspector::String16"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %54) #17
  unreachable

55:                                               ; preds = %51
  %56 = add nuw nsw i64 %44, 8
  %57 = and i64 %56, -8
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void @abort() #17
  unreachable

60:                                               ; preds = %55
  %61 = shl i64 %57, 1
  %62 = call i8* @_Znwm(i64 %61) #16
  %63 = bitcast i8* %62 to i16*
  %64 = bitcast %"class.v8_inspector::String16"* %28 to i8**
  store i8* %62, i8** %64, align 8
  %65 = or i64 %57, -9223372036854775808
  %66 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %67, align 8
  br label %68

68:                                               ; preds = %60, %46
  %69 = phi i16* [ %47, %46 ], [ %63, %60 ]
  %70 = add nuw nsw i64 %44, 1
  %71 = add i64 %44, 1
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %162, label %73

73:                                               ; preds = %68
  %74 = add i64 %44, 1
  %75 = getelementptr i16, i16* %69, i64 %74
  %76 = getelementptr i16, i16* %42, i64 %74
  %77 = icmp ult i16* %69, %76
  %78 = icmp ult i16* %42, %75
  %79 = and i1 %77, %78
  br i1 %79, label %162, label %80

80:                                               ; preds = %73
  %81 = and i64 %71, -16
  %82 = getelementptr i16, i16* %69, i64 %81
  %83 = sub i64 %70, %81
  %84 = getelementptr i16, i16* %42, i64 %81
  %85 = add i64 %81, -16
  %86 = lshr exact i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 48
  br i1 %89, label %141, label %90

90:                                               ; preds = %80
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i16, i16* %69, i64 %93
  %96 = getelementptr i16, i16* %42, i64 %93
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !32
  %99 = getelementptr i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !32
  %102 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !35, !noalias !32
  %103 = getelementptr i16, i16* %95, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !35, !noalias !32
  %105 = or i64 %93, 16
  %106 = getelementptr i16, i16* %69, i64 %105
  %107 = getelementptr i16, i16* %42, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !32
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !32
  %113 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !35, !noalias !32
  %114 = getelementptr i16, i16* %106, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !35, !noalias !32
  %116 = or i64 %93, 32
  %117 = getelementptr i16, i16* %69, i64 %116
  %118 = getelementptr i16, i16* %42, i64 %116
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !32
  %121 = getelementptr i16, i16* %118, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !32
  %124 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !35, !noalias !32
  %125 = getelementptr i16, i16* %117, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !35, !noalias !32
  %127 = or i64 %93, 48
  %128 = getelementptr i16, i16* %69, i64 %127
  %129 = getelementptr i16, i16* %42, i64 %127
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !32
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !32
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !35, !noalias !32
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !35, !noalias !32
  %138 = add i64 %93, 64
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !37

141:                                              ; preds = %92, %80
  %142 = phi i64 [ 0, %80 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i16, i16* %69, i64 %145
  %148 = getelementptr i16, i16* %42, i64 %145
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !32
  %151 = getelementptr i16, i16* %148, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !32
  %154 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !35, !noalias !32
  %155 = getelementptr i16, i16* %147, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !35, !noalias !32
  %157 = add i64 %145, 16
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !38

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %71, %81
  br i1 %161, label %215, label %162

162:                                              ; preds = %160, %73, %68
  %163 = phi i16* [ %69, %73 ], [ %69, %68 ], [ %82, %160 ]
  %164 = phi i64 [ %70, %73 ], [ %70, %68 ], [ %83, %160 ]
  %165 = phi i16* [ %42, %73 ], [ %42, %68 ], [ %84, %160 ]
  %166 = add i64 %164, -1
  %167 = and i64 %164, 7
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %162, %169
  %170 = phi i16* [ %176, %169 ], [ %163, %162 ]
  %171 = phi i64 [ %175, %169 ], [ %164, %162 ]
  %172 = phi i16* [ %177, %169 ], [ %165, %162 ]
  %173 = phi i64 [ %178, %169 ], [ %167, %162 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %170, align 2
  %175 = add i64 %171, -1
  %176 = getelementptr inbounds i16, i16* %170, i64 1
  %177 = getelementptr inbounds i16, i16* %172, i64 1
  %178 = add i64 %173, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %169, !llvm.loop !39

180:                                              ; preds = %169, %162
  %181 = phi i16* [ %163, %162 ], [ %176, %169 ]
  %182 = phi i64 [ %164, %162 ], [ %175, %169 ]
  %183 = phi i16* [ %165, %162 ], [ %177, %169 ]
  %184 = icmp ult i64 %166, 7
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %185
  %186 = phi i16* [ %212, %185 ], [ %181, %180 ]
  %187 = phi i64 [ %211, %185 ], [ %182, %180 ]
  %188 = phi i16* [ %213, %185 ], [ %183, %180 ]
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %186, align 2
  %190 = getelementptr inbounds i16, i16* %186, i64 1
  %191 = getelementptr inbounds i16, i16* %188, i64 1
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %186, i64 2
  %194 = getelementptr inbounds i16, i16* %188, i64 2
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %186, i64 3
  %197 = getelementptr inbounds i16, i16* %188, i64 3
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %186, i64 4
  %200 = getelementptr inbounds i16, i16* %188, i64 4
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %186, i64 5
  %203 = getelementptr inbounds i16, i16* %188, i64 5
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %186, i64 6
  %206 = getelementptr inbounds i16, i16* %188, i64 6
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %186, i64 7
  %209 = getelementptr inbounds i16, i16* %188, i64 7
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = add i64 %187, -8
  %212 = getelementptr inbounds i16, i16* %186, i64 8
  %213 = getelementptr inbounds i16, i16* %188, i64 8
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %215, label %185, !llvm.loop !40

215:                                              ; preds = %180, %185, %160, %37
  %216 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 0, i32 1
  %217 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %28, i64 1
  %220 = ptrtoint %"class.v8_inspector::String16"* %219 to i64
  %221 = bitcast %"class.v8_inspector::String16"** %27 to i64*
  store i64 %220, i64* %221, align 8
  br label %224

222:                                              ; preds = %26
  %223 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"* %223, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  br label %224

224:                                              ; preds = %25, %215, %222
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue10getBooleanERKNS_8String16EPb(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 6
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.v8_inspector::protocol::Value"**
  %10 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8_inspector::protocol::Value"* %10 to i1 (%"class.v8_inspector::protocol::Value"*, i8*)***
  %14 = load i1 (%"class.v8_inspector::protocol::Value"*, i8*)**, i1 (%"class.v8_inspector::protocol::Value"*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, i8*)*, i1 (%"class.v8_inspector::protocol::Value"*, i8*)** %14, i64 3
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, i8*)*, i1 (%"class.v8_inspector::protocol::Value"*, i8*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.v8_inspector::protocol::Value"* nonnull %10, i8* %2) #15
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol15DictionaryValue3getERKNS_8String16E(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 6
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.v8_inspector::protocol::Value"**
  %9 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %8, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi %"class.v8_inspector::protocol::Value"* [ %9, %6 ], [ null, %2 ]
  ret %"class.v8_inspector::protocol::Value"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue10getIntegerERKNS_8String16EPi(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 6
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.v8_inspector::protocol::Value"**
  %10 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8_inspector::protocol::Value"* %10 to i1 (%"class.v8_inspector::protocol::Value"*, i32*)***
  %14 = load i1 (%"class.v8_inspector::protocol::Value"*, i32*)**, i1 (%"class.v8_inspector::protocol::Value"*, i32*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, i32*)*, i1 (%"class.v8_inspector::protocol::Value"*, i32*)** %14, i64 5
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, i32*)*, i1 (%"class.v8_inspector::protocol::Value"*, i32*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.v8_inspector::protocol::Value"* nonnull %10, i32* %2) #15
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue9getDoubleERKNS_8String16EPd(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), double*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 6
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.v8_inspector::protocol::Value"**
  %10 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8_inspector::protocol::Value"* %10 to i1 (%"class.v8_inspector::protocol::Value"*, double*)***
  %14 = load i1 (%"class.v8_inspector::protocol::Value"*, double*)**, i1 (%"class.v8_inspector::protocol::Value"*, double*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, double*)*, i1 (%"class.v8_inspector::protocol::Value"*, double*)** %14, i64 4
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, double*)*, i1 (%"class.v8_inspector::protocol::Value"*, double*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.v8_inspector::protocol::Value"* nonnull %10, double* %2) #15
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue9getStringERKNS_8String16EPS2_(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 6
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.v8_inspector::protocol::Value"**
  %10 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8_inspector::protocol::Value"* %10 to i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)***
  %14 = load i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)**, i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)*, i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)** %14, i64 6
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)*, i1 (%"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::String16"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.v8_inspector::protocol::Value"* nonnull %10, %"class.v8_inspector::String16"* %2) #15
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::DictionaryValue"* @_ZNK12v8_inspector8protocol15DictionaryValue9getObjectERKNS_8String16E(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 6
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.v8_inspector::protocol::Value"**
  %9 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %8, align 8
  %10 = icmp eq %"class.v8_inspector::protocol::Value"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 6
  %15 = bitcast %"class.v8_inspector::protocol::Value"* %9 to %"class.v8_inspector::protocol::DictionaryValue"*
  %16 = select i1 %14, %"class.v8_inspector::protocol::DictionaryValue"* %15, %"class.v8_inspector::protocol::DictionaryValue"* null
  br label %17

17:                                               ; preds = %2, %6, %11
  %18 = phi %"class.v8_inspector::protocol::DictionaryValue"* [ %16, %11 ], [ null, %6 ], [ null, %2 ]
  ret %"class.v8_inspector::protocol::DictionaryValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::ListValue"* @_ZNK12v8_inspector8protocol15DictionaryValue8getArrayERKNS_8String16E(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 6
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.v8_inspector::protocol::Value"**
  %9 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %8, align 8
  %10 = icmp eq %"class.v8_inspector::protocol::Value"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 7
  %15 = bitcast %"class.v8_inspector::protocol::Value"* %9 to %"class.v8_inspector::protocol::ListValue"*
  %16 = select i1 %14, %"class.v8_inspector::protocol::ListValue"* %15, %"class.v8_inspector::protocol::ListValue"* null
  br label %17

17:                                               ; preds = %2, %6, %11
  %18 = phi %"class.v8_inspector::protocol::ListValue"* [ %16, %11 ], [ null, %6 ], [ null, %2 ]
  ret %"class.v8_inspector::protocol::ListValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol15DictionaryValue2atEm(%"struct.std::__1::pair.81"* noalias sret, %"class.v8_inspector::protocol::DictionaryValue"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 %2
  %9 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %14, i64 24, i1 false) #15
  br label %190

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 %2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8_inspector::String16"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #17
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #17
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #16
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %45, %56
  %59 = getelementptr i16, i16* %17, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %44, i64 %68
  %71 = getelementptr i16, i16* %17, i64 %68
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !41
  %74 = getelementptr i16, i16* %71, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !41
  %77 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !44, !noalias !41
  %78 = getelementptr i16, i16* %70, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !44, !noalias !41
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %44, i64 %80
  %82 = getelementptr i16, i16* %17, i64 %80
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !41
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !41
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !44, !noalias !41
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !44, !noalias !41
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %44, i64 %91
  %93 = getelementptr i16, i16* %17, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !41
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !41
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !44, !noalias !41
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !44, !noalias !41
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %44, i64 %102
  %104 = getelementptr i16, i16* %17, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !41
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !41
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !44, !noalias !41
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !44, !noalias !41
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !46

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %44, i64 %120
  %123 = getelementptr i16, i16* %17, i64 %120
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !41
  %126 = getelementptr i16, i16* %123, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !41
  %129 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !44, !noalias !41
  %130 = getelementptr i16, i16* %122, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !44, !noalias !41
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !47

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %57, %135 ]
  %139 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %59, %135 ]
  %141 = add i64 %139, -1
  %142 = and i64 %139, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i16* [ %151, %144 ], [ %138, %137 ]
  %146 = phi i64 [ %150, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %152, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %147, align 2
  store i16 %149, i16* %145, align 2
  %150 = add i64 %146, -1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = getelementptr inbounds i16, i16* %147, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !48

155:                                              ; preds = %144, %137
  %156 = phi i16* [ %138, %137 ], [ %151, %144 ]
  %157 = phi i64 [ %139, %137 ], [ %150, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %152, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i16* [ %187, %160 ], [ %156, %155 ]
  %162 = phi i64 [ %186, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %188, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %161, align 2
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = getelementptr inbounds i16, i16* %163, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = getelementptr inbounds i16, i16* %163, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = getelementptr inbounds i16, i16* %163, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = getelementptr inbounds i16, i16* %163, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = getelementptr inbounds i16, i16* %163, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = getelementptr inbounds i16, i16* %163, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %162, -8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = getelementptr inbounds i16, i16* %163, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !49

190:                                              ; preds = %155, %160, %135, %13
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 %2, i32 1
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %1, i64 0, i32 2, i32 0
  %195 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %194, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4) #15
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %195, i64 6
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %209, label %203

203:                                              ; preds = %190
  %204 = bitcast %"struct.std::__1::pair.81"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* nonnull align 8 %5, i64 24, i1 false) #15
  %205 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 0, i32 1
  %206 = load i64, i64* %191, align 8, !noalias !50
  store i64 %206, i64* %205, align 8, !alias.scope !50
  %207 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 1
  %208 = bitcast %"class.v8_inspector::protocol::Value"** %207 to i64*
  store i64 %198, i64* %208, align 8, !alias.scope !50
  br label %394

209:                                              ; preds = %190
  %210 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i16*, i16** %210, align 8, !noalias !50
  %212 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8, !noalias !50
  %214 = icmp ult i64 %213, 11
  br i1 %214, label %215, label %220

215:                                              ; preds = %209
  %216 = bitcast %"struct.std::__1::pair.81"* %0 to i16*
  %217 = trunc i64 %213 to i8
  %218 = bitcast %"struct.std::__1::pair.81"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %218, i64 0, i32 1, i32 1
  store i8 %217, i8* %219, align 1, !alias.scope !50
  br label %237

220:                                              ; preds = %209
  %221 = icmp ugt i64 %213, 9223372036854775791
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = bitcast %"struct.std::__1::pair.81"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %223) #17
  unreachable

224:                                              ; preds = %220
  %225 = add nuw nsw i64 %213, 8
  %226 = and i64 %225, -8
  %227 = icmp slt i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  call void @abort() #17
  unreachable

229:                                              ; preds = %224
  %230 = shl i64 %226, 1
  %231 = call i8* @_Znwm(i64 %230) #16
  %232 = bitcast i8* %231 to i16*
  %233 = bitcast %"struct.std::__1::pair.81"* %0 to i8**
  store i8* %231, i8** %233, align 8, !alias.scope !50
  %234 = or i64 %226, -9223372036854775808
  %235 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %234, i64* %235, align 8, !alias.scope !50
  %236 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %213, i64* %236, align 8, !alias.scope !50
  br label %237

237:                                              ; preds = %229, %215
  %238 = phi i16* [ %216, %215 ], [ %232, %229 ]
  %239 = add nuw nsw i64 %213, 1
  %240 = add i64 %213, 1
  %241 = icmp ult i64 %240, 16
  br i1 %241, label %331, label %242

242:                                              ; preds = %237
  %243 = add i64 %213, 1
  %244 = getelementptr i16, i16* %238, i64 %243
  %245 = getelementptr i16, i16* %211, i64 %243
  %246 = icmp ult i16* %238, %245
  %247 = icmp ult i16* %211, %244
  %248 = and i1 %246, %247
  br i1 %248, label %331, label %249

249:                                              ; preds = %242
  %250 = and i64 %240, -16
  %251 = getelementptr i16, i16* %238, i64 %250
  %252 = sub i64 %239, %250
  %253 = getelementptr i16, i16* %211, i64 %250
  %254 = add i64 %250, -16
  %255 = lshr exact i64 %254, 4
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp ult i64 %254, 48
  br i1 %258, label %310, label %259

259:                                              ; preds = %249
  %260 = sub nsw i64 %256, %257
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i64 [ 0, %259 ], [ %307, %261 ]
  %263 = phi i64 [ %260, %259 ], [ %308, %261 ]
  %264 = getelementptr i16, i16* %238, i64 %262
  %265 = getelementptr i16, i16* %211, i64 %262
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !53
  %268 = getelementptr i16, i16* %265, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !53
  %271 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !56, !noalias !53
  %272 = getelementptr i16, i16* %264, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !56, !noalias !53
  %274 = or i64 %262, 16
  %275 = getelementptr i16, i16* %238, i64 %274
  %276 = getelementptr i16, i16* %211, i64 %274
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !53
  %279 = getelementptr i16, i16* %276, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !53
  %282 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !56, !noalias !53
  %283 = getelementptr i16, i16* %275, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !56, !noalias !53
  %285 = or i64 %262, 32
  %286 = getelementptr i16, i16* %238, i64 %285
  %287 = getelementptr i16, i16* %211, i64 %285
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !53
  %290 = getelementptr i16, i16* %287, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !53
  %293 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !56, !noalias !53
  %294 = getelementptr i16, i16* %286, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !56, !noalias !53
  %296 = or i64 %262, 48
  %297 = getelementptr i16, i16* %238, i64 %296
  %298 = getelementptr i16, i16* %211, i64 %296
  %299 = bitcast i16* %298 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !53
  %301 = getelementptr i16, i16* %298, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  %303 = load <8 x i16>, <8 x i16>* %302, align 2, !alias.scope !53
  %304 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %304, align 2, !alias.scope !56, !noalias !53
  %305 = getelementptr i16, i16* %297, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %303, <8 x i16>* %306, align 2, !alias.scope !56, !noalias !53
  %307 = add i64 %262, 64
  %308 = add i64 %263, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %261, !llvm.loop !58

310:                                              ; preds = %261, %249
  %311 = phi i64 [ 0, %249 ], [ %307, %261 ]
  %312 = icmp eq i64 %257, 0
  br i1 %312, label %329, label %313

313:                                              ; preds = %310, %313
  %314 = phi i64 [ %326, %313 ], [ %311, %310 ]
  %315 = phi i64 [ %327, %313 ], [ %257, %310 ]
  %316 = getelementptr i16, i16* %238, i64 %314
  %317 = getelementptr i16, i16* %211, i64 %314
  %318 = bitcast i16* %317 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !53
  %320 = getelementptr i16, i16* %317, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !53
  %323 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %323, align 2, !alias.scope !56, !noalias !53
  %324 = getelementptr i16, i16* %316, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %325, align 2, !alias.scope !56, !noalias !53
  %326 = add i64 %314, 16
  %327 = add i64 %315, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %313, !llvm.loop !59

329:                                              ; preds = %313, %310
  %330 = icmp eq i64 %240, %250
  br i1 %330, label %384, label %331

331:                                              ; preds = %329, %242, %237
  %332 = phi i16* [ %238, %242 ], [ %238, %237 ], [ %251, %329 ]
  %333 = phi i64 [ %239, %242 ], [ %239, %237 ], [ %252, %329 ]
  %334 = phi i16* [ %211, %242 ], [ %211, %237 ], [ %253, %329 ]
  %335 = add i64 %333, -1
  %336 = and i64 %333, 7
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %349, label %338

338:                                              ; preds = %331, %338
  %339 = phi i16* [ %345, %338 ], [ %332, %331 ]
  %340 = phi i64 [ %344, %338 ], [ %333, %331 ]
  %341 = phi i16* [ %346, %338 ], [ %334, %331 ]
  %342 = phi i64 [ %347, %338 ], [ %336, %331 ]
  %343 = load i16, i16* %341, align 2
  store i16 %343, i16* %339, align 2
  %344 = add i64 %340, -1
  %345 = getelementptr inbounds i16, i16* %339, i64 1
  %346 = getelementptr inbounds i16, i16* %341, i64 1
  %347 = add i64 %342, -1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %338, !llvm.loop !60

349:                                              ; preds = %338, %331
  %350 = phi i16* [ %332, %331 ], [ %345, %338 ]
  %351 = phi i64 [ %333, %331 ], [ %344, %338 ]
  %352 = phi i16* [ %334, %331 ], [ %346, %338 ]
  %353 = icmp ult i64 %335, 7
  br i1 %353, label %384, label %354

354:                                              ; preds = %349, %354
  %355 = phi i16* [ %381, %354 ], [ %350, %349 ]
  %356 = phi i64 [ %380, %354 ], [ %351, %349 ]
  %357 = phi i16* [ %382, %354 ], [ %352, %349 ]
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %355, align 2
  %359 = getelementptr inbounds i16, i16* %355, i64 1
  %360 = getelementptr inbounds i16, i16* %357, i64 1
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %355, i64 2
  %363 = getelementptr inbounds i16, i16* %357, i64 2
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %355, i64 3
  %366 = getelementptr inbounds i16, i16* %357, i64 3
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %355, i64 4
  %369 = getelementptr inbounds i16, i16* %357, i64 4
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %355, i64 5
  %372 = getelementptr inbounds i16, i16* %357, i64 5
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = getelementptr inbounds i16, i16* %355, i64 6
  %375 = getelementptr inbounds i16, i16* %357, i64 6
  %376 = load i16, i16* %375, align 2
  store i16 %376, i16* %374, align 2
  %377 = getelementptr inbounds i16, i16* %355, i64 7
  %378 = getelementptr inbounds i16, i16* %357, i64 7
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = add i64 %356, -8
  %381 = getelementptr inbounds i16, i16* %355, i64 8
  %382 = getelementptr inbounds i16, i16* %357, i64 8
  %383 = icmp eq i64 %380, 0
  br i1 %383, label %384, label %354, !llvm.loop !61

384:                                              ; preds = %349, %354, %329
  %385 = load i8, i8* %200, align 1
  %386 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 0, i32 1
  %387 = load i64, i64* %191, align 8, !noalias !50
  store i64 %387, i64* %386, align 8, !alias.scope !50
  %388 = getelementptr inbounds %"struct.std::__1::pair.81", %"struct.std::__1::pair.81"* %0, i64 0, i32 1
  %389 = bitcast %"class.v8_inspector::protocol::Value"** %388 to i64*
  store i64 %198, i64* %389, align 8, !alias.scope !50
  %390 = icmp slt i8 %385, 0
  br i1 %390, label %391, label %394

391:                                              ; preds = %384
  %392 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %393 = load i8*, i8** %392, align 8
  call void @_ZdlPv(i8* %393) #16
  br label %394

394:                                              ; preds = %203, %384, %391
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12v8_inspector8protocol15DictionaryValue15booleanPropertyERKNS_8String16Eb(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 6
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.v8_inspector::protocol::Value"**
  %12 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.v8_inspector::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.v8_inspector::protocol::Value"* %12 to i1 (%"class.v8_inspector::protocol::Value"*, i8*)***
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, i8*)**, i1 (%"class.v8_inspector::protocol::Value"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, i8*)*, i1 (%"class.v8_inspector::protocol::Value"*, i8*)** %16, i64 3
  %18 = load i1 (%"class.v8_inspector::protocol::Value"*, i8*)*, i1 (%"class.v8_inspector::protocol::Value"*, i8*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.v8_inspector::protocol::Value"* nonnull %12, i8* nonnull %4) #15
  %20 = load i8, i8* %4, align 1, !range !2
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi i8 [ %5, %3 ], [ %5, %9 ], [ %20, %14 ]
  %23 = icmp ne i8 %22, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12v8_inspector8protocol15DictionaryValue15integerPropertyERKNS_8String16Ei(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #15
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 6
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.v8_inspector::protocol::Value"**
  %12 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.v8_inspector::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.v8_inspector::protocol::Value"* %12 to i1 (%"class.v8_inspector::protocol::Value"*, i32*)***
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, i32*)**, i1 (%"class.v8_inspector::protocol::Value"*, i32*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, i32*)*, i1 (%"class.v8_inspector::protocol::Value"*, i32*)** %16, i64 5
  %18 = load i1 (%"class.v8_inspector::protocol::Value"*, i32*)*, i1 (%"class.v8_inspector::protocol::Value"*, i32*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.v8_inspector::protocol::Value"* nonnull %12, i32* nonnull %4) #15
  %20 = load i32, i32* %4, align 4
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi i32 [ %2, %3 ], [ %2, %9 ], [ %20, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #15
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK12v8_inspector8protocol15DictionaryValue14doublePropertyERKNS_8String16Ed(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32), double) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  store double %2, double* %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 6
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.v8_inspector::protocol::Value"**
  %12 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.v8_inspector::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.v8_inspector::protocol::Value"* %12 to i1 (%"class.v8_inspector::protocol::Value"*, double*)***
  %16 = load i1 (%"class.v8_inspector::protocol::Value"*, double*)**, i1 (%"class.v8_inspector::protocol::Value"*, double*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.v8_inspector::protocol::Value"*, double*)*, i1 (%"class.v8_inspector::protocol::Value"*, double*)** %16, i64 4
  %18 = load i1 (%"class.v8_inspector::protocol::Value"*, double*)*, i1 (%"class.v8_inspector::protocol::Value"*, double*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.v8_inspector::protocol::Value"* nonnull %12, double* nonnull %4) #15
  %20 = load double, double* %4, align 8
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi double [ %2, %3 ], [ %2, %9 ], [ %20, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret double %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValue6removeERKNS_8String16E(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.133", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::unique_ptr.133"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.133"* nonnull sret %3, %"class.std::__1::__hash_table"* %4, %"struct.std::__1::__hash_node_base"* nonnull %5) #15
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %9, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node"* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %10, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %10, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %18, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %18, align 8
  %20 = icmp eq %"class.v8_inspector::protocol::Value"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.v8_inspector::protocol::Value"* %19 to void (%"class.v8_inspector::protocol::Value"*)***
  %23 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %23, i64 2
  %25 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %24, align 8
  call void %25(%"class.v8_inspector::protocol::Value"* nonnull %19) #15
  br label %26

26:                                               ; preds = %21, %16
  %27 = bitcast %"struct.std::__1::pair"* %17 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = bitcast %"struct.std::__1::pair"* %17 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %31, %26, %12
  %35 = bitcast %"struct.std::__1::__hash_node"* %10 to i8*
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %34, %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  br label %37

37:                                               ; preds = %2, %36
  %38 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %38, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %41 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %40, align 8
  %42 = call %"class.v8_inspector::String16"* @_ZNSt3__16removeINS_11__wrap_iterIPN12v8_inspector8String16EEES3_EET_S6_S6_RKT0_(%"class.v8_inspector::String16"* %39, %"class.v8_inspector::String16"* %41, %"class.v8_inspector::String16"* dereferenceable(32) %1)
  %43 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %40, align 8
  %44 = icmp eq %"class.v8_inspector::String16"* %42, %43
  br i1 %44, label %58, label %45

45:                                               ; preds = %37, %55
  %46 = phi %"class.v8_inspector::String16"* [ %47, %55 ], [ %43, %37 ]
  %47 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %46, i64 -1
  %48 = bitcast %"class.v8_inspector::String16"* %47 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = bitcast %"class.v8_inspector::String16"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #16
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.v8_inspector::String16"* %47, %42
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  store %"class.v8_inspector::String16"* %42, %"class.v8_inspector::String16"** %40, align 8
  br label %58

58:                                               ; preds = %37, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8_inspector::String16"* @_ZNSt3__16removeINS_11__wrap_iterIPN12v8_inspector8String16EEES3_EET_S6_S6_RKT0_(%"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %4 = icmp eq %"class.v8_inspector::String16"* %0, %1
  br i1 %4, label %66, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %17 = select i1 %9, i16* %15, i16* %16
  %18 = icmp eq i64 %13, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %5, %30
  %20 = phi %"class.v8_inspector::String16"* [ %31, %30 ], [ %0, %5 ]
  %21 = bitcast %"class.v8_inspector::String16"* %20 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %66, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %20, i64 1
  %32 = icmp eq %"class.v8_inspector::String16"* %31, %1
  br i1 %32, label %64, label %19

33:                                               ; preds = %5, %61
  %34 = phi %"class.v8_inspector::String16"* [ %62, %61 ], [ %0, %5 ]
  %35 = bitcast %"class.v8_inspector::String16"* %34 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp eq i64 %42, %13
  br i1 %43, label %44, label %61

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = bitcast %"class.v8_inspector::String16"* %34 to i16*
  %48 = select i1 %38, i16* %46, i16* %47
  br label %49

49:                                               ; preds = %56, %44
  %50 = phi i64 [ %57, %56 ], [ %13, %44 ]
  %51 = phi i16* [ %59, %56 ], [ %17, %44 ]
  %52 = phi i16* [ %58, %56 ], [ %48, %44 ]
  %53 = load i16, i16* %52, align 2
  %54 = load i16, i16* %51, align 2
  %55 = icmp eq i16 %54, %53
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = add i64 %50, -1
  %58 = getelementptr inbounds i16, i16* %52, i64 1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %66, label %49

61:                                               ; preds = %49, %33
  %62 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 1
  %63 = icmp eq %"class.v8_inspector::String16"* %62, %1
  br i1 %63, label %64, label %33

64:                                               ; preds = %61, %30
  %65 = ptrtoint %"class.v8_inspector::String16"* %1 to i64
  br label %140

66:                                               ; preds = %56, %19, %3
  %67 = phi %"class.v8_inspector::String16"* [ %0, %3 ], [ %20, %19 ], [ %34, %56 ]
  %68 = ptrtoint %"class.v8_inspector::String16"* %67 to i64
  %69 = icmp eq %"class.v8_inspector::String16"* %67, %1
  br i1 %69, label %140, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %67, i64 1
  %72 = icmp eq %"class.v8_inspector::String16"* %71, %1
  br i1 %72, label %140, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  br label %79

79:                                               ; preds = %73, %136
  %80 = phi %"class.v8_inspector::String16"* [ %71, %73 ], [ %138, %136 ]
  %81 = phi %"class.v8_inspector::String16"* [ %67, %73 ], [ %80, %136 ]
  %82 = phi i64 [ %68, %73 ], [ %137, %136 ]
  %83 = bitcast %"class.v8_inspector::String16"* %80 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %81, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = load i8, i8* %75, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i64, i64* %76, align 8
  %94 = zext i8 %91 to i64
  %95 = select i1 %92, i64 %93, i64 %94
  %96 = icmp eq i64 %90, %95
  br i1 %96, label %97, label %118

97:                                               ; preds = %79
  %98 = icmp eq i64 %90, 0
  br i1 %98, label %136, label %99

99:                                               ; preds = %97
  %100 = load i16*, i16** %77, align 8
  %101 = select i1 %92, i16* %100, i16* %78
  %102 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i16*, i16** %102, align 8
  %104 = bitcast %"class.v8_inspector::String16"* %80 to i16*
  %105 = select i1 %86, i16* %103, i16* %104
  br label %106

106:                                              ; preds = %113, %99
  %107 = phi i64 [ %114, %113 ], [ %90, %99 ]
  %108 = phi i16* [ %116, %113 ], [ %101, %99 ]
  %109 = phi i16* [ %115, %113 ], [ %105, %99 ]
  %110 = load i16, i16* %109, align 2
  %111 = load i16, i16* %108, align 2
  %112 = icmp eq i16 %111, %110
  br i1 %112, label %113, label %118

113:                                              ; preds = %106
  %114 = add i64 %107, -1
  %115 = getelementptr inbounds i16, i16* %109, i64 1
  %116 = getelementptr inbounds i16, i16* %108, i64 1
  %117 = icmp eq i64 %114, 0
  br i1 %117, label %136, label %106

118:                                              ; preds = %106, %79
  %119 = inttoptr i64 %82 to %"class.v8_inspector::String16"*
  %120 = inttoptr i64 %82 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %120, i64 0, i32 1, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = inttoptr i64 %82 to i8**
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #16
  br label %127

127:                                              ; preds = %118, %124
  %128 = inttoptr i64 %82 to i8*
  %129 = bitcast %"class.v8_inspector::String16"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #15
  store i8 0, i8* %84, align 1
  %130 = bitcast %"class.v8_inspector::String16"* %80 to i16*
  store i16 0, i16* %130, align 2
  %131 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %81, i64 1, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %119, i64 0, i32 1
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %119, i64 1
  %135 = ptrtoint %"class.v8_inspector::String16"* %134 to i64
  br label %136

136:                                              ; preds = %113, %97, %127
  %137 = phi i64 [ %135, %127 ], [ %82, %97 ], [ %82, %113 ]
  %138 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %80, i64 1
  %139 = icmp eq %"class.v8_inspector::String16"* %138, %1
  br i1 %139, label %140, label %79

140:                                              ; preds = %136, %70, %66, %64
  %141 = phi i64 [ %68, %66 ], [ %65, %64 ], [ %68, %70 ], [ %137, %136 ]
  %142 = inttoptr i64 %141 to %"class.v8_inspector::String16"*
  ret %"class.v8_inspector::String16"* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol15DictionaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_crdtp::cbor::EnvelopeEncoder", align 8
  %4 = bitcast %"class.v8_crdtp::cbor::EnvelopeEncoder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.v8_crdtp::cbor::EnvelopeEncoder", %"class.v8_crdtp::cbor::EnvelopeEncoder"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  call void @_ZN8v8_crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.43"* %1) #15
  %6 = call zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() #15
  %7 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  %12 = ptrtoint i8* %10 to i64
  br i1 %11, label %13, label %17

13:                                               ; preds = %2
  store i8 %6, i8* %8, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8** %7 to i64*
  store i64 %15, i64* %16, align 8
  br label %62

17:                                               ; preds = %2
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast i8** %7 to i64*
  %20 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, 1
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #17
  unreachable

27:                                               ; preds = %17
  %28 = bitcast i8** %9 to i64*
  %29 = sub i64 %12, %21
  %30 = icmp ult i64 %29, 4611686018427387903
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = shl i64 %29, 1
  %33 = icmp ult i64 %32, %23
  %34 = select i1 %33, i64 %23, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %27
  %37 = phi i64 [ %34, %31 ], [ 9223372036854775807, %27 ]
  %38 = call i8* @_Znwm(i64 %37) #16
  br label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %37, %36 ], [ 0, %31 ]
  %41 = phi i8* [ %38, %36 ], [ null, %31 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %22
  %43 = getelementptr inbounds i8, i8* %41, i64 %40
  %44 = ptrtoint i8* %43 to i64
  store i8 %6, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %19, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %42, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #15
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %39
  %59 = phi i8* [ %48, %39 ], [ %57, %56 ]
  store i64 %54, i64* %20, align 8
  store i64 %46, i64* %19, align 8
  store i64 %44, i64* %28, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZdlPv(i8* nonnull %59) #16
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %65 = bitcast %"class.v8_inspector::String16"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.18"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  br label %129

72:                                               ; preds = %152, %62
  %73 = call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeStopEv() #15
  %74 = load i8*, i8** %7, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ult i8* %74, %75
  %77 = ptrtoint i8* %75 to i64
  br i1 %76, label %78, label %82

78:                                               ; preds = %72
  store i8 %73, i8* %74, align 1
  %79 = getelementptr inbounds i8, i8* %74, i64 1
  %80 = ptrtoint i8* %79 to i64
  %81 = bitcast i8** %7 to i64*
  store i64 %80, i64* %81, align 8
  br label %127

82:                                               ; preds = %72
  %83 = ptrtoint i8* %74 to i64
  %84 = bitcast i8** %7 to i64*
  %85 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %83, %86
  %88 = add i64 %87, 1
  %89 = icmp slt i64 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #17
  unreachable

92:                                               ; preds = %82
  %93 = bitcast i8** %9 to i64*
  %94 = sub i64 %77, %86
  %95 = icmp ult i64 %94, 4611686018427387903
  br i1 %95, label %96, label %101

96:                                               ; preds = %92
  %97 = shl i64 %94, 1
  %98 = icmp ult i64 %97, %88
  %99 = select i1 %98, i64 %88, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %96, %92
  %102 = phi i64 [ %99, %96 ], [ 9223372036854775807, %92 ]
  %103 = call i8* @_Znwm(i64 %102) #16
  br label %104

104:                                              ; preds = %101, %96
  %105 = phi i64 [ %102, %101 ], [ 0, %96 ]
  %106 = phi i8* [ %103, %101 ], [ null, %96 ]
  %107 = getelementptr inbounds i8, i8* %106, i64 %87
  %108 = getelementptr inbounds i8, i8* %106, i64 %105
  %109 = ptrtoint i8* %108 to i64
  store i8 %73, i8* %107, align 1
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  %111 = ptrtoint i8* %110 to i64
  %112 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = load i64, i64* %84, align 8
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  %117 = sub i64 0, %116
  %118 = getelementptr inbounds i8, i8* %107, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = icmp sgt i64 %116, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %113, i64 %116, i1 false) #15
  %122 = load i8*, i8** %112, align 8
  br label %123

123:                                              ; preds = %121, %104
  %124 = phi i8* [ %113, %104 ], [ %122, %121 ]
  store i64 %119, i64* %85, align 8
  store i64 %111, i64* %84, align 8
  store i64 %109, i64* %93, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @_ZdlPv(i8* nonnull %124) #16
  br label %127

127:                                              ; preds = %78, %123, %126
  %128 = call zeroext i1 @_ZN8v8_crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.43"* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void

129:                                              ; preds = %70, %152
  %130 = phi i64 [ %68, %70 ], [ %161, %152 ]
  %131 = phi i64 [ 0, %70 ], [ %159, %152 ]
  %132 = inttoptr i64 %130 to %"class.v8_inspector::String16"*
  %133 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %132, i64 %131
  %134 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %71, %"class.v8_inspector::String16"* dereferenceable(32) %133) #15
  %135 = bitcast %"class.v8_inspector::String16"* %133 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %132, i64 %131, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %137 to i64
  %142 = select i1 %138, i64 %140, i64 %141
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %129
  call void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* null, i64 0, %"class.std::__1::vector.43"* %1) #15
  br label %152

145:                                              ; preds = %129
  %146 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i16*, i16** %146, align 8
  %148 = bitcast %"class.v8_inspector::String16"* %133 to i16*
  %149 = select i1 %138, i16* %147, i16* %148
  %150 = icmp eq i16* %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %145
  call void @_ZN8v8_crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16* nonnull %149, i64 %142, %"class.std::__1::vector.43"* %1) #15
  br label %152

152:                                              ; preds = %144, %145, %151
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 6
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %153 to %"class.v8_inspector::protocol::Value"**
  %155 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %154, align 8
  %156 = bitcast %"class.v8_inspector::protocol::Value"* %155 to void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)***
  %157 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*** %156, align 8
  %158 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)** %157, align 8
  call void %158(%"class.v8_inspector::protocol::Value"* %155, %"class.std::__1::vector.43"* %1) #15
  %159 = add nuw i64 %131, 1
  %160 = load i64, i64* %65, align 8
  %161 = load i64, i64* %67, align 8
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 5
  %164 = icmp ult i64 %159, %163
  br i1 %164, label %129, label %72
}

declare void @_ZN8v8_crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector.43"*) local_unnamed_addr #2

declare zeroext i8 @_ZN8v8_crdtp4cbor30EncodeIndefiniteLengthMapStartEv() local_unnamed_addr #2

declare zeroext i8 @_ZN8v8_crdtp4cbor10EncodeStopEv() local_unnamed_addr #2

declare zeroext i1 @_ZN8v8_crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector.43"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol15DictionaryValue5cloneEv(%"class.v8_inspector::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8_inspector::String16", align 8
  %3 = tail call i8* @_Znwm(i64 80) #16
  %4 = bitcast i8* %3 to %"class.v8_inspector::protocol::DictionaryValue"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 6, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = bitcast i8* %9 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #15
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast %"class.v8_inspector::String16"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.18"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.v8_inspector::String16"* %2 to i8*
  %21 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %22 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %25 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 1
  %28 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  br label %31

29:                                               ; preds = %228, %1
  %30 = bitcast i8* %3 to %"class.v8_inspector::protocol::Value"*
  ret %"class.v8_inspector::protocol::Value"* %30

31:                                               ; preds = %19, %228
  %32 = phi i64 [ %17, %19 ], [ %231, %228 ]
  %33 = phi i64 [ 0, %19 ], [ %229, %228 ]
  %34 = inttoptr i64 %32 to %"class.v8_inspector::String16"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %35 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 %33
  %36 = bitcast %"class.v8_inspector::String16"* %35 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.v8_inspector::String16"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %41, i64 24, i1 false) #15
  br label %212

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 %33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, 11
  br i1 %47, label %48, label %50

48:                                               ; preds = %42
  %49 = trunc i64 %46 to i8
  store i8 %49, i8* %26, align 1
  br label %64

50:                                               ; preds = %42
  %51 = icmp ugt i64 %46, 9223372036854775791
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.v8_inspector::String16"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %53) #17
  unreachable

54:                                               ; preds = %50
  %55 = add nuw nsw i64 %46, 8
  %56 = and i64 %55, -8
  %57 = icmp slt i64 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  call void @abort() #17
  unreachable

59:                                               ; preds = %54
  %60 = shl i64 %56, 1
  %61 = call i8* @_Znwm(i64 %60) #16
  %62 = bitcast i8* %61 to i16*
  store i8* %61, i8** %21, align 8
  %63 = or i64 %56, -9223372036854775808
  store i64 %63, i64* %22, align 8
  store i64 %46, i64* %23, align 8
  br label %64

64:                                               ; preds = %59, %48
  %65 = phi i16* [ %24, %48 ], [ %62, %59 ]
  %66 = add nuw nsw i64 %46, 1
  %67 = add i64 %46, 1
  %68 = icmp ult i64 %67, 16
  br i1 %68, label %159, label %69

69:                                               ; preds = %64
  %70 = getelementptr i16, i16* %65, i64 1
  %71 = getelementptr i16, i16* %70, i64 %46
  %72 = getelementptr i16, i16* %44, i64 1
  %73 = getelementptr i16, i16* %72, i64 %46
  %74 = icmp ult i16* %65, %73
  %75 = icmp ult i16* %44, %71
  %76 = and i1 %74, %75
  br i1 %76, label %159, label %77

77:                                               ; preds = %69
  %78 = and i64 %67, -16
  %79 = getelementptr i16, i16* %65, i64 %78
  %80 = sub i64 %66, %78
  %81 = getelementptr i16, i16* %44, i64 %78
  %82 = add i64 %78, -16
  %83 = lshr exact i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp ult i64 %82, 48
  br i1 %86, label %138, label %87

87:                                               ; preds = %77
  %88 = sub nsw i64 %84, %85
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi i64 [ 0, %87 ], [ %135, %89 ]
  %91 = phi i64 [ %88, %87 ], [ %136, %89 ]
  %92 = getelementptr i16, i16* %65, i64 %90
  %93 = getelementptr i16, i16* %44, i64 %90
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !62
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !62
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !65, !noalias !62
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !65, !noalias !62
  %102 = or i64 %90, 16
  %103 = getelementptr i16, i16* %65, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !62
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !62
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !65, !noalias !62
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !65, !noalias !62
  %113 = or i64 %90, 32
  %114 = getelementptr i16, i16* %65, i64 %113
  %115 = getelementptr i16, i16* %44, i64 %113
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !62
  %118 = getelementptr i16, i16* %115, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !62
  %121 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !65, !noalias !62
  %122 = getelementptr i16, i16* %114, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !65, !noalias !62
  %124 = or i64 %90, 48
  %125 = getelementptr i16, i16* %65, i64 %124
  %126 = getelementptr i16, i16* %44, i64 %124
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !62
  %129 = getelementptr i16, i16* %126, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !62
  %132 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !65, !noalias !62
  %133 = getelementptr i16, i16* %125, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !65, !noalias !62
  %135 = add i64 %90, 64
  %136 = add i64 %91, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %89, !llvm.loop !67

138:                                              ; preds = %89, %77
  %139 = phi i64 [ 0, %77 ], [ %135, %89 ]
  %140 = icmp eq i64 %85, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %154, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %155, %141 ], [ %85, %138 ]
  %144 = getelementptr i16, i16* %65, i64 %142
  %145 = getelementptr i16, i16* %44, i64 %142
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !62
  %148 = getelementptr i16, i16* %145, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !62
  %151 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !65, !noalias !62
  %152 = getelementptr i16, i16* %144, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !65, !noalias !62
  %154 = add i64 %142, 16
  %155 = add i64 %143, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %141, !llvm.loop !68

157:                                              ; preds = %141, %138
  %158 = icmp eq i64 %67, %78
  br i1 %158, label %212, label %159

159:                                              ; preds = %157, %69, %64
  %160 = phi i16* [ %65, %69 ], [ %65, %64 ], [ %79, %157 ]
  %161 = phi i64 [ %66, %69 ], [ %66, %64 ], [ %80, %157 ]
  %162 = phi i16* [ %44, %69 ], [ %44, %64 ], [ %81, %157 ]
  %163 = add i64 %161, -1
  %164 = and i64 %161, 7
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %159, %166
  %167 = phi i16* [ %173, %166 ], [ %160, %159 ]
  %168 = phi i64 [ %172, %166 ], [ %161, %159 ]
  %169 = phi i16* [ %174, %166 ], [ %162, %159 ]
  %170 = phi i64 [ %175, %166 ], [ %164, %159 ]
  %171 = load i16, i16* %169, align 2
  store i16 %171, i16* %167, align 2
  %172 = add i64 %168, -1
  %173 = getelementptr inbounds i16, i16* %167, i64 1
  %174 = getelementptr inbounds i16, i16* %169, i64 1
  %175 = add i64 %170, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %166, !llvm.loop !69

177:                                              ; preds = %166, %159
  %178 = phi i16* [ %160, %159 ], [ %173, %166 ]
  %179 = phi i64 [ %161, %159 ], [ %172, %166 ]
  %180 = phi i16* [ %162, %159 ], [ %174, %166 ]
  %181 = icmp ult i64 %163, 7
  br i1 %181, label %212, label %182

182:                                              ; preds = %177, %182
  %183 = phi i16* [ %209, %182 ], [ %178, %177 ]
  %184 = phi i64 [ %208, %182 ], [ %179, %177 ]
  %185 = phi i16* [ %210, %182 ], [ %180, %177 ]
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %183, align 2
  %187 = getelementptr inbounds i16, i16* %183, i64 1
  %188 = getelementptr inbounds i16, i16* %185, i64 1
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %183, i64 2
  %191 = getelementptr inbounds i16, i16* %185, i64 2
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %183, i64 3
  %194 = getelementptr inbounds i16, i16* %185, i64 3
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %183, i64 4
  %197 = getelementptr inbounds i16, i16* %185, i64 4
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %183, i64 5
  %200 = getelementptr inbounds i16, i16* %185, i64 5
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %183, i64 6
  %203 = getelementptr inbounds i16, i16* %185, i64 6
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %183, i64 7
  %206 = getelementptr inbounds i16, i16* %185, i64 7
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = add i64 %184, -8
  %209 = getelementptr inbounds i16, i16* %183, i64 8
  %210 = getelementptr inbounds i16, i16* %185, i64 8
  %211 = icmp eq i64 %208, 0
  br i1 %211, label %212, label %182, !llvm.loop !70

212:                                              ; preds = %177, %182, %157, %40
  %213 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %34, i64 %33, i32 1
  %214 = load i64, i64* %213, align 8
  store i64 %214, i64* %27, align 8
  %215 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"* %28, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %2) #15
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %215, i64 6
  %217 = bitcast %"struct.std::__1::__hash_node_base"* %216 to %"class.v8_inspector::protocol::Value"**
  %218 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %217, align 8
  %219 = bitcast %"class.v8_inspector::protocol::Value"* %218 to %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)***
  %220 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)**, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*** %219, align 8
  %221 = getelementptr inbounds %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)** %220, i64 8
  %222 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)** %221, align 8
  %223 = call %"class.v8_inspector::protocol::Value"* %222(%"class.v8_inspector::protocol::Value"* %218) #15
  call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %4, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %2, %"class.v8_inspector::protocol::Value"* %223)
  %224 = load i8, i8* %26, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %212
  %227 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %227) #16
  br label %228

228:                                              ; preds = %212, %226
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  %229 = add nuw i64 %33, 1
  %230 = load i64, i64* %14, align 8
  %231 = load i64, i64* %16, align 8
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 5
  %234 = icmp ult i64 %229, %233
  br i1 %234, label %31, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol15DictionaryValueC2Ev(%"class.v8_inspector::protocol::DictionaryValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 1
  store i32 6, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.15"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::DictionaryValue", %"class.v8_inspector::protocol::DictionaryValue"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector.18"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol9ListValueD2Ev(%"class.v8_inspector::protocol::ListValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %15, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %15, align 8
  %17 = icmp eq %"class.v8_inspector::protocol::Value"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8_inspector::protocol::Value"* %16 to void (%"class.v8_inspector::protocol::Value"*)***
  %20 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %20, i64 2
  %22 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %21, align 8
  tail call void %22(%"class.v8_inspector::protocol::Value"* nonnull %16) #15
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.31"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol9ListValueD0Ev(%"class.v8_inspector::protocol::ListValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %15, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %15, align 8
  %17 = icmp eq %"class.v8_inspector::protocol::Value"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8_inspector::protocol::Value"* %16 to void (%"class.v8_inspector::protocol::Value"*)***
  %20 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %20, i64 2
  %22 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %21, align 8
  tail call void %22(%"class.v8_inspector::protocol::Value"* nonnull %16) #15
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.31"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.v8_inspector::protocol::ListValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol9ListValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::ListValue"* nocapture readonly, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_crdtp::cbor::EnvelopeEncoder", align 8
  %4 = bitcast %"class.v8_crdtp::cbor::EnvelopeEncoder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.v8_crdtp::cbor::EnvelopeEncoder", %"class.v8_crdtp::cbor::EnvelopeEncoder"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  call void @_ZN8v8_crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.43"* %1) #15
  %6 = call zeroext i8 @_ZN8v8_crdtp4cbor32EncodeIndefiniteLengthArrayStartEv() #15
  %7 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  %12 = ptrtoint i8* %10 to i64
  br i1 %11, label %13, label %17

13:                                               ; preds = %2
  store i8 %6, i8* %8, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8** %7 to i64*
  store i64 %15, i64* %16, align 8
  br label %62

17:                                               ; preds = %2
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast i8** %7 to i64*
  %20 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, 1
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #17
  unreachable

27:                                               ; preds = %17
  %28 = bitcast i8** %9 to i64*
  %29 = sub i64 %12, %21
  %30 = icmp ult i64 %29, 4611686018427387903
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = shl i64 %29, 1
  %33 = icmp ult i64 %32, %23
  %34 = select i1 %33, i64 %23, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %27
  %37 = phi i64 [ %34, %31 ], [ 9223372036854775807, %27 ]
  %38 = call i8* @_Znwm(i64 %37) #16
  br label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %37, %36 ], [ 0, %31 ]
  %41 = phi i8* [ %38, %36 ], [ null, %31 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %22
  %43 = getelementptr inbounds i8, i8* %41, i64 %40
  %44 = ptrtoint i8* %43 to i64
  store i8 %6, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %19, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %42, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #15
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %39
  %59 = phi i8* [ %48, %39 ], [ %57, %56 ]
  store i64 %54, i64* %20, align 8
  store i64 %46, i64* %19, align 8
  store i64 %44, i64* %28, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZdlPv(i8* nonnull %59) #16
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = bitcast %"class.std::__1::unique_ptr"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.31"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %70, label %127

70:                                               ; preds = %127, %62
  %71 = call zeroext i8 @_ZN8v8_crdtp4cbor10EncodeStopEv() #15
  %72 = load i8*, i8** %7, align 8
  %73 = load i8*, i8** %9, align 8
  %74 = icmp ult i8* %72, %73
  %75 = ptrtoint i8* %73 to i64
  br i1 %74, label %76, label %80

76:                                               ; preds = %70
  store i8 %71, i8* %72, align 1
  %77 = getelementptr inbounds i8, i8* %72, i64 1
  %78 = ptrtoint i8* %77 to i64
  %79 = bitcast i8** %7 to i64*
  store i64 %78, i64* %79, align 8
  br label %125

80:                                               ; preds = %70
  %81 = ptrtoint i8* %72 to i64
  %82 = bitcast i8** %7 to i64*
  %83 = bitcast %"class.std::__1::vector.43"* %1 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %81, %84
  %86 = add i64 %85, 1
  %87 = icmp slt i64 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %80
  %89 = bitcast %"class.std::__1::vector.43"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #17
  unreachable

90:                                               ; preds = %80
  %91 = bitcast i8** %9 to i64*
  %92 = sub i64 %75, %84
  %93 = icmp ult i64 %92, 4611686018427387903
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = shl i64 %92, 1
  %96 = icmp ult i64 %95, %86
  %97 = select i1 %96, i64 %86, i64 %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %90
  %100 = phi i64 [ %97, %94 ], [ 9223372036854775807, %90 ]
  %101 = call i8* @_Znwm(i64 %100) #16
  br label %102

102:                                              ; preds = %99, %94
  %103 = phi i64 [ %100, %99 ], [ 0, %94 ]
  %104 = phi i8* [ %101, %99 ], [ null, %94 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %85
  %106 = getelementptr inbounds i8, i8* %104, i64 %103
  %107 = ptrtoint i8* %106 to i64
  store i8 %71, i8* %105, align 1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = ptrtoint i8* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %1, i64 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = load i64, i64* %82, align 8
  %113 = ptrtoint i8* %111 to i64
  %114 = sub i64 %112, %113
  %115 = sub i64 0, %114
  %116 = getelementptr inbounds i8, i8* %105, i64 %115
  %117 = ptrtoint i8* %116 to i64
  %118 = icmp sgt i64 %114, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %111, i64 %114, i1 false) #15
  %120 = load i8*, i8** %110, align 8
  br label %121

121:                                              ; preds = %119, %102
  %122 = phi i8* [ %111, %102 ], [ %120, %119 ]
  store i64 %117, i64* %83, align 8
  store i64 %109, i64* %82, align 8
  store i64 %107, i64* %91, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZdlPv(i8* nonnull %122) #16
  br label %125

125:                                              ; preds = %76, %121, %124
  %126 = call zeroext i1 @_ZN8v8_crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.43"* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void

127:                                              ; preds = %62, %127
  %128 = phi i64 [ %138, %127 ], [ %68, %62 ]
  %129 = phi i64 [ %136, %127 ], [ 0, %62 ]
  %130 = inttoptr i64 %128 to %"class.std::__1::unique_ptr"*
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 %129, i32 0, i32 0, i32 0
  %132 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %131, align 8
  %133 = bitcast %"class.v8_inspector::protocol::Value"* %132 to void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)***
  %134 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*** %133, align 8
  %135 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)** %134, align 8
  call void %135(%"class.v8_inspector::protocol::Value"* %132, %"class.std::__1::vector.43"* %1) #15
  %136 = add nuw i64 %129, 1
  %137 = load i64, i64* %65, align 8
  %138 = load i64, i64* %67, align 8
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %136, %140
  br i1 %141, label %127, label %70
}

declare zeroext i8 @_ZN8v8_crdtp4cbor32EncodeIndefiniteLengthArrayStartEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZNK12v8_inspector8protocol9ListValue5cloneEv(%"class.v8_inspector::protocol::ListValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call i8* @_Znwm(i64 40) #16
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 7, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #15
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to %"class.std::__1::unique_ptr"**
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  %19 = bitcast i8* %18 to %"class.std::__1::unique_ptr"**
  %20 = bitcast i8* %7 to %"class.std::__1::vector.31"*
  %21 = bitcast i8* %16 to i64*
  br label %24

22:                                               ; preds = %50, %1
  %23 = bitcast i8* %3 to %"class.v8_inspector::protocol::Value"*
  ret %"class.v8_inspector::protocol::Value"* %23

24:                                               ; preds = %13, %50
  %25 = phi %"class.std::__1::unique_ptr"* [ %9, %13 ], [ %51, %50 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %26, align 8
  %28 = bitcast %"class.v8_inspector::protocol::Value"* %27 to %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)***
  %29 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)**, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)** %29, i64 8
  %31 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::Value"*)** %30, align 8
  %32 = call %"class.v8_inspector::protocol::Value"* %31(%"class.v8_inspector::protocol::Value"* %27) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store %"class.v8_inspector::protocol::Value"* %32, %"class.v8_inspector::protocol::Value"** %15, align 8
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr"* %33, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %24
  %37 = ptrtoint %"class.v8_inspector::protocol::Value"* %32 to i64
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %15, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr"* %39 to i64
  store i64 %40, i64* %21, align 8
  br label %42

41:                                               ; preds = %24
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %20, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #15
  br label %42

42:                                               ; preds = %41, %36
  %43 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %15, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %15, align 8
  %44 = icmp eq %"class.v8_inspector::protocol::Value"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.v8_inspector::protocol::Value"* %43 to void (%"class.v8_inspector::protocol::Value"*)***
  %47 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %47, i64 2
  %49 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %48, align 8
  call void %49(%"class.v8_inspector::protocol::Value"* nonnull %43) #15
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr"* %51, %11
  br i1 %52, label %22, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::Value"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Value"* %1, %"class.v8_inspector::protocol::Value"** %4, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.v8_inspector::protocol::Value"* %1 to i64
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %4, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %4, align 8
  %20 = icmp eq %"class.v8_inspector::protocol::Value"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.v8_inspector::protocol::Value"* %19 to void (%"class.v8_inspector::protocol::Value"*)***
  %23 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %23, i64 2
  %25 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %24, align 8
  call void %25(%"class.v8_inspector::protocol::Value"* nonnull %19) #15
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol9ListValueC2Ev(%"class.v8_inspector::protocol::ListValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 0, i32 1
  store i32 7, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.31"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8_inspector::protocol::Value"* @_ZN12v8_inspector8protocol9ListValue2atEm(%"class.v8_inspector::protocol::ListValue"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %1, i32 0, i32 0, i32 0
  %6 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %5, align 8
  ret %"class.v8_inspector::protocol::Value"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Object"* @_ZN12v8_inspector8protocol6Object9fromValueEPNS0_5ValueEPN8v8_crdtp12ErrorSupportE(%"class.v8_inspector::protocol::Value"*, %"class.v8_crdtp::ErrorSupport"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.v8_inspector::protocol::Value"* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %9, label %8

8:                                                ; preds = %4, %2
  tail call void @_ZN8v8_crdtp12ErrorSupport8AddErrorEPKc(%"class.v8_crdtp::ErrorSupport"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #15
  br label %22

9:                                                ; preds = %4
  %10 = bitcast %"class.v8_inspector::protocol::Value"* %0 to %"class.v8_inspector::protocol::DictionaryValue"*
  %11 = bitcast %"class.v8_inspector::protocol::Value"* %0 to %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %12 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)**, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %12, i64 8
  %14 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %13, align 8
  %15 = tail call %"class.v8_inspector::protocol::Value"* %14(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %10) #15
  %16 = tail call i8* @_Znwm(i64 16) #16
  %17 = ptrtoint %"class.v8_inspector::protocol::Value"* %15 to i64
  %18 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = bitcast i8* %16 to %"class.v8_inspector::protocol::Object"*
  br label %22

22:                                               ; preds = %9, %8
  %23 = phi %"class.v8_inspector::protocol::Object"* [ null, %8 ], [ %21, %9 ]
  ret %"class.v8_inspector::protocol::Object"* %23
}

declare void @_ZN8v8_crdtp12ErrorSupport8AddErrorEPKc(%"class.v8_crdtp::ErrorSupport"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector8protocol6Object16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.v8_inspector::protocol::Object"* nocapture readonly, %"class.std::__1::vector.43"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  %5 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %4 to void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)***
  %6 = load void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)*** %5, align 8
  %7 = load void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::protocol::DictionaryValue"* %4, %"class.std::__1::vector.43"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::DictionaryValue"* @_ZNK12v8_inspector8protocol6Object7toValueEv(%"class.v8_inspector::protocol::Object"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %2, align 8
  %4 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %3 to %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %5 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)**, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %5, i64 8
  %7 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %6, align 8
  %8 = tail call %"class.v8_inspector::protocol::Value"* %7(%"class.v8_inspector::protocol::DictionaryValue"* %3) #15
  %9 = icmp eq %"class.v8_inspector::protocol::Value"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 6
  %14 = bitcast %"class.v8_inspector::protocol::Value"* %8 to %"class.v8_inspector::protocol::DictionaryValue"*
  %15 = select i1 %13, %"class.v8_inspector::protocol::DictionaryValue"* %14, %"class.v8_inspector::protocol::DictionaryValue"* null
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi %"class.v8_inspector::protocol::DictionaryValue"* [ %15, %10 ], [ null, %1 ]
  ret %"class.v8_inspector::protocol::DictionaryValue"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Object"* @_ZNK12v8_inspector8protocol6Object5cloneEv(%"class.v8_inspector::protocol::Object"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #16
  %3 = bitcast i8* %2 to %"class.v8_inspector::protocol::Object"*
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %4, align 8
  %6 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %5 to %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %7 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)**, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %7, i64 8
  %9 = load %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)*, %"class.v8_inspector::protocol::Value"* (%"class.v8_inspector::protocol::DictionaryValue"*)** %8, align 8
  %10 = tail call %"class.v8_inspector::protocol::Value"* %9(%"class.v8_inspector::protocol::DictionaryValue"* %5) #15
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 6
  %16 = ptrtoint %"class.v8_inspector::protocol::Value"* %10 to i64
  %17 = select i1 %15, i64 %16, i64 0
  br label %18

18:                                               ; preds = %1, %12
  %19 = phi i64 [ %17, %12 ], [ 0, %1 ]
  %20 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %19, i64* %22, align 8
  ret %"class.v8_inspector::protocol::Object"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol6ObjectC2ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE(%"class.v8_inspector::protocol::Object"* nocapture, %"class.v8_inspector::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8_inspector::protocol::DictionaryValue"* %1 to i64
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.69"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol6ObjectD2Ev(%"class.v8_inspector::protocol::Object"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  store %"class.v8_inspector::protocol::DictionaryValue"* null, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  %5 = icmp eq %"class.v8_inspector::protocol::DictionaryValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %4 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %8 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %8, i64 2
  %10 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %9, align 8
  tail call void %10(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector8protocol6ObjectD0Ev(%"class.v8_inspector::protocol::Object"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::Object", %"class.v8_inspector::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  store %"class.v8_inspector::protocol::DictionaryValue"* null, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  %5 = icmp eq %"class.v8_inspector::protocol::DictionaryValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %4 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %8 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %8, i64 2
  %10 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %9, align 8
  tail call void %10(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8_inspector::protocol::Object"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = getelementptr inbounds %"class.v8_crdtp::DeserializerState", %"class.v8_crdtp::DeserializerState"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  switch i32 %7, label %518 [
    i32 1, label %8
    i32 2, label %15
    i32 3, label %22
    i32 4, label %28
    i32 5, label %37
    i32 6, label %46
    i32 7, label %258
    i32 12, label %472
  ]

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 24) #16
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  store i8 1, i8* %13, align 8
  %14 = ptrtoint i8* %9 to i64
  br label %521

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 24) #16
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  store i8 0, i8* %20, align 8
  %21 = ptrtoint i8* %16 to i64
  br label %521

22:                                               ; preds = %2
  %23 = tail call i8* @_Znwm(i64 16) #16
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = ptrtoint i8* %23 to i64
  br label %521

28:                                               ; preds = %2
  %29 = tail call i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  %30 = tail call i8* @_Znwm(i64 24) #16
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 2, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %29, i32* %35, align 8
  %36 = ptrtoint i8* %30 to i64
  br label %521

37:                                               ; preds = %2
  %38 = tail call double @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  %39 = tail call i8* @_Znwm(i64 24) #16
  %40 = bitcast i8* %39 to i32 (...)***
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 3, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 16
  %44 = bitcast i8* %43 to double*
  store double %38, double* %44, align 8
  %45 = ptrtoint i8* %39 to i64
  br label %521

46:                                               ; preds = %2
  %47 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  %48 = extractvalue { i8*, i64 } %47, 0
  %49 = extractvalue { i8*, i64 } %47, 1
  %50 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #15
  call void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* nonnull sret %4, i8* %48, i64 %49) #15
  %51 = call i8* @_Znwm(i64 48) #16
  %52 = bitcast i8* %51 to i32 (...)***
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 4, i32* %54, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %55 = getelementptr inbounds i8, i8* %51, i64 16
  %56 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %50, i64 24, i1 false) #15
  %61 = getelementptr inbounds i8, i8* %51, i64 40
  %62 = bitcast i8* %61 to i64*
  %63 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %62, align 8
  %65 = ptrtoint i8* %51 to i64
  br label %256

66:                                               ; preds = %46
  %67 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast i16* %68 to i8*
  %70 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %71, 11
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = trunc i64 %71 to i8
  %75 = getelementptr inbounds i8, i8* %51, i64 39
  store i8 %74, i8* %75, align 1
  br label %94

76:                                               ; preds = %66
  %77 = icmp ugt i64 %71, 9223372036854775791
  br i1 %77, label %78, label %80

78:                                               ; preds = %76
  %79 = bitcast i8* %55 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %79) #17
  unreachable

80:                                               ; preds = %76
  %81 = add nuw nsw i64 %71, 8
  %82 = and i64 %81, -8
  %83 = icmp slt i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @abort() #17
  unreachable

85:                                               ; preds = %80
  %86 = shl i64 %82, 1
  %87 = call i8* @_Znwm(i64 %86) #16
  %88 = bitcast i8* %55 to i8**
  store i8* %87, i8** %88, align 8
  %89 = or i64 %82, -9223372036854775808
  %90 = getelementptr inbounds i8, i8* %51, i64 32
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %51, i64 24
  %93 = bitcast i8* %92 to i64*
  store i64 %71, i64* %93, align 8
  br label %94

94:                                               ; preds = %85, %73
  %95 = phi i8* [ %55, %73 ], [ %87, %85 ]
  %96 = bitcast i8* %95 to i16*
  %97 = add nuw nsw i64 %71, 1
  %98 = add i64 %71, 1
  %99 = icmp ult i64 %98, 16
  br i1 %99, label %192, label %100

100:                                              ; preds = %94
  %101 = shl i64 %71, 1
  %102 = add i64 %101, 2
  %103 = getelementptr i8, i8* %95, i64 %102
  %104 = add i64 %71, 1
  %105 = getelementptr i16, i16* %68, i64 %104
  %106 = bitcast i16* %105 to i8*
  %107 = icmp ult i8* %95, %106
  %108 = icmp ugt i8* %103, %69
  %109 = and i1 %107, %108
  br i1 %109, label %192, label %110

110:                                              ; preds = %100
  %111 = and i64 %98, -16
  %112 = getelementptr i16, i16* %96, i64 %111
  %113 = sub i64 %97, %111
  %114 = getelementptr i16, i16* %68, i64 %111
  %115 = add i64 %111, -16
  %116 = lshr exact i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp ult i64 %115, 48
  br i1 %119, label %171, label %120

120:                                              ; preds = %110
  %121 = sub nsw i64 %117, %118
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i64 [ 0, %120 ], [ %168, %122 ]
  %124 = phi i64 [ %121, %120 ], [ %169, %122 ]
  %125 = getelementptr i16, i16* %96, i64 %123
  %126 = getelementptr i16, i16* %68, i64 %123
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !71
  %129 = getelementptr i16, i16* %126, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !71
  %132 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !74, !noalias !71
  %133 = getelementptr i16, i16* %125, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !74, !noalias !71
  %135 = or i64 %123, 16
  %136 = getelementptr i16, i16* %96, i64 %135
  %137 = getelementptr i16, i16* %68, i64 %135
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !71
  %140 = getelementptr i16, i16* %137, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !71
  %143 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !74, !noalias !71
  %144 = getelementptr i16, i16* %136, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !74, !noalias !71
  %146 = or i64 %123, 32
  %147 = getelementptr i16, i16* %96, i64 %146
  %148 = getelementptr i16, i16* %68, i64 %146
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !71
  %151 = getelementptr i16, i16* %148, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !71
  %154 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !74, !noalias !71
  %155 = getelementptr i16, i16* %147, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !74, !noalias !71
  %157 = or i64 %123, 48
  %158 = getelementptr i16, i16* %96, i64 %157
  %159 = getelementptr i16, i16* %68, i64 %157
  %160 = bitcast i16* %159 to <8 x i16>*
  %161 = load <8 x i16>, <8 x i16>* %160, align 2, !alias.scope !71
  %162 = getelementptr i16, i16* %159, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !71
  %165 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %165, align 2, !alias.scope !74, !noalias !71
  %166 = getelementptr i16, i16* %158, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %167, align 2, !alias.scope !74, !noalias !71
  %168 = add i64 %123, 64
  %169 = add i64 %124, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %122, !llvm.loop !76

171:                                              ; preds = %122, %110
  %172 = phi i64 [ 0, %110 ], [ %168, %122 ]
  %173 = icmp eq i64 %118, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %171, %174
  %175 = phi i64 [ %187, %174 ], [ %172, %171 ]
  %176 = phi i64 [ %188, %174 ], [ %118, %171 ]
  %177 = getelementptr i16, i16* %96, i64 %175
  %178 = getelementptr i16, i16* %68, i64 %175
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !71
  %181 = getelementptr i16, i16* %178, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !71
  %184 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !74, !noalias !71
  %185 = getelementptr i16, i16* %177, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !74, !noalias !71
  %187 = add i64 %175, 16
  %188 = add i64 %176, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %174, !llvm.loop !77

190:                                              ; preds = %174, %171
  %191 = icmp eq i64 %98, %111
  br i1 %191, label %245, label %192

192:                                              ; preds = %190, %100, %94
  %193 = phi i16* [ %96, %100 ], [ %96, %94 ], [ %112, %190 ]
  %194 = phi i64 [ %97, %100 ], [ %97, %94 ], [ %113, %190 ]
  %195 = phi i16* [ %68, %100 ], [ %68, %94 ], [ %114, %190 ]
  %196 = add i64 %194, -1
  %197 = and i64 %194, 7
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %192, %199
  %200 = phi i16* [ %206, %199 ], [ %193, %192 ]
  %201 = phi i64 [ %205, %199 ], [ %194, %192 ]
  %202 = phi i16* [ %207, %199 ], [ %195, %192 ]
  %203 = phi i64 [ %208, %199 ], [ %197, %192 ]
  %204 = load i16, i16* %202, align 2
  store i16 %204, i16* %200, align 2
  %205 = add i64 %201, -1
  %206 = getelementptr inbounds i16, i16* %200, i64 1
  %207 = getelementptr inbounds i16, i16* %202, i64 1
  %208 = add i64 %203, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !78

210:                                              ; preds = %199, %192
  %211 = phi i16* [ %193, %192 ], [ %206, %199 ]
  %212 = phi i64 [ %194, %192 ], [ %205, %199 ]
  %213 = phi i16* [ %195, %192 ], [ %207, %199 ]
  %214 = icmp ult i64 %196, 7
  br i1 %214, label %245, label %215

215:                                              ; preds = %210, %215
  %216 = phi i16* [ %242, %215 ], [ %211, %210 ]
  %217 = phi i64 [ %241, %215 ], [ %212, %210 ]
  %218 = phi i16* [ %243, %215 ], [ %213, %210 ]
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %216, align 2
  %220 = getelementptr inbounds i16, i16* %216, i64 1
  %221 = getelementptr inbounds i16, i16* %218, i64 1
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %216, i64 2
  %224 = getelementptr inbounds i16, i16* %218, i64 2
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %216, i64 3
  %227 = getelementptr inbounds i16, i16* %218, i64 3
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %216, i64 4
  %230 = getelementptr inbounds i16, i16* %218, i64 4
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %216, i64 5
  %233 = getelementptr inbounds i16, i16* %218, i64 5
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %216, i64 6
  %236 = getelementptr inbounds i16, i16* %218, i64 6
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %216, i64 7
  %239 = getelementptr inbounds i16, i16* %218, i64 7
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = add i64 %217, -8
  %242 = getelementptr inbounds i16, i16* %216, i64 8
  %243 = getelementptr inbounds i16, i16* %218, i64 8
  %244 = icmp eq i64 %241, 0
  br i1 %244, label %245, label %215, !llvm.loop !79

245:                                              ; preds = %210, %215, %190
  %246 = load i8, i8* %57, align 1
  %247 = getelementptr inbounds i8, i8* %51, i64 40
  %248 = bitcast i8* %247 to i64*
  %249 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 1
  %250 = load i64, i64* %249, align 8
  store i64 %250, i64* %248, align 8
  %251 = ptrtoint i8* %51 to i64
  %252 = icmp slt i8 %246, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %245
  %254 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %255 = load i8*, i8** %254, align 8
  call void @_ZdlPv(i8* %255) #16
  br label %256

256:                                              ; preds = %253, %245, %60
  %257 = phi i64 [ %65, %60 ], [ %251, %245 ], [ %251, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #15
  br label %521

258:                                              ; preds = %2
  %259 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  %260 = extractvalue { i8*, i64 } %259, 0
  %261 = extractvalue { i8*, i64 } %259, 1
  %262 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %262) #15
  %263 = bitcast i8* %260 to i16*
  %264 = lshr i64 %261, 1
  call void @_ZN12v8_inspector8String1611fromUTF16LEEPKtm(%"class.v8_inspector::String16"* nonnull sret %5, i16* %263, i64 %264) #15
  %265 = call i8* @_Znwm(i64 48) #16
  %266 = bitcast i8* %265 to i32 (...)***
  %267 = getelementptr inbounds i8, i8* %265, i64 8
  %268 = bitcast i8* %267 to i32*
  store i32 4, i32* %268, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %269 = getelementptr inbounds i8, i8* %265, i64 16
  %270 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %270, i64 0, i32 1, i32 1
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %280, label %274

274:                                              ; preds = %258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* nonnull align 8 %262, i64 24, i1 false) #15
  %275 = getelementptr inbounds i8, i8* %265, i64 40
  %276 = bitcast i8* %275 to i64*
  %277 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %276, align 8
  %279 = ptrtoint i8* %265 to i64
  br label %470

280:                                              ; preds = %258
  %281 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i16*, i16** %281, align 8
  %283 = bitcast i16* %282 to i8*
  %284 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = icmp ult i64 %285, 11
  br i1 %286, label %287, label %290

287:                                              ; preds = %280
  %288 = trunc i64 %285 to i8
  %289 = getelementptr inbounds i8, i8* %265, i64 39
  store i8 %288, i8* %289, align 1
  br label %308

290:                                              ; preds = %280
  %291 = icmp ugt i64 %285, 9223372036854775791
  br i1 %291, label %292, label %294

292:                                              ; preds = %290
  %293 = bitcast i8* %269 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %293) #17
  unreachable

294:                                              ; preds = %290
  %295 = add nuw nsw i64 %285, 8
  %296 = and i64 %295, -8
  %297 = icmp slt i64 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %294
  call void @abort() #17
  unreachable

299:                                              ; preds = %294
  %300 = shl i64 %296, 1
  %301 = call i8* @_Znwm(i64 %300) #16
  %302 = bitcast i8* %269 to i8**
  store i8* %301, i8** %302, align 8
  %303 = or i64 %296, -9223372036854775808
  %304 = getelementptr inbounds i8, i8* %265, i64 32
  %305 = bitcast i8* %304 to i64*
  store i64 %303, i64* %305, align 8
  %306 = getelementptr inbounds i8, i8* %265, i64 24
  %307 = bitcast i8* %306 to i64*
  store i64 %285, i64* %307, align 8
  br label %308

308:                                              ; preds = %299, %287
  %309 = phi i8* [ %269, %287 ], [ %301, %299 ]
  %310 = bitcast i8* %309 to i16*
  %311 = add nuw nsw i64 %285, 1
  %312 = add i64 %285, 1
  %313 = icmp ult i64 %312, 16
  br i1 %313, label %406, label %314

314:                                              ; preds = %308
  %315 = shl i64 %285, 1
  %316 = add i64 %315, 2
  %317 = getelementptr i8, i8* %309, i64 %316
  %318 = add i64 %285, 1
  %319 = getelementptr i16, i16* %282, i64 %318
  %320 = bitcast i16* %319 to i8*
  %321 = icmp ult i8* %309, %320
  %322 = icmp ugt i8* %317, %283
  %323 = and i1 %321, %322
  br i1 %323, label %406, label %324

324:                                              ; preds = %314
  %325 = and i64 %312, -16
  %326 = getelementptr i16, i16* %310, i64 %325
  %327 = sub i64 %311, %325
  %328 = getelementptr i16, i16* %282, i64 %325
  %329 = add i64 %325, -16
  %330 = lshr exact i64 %329, 4
  %331 = add nuw nsw i64 %330, 1
  %332 = and i64 %331, 3
  %333 = icmp ult i64 %329, 48
  br i1 %333, label %385, label %334

334:                                              ; preds = %324
  %335 = sub nsw i64 %331, %332
  br label %336

336:                                              ; preds = %336, %334
  %337 = phi i64 [ 0, %334 ], [ %382, %336 ]
  %338 = phi i64 [ %335, %334 ], [ %383, %336 ]
  %339 = getelementptr i16, i16* %310, i64 %337
  %340 = getelementptr i16, i16* %282, i64 %337
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !80
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !80
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !83, !noalias !80
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !83, !noalias !80
  %349 = or i64 %337, 16
  %350 = getelementptr i16, i16* %310, i64 %349
  %351 = getelementptr i16, i16* %282, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !80
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !80
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !83, !noalias !80
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !83, !noalias !80
  %360 = or i64 %337, 32
  %361 = getelementptr i16, i16* %310, i64 %360
  %362 = getelementptr i16, i16* %282, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !80
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !80
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !83, !noalias !80
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !83, !noalias !80
  %371 = or i64 %337, 48
  %372 = getelementptr i16, i16* %310, i64 %371
  %373 = getelementptr i16, i16* %282, i64 %371
  %374 = bitcast i16* %373 to <8 x i16>*
  %375 = load <8 x i16>, <8 x i16>* %374, align 2, !alias.scope !80
  %376 = getelementptr i16, i16* %373, i64 8
  %377 = bitcast i16* %376 to <8 x i16>*
  %378 = load <8 x i16>, <8 x i16>* %377, align 2, !alias.scope !80
  %379 = bitcast i16* %372 to <8 x i16>*
  store <8 x i16> %375, <8 x i16>* %379, align 2, !alias.scope !83, !noalias !80
  %380 = getelementptr i16, i16* %372, i64 8
  %381 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %378, <8 x i16>* %381, align 2, !alias.scope !83, !noalias !80
  %382 = add i64 %337, 64
  %383 = add i64 %338, -4
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %336, !llvm.loop !85

385:                                              ; preds = %336, %324
  %386 = phi i64 [ 0, %324 ], [ %382, %336 ]
  %387 = icmp eq i64 %332, 0
  br i1 %387, label %404, label %388

388:                                              ; preds = %385, %388
  %389 = phi i64 [ %401, %388 ], [ %386, %385 ]
  %390 = phi i64 [ %402, %388 ], [ %332, %385 ]
  %391 = getelementptr i16, i16* %310, i64 %389
  %392 = getelementptr i16, i16* %282, i64 %389
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !80
  %395 = getelementptr i16, i16* %392, i64 8
  %396 = bitcast i16* %395 to <8 x i16>*
  %397 = load <8 x i16>, <8 x i16>* %396, align 2, !alias.scope !80
  %398 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %398, align 2, !alias.scope !83, !noalias !80
  %399 = getelementptr i16, i16* %391, i64 8
  %400 = bitcast i16* %399 to <8 x i16>*
  store <8 x i16> %397, <8 x i16>* %400, align 2, !alias.scope !83, !noalias !80
  %401 = add i64 %389, 16
  %402 = add i64 %390, -1
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %388, !llvm.loop !86

404:                                              ; preds = %388, %385
  %405 = icmp eq i64 %312, %325
  br i1 %405, label %459, label %406

406:                                              ; preds = %404, %314, %308
  %407 = phi i16* [ %310, %314 ], [ %310, %308 ], [ %326, %404 ]
  %408 = phi i64 [ %311, %314 ], [ %311, %308 ], [ %327, %404 ]
  %409 = phi i16* [ %282, %314 ], [ %282, %308 ], [ %328, %404 ]
  %410 = add i64 %408, -1
  %411 = and i64 %408, 7
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %424, label %413

413:                                              ; preds = %406, %413
  %414 = phi i16* [ %420, %413 ], [ %407, %406 ]
  %415 = phi i64 [ %419, %413 ], [ %408, %406 ]
  %416 = phi i16* [ %421, %413 ], [ %409, %406 ]
  %417 = phi i64 [ %422, %413 ], [ %411, %406 ]
  %418 = load i16, i16* %416, align 2
  store i16 %418, i16* %414, align 2
  %419 = add i64 %415, -1
  %420 = getelementptr inbounds i16, i16* %414, i64 1
  %421 = getelementptr inbounds i16, i16* %416, i64 1
  %422 = add i64 %417, -1
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %413, !llvm.loop !87

424:                                              ; preds = %413, %406
  %425 = phi i16* [ %407, %406 ], [ %420, %413 ]
  %426 = phi i64 [ %408, %406 ], [ %419, %413 ]
  %427 = phi i16* [ %409, %406 ], [ %421, %413 ]
  %428 = icmp ult i64 %410, 7
  br i1 %428, label %459, label %429

429:                                              ; preds = %424, %429
  %430 = phi i16* [ %456, %429 ], [ %425, %424 ]
  %431 = phi i64 [ %455, %429 ], [ %426, %424 ]
  %432 = phi i16* [ %457, %429 ], [ %427, %424 ]
  %433 = load i16, i16* %432, align 2
  store i16 %433, i16* %430, align 2
  %434 = getelementptr inbounds i16, i16* %430, i64 1
  %435 = getelementptr inbounds i16, i16* %432, i64 1
  %436 = load i16, i16* %435, align 2
  store i16 %436, i16* %434, align 2
  %437 = getelementptr inbounds i16, i16* %430, i64 2
  %438 = getelementptr inbounds i16, i16* %432, i64 2
  %439 = load i16, i16* %438, align 2
  store i16 %439, i16* %437, align 2
  %440 = getelementptr inbounds i16, i16* %430, i64 3
  %441 = getelementptr inbounds i16, i16* %432, i64 3
  %442 = load i16, i16* %441, align 2
  store i16 %442, i16* %440, align 2
  %443 = getelementptr inbounds i16, i16* %430, i64 4
  %444 = getelementptr inbounds i16, i16* %432, i64 4
  %445 = load i16, i16* %444, align 2
  store i16 %445, i16* %443, align 2
  %446 = getelementptr inbounds i16, i16* %430, i64 5
  %447 = getelementptr inbounds i16, i16* %432, i64 5
  %448 = load i16, i16* %447, align 2
  store i16 %448, i16* %446, align 2
  %449 = getelementptr inbounds i16, i16* %430, i64 6
  %450 = getelementptr inbounds i16, i16* %432, i64 6
  %451 = load i16, i16* %450, align 2
  store i16 %451, i16* %449, align 2
  %452 = getelementptr inbounds i16, i16* %430, i64 7
  %453 = getelementptr inbounds i16, i16* %432, i64 7
  %454 = load i16, i16* %453, align 2
  store i16 %454, i16* %452, align 2
  %455 = add i64 %431, -8
  %456 = getelementptr inbounds i16, i16* %430, i64 8
  %457 = getelementptr inbounds i16, i16* %432, i64 8
  %458 = icmp eq i64 %455, 0
  br i1 %458, label %459, label %429, !llvm.loop !88

459:                                              ; preds = %424, %429, %404
  %460 = load i8, i8* %271, align 1
  %461 = getelementptr inbounds i8, i8* %265, i64 40
  %462 = bitcast i8* %461 to i64*
  %463 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %5, i64 0, i32 1
  %464 = load i64, i64* %463, align 8
  store i64 %464, i64* %462, align 8
  %465 = ptrtoint i8* %265 to i64
  %466 = icmp slt i8 %460, 0
  br i1 %466, label %467, label %470

467:                                              ; preds = %459
  %468 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %469 = load i8*, i8** %468, align 8
  call void @_ZdlPv(i8* %469) #16
  br label %470

470:                                              ; preds = %467, %459, %274
  %471 = phi i64 [ %279, %274 ], [ %465, %459 ], [ %465, %467 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %262) #15
  br label %521

472:                                              ; preds = %2
  %473 = tail call { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"* %6) #15
  %474 = extractvalue { i8*, i64 } %473, 0
  %475 = extractvalue { i8*, i64 } %473, 1
  %476 = bitcast %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %476) #15
  %477 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %477, align 8
  %478 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %478, align 8
  %479 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 1
  store i64 -1, i64* %479, align 8
  %480 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2
  %481 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 5
  %482 = bitcast %"class.v8_inspector::String16"* %481 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %482, i8 0, i64 32, i1 false) #15
  %483 = bitcast %"class.std::__1::unique_ptr"* %480 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 33, i1 false) #15
  %484 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0
  call void @_ZN8v8_crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8* %474, i64 %475, %"class.v8_crdtp::ParserHandler"* nonnull %484) #15
  %485 = load i32, i32* %478, align 8
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %491

487:                                              ; preds = %472
  %488 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %489 = bitcast %"class.v8_inspector::protocol::Value"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %488, align 8
  br label %491

491:                                              ; preds = %487, %472
  %492 = phi i64 [ %490, %487 ], [ 0, %472 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %477, align 8
  %493 = bitcast %"class.v8_inspector::String16"* %481 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %493, i64 0, i32 1, i32 1
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = bitcast %"class.v8_inspector::String16"* %481 to i8**
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #16
  br label %500

500:                                              ; preds = %497, %491
  %501 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 0
  %502 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %501, align 8
  %503 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %502, null
  br i1 %503, label %509, label %504

504:                                              ; preds = %500
  %505 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %502 to i64
  %506 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 1
  %507 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %506 to i64*
  store i64 %505, i64* %507, align 8
  %508 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %502, i64 0, i32 0
  call void @_ZdlPv(i8* %508) #16
  br label %509

509:                                              ; preds = %504, %500
  %510 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %511 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %510, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %510, align 8
  %512 = icmp eq %"class.v8_inspector::protocol::Value"* %511, null
  br i1 %512, label %519, label %513

513:                                              ; preds = %509
  %514 = bitcast %"class.v8_inspector::protocol::Value"* %511 to void (%"class.v8_inspector::protocol::Value"*)***
  %515 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %514, align 8
  %516 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %515, i64 2
  %517 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %516, align 8
  call void %517(%"class.v8_inspector::protocol::Value"* nonnull %511) #15
  br label %519

518:                                              ; preds = %2
  tail call void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"* %0, i32 22) #15
  br label %532

519:                                              ; preds = %509, %513
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %476) #15
  %520 = icmp eq i64 %492, 0
  br i1 %520, label %532, label %521

521:                                              ; preds = %8, %15, %22, %28, %37, %256, %470, %519
  %522 = phi i64 [ %492, %519 ], [ %14, %8 ], [ %21, %15 ], [ %27, %22 ], [ %36, %28 ], [ %45, %37 ], [ %257, %256 ], [ %471, %470 ]
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %524 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %523, align 8
  %525 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %522, i64* %525, align 8
  %526 = icmp eq %"class.v8_inspector::protocol::Value"* %524, null
  br i1 %526, label %532, label %527

527:                                              ; preds = %521
  %528 = bitcast %"class.v8_inspector::protocol::Value"* %524 to void (%"class.v8_inspector::protocol::Value"*)***
  %529 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %528, align 8
  %530 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %529, i64 2
  %531 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %530, align 8
  call void %531(%"class.v8_inspector::protocol::Value"* nonnull %524) #15
  br label %532

532:                                              ; preds = %519, %527, %521, %518
  %533 = phi i1 [ true, %527 ], [ true, %521 ], [ false, %518 ], [ false, %519 ]
  ret i1 %533
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol5ValueENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.43"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %3, align 8
  %5 = bitcast %"class.v8_inspector::protocol::Value"* %4 to void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)***
  %6 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*** %5, align 8
  %7 = load void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::Value"*, %"class.std::__1::vector.43"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::protocol::Value"* %4, %"class.std::__1::vector.43"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol15DictionaryValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::unique_ptr.69"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %5, align 8
  %6 = call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.v8_crdtp::DeserializerState"* %0, %"class.std::__1::unique_ptr"* nonnull %3)
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %7, align 8
  br i1 %6, label %9, label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %8, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"* %0, i32 55) #15
  br label %27

14:                                               ; preds = %9
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %7, align 8
  %15 = ptrtoint %"class.v8_inspector::protocol::Value"* %8 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.69"* %1 to i64*
  store i64 %15, i64* %18, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::DictionaryValue"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %17 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %22 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %22, i64 2
  %24 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %23, align 8
  tail call void %24(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %17) #15
  br label %25

25:                                               ; preds = %20, %14
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %26, align 8
  br label %35

27:                                               ; preds = %2, %13
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %28, align 8
  %29 = icmp eq %"class.v8_inspector::protocol::Value"* %8, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.v8_inspector::protocol::Value"* %8 to void (%"class.v8_inspector::protocol::Value"*)***
  %32 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %32, i64 2
  %34 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %33, align 8
  tail call void %34(%"class.v8_inspector::protocol::Value"* nonnull %8) #15
  br label %35

35:                                               ; preds = %25, %27, %30
  %36 = phi i1 [ true, %25 ], [ false, %27 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret i1 %36
}

declare void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol15DictionaryValueENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr.69"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.43"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %3, align 8
  %5 = bitcast %"class.v8_inspector::protocol::DictionaryValue"* %4 to void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)***
  %6 = load void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)*** %5, align 8
  %7 = load void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*, %"class.std::__1::vector.43"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::protocol::DictionaryValue"* %4, %"class.std::__1::vector.43"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol6ObjectENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.v8_crdtp::DeserializerState"*, %"class.std::__1::unique_ptr.84"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #16
  %5 = bitcast i8* %4 to %"class.v8_inspector::protocol::DictionaryValue"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 6, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = getelementptr inbounds i8, i8* %4, i64 48
  %11 = bitcast i8* %10 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #15
  %13 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %14, align 8
  %15 = call zeroext i1 @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.v8_crdtp::DeserializerState"* %0, %"class.std::__1::unique_ptr"* nonnull %3) #15
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8_inspector::protocol::Value", %"class.v8_inspector::protocol::Value"* %17, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  tail call void @_ZN8v8_crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.v8_crdtp::DeserializerState"* %0, i32 55) #15
  br label %23

23:                                               ; preds = %22, %2
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %16, align 8
  %24 = icmp eq %"class.v8_inspector::protocol::Value"* %17, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.v8_inspector::protocol::Value"* %17 to void (%"class.v8_inspector::protocol::Value"*)***
  %27 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %27, i64 2
  %29 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %28, align 8
  tail call void %29(%"class.v8_inspector::protocol::Value"* nonnull %17) #15
  br label %46

30:                                               ; preds = %18
  %31 = ptrtoint %"class.v8_inspector::protocol::Value"* %17 to i64
  tail call void @_ZN12v8_inspector8protocol15DictionaryValueD2Ev(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %5) #15
  tail call void @_ZdlPv(i8* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %32 = tail call i8* @_Znwm(i64 16) #16
  %33 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 8
  %35 = bitcast i8* %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = ptrtoint i8* %32 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84"* %1, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.v8_inspector::protocol::Object"*, %"class.v8_inspector::protocol::Object"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.84"* %1 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.v8_inspector::protocol::Object"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = bitcast %"class.v8_inspector::protocol::Object"* %38 to void (%"class.v8_inspector::protocol::Object"*)***
  %43 = load void (%"class.v8_inspector::protocol::Object"*)**, void (%"class.v8_inspector::protocol::Object"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.v8_inspector::protocol::Object"*)*, void (%"class.v8_inspector::protocol::Object"*)** %43, i64 2
  %45 = load void (%"class.v8_inspector::protocol::Object"*)*, void (%"class.v8_inspector::protocol::Object"*)** %44, align 8
  tail call void %45(%"class.v8_inspector::protocol::Object"* nonnull %38) #15
  br label %51

46:                                               ; preds = %25, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %47 = bitcast i8* %4 to void (%"class.v8_inspector::protocol::DictionaryValue"*)***
  %48 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)**, void (%"class.v8_inspector::protocol::DictionaryValue"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %48, i64 2
  %50 = load void (%"class.v8_inspector::protocol::DictionaryValue"*)*, void (%"class.v8_inspector::protocol::DictionaryValue"*)** %49, align 8
  tail call void %50(%"class.v8_inspector::protocol::DictionaryValue"* nonnull %5) #15
  br label %51

51:                                               ; preds = %30, %41, %46
  %52 = phi i1 [ false, %46 ], [ true, %41 ], [ true, %30 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8v8_crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN12v8_inspector8protocol6ObjectENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr.84"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.43"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::protocol::Object"*, %"class.v8_inspector::protocol::Object"** %3, align 8
  %5 = bitcast %"class.v8_inspector::protocol::Object"* %4 to void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)***
  %6 = load void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)**, void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)*** %5, align 8
  %7 = load void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)*, void (%"class.v8_inspector::protocol::Object"*, %"class.std::__1::vector.43"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::protocol::Object"* %4, %"class.std::__1::vector.43"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol5ValueD0Ev(%"class.v8_inspector::protocol::Value"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8_inspector::protocol::Value"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8v8_crdtp12SerializableD2Ev(%"class.v8_crdtp::Serializable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol16FundamentalValueD0Ev(%"class.v8_inspector::protocol::FundamentalValue"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.v8_inspector::protocol::FundamentalValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol11StringValueD2Ev(%"class.v8_inspector::protocol::StringValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol11StringValueD0Ev(%"class.v8_inspector::protocol::StringValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::StringValue", %"class.v8_inspector::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.v8_inspector::protocol::StringValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol11BinaryValueD2Ev(%"class.v8_inspector::protocol::BinaryValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol11BinaryValueD0Ev(%"class.v8_inspector::protocol::BinaryValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::BinaryValue", %"class.v8_inspector::protocol::BinaryValue"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #15
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.v8_inspector::protocol::BinaryValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerD0Ev(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %4 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %12, align 8
  %14 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13 to i64
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %21, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %21, align 8
  %23 = icmp eq %"class.v8_inspector::protocol::Value"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.v8_inspector::protocol::Value"* %22 to void (%"class.v8_inspector::protocol::Value"*)***
  %26 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %26, i64 2
  %28 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %27, align 8
  tail call void %28(%"class.v8_inspector::protocol::Value"* nonnull %22) #15
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleMapBeginEv(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %136

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 80) #16
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 6, i32* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = getelementptr inbounds i8, i8* %7, i64 48
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #15
  %15 = ptrtoint i8* %7 to i64
  %16 = bitcast i8* %7 to %"class.v8_inspector::protocol::Value"*
  %17 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %18, align 8
  %20 = icmp eq %"class.v8_inspector::protocol::Value"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %6
  %22 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  store i64 %15, i64* %22, align 8
  br label %62

23:                                               ; preds = %6
  %24 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %25 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %25, i64 -1, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %25, i64 -1, i32 1
  br i1 %28, label %35, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %32 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %31, align 8
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %32, %"class.v8_inspector::String16"* dereferenceable(32) %33, %"class.v8_inspector::protocol::Value"* nonnull %16) #15
  %34 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %34, align 8
  br label %62

35:                                               ; preds = %23
  %36 = bitcast %union.anon* %29 to %"class.v8_inspector::protocol::ListValue"**
  %37 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  store i8* %7, i8** %40, align 8
  %41 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %37, i64 0, i32 1, i32 0, i32 1
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %41, align 8
  %43 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %37, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %43, align 8
  %45 = icmp ult %"class.std::__1::unique_ptr"* %42, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %35
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %39, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %15, i64* %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 1
  %49 = ptrtoint %"class.std::__1::unique_ptr"* %48 to i64
  %50 = bitcast %"class.std::__1::unique_ptr"** %41 to i64*
  store i64 %49, i64* %50, align 8
  br label %53

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %37, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %52, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #15
  br label %53

53:                                               ; preds = %51, %46
  %54 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %39, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %39, align 8
  %55 = icmp eq %"class.v8_inspector::protocol::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %53
  %57 = bitcast %"class.v8_inspector::protocol::Value"* %54 to void (%"class.v8_inspector::protocol::Value"*)***
  %58 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %58, i64 2
  %60 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %59, align 8
  call void %60(%"class.v8_inspector::protocol::Value"* nonnull %54) #15
  br label %61

61:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #15
  br label %62

62:                                               ; preds = %21, %30, %61
  %63 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %65 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %64, align 8
  %66 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %67 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %66, align 8
  %68 = icmp ult %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65, %67
  %69 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %67 to i64
  br i1 %68, label %70, label %77

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65, i64 0, i32 0
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65, i64 0, i32 1, i32 0
  %73 = bitcast %"class.v8_inspector::protocol::DictionaryValue"** %72 to i8**
  store i8* %7, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65, i64 1
  %75 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %74 to i64
  %76 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %64 to i64*
  store i64 %75, i64* %76, align 8
  br label %136

77:                                               ; preds = %62
  %78 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65 to i64
  %79 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %64 to i64*
  %80 = bitcast %"class.std::__1::vector"* %63 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %78, %81
  %83 = ashr exact i64 %82, 4
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 1152921504606846975
  br i1 %85, label %86, label %88

86:                                               ; preds = %77
  %87 = bitcast %"class.std::__1::vector"* %63 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %87) #17
  unreachable

88:                                               ; preds = %77
  %89 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %66 to i64*
  %90 = sub i64 %69, %81
  %91 = ashr exact i64 %90, 4
  %92 = icmp ult i64 %91, 576460752303423487
  br i1 %92, label %93, label %101

93:                                               ; preds = %88
  %94 = ashr exact i64 %90, 3
  %95 = icmp ult i64 %94, %84
  %96 = select i1 %95, i64 %84, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = icmp ugt i64 %96, 1152921504606846975
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  call void @abort() #17
  unreachable

101:                                              ; preds = %98, %88
  %102 = phi i64 [ %96, %98 ], [ 1152921504606846975, %88 ]
  %103 = shl i64 %102, 4
  %104 = call i8* @_Znwm(i64 %103) #16
  %105 = bitcast i8* %104 to %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ %102, %101 ], [ 0, %93 ]
  %108 = phi %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %105, %101 ], [ null, %93 ]
  %109 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %108, i64 %83
  %110 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %108, i64 %107
  %111 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %110 to i64
  %112 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %109, i64 0, i32 0
  store i8 1, i8* %112, align 8
  %113 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %108, i64 %83, i32 1, i32 0
  %114 = bitcast %"class.v8_inspector::protocol::DictionaryValue"** %113 to i8**
  store i8* %7, i8** %114, align 8
  %115 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %109, i64 1
  %116 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %115 to i64
  %117 = getelementptr %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 0
  %118 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %117, align 8
  %119 = load i64, i64* %79, align 8
  %120 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 4
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %109, i64 %123
  %125 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %106
  %128 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %124, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %118, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 %121, i1 false) #15
  %130 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %117, align 8
  br label %131

131:                                              ; preds = %127, %106
  %132 = phi %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %118, %106 ], [ %130, %127 ]
  store i64 %125, i64* %80, align 8
  store i64 %116, i64* %79, align 8
  store i64 %111, i64* %89, align 8
  %133 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %132, i64 0, i32 0
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %70, %131, %134, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleMapEndEv(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %7, i64 -1
  store %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %8, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler16HandleArrayBeginEv(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %133

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 40) #16
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 7, i32* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #15
  %12 = ptrtoint i8* %7 to i64
  %13 = bitcast i8* %7 to %"class.v8_inspector::protocol::Value"*
  %14 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %15, align 8
  %17 = icmp eq %"class.v8_inspector::protocol::Value"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %6
  %19 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %12, i64* %19, align 8
  br label %59

20:                                               ; preds = %6
  %21 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %22, i64 -1, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %22, i64 -1, i32 1
  br i1 %25, label %32, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %29 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %28, align 8
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %29, %"class.v8_inspector::String16"* dereferenceable(32) %30, %"class.v8_inspector::protocol::Value"* nonnull %13) #15
  %31 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %31, align 8
  br label %59

32:                                               ; preds = %20
  %33 = bitcast %union.anon* %26 to %"class.v8_inspector::protocol::ListValue"**
  %34 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  store i8* %7, i8** %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %34, i64 0, i32 1, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %34, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = icmp ult %"class.std::__1::unique_ptr"* %39, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %32
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %36, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %12, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %46 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %47 = bitcast %"class.std::__1::unique_ptr"** %38 to i64*
  store i64 %46, i64* %47, align 8
  br label %50

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %34, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %49, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #15
  br label %50

50:                                               ; preds = %48, %43
  %51 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %36, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %36, align 8
  %52 = icmp eq %"class.v8_inspector::protocol::Value"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.v8_inspector::protocol::Value"* %51 to void (%"class.v8_inspector::protocol::Value"*)***
  %55 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %55, i64 2
  %57 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %56, align 8
  call void %57(%"class.v8_inspector::protocol::Value"* nonnull %51) #15
  br label %58

58:                                               ; preds = %53, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %59

59:                                               ; preds = %18, %27, %58
  %60 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3
  %61 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %62 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %61, align 8
  %63 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %64 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %63, align 8
  %65 = icmp ult %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, %64
  %66 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %64 to i64
  br i1 %65, label %67, label %74

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 0, i32 0
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 0, i32 1
  %70 = bitcast %union.anon* %69 to i8**
  store i8* %7, i8** %70, align 8
  %71 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 1
  %72 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %71 to i64
  %73 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %61 to i64*
  store i64 %72, i64* %73, align 8
  br label %133

74:                                               ; preds = %59
  %75 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62 to i64
  %76 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %61 to i64*
  %77 = bitcast %"class.std::__1::vector"* %60 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = ashr exact i64 %79, 4
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 1152921504606846975
  br i1 %82, label %83, label %85

83:                                               ; preds = %74
  %84 = bitcast %"class.std::__1::vector"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %84) #17
  unreachable

85:                                               ; preds = %74
  %86 = bitcast %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %63 to i64*
  %87 = sub i64 %66, %78
  %88 = ashr exact i64 %87, 4
  %89 = icmp ult i64 %88, 576460752303423487
  br i1 %89, label %90, label %98

90:                                               ; preds = %85
  %91 = ashr exact i64 %87, 3
  %92 = icmp ult i64 %91, %81
  %93 = select i1 %92, i64 %81, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 1152921504606846975
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @abort() #17
  unreachable

98:                                               ; preds = %95, %85
  %99 = phi i64 [ %93, %95 ], [ 1152921504606846975, %85 ]
  %100 = shl i64 %99, 4
  %101 = call i8* @_Znwm(i64 %100) #16
  %102 = bitcast i8* %101 to %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %102, %98 ], [ null, %90 ]
  %106 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %105, i64 %80
  %107 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %105, i64 %104
  %108 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %107 to i64
  %109 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %106, i64 0, i32 0
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %105, i64 %80, i32 1
  %111 = bitcast %union.anon* %110 to i8**
  store i8* %7, i8** %111, align 8
  %112 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %106, i64 1
  %113 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %112 to i64
  %114 = getelementptr %"class.std::__1::vector", %"class.std::__1::vector"* %60, i64 0, i32 0, i32 0
  %115 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %114, align 8
  %116 = load i64, i64* %76, align 8
  %117 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %115 to i64
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 4
  %120 = sub nsw i64 0, %119
  %121 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %106, i64 %120
  %122 = ptrtoint %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %121 to i64
  %123 = icmp sgt i64 %118, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %103
  %125 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %121, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %115, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 %118, i1 false) #15
  %127 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %114, align 8
  br label %128

128:                                              ; preds = %124, %103
  %129 = phi %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %115, %103 ], [ %127, %124 ]
  store i64 %122, i64* %77, align 8
  store i64 %113, i64* %76, align 8
  store i64 %108, i64* %86, align 8
  %130 = icmp eq %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %129, i64 0, i32 0
  call void @_ZdlPv(i8* %132) #16
  br label %133

133:                                              ; preds = %67, %128, %131, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleArrayEndEv(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %7, i64 -1
  store %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %8, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler13HandleString8EN8v8_crdtp4spanIhEE(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  call void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* nonnull sret %4, i8* %1, i64 %2) #15
  call fastcc void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENS_8String16E(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.v8_inspector::String16"* nonnull %4)
  %5 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler14HandleString16EN8v8_crdtp4spanItEE(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i16*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  call void @_ZN12v8_inspector8String1611fromUTF16LEEPKtm(%"class.v8_inspector::String16"* nonnull sret %4, i16* %1, i64 %2) #15
  call fastcc void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENS_8String16E(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.v8_inspector::String16"* nonnull %4)
  %5 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #16
  br label %12

12:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleBinaryEN8v8_crdtp4spanIhEE(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 48) #16
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = icmp slt i64 %2, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast i8* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %10
  %15 = tail call i8* @_Znwm(i64 %2) #16
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = bitcast i8* %8 to i8**
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 %2
  %19 = getelementptr inbounds i8, i8* %5, i64 40
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = bitcast i8* %16 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %1, i64 %2, i1 false) #15
  %22 = ptrtoint i8* %18 to i64
  store i64 %22, i64* %21, align 8
  br label %23

23:                                               ; preds = %14, %3
  %24 = bitcast i8* %5 to %"class.std::__1::__shared_weak_count"*
  %25 = bitcast i8* %7 to i64*
  %26 = atomicrmw add i64* %25, i64 1 monotonic
  %27 = atomicrmw add i64* %25, i64 -1 acq_rel
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = bitcast i8* %5 to %"class.std::__1::__shared_count"*
  %31 = bitcast i8* %5 to void (%"class.std::__1::__shared_count"*)***
  %32 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %32, i64 2
  %34 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %33, align 8
  tail call void %34(%"class.std::__1::__shared_count"* nonnull %30) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #15
  br label %35

35:                                               ; preds = %23, %29
  %36 = ptrtoint i8* %8 to i64
  %37 = tail call i8* @_Znwm(i64 32) #16
  %38 = bitcast i8* %37 to i32 (...)***
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 5, i32* %40, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 24
  %44 = bitcast i8* %43 to i8**
  store i8* %5, i8** %44, align 8
  %45 = atomicrmw add i64* %25, i64 1 monotonic
  %46 = ptrtoint i8* %37 to i64
  %47 = bitcast i8* %37 to %"class.v8_inspector::protocol::Value"*
  %48 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %97

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %53, align 8
  %55 = icmp eq %"class.v8_inspector::protocol::Value"* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %46, i64* %57, align 8
  br label %109

58:                                               ; preds = %51
  %59 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %60 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %59, align 8
  %61 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %60, i64 -1, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %60, i64 -1, i32 1
  br i1 %63, label %70, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %union.anon, %union.anon* %64, i64 0, i32 0
  %67 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %66, align 8
  %68 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %67, %"class.v8_inspector::String16"* dereferenceable(32) %68, %"class.v8_inspector::protocol::Value"* nonnull %47) #15
  %69 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %69, align 8
  br label %109

70:                                               ; preds = %58
  %71 = bitcast %union.anon* %64 to %"class.v8_inspector::protocol::ListValue"**
  %72 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %71, align 8
  %73 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %37, i8** %75, align 8
  %76 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %72, i64 0, i32 1, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %76, align 8
  %78 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %72, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %79 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %78, align 8
  %80 = icmp ult %"class.std::__1::unique_ptr"* %77, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %70
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %74, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %77 to i64*
  store i64 %46, i64* %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 1
  %84 = ptrtoint %"class.std::__1::unique_ptr"* %83 to i64
  %85 = bitcast %"class.std::__1::unique_ptr"** %76 to i64*
  store i64 %84, i64* %85, align 8
  br label %88

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %72, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %87, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #15
  br label %88

88:                                               ; preds = %86, %81
  %89 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %74, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %74, align 8
  %90 = icmp eq %"class.v8_inspector::protocol::Value"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.v8_inspector::protocol::Value"* %89 to void (%"class.v8_inspector::protocol::Value"*)***
  %93 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %93, i64 2
  %95 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %94, align 8
  call void %95(%"class.v8_inspector::protocol::Value"* nonnull %89) #15
  br label %96

96:                                               ; preds = %91, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #15
  br label %109

97:                                               ; preds = %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %98 = getelementptr inbounds i8, i8* %5, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = atomicrmw add i64* %99, i64 -1 acq_rel
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %97
  %103 = bitcast i8* %5 to %"class.std::__1::__shared_count"*
  %104 = bitcast i8* %5 to void (%"class.std::__1::__shared_count"*)***
  %105 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %105, i64 2
  %107 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %106, align 8
  tail call void %107(%"class.std::__1::__shared_count"* nonnull %103) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #15
  br label %108

108:                                              ; preds = %97, %102
  tail call void @_ZdlPv(i8* nonnull %37) #16
  br label %109

109:                                              ; preds = %56, %65, %96, %108
  %110 = atomicrmw add i64* %25, i64 -1 acq_rel
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %109
  %113 = bitcast i8* %5 to %"class.std::__1::__shared_count"*
  %114 = bitcast i8* %5 to void (%"class.std::__1::__shared_count"*)***
  %115 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %115, i64 2
  %117 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %116, align 8
  call void %117(%"class.std::__1::__shared_count"* nonnull %113) #15
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #15
  br label %118

118:                                              ; preds = %109, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler12HandleDoubleEd(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, double) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 3, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to double*
  store double %1, double* %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %17, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %10, i64* %21, align 8
  br label %62

22:                                               ; preds = %15
  %23 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 1
  br i1 %27, label %34, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %31 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %30, align 8
  %32 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %31, %"class.v8_inspector::String16"* dereferenceable(32) %32, %"class.v8_inspector::protocol::Value"* nonnull %11) #15
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %33, align 8
  br label %62

34:                                               ; preds = %22
  %35 = bitcast %union.anon* %28 to %"class.v8_inspector::protocol::ListValue"**
  %36 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %39, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = icmp ult %"class.std::__1::unique_ptr"* %41, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %34
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  store i64 %10, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = bitcast %"class.std::__1::unique_ptr"** %40 to i64*
  store i64 %48, i64* %49, align 8
  br label %52

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %51, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  br label %52

52:                                               ; preds = %50, %45
  %53 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %38, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %54 = icmp eq %"class.v8_inspector::protocol::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.v8_inspector::protocol::Value"* %53 to void (%"class.v8_inspector::protocol::Value"*)***
  %57 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %57, i64 2
  %59 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %58, align 8
  call void %59(%"class.v8_inspector::protocol::Value"* nonnull %53) #15
  br label %60

60:                                               ; preds = %55, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %62

61:                                               ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %4) #16
  br label %62

62:                                               ; preds = %61, %60, %29, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler11HandleInt32Ei(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 2, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %17, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %10, i64* %21, align 8
  br label %62

22:                                               ; preds = %15
  %23 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 1
  br i1 %27, label %34, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %31 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %30, align 8
  %32 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %31, %"class.v8_inspector::String16"* dereferenceable(32) %32, %"class.v8_inspector::protocol::Value"* nonnull %11) #15
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %33, align 8
  br label %62

34:                                               ; preds = %22
  %35 = bitcast %union.anon* %28 to %"class.v8_inspector::protocol::ListValue"**
  %36 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %39, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = icmp ult %"class.std::__1::unique_ptr"* %41, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %34
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  store i64 %10, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = bitcast %"class.std::__1::unique_ptr"** %40 to i64*
  store i64 %48, i64* %49, align 8
  br label %52

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %51, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  br label %52

52:                                               ; preds = %50, %45
  %53 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %38, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %54 = icmp eq %"class.v8_inspector::protocol::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.v8_inspector::protocol::Value"* %53 to void (%"class.v8_inspector::protocol::Value"*)***
  %57 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %57, i64 2
  %59 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %58, align 8
  call void %59(%"class.v8_inspector::protocol::Value"* nonnull %53) #15
  br label %60

60:                                               ; preds = %55, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %62

61:                                               ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %4) #16
  br label %62

62:                                               ; preds = %61, %60, %29, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler10HandleBoolEb(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 24) #16
  %5 = zext i1 %1 to i8
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 %5, i8* %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = bitcast i8* %4 to %"class.v8_inspector::protocol::Value"*
  %12 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %17, align 8
  %19 = icmp eq %"class.v8_inspector::protocol::Value"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %10, i64* %21, align 8
  br label %62

22:                                               ; preds = %15
  %23 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24, i64 -1, i32 1
  br i1 %27, label %34, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %31 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %30, align 8
  %32 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %31, %"class.v8_inspector::String16"* dereferenceable(32) %32, %"class.v8_inspector::protocol::Value"* nonnull %11) #15
  %33 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %33, align 8
  br label %62

34:                                               ; preds = %22
  %35 = bitcast %union.anon* %28 to %"class.v8_inspector::protocol::ListValue"**
  %36 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %39, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = icmp ult %"class.std::__1::unique_ptr"* %41, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %34
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  store i64 %10, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = bitcast %"class.std::__1::unique_ptr"** %40 to i64*
  store i64 %48, i64* %49, align 8
  br label %52

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %36, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %51, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  br label %52

52:                                               ; preds = %50, %45
  %53 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %38, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %38, align 8
  %54 = icmp eq %"class.v8_inspector::protocol::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.v8_inspector::protocol::Value"* %53 to void (%"class.v8_inspector::protocol::Value"*)***
  %57 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %57, i64 2
  %59 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %58, align 8
  call void %59(%"class.v8_inspector::protocol::Value"* nonnull %53) #15
  br label %60

60:                                               ; preds = %55, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %62

61:                                               ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %4) #16
  br label %62

62:                                               ; preds = %61, %60, %29, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler10HandleNullEv(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call i8* @_Znwm(i64 16) #16
  %4 = bitcast i8* %3 to %"class.v8_inspector::protocol::Value"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %58

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %14, align 8
  %16 = icmp eq %"class.v8_inspector::protocol::Value"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %8, i64* %18, align 8
  br label %59

19:                                               ; preds = %12
  %20 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %20, align 8
  %22 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %21, i64 -1, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %21, i64 -1, i32 1
  br i1 %24, label %31, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %28 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %27, align 8
  %29 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %28, %"class.v8_inspector::String16"* dereferenceable(32) %29, %"class.v8_inspector::protocol::Value"* nonnull %4) #15
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %30, align 8
  br label %59

31:                                               ; preds = %19
  %32 = bitcast %union.anon* %25 to %"class.v8_inspector::protocol::ListValue"**
  %33 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  store i8* %3, i8** %36, align 8
  %37 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %33, i64 0, i32 1, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %33, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %41 = icmp ult %"class.std::__1::unique_ptr"* %38, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %31
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %35, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 %8, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = bitcast %"class.std::__1::unique_ptr"** %37 to i64*
  store i64 %45, i64* %46, align 8
  br label %49

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %33, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %48, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #15
  br label %49

49:                                               ; preds = %47, %42
  %50 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %35, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %35, align 8
  %51 = icmp eq %"class.v8_inspector::protocol::Value"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.v8_inspector::protocol::Value"* %50 to void (%"class.v8_inspector::protocol::Value"*)***
  %54 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %54, i64 2
  %56 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %55, align 8
  call void %56(%"class.v8_inspector::protocol::Value"* nonnull %50) #15
  br label %57

57:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %59

58:                                               ; preds = %1
  tail call void @_ZdlPv(i8* nonnull %3) #16
  br label %59

59:                                               ; preds = %17, %26, %57, %58
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler11HandleErrorEN8v8_crdtp6StatusE(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* nocapture, i32, i64) unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12v8_inspector8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENS_8String16E(%"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"*, %"class.v8_inspector::String16"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %87

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.v8_inspector::protocol::Value"* %10, null
  br i1 %11, label %12, label %23

12:                                               ; preds = %7
  %13 = tail call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %1)
  %14 = ptrtoint %"class.v8_inspector::protocol::StringValue"* %13 to i64
  %15 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %9, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %"class.v8_inspector::protocol::Value"* %15, null
  br i1 %17, label %87, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8_inspector::protocol::Value"* %15 to void (%"class.v8_inspector::protocol::Value"*)***
  %20 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %20, i64 2
  %22 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %21, align 8
  tail call void %22(%"class.v8_inspector::protocol::Value"* nonnull %15) #15
  br label %87

23:                                               ; preds = %7
  %24 = getelementptr %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %25 = load %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %25, i64 -1, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %25, i64 -1, i32 1, i32 0
  %35 = load %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::DictionaryValue"** %34, align 8
  %36 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %37 = tail call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %1) #15
  %38 = bitcast %"class.v8_inspector::protocol::StringValue"* %37 to %"class.v8_inspector::protocol::Value"*
  tail call void @_ZN12v8_inspector8protocol15DictionaryValue8setValueERKNS_8String16ENSt3__110unique_ptrINS0_5ValueENS5_14default_deleteIS7_EEEE(%"class.v8_inspector::protocol::DictionaryValue"* %35, %"class.v8_inspector::String16"* dereferenceable(32) %36, %"class.v8_inspector::protocol::Value"* %38) #15
  store i8 0, i8* %30, align 8
  br label %87

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %41 = bitcast %"class.v8_inspector::String16"* %40 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = bitcast %"class.v8_inspector::String16"* %40 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %39, %45
  %49 = bitcast %"class.v8_inspector::String16"* %40 to i8*
  %50 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #15
  %51 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %51, i64 0, i32 1, i32 1
  store i8 0, i8* %52, align 1
  %53 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  store i16 0, i16* %53, align 2
  %54 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler", %"class.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5, i32 1
  store i64 %55, i64* %56, align 8
  store i8 1, i8* %30, align 8
  br label %87

57:                                               ; preds = %23
  %58 = getelementptr inbounds %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.v8_inspector::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %25, i64 -1, i32 1
  %59 = bitcast %union.anon* %58 to %"class.v8_inspector::protocol::ListValue"**
  %60 = load %"class.v8_inspector::protocol::ListValue"*, %"class.v8_inspector::protocol::ListValue"** %59, align 8
  %61 = tail call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %1)
  %62 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %3 to %"class.v8_inspector::protocol::StringValue"**
  store %"class.v8_inspector::protocol::StringValue"* %61, %"class.v8_inspector::protocol::StringValue"** %64, align 8
  %65 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %60, i64 0, i32 1, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %65, align 8
  %67 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %60, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %68 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %67, align 8
  %69 = icmp ult %"class.std::__1::unique_ptr"* %66, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %57
  %71 = ptrtoint %"class.v8_inspector::protocol::StringValue"* %61 to i64
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %63, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr"* %73 to i64
  %75 = bitcast %"class.std::__1::unique_ptr"** %65 to i64*
  store i64 %74, i64* %75, align 8
  br label %78

76:                                               ; preds = %57
  %77 = getelementptr inbounds %"class.v8_inspector::protocol::ListValue", %"class.v8_inspector::protocol::ListValue"* %60, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %77, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #15
  br label %78

78:                                               ; preds = %76, %70
  %79 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %63, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %63, align 8
  %80 = icmp eq %"class.v8_inspector::protocol::Value"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.v8_inspector::protocol::Value"* %79 to void (%"class.v8_inspector::protocol::Value"*)***
  %83 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %83, i64 2
  %85 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %84, align 8
  call void %85(%"class.v8_inspector::protocol::Value"* nonnull %79) #15
  br label %86

86:                                               ; preds = %81, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  br label %87

87:                                               ; preds = %12, %18, %86, %48, %33, %2
  ret void
}

declare void @_ZN12v8_inspector8String168fromUTF8EPKcm(%"class.v8_inspector::String16"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String1611fromUTF16LEEPKtm(%"class.v8_inspector::String16"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #15
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > > >::_Storage"* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1, i32 0, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #16
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = getelementptr i16, i16* %25, i64 %39
  %41 = sub i64 %22, %39
  %42 = getelementptr i16, i16* %19, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr i16, i16* %19, i64 %51
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !89
  %57 = getelementptr i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !89
  %60 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !92, !noalias !89
  %61 = getelementptr i16, i16* %53, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !92, !noalias !89
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr i16, i16* %19, i64 %63
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !89
  %68 = getelementptr i16, i16* %65, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !89
  %71 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !92, !noalias !89
  %72 = getelementptr i16, i16* %64, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !92, !noalias !89
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr i16, i16* %19, i64 %74
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !89
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !89
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !92, !noalias !89
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !92, !noalias !89
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr i16, i16* %19, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !89
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !89
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !92, !noalias !89
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !92, !noalias !89
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !94

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr i16, i16* %19, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !89
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !89
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !92, !noalias !89
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !92, !noalias !89
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !95

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %40, %118 ]
  %122 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %42, %118 ]
  %124 = add i64 %122, -1
  %125 = and i64 %122, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i16* [ %134, %127 ], [ %121, %120 ]
  %129 = phi i64 [ %133, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %135, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %130, align 2
  store i16 %132, i16* %128, align 2
  %133 = add i64 %129, -1
  %134 = getelementptr inbounds i16, i16* %128, i64 1
  %135 = getelementptr inbounds i16, i16* %130, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !96

138:                                              ; preds = %127, %120
  %139 = phi i16* [ %121, %120 ], [ %134, %127 ]
  %140 = phi i64 [ %122, %120 ], [ %133, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %135, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i16* [ %170, %143 ], [ %139, %138 ]
  %145 = phi i64 [ %169, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %171, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %146, align 2
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %144, i64 2
  %152 = getelementptr inbounds i16, i16* %146, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %144, i64 3
  %155 = getelementptr inbounds i16, i16* %146, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %144, i64 4
  %158 = getelementptr inbounds i16, i16* %146, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %144, i64 5
  %161 = getelementptr inbounds i16, i16* %146, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %144, i64 6
  %164 = getelementptr inbounds i16, i16* %146, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %144, i64 7
  %167 = getelementptr inbounds i16, i16* %146, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %145, -8
  %170 = getelementptr inbounds i16, i16* %144, i64 8
  %171 = getelementptr inbounds i16, i16* %146, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !97

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #17
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #17
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #16
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = getelementptr i16, i16* %190, i64 %201
  %203 = sub i64 %22, %201
  %204 = getelementptr i16, i16* %19, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %190, i64 %213
  %216 = getelementptr i16, i16* %19, i64 %213
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !98
  %219 = getelementptr i16, i16* %216, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !98
  %222 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !101, !noalias !98
  %223 = getelementptr i16, i16* %215, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !101, !noalias !98
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %190, i64 %225
  %227 = getelementptr i16, i16* %19, i64 %225
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !98
  %230 = getelementptr i16, i16* %227, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !98
  %233 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !101, !noalias !98
  %234 = getelementptr i16, i16* %226, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !101, !noalias !98
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %190, i64 %236
  %238 = getelementptr i16, i16* %19, i64 %236
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !98
  %241 = getelementptr i16, i16* %238, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !98
  %244 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !101, !noalias !98
  %245 = getelementptr i16, i16* %237, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !101, !noalias !98
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %190, i64 %247
  %249 = getelementptr i16, i16* %19, i64 %247
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !98
  %252 = getelementptr i16, i16* %249, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !98
  %255 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !101, !noalias !98
  %256 = getelementptr i16, i16* %248, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !101, !noalias !98
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !103

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %190, i64 %265
  %268 = getelementptr i16, i16* %19, i64 %265
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !98
  %271 = getelementptr i16, i16* %268, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !98
  %274 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !101, !noalias !98
  %275 = getelementptr i16, i16* %267, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !101, !noalias !98
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !104

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %202, %280 ]
  %284 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %204, %280 ]
  %286 = add i64 %284, -1
  %287 = and i64 %284, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i16* [ %296, %289 ], [ %283, %282 ]
  %291 = phi i64 [ %295, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %297, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %290, align 2
  %295 = add i64 %291, -1
  %296 = getelementptr inbounds i16, i16* %290, i64 1
  %297 = getelementptr inbounds i16, i16* %292, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !105

300:                                              ; preds = %289, %282
  %301 = phi i16* [ %283, %282 ], [ %296, %289 ]
  %302 = phi i64 [ %284, %282 ], [ %295, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %297, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i16* [ %332, %305 ], [ %301, %300 ]
  %307 = phi i64 [ %331, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %333, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds i16, i16* %306, i64 1
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %306, i64 2
  %314 = getelementptr inbounds i16, i16* %308, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %306, i64 3
  %317 = getelementptr inbounds i16, i16* %308, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %306, i64 4
  %320 = getelementptr inbounds i16, i16* %308, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %306, i64 5
  %323 = getelementptr inbounds i16, i16* %308, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %306, i64 6
  %326 = getelementptr inbounds i16, i16* %308, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %306, i64 7
  %329 = getelementptr inbounds i16, i16* %308, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %307, -8
  %332 = getelementptr inbounds i16, i16* %306, i64 8
  %333 = getelementptr inbounds i16, i16* %308, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !106

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = getelementptr i16, i16* %356, i64 %368
  %370 = sub i64 %349, %368
  %371 = getelementptr i16, i16* %348, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %356, i64 %380
  %383 = getelementptr i16, i16* %348, i64 %380
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !107
  %386 = getelementptr i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !107
  %389 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !110, !noalias !107
  %390 = getelementptr i16, i16* %382, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !110, !noalias !107
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %356, i64 %392
  %394 = getelementptr i16, i16* %348, i64 %392
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !107
  %397 = getelementptr i16, i16* %394, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !107
  %400 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !110, !noalias !107
  %401 = getelementptr i16, i16* %393, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !110, !noalias !107
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %356, i64 %403
  %405 = getelementptr i16, i16* %348, i64 %403
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !107
  %408 = getelementptr i16, i16* %405, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !107
  %411 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !110, !noalias !107
  %412 = getelementptr i16, i16* %404, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !110, !noalias !107
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %356, i64 %414
  %416 = getelementptr i16, i16* %348, i64 %414
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !107
  %419 = getelementptr i16, i16* %416, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !107
  %422 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !110, !noalias !107
  %423 = getelementptr i16, i16* %415, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !110, !noalias !107
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !112

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %356, i64 %432
  %435 = getelementptr i16, i16* %348, i64 %432
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !107
  %438 = getelementptr i16, i16* %435, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !107
  %441 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !110, !noalias !107
  %442 = getelementptr i16, i16* %434, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !110, !noalias !107
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !113

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %369, %447 ]
  %451 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %371, %447 ]
  %453 = add i64 %451, -1
  %454 = and i64 %451, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i16* [ %463, %456 ], [ %450, %449 ]
  %458 = phi i64 [ %462, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %464, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %457, align 2
  %462 = add i64 %458, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %459, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !114

467:                                              ; preds = %456, %449
  %468 = phi i16* [ %450, %449 ], [ %463, %456 ]
  %469 = phi i64 [ %451, %449 ], [ %462, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %464, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i16* [ %499, %472 ], [ %468, %467 ]
  %474 = phi i64 [ %498, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %500, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %473, align 2
  %477 = getelementptr inbounds i16, i16* %473, i64 1
  %478 = getelementptr inbounds i16, i16* %475, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %473, i64 2
  %481 = getelementptr inbounds i16, i16* %475, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %473, i64 3
  %484 = getelementptr inbounds i16, i16* %475, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %473, i64 4
  %487 = getelementptr inbounds i16, i16* %475, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %473, i64 5
  %490 = getelementptr inbounds i16, i16* %475, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %473, i64 6
  %493 = getelementptr inbounds i16, i16* %475, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %473, i64 7
  %496 = getelementptr inbounds i16, i16* %475, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %474, -8
  %499 = getelementptr inbounds i16, i16* %473, i64 8
  %500 = getelementptr inbounds i16, i16* %475, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !115

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #15
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #17
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #17
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #16
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = getelementptr i16, i16* %42, i64 %55
  %57 = sub i64 %4, %55
  %58 = getelementptr i16, i16* %24, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !116
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !116
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !119, !noalias !116
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !119, !noalias !116
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !116
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !116
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !119, !noalias !116
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !119, !noalias !116
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %24, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !116
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !116
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !119, !noalias !116
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !119, !noalias !116
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %24, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !116
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !116
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !119, !noalias !116
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !119, !noalias !116
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !121

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %24, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !116
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !116
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !119, !noalias !116
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !119, !noalias !116
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !122

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %56, %134 ]
  %138 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !123

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !124

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = getelementptr i16, i16* %192, i64 %195
  %197 = sub i64 %6, %195
  %198 = getelementptr i16, i16* %7, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %192, i64 %207
  %210 = getelementptr i16, i16* %7, i64 %207
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %210, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %209, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %192, i64 %219
  %221 = getelementptr i16, i16* %7, i64 %219
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %221, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %220, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %192, i64 %230
  %232 = getelementptr i16, i16* %7, i64 %230
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %232, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %231, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %192, i64 %241
  %243 = getelementptr i16, i16* %7, i64 %241
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %243, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %242, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !125

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %192, i64 %259
  %262 = getelementptr i16, i16* %7, i64 %259
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %262, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %261, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !126

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i16* [ %192, %191 ], [ %196, %274 ]
  %278 = phi i64 [ %6, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %7, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i16* [ %286, %280 ], [ %277, %276 ]
  %282 = phi i64 [ %285, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %287, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %281, align 2
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i16, i16* %281, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !127

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = getelementptr i16, i16* %295, i64 %314
  %316 = sub i64 %291, %314
  %317 = getelementptr i16, i16* %297, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %295, i64 %326
  %329 = getelementptr i16, i16* %297, i64 %326
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !129
  %332 = getelementptr i16, i16* %329, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !129
  %335 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !132, !noalias !129
  %336 = getelementptr i16, i16* %328, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !132, !noalias !129
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %295, i64 %338
  %340 = getelementptr i16, i16* %297, i64 %338
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !129
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !129
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !132, !noalias !129
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !132, !noalias !129
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %295, i64 %349
  %351 = getelementptr i16, i16* %297, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !129
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !129
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !132, !noalias !129
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !132, !noalias !129
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %295, i64 %360
  %362 = getelementptr i16, i16* %297, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !129
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !129
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !132, !noalias !129
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !132, !noalias !129
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !134

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %295, i64 %378
  %381 = getelementptr i16, i16* %297, i64 %378
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !129
  %384 = getelementptr i16, i16* %381, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !129
  %387 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !132, !noalias !129
  %388 = getelementptr i16, i16* %380, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !132, !noalias !129
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !135

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %315, %393 ]
  %397 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %317, %393 ]
  %399 = add i64 %397, -1
  %400 = and i64 %397, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i16* [ %409, %402 ], [ %396, %395 ]
  %404 = phi i64 [ %408, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %410, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %403, align 2
  %408 = add i64 %404, -1
  %409 = getelementptr inbounds i16, i16* %403, i64 1
  %410 = getelementptr inbounds i16, i16* %405, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !136

413:                                              ; preds = %402, %395
  %414 = phi i16* [ %396, %395 ], [ %409, %402 ]
  %415 = phi i64 [ %397, %395 ], [ %408, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %410, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i16* [ %445, %418 ], [ %414, %413 ]
  %420 = phi i64 [ %444, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %446, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %419, align 2
  %423 = getelementptr inbounds i16, i16* %419, i64 1
  %424 = getelementptr inbounds i16, i16* %421, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %419, i64 2
  %427 = getelementptr inbounds i16, i16* %421, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %419, i64 3
  %430 = getelementptr inbounds i16, i16* %421, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %419, i64 4
  %433 = getelementptr inbounds i16, i16* %421, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %419, i64 5
  %436 = getelementptr inbounds i16, i16* %421, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %419, i64 6
  %439 = getelementptr inbounds i16, i16* %421, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %419, i64 7
  %442 = getelementptr inbounds i16, i16* %421, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %420, -8
  %445 = getelementptr inbounds i16, i16* %419, i64 8
  %446 = getelementptr inbounds i16, i16* %421, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !137

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #16
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

declare void @_ZN8v8_crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.43"*) local_unnamed_addr #2

declare void @_ZN8v8_crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16*, i64, %"class.std::__1::vector.43"*) local_unnamed_addr #2

declare i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare i32 @_ZNK8v8_crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare double @_ZNK8v8_crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK8v8_crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.v8_crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %85

6:                                                ; preds = %2
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i16* %12, i16* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %84, label %20

20:                                               ; preds = %6
  %21 = shl nsw i64 %18, 1
  %22 = add i64 %21, -2
  %23 = lshr exact i64 %22, 1
  %24 = add nuw i64 %23, 1
  %25 = and i64 %24, 3
  %26 = icmp ult i64 %22, 6
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = sub i64 %24, %25
  br label %50

29:                                               ; preds = %50, %20
  %30 = phi i64 [ undef, %20 ], [ %80, %50 ]
  %31 = phi i64 [ 0, %20 ], [ %80, %50 ]
  %32 = phi i16* [ %17, %20 ], [ %81, %50 ]
  %33 = icmp eq i64 %25, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %43, %34 ], [ %31, %29 ]
  %36 = phi i16* [ %44, %34 ], [ %32, %29 ]
  %37 = phi i64 [ %45, %34 ], [ %25, %29 ]
  %38 = load i16, i16* %36, align 2
  %39 = zext i16 %38 to i64
  %40 = mul i64 %35, 31
  %41 = shl i64 %39, 56
  %42 = ashr exact i64 %41, 56
  %43 = add i64 %42, %40
  store i64 %43, i64* %3, align 8
  %44 = getelementptr inbounds i16, i16* %36, i64 1
  %45 = add i64 %37, -1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %34, !llvm.loop !138

47:                                               ; preds = %34, %29
  %48 = phi i64 [ %30, %29 ], [ %43, %34 ]
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %84, label %85

50:                                               ; preds = %50, %27
  %51 = phi i64 [ 0, %27 ], [ %80, %50 ]
  %52 = phi i16* [ %17, %27 ], [ %81, %50 ]
  %53 = phi i64 [ %28, %27 ], [ %82, %50 ]
  %54 = load i16, i16* %52, align 2
  %55 = zext i16 %54 to i64
  %56 = mul i64 %51, 31
  %57 = shl i64 %55, 56
  %58 = ashr exact i64 %57, 56
  %59 = add i64 %58, %56
  store i64 %59, i64* %3, align 8
  %60 = getelementptr inbounds i16, i16* %52, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i64
  %63 = mul i64 %59, 31
  %64 = shl i64 %62, 56
  %65 = ashr exact i64 %64, 56
  %66 = add i64 %65, %63
  store i64 %66, i64* %3, align 8
  %67 = getelementptr inbounds i16, i16* %52, i64 2
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i64
  %70 = mul i64 %66, 31
  %71 = shl i64 %69, 56
  %72 = ashr exact i64 %71, 56
  %73 = add i64 %72, %70
  store i64 %73, i64* %3, align 8
  %74 = getelementptr inbounds i16, i16* %52, i64 3
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i64
  %77 = mul i64 %73, 31
  %78 = shl i64 %76, 56
  %79 = ashr exact i64 %78, 56
  %80 = add i64 %79, %77
  store i64 %80, i64* %3, align 8
  %81 = getelementptr inbounds i16, i16* %52, i64 4
  %82 = add i64 %53, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %29, label %50

84:                                               ; preds = %47, %6
  store i64 1, i64* %3, align 8
  br label %85

85:                                               ; preds = %2, %47, %84
  %86 = phi i64 [ %48, %47 ], [ %4, %2 ], [ 1, %84 ]
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %216, label %90

90:                                               ; preds = %85
  %91 = tail call i64 @llvm.ctpop.i64(i64 %88) #15, !range !139
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = add i64 %88, -1
  %95 = and i64 %94, %86
  br label %100

96:                                               ; preds = %90
  %97 = icmp ult i64 %86, %88
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %86, %88
  br label %100

100:                                              ; preds = %93, %96, %98
  %101 = phi i64 [ %95, %93 ], [ %99, %98 ], [ %86, %96 ]
  %102 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %101
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %216, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %216, label %111

111:                                              ; preds = %107
  %112 = add i64 %88, -1
  %113 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i16*, i16** %121, align 8
  %123 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %124 = select i1 %116, i16* %122, i16* %123
  %125 = icmp eq i64 %120, 0
  br i1 %92, label %126, label %173

126:                                              ; preds = %111, %164
  %127 = phi %"struct.std::__1::__hash_node_base"* [ %166, %164 ], [ %109, %111 ]
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 1
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, %86
  br i1 %131, label %139, label %132

132:                                              ; preds = %126
  %133 = icmp ult i64 %130, %88
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %130, %88
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %135, %134 ], [ %130, %132 ]
  %138 = icmp eq i64 %137, %101
  br i1 %138, label %164, label %216

139:                                              ; preds = %126
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 3
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = zext i8 %143 to i64
  %149 = select i1 %144, i64 %147, i64 %148
  %150 = icmp eq i64 %149, %120
  br i1 %150, label %151, label %164

151:                                              ; preds = %139
  br i1 %125, label %216, label %152

152:                                              ; preds = %151
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i16**
  %154 = load i16*, i16** %153, align 8
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i16*
  %156 = select i1 %144, i16* %154, i16* %155
  br label %157

157:                                              ; preds = %168, %152
  %158 = phi i64 [ %169, %168 ], [ %120, %152 ]
  %159 = phi i16* [ %171, %168 ], [ %124, %152 ]
  %160 = phi i16* [ %170, %168 ], [ %156, %152 ]
  %161 = load i16, i16* %160, align 2
  %162 = load i16, i16* %159, align 2
  %163 = icmp eq i16 %162, %161
  br i1 %163, label %168, label %164

164:                                              ; preds = %157, %139, %136
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base"* %166, null
  br i1 %167, label %216, label %126

168:                                              ; preds = %157
  %169 = add i64 %158, -1
  %170 = getelementptr inbounds i16, i16* %160, i64 1
  %171 = getelementptr inbounds i16, i16* %159, i64 1
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %216, label %157

173:                                              ; preds = %111, %212
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %214, %212 ], [ %109, %111 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, %86
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = and i64 %177, %112
  %181 = icmp eq i64 %180, %101
  br i1 %181, label %212, label %216

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 2
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %183 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 3
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %186 to i64
  %192 = select i1 %187, i64 %190, i64 %191
  %193 = icmp eq i64 %192, %120
  br i1 %193, label %194, label %212

194:                                              ; preds = %182
  br i1 %125, label %216, label %195

195:                                              ; preds = %194
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i16**
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i16*
  %199 = select i1 %187, i16* %197, i16* %198
  br label %200

200:                                              ; preds = %207, %195
  %201 = phi i64 [ %208, %207 ], [ %120, %195 ]
  %202 = phi i16* [ %210, %207 ], [ %124, %195 ]
  %203 = phi i16* [ %209, %207 ], [ %199, %195 ]
  %204 = load i16, i16* %203, align 2
  %205 = load i16, i16* %202, align 2
  %206 = icmp eq i16 %205, %204
  br i1 %206, label %207, label %212

207:                                              ; preds = %200
  %208 = add i64 %201, -1
  %209 = getelementptr inbounds i16, i16* %203, i64 1
  %210 = getelementptr inbounds i16, i16* %202, i64 1
  %211 = icmp eq i64 %208, 0
  br i1 %211, label %216, label %200

212:                                              ; preds = %200, %182, %179
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %213, align 8
  %215 = icmp eq %"struct.std::__1::__hash_node_base"* %214, null
  br i1 %215, label %216, label %173

216:                                              ; preds = %194, %212, %179, %207, %151, %164, %136, %168, %107, %85, %100
  %217 = phi %"struct.std::__1::__hash_node_base"* [ null, %100 ], [ null, %85 ], [ null, %107 ], [ %127, %168 ], [ %127, %151 ], [ null, %164 ], [ null, %136 ], [ %174, %207 ], [ %174, %194 ], [ null, %212 ], [ null, %179 ]
  ret %"struct.std::__1::__hash_node_base"* %217
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8_inspector::String16"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.132"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %88

9:                                                ; preds = %5
  %10 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i16* %15, i16* %18
  %21 = select i1 %13, i64 %17, i64 %19
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %87, label %23

23:                                               ; preds = %9
  %24 = shl nsw i64 %21, 1
  %25 = add i64 %24, -2
  %26 = lshr exact i64 %25, 1
  %27 = add nuw i64 %26, 1
  %28 = and i64 %27, 3
  %29 = icmp ult i64 %25, 6
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = sub i64 %27, %28
  br label %53

32:                                               ; preds = %53, %23
  %33 = phi i64 [ undef, %23 ], [ %83, %53 ]
  %34 = phi i64 [ 0, %23 ], [ %83, %53 ]
  %35 = phi i16* [ %20, %23 ], [ %84, %53 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i16* [ %47, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %48, %37 ], [ %28, %32 ]
  %41 = load i16, i16* %39, align 2
  %42 = zext i16 %41 to i64
  %43 = mul i64 %38, 31
  %44 = shl i64 %42, 56
  %45 = ashr exact i64 %44, 56
  %46 = add i64 %45, %43
  store i64 %46, i64* %6, align 8
  %47 = getelementptr inbounds i16, i16* %39, i64 1
  %48 = add i64 %40, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %37, !llvm.loop !140

50:                                               ; preds = %37, %32
  %51 = phi i64 [ %33, %32 ], [ %46, %37 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %87, label %88

53:                                               ; preds = %53, %30
  %54 = phi i64 [ 0, %30 ], [ %83, %53 ]
  %55 = phi i16* [ %20, %30 ], [ %84, %53 ]
  %56 = phi i64 [ %31, %30 ], [ %85, %53 ]
  %57 = load i16, i16* %55, align 2
  %58 = zext i16 %57 to i64
  %59 = mul i64 %54, 31
  %60 = shl i64 %58, 56
  %61 = ashr exact i64 %60, 56
  %62 = add i64 %61, %59
  store i64 %62, i64* %6, align 8
  %63 = getelementptr inbounds i16, i16* %55, i64 1
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i64
  %66 = mul i64 %62, 31
  %67 = shl i64 %65, 56
  %68 = ashr exact i64 %67, 56
  %69 = add i64 %68, %66
  store i64 %69, i64* %6, align 8
  %70 = getelementptr inbounds i16, i16* %55, i64 2
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i64
  %73 = mul i64 %69, 31
  %74 = shl i64 %72, 56
  %75 = ashr exact i64 %74, 56
  %76 = add i64 %75, %73
  store i64 %76, i64* %6, align 8
  %77 = getelementptr inbounds i16, i16* %55, i64 3
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i64
  %80 = mul i64 %76, 31
  %81 = shl i64 %79, 56
  %82 = ashr exact i64 %81, 56
  %83 = add i64 %82, %80
  store i64 %83, i64* %6, align 8
  %84 = getelementptr inbounds i16, i16* %55, i64 4
  %85 = add i64 %56, -4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %32, label %53

87:                                               ; preds = %50, %9
  store i64 1, i64* %6, align 8
  br label %88

88:                                               ; preds = %5, %50, %87
  %89 = phi i64 [ %51, %50 ], [ %7, %5 ], [ 1, %87 ]
  %90 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %219, label %93

93:                                               ; preds = %88
  %94 = tail call i64 @llvm.ctpop.i64(i64 %91) #15, !range !139
  %95 = icmp ugt i64 %94, 1
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = add i64 %91, -1
  %98 = and i64 %97, %89
  br label %103

99:                                               ; preds = %93
  %100 = icmp ult i64 %89, %91
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = urem i64 %89, %91
  br label %103

103:                                              ; preds = %96, %99, %101
  %104 = phi i64 [ %98, %96 ], [ %102, %101 ], [ %89, %99 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %219, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %113, label %219, label %114

114:                                              ; preds = %110
  %115 = add i64 %91, -1
  %116 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = zext i8 %118 to i64
  %123 = select i1 %119, i64 %121, i64 %122
  %124 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %127 = select i1 %119, i16* %125, i16* %126
  %128 = icmp eq i64 %123, 0
  br i1 %95, label %129, label %176

129:                                              ; preds = %114, %167
  %130 = phi %"struct.std::__1::__hash_node_base"* [ %169, %167 ], [ %112, %114 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, %89
  br i1 %134, label %142, label %135

135:                                              ; preds = %129
  %136 = icmp ult i64 %133, %91
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %133, %91
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i64 [ %138, %137 ], [ %133, %135 ]
  %141 = icmp eq i64 %140, %104
  br i1 %141, label %142, label %219

142:                                              ; preds = %139, %129
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 2
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %143 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %144, i64 0, i32 1, i32 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 3
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = zext i8 %146 to i64
  %152 = select i1 %147, i64 %150, i64 %151
  %153 = icmp eq i64 %152, %123
  br i1 %153, label %154, label %167

154:                                              ; preds = %142
  br i1 %128, label %498, label %155

155:                                              ; preds = %154
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %143 to i16**
  %157 = load i16*, i16** %156, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %143 to i16*
  %159 = select i1 %147, i16* %157, i16* %158
  br label %160

160:                                              ; preds = %171, %155
  %161 = phi i64 [ %172, %171 ], [ %123, %155 ]
  %162 = phi i16* [ %174, %171 ], [ %127, %155 ]
  %163 = phi i16* [ %173, %171 ], [ %159, %155 ]
  %164 = load i16, i16* %163, align 2
  %165 = load i16, i16* %162, align 2
  %166 = icmp eq i16 %165, %164
  br i1 %166, label %171, label %167

167:                                              ; preds = %160, %142
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base"* %169, null
  br i1 %170, label %219, label %129

171:                                              ; preds = %160
  %172 = add i64 %161, -1
  %173 = getelementptr inbounds i16, i16* %163, i64 1
  %174 = getelementptr inbounds i16, i16* %162, i64 1
  %175 = icmp eq i64 %172, 0
  br i1 %175, label %498, label %160

176:                                              ; preds = %114, %215
  %177 = phi %"struct.std::__1::__hash_node_base"* [ %217, %215 ], [ %112, %114 ]
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 1
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, %89
  %182 = and i64 %180, %115
  %183 = icmp eq i64 %182, %104
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %219

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 2
  %187 = bitcast %"struct.std::__1::__hash_node_base"* %186 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %187, i64 0, i32 1, i32 1
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 3
  %192 = bitcast %"struct.std::__1::__hash_node_base"* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = zext i8 %189 to i64
  %195 = select i1 %190, i64 %193, i64 %194
  %196 = icmp eq i64 %195, %123
  br i1 %196, label %197, label %215

197:                                              ; preds = %185
  br i1 %128, label %498, label %198

198:                                              ; preds = %197
  %199 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i16**
  %200 = load i16*, i16** %199, align 8
  %201 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i16*
  %202 = select i1 %190, i16* %200, i16* %201
  br label %203

203:                                              ; preds = %210, %198
  %204 = phi i64 [ %211, %210 ], [ %123, %198 ]
  %205 = phi i16* [ %213, %210 ], [ %127, %198 ]
  %206 = phi i16* [ %212, %210 ], [ %202, %198 ]
  %207 = load i16, i16* %206, align 2
  %208 = load i16, i16* %205, align 2
  %209 = icmp eq i16 %208, %207
  br i1 %209, label %210, label %215

210:                                              ; preds = %203
  %211 = add i64 %204, -1
  %212 = getelementptr inbounds i16, i16* %206, i64 1
  %213 = getelementptr inbounds i16, i16* %205, i64 1
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %498, label %203

215:                                              ; preds = %203, %185
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base"* %217, null
  br i1 %218, label %219, label %176

219:                                              ; preds = %176, %215, %139, %167, %110, %103, %88
  %220 = phi i64 [ %104, %103 ], [ undef, %88 ], [ %104, %110 ], [ %104, %167 ], [ %104, %139 ], [ %104, %215 ], [ %104, %176 ]
  %221 = tail call i8* @_Znwm(i64 56) #16, !noalias !141
  %222 = getelementptr inbounds i8, i8* %221, i64 16
  %223 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %223, align 8, !noalias !141
  %225 = bitcast %"class.v8_inspector::String16"* %224 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %225, i64 0, i32 1, i32 1
  %227 = load i8, i8* %226, align 1, !noalias !141
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %219
  %230 = bitcast %"class.v8_inspector::String16"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %230, i64 24, i1 false) #15, !noalias !141
  br label %410

231:                                              ; preds = %219
  %232 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i16*, i16** %232, align 8, !noalias !141
  %234 = bitcast i16* %233 to i8*
  %235 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %236 = load i64, i64* %235, align 8, !noalias !141
  %237 = icmp ult i64 %236, 11
  br i1 %237, label %238, label %241

238:                                              ; preds = %231
  %239 = trunc i64 %236 to i8
  %240 = getelementptr inbounds i8, i8* %221, i64 39
  store i8 %239, i8* %240, align 1, !noalias !141
  br label %259

241:                                              ; preds = %231
  %242 = icmp ugt i64 %236, 9223372036854775791
  br i1 %242, label %243, label %245

243:                                              ; preds = %241
  %244 = bitcast i8* %222 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %244) #17, !noalias !141
  unreachable

245:                                              ; preds = %241
  %246 = add nuw nsw i64 %236, 8
  %247 = and i64 %246, -8
  %248 = icmp slt i64 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %245
  tail call void @abort() #17, !noalias !141
  unreachable

250:                                              ; preds = %245
  %251 = shl i64 %247, 1
  %252 = tail call i8* @_Znwm(i64 %251) #16, !noalias !141
  %253 = bitcast i8* %222 to i8**
  store i8* %252, i8** %253, align 8, !noalias !141
  %254 = or i64 %247, -9223372036854775808
  %255 = getelementptr inbounds i8, i8* %221, i64 32
  %256 = bitcast i8* %255 to i64*
  store i64 %254, i64* %256, align 8, !noalias !141
  %257 = getelementptr inbounds i8, i8* %221, i64 24
  %258 = bitcast i8* %257 to i64*
  store i64 %236, i64* %258, align 8, !noalias !141
  br label %259

259:                                              ; preds = %250, %238
  %260 = phi i8* [ %222, %238 ], [ %252, %250 ]
  %261 = bitcast i8* %260 to i16*
  %262 = add nuw nsw i64 %236, 1
  %263 = add i64 %236, 1
  %264 = icmp ult i64 %263, 16
  br i1 %264, label %357, label %265

265:                                              ; preds = %259
  %266 = shl i64 %236, 1
  %267 = add i64 %266, 2
  %268 = getelementptr i8, i8* %260, i64 %267
  %269 = add i64 %236, 1
  %270 = getelementptr i16, i16* %233, i64 %269
  %271 = bitcast i16* %270 to i8*
  %272 = icmp ult i8* %260, %271
  %273 = icmp ugt i8* %268, %234
  %274 = and i1 %272, %273
  br i1 %274, label %357, label %275

275:                                              ; preds = %265
  %276 = and i64 %263, -16
  %277 = getelementptr i16, i16* %261, i64 %276
  %278 = sub i64 %262, %276
  %279 = getelementptr i16, i16* %233, i64 %276
  %280 = add i64 %276, -16
  %281 = lshr exact i64 %280, 4
  %282 = add nuw nsw i64 %281, 1
  %283 = and i64 %282, 3
  %284 = icmp ult i64 %280, 48
  br i1 %284, label %336, label %285

285:                                              ; preds = %275
  %286 = sub nsw i64 %282, %283
  br label %287

287:                                              ; preds = %287, %285
  %288 = phi i64 [ 0, %285 ], [ %333, %287 ]
  %289 = phi i64 [ %286, %285 ], [ %334, %287 ]
  %290 = getelementptr i16, i16* %261, i64 %288
  %291 = getelementptr i16, i16* %233, i64 %288
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !144, !noalias !141
  %294 = getelementptr i16, i16* %291, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !144, !noalias !141
  %297 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %297, align 2, !alias.scope !147, !noalias !149
  %298 = getelementptr i16, i16* %290, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %299, align 2, !alias.scope !147, !noalias !149
  %300 = or i64 %288, 16
  %301 = getelementptr i16, i16* %261, i64 %300
  %302 = getelementptr i16, i16* %233, i64 %300
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !144, !noalias !141
  %305 = getelementptr i16, i16* %302, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !144, !noalias !141
  %308 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !147, !noalias !149
  %309 = getelementptr i16, i16* %301, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !147, !noalias !149
  %311 = or i64 %288, 32
  %312 = getelementptr i16, i16* %261, i64 %311
  %313 = getelementptr i16, i16* %233, i64 %311
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !144, !noalias !141
  %316 = getelementptr i16, i16* %313, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !144, !noalias !141
  %319 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %319, align 2, !alias.scope !147, !noalias !149
  %320 = getelementptr i16, i16* %312, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %321, align 2, !alias.scope !147, !noalias !149
  %322 = or i64 %288, 48
  %323 = getelementptr i16, i16* %261, i64 %322
  %324 = getelementptr i16, i16* %233, i64 %322
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !144, !noalias !141
  %327 = getelementptr i16, i16* %324, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !144, !noalias !141
  %330 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !147, !noalias !149
  %331 = getelementptr i16, i16* %323, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !147, !noalias !149
  %333 = add i64 %288, 64
  %334 = add i64 %289, -4
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %287, !llvm.loop !150

336:                                              ; preds = %287, %275
  %337 = phi i64 [ 0, %275 ], [ %333, %287 ]
  %338 = icmp eq i64 %283, 0
  br i1 %338, label %355, label %339

339:                                              ; preds = %336, %339
  %340 = phi i64 [ %352, %339 ], [ %337, %336 ]
  %341 = phi i64 [ %353, %339 ], [ %283, %336 ]
  %342 = getelementptr i16, i16* %261, i64 %340
  %343 = getelementptr i16, i16* %233, i64 %340
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !144, !noalias !141
  %346 = getelementptr i16, i16* %343, i64 8
  %347 = bitcast i16* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !144, !noalias !141
  %349 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %349, align 2, !alias.scope !147, !noalias !149
  %350 = getelementptr i16, i16* %342, i64 8
  %351 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %348, <8 x i16>* %351, align 2, !alias.scope !147, !noalias !149
  %352 = add i64 %340, 16
  %353 = add i64 %341, -1
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %339, !llvm.loop !151

355:                                              ; preds = %339, %336
  %356 = icmp eq i64 %263, %276
  br i1 %356, label %410, label %357

357:                                              ; preds = %355, %265, %259
  %358 = phi i16* [ %261, %265 ], [ %261, %259 ], [ %277, %355 ]
  %359 = phi i64 [ %262, %265 ], [ %262, %259 ], [ %278, %355 ]
  %360 = phi i16* [ %233, %265 ], [ %233, %259 ], [ %279, %355 ]
  %361 = add i64 %359, -1
  %362 = and i64 %359, 7
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %375, label %364

364:                                              ; preds = %357, %364
  %365 = phi i16* [ %371, %364 ], [ %358, %357 ]
  %366 = phi i64 [ %370, %364 ], [ %359, %357 ]
  %367 = phi i16* [ %372, %364 ], [ %360, %357 ]
  %368 = phi i64 [ %373, %364 ], [ %362, %357 ]
  %369 = load i16, i16* %367, align 2, !noalias !141
  store i16 %369, i16* %365, align 2, !noalias !141
  %370 = add i64 %366, -1
  %371 = getelementptr inbounds i16, i16* %365, i64 1
  %372 = getelementptr inbounds i16, i16* %367, i64 1
  %373 = add i64 %368, -1
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %364, !llvm.loop !152

375:                                              ; preds = %364, %357
  %376 = phi i16* [ %358, %357 ], [ %371, %364 ]
  %377 = phi i64 [ %359, %357 ], [ %370, %364 ]
  %378 = phi i16* [ %360, %357 ], [ %372, %364 ]
  %379 = icmp ult i64 %361, 7
  br i1 %379, label %410, label %380

380:                                              ; preds = %375, %380
  %381 = phi i16* [ %407, %380 ], [ %376, %375 ]
  %382 = phi i64 [ %406, %380 ], [ %377, %375 ]
  %383 = phi i16* [ %408, %380 ], [ %378, %375 ]
  %384 = load i16, i16* %383, align 2, !noalias !141
  store i16 %384, i16* %381, align 2, !noalias !141
  %385 = getelementptr inbounds i16, i16* %381, i64 1
  %386 = getelementptr inbounds i16, i16* %383, i64 1
  %387 = load i16, i16* %386, align 2, !noalias !141
  store i16 %387, i16* %385, align 2, !noalias !141
  %388 = getelementptr inbounds i16, i16* %381, i64 2
  %389 = getelementptr inbounds i16, i16* %383, i64 2
  %390 = load i16, i16* %389, align 2, !noalias !141
  store i16 %390, i16* %388, align 2, !noalias !141
  %391 = getelementptr inbounds i16, i16* %381, i64 3
  %392 = getelementptr inbounds i16, i16* %383, i64 3
  %393 = load i16, i16* %392, align 2, !noalias !141
  store i16 %393, i16* %391, align 2, !noalias !141
  %394 = getelementptr inbounds i16, i16* %381, i64 4
  %395 = getelementptr inbounds i16, i16* %383, i64 4
  %396 = load i16, i16* %395, align 2, !noalias !141
  store i16 %396, i16* %394, align 2, !noalias !141
  %397 = getelementptr inbounds i16, i16* %381, i64 5
  %398 = getelementptr inbounds i16, i16* %383, i64 5
  %399 = load i16, i16* %398, align 2, !noalias !141
  store i16 %399, i16* %397, align 2, !noalias !141
  %400 = getelementptr inbounds i16, i16* %381, i64 6
  %401 = getelementptr inbounds i16, i16* %383, i64 6
  %402 = load i16, i16* %401, align 2, !noalias !141
  store i16 %402, i16* %400, align 2, !noalias !141
  %403 = getelementptr inbounds i16, i16* %381, i64 7
  %404 = getelementptr inbounds i16, i16* %383, i64 7
  %405 = load i16, i16* %404, align 2, !noalias !141
  store i16 %405, i16* %403, align 2, !noalias !141
  %406 = add i64 %382, -8
  %407 = getelementptr inbounds i16, i16* %381, i64 8
  %408 = getelementptr inbounds i16, i16* %383, i64 8
  %409 = icmp eq i64 %406, 0
  br i1 %409, label %410, label %380, !llvm.loop !153

410:                                              ; preds = %375, %380, %355, %229
  %411 = getelementptr inbounds i8, i8* %221, i64 40
  %412 = bitcast i8* %411 to i64*
  %413 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %224, i64 0, i32 1
  %414 = load i64, i64* %413, align 8, !noalias !141
  store i64 %414, i64* %412, align 8, !noalias !141
  %415 = getelementptr inbounds i8, i8* %221, i64 48
  %416 = bitcast i8* %415 to i64*
  store i64 0, i64* %416, align 8, !noalias !141
  %417 = getelementptr inbounds i8, i8* %221, i64 8
  %418 = bitcast i8* %417 to i64*
  store i64 %89, i64* %418, align 8, !noalias !141
  %419 = bitcast i8* %221 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %419, align 8, !noalias !141
  %420 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %421 = load i64, i64* %420, align 8
  %422 = add i64 %421, 1
  %423 = uitofp i64 %422 to float
  %424 = uitofp i64 %91 to float
  %425 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %426 = load float, float* %425, align 4
  %427 = fmul float %426, %424
  %428 = fcmp olt float %427, %423
  %429 = or i1 %92, %428
  br i1 %429, label %430, label %453

430:                                              ; preds = %410
  %431 = shl i64 %91, 1
  %432 = icmp ult i64 %91, 3
  %433 = tail call i64 @llvm.ctpop.i64(i64 %91) #15, !range !139
  %434 = icmp ugt i64 %433, 1
  %435 = or i1 %432, %434
  %436 = zext i1 %435 to i64
  %437 = or i64 %431, %436
  %438 = fdiv float %423, %426
  %439 = tail call float @llvm.ceil.f32(float %438) #15
  %440 = fptoui float %439 to i64
  %441 = icmp ult i64 %437, %440
  %442 = select i1 %441, i64 %440, i64 %437
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %442)
  %443 = load i64, i64* %90, align 8
  %444 = tail call i64 @llvm.ctpop.i64(i64 %443) #15, !range !139
  %445 = icmp ugt i64 %444, 1
  br i1 %445, label %449, label %446

446:                                              ; preds = %430
  %447 = add i64 %443, -1
  %448 = and i64 %447, %89
  br label %453

449:                                              ; preds = %430
  %450 = icmp ult i64 %89, %443
  br i1 %450, label %453, label %451

451:                                              ; preds = %449
  %452 = urem i64 %89, %443
  br label %453

453:                                              ; preds = %451, %449, %446, %410
  %454 = phi i64 [ %91, %410 ], [ %443, %446 ], [ %443, %449 ], [ %443, %451 ]
  %455 = phi i64 [ %220, %410 ], [ %448, %446 ], [ %89, %449 ], [ %452, %451 ]
  %456 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %457 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %456, align 8
  %458 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %457, i64 %455
  %459 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %458, align 8
  %460 = icmp eq %"struct.std::__1::__hash_node_base"* %459, null
  br i1 %460, label %461, label %487

461:                                              ; preds = %453
  %462 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %463 = bitcast %"struct.std::__1::__hash_node_base"* %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = bitcast i8* %221 to i64*
  store i64 %464, i64* %465, align 8
  %466 = bitcast %"struct.std::__1::__hash_node_base"* %462 to i8**
  store i8* %221, i8** %466, align 8
  store %"struct.std::__1::__hash_node_base"* %462, %"struct.std::__1::__hash_node_base"** %458, align 8
  %467 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %419, align 8
  %468 = icmp eq %"struct.std::__1::__hash_node_base"* %467, null
  br i1 %468, label %494, label %469

469:                                              ; preds = %461
  %470 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %467, i64 1
  %471 = bitcast %"struct.std::__1::__hash_node_base"* %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = tail call i64 @llvm.ctpop.i64(i64 %454) #15, !range !139
  %474 = icmp ugt i64 %473, 1
  br i1 %474, label %478, label %475

475:                                              ; preds = %469
  %476 = add i64 %454, -1
  %477 = and i64 %472, %476
  br label %482

478:                                              ; preds = %469
  %479 = icmp ult i64 %472, %454
  br i1 %479, label %482, label %480

480:                                              ; preds = %478
  %481 = urem i64 %472, %454
  br label %482

482:                                              ; preds = %475, %478, %480
  %483 = phi i64 [ %477, %475 ], [ %481, %480 ], [ %472, %478 ]
  %484 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %456, align 8
  %485 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %484, i64 %483
  %486 = bitcast %"struct.std::__1::__hash_node_base"** %485 to i8**
  br label %492

487:                                              ; preds = %453
  %488 = bitcast %"struct.std::__1::__hash_node_base"* %459 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = bitcast i8* %221 to i64*
  store i64 %489, i64* %490, align 8
  %491 = bitcast %"struct.std::__1::__hash_node_base"* %459 to i8**
  br label %492

492:                                              ; preds = %482, %487
  %493 = phi i8** [ %491, %487 ], [ %486, %482 ]
  store i8* %221, i8** %493, align 8
  br label %494

494:                                              ; preds = %492, %461
  %495 = bitcast i8* %221 to %"struct.std::__1::__hash_node_base"*
  %496 = load i64, i64* %420, align 8
  %497 = add i64 %496, 1
  store i64 %497, i64* %420, align 8
  br label %498

498:                                              ; preds = %197, %210, %154, %171, %494
  %499 = phi i8 [ 1, %494 ], [ 0, %171 ], [ 0, %154 ], [ 0, %210 ], [ 0, %197 ]
  %500 = phi %"struct.std::__1::__hash_node_base"* [ %495, %494 ], [ %130, %171 ], [ %130, %154 ], [ %177, %210 ], [ %177, %197 ]
  %501 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %500, 0
  %502 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %501, i8 %499, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %502
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !139
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !139
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !139
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %240, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !154

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %248, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !139
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %248, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %234
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %238, %234 ]
  %81 = phi i64 [ %71, %77 ], [ %236, %234 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %235, %234 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %234, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %184, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %220, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16**
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16*
  br i1 %115, label %118, label %147

118:                                              ; preds = %104
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %120, i64 0, i32 1, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %122 to i64
  %128 = select i1 %123, i64 %126, i64 %127
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %142, label %220

130:                                              ; preds = %142
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %145, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %132, i64 0, i32 1, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %145, i64 3
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %134 to i64
  %140 = select i1 %135, i64 %138, i64 %139
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %220

142:                                              ; preds = %118, %130
  %143 = phi %"struct.std::__1::__hash_node_base"* [ %145, %130 ], [ %102, %118 ]
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base"* %145, null
  br i1 %146, label %220, label %130

147:                                              ; preds = %104
  br i1 %109, label %148, label %185

148:                                              ; preds = %147, %180
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %182, %180 ], [ %102, %147 ]
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %149, %180 ], [ %80, %147 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %149, i64 2
  %152 = bitcast %"struct.std::__1::__hash_node_base"* %151 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %149, i64 3
  %157 = bitcast %"struct.std::__1::__hash_node_base"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = zext i8 %154 to i64
  %160 = select i1 %155, i64 %158, i64 %159
  %161 = icmp eq i64 %114, %160
  br i1 %161, label %162, label %220

162:                                              ; preds = %148
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %151 to i16**
  %164 = load i16*, i16** %163, align 8
  %165 = bitcast %"struct.std::__1::__hash_node_base"* %151 to i16*
  %166 = select i1 %155, i16* %164, i16* %165
  %167 = load i16*, i16** %116, align 8
  br label %168

168:                                              ; preds = %175, %162
  %169 = phi i64 [ %176, %175 ], [ %114, %162 ]
  %170 = phi i16* [ %178, %175 ], [ %166, %162 ]
  %171 = phi i16* [ %177, %175 ], [ %167, %162 ]
  %172 = load i16, i16* %171, align 2
  %173 = load i16, i16* %170, align 2
  %174 = icmp eq i16 %173, %172
  br i1 %174, label %175, label %220

175:                                              ; preds = %168
  %176 = add i64 %169, -1
  %177 = getelementptr inbounds i16, i16* %171, i64 1
  %178 = getelementptr inbounds i16, i16* %170, i64 1
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %180, label %168

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %149, i64 0, i32 0
  %182 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %181, align 8
  %183 = icmp eq %"struct.std::__1::__hash_node_base"* %182, null
  br i1 %183, label %220, label %148

184:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %234

185:                                              ; preds = %147, %216
  %186 = phi %"struct.std::__1::__hash_node_base"* [ %218, %216 ], [ %102, %147 ]
  %187 = phi %"struct.std::__1::__hash_node_base"* [ %186, %216 ], [ %80, %147 ]
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %186, i64 2
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %189, i64 0, i32 1, i32 1
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %186, i64 3
  %194 = bitcast %"struct.std::__1::__hash_node_base"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = zext i8 %191 to i64
  %197 = select i1 %192, i64 %195, i64 %196
  %198 = icmp eq i64 %114, %197
  br i1 %198, label %199, label %220

199:                                              ; preds = %185
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i16**
  %201 = load i16*, i16** %200, align 8
  %202 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i16*
  %203 = select i1 %192, i16* %201, i16* %202
  br label %204

204:                                              ; preds = %211, %199
  %205 = phi i64 [ %212, %211 ], [ %114, %199 ]
  %206 = phi i16* [ %214, %211 ], [ %203, %199 ]
  %207 = phi i16* [ %213, %211 ], [ %117, %199 ]
  %208 = load i16, i16* %207, align 2
  %209 = load i16, i16* %206, align 2
  %210 = icmp eq i16 %209, %208
  br i1 %210, label %211, label %220

211:                                              ; preds = %204
  %212 = add i64 %205, -1
  %213 = getelementptr inbounds i16, i16* %207, i64 1
  %214 = getelementptr inbounds i16, i16* %206, i64 1
  %215 = icmp eq i64 %212, 0
  br i1 %215, label %216, label %204

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %186, i64 0, i32 0
  %218 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %217, align 8
  %219 = icmp eq %"struct.std::__1::__hash_node_base"* %218, null
  br i1 %219, label %220, label %185

220:                                              ; preds = %216, %185, %180, %148, %130, %142, %204, %168, %118, %100
  %221 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %118 ], [ %150, %168 ], [ %187, %204 ], [ %143, %142 ], [ %143, %130 ], [ %149, %180 ], [ %150, %148 ], [ %186, %216 ], [ %187, %185 ]
  %222 = bitcast %"struct.std::__1::__hash_node_base"* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %223, i64* %224, align 8
  %225 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %225, i64 %93
  %227 = bitcast %"struct.std::__1::__hash_node_base"** %226 to i64**
  %228 = load i64*, i64** %227, align 8
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %222, align 8
  %230 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %230, i64 %93
  %232 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %231, align 8
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %232, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %233, align 8
  br label %234

234:                                              ; preds = %92, %220, %184
  %235 = phi %"struct.std::__1::__hash_node_base"* [ %80, %184 ], [ %82, %220 ], [ %80, %92 ]
  %236 = phi i64 [ %93, %184 ], [ %81, %220 ], [ %81, %92 ]
  %237 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %235, i64 0, i32 0
  %238 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %237, align 8
  %239 = icmp eq %"struct.std::__1::__hash_node_base"* %238, null
  br i1 %239, label %248, label %79

240:                                              ; preds = %2
  %241 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %241, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %241, align 8
  %243 = icmp eq %"struct.std::__1::__hash_node_base"** %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = bitcast %"struct.std::__1::__hash_node_base"** %242 to i8*
  tail call void @_ZdlPv(i8* %245) #16
  br label %246

246:                                              ; preds = %240, %244
  %247 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %247, align 8
  br label %248

248:                                              ; preds = %234, %70, %35, %246
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12v8_inspector8String16ENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8_inspector::String16"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8_inspector::String16"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.v8_inspector::String16"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %35
  %39 = ptrtoint %"class.v8_inspector::String16"* %38 to i64
  %40 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = bitcast %"class.v8_inspector::String16"* %37 to i8*
  %46 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #15
  br label %222

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, 11
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = bitcast %"class.v8_inspector::String16"* %37 to i16*
  %55 = trunc i64 %51 to i8
  %56 = bitcast %"class.v8_inspector::String16"* %37 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  store i8 %55, i8* %57, align 1
  br label %75

58:                                               ; preds = %47
  %59 = icmp ugt i64 %51, 9223372036854775791
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = bitcast %"class.v8_inspector::String16"* %37 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %61) #17
  unreachable

62:                                               ; preds = %58
  %63 = add nuw nsw i64 %51, 8
  %64 = and i64 %63, -8
  %65 = icmp slt i64 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  tail call void @abort() #17
  unreachable

67:                                               ; preds = %62
  %68 = shl i64 %64, 1
  %69 = tail call i8* @_Znwm(i64 %68) #16
  %70 = bitcast i8* %69 to i16*
  %71 = bitcast %"class.v8_inspector::String16"* %37 to i8**
  store i8* %69, i8** %71, align 8
  %72 = or i64 %64, -9223372036854775808
  %73 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %74, align 8
  br label %75

75:                                               ; preds = %67, %53
  %76 = phi i16* [ %54, %53 ], [ %70, %67 ]
  %77 = add nuw nsw i64 %51, 1
  %78 = add i64 %51, 1
  %79 = icmp ult i64 %78, 16
  br i1 %79, label %169, label %80

80:                                               ; preds = %75
  %81 = add i64 %51, 1
  %82 = getelementptr i16, i16* %76, i64 %81
  %83 = getelementptr i16, i16* %49, i64 %81
  %84 = icmp ult i16* %76, %83
  %85 = icmp ult i16* %49, %82
  %86 = and i1 %84, %85
  br i1 %86, label %169, label %87

87:                                               ; preds = %80
  %88 = and i64 %78, -16
  %89 = getelementptr i16, i16* %76, i64 %88
  %90 = sub i64 %77, %88
  %91 = getelementptr i16, i16* %49, i64 %88
  %92 = add i64 %88, -16
  %93 = lshr exact i64 %92, 4
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 48
  br i1 %96, label %148, label %97

97:                                               ; preds = %87
  %98 = sub nsw i64 %94, %95
  br label %99

99:                                               ; preds = %99, %97
  %100 = phi i64 [ 0, %97 ], [ %145, %99 ]
  %101 = phi i64 [ %98, %97 ], [ %146, %99 ]
  %102 = getelementptr i16, i16* %76, i64 %100
  %103 = getelementptr i16, i16* %49, i64 %100
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !155
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !155
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !158, !noalias !155
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !158, !noalias !155
  %112 = or i64 %100, 16
  %113 = getelementptr i16, i16* %76, i64 %112
  %114 = getelementptr i16, i16* %49, i64 %112
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !155
  %117 = getelementptr i16, i16* %114, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !155
  %120 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !158, !noalias !155
  %121 = getelementptr i16, i16* %113, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !158, !noalias !155
  %123 = or i64 %100, 32
  %124 = getelementptr i16, i16* %76, i64 %123
  %125 = getelementptr i16, i16* %49, i64 %123
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !155
  %128 = getelementptr i16, i16* %125, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !155
  %131 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %131, align 2, !alias.scope !158, !noalias !155
  %132 = getelementptr i16, i16* %124, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %133, align 2, !alias.scope !158, !noalias !155
  %134 = or i64 %100, 48
  %135 = getelementptr i16, i16* %76, i64 %134
  %136 = getelementptr i16, i16* %49, i64 %134
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !155
  %139 = getelementptr i16, i16* %136, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !155
  %142 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !158, !noalias !155
  %143 = getelementptr i16, i16* %135, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !158, !noalias !155
  %145 = add i64 %100, 64
  %146 = add i64 %101, -4
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %99, !llvm.loop !160

148:                                              ; preds = %99, %87
  %149 = phi i64 [ 0, %87 ], [ %145, %99 ]
  %150 = icmp eq i64 %95, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %148, %151
  %152 = phi i64 [ %164, %151 ], [ %149, %148 ]
  %153 = phi i64 [ %165, %151 ], [ %95, %148 ]
  %154 = getelementptr i16, i16* %76, i64 %152
  %155 = getelementptr i16, i16* %49, i64 %152
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !155
  %158 = getelementptr i16, i16* %155, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !155
  %161 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !158, !noalias !155
  %162 = getelementptr i16, i16* %154, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !158, !noalias !155
  %164 = add i64 %152, 16
  %165 = add i64 %153, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !161

167:                                              ; preds = %151, %148
  %168 = icmp eq i64 %78, %88
  br i1 %168, label %222, label %169

169:                                              ; preds = %167, %80, %75
  %170 = phi i16* [ %76, %80 ], [ %76, %75 ], [ %89, %167 ]
  %171 = phi i64 [ %77, %80 ], [ %77, %75 ], [ %90, %167 ]
  %172 = phi i16* [ %49, %80 ], [ %49, %75 ], [ %91, %167 ]
  %173 = add i64 %171, -1
  %174 = and i64 %171, 7
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %187, label %176

176:                                              ; preds = %169, %176
  %177 = phi i16* [ %183, %176 ], [ %170, %169 ]
  %178 = phi i64 [ %182, %176 ], [ %171, %169 ]
  %179 = phi i16* [ %184, %176 ], [ %172, %169 ]
  %180 = phi i64 [ %185, %176 ], [ %174, %169 ]
  %181 = load i16, i16* %179, align 2
  store i16 %181, i16* %177, align 2
  %182 = add i64 %178, -1
  %183 = getelementptr inbounds i16, i16* %177, i64 1
  %184 = getelementptr inbounds i16, i16* %179, i64 1
  %185 = add i64 %180, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %176, !llvm.loop !162

187:                                              ; preds = %176, %169
  %188 = phi i16* [ %170, %169 ], [ %183, %176 ]
  %189 = phi i64 [ %171, %169 ], [ %182, %176 ]
  %190 = phi i16* [ %172, %169 ], [ %184, %176 ]
  %191 = icmp ult i64 %173, 7
  br i1 %191, label %222, label %192

192:                                              ; preds = %187, %192
  %193 = phi i16* [ %219, %192 ], [ %188, %187 ]
  %194 = phi i64 [ %218, %192 ], [ %189, %187 ]
  %195 = phi i16* [ %220, %192 ], [ %190, %187 ]
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %193, i64 1
  %198 = getelementptr inbounds i16, i16* %195, i64 1
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %193, i64 2
  %201 = getelementptr inbounds i16, i16* %195, i64 2
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %193, i64 3
  %204 = getelementptr inbounds i16, i16* %195, i64 3
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %193, i64 4
  %207 = getelementptr inbounds i16, i16* %195, i64 4
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %193, i64 5
  %210 = getelementptr inbounds i16, i16* %195, i64 5
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %193, i64 6
  %213 = getelementptr inbounds i16, i16* %195, i64 6
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %193, i64 7
  %216 = getelementptr inbounds i16, i16* %195, i64 7
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = add i64 %194, -8
  %219 = getelementptr inbounds i16, i16* %193, i64 8
  %220 = getelementptr inbounds i16, i16* %195, i64 8
  %221 = icmp eq i64 %218, 0
  br i1 %221, label %222, label %192, !llvm.loop !163

222:                                              ; preds = %187, %192, %167, %44
  %223 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %36, i64 %9, i32 1
  %224 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 1
  %227 = ptrtoint %"class.v8_inspector::String16"* %226 to i64
  %228 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %229 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %228, align 8
  %230 = ptrtoint %"class.v8_inspector::String16"* %229 to i64
  %231 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  %232 = icmp eq %"class.v8_inspector::String16"* %231, %229
  br i1 %232, label %274, label %233

233:                                              ; preds = %222
  %234 = getelementptr %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %231, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = ptrtoint i16** %234 to i64
  %236 = sub i64 %235, %230
  %237 = and i64 %236, 32
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %247

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1
  %241 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %231, i64 -1
  %242 = bitcast %"class.v8_inspector::String16"* %240 to i8*
  %243 = bitcast %"class.v8_inspector::String16"* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #15
  %244 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %37, i64 -1, i32 1
  %245 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %231, i64 -1, i32 1
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %244, align 8
  br label %247

247:                                              ; preds = %239, %233
  %248 = phi %"class.v8_inspector::String16"* [ undef, %233 ], [ %240, %239 ]
  %249 = phi %"class.v8_inspector::String16"* [ %37, %233 ], [ %240, %239 ]
  %250 = phi %"class.v8_inspector::String16"* [ %231, %233 ], [ %241, %239 ]
  %251 = icmp ult i64 %236, 32
  br i1 %251, label %270, label %252

252:                                              ; preds = %247, %252
  %253 = phi %"class.v8_inspector::String16"* [ %262, %252 ], [ %249, %247 ]
  %254 = phi %"class.v8_inspector::String16"* [ %263, %252 ], [ %250, %247 ]
  %255 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %253, i64 -1
  %256 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %254, i64 -1
  %257 = bitcast %"class.v8_inspector::String16"* %255 to i8*
  %258 = bitcast %"class.v8_inspector::String16"* %256 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 24, i1 false) #15
  %259 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %253, i64 -1, i32 1
  %260 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %254, i64 -1, i32 1
  %261 = load i64, i64* %260, align 8
  store i64 %261, i64* %259, align 8
  %262 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %253, i64 -2
  %263 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %254, i64 -2
  %264 = bitcast %"class.v8_inspector::String16"* %262 to i8*
  %265 = bitcast %"class.v8_inspector::String16"* %263 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %265, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 24, i1 false) #15
  %266 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %253, i64 -2, i32 1
  %267 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %254, i64 -2, i32 1
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = icmp eq %"class.v8_inspector::String16"* %263, %229
  br i1 %269, label %270, label %252

270:                                              ; preds = %252, %247
  %271 = phi %"class.v8_inspector::String16"* [ %248, %247 ], [ %262, %252 ]
  %272 = load i64, i64* %6, align 8
  %273 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %3, align 8
  br label %274

274:                                              ; preds = %222, %270
  %275 = phi %"class.v8_inspector::String16"* [ %273, %270 ], [ %229, %222 ]
  %276 = phi %"class.v8_inspector::String16"* [ %271, %270 ], [ %37, %222 ]
  %277 = phi i64 [ %272, %270 ], [ %230, %222 ]
  %278 = ptrtoint %"class.v8_inspector::String16"* %276 to i64
  store i64 %278, i64* %6, align 8
  store i64 %227, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %279 = inttoptr i64 %277 to %"class.v8_inspector::String16"*
  %280 = icmp eq %"class.v8_inspector::String16"* %275, %279
  br i1 %280, label %293, label %281

281:                                              ; preds = %274, %291
  %282 = phi %"class.v8_inspector::String16"* [ %283, %291 ], [ %275, %274 ]
  %283 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %282, i64 -1
  %284 = bitcast %"class.v8_inspector::String16"* %283 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %284, i64 0, i32 1, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %281
  %289 = bitcast %"class.v8_inspector::String16"* %283 to i8**
  %290 = load i8*, i8** %289, align 8
  tail call void @_ZdlPv(i8* %290) #16
  br label %291

291:                                              ; preds = %288, %281
  %292 = icmp eq %"class.v8_inspector::String16"* %283, %279
  br i1 %292, label %293, label %281

293:                                              ; preds = %291, %274
  %294 = icmp eq i64 %277, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = inttoptr i64 %277 to i8*
  tail call void @_ZdlPv(i8* %296) #16
  br label %297

297:                                              ; preds = %293, %295
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %85

6:                                                ; preds = %2
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i16* %12, i16* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %84, label %20

20:                                               ; preds = %6
  %21 = shl nsw i64 %18, 1
  %22 = add i64 %21, -2
  %23 = lshr exact i64 %22, 1
  %24 = add nuw i64 %23, 1
  %25 = and i64 %24, 3
  %26 = icmp ult i64 %22, 6
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = sub i64 %24, %25
  br label %50

29:                                               ; preds = %50, %20
  %30 = phi i64 [ undef, %20 ], [ %80, %50 ]
  %31 = phi i64 [ 0, %20 ], [ %80, %50 ]
  %32 = phi i16* [ %17, %20 ], [ %81, %50 ]
  %33 = icmp eq i64 %25, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %43, %34 ], [ %31, %29 ]
  %36 = phi i16* [ %44, %34 ], [ %32, %29 ]
  %37 = phi i64 [ %45, %34 ], [ %25, %29 ]
  %38 = load i16, i16* %36, align 2
  %39 = zext i16 %38 to i64
  %40 = mul i64 %35, 31
  %41 = shl i64 %39, 56
  %42 = ashr exact i64 %41, 56
  %43 = add i64 %42, %40
  store i64 %43, i64* %3, align 8
  %44 = getelementptr inbounds i16, i16* %36, i64 1
  %45 = add i64 %37, -1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %34, !llvm.loop !164

47:                                               ; preds = %34, %29
  %48 = phi i64 [ %30, %29 ], [ %43, %34 ]
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %84, label %85

50:                                               ; preds = %50, %27
  %51 = phi i64 [ 0, %27 ], [ %80, %50 ]
  %52 = phi i16* [ %17, %27 ], [ %81, %50 ]
  %53 = phi i64 [ %28, %27 ], [ %82, %50 ]
  %54 = load i16, i16* %52, align 2
  %55 = zext i16 %54 to i64
  %56 = mul i64 %51, 31
  %57 = shl i64 %55, 56
  %58 = ashr exact i64 %57, 56
  %59 = add i64 %58, %56
  store i64 %59, i64* %3, align 8
  %60 = getelementptr inbounds i16, i16* %52, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i64
  %63 = mul i64 %59, 31
  %64 = shl i64 %62, 56
  %65 = ashr exact i64 %64, 56
  %66 = add i64 %65, %63
  store i64 %66, i64* %3, align 8
  %67 = getelementptr inbounds i16, i16* %52, i64 2
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i64
  %70 = mul i64 %66, 31
  %71 = shl i64 %69, 56
  %72 = ashr exact i64 %71, 56
  %73 = add i64 %72, %70
  store i64 %73, i64* %3, align 8
  %74 = getelementptr inbounds i16, i16* %52, i64 3
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i64
  %77 = mul i64 %73, 31
  %78 = shl i64 %76, 56
  %79 = ashr exact i64 %78, 56
  %80 = add i64 %79, %77
  store i64 %80, i64* %3, align 8
  %81 = getelementptr inbounds i16, i16* %52, i64 4
  %82 = add i64 %53, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %29, label %50

84:                                               ; preds = %47, %6
  store i64 1, i64* %3, align 8
  br label %85

85:                                               ; preds = %2, %47, %84
  %86 = phi i64 [ %48, %47 ], [ %4, %2 ], [ 1, %84 ]
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %216, label %90

90:                                               ; preds = %85
  %91 = tail call i64 @llvm.ctpop.i64(i64 %88) #15, !range !139
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = add i64 %88, -1
  %95 = and i64 %94, %86
  br label %100

96:                                               ; preds = %90
  %97 = icmp ult i64 %86, %88
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %86, %88
  br label %100

100:                                              ; preds = %93, %96, %98
  %101 = phi i64 [ %95, %93 ], [ %99, %98 ], [ %86, %96 ]
  %102 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %101
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %216, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %216, label %111

111:                                              ; preds = %107
  %112 = add i64 %88, -1
  %113 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = zext i8 %115 to i64
  %120 = select i1 %116, i64 %118, i64 %119
  %121 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i16*, i16** %121, align 8
  %123 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %124 = select i1 %116, i16* %122, i16* %123
  %125 = icmp eq i64 %120, 0
  br i1 %92, label %126, label %173

126:                                              ; preds = %111, %164
  %127 = phi %"struct.std::__1::__hash_node_base"* [ %166, %164 ], [ %109, %111 ]
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 1
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %86, %130
  br i1 %131, label %139, label %132

132:                                              ; preds = %126
  %133 = icmp ult i64 %130, %88
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %130, %88
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %135, %134 ], [ %130, %132 ]
  %138 = icmp eq i64 %137, %101
  br i1 %138, label %164, label %216

139:                                              ; preds = %126
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 3
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = zext i8 %143 to i64
  %149 = select i1 %144, i64 %147, i64 %148
  %150 = icmp eq i64 %149, %120
  br i1 %150, label %151, label %164

151:                                              ; preds = %139
  br i1 %125, label %216, label %152

152:                                              ; preds = %151
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i16**
  %154 = load i16*, i16** %153, align 8
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i16*
  %156 = select i1 %144, i16* %154, i16* %155
  br label %157

157:                                              ; preds = %168, %152
  %158 = phi i64 [ %169, %168 ], [ %120, %152 ]
  %159 = phi i16* [ %171, %168 ], [ %124, %152 ]
  %160 = phi i16* [ %170, %168 ], [ %156, %152 ]
  %161 = load i16, i16* %160, align 2
  %162 = load i16, i16* %159, align 2
  %163 = icmp eq i16 %162, %161
  br i1 %163, label %168, label %164

164:                                              ; preds = %157, %139, %136
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base"* %166, null
  br i1 %167, label %216, label %126

168:                                              ; preds = %157
  %169 = add i64 %158, -1
  %170 = getelementptr inbounds i16, i16* %160, i64 1
  %171 = getelementptr inbounds i16, i16* %159, i64 1
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %216, label %157

173:                                              ; preds = %111, %212
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %214, %212 ], [ %109, %111 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %86, %177
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = and i64 %177, %112
  %181 = icmp eq i64 %180, %101
  br i1 %181, label %212, label %216

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 2
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %183 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 3
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %186 to i64
  %192 = select i1 %187, i64 %190, i64 %191
  %193 = icmp eq i64 %192, %120
  br i1 %193, label %194, label %212

194:                                              ; preds = %182
  br i1 %125, label %216, label %195

195:                                              ; preds = %194
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i16**
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i16*
  %199 = select i1 %187, i16* %197, i16* %198
  br label %200

200:                                              ; preds = %207, %195
  %201 = phi i64 [ %208, %207 ], [ %120, %195 ]
  %202 = phi i16* [ %210, %207 ], [ %124, %195 ]
  %203 = phi i16* [ %209, %207 ], [ %199, %195 ]
  %204 = load i16, i16* %203, align 2
  %205 = load i16, i16* %202, align 2
  %206 = icmp eq i16 %205, %204
  br i1 %206, label %207, label %212

207:                                              ; preds = %200
  %208 = add i64 %201, -1
  %209 = getelementptr inbounds i16, i16* %203, i64 1
  %210 = getelementptr inbounds i16, i16* %202, i64 1
  %211 = icmp eq i64 %208, 0
  br i1 %211, label %216, label %200

212:                                              ; preds = %200, %182, %179
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %213, align 8
  %215 = icmp eq %"struct.std::__1::__hash_node_base"* %214, null
  br i1 %215, label %216, label %173

216:                                              ; preds = %194, %212, %179, %207, %151, %164, %136, %168, %107, %85, %100
  %217 = phi %"struct.std::__1::__hash_node_base"* [ null, %100 ], [ null, %85 ], [ null, %107 ], [ %127, %168 ], [ %127, %151 ], [ null, %164 ], [ null, %136 ], [ %174, %207 ], [ %174, %194 ], [ null, %212 ], [ null, %179 ]
  ret %"struct.std::__1::__hash_node_base"* %217
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.133"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #15, !range !139
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.8"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.133"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.11"** %98 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %30, %"class.std::__1::__compressed_pair.8"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.133"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !165

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %142, align 8
  store %"class.v8_inspector::protocol::Value"* null, %"class.v8_inspector::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Value"* %143 to void (%"class.v8_inspector::protocol::Value"*)***
  %147 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Value"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #16
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !9}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__19make_pairIRKN12v8_inspector8String16EPNS1_8protocol5ValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__19make_pairIRKN12v8_inspector8String16EPNS1_8protocol5ValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS9_IT0_E4typeEEEOSA_OSD_"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !11}
!61 = distinct !{!61, !9}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !9}
!68 = distinct !{!68, !11}
!69 = distinct !{!69, !11}
!70 = distinct !{!70, !9}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !9}
!77 = distinct !{!77, !11}
!78 = distinct !{!78, !11}
!79 = distinct !{!79, !9}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !9}
!86 = distinct !{!86, !11}
!87 = distinct !{!87, !11}
!88 = distinct !{!88, !9}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !9}
!95 = distinct !{!95, !11}
!96 = distinct !{!96, !11}
!97 = distinct !{!97, !9}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !9}
!104 = distinct !{!104, !11}
!105 = distinct !{!105, !11}
!106 = distinct !{!106, !9}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111}
!111 = distinct !{!111, !109}
!112 = distinct !{!112, !9}
!113 = distinct !{!113, !11}
!114 = distinct !{!114, !11}
!115 = distinct !{!115, !9}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !9}
!122 = distinct !{!122, !11}
!123 = distinct !{!123, !11}
!124 = distinct !{!124, !9}
!125 = distinct !{!125, !9}
!126 = distinct !{!126, !11}
!127 = distinct !{!127, !128, !9}
!128 = !{!"llvm.loop.unroll.runtime.disable"}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = distinct !{!134, !9}
!135 = distinct !{!135, !11}
!136 = distinct !{!136, !11}
!137 = distinct !{!137, !9}
!138 = distinct !{!138, !11}
!139 = !{i64 0, i64 65}
!140 = distinct !{!140, !11}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSQ_IJEEEEEENS4_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!143 = distinct !{!143, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN12v8_inspector8String16ENS_10unique_ptrINS2_8protocol5ValueENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSQ_IJEEEEEENS4_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISX_EEEEEEmOT_DpOT0_"}
!144 = !{!145}
!145 = distinct !{!145, !146}
!146 = distinct !{!146, !"LVerDomain"}
!147 = !{!148}
!148 = distinct !{!148, !146}
!149 = !{!142, !145}
!150 = distinct !{!150, !9}
!151 = distinct !{!151, !11}
!152 = distinct !{!152, !11}
!153 = distinct !{!153, !9}
!154 = distinct !{!154, !11}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !9}
!161 = distinct !{!161, !11}
!162 = distinct !{!162, !11}
!163 = distinct !{!163, !9}
!164 = distinct !{!164, !11}
!165 = distinct !{!165, !11}
