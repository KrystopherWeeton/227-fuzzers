; ModuleID = '../../third_party/blink/renderer/platform/fonts/linux/font_cache_linux.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/linux/font_cache_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.230, %class.scoped_refptr.238, %class.scoped_refptr.248, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.254 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.229 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.229 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.255", [4 x i8] }>
%"class.WTF::RefCounted.255" = type { %"class.base::RefCounted.256" }
%"class.base::RefCounted.256" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.230 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.236", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.231" }
%"class.WTF::Vector.231" = type { %"class.WTF::VectorBuffer.232" }
%"class.WTF::VectorBuffer.232" = type { %"class.WTF::VectorBufferBase.233" }
%"class.WTF::VectorBufferBase.233" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.236" = type { %"class.base::RefCounted.237" }
%"class.base::RefCounted.237" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.238 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.239", %"class.WTF::RefCounted.246", [4 x i8] }>
%"class.blink::FontSettings.239" = type { %"class.WTF::Vector.240" }
%"class.WTF::Vector.240" = type { %"class.WTF::VectorBuffer.241" }
%"class.WTF::VectorBuffer.241" = type { %"class.WTF::VectorBufferBase.242" }
%"class.WTF::VectorBufferBase.242" = type { %"class.blink::FontTagValuePair.243"*, i32, i32 }
%"class.blink::FontTagValuePair.243" = type { i32, float }
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.248 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.249", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.251, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.249" = type { %"class.base::RefCounted.250" }
%"class.base::RefCounted.250" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.251 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.252", [4 x i8] }>
%"class.WTF::RefCounted.252" = type { %"class.base::RefCounted.253" }
%"class.base::RefCounted.253" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.254 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StaticSingleton.265" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.gfx::FallbackFontData" = type <{ %"class.std::__1::basic_string", %"class.base::FilePath", i32, i32, i8, i8, [6 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::WebSandboxSupport" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.21, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap", %"class.WTF::HashMap.202", %"class.blink::FontDataCache", %"class.blink::Persistent.222", float, [4 x i8] }>
%class.sk_sp.21 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.4" }>
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.22", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.140", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64 }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { float }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.143", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.224" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ %"struct.WTF::KeyValuePair.206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.206" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.207", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.211" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.212", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.217", i32, i32 }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.222" = type { %"class.blink::PersistentBase.223" }
%"class.blink::PersistentBase.223" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.18, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.14, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.4" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.14 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.2, %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.18 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

@_ZN5blink17kColorEmojiLocaleE = external constant [0 x i8], align 1
@__const._ZN5blink9FontCache32PlatformFallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE.description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.229 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.230 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.238 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.248 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.254 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton.265" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal unnamed_addr global %"class.WTF::StaticSingleton.265" zeroinitializer, align 2
@_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold = internal global i64 0, align 8
@_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton.265" zeroinitializer, align 2
@_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton.265" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton.265" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9FontCache16SystemFontFamilyEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to %"class.WTF::StringImpl"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family) #14
  br label %7

7:                                                ; preds = %0, %3, %6
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to %"class.WTF::AtomicString"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9FontCache19SetSystemFontFamilyERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to %"class.WTF::StringImpl"**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family) #14
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %8
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to %"class.WTF::StringImpl"**), align 8
  store i64 %30, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23MutableSystemFontFamilyEvE20s_system_font_family to i64*), align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %29, %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9FontCache19GetFontForCharacterEiPKcPN3gfx16FallbackFontDataE(i32, i8*, %"struct.gfx::FallbackFontData"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #14
  %6 = bitcast %"class.blink::Platform"* %5 to %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)***
  %7 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)**, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %7, i64 2
  %9 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %8, align 8
  %10 = tail call %"class.blink::WebSandboxSupport"* %9(%"class.blink::Platform"* %5) #14
  %11 = icmp eq %"class.blink::WebSandboxSupport"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #14
  %14 = bitcast %"class.blink::Platform"* %13 to %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)***
  %15 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)**, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %15, i64 2
  %17 = load %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)*, %"class.blink::WebSandboxSupport"* (%"class.blink::Platform"*)** %16, align 8
  %18 = tail call %"class.blink::WebSandboxSupport"* %17(%"class.blink::Platform"* %13) #14
  %19 = bitcast %"class.blink::WebSandboxSupport"* %18 to i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)***
  %20 = load i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)**, i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)*, i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)** %20, i64 2
  %22 = load i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)*, i1 (%"class.blink::WebSandboxSupport"*, i32, i8*, %"struct.gfx::FallbackFontData"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::WebSandboxSupport"* %18, i32 %0, i8* %1, %"struct.gfx::FallbackFontData"* %2) #14
  br label %63

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = icmp eq i8* %1, null
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  br i1 %29, label %53, label %31

31:                                               ; preds = %24
  %32 = tail call i64 @strlen(i8* nonnull %1) #14
  %33 = icmp ugt i64 %32, -17
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #15
  unreachable

36:                                               ; preds = %31
  %37 = icmp ult i64 %32, 23
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %32, 16
  %40 = and i64 %39, -16
  %41 = tail call i8* @_Znwm(i64 %40) #16
  store i8* %41, i8** %26, align 8
  %42 = or i64 %40, -9223372036854775808
  store i64 %42, i64* %28, align 8
  store i64 %32, i64* %27, align 8
  br label %48

43:                                               ; preds = %36
  %44 = trunc i64 %32 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %32, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43, %38
  %49 = phi i8* [ %41, %38 ], [ %25, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* nonnull align 1 %1, i64 %32, i1 false) #14
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i8* [ %25, %43 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %32
  store i8 0, i8* %52, align 1
  br label %54

53:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #14
  br label %54

54:                                               ; preds = %53, %50
  %55 = call zeroext i1 @_ZN3gfx22GetFallbackFontForCharEiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_16FallbackFontDataE(i32 %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.gfx::FallbackFontData"* %2) #14
  %56 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %61) #16
  br label %62

62:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  br label %63

63:                                               ; preds = %62, %12
  %64 = phi i1 [ %23, %12 ], [ %55, %62 ]
  ret i1 %64
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN3gfx22GetFallbackFontForCharEiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_16FallbackFontDataE(i32, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.gfx::FallbackFontData"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink9FontCache32PlatformFallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32, %"class.blink::SimpleFontData"* nocapture readnone, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::FontFaceCreationParams", align 8
  %7 = alloca %"struct.gfx::FallbackFontData", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.blink::FontFaceCreationParams", align 8
  %10 = alloca %"class.blink::FontFaceCreationParams", align 8
  %11 = alloca %"class.blink::FontDescription", align 8
  %12 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %0, i64 0, i32 3, i32 0
  %13 = load %class.SkFontMgr*, %class.SkFontMgr** %12, align 8
  %14 = icmp eq %class.SkFontMgr* %13, null
  br i1 %14, label %117, label %15

15:                                               ; preds = %5
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink9FontCache25GetFamilyNameForCharacterEP9SkFontMgriRKNS_15FontDescriptionENS_20FontFallbackPriorityE(%class.SkFontMgr* nonnull %13, i32 %2, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 %4) #14
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 1) #14
  br label %410

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %101, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::FontFaceCreationParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #14
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #14
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %40, %24
  %43 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %44, align 8
  %45 = load atomic i32, i32* %26 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #14
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %48
  tail call void @llvm.trap() #14
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %60

60:                                               ; preds = %58, %42
  %61 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %6, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false) #14
  %63 = load atomic i32, i32* %26 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %60
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %60
  %71 = phi i32 [ %69, %68 ], [ %67, %60 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #14
  br label %74

74:                                               ; preds = %70, %73
  %75 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %6, i32 0) #14
  %76 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"* %0, %"class.blink::FontPlatformData"* %75, i32 1, i1 zeroext false) #14
  %77 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %81, %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #14
  br label %100

100:                                              ; preds = %99, %96, %84
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #14
  br label %103

101:                                              ; preds = %20
  %102 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 1) #14
  br label %103

103:                                              ; preds = %101, %100
  %104 = phi %"class.blink::SimpleFontData"* [ %76, %100 ], [ %102, %101 ]
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %103
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %103
  %114 = phi i32 [ %112, %111 ], [ %110, %103 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %410

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #14
  br label %410

117:                                              ; preds = %5
  %118 = icmp eq i32 %4, 2
  %119 = select i1 %118, i32 128106, i32 %2
  br i1 %118, label %147, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 2, i32 0
  %122 = load i16, i16* %121, align 4
  %123 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %129, !prof !2

125:                                              ; preds = %120
  %126 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  br label %129

129:                                              ; preds = %120, %125, %128
  %130 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %131 = icmp eq i16 %122, %130
  br i1 %131, label %144, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  %134 = load i16, i16* %133, align 8
  %135 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %141, !prof !2

137:                                              ; preds = %132
  %138 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  br label %141

141:                                              ; preds = %132, %137, %140
  %142 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %143 = icmp slt i16 %134, %142
  br i1 %143, label %147, label %144

144:                                              ; preds = %141, %129
  %145 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 %119) #14
  %146 = icmp eq %"class.blink::SimpleFontData"* %145, null
  br i1 %146, label %147, label %410

147:                                              ; preds = %144, %141, %117
  %148 = bitcast %"struct.gfx::FallbackFontData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %148) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 64, i1 false)
  call void @_ZN3gfx16FallbackFontDataC1Ev(%"struct.gfx::FallbackFontData"* nonnull %7) #14
  br i1 %118, label %169, label %149

149:                                              ; preds = %147
  %150 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #14
  %151 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3, i32 0
  %152 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %151, align 8
  %153 = icmp eq %"class.blink::LayoutLocale"* %152, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  %155 = call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #14
  br label %156

156:                                              ; preds = %149, %154
  %157 = phi %"class.blink::LayoutLocale"* [ %155, %154 ], [ %152, %149 ]
  %158 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %157, i64 0, i32 2, i32 0
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* %158) #14
  %159 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = select i1 %162, i8* %164, i8* %150
  %166 = call zeroext i1 @_ZN5blink9FontCache19GetFontForCharacterEiPKcPN3gfx16FallbackFontDataE(i32 %119, i8* %165, %"struct.gfx::FallbackFontData"* nonnull %7)
  %167 = load i8, i8* %160, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %171, label %173

169:                                              ; preds = %147
  %170 = call zeroext i1 @_ZN5blink9FontCache19GetFontForCharacterEiPKcPN3gfx16FallbackFontDataE(i32 %119, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kColorEmojiLocaleE, i64 0, i64 0), %"struct.gfx::FallbackFontData"* nonnull %7)
  br i1 %170, label %174, label %399

171:                                              ; preds = %156
  %172 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %172) #16
  br label %173

173:                                              ; preds = %171, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #14
  br i1 %166, label %174, label %399

174:                                              ; preds = %169, %173
  %175 = bitcast %"class.blink::FontFaceCreationParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %175) #14
  %176 = bitcast %"class.blink::FontFaceCreationParams"* %9 to i64*
  store i64 -6148914691236517206, i64* %176, align 8
  %177 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %9, i64 0, i32 0
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %9, i64 0, i32 1
  %179 = bitcast %"class.WTF::AtomicString"* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 40, i1 false) #14
  %180 = bitcast %"class.blink::FontFaceCreationParams"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %180) #14
  %181 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 1, i32 0
  %182 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 2
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 0
  store i32 1, i32* %186, align 8
  %187 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 2
  %189 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %174
  %194 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  %195 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #14
  br label %207

196:                                              ; preds = %174
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %188, i8* %198, i64 %200) #14
  %201 = load i32, i32* %186, align 8
  %202 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 1
  %203 = bitcast %"class.WTF::AtomicString"* %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %178, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  br label %207

207:                                              ; preds = %193, %196
  %208 = phi %"class.WTF::StringImpl"* [ null, %193 ], [ %206, %196 ]
  %209 = phi i64 [ 0, %193 ], [ %204, %196 ]
  %210 = phi i32 [ 1, %193 ], [ %201, %196 ]
  %211 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 3
  store i32 %183, i32* %211, align 8
  %212 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 4
  store i32 %185, i32* %212, align 4
  store i32 %210, i32* %177, align 8
  %213 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %213, align 8
  %214 = bitcast %"class.WTF::AtomicString"* %178 to i64*
  store i64 %209, i64* %214, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %207
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #14
  br label %229

229:                                              ; preds = %228, %225, %207
  %230 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %9, i64 0, i32 2
  %231 = bitcast %"class.std::__1::basic_string"* %230 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #16
  br label %238

238:                                              ; preds = %235, %229
  %239 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  %240 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %240, i64 24, i1 false) #14
  %241 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  store i8 0, i8* %242, align 1
  store i8 0, i8* %240, align 8
  %243 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %9, i64 0, i32 3
  %244 = bitcast i32* %211 to i64*
  %245 = bitcast i32* %243 to i64*
  %246 = load i64, i64* %244, align 8
  store i64 %246, i64* %245, align 8
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %238
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #14
  br label %262

262:                                              ; preds = %238, %258, %261
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %180) #14
  %263 = bitcast %"class.blink::FontDescription"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %263) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %263, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink9FontCache32PlatformFallbackFontForCharacterERKNS_15FontDescriptionEiPKNS_14SimpleFontDataENS_20FontFallbackPriorityE.description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %11, %"class.blink::FontDescription"* dereferenceable(80) %1) #14
  %264 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 4
  %265 = load i8, i8* %264, align 8, !range !4
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %291, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %11, i64 0, i32 10, i32 0, i32 0
  %269 = load i16, i16* %268, align 8
  %270 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %276, !prof !2

272:                                              ; preds = %267
  %273 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %276, label %275

275:                                              ; preds = %272
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  br label %276

276:                                              ; preds = %267, %272, %275
  %277 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %278 = icmp slt i16 %269, %277
  br i1 %278, label %279, label %288

279:                                              ; preds = %276
  %280 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %286, !prof !2

282:                                              ; preds = %279
  %283 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #14
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %286, label %285

285:                                              ; preds = %282
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #14
  br label %286

286:                                              ; preds = %279, %282, %285
  %287 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  store i16 %287, i16* %268, align 8
  br label %288

288:                                              ; preds = %286, %276
  %289 = load i8, i8* %264, align 8
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %312

291:                                              ; preds = %262, %288
  %292 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %11, i64 0, i32 10, i32 0, i32 0
  %293 = load i16, i16* %292, align 8
  %294 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold to i8*) acquire, align 8
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %300, !prof !2

296:                                              ; preds = %291
  %297 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  store i16 2400, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL13BoldThresholdEvE15s_boldThreshold) #14
  br label %300

300:                                              ; preds = %291, %296, %299
  %301 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL13BoldThresholdEvE15s_boldThreshold to i16*), align 2
  %302 = icmp slt i16 %293, %301
  br i1 %302, label %312, label %303

303:                                              ; preds = %300
  %304 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %306, label %310, !prof !2

306:                                              ; preds = %303
  %307 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #14
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %310, label %309

309:                                              ; preds = %306
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #14
  br label %310

310:                                              ; preds = %303, %306, %309
  %311 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  store i16 %311, i16* %292, align 8
  br label %312

312:                                              ; preds = %300, %288, %310
  %313 = phi i8 [ 1, %310 ], [ 0, %300 ], [ 0, %288 ]
  %314 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 5
  %315 = load i8, i8* %314, align 1, !range !4
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %341, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %11, i64 0, i32 10, i32 2, i32 0
  %319 = load i16, i16* %318, align 4
  %320 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %326, !prof !2

322:                                              ; preds = %317
  %323 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %326, label %325

325:                                              ; preds = %322
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  br label %326

326:                                              ; preds = %317, %322, %325
  %327 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %328 = icmp eq i16 %319, %327
  br i1 %328, label %329, label %338

329:                                              ; preds = %326
  %330 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %332, label %336, !prof !2

332:                                              ; preds = %329
  %333 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %336, label %335

335:                                              ; preds = %332
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  br label %336

336:                                              ; preds = %329, %332, %335
  %337 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* nonnull %11, i16 %337) #14
  br label %338

338:                                              ; preds = %336, %326
  %339 = load i8, i8* %314, align 1
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %341, label %362

341:                                              ; preds = %312, %338
  %342 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %11, i64 0, i32 10, i32 2, i32 0
  %343 = load i16, i16* %342, align 4
  %344 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %346, label %350, !prof !2

346:                                              ; preds = %341
  %347 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %350, label %349

349:                                              ; preds = %346
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #14
  br label %350

350:                                              ; preds = %341, %346, %349
  %351 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %352 = icmp eq i16 %343, %351
  br i1 %352, label %353, label %362

353:                                              ; preds = %350
  %354 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %356, label %360, !prof !2

356:                                              ; preds = %353
  %357 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %360, label %359

359:                                              ; preds = %356
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #14
  br label %360

360:                                              ; preds = %353, %356, %359
  %361 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.265"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* nonnull %11, i16 %361) #14
  br label %362

362:                                              ; preds = %338, %360, %350
  %363 = phi i8 [ 1, %360 ], [ 0, %350 ], [ 0, %338 ]
  %364 = call %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %11, %"class.blink::FontFaceCreationParams"* nonnull dereferenceable(48) %9, i32 0) #14
  %365 = icmp eq %"class.blink::FontPlatformData"* %364, null
  br i1 %365, label %374, label %366

366:                                              ; preds = %362
  %367 = call noalias i8* @malloc(i64 72) #14
  %368 = bitcast i8* %367 to %"class.blink::FontPlatformData"*
  call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* %368, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %364) #14
  %369 = getelementptr inbounds i8, i8* %367, i64 36
  store i8 %313, i8* %369, align 4
  %370 = getelementptr inbounds i8, i8* %367, i64 37
  store i8 %363, i8* %370, align 1
  %371 = call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"* %0, %"class.blink::FontPlatformData"* %368, i32 1, i1 zeroext false) #14
  %372 = icmp eq i8* %367, null
  br i1 %372, label %374, label %373

373:                                              ; preds = %366
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %368) #14
  call void @free(i8* nonnull %367) #14
  br label %374

374:                                              ; preds = %373, %366, %362
  %375 = phi %"class.blink::SimpleFontData"* [ null, %362 ], [ %371, %366 ], [ %371, %373 ]
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %263) #14
  %376 = load i8, i8* %232, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %381

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load i8*, i8** %379, align 8
  call void @_ZdlPv(i8* %380) #16
  br label %381

381:                                              ; preds = %378, %374
  %382 = getelementptr inbounds %"class.blink::FontFaceCreationParams", %"class.blink::FontFaceCreationParams"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %381
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #14
  br label %398

398:                                              ; preds = %381, %394, %397
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %175) #14
  br label %399

399:                                              ; preds = %173, %169, %398
  %400 = phi %"class.blink::SimpleFontData"* [ %375, %398 ], [ null, %169 ], [ null, %173 ]
  %401 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 1
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %401) #14
  %402 = bitcast %"struct.gfx::FallbackFontData"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %402, i64 0, i32 1, i32 0
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %409

406:                                              ; preds = %399
  %407 = getelementptr inbounds %"struct.gfx::FallbackFontData", %"struct.gfx::FallbackFontData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load i8*, i8** %407, align 8
  call void @_ZdlPv(i8* %408) #16
  br label %409

409:                                              ; preds = %399, %406
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %148) #14
  br label %410

410:                                              ; preds = %144, %116, %113, %18, %409
  %411 = phi %"class.blink::SimpleFontData"* [ %400, %409 ], [ %145, %144 ], [ %104, %113 ], [ %104, %116 ], [ %19, %18 ]
  ret %"class.blink::SimpleFontData"* %411
}

declare %"class.WTF::StringImpl"* @_ZN5blink9FontCache25GetFamilyNameForCharacterEP9SkFontMgriRKNS_15FontDescriptionENS_20FontFallbackPriorityE(%class.SkFontMgr*, i32, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache28FontDataFromFontPlatformDataEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::FontPlatformData"* @_ZN5blink9FontCache19GetFontPlatformDataERKNS_15FontDescriptionERKNS_22FontFaceCreationParamsENS_17AlternateFontNameE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFaceCreationParams"* dereferenceable(48), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache27FallbackOnStandardFontStyleERKNS_15FontDescriptionEi(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3gfx16FallbackFontDataC1Ev(%"struct.gfx::FallbackFontData"*) unnamed_addr #2

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"*, i16) local_unnamed_addr #2

declare void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.253", %"class.base::RefCounted.253"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  %17 = getelementptr inbounds %"class.base::RefCounted.253", %"class.base::RefCounted.253"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.253", %"class.base::RefCounted.253"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.253"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.253"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #14
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #14
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.247", %"class.base::RefCounted.247"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #14
  %62 = getelementptr inbounds %"class.base::RefCounted.247", %"class.base::RefCounted.247"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.247", %"class.base::RefCounted.247"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.247"* %66 to %"class.blink::FontTagValuePair.243"**
  %68 = load %"class.blink::FontTagValuePair.243"*, %"class.blink::FontTagValuePair.243"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.243"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.243"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !5

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.247", %"class.base::RefCounted.247"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #14
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.247"* %66 to i8*
  tail call void @free(i8* %78) #14
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.237", %"class.base::RefCounted.237"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #14
  %86 = getelementptr inbounds %"class.base::RefCounted.237", %"class.base::RefCounted.237"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.237", %"class.base::RefCounted.237"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.237"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !5

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.237", %"class.base::RefCounted.237"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !3

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #14
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.237"* %90 to i8*
  tail call void @free(i8* %102) #14
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #14
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #2

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  %15 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.256"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #14
  %21 = bitcast %"class.base::RefCounted.256"* %19 to i8*
  tail call void @free(i8* %21) #14
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  %27 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.256"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #14
  %33 = bitcast %"class.base::RefCounted.256"* %31 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #14
  %40 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.256"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #14
  %46 = bitcast %"class.base::RefCounted.256"* %44 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #14
  %15 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.256"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #14
  %21 = bitcast %"class.base::RefCounted.256"* %19 to i8*
  tail call void @free(i8* %21) #14
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #14
  %27 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.256"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #14
  %33 = bitcast %"class.base::RefCounted.256"* %31 to i8*
  tail call void @free(i8* %33) #14
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #14
  %40 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.256", %"class.base::RefCounted.256"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.256"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #14
  %46 = bitcast %"class.base::RefCounted.256"* %44 to i8*
  tail call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #10

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
