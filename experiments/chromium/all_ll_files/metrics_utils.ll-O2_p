; ModuleID = '../../services/metrics/public/cpp/metrics_utils.cc'
source_filename = "../../services/metrics/public/cpp/metrics_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN3ukm23GetExponentialBucketMinEld(i64, double) local_unnamed_addr #0 {
  %3 = icmp slt i64 %0, 1
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = sitofp i64 %0 to double
  %6 = tail call double @log(double %5) #5
  %7 = tail call double @log(double %1) #5
  %8 = fdiv double %6, %7
  %9 = tail call double @llvm.floor.f64(double %8)
  %10 = tail call double @pow(double %1, double %9) #5
  %11 = tail call double @llvm.ceil.f64(double %10)
  %12 = fptosi double %11 to i64
  br label %13

13:                                               ; preds = %2, %4
  %14 = phi i64 [ %12, %4 ], [ 0, %2 ]
  ret i64 %14
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN3ukm36GetExponentialBucketMinForUserTimingEl(i64) local_unnamed_addr #0 {
  %2 = icmp slt i64 %0, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = sitofp i64 %0 to double
  %5 = tail call double @log(double %4) #5
  %6 = fdiv double %5, 0x3FE62E42FEFA39EF
  %7 = tail call double @llvm.floor.f64(double %6) #5
  %8 = tail call double @exp2(double %7) #1
  %9 = tail call double @llvm.ceil.f64(double %8) #5
  %10 = fptosi double %9 to i64
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi i64 [ %10, %3 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN3ukm36GetExponentialBucketMinForCounts1000El(i64) local_unnamed_addr #0 {
  %2 = icmp slt i64 %0, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = sitofp i64 %0 to double
  %5 = tail call double @log(double %4) #5
  %6 = fdiv double %5, 0x3FC1E3B825DD05E9
  %7 = tail call double @llvm.floor.f64(double %6) #5
  %8 = tail call double @pow(double 1.150000e+00, double %7) #5
  %9 = tail call double @llvm.ceil.f64(double %8) #5
  %10 = fptosi double %9 to i64
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi i64 [ %10, %3 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN3ukm31GetExponentialBucketMinForBytesEl(i64) local_unnamed_addr #0 {
  %2 = icmp slt i64 %0, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = sitofp i64 %0 to double
  %5 = tail call double @log(double %4) #5
  %6 = fdiv double %5, 0x3FD0CA937BE1B9DC
  %7 = tail call double @llvm.floor.f64(double %6) #5
  %8 = tail call double @pow(double 1.300000e+00, double %7) #5
  %9 = tail call double @llvm.ceil.f64(double %8) #5
  %10 = fptosi double %9 to i64
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi i64 [ %10, %3 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN3ukm39GetExponentialBucketMinForBytesUnder1KBEl(i64) local_unnamed_addr #0 {
  %2 = icmp slt i64 %0, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = sitofp i64 %0 to double
  %5 = tail call double @log(double %4) #5
  %6 = fdiv double %5, 0x3FC1E3B825DD05E9
  %7 = tail call double @llvm.floor.f64(double %6) #5
  %8 = tail call double @pow(double 1.150000e+00, double %7) #5
  %9 = tail call double @llvm.ceil.f64(double %8) #5
  %10 = fptosi double %9 to i64
  br label %11

11:                                               ; preds = %1, %3
  %12 = phi i64 [ %10, %3 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3ukm18GetLinearBucketMinEli(i64, i32) local_unnamed_addr #3 {
  %3 = sext i32 %1 to i64
  %4 = srem i64 %0, %3
  %5 = icmp slt i64 %4, 0
  %6 = sub nsw i64 0, %3
  %7 = select i1 %5, i64 %6, i64 0
  %8 = sub i64 %0, %4
  %9 = add i64 %8, %7
  ret i64 %9
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN3ukm18GetLinearBucketMinEdi(double, i32) local_unnamed_addr #4 {
  %3 = tail call double @llvm.floor.f64(double %0)
  %4 = fcmp ult double %3, 0xC3E0000000000000
  %5 = fcmp ugt double %3, 0x43DFFFFFFFFFFFFF
  %6 = fcmp ogt double %3, 0xC3E0000000000000
  %7 = select i1 %6, double %3, double 0xC3E0000000000000
  %8 = fptosi double %7 to i64
  %9 = select i1 %4, i64 0, i64 9223372036854775807
  %10 = select i1 %5, i64 %9, i64 %8
  %11 = sext i32 %1 to i64
  %12 = srem i64 %10, %11
  %13 = icmp slt i64 %12, 0
  %14 = sub nsw i64 0, %11
  %15 = select i1 %13, i64 %14, i64 0
  %16 = sub i64 %10, %12
  %17 = add i64 %16, %15
  ret i64 %17
}

declare double @exp2(double) local_unnamed_addr

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
