; ModuleID = '../../net/cert/internal/path_builder.cc'
source_filename = "../../net/cert/internal/path_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.net::CertPathIter" = type { %"struct.net::(anonymous namespace)::IssuerEntry", %"class.net::(anonymous namespace)::CertIssuerIterPath", %"class.std::__1::vector.103", %"class.net::TrustStore"*, %"class.base::SupportsUserData"* }
%"struct.net::(anonymous namespace)::IssuerEntry" = type { %class.scoped_refptr, %"struct.net::CertificateTrust", i32 }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"struct.net::CertificateTrust" = type { i32 }
%"class.net::(anonymous namespace)::CertIssuerIterPath" = type { %"class.std::__1::vector.98", %"class.std::__1::set.168" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.net::(anonymous namespace)::CertIssuersIter"* }
%"class.net::(anonymous namespace)::CertIssuersIter" = type { %class.scoped_refptr, %"class.std::__1::vector.103"*, %"class.net::TrustStore"*, %"class.std::__1::vector.110", i64, i8, [7 x i8], %"class.std::__1::unordered_set", i8, i8, i64, %"class.std::__1::vector.136", %"class.base::SupportsUserData"* }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.net::(anonymous namespace)::IssuerEntry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i64 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { float }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.net::CertIssuerSource::Request"* }
%"class.net::CertIssuerSource::Request" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::unique_ptr.138"* }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.std::__1::unique_ptr.100"* }
%"class.std::__1::set.168" = type { %"class.std::__1::__tree.169" }
%"class.std::__1::__tree.169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"**, %"class.std::__1::__compressed_pair.105" }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.net::CertIssuerSource"** }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.2", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.26", %"class.std::__1::vector.26", i8, %"class.std::__1::vector", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.33", i8, i8, %"class.absl::optional", %"class.absl::optional.41", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.28" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.35" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.41", %"class.absl::optional.41", %"class.absl::optional.41" }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.net::TrustStore" = type { %"class.net::CertIssuerSource" }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map.149", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.std::__1::map.149" = type { %"class.std::__1::__tree.150" }
%"class.std::__1::__tree.150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.net::CertPathBuilderResultPath" = type { %"class.std::__1::vector.58", %"struct.net::CertificateTrust", %"class.std::__1::set", %"class.std::__1::unique_ptr.72", %"class.net::CertPathErrors" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.scoped_refptr* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.net::CertPathBuilderDelegateData"* }
%"class.net::CertPathBuilderDelegateData" = type { i32 (...)** }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.78", %"class.net::CertErrors" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.net::CertErrors"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.80" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.88" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.net::CertError"* }
%"struct.net::CertPathBuilder::Result" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %"class.std::__1::vector.178", i64, i8, i8, [6 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.149", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.net::CertPathBuilderResultPath"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::unique_ptr.180"* }
%"class.net::CertPathBuilder" = type <{ %"struct.net::CertPathBuilder::Result", %"class.std::__1::unique_ptr.191", %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime", i32, i32, %"class.std::__1::set", i32, i32, i32, [4 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.net::CertPathIter"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::CertPathBuilderDelegate" = type { %"class.net::VerifyCertificateChainDelegate" }
%"class.net::VerifyCertificateChainDelegate" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.230" = type { %"struct.std::__1::__tuple_impl.231" }
%"struct.std::__1::__tuple_impl.231" = type { %"class.std::__1::__tuple_leaf.232", %"class.std::__1::__tuple_leaf.233", %"class.std::__1::__tuple_leaf.234" }
%"class.std::__1::__tuple_leaf.232" = type { %"class.base::BasicStringPiece" }
%"class.std::__1::__tuple_leaf.233" = type { %"class.base::BasicStringPiece" }
%"class.std::__1::__tuple_leaf.234" = type { %"class.base::BasicStringPiece" }
%class.anon.213 = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::tuple.230" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.254" = type { %"class.std::__1::__tree_node_base.base", %"class.net::der::Input" }
%"struct.std::__1::default_delete.195" = type { i8 }
%"struct.std::__1::__tuple_less.224" = type { i8 }

$_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net16CertIssuerSource7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_ = comdat any

$_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISH_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNKSt3__114default_deleteIN3net12CertPathIterEEclEPS2_ = comdat any

$_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net25CertPathBuilderResultPathENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN3net15CertPathBuilder6ResultE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.net::CertPathBuilder::Result"*)* @_ZN3net15CertPathBuilder6ResultD2Ev to i8*), i8* bitcast (void (%"struct.net::CertPathBuilder::Result"*)* @_ZN3net15CertPathBuilder6ResultD0Ev to i8*)] }, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Net.CertVerifier.PathBuilderIterationCount\00", align 1
@switch.table._ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE = private unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 4], align 4
@switch.table._ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE.2 = private unnamed_addr constant [3 x i32] [i32 2, i32 3, i32 5], align 4

@_ZN3net12CertPathIterC1E13scoped_refptrINS_17ParsedCertificateEEPKNS_10TrustStoreEPN4base16SupportsUserDataE = hidden unnamed_addr alias void (%"class.net::CertPathIter"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.base::SupportsUserData"*), void (%"class.net::CertPathIter"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.base::SupportsUserData"*)* @_ZN3net12CertPathIterC2E13scoped_refptrINS_17ParsedCertificateEEPKNS_10TrustStoreEPN4base16SupportsUserDataE
@_ZN3net25CertPathBuilderResultPathC1Ev = hidden unnamed_addr alias void (%"struct.net::CertPathBuilderResultPath"*), void (%"struct.net::CertPathBuilderResultPath"*)* @_ZN3net25CertPathBuilderResultPathC2Ev
@_ZN3net25CertPathBuilderResultPathD1Ev = hidden unnamed_addr alias void (%"struct.net::CertPathBuilderResultPath"*), void (%"struct.net::CertPathBuilderResultPath"*)* @_ZN3net25CertPathBuilderResultPathD2Ev
@_ZN3net15CertPathBuilder6ResultC1Ev = hidden unnamed_addr alias void (%"struct.net::CertPathBuilder::Result"*), void (%"struct.net::CertPathBuilder::Result"*)* @_ZN3net15CertPathBuilder6ResultC2Ev
@_ZN3net15CertPathBuilder6ResultC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::CertPathBuilder::Result"*, %"struct.net::CertPathBuilder::Result"*), void (%"struct.net::CertPathBuilder::Result"*, %"struct.net::CertPathBuilder::Result"*)* @_ZN3net15CertPathBuilder6ResultC2EOS1_
@_ZN3net15CertPathBuilder6ResultD1Ev = hidden unnamed_addr alias void (%"struct.net::CertPathBuilder::Result"*), void (%"struct.net::CertPathBuilder::Result"*)* @_ZN3net15CertPathBuilder6ResultD2Ev
@_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE = hidden unnamed_addr alias void (%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"*, i32, i32, %"class.std::__1::set"*, i32, i32), void (%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"*, i32, i32, %"class.std::__1::set"*, i32, i32)* @_ZN3net15CertPathBuilderC2E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE
@_ZN3net15CertPathBuilderD1Ev = hidden unnamed_addr alias void (%"class.net::CertPathBuilder"*), void (%"class.net::CertPathBuilder"*)* @_ZN3net15CertPathBuilderD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.net::ParsedCertificate"* @_ZNK3net25CertPathBuilderResultPath14GetTrustedCertEv(%"struct.net::CertPathBuilderResultPath"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %3, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 -1, i32 0
  %14 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %13, align 8
  br label %15

15:                                               ; preds = %7, %1, %12
  %16 = phi %"class.net::ParsedCertificate"* [ %14, %12 ], [ null, %1 ], [ null, %7 ]
  ret %"class.net::ParsedCertificate"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertPathIterC2E13scoped_refptrINS_17ParsedCertificateEEPKNS_10TrustStoreEPN4base16SupportsUserDataE(%"class.net::CertPathIter"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.base::SupportsUserData"*) unnamed_addr #1 align 2 {
  %5 = ptrtoint %"class.net::ParsedCertificate"* %1 to i64
  %6 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1
  %8 = bitcast %"class.net::(anonymous namespace)::CertIssuerIterPath"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  %9 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::vector.103"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #15
  %15 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 3
  store %"class.net::TrustStore"* %2, %"class.net::TrustStore"** %15, align 8
  %16 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 4
  store %"class.base::SupportsUserData"* %3, %"class.base::SupportsUserData"** %16, align 8
  %17 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 0
  %18 = bitcast %"class.net::CertPathIter"* %0 to i64*
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.net::TrustStore"* %2 to void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)***
  %20 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)**, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %20, i64 4
  %22 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %21, align 8
  %23 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 1
  tail call void %22(%"class.net::TrustStore"* %2, %class.scoped_refptr* dereferenceable(8) %17, %"struct.net::CertificateTrust"* %23, %"class.base::SupportsUserData"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12CertPathIter19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathIter"*, %"class.net::CertIssuerSource"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.net::CertIssuerSource"* %1 to i64
  %4 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %5, align 8
  %7 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %7, align 8
  %9 = icmp eq %"class.net::CertIssuerSource"** %6, %8
  %10 = ptrtoint %"class.net::CertIssuerSource"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.net::CertIssuerSource"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %6, i64 1
  %14 = ptrtoint %"class.net::CertIssuerSource"** %13 to i64
  %15 = bitcast %"class.net::CertIssuerSource"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.net::CertIssuerSource"** %6 to i64
  %18 = bitcast %"class.net::CertIssuerSource"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.103"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.103"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #16
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.net::CertIssuerSource"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #17
  %44 = bitcast i8* %43 to %"class.net::CertIssuerSource"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.net::CertIssuerSource"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %47, i64 %22
  %49 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %47, i64 %46
  %50 = ptrtoint %"class.net::CertIssuerSource"** %49 to i64
  %51 = bitcast %"class.net::CertIssuerSource"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %48, i64 1
  %53 = ptrtoint %"class.net::CertIssuerSource"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.net::CertIssuerSource"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %48, i64 %60
  %62 = ptrtoint %"class.net::CertIssuerSource"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.net::CertIssuerSource"** %61 to i8*
  %66 = bitcast %"class.net::CertIssuerSource"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #15
  %67 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.net::CertIssuerSource"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.net::CertIssuerSource"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.net::CertIssuerSource"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12CertPathIter11GetNextPathEPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEEPNS_16CertificateTrustEN4base9TimeTicksEPjj(%"class.net::CertPathIter"*, %"class.std::__1::vector.58"*, %"struct.net::CertificateTrust"* nocapture, i64, i32* nocapture, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.net::der::Input"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.net::der::Input"*
  %11 = alloca %"class.std::__1::tuple.230", align 8
  %12 = alloca %class.scoped_refptr, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.net::der::Input"*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"class.net::der::Input"*
  %17 = alloca %"class.std::__1::tuple.230", align 8
  %18 = alloca %"class.std::__1::unique_ptr.138", align 8
  %19 = alloca %class.anon.213, align 1
  %20 = alloca %"class.std::__1::vector.58", align 8
  %21 = alloca %"class.std::__1::vector.58", align 8
  %22 = alloca %"class.std::__1::vector.58", align 8
  %23 = alloca %"class.std::__1::vector.58", align 8
  %24 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %25 = alloca <2 x i64>, align 16
  %26 = bitcast <2 x i64>* %25 to %"class.net::der::Input"*
  %27 = alloca <2 x i64>, align 16
  %28 = bitcast <2 x i64>* %27 to %"class.net::der::Input"*
  %29 = alloca %"class.std::__1::unique_ptr.100", align 8
  %30 = alloca %"class.std::__1::tuple.230", align 8
  %31 = icmp eq i64 %3, 0
  %32 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %35 = icmp ne i32 %5, 0
  %36 = bitcast %"class.std::__1::vector.58"* %21 to i8*
  %37 = bitcast %"class.std::__1::vector.58"* %23 to i8*
  %38 = bitcast %"class.std::__1::vector.58"* %20 to i8*
  %39 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %20, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %20, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::vector.58"* %20 to i64*
  %42 = bitcast %"class.std::__1::vector.58"* %21 to i64*
  %43 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %21, i64 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::vector.58"* %21 to i8**
  %45 = bitcast %"class.std::__1::vector.58"* %20 to i8**
  %46 = bitcast %"class.std::__1::unique_ptr.138"* %18 to i8*
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %18, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.138"* %18 to i64*
  %49 = bitcast %"class.std::__1::vector.58"* %22 to i8*
  %50 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %22, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %22, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::vector.58"* %23 to i64*
  %54 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %23, i64 0, i32 0, i32 1
  %55 = bitcast %class.scoped_refptr** %54 to i64*
  %56 = bitcast %class.scoped_refptr** %52 to i64*
  %57 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %class.scoped_refptr** %57 to i64*
  %59 = bitcast %"class.std::__1::vector.58"* %23 to i8**
  %60 = bitcast %"class.std::__1::vector.58"* %22 to i8**
  %61 = bitcast %"class.net::CertPathIter"* %0 to i64*
  %62 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 1
  %63 = bitcast %"struct.net::CertificateTrust"* %62 to i64*
  %64 = getelementptr inbounds %class.anon.213, %class.anon.213* %19, i64 0, i32 0
  %65 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1
  %67 = bitcast %"class.std::__1::tuple.230"* %11 to i8*
  %68 = bitcast <2 x i64>* %9 to i8*
  %69 = bitcast <2 x i64>* %7 to i8*
  %70 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 1, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %11, i64 0, i32 0, i32 2, i32 0, i32 1
  %76 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0
  %77 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %78 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 2
  %79 = ptrtoint %"class.std::__1::vector.103"* %78 to i64
  %80 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 3
  %81 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 4
  %82 = bitcast %"class.net::TrustStore"** %80 to i64*
  %83 = bitcast %"class.base::SupportsUserData"** %81 to i64*
  %84 = bitcast %"class.std::__1::unique_ptr.100"* %29 to i8*
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %29, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.100"* %29 to i8**
  %87 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1
  %88 = bitcast %"class.std::__1::tuple.230"* %30 to i8*
  %89 = bitcast <2 x i64>* %27 to i8*
  %90 = bitcast <2 x i64>* %25 to i8*
  %91 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 1, i32 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %30, i64 0, i32 0, i32 2, i32 0, i32 1
  %97 = getelementptr inbounds %"class.std::__1::set.168", %"class.std::__1::set.168"* %87, i64 0, i32 0
  %98 = bitcast %"class.std::__1::__tree_end_node"** %24 to i8*
  %99 = bitcast %"class.std::__1::__tree_end_node"** %24 to i64*
  %100 = getelementptr inbounds %"class.std::__1::set.168", %"class.std::__1::set.168"* %87, i64 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::set.168"* %87 to i64*
  %102 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %104 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.std::__1::unique_ptr.100"** %34 to i64*
  %106 = bitcast %"class.net::(anonymous namespace)::CertIssuerIterPath"* %66 to i64*
  %107 = bitcast %"class.std::__1::unique_ptr.100"** %104 to i64*
  %108 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuerIterPath", %"class.net::(anonymous namespace)::CertIssuerIterPath"* %66, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::tuple.230"* %17 to i8*
  %110 = bitcast <2 x i64>* %15 to i8*
  %111 = bitcast <2 x i64>* %13 to i8*
  %112 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 1, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %17, i64 0, i32 0, i32 2, i32 0, i32 1
  %118 = bitcast %class.scoped_refptr** %40 to <2 x i64>*
  %119 = bitcast %class.scoped_refptr** %43 to <2 x i64>*
  br label %120

120:                                              ; preds = %894, %6
  br i1 %31, label %124, label %121

121:                                              ; preds = %120
  %122 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %123 = icmp sgt i64 %122, %3
  br i1 %123, label %895, label %124

124:                                              ; preds = %120, %121
  %125 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  %126 = icmp eq %"class.net::ParsedCertificate"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = load i32, i32* %65, align 8
  br label %544

129:                                              ; preds = %124
  %130 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %33, align 8
  %131 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %132 = icmp eq %"class.std::__1::unique_ptr.100"* %130, %131
  br i1 %132, label %895, label %133

133:                                              ; preds = %129
  %134 = load i32, i32* %4, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %4, align 4
  %136 = icmp ugt i32 %135, %5
  %137 = and i1 %35, %136
  br i1 %137, label %895, label %138

138:                                              ; preds = %133
  %139 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %139, i64 -1, i32 0, i32 0, i32 0
  %141 = load %"class.net::(anonymous namespace)::CertIssuersIter"*, %"class.net::(anonymous namespace)::CertIssuersIter"** %140, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  %142 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 8
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %218

145:                                              ; preds = %138
  store i8 1, i8* %142, align 8
  %146 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 1
  %147 = load %"class.std::__1::vector.103"*, %"class.std::__1::vector.103"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %147, i64 0, i32 0, i32 1
  %151 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %150, align 8
  %152 = icmp eq %"class.net::CertIssuerSource"** %149, %151
  br i1 %152, label %218, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 0, i32 0
  br label %155

155:                                              ; preds = %215, %153
  %156 = phi %"class.net::CertIssuerSource"** [ %149, %153 ], [ %216, %215 ]
  %157 = load %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %156, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #15
  %158 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %154, align 8
  %159 = bitcast %"class.net::CertIssuerSource"* %157 to void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)***
  %160 = load void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)**, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)*, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)** %160, i64 2
  %162 = load void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)*, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.58"*)** %161, align 8
  call void %162(%"class.net::CertIssuerSource"* %157, %"class.net::ParsedCertificate"* %158, %"class.std::__1::vector.58"* nonnull %20) #15
  %163 = load i64, i64* %41, align 8
  store i64 %163, i64* %42, align 8
  %164 = load <2 x i64>, <2 x i64>* %118, align 8
  store <2 x i64> %164, <2 x i64>* %119, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #15
  call fastcc void @_ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::CertIssuersIter"* %141, %"class.std::__1::vector.58"* nonnull %21) #15
  %165 = inttoptr i64 %163 to %class.scoped_refptr*
  %166 = icmp eq i64 %163, 0
  %167 = extractelement <2 x i64> %164, i32 0
  %168 = inttoptr i64 %167 to %class.scoped_refptr*
  br i1 %166, label %190, label %169

169:                                              ; preds = %155
  %170 = inttoptr i64 %163 to i8*
  %171 = icmp eq %class.scoped_refptr* %168, %165
  br i1 %171, label %188, label %172

172:                                              ; preds = %169, %184
  %173 = phi %class.scoped_refptr* [ %174, %184 ], [ %168, %169 ]
  %174 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 -1
  %175 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 0, i32 0
  %176 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %175, align 8
  %177 = icmp eq %"class.net::ParsedCertificate"* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw sub i32* %179, i32 1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %184

182:                                              ; preds = %178
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %176) #15
  %183 = bitcast %"class.net::ParsedCertificate"* %176 to i8*
  call void @_ZdlPv(i8* %183) #17
  br label %184

184:                                              ; preds = %182, %178, %172
  %185 = icmp eq %class.scoped_refptr* %174, %165
  br i1 %185, label %186, label %172

186:                                              ; preds = %184
  %187 = load i8*, i8** %44, align 8
  br label %188

188:                                              ; preds = %186, %169
  %189 = phi i8* [ %187, %186 ], [ %170, %169 ]
  store %class.scoped_refptr* %165, %class.scoped_refptr** %43, align 8
  call void @_ZdlPv(i8* %189) #17
  br label %190

190:                                              ; preds = %188, %155
  %191 = load %class.scoped_refptr*, %class.scoped_refptr** %39, align 8
  %192 = icmp eq %class.scoped_refptr* %191, null
  br i1 %192, label %215, label %193

193:                                              ; preds = %190
  %194 = bitcast %class.scoped_refptr* %191 to i8*
  %195 = load %class.scoped_refptr*, %class.scoped_refptr** %40, align 8
  %196 = icmp eq %class.scoped_refptr* %195, %191
  br i1 %196, label %213, label %197

197:                                              ; preds = %193, %209
  %198 = phi %class.scoped_refptr* [ %199, %209 ], [ %195, %193 ]
  %199 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %198, i64 -1
  %200 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %199, i64 0, i32 0
  %201 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %200, align 8
  %202 = icmp eq %"class.net::ParsedCertificate"* %201, null
  br i1 %202, label %209, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw sub i32* %204, i32 1 acq_rel
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %201) #15
  %208 = bitcast %"class.net::ParsedCertificate"* %201 to i8*
  call void @_ZdlPv(i8* %208) #17
  br label %209

209:                                              ; preds = %207, %203, %197
  %210 = icmp eq %class.scoped_refptr* %199, %191
  br i1 %210, label %211, label %197

211:                                              ; preds = %209
  %212 = load i8*, i8** %45, align 8
  br label %213

213:                                              ; preds = %211, %193
  %214 = phi i8* [ %212, %211 ], [ %194, %193 ]
  store %class.scoped_refptr* %191, %class.scoped_refptr** %40, align 8
  call void @_ZdlPv(i8* %214) #17
  br label %215

215:                                              ; preds = %213, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #15
  %216 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %156, i64 1
  %217 = icmp eq %"class.net::CertIssuerSource"** %216, %151
  br i1 %217, label %218, label %155

218:                                              ; preds = %215, %145, %138
  %219 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 4
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 3
  %222 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 3, i32 0, i32 1
  %223 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.std::__1::vector.110"* %221 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %224, %226
  %228 = ashr exact i64 %227, 4
  %229 = icmp ult i64 %220, %228
  %230 = inttoptr i64 %226 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %231 = inttoptr i64 %224 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br i1 %229, label %406, label %232

232:                                              ; preds = %218
  %233 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 9
  %234 = load i8, i8* %233, align 1, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %291

236:                                              ; preds = %232
  store i8 1, i8* %233, align 1
  %237 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 10
  store i64 0, i64* %237, align 8
  %238 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 1
  %239 = load %"class.std::__1::vector.103"*, %"class.std::__1::vector.103"** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %239, i64 0, i32 0, i32 0
  %241 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %240, align 8
  %242 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %239, i64 0, i32 0, i32 1
  %243 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %242, align 8
  %244 = icmp eq %"class.net::CertIssuerSource"** %241, %243
  br i1 %244, label %291, label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 11, i32 0, i32 1
  %248 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %249 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 11
  %250 = bitcast %"class.std::__1::unique_ptr.138"** %247 to i64*
  br label %251

251:                                              ; preds = %280, %245
  %252 = phi %"class.net::CertIssuerSource"** [ %241, %245 ], [ %281, %280 ]
  %253 = load %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %252, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  store i64 0, i64* %48, align 8
  %254 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %246, align 8
  %255 = bitcast %"class.net::CertIssuerSource"* %253 to void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)***
  %256 = load void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)**, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)*** %255, align 8
  %257 = getelementptr inbounds void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)*, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)** %256, i64 3
  %258 = load void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)*, void (%"class.net::CertIssuerSource"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.138"*)** %257, align 8
  call void %258(%"class.net::CertIssuerSource"* %253, %"class.net::ParsedCertificate"* %254, %"class.std::__1::unique_ptr.138"* nonnull %18) #15
  %259 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %47, align 8
  %260 = icmp eq %"class.net::CertIssuerSource::Request"* %259, null
  %261 = ptrtoint %"class.net::CertIssuerSource::Request"* %259 to i64
  br i1 %260, label %262, label %263

262:                                              ; preds = %251
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %47, align 8
  br label %280

263:                                              ; preds = %251
  %264 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %247, align 8
  %265 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %248, align 8
  %266 = icmp ult %"class.std::__1::unique_ptr.138"* %264, %265
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %47, align 8
  %268 = bitcast %"class.std::__1::unique_ptr.138"* %264 to i64*
  store i64 %261, i64* %268, align 8
  %269 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %264, i64 1
  %270 = ptrtoint %"class.std::__1::unique_ptr.138"* %269 to i64
  store i64 %270, i64* %250, align 8
  br label %272

271:                                              ; preds = %263
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net16CertIssuerSource7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.136"* %249, %"class.std::__1::unique_ptr.138"* nonnull dereferenceable(8) %18) #15
  br label %272

272:                                              ; preds = %271, %267
  %273 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %47, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %47, align 8
  %274 = icmp eq %"class.net::CertIssuerSource::Request"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %272
  %276 = bitcast %"class.net::CertIssuerSource::Request"* %273 to void (%"class.net::CertIssuerSource::Request"*)***
  %277 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %277, i64 1
  %279 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %278, align 8
  call void %279(%"class.net::CertIssuerSource::Request"* nonnull %273) #15
  br label %280

280:                                              ; preds = %275, %272, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  %281 = getelementptr inbounds %"class.net::CertIssuerSource"*, %"class.net::CertIssuerSource"** %252, i64 1
  %282 = icmp eq %"class.net::CertIssuerSource"** %281, %243
  br i1 %282, label %283, label %251

283:                                              ; preds = %280
  %284 = load i64, i64* %219, align 8
  %285 = load i64, i64* %223, align 8
  %286 = load i64, i64* %225, align 8
  %287 = inttoptr i64 %286 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %288 = inttoptr i64 %285 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %289 = sub i64 %285, %286
  %290 = ashr exact i64 %289, 4
  br label %291

291:                                              ; preds = %283, %236, %232
  %292 = phi i64 [ %290, %283 ], [ %228, %236 ], [ %228, %232 ]
  %293 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %287, %283 ], [ %230, %236 ], [ %230, %232 ]
  %294 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %288, %283 ], [ %231, %236 ], [ %231, %232 ]
  %295 = phi i64 [ %286, %283 ], [ %226, %236 ], [ %226, %232 ]
  %296 = phi i64 [ %285, %283 ], [ %224, %236 ], [ %224, %232 ]
  %297 = phi i64 [ %284, %283 ], [ %220, %236 ], [ %220, %232 ]
  %298 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 10
  %299 = icmp ult i64 %297, %292
  br i1 %299, label %406, label %300

300:                                              ; preds = %291
  %301 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 11
  %302 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 11, i32 0, i32 1
  %303 = bitcast %"class.std::__1::unique_ptr.138"** %302 to i64*
  %304 = bitcast %"class.std::__1::vector.136"* %301 to i64*
  %305 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %301, i64 0, i32 0, i32 0
  %306 = load i64, i64* %298, align 8
  %307 = load i64, i64* %303, align 8
  %308 = load i64, i64* %304, align 8
  %309 = sub i64 %307, %308
  %310 = ashr exact i64 %309, 3
  %311 = icmp ult i64 %306, %310
  br i1 %311, label %325, label %312

312:                                              ; preds = %300
  %313 = sub i64 %296, %295
  %314 = ashr exact i64 %313, 4
  br label %406

315:                                              ; preds = %396
  %316 = load i64, i64* %298, align 8
  %317 = load i64, i64* %303, align 8
  %318 = load i64, i64* %304, align 8
  %319 = sub i64 %317, %318
  %320 = ashr exact i64 %319, 3
  %321 = icmp ult i64 %316, %320
  br i1 %321, label %325, label %322

322:                                              ; preds = %315
  %323 = inttoptr i64 %399 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %324 = inttoptr i64 %398 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br label %406

325:                                              ; preds = %300, %315
  %326 = phi i64 [ %318, %315 ], [ %308, %300 ]
  %327 = phi i64 [ %316, %315 ], [ %306, %300 ]
  %328 = inttoptr i64 %326 to %"class.std::__1::unique_ptr.138"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #15
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %328, i64 %327, i32 0, i32 0, i32 0
  %330 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %329, align 8
  %331 = bitcast %"class.net::CertIssuerSource::Request"* %330 to void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)***
  %332 = load void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)**, void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)*** %331, align 8
  %333 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)*, void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)** %332, i64 2
  %334 = load void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)*, void (%"class.net::CertIssuerSource::Request"*, %"class.std::__1::vector.58"*)** %333, align 8
  call void %334(%"class.net::CertIssuerSource::Request"* %330, %"class.std::__1::vector.58"* nonnull %22) #15
  %335 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %336 = load %class.scoped_refptr*, %class.scoped_refptr** %51, align 8
  %337 = icmp eq %class.scoped_refptr* %335, %336
  br i1 %337, label %338, label %350

338:                                              ; preds = %325
  %339 = load i64, i64* %298, align 8
  %340 = add i64 %339, 1
  store i64 %340, i64* %298, align 8
  %341 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %305, align 8
  %342 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %341, i64 %339, i32 0, i32 0, i32 0
  %343 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %342, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %342, align 8
  %344 = icmp eq %"class.net::CertIssuerSource::Request"* %343, null
  br i1 %344, label %371, label %345

345:                                              ; preds = %338
  %346 = bitcast %"class.net::CertIssuerSource::Request"* %343 to void (%"class.net::CertIssuerSource::Request"*)***
  %347 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %347, i64 1
  %349 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %348, align 8
  call void %349(%"class.net::CertIssuerSource::Request"* nonnull %343) #15
  br label %371

350:                                              ; preds = %325
  %351 = ptrtoint %class.scoped_refptr* %336 to i64
  %352 = ptrtoint %class.scoped_refptr* %335 to i64
  store i64 %352, i64* %53, align 8
  store i64 %351, i64* %55, align 8
  %353 = load i64, i64* %56, align 8
  store i64 %353, i64* %58, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #15
  call fastcc void @_ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::CertIssuersIter"* %141, %"class.std::__1::vector.58"* nonnull %23) #15
  %354 = icmp eq %class.scoped_refptr* %335, null
  br i1 %354, label %371, label %355

355:                                              ; preds = %350, %367
  %356 = phi %class.scoped_refptr* [ %357, %367 ], [ %336, %350 ]
  %357 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %356, i64 -1
  %358 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %357, i64 0, i32 0
  %359 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %358, align 8
  %360 = icmp eq %"class.net::ParsedCertificate"* %359, null
  br i1 %360, label %367, label %361

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %359, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = atomicrmw sub i32* %362, i32 1 acq_rel
  %364 = icmp eq i32 %363, 1
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %359) #15
  %366 = bitcast %"class.net::ParsedCertificate"* %359 to i8*
  call void @_ZdlPv(i8* %366) #17
  br label %367

367:                                              ; preds = %365, %361, %355
  %368 = icmp eq %class.scoped_refptr* %357, %335
  br i1 %368, label %369, label %355

369:                                              ; preds = %367
  %370 = load i8*, i8** %59, align 8
  store %class.scoped_refptr* %335, %class.scoped_refptr** %54, align 8
  call void @_ZdlPv(i8* %370) #17
  br label %371

371:                                              ; preds = %369, %350, %345, %338
  %372 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %373 = icmp eq %class.scoped_refptr* %372, null
  br i1 %373, label %396, label %374

374:                                              ; preds = %371
  %375 = bitcast %class.scoped_refptr* %372 to i8*
  %376 = load %class.scoped_refptr*, %class.scoped_refptr** %51, align 8
  %377 = icmp eq %class.scoped_refptr* %376, %372
  br i1 %377, label %394, label %378

378:                                              ; preds = %374, %390
  %379 = phi %class.scoped_refptr* [ %380, %390 ], [ %376, %374 ]
  %380 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %379, i64 -1
  %381 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %380, i64 0, i32 0
  %382 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %381, align 8
  %383 = icmp eq %"class.net::ParsedCertificate"* %382, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %378
  %385 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %382, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = atomicrmw sub i32* %385, i32 1 acq_rel
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %382) #15
  %389 = bitcast %"class.net::ParsedCertificate"* %382 to i8*
  call void @_ZdlPv(i8* %389) #17
  br label %390

390:                                              ; preds = %388, %384, %378
  %391 = icmp eq %class.scoped_refptr* %380, %372
  br i1 %391, label %392, label %378

392:                                              ; preds = %390
  %393 = load i8*, i8** %60, align 8
  br label %394

394:                                              ; preds = %392, %374
  %395 = phi i8* [ %393, %392 ], [ %375, %374 ]
  store %class.scoped_refptr* %372, %class.scoped_refptr** %51, align 8
  call void @_ZdlPv(i8* %395) #17
  br label %396

396:                                              ; preds = %394, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  %397 = load i64, i64* %219, align 8
  %398 = load i64, i64* %223, align 8
  %399 = load i64, i64* %225, align 8
  %400 = sub i64 %398, %399
  %401 = ashr exact i64 %400, 4
  %402 = icmp ult i64 %397, %401
  br i1 %402, label %403, label %315

403:                                              ; preds = %396
  %404 = inttoptr i64 %399 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %405 = inttoptr i64 %398 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br label %406

406:                                              ; preds = %322, %312, %403, %291, %218
  %407 = phi i64 [ %292, %291 ], [ %228, %218 ], [ %401, %403 ], [ %314, %312 ], [ %401, %322 ]
  %408 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %293, %291 ], [ %230, %218 ], [ %404, %403 ], [ %293, %312 ], [ %323, %322 ]
  %409 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %294, %291 ], [ %231, %218 ], [ %405, %403 ], [ %294, %312 ], [ %324, %322 ]
  %410 = phi i64 [ %297, %291 ], [ %220, %218 ], [ %397, %403 ], [ %297, %312 ], [ %397, %322 ]
  %411 = icmp ult i64 %410, %407
  br i1 %411, label %412, label %466

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %141, i64 0, i32 5
  %414 = load i8, i8* %413, align 8, !range !2
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %441, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %408, i64 %410
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %64) #15
  %418 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %417 to i64
  %419 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %409 to i64
  %420 = sub i64 %419, %418
  %421 = ashr exact i64 %420, 4
  %422 = icmp sgt i64 %420, 0
  br i1 %422, label %423, label %434

423:                                              ; preds = %416
  %424 = icmp slt i64 %421, 576460752303423487
  %425 = select i1 %424, i64 %421, i64 576460752303423487
  br label %426

426:                                              ; preds = %431, %423
  %427 = phi i64 [ %432, %431 ], [ %425, %423 ]
  %428 = shl i64 %427, 4
  %429 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %428, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %430 = icmp eq i8* %429, null
  br i1 %430, label %431, label %435

431:                                              ; preds = %426
  %432 = lshr i64 %427, 1
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %426

434:                                              ; preds = %431, %416
  call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %417, %"struct.net::(anonymous namespace)::IssuerEntry"* %409, %class.anon.213* nonnull dereferenceable(1) %19, i64 %421, %"struct.net::(anonymous namespace)::IssuerEntry"* null, i64 0) #15
  br label %437

435:                                              ; preds = %426
  %436 = bitcast i8* %429 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %417, %"struct.net::(anonymous namespace)::IssuerEntry"* %409, %class.anon.213* nonnull dereferenceable(1) %19, i64 %421, %"struct.net::(anonymous namespace)::IssuerEntry"* nonnull %436, i64 %427) #15
  call void @_ZdlPv(i8* nonnull %429) #17
  br label %437

437:                                              ; preds = %435, %434
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %64) #15
  store i8 0, i8* %413, align 8
  %438 = load i64, i64* %219, align 8
  %439 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %221, i64 0, i32 0, i32 0
  %440 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %439, align 8
  br label %441

441:                                              ; preds = %437, %412
  %442 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %408, %412 ], [ %440, %437 ]
  %443 = phi i64 [ %410, %412 ], [ %438, %437 ]
  %444 = add i64 %443, 1
  store i64 %444, i64* %219, align 8
  %445 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %442, i64 %443, i32 0, i32 0
  %446 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %445, align 8
  %447 = icmp eq %"class.net::ParsedCertificate"* %446, null
  br i1 %447, label %451, label %448

448:                                              ; preds = %441
  %449 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = atomicrmw add i32* %449, i32 1 monotonic
  br label %451

451:                                              ; preds = %448, %441
  %452 = ptrtoint %"class.net::ParsedCertificate"* %446 to i64
  %453 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store i64 %452, i64* %61, align 8
  %454 = icmp eq %"class.net::ParsedCertificate"* %453, null
  br i1 %454, label %461, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %453, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = atomicrmw sub i32* %456, i32 1 acq_rel
  %458 = icmp eq i32 %457, 1
  br i1 %458, label %459, label %461

459:                                              ; preds = %455
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %453) #15
  %460 = bitcast %"class.net::ParsedCertificate"* %453 to i8*
  call void @_ZdlPv(i8* %460) #17
  br label %461

461:                                              ; preds = %459, %455, %451
  %462 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %442, i64 %443, i32 1
  %463 = bitcast %"struct.net::CertificateTrust"* %462 to i64*
  %464 = load i64, i64* %463, align 8
  store i64 %464, i64* %63, align 8
  %465 = trunc i64 %464 to i32
  br label %476

466:                                              ; preds = %406
  %467 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store i64 0, i64* %61, align 8
  %468 = icmp eq %"class.net::ParsedCertificate"* %467, null
  br i1 %468, label %475, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %467, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = atomicrmw sub i32* %470, i32 1 acq_rel
  %472 = icmp eq i32 %471, 1
  br i1 %472, label %473, label %475

473:                                              ; preds = %469
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %467) #15
  %474 = bitcast %"class.net::ParsedCertificate"* %467 to i8*
  call void @_ZdlPv(i8* %474) #17
  br label %475

475:                                              ; preds = %473, %469, %466
  store i64 1, i64* %63, align 8
  br label %476

476:                                              ; preds = %461, %475
  %477 = phi i32 [ %465, %461 ], [ 1, %475 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  %478 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  %479 = icmp eq %"class.net::ParsedCertificate"* %478, null
  br i1 %479, label %480, label %544

480:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %109) #15
  %481 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %482 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %481, i64 -1, i32 0, i32 0, i32 0
  %483 = load %"class.net::(anonymous namespace)::CertIssuersIter"*, %"class.net::(anonymous namespace)::CertIssuersIter"** %482, align 8
  %484 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %483, i64 0, i32 0, i32 0
  %485 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %484, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #15, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #15, !noalias !3
  %486 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %485, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %14, %"class.std::__1::basic_string"* %486) #15, !noalias !3
  %487 = load <2 x i64>, <2 x i64>* %13, align 16, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #15, !noalias !3
  store <2 x i64> %487, <2 x i64>* %15, align 16, !noalias !3
  %488 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* nonnull %16) #15, !noalias !3
  %489 = extractvalue { i8*, i64 } %488, 0
  %490 = extractvalue { i8*, i64 } %488, 1
  %491 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %485, i64 0, i32 17, i32 1
  %492 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %491) #15, !noalias !3
  %493 = extractvalue { i8*, i64 } %492, 0
  %494 = extractvalue { i8*, i64 } %492, 1
  %495 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %485, i64 0, i32 6, i32 7
  %496 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %495) #15, !noalias !3
  %497 = extractvalue { i8*, i64 } %496, 0
  %498 = extractvalue { i8*, i64 } %496, 1
  store i8* %489, i8** %112, align 8, !alias.scope !3
  store i64 %490, i64* %113, align 8, !alias.scope !3
  store i8* %493, i8** %114, align 8, !alias.scope !3
  store i64 %494, i64* %115, align 8, !alias.scope !3
  store i8* %497, i8** %116, align 8, !alias.scope !3
  store i64 %498, i64* %117, align 8, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #15, !noalias !3
  %499 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree.169"* %97, %"class.std::__1::tuple.230"* nonnull dereferenceable(48) %17) #15
  %500 = icmp eq %"class.std::__1::__tree_end_node"* %499, %77
  br i1 %500, label %541, label %501

501:                                              ; preds = %480
  %502 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %499, i64 1, i32 0
  %503 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %502, align 8
  %504 = icmp eq %"class.std::__1::__tree_node_base"* %503, null
  br i1 %504, label %505, label %513

505:                                              ; preds = %501
  %506 = bitcast %"class.std::__1::__tree_end_node"* %499 to %"class.std::__1::__tree_node_base"*
  %507 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %499, i64 2
  %508 = bitcast %"class.std::__1::__tree_end_node"* %507 to %"class.std::__1::__tree_end_node"**
  %509 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %508, align 8
  %510 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %509, i64 0, i32 0
  %511 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %510, align 8
  %512 = icmp eq %"class.std::__1::__tree_node_base"* %511, %506
  br i1 %512, label %529, label %520

513:                                              ; preds = %501, %513
  %514 = phi %"class.std::__1::__tree_node_base"* [ %516, %513 ], [ %503, %501 ]
  %515 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %514, i64 0, i32 0, i32 0
  %516 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %515, align 8
  %517 = icmp eq %"class.std::__1::__tree_node_base"* %516, null
  br i1 %517, label %518, label %513

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %514, i64 0, i32 0
  br label %529

520:                                              ; preds = %505, %520
  %521 = phi %"class.std::__1::__tree_end_node"** [ %524, %520 ], [ %508, %505 ]
  %522 = bitcast %"class.std::__1::__tree_end_node"** %521 to %"class.std::__1::__tree_node_base"**
  %523 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %522, align 8
  %524 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %523, i64 0, i32 2
  %525 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %524, align 8
  %526 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %525, i64 0, i32 0
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %526, align 8
  %528 = icmp eq %"class.std::__1::__tree_node_base"* %527, %523
  br i1 %528, label %529, label %520

529:                                              ; preds = %520, %518, %505
  %530 = phi %"class.std::__1::__tree_end_node"* [ %519, %518 ], [ %509, %505 ], [ %525, %520 ]
  %531 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %532 = icmp eq %"class.std::__1::__tree_end_node"* %531, %499
  br i1 %532, label %533, label %535

533:                                              ; preds = %529
  %534 = ptrtoint %"class.std::__1::__tree_end_node"* %530 to i64
  store i64 %534, i64* %101, align 8
  br label %535

535:                                              ; preds = %533, %529
  %536 = load i64, i64* %103, align 8
  %537 = add i64 %536, -1
  store i64 %537, i64* %103, align 8
  %538 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %539 = bitcast %"class.std::__1::__tree_end_node"* %499 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %538, %"class.std::__1::__tree_node_base"* %539) #15
  %540 = bitcast %"class.std::__1::__tree_end_node"* %499 to i8*
  call void @_ZdlPv(i8* %540) #17
  br label %541

541:                                              ; preds = %480, %535
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %109) #15
  %542 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %543 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %542, i64 -1
  call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_115CertIssuersIterENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.100"* %543) #15
  store %"class.std::__1::unique_ptr.100"* %543, %"class.std::__1::unique_ptr.100"** %34, align 8
  br label %894

544:                                              ; preds = %127, %476
  %545 = phi i32 [ %128, %127 ], [ %477, %476 ]
  %546 = and i32 %545, -2
  %547 = icmp eq i32 %546, 2
  br i1 %547, label %548, label %554

548:                                              ; preds = %544
  %549 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %33, align 8
  %550 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %551 = icmp eq %"class.std::__1::unique_ptr.100"* %549, %550
  br i1 %551, label %552, label %554

552:                                              ; preds = %548
  %553 = call i32 @_ZN3net16CertificateTrust14ForUnspecifiedEv() #15
  store i32 %553, i32* %65, align 8
  br label %554

554:                                              ; preds = %548, %552, %544
  %555 = phi i32 [ %545, %544 ], [ %553, %552 ], [ %545, %548 ]
  switch i32 %555, label %894 [
    i32 0, label %556
    i32 2, label %556
    i32 3, label %556
    i32 1, label %643
  ]

556:                                              ; preds = %554, %554, %554
  %557 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %0, i64 0, i32 0, i32 0
  %558 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 0
  %559 = load %class.scoped_refptr*, %class.scoped_refptr** %558, align 8
  %560 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 1
  %561 = load %class.scoped_refptr*, %class.scoped_refptr** %560, align 8
  %562 = icmp eq %class.scoped_refptr* %561, %559
  br i1 %562, label %577, label %563

563:                                              ; preds = %556, %575
  %564 = phi %class.scoped_refptr* [ %565, %575 ], [ %561, %556 ]
  %565 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %564, i64 -1
  %566 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %565, i64 0, i32 0
  %567 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %566, align 8
  %568 = icmp eq %"class.net::ParsedCertificate"* %567, null
  br i1 %568, label %575, label %569

569:                                              ; preds = %563
  %570 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %567, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = atomicrmw sub i32* %570, i32 1 acq_rel
  %572 = icmp eq i32 %571, 1
  br i1 %572, label %573, label %575

573:                                              ; preds = %569
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %567) #15
  %574 = bitcast %"class.net::ParsedCertificate"* %567 to i8*
  call void @_ZdlPv(i8* %574) #17
  br label %575

575:                                              ; preds = %573, %569, %563
  %576 = icmp eq %class.scoped_refptr* %565, %559
  br i1 %576, label %577, label %563

577:                                              ; preds = %575, %556
  store %class.scoped_refptr* %559, %class.scoped_refptr** %560, align 8
  %578 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %33, align 8
  %579 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %580 = icmp eq %"class.std::__1::unique_ptr.100"* %578, %579
  br i1 %580, label %619, label %581

581:                                              ; preds = %577
  %582 = bitcast %class.scoped_refptr* %12 to i8*
  %583 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %584 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %585 = bitcast %class.scoped_refptr** %560 to i64*
  br label %586

586:                                              ; preds = %614, %581
  %587 = phi %"class.std::__1::unique_ptr.100"* [ %578, %581 ], [ %615, %614 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582) #15
  %588 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %587, i64 0, i32 0, i32 0, i32 0
  %589 = load %"class.net::(anonymous namespace)::CertIssuersIter"*, %"class.net::(anonymous namespace)::CertIssuersIter"** %588, align 8
  %590 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %589, i64 0, i32 0, i32 0
  %591 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %590, align 8
  %592 = icmp eq %"class.net::ParsedCertificate"* %591, null
  br i1 %592, label %596, label %593

593:                                              ; preds = %586
  %594 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %591, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %595 = atomicrmw add i32* %594, i32 1 monotonic
  br label %596

596:                                              ; preds = %593, %586
  store %"class.net::ParsedCertificate"* %591, %"class.net::ParsedCertificate"** %583, align 8
  %597 = load %class.scoped_refptr*, %class.scoped_refptr** %560, align 8
  %598 = load %class.scoped_refptr*, %class.scoped_refptr** %584, align 8
  %599 = icmp ult %class.scoped_refptr* %597, %598
  br i1 %599, label %600, label %605

600:                                              ; preds = %596
  %601 = ptrtoint %"class.net::ParsedCertificate"* %591 to i64
  %602 = bitcast %class.scoped_refptr* %597 to i64*
  store i64 %601, i64* %602, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %583, align 8
  %603 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %597, i64 1
  %604 = ptrtoint %class.scoped_refptr* %603 to i64
  store i64 %604, i64* %585, align 8
  br label %614

605:                                              ; preds = %596
  call void @_ZNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.58"* %1, %class.scoped_refptr* nonnull dereferenceable(8) %12) #15
  %606 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %583, align 8
  %607 = icmp eq %"class.net::ParsedCertificate"* %606, null
  br i1 %607, label %614, label %608

608:                                              ; preds = %605
  %609 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %606, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = atomicrmw sub i32* %609, i32 1 acq_rel
  %611 = icmp eq i32 %610, 1
  br i1 %611, label %612, label %614

612:                                              ; preds = %608
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %606) #15
  %613 = bitcast %"class.net::ParsedCertificate"* %606 to i8*
  call void @_ZdlPv(i8* %613) #17
  br label %614

614:                                              ; preds = %612, %608, %605, %600
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %582) #15
  %615 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %587, i64 1
  %616 = icmp eq %"class.std::__1::unique_ptr.100"* %615, %579
  br i1 %616, label %617, label %586

617:                                              ; preds = %614
  %618 = load %class.scoped_refptr*, %class.scoped_refptr** %560, align 8
  br label %619

619:                                              ; preds = %617, %577
  %620 = phi %class.scoped_refptr* [ %618, %617 ], [ %559, %577 ]
  %621 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %622 = load %class.scoped_refptr*, %class.scoped_refptr** %621, align 8
  %623 = icmp ult %class.scoped_refptr* %620, %622
  br i1 %623, label %624, label %630

624:                                              ; preds = %619
  %625 = load i64, i64* %61, align 8
  %626 = bitcast %class.scoped_refptr* %620 to i64*
  store i64 %625, i64* %626, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %32, align 8
  %627 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %620, i64 1
  %628 = ptrtoint %class.scoped_refptr* %627 to i64
  %629 = bitcast %class.scoped_refptr** %560 to i64*
  store i64 %628, i64* %629, align 8
  br label %631

630:                                              ; preds = %619
  call void @_ZNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.58"* %1, %class.scoped_refptr* dereferenceable(8) %557) #15
  br label %631

631:                                              ; preds = %624, %630
  %632 = getelementptr inbounds %"struct.net::CertificateTrust", %"struct.net::CertificateTrust"* %2, i64 0, i32 0
  %633 = load i32, i32* %65, align 4
  store i32 %633, i32* %632, align 4
  %634 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store i64 0, i64* %61, align 8
  %635 = icmp eq %"class.net::ParsedCertificate"* %634, null
  br i1 %635, label %642, label %636

636:                                              ; preds = %631
  %637 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %634, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %638 = atomicrmw sub i32* %637, i32 1 acq_rel
  %639 = icmp eq i32 %638, 1
  br i1 %639, label %640, label %642

640:                                              ; preds = %636
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %634) #15
  %641 = bitcast %"class.net::ParsedCertificate"* %634 to i8*
  call void @_ZdlPv(i8* %641) #17
  br label %642

642:                                              ; preds = %640, %636, %631
  store i64 1, i64* %63, align 8
  br label %895

643:                                              ; preds = %554
  %644 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15, !noalias !6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #15, !noalias !6
  %645 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %644, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %8, %"class.std::__1::basic_string"* %645) #15, !noalias !6
  %646 = load <2 x i64>, <2 x i64>* %7, align 16, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #15, !noalias !6
  store <2 x i64> %646, <2 x i64>* %9, align 16, !noalias !6
  %647 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* nonnull %10) #15, !noalias !6
  %648 = extractvalue { i8*, i64 } %647, 0
  %649 = extractvalue { i8*, i64 } %647, 1
  %650 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %644, i64 0, i32 17, i32 1
  %651 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %650) #15, !noalias !6
  %652 = extractvalue { i8*, i64 } %651, 0
  %653 = extractvalue { i8*, i64 } %651, 1
  %654 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %644, i64 0, i32 6, i32 7
  %655 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %654) #15, !noalias !6
  %656 = extractvalue { i8*, i64 } %655, 0
  %657 = extractvalue { i8*, i64 } %655, 1
  store i8* %648, i8** %70, align 8, !alias.scope !6
  store i64 %649, i64* %71, align 8, !alias.scope !6
  store i8* %652, i8** %72, align 8, !alias.scope !6
  store i64 %653, i64* %73, align 8, !alias.scope !6
  store i8* %656, i8** %74, align 8, !alias.scope !6
  store i64 %657, i64* %75, align 8, !alias.scope !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15, !noalias !6
  %658 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree.169"* %76, %"class.std::__1::tuple.230"* nonnull dereferenceable(48) %11) #15
  %659 = icmp eq %"class.std::__1::__tree_end_node"* %658, %77
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #15
  br i1 %659, label %670, label %660

660:                                              ; preds = %643
  %661 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store i64 0, i64* %61, align 8
  %662 = icmp eq %"class.net::ParsedCertificate"* %661, null
  br i1 %662, label %669, label %663

663:                                              ; preds = %660
  %664 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %661, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %665 = atomicrmw sub i32* %664, i32 1 acq_rel
  %666 = icmp eq i32 %665, 1
  br i1 %666, label %667, label %669

667:                                              ; preds = %663
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %661) #15
  %668 = bitcast %"class.net::ParsedCertificate"* %661 to i8*
  call void @_ZdlPv(i8* %668) #17
  br label %669

669:                                              ; preds = %667, %663, %660
  store i64 1, i64* %63, align 8
  br label %894

670:                                              ; preds = %643
  %671 = call i8* @_Znwm(i64 152) #17
  %672 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %32, align 8
  %673 = load i64, i64* %82, align 8
  %674 = load i64, i64* %83, align 8
  %675 = bitcast i8* %671 to %"class.net::ParsedCertificate"**
  store %"class.net::ParsedCertificate"* %672, %"class.net::ParsedCertificate"** %675, align 8
  %676 = icmp eq %"class.net::ParsedCertificate"* %672, null
  br i1 %676, label %680, label %677

677:                                              ; preds = %670
  %678 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %672, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = atomicrmw add i32* %678, i32 1 monotonic
  br label %680

680:                                              ; preds = %677, %670
  %681 = getelementptr inbounds i8, i8* %671, i64 8
  %682 = bitcast i8* %681 to i64*
  store i64 %79, i64* %682, align 8
  %683 = getelementptr inbounds i8, i8* %671, i64 16
  %684 = bitcast i8* %683 to i64*
  store i64 %673, i64* %684, align 8
  %685 = getelementptr inbounds i8, i8* %671, i64 24
  %686 = getelementptr inbounds i8, i8* %671, i64 64
  %687 = getelementptr inbounds i8, i8* %671, i64 96
  %688 = bitcast i8* %687 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %686, i8 0, i64 32, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %685, i8 0, i64 33, i1 false) #15
  store i32 1065353216, i32* %688, align 4
  %689 = getelementptr inbounds i8, i8* %671, i64 104
  store i8 0, i8* %689, align 8
  %690 = getelementptr inbounds i8, i8* %671, i64 105
  store i8 0, i8* %690, align 1
  %691 = getelementptr inbounds i8, i8* %671, i64 112
  %692 = getelementptr inbounds i8, i8* %671, i64 144
  call void @llvm.memset.p0i8.i64(i8* align 8 %691, i8 0, i64 32, i1 false) #15
  %693 = bitcast i8* %692 to i64*
  store i64 %674, i64* %693, align 8
  br i1 %676, label %700, label %694

694:                                              ; preds = %680
  %695 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %672, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = atomicrmw sub i32* %695, i32 1 acq_rel
  %697 = icmp eq i32 %696, 1
  br i1 %697, label %698, label %700

698:                                              ; preds = %694
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %672) #15
  %699 = bitcast %"class.net::ParsedCertificate"* %672 to i8*
  call void @_ZdlPv(i8* %699) #17
  br label %700

700:                                              ; preds = %680, %694, %698
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  store i8* %671, i8** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %88) #15
  %701 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %675, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #15, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #15, !noalias !9
  %702 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %701, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %26, %"class.std::__1::basic_string"* %702) #15, !noalias !9
  %703 = load <2 x i64>, <2 x i64>* %25, align 16, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #15, !noalias !9
  store <2 x i64> %703, <2 x i64>* %27, align 16, !noalias !9
  %704 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* nonnull %28) #15, !noalias !9
  %705 = extractvalue { i8*, i64 } %704, 0
  %706 = extractvalue { i8*, i64 } %704, 1
  %707 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %701, i64 0, i32 17, i32 1
  %708 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %707) #15, !noalias !9
  %709 = extractvalue { i8*, i64 } %708, 0
  %710 = extractvalue { i8*, i64 } %708, 1
  %711 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %701, i64 0, i32 6, i32 7
  %712 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %711) #15, !noalias !9
  %713 = extractvalue { i8*, i64 } %712, 0
  %714 = extractvalue { i8*, i64 } %712, 1
  store i8* %705, i8** %91, align 8, !alias.scope !9
  store i64 %706, i64* %92, align 8, !alias.scope !9
  store i8* %709, i8** %93, align 8, !alias.scope !9
  store i64 %710, i64* %94, align 8, !alias.scope !9
  store i8* %713, i8** %95, align 8, !alias.scope !9
  store i64 %714, i64* %96, align 8, !alias.scope !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #15, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %24, align 8
  %715 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISH_EERKT_(%"class.std::__1::__tree.169"* %97, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %24, %"class.std::__1::tuple.230"* nonnull dereferenceable(48) %30) #15
  %716 = bitcast %"class.std::__1::__tree_node_base"** %715 to %"class.std::__1::__tree_node"**
  %717 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %716, align 8
  %718 = icmp eq %"class.std::__1::__tree_node"* %717, null
  %719 = ptrtoint i8* %671 to i64
  br i1 %718, label %720, label %740

720:                                              ; preds = %700
  %721 = call i8* @_Znwm(i64 80) #17, !noalias !12
  %722 = getelementptr inbounds i8, i8* %721, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %722, i8* nonnull align 8 %88, i64 48, i1 false) #15, !noalias !12
  %723 = load i64, i64* %99, align 8
  %724 = bitcast i8* %721 to %"class.std::__1::__tree_node_base"*
  %725 = getelementptr inbounds i8, i8* %721, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %721, i8 0, i64 16, i1 false) #15
  %726 = bitcast i8* %725 to i64*
  store i64 %723, i64* %726, align 8
  %727 = bitcast %"class.std::__1::__tree_node_base"** %715 to i8**
  store i8* %721, i8** %727, align 8
  %728 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %729 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %728, i64 0, i32 0
  %730 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %729, align 8
  %731 = icmp eq %"class.std::__1::__tree_node_base"* %730, null
  br i1 %731, label %735, label %732

732:                                              ; preds = %720
  %733 = ptrtoint %"class.std::__1::__tree_node_base"* %730 to i64
  store i64 %733, i64* %101, align 8
  %734 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %715, align 8
  br label %735

735:                                              ; preds = %732, %720
  %736 = phi %"class.std::__1::__tree_node_base"* [ %724, %720 ], [ %734, %732 ]
  %737 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %737, %"class.std::__1::__tree_node_base"* %736) #15
  %738 = load i64, i64* %103, align 8
  %739 = add i64 %738, 1
  store i64 %739, i64* %103, align 8
  br label %740

740:                                              ; preds = %735, %700
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %88) #15
  %741 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %742 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %104, align 8
  %743 = icmp ult %"class.std::__1::unique_ptr.100"* %741, %742
  %744 = ptrtoint %"class.std::__1::unique_ptr.100"* %742 to i64
  br i1 %743, label %745, label %749

745:                                              ; preds = %740
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %85, align 8
  %746 = bitcast %"class.std::__1::unique_ptr.100"* %741 to i64*
  store i64 %719, i64* %746, align 8
  %747 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %741, i64 1
  %748 = ptrtoint %"class.std::__1::unique_ptr.100"* %747 to i64
  store i64 %748, i64* %105, align 8
  br label %884

749:                                              ; preds = %740
  %750 = ptrtoint %"class.std::__1::unique_ptr.100"* %741 to i64
  %751 = load i64, i64* %106, align 8
  %752 = sub i64 %750, %751
  %753 = ashr exact i64 %752, 3
  %754 = add nsw i64 %753, 1
  %755 = icmp ugt i64 %754, 2305843009213693951
  br i1 %755, label %756, label %758

756:                                              ; preds = %749
  %757 = bitcast %"class.net::(anonymous namespace)::CertIssuerIterPath"* %66 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %757) #16
  unreachable

758:                                              ; preds = %749
  %759 = sub i64 %744, %751
  %760 = ashr exact i64 %759, 3
  %761 = icmp ult i64 %760, 1152921504606846975
  br i1 %761, label %762, label %770

762:                                              ; preds = %758
  %763 = ashr exact i64 %759, 2
  %764 = icmp ult i64 %763, %754
  %765 = select i1 %764, i64 %754, i64 %763
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %775, label %767

767:                                              ; preds = %762
  %768 = icmp ugt i64 %765, 2305843009213693951
  br i1 %768, label %769, label %770

769:                                              ; preds = %767
  call void @abort() #16
  unreachable

770:                                              ; preds = %767, %758
  %771 = phi i64 [ %765, %767 ], [ 2305843009213693951, %758 ]
  %772 = shl i64 %771, 3
  %773 = call i8* @_Znwm(i64 %772) #17
  %774 = bitcast i8* %773 to %"class.std::__1::unique_ptr.100"*
  br label %775

775:                                              ; preds = %770, %762
  %776 = phi i64 [ %771, %770 ], [ 0, %762 ]
  %777 = phi %"class.std::__1::unique_ptr.100"* [ %774, %770 ], [ null, %762 ]
  %778 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %777, i64 %753
  %779 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %777, i64 %776
  %780 = ptrtoint %"class.std::__1::unique_ptr.100"* %779 to i64
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %85, align 8
  %781 = bitcast %"class.std::__1::unique_ptr.100"* %778 to i64*
  store i64 %719, i64* %781, align 8
  %782 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %778, i64 1
  %783 = ptrtoint %"class.std::__1::unique_ptr.100"* %782 to i64
  %784 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %108, align 8
  %785 = ptrtoint %"class.std::__1::unique_ptr.100"* %784 to i64
  %786 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  %787 = icmp eq %"class.std::__1::unique_ptr.100"* %786, %784
  br i1 %787, label %869, label %788

788:                                              ; preds = %775
  %789 = getelementptr %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %786, i64 -1
  %790 = ptrtoint %"class.std::__1::unique_ptr.100"* %789 to i64
  %791 = sub i64 %790, %785
  %792 = lshr i64 %791, 3
  %793 = add nuw nsw i64 %792, 1
  %794 = and i64 %793, 7
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %808, label %796

796:                                              ; preds = %788, %796
  %797 = phi %"class.std::__1::unique_ptr.100"* [ %800, %796 ], [ %778, %788 ]
  %798 = phi %"class.std::__1::unique_ptr.100"* [ %801, %796 ], [ %786, %788 ]
  %799 = phi i64 [ %806, %796 ], [ %794, %788 ]
  %800 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %797, i64 -1
  %801 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %798, i64 -1
  %802 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %801, i64 0, i32 0, i32 0, i32 0
  %803 = bitcast %"class.std::__1::unique_ptr.100"* %801 to i64*
  %804 = load i64, i64* %803, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %802, align 8
  %805 = bitcast %"class.std::__1::unique_ptr.100"* %800 to i64*
  store i64 %804, i64* %805, align 8
  %806 = add i64 %799, -1
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %808, label %796, !llvm.loop !15

808:                                              ; preds = %796, %788
  %809 = phi %"class.std::__1::unique_ptr.100"* [ undef, %788 ], [ %800, %796 ]
  %810 = phi %"class.std::__1::unique_ptr.100"* [ %778, %788 ], [ %800, %796 ]
  %811 = phi %"class.std::__1::unique_ptr.100"* [ %786, %788 ], [ %801, %796 ]
  %812 = icmp ult i64 %791, 56
  br i1 %812, label %865, label %813

813:                                              ; preds = %808, %813
  %814 = phi %"class.std::__1::unique_ptr.100"* [ %858, %813 ], [ %810, %808 ]
  %815 = phi %"class.std::__1::unique_ptr.100"* [ %859, %813 ], [ %811, %808 ]
  %816 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -1
  %817 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -1
  %818 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %817, i64 0, i32 0, i32 0, i32 0
  %819 = bitcast %"class.std::__1::unique_ptr.100"* %817 to i64*
  %820 = load i64, i64* %819, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %818, align 8
  %821 = bitcast %"class.std::__1::unique_ptr.100"* %816 to i64*
  store i64 %820, i64* %821, align 8
  %822 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -2
  %823 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -2
  %824 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %823, i64 0, i32 0, i32 0, i32 0
  %825 = bitcast %"class.std::__1::unique_ptr.100"* %823 to i64*
  %826 = load i64, i64* %825, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %824, align 8
  %827 = bitcast %"class.std::__1::unique_ptr.100"* %822 to i64*
  store i64 %826, i64* %827, align 8
  %828 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -3
  %829 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -3
  %830 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %829, i64 0, i32 0, i32 0, i32 0
  %831 = bitcast %"class.std::__1::unique_ptr.100"* %829 to i64*
  %832 = load i64, i64* %831, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %830, align 8
  %833 = bitcast %"class.std::__1::unique_ptr.100"* %828 to i64*
  store i64 %832, i64* %833, align 8
  %834 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -4
  %835 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -4
  %836 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %835, i64 0, i32 0, i32 0, i32 0
  %837 = bitcast %"class.std::__1::unique_ptr.100"* %835 to i64*
  %838 = load i64, i64* %837, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %836, align 8
  %839 = bitcast %"class.std::__1::unique_ptr.100"* %834 to i64*
  store i64 %838, i64* %839, align 8
  %840 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -5
  %841 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -5
  %842 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %841, i64 0, i32 0, i32 0, i32 0
  %843 = bitcast %"class.std::__1::unique_ptr.100"* %841 to i64*
  %844 = load i64, i64* %843, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %842, align 8
  %845 = bitcast %"class.std::__1::unique_ptr.100"* %840 to i64*
  store i64 %844, i64* %845, align 8
  %846 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -6
  %847 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -6
  %848 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %847, i64 0, i32 0, i32 0, i32 0
  %849 = bitcast %"class.std::__1::unique_ptr.100"* %847 to i64*
  %850 = load i64, i64* %849, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %848, align 8
  %851 = bitcast %"class.std::__1::unique_ptr.100"* %846 to i64*
  store i64 %850, i64* %851, align 8
  %852 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -7
  %853 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -7
  %854 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %853, i64 0, i32 0, i32 0, i32 0
  %855 = bitcast %"class.std::__1::unique_ptr.100"* %853 to i64*
  %856 = load i64, i64* %855, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %854, align 8
  %857 = bitcast %"class.std::__1::unique_ptr.100"* %852 to i64*
  store i64 %856, i64* %857, align 8
  %858 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %814, i64 -8
  %859 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %815, i64 -8
  %860 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %859, i64 0, i32 0, i32 0, i32 0
  %861 = bitcast %"class.std::__1::unique_ptr.100"* %859 to i64*
  %862 = load i64, i64* %861, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %860, align 8
  %863 = bitcast %"class.std::__1::unique_ptr.100"* %858 to i64*
  store i64 %862, i64* %863, align 8
  %864 = icmp eq %"class.std::__1::unique_ptr.100"* %859, %784
  br i1 %864, label %865, label %813

865:                                              ; preds = %813, %808
  %866 = phi %"class.std::__1::unique_ptr.100"* [ %809, %808 ], [ %858, %813 ]
  %867 = load i64, i64* %106, align 8
  %868 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %34, align 8
  br label %869

869:                                              ; preds = %775, %865
  %870 = phi %"class.std::__1::unique_ptr.100"* [ %868, %865 ], [ %784, %775 ]
  %871 = phi %"class.std::__1::unique_ptr.100"* [ %866, %865 ], [ %778, %775 ]
  %872 = phi i64 [ %867, %865 ], [ %785, %775 ]
  %873 = ptrtoint %"class.std::__1::unique_ptr.100"* %871 to i64
  store i64 %873, i64* %106, align 8
  store i64 %783, i64* %105, align 8
  store i64 %780, i64* %107, align 8
  %874 = inttoptr i64 %872 to %"class.std::__1::unique_ptr.100"*
  %875 = icmp eq %"class.std::__1::unique_ptr.100"* %870, %874
  br i1 %875, label %880, label %876

876:                                              ; preds = %869, %876
  %877 = phi %"class.std::__1::unique_ptr.100"* [ %878, %876 ], [ %870, %869 ]
  %878 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %877, i64 -1
  call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_115CertIssuersIterENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.100"* %878) #15
  %879 = icmp eq %"class.std::__1::unique_ptr.100"* %878, %874
  br i1 %879, label %880, label %876

880:                                              ; preds = %876, %869
  %881 = icmp eq i64 %872, 0
  br i1 %881, label %884, label %882

882:                                              ; preds = %880
  %883 = inttoptr i64 %872 to i8*
  call void @_ZdlPv(i8* %883) #17
  br label %884

884:                                              ; preds = %745, %880, %882
  call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_115CertIssuersIterENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.100"* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  %885 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %32, align 8
  store i64 0, i64* %61, align 8
  %886 = icmp eq %"class.net::ParsedCertificate"* %885, null
  br i1 %886, label %893, label %887

887:                                              ; preds = %884
  %888 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %885, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = atomicrmw sub i32* %888, i32 1 acq_rel
  %890 = icmp eq i32 %889, 1
  br i1 %890, label %891, label %893

891:                                              ; preds = %887
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %885) #15
  %892 = bitcast %"class.net::ParsedCertificate"* %885 to i8*
  call void @_ZdlPv(i8* %892) #17
  br label %893

893:                                              ; preds = %891, %887, %884
  store i64 1, i64* %63, align 8
  br label %894

894:                                              ; preds = %893, %669, %541, %554
  br label %120

895:                                              ; preds = %133, %129, %121, %642
  %896 = phi i1 [ true, %642 ], [ false, %121 ], [ false, %129 ], [ false, %133 ]
  ret i1 %896
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN3net16CertificateTrust14ForUnspecifiedEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net25CertPathBuilderResultPathC2Ev(%"struct.net::CertPathBuilderResultPath"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.net::CertPathBuilderResultPath"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #15
  %3 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr.72"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 4
  tail call void @_ZN3net14CertPathErrorsC1Ev(%"class.net::CertPathErrors"* %10) #15
  ret void
}

declare void @_ZN3net14CertPathErrorsC1Ev(%"class.net::CertPathErrors"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 4
  tail call void @_ZN3net14CertPathErrorsD1Ev(%"class.net::CertPathErrors"* %2) #15
  %3 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertPathBuilderDelegateData"*, %"class.net::CertPathBuilderDelegateData"** %3, align 8
  store %"class.net::CertPathBuilderDelegateData"* null, %"class.net::CertPathBuilderDelegateData"** %3, align 8
  %5 = icmp eq %"class.net::CertPathBuilderDelegateData"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::CertPathBuilderDelegateData"* %4 to void (%"class.net::CertPathBuilderDelegateData"*)***
  %8 = load void (%"class.net::CertPathBuilderDelegateData"*)**, void (%"class.net::CertPathBuilderDelegateData"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::CertPathBuilderDelegateData"*)*, void (%"class.net::CertPathBuilderDelegateData"*)** %8, i64 1
  %10 = load void (%"class.net::CertPathBuilderDelegateData"*)*, void (%"class.net::CertPathBuilderDelegateData"*)** %9, align 8
  tail call void %10(%"class.net::CertPathBuilderDelegateData"* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.254"**
  %15 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %14, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.65"* %12, %"class.std::__1::__tree_node.254"* %15) #15
  %16 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = icmp eq %class.scoped_refptr* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %11
  %20 = bitcast %class.scoped_refptr* %17 to i8*
  %21 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = load %class.scoped_refptr*, %class.scoped_refptr** %21, align 8
  %23 = icmp eq %class.scoped_refptr* %22, %17
  br i1 %23, label %41, label %24

24:                                               ; preds = %19, %36
  %25 = phi %class.scoped_refptr* [ %26, %36 ], [ %22, %19 ]
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %25, i64 -1
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 0, i32 0
  %28 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %27, align 8
  %29 = icmp eq %"class.net::ParsedCertificate"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %28) #15
  %35 = bitcast %"class.net::ParsedCertificate"* %28 to i8*
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %34, %30, %24
  %37 = icmp eq %class.scoped_refptr* %26, %17
  br i1 %37, label %38, label %24

38:                                               ; preds = %36
  %39 = bitcast %"struct.net::CertPathBuilderResultPath"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %19
  %42 = phi i8* [ %40, %38 ], [ %20, %19 ]
  store %class.scoped_refptr* %17, %class.scoped_refptr** %21, align 8
  tail call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %11, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net14CertPathErrorsD1Ev(%"class.net::CertPathErrors"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net25CertPathBuilderResultPath7IsValidEv(%"struct.net::CertPathBuilderResultPath"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %3, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 -1, i32 0
  %14 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %13, align 8
  %15 = icmp eq %"class.net::ParsedCertificate"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %0, i64 0, i32 4
  %18 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %17, i32 0) #15
  %19 = xor i1 %18, true
  br label %20

20:                                               ; preds = %7, %1, %12, %16
  %21 = phi i1 [ false, %12 ], [ %19, %16 ], [ false, %1 ], [ false, %7 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder6ResultC2Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"* %2) #15
  %3 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector.178"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 34, i1 false)
  ret void
}

declare void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder6ResultC2EOS1_(%"struct.net::CertPathBuilder::Result"*, %"struct.net::CertPathBuilder::Result"* dereferenceable(80)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  %4 = bitcast %"struct.net::CertPathBuilder::Result"* %1 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2EOS0_(%"class.base::SupportsUserData"* %3, %"class.base::SupportsUserData"* dereferenceable(40) %4) #15
  %5 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector.178"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  %9 = bitcast %"class.std::__1::vector.178"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.178"* %6 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.180"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.180"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.180"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.180"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.178"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #15
  %23 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 3
  %25 = bitcast i64* %23 to i8*
  %26 = bitcast i64* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 10, i1 false)
  ret void
}

declare void @_ZN4base16SupportsUserDataC2EOS0_(%"class.base::SupportsUserData"*, %"class.base::SupportsUserData"* dereferenceable(40)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder6ResultD2Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.180"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.180"* %5 to i8*
  %9 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.180"* %10, %5
  br i1 %11, label %25, label %12

12:                                               ; preds = %7, %20
  %13 = phi %"class.std::__1::unique_ptr.180"* [ %14, %20 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  %17 = icmp eq %"struct.net::CertPathBuilderResultPath"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %16) #15
  %19 = bitcast %"struct.net::CertPathBuilderResultPath"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %18, %12
  %21 = icmp eq %"class.std::__1::unique_ptr.180"* %14, %5
  br i1 %21, label %22, label %12

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.178"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i8* [ %24, %22 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.180"* %5, %"class.std::__1::unique_ptr.180"** %9, align 8
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %1, %25
  %28 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %28) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder6ResultD0Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.180"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.180"* %5 to i8*
  %9 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.180"* %10, %5
  br i1 %11, label %25, label %12

12:                                               ; preds = %7, %20
  %13 = phi %"class.std::__1::unique_ptr.180"* [ %14, %20 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  %17 = icmp eq %"struct.net::CertPathBuilderResultPath"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %16) #15
  %19 = bitcast %"struct.net::CertPathBuilderResultPath"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %18, %12
  %21 = icmp eq %"class.std::__1::unique_ptr.180"* %14, %5
  br i1 %21, label %22, label %12

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.178"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i8* [ %24, %22 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.180"* %5, %"class.std::__1::unique_ptr.180"** %9, align 8
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %1, %25
  %28 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %28) #15
  %29 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.net::CertPathBuilder::Result"* @_ZN3net15CertPathBuilder6ResultaSEOS1_(%"struct.net::CertPathBuilder::Result"* returned, %"struct.net::CertPathBuilder::Result"* dereferenceable(80)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  %4 = bitcast %"struct.net::CertPathBuilder::Result"* %1 to %"class.base::SupportsUserData"*
  %5 = tail call dereferenceable(40) %"class.base::SupportsUserData"* @_ZN4base16SupportsUserDataaSEOS0_(%"class.base::SupportsUserData"* %3, %"class.base::SupportsUserData"* dereferenceable(40) %4) #15
  %6 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.180"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::unique_ptr.180"* %9 to i8*
  %13 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.180"* %14, %9
  br i1 %15, label %29, label %16

16:                                               ; preds = %11, %24
  %17 = phi %"class.std::__1::unique_ptr.180"* [ %18, %24 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %17, i64 -1
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %19, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %19, align 8
  %21 = icmp eq %"struct.net::CertPathBuilderResultPath"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %20) #15
  %23 = bitcast %"struct.net::CertPathBuilderResultPath"* %20 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %22, %16
  %25 = icmp eq %"class.std::__1::unique_ptr.180"* %18, %9
  br i1 %25, label %26, label %16

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.178"* %6 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %11
  %30 = phi i8* [ %28, %26 ], [ %12, %11 ]
  store %"class.std::__1::unique_ptr.180"* %9, %"class.std::__1::unique_ptr.180"** %13, align 8
  tail call void @_ZdlPv(i8* %30) #17
  %31 = bitcast %"class.std::__1::vector.178"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #15
  br label %32

32:                                               ; preds = %2, %29
  %33 = bitcast %"class.std::__1::vector.178"* %7 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.178"* %6 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.180"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast %"class.std::__1::unique_ptr.180"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr.180"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.180"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.178"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #15
  %47 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %48 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %1, i64 0, i32 3
  %49 = bitcast i64* %47 to i8*
  %50 = bitcast i64* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 10, i1 false)
  ret %"struct.net::CertPathBuilder::Result"* %0
}

declare dereferenceable(40) %"class.base::SupportsUserData"* @_ZN4base16SupportsUserDataaSEOS0_(%"class.base::SupportsUserData"*, %"class.base::SupportsUserData"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.180"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.178"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %3, %11
  br i1 %12, label %13, label %36

13:                                               ; preds = %1
  %14 = inttoptr i64 %9 to %"class.std::__1::unique_ptr.180"*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %14, i64 %3, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  %17 = icmp eq %"struct.net::CertPathBuilderResultPath"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.scoped_refptr*, %class.scoped_refptr** %19, align 8
  %21 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 0, i32 0, i32 1
  %22 = load %class.scoped_refptr*, %class.scoped_refptr** %21, align 8
  %23 = icmp eq %class.scoped_refptr* %20, %22
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -2
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 -1, i32 0
  %31 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %30, align 8
  %32 = icmp eq %"class.net::ParsedCertificate"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 4
  %35 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %34, i32 0) #15
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %29, %24, %18, %13, %1
  br label %37

37:                                               ; preds = %33, %36
  %38 = phi %"struct.net::CertPathBuilderResultPath"* [ null, %36 ], [ %16, %33 ]
  %39 = icmp ne %"struct.net::CertPathBuilderResultPath"* %38, null
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.180"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.178"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %3, %11
  br i1 %12, label %13, label %36

13:                                               ; preds = %1
  %14 = inttoptr i64 %9 to %"class.std::__1::unique_ptr.180"*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %14, i64 %3, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  %17 = icmp eq %"struct.net::CertPathBuilderResultPath"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.scoped_refptr*, %class.scoped_refptr** %19, align 8
  %21 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 0, i32 0, i32 1
  %22 = load %class.scoped_refptr*, %class.scoped_refptr** %21, align 8
  %23 = icmp eq %class.scoped_refptr* %20, %22
  br i1 %23, label %36, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -2
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 -1, i32 0
  %31 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %30, align 8
  %32 = icmp eq %"class.net::ParsedCertificate"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %16, i64 0, i32 4
  %35 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %34, i32 0) #15
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %24, %18, %29, %1, %13
  br label %37

37:                                               ; preds = %33, %36
  %38 = phi %"struct.net::CertPathBuilderResultPath"* [ null, %36 ], [ %16, %33 ]
  ret %"struct.net::CertPathBuilderResultPath"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15CertPathBuilder6Result20AnyPathContainsErrorEPKv(%"struct.net::CertPathBuilder::Result"* nocapture readonly, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %3, align 8
  %5 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.180"* %4, %6
  br i1 %7, label %17, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.std::__1::unique_ptr.180"* %16, %6
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.std::__1::unique_ptr.180"* [ %16, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %12, align 8
  %14 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %13, i64 0, i32 4
  %15 = tail call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %14, i8* %1) #15
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %11, i64 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %8, %10, %2
  %18 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result26GetBestPathPossiblyInvalidEv(%"struct.net::CertPathBuilder::Result"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.180"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.178"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %3, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = inttoptr i64 %9 to %"class.std::__1::unique_ptr.180"*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %14, i64 %3, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %15, align 8
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi %"struct.net::CertPathBuilderResultPath"* [ %16, %13 ], [ null, %1 ]
  ret %"struct.net::CertPathBuilderResultPath"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilderC2E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"* nocapture readonly dereferenceable(8), i32, i32, %"class.std::__1::set"* readonly dereferenceable(24), i32, i32) unnamed_addr #1 align 2 {
  %11 = ptrtoint %"class.net::ParsedCertificate"* %1 to i64
  %12 = bitcast %"class.net::CertPathBuilder"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2Ev(%"class.base::SupportsUserData"* %12) #15
  %13 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"class.std::__1::vector.178"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 34, i1 false) #15
  %16 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 1
  %17 = tail call i8* @_Znwm(i64 104) #17
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %17, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = getelementptr inbounds i8, i8* %17, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #15
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %17, i64 88
  %26 = bitcast i8* %25 to %"class.net::TrustStore"**
  store %"class.net::TrustStore"* %2, %"class.net::TrustStore"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 96
  %28 = bitcast i8* %27 to %"class.net::CertPathBuilder"**
  store %"class.net::CertPathBuilder"* %0, %"class.net::CertPathBuilder"** %28, align 8
  %29 = bitcast i8* %17 to %class.scoped_refptr*
  %30 = bitcast i8* %17 to i64*
  store i64 %11, i64* %30, align 8
  %31 = bitcast %"class.net::TrustStore"* %2 to void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)***
  %32 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)**, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %32, i64 4
  %34 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %33, align 8
  %35 = bitcast i8* %18 to %"struct.net::CertificateTrust"*
  tail call void %34(%"class.net::TrustStore"* %2, %class.scoped_refptr* nonnull dereferenceable(8) %29, %"struct.net::CertificateTrust"* %35, %"class.base::SupportsUserData"* %12) #15
  %36 = ptrtoint i8* %17 to i64
  %37 = bitcast %"class.std::__1::unique_ptr.191"* %16 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 2
  store %"class.net::CertPathBuilderDelegate"* %3, %"class.net::CertPathBuilderDelegate"** %38, align 8
  %39 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 3
  %40 = bitcast %"struct.net::der::GeneralizedTime"* %4 to i64*
  %41 = bitcast %"struct.net::der::GeneralizedTime"* %39 to i64*
  %42 = load i64, i64* %40, align 2
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 4
  store i32 %5, i32* %43, align 8
  %44 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 5
  store i32 %6, i32* %44, align 4
  %45 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %45, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__compressed_pair.66"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %46, align 8
  %50 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %51, %52
  %54 = bitcast i8* %17 to %"class.net::CertPathIter"*
  br i1 %53, label %190, label %55

55:                                               ; preds = %10
  %56 = ptrtoint %"class.std::__1::__tree_end_node"* %47 to i64
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.254"**
  %59 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::set"* %45 to i64*
  %61 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  br label %62

62:                                               ; preds = %185, %55
  %63 = phi %"class.std::__1::__tree_end_node"* [ %186, %185 ], [ %47, %55 ]
  %64 = phi %"class.std::__1::__tree_end_node"* [ %183, %185 ], [ %51, %55 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.net::der::Input"*
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %63, %47
  br i1 %67, label %93, label %68

68:                                               ; preds = %62
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"class.std::__1::__tree_node_base"* [ %74, %71 ], [ %69, %68 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 1
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %87, label %71

76:                                               ; preds = %68, %76
  %77 = phi %"class.std::__1::__tree_end_node"* [ %81, %76 ], [ %47, %68 ]
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 2
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_end_node"**
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, %78
  br i1 %84, label %76, label %85

85:                                               ; preds = %76
  %86 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node_base"*
  br label %87

87:                                               ; preds = %71, %85
  %88 = phi %"class.std::__1::__tree_node_base"* [ %86, %85 ], [ %72, %71 ]
  %89 = ptrtoint %"class.std::__1::__tree_node_base"* %88 to i64
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 1
  %91 = bitcast %"class.std::__1::__tree_node_base"* %90 to %"class.net::der::Input"*
  %92 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %91, %"class.net::der::Input"* dereferenceable(16) %66) #15
  br i1 %92, label %93, label %100

93:                                               ; preds = %87, %62
  %94 = phi i64 [ %89, %87 ], [ %56, %62 ]
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %128, label %97

97:                                               ; preds = %93
  %98 = inttoptr i64 %94 to %"class.std::__1::__tree_node_base"*
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  br label %128

100:                                              ; preds = %87
  %101 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %58, align 8
  %102 = icmp eq %"class.std::__1::__tree_node.254"* %101, null
  br i1 %102, label %128, label %103

103:                                              ; preds = %100, %124
  %104 = phi %"class.std::__1::__tree_node.254"* [ %127, %124 ], [ %101, %100 ]
  %105 = phi %"class.std::__1::__tree_node_base"** [ %126, %124 ], [ %59, %100 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.254", %"class.std::__1::__tree_node.254"* %104, i64 0, i32 1
  %107 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %66, %"class.net::der::Input"* dereferenceable(16) %106) #15
  br i1 %107, label %108, label %114

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.254", %"class.std::__1::__tree_node.254"* %104, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = ptrtoint %"class.std::__1::__tree_node.254"* %104 to i64
  br label %128

114:                                              ; preds = %103
  %115 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %106, %"class.net::der::Input"* dereferenceable(16) %66) #15
  br i1 %115, label %116, label %122

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.254", %"class.std::__1::__tree_node.254"* %104, i64 0, i32 0, i32 1
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = ptrtoint %"class.std::__1::__tree_node.254"* %104 to i64
  br label %128

122:                                              ; preds = %114
  %123 = ptrtoint %"class.std::__1::__tree_node.254"* %104 to i64
  br label %128

124:                                              ; preds = %116, %108
  %125 = phi %"class.std::__1::__tree_node_base"* [ %110, %108 ], [ %118, %116 ]
  %126 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %117, %116 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %125 to %"class.std::__1::__tree_node.254"*
  br label %103

128:                                              ; preds = %100, %93, %97, %112, %120, %122
  %129 = phi i64 [ %94, %97 ], [ %113, %112 ], [ %121, %120 ], [ %123, %122 ], [ %56, %93 ], [ %56, %100 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %99, %97 ], [ %109, %112 ], [ %117, %120 ], [ %105, %122 ], [ %57, %93 ], [ %57, %100 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node.254"**
  %132 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node.254"* %132, null
  br i1 %133, label %134, label %154

134:                                              ; preds = %128
  %135 = tail call i8* @_Znwm(i64 48) #17, !noalias !17
  %136 = getelementptr inbounds i8, i8* %135, i64 32
  %137 = bitcast %"class.std::__1::__tree_end_node"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #15, !noalias !17
  %138 = bitcast i8* %135 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds i8, i8* %135, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 16, i1 false) #15
  %140 = bitcast i8* %139 to i64*
  store i64 %129, i64* %140, align 8
  %141 = bitcast %"class.std::__1::__tree_node_base"** %130 to i8**
  store i8* %135, i8** %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %134
  %147 = ptrtoint %"class.std::__1::__tree_node_base"* %144 to i64
  store i64 %147, i64* %60, align 8
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %149

149:                                              ; preds = %146, %134
  %150 = phi %"class.std::__1::__tree_node_base"* [ %138, %134 ], [ %148, %146 ]
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %151, %"class.std::__1::__tree_node_base"* %150) #15
  %152 = load i64, i64* %61, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %61, align 8
  br label %154

154:                                              ; preds = %128, %149
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 1, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, null
  br i1 %157, label %158, label %166

158:                                              ; preds = %154
  %159 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 2
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_end_node"**
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %159
  br i1 %165, label %182, label %173

166:                                              ; preds = %154, %166
  %167 = phi %"class.std::__1::__tree_node_base"* [ %169, %166 ], [ %156, %154 ]
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %166

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0
  br label %182

173:                                              ; preds = %158, %173
  %174 = phi %"class.std::__1::__tree_end_node"** [ %177, %173 ], [ %161, %158 ]
  %175 = bitcast %"class.std::__1::__tree_end_node"** %174 to %"class.std::__1::__tree_node_base"**
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 2
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 0, i32 0
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %179, align 8
  %181 = icmp eq %"class.std::__1::__tree_node_base"* %180, %176
  br i1 %181, label %182, label %173

182:                                              ; preds = %173, %171, %158
  %183 = phi %"class.std::__1::__tree_end_node"* [ %172, %171 ], [ %162, %158 ], [ %178, %173 ]
  %184 = icmp eq %"class.std::__1::__tree_end_node"* %183, %52
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  br label %62

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %189 = load %"class.net::CertPathIter"*, %"class.net::CertPathIter"** %188, align 8
  br label %190

190:                                              ; preds = %187, %10
  %191 = phi %"class.net::CertPathIter"* [ %189, %187 ], [ %54, %10 ]
  %192 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 7
  store i32 %8, i32* %192, align 8
  %193 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 8
  store i32 %9, i32* %193, align 4
  %194 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 9
  store i32 0, i32* %194, align 8
  %195 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 0, i64* %195, align 8
  %196 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 12
  store i8 0, i8* %196, align 8
  %197 = getelementptr inbounds %"class.net::TrustStore", %"class.net::TrustStore"* %2, i64 0, i32 0
  tail call void @_ZN3net12CertPathIter19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathIter"* %191, %"class.net::CertIssuerSource"* %197) #15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"* nocapture readonly, %"class.net::CertIssuerSource"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertPathIter"*, %"class.net::CertPathIter"** %3, align 8
  tail call void @_ZN3net12CertPathIter19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathIter"* %4, %"class.net::CertIssuerSource"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilderD2Ev(%"class.net::CertPathBuilder"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0
  %3 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.254"**
  %5 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %4, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.65"* %2, %"class.std::__1::__tree_node.254"* %5) #15
  %6 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::CertPathIter"*, %"class.net::CertPathIter"** %7, align 8
  store %"class.net::CertPathIter"* null, %"class.net::CertPathIter"** %7, align 8
  %9 = icmp eq %"class.net::CertPathIter"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::unique_ptr.191"* %6 to %"struct.std::__1::default_delete.195"*
  tail call void @_ZNKSt3__114default_deleteIN3net12CertPathIterEEclEPS2_(%"struct.std::__1::default_delete.195"* %11, %"class.net::CertPathIter"* nonnull %8) #15
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.180"* %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::unique_ptr.180"* %16 to i8*
  %20 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.180"* %21, %16
  br i1 %22, label %36, label %23

23:                                               ; preds = %18, %31
  %24 = phi %"class.std::__1::unique_ptr.180"* [ %25, %31 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %26, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %26, align 8
  %28 = icmp eq %"struct.net::CertPathBuilderResultPath"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %27) #15
  %30 = bitcast %"struct.net::CertPathBuilderResultPath"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #17
  br label %31

31:                                               ; preds = %29, %23
  %32 = icmp eq %"class.std::__1::unique_ptr.180"* %25, %16
  br i1 %32, label %33, label %23

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.178"* %14 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %18
  %37 = phi i8* [ %35, %33 ], [ %19, %18 ]
  store %"class.std::__1::unique_ptr.180"* %16, %"class.std::__1::unique_ptr.180"** %20, align 8
  tail call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %12, %36
  %39 = bitcast %"class.net::CertPathBuilder"* %0 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataD2Ev(%"class.base::SupportsUserData"* %39) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15CertPathBuilder17SetIterationLimitEj(%"class.net::CertPathBuilder"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 9
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15CertPathBuilder11SetDeadlineEN4base9TimeTicksE(%"class.net::CertPathBuilder"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15CertPathBuilder18SetExploreAllPathsEb(%"class.net::CertPathBuilder"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 12
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* noalias sret, %"class.net::CertPathBuilder"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 11, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 9
  %8 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 2
  %9 = bitcast %"class.net::CertPathBuilderDelegate"** %8 to %"class.net::VerifyCertificateChainDelegate"**
  %10 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 5
  %13 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 6
  %14 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 7
  %15 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 8
  %16 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 12
  br label %17

17:                                               ; preds = %82, %2
  %18 = tail call i8* @_Znwm(i64 112) #17
  %19 = bitcast i8* %18 to %"struct.net::CertPathBuilderResultPath"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #15
  %20 = getelementptr inbounds i8, i8* %18, i64 24
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 40
  %23 = getelementptr inbounds i8, i8* %18, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 56
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 64
  %28 = bitcast i8* %27 to %"class.net::CertPathErrors"*
  tail call void @_ZN3net14CertPathErrorsC1Ev(%"class.net::CertPathErrors"* %28) #15
  %29 = load %"class.net::CertPathIter"*, %"class.net::CertPathIter"** %5, align 8
  %30 = bitcast i8* %18 to %"class.std::__1::vector.58"*
  %31 = bitcast i8* %20 to %"struct.net::CertificateTrust"*
  %32 = load i64, i64* %6, align 8
  %33 = load i32, i32* %7, align 8
  %34 = call zeroext i1 @_ZN3net12CertPathIter11GetNextPathEPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEEPNS_16CertificateTrustEN4base9TimeTicksEPjj(%"class.net::CertPathIter"* %29, %"class.std::__1::vector.58"* nonnull %30, %"struct.net::CertificateTrust"* %31, i64 %32, i32* nonnull %3, i32 %33)
  br i1 %34, label %53, label %35

35:                                               ; preds = %17
  %36 = bitcast i8* %18 to %"struct.net::CertPathBuilderResultPath"*
  %37 = load i32, i32* %7, align 8
  %38 = icmp ne i32 %37, 0
  %39 = load i32, i32* %3, align 4
  %40 = icmp ugt i32 %39, %37
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 4
  store i8 1, i8* %43, align 8
  br label %44

44:                                               ; preds = %35, %42
  %45 = load i64, i64* %6, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %106, label %47

47:                                               ; preds = %44
  %48 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %49 = load i64, i64* %6, align 8
  %50 = icmp sgt i64 %48, %49
  br i1 %50, label %51, label %106

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 5
  store i8 1, i8* %52, align 1
  br label %106

53:                                               ; preds = %17
  %54 = load %"class.net::VerifyCertificateChainDelegate"*, %"class.net::VerifyCertificateChainDelegate"** %9, align 8
  %55 = load i32, i32* %11, align 8
  %56 = load i32, i32* %12, align 4
  %57 = load i32, i32* %14, align 8
  %58 = load i32, i32* %15, align 4
  %59 = bitcast i8* %23 to %"class.std::__1::set"*
  tail call void @_ZN3net22VerifyCertificateChainERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16CertificateTrustEPNS_30VerifyCertificateChainDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNS0_3setINSF_5InputENS0_4lessISM_EENS5_ISM_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitEPSQ_PNS_14CertPathErrorsE(%"class.std::__1::vector.58"* nonnull dereferenceable(24) %30, %"struct.net::CertificateTrust"* dereferenceable(4) %31, %"class.net::VerifyCertificateChainDelegate"* %54, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %10, i32 %55, i32 %56, %"class.std::__1::set"* dereferenceable(24) %13, i32 %57, i32 %58, %"class.std::__1::set"* %59, %"class.net::CertPathErrors"* %28) #15
  %60 = load %"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilderDelegate"** %8, align 8
  %61 = bitcast %"class.net::CertPathBuilderDelegate"* %60 to void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)***
  %62 = load void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)**, void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)*, void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)** %62, i64 4
  %64 = load void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)*, void (%"class.net::CertPathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)** %63, align 8
  tail call void %64(%"class.net::CertPathBuilderDelegate"* %60, %"class.net::CertPathBuilder"* dereferenceable(168) %1, %"struct.net::CertPathBuilderResultPath"* nonnull %19) #15
  %65 = bitcast i8* %18 to %class.scoped_refptr**
  %66 = load %class.scoped_refptr*, %class.scoped_refptr** %65, align 8
  %67 = getelementptr inbounds i8, i8* %18, i64 8
  %68 = bitcast i8* %67 to %class.scoped_refptr**
  %69 = load %class.scoped_refptr*, %class.scoped_refptr** %68, align 8
  %70 = icmp eq %class.scoped_refptr* %66, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %53
  %72 = load i32, i32* %21, align 8
  %73 = and i32 %72, -2
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %69, i64 -1, i32 0
  %77 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %76, align 8
  %78 = icmp eq %"class.net::ParsedCertificate"* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %75, %53, %71
  tail call void @_ZN3net15CertPathBuilder13AddResultPathENSt3__110unique_ptrINS_25CertPathBuilderResultPathENS1_14default_deleteIS3_EEEE(%"class.net::CertPathBuilder"* %1, %"struct.net::CertPathBuilderResultPath"* nonnull %19)
  br label %82

80:                                               ; preds = %75
  %81 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %28, i32 0) #15
  tail call void @_ZN3net15CertPathBuilder13AddResultPathENSt3__110unique_ptrINS_25CertPathBuilderResultPathENS1_14default_deleteIS3_EEEE(%"class.net::CertPathBuilder"* %1, %"struct.net::CertPathBuilderResultPath"* nonnull %19)
  br i1 %81, label %82, label %83

82:                                               ; preds = %80, %83, %79
  br label %17

83:                                               ; preds = %80
  %84 = load i8, i8* %16, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %82

86:                                               ; preds = %83
  %87 = load i32, i32* %3, align 4
  tail call void @_ZN4base23UmaHistogramCounts10000EPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 %87) #15
  %88 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  %89 = bitcast %"class.net::CertPathBuilder"* %1 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2EOS0_(%"class.base::SupportsUserData"* %88, %"class.base::SupportsUserData"* dereferenceable(40) %89) #15
  %90 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %92 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 2
  %93 = bitcast %"class.std::__1::vector.178"* %92 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8
  %95 = bitcast %"class.std::__1::vector.178"* %91 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %95, align 8
  %96 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.180"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.180"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector.178"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #15
  %102 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %103 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 3
  %104 = bitcast i64* %102 to i8*
  %105 = bitcast i64* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 10, i1 false) #15
  br label %125

106:                                              ; preds = %47, %51, %44
  tail call void @_ZN4base23UmaHistogramCounts10000EPKci(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 %39) #15
  %107 = bitcast %"struct.net::CertPathBuilder::Result"* %0 to %"class.base::SupportsUserData"*
  %108 = bitcast %"class.net::CertPathBuilder"* %1 to %"class.base::SupportsUserData"*
  tail call void @_ZN4base16SupportsUserDataC2EOS0_(%"class.base::SupportsUserData"* %107, %"class.base::SupportsUserData"* dereferenceable(40) %108) #15
  %109 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net15CertPathBuilder6ResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 2
  %112 = bitcast %"class.std::__1::vector.178"* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8
  %114 = bitcast %"class.std::__1::vector.178"* %110 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %114, align 8
  %115 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.180"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.180"** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast %"class.std::__1::vector.178"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #15
  %121 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %0, i64 0, i32 3
  %122 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 0, i32 3
  %123 = bitcast i64* %121 to i8*
  %124 = bitcast i64* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 10, i1 false) #15
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %36) #15
  tail call void @_ZdlPv(i8* nonnull %18) #17
  br label %125

125:                                              ; preds = %86, %106
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret void
}

declare void @_ZN3net22VerifyCertificateChainERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16CertificateTrustEPNS_30VerifyCertificateChainDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNS0_3setINSF_5InputENS0_4lessISM_EENS5_ISM_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitEPSQ_PNS_14CertPathErrorsE(%"class.std::__1::vector.58"* dereferenceable(24), %"struct.net::CertificateTrust"* dereferenceable(4), %"class.net::VerifyCertificateChainDelegate"*, %"struct.net::der::GeneralizedTime"* dereferenceable(8), i32, i32, %"class.std::__1::set"* dereferenceable(24), i32, i32, %"class.std::__1::set"*, %"class.net::CertPathErrors"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15CertPathBuilder13AddResultPathENSt3__110unique_ptrINS_25CertPathBuilderResultPathENS1_14default_deleteIS3_EEEE(%"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.180", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %3, i64 0, i32 0, i32 0, i32 0
  store %"struct.net::CertPathBuilderResultPath"* %1, %"struct.net::CertPathBuilderResultPath"** %4, align 8
  %5 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %7 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %class.scoped_refptr*, %class.scoped_refptr** %7, align 8
  %9 = icmp eq %class.scoped_refptr* %6, %8
  %10 = ptrtoint %"struct.net::CertPathBuilderResultPath"* %1 to i64
  br i1 %9, label %65, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, -2
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %65

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 -1, i32 0
  %18 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %17, align 8
  %19 = icmp eq %"class.net::ParsedCertificate"* %18, null
  br i1 %19, label %65, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %1, i64 0, i32 4
  %22 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %21, i32 0) #15
  br i1 %22, label %65, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr.180"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.178"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %25, %33
  br i1 %34, label %35, label %63

35:                                               ; preds = %23
  %36 = inttoptr i64 %31 to %"class.std::__1::unique_ptr.180"*
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %36, i64 %25, i32 0, i32 0, i32 0
  %38 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %37, align 8
  %39 = icmp eq %"struct.net::CertPathBuilderResultPath"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = load %class.scoped_refptr*, %class.scoped_refptr** %41, align 8
  %43 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %38, i64 0, i32 0, i32 0, i32 1
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = icmp eq %class.scoped_refptr* %42, %44
  br i1 %45, label %63, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %38, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, -2
  %50 = icmp eq i32 %49, 2
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 -1, i32 0
  %53 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %52, align 8
  %54 = icmp eq %"class.net::ParsedCertificate"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %38, i64 0, i32 4
  %57 = tail call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %56, i32 0) #15
  br i1 %57, label %58, label %65

58:                                               ; preds = %55
  %59 = load i64, i64* %28, align 8
  %60 = load i64, i64* %30, align 8
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  br label %63

63:                                               ; preds = %58, %51, %46, %40, %35, %23
  %64 = phi i64 [ %62, %58 ], [ %33, %51 ], [ %33, %46 ], [ %33, %40 ], [ %33, %35 ], [ %33, %23 ]
  store i64 %64, i64* %24, align 8
  br label %65

65:                                               ; preds = %20, %55, %11, %2, %16, %63
  %66 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %67 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %66, align 8
  %68 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %69 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %68, align 8
  %70 = icmp ult %"class.std::__1::unique_ptr.180"* %67, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %65
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %4, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.180"* %67 to i64*
  store i64 %10, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %67, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.180"* %73 to i64
  %75 = bitcast %"class.std::__1::unique_ptr.180"** %66 to i64*
  store i64 %74, i64* %75, align 8
  br label %78

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %0, i64 0, i32 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net25CertPathBuilderResultPathENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.178"* %77, %"class.std::__1::unique_ptr.180"* nonnull dereferenceable(8) %3) #15
  br label %78

78:                                               ; preds = %71, %76
  %79 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %4, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %4, align 8
  %80 = icmp eq %"struct.net::CertPathBuilderResultPath"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %79) #15
  %82 = bitcast %"struct.net::CertPathBuilderResultPath"* %79 to i8*
  call void @_ZdlPv(i8* %82) #17
  br label %83

83:                                               ; preds = %78, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::CertIssuersIter"*, %"class.std::__1::vector.58"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %7 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 0
  %8 = load %class.scoped_refptr*, %class.scoped_refptr** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %1, i64 0, i32 0, i32 1
  %10 = load %class.scoped_refptr*, %class.scoped_refptr** %9, align 8
  %11 = icmp eq %class.scoped_refptr* %8, %10
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 7, i32 0
  %17 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %20 = bitcast <2 x i64>* %5 to i8*
  %21 = bitcast <2 x i64>* %5 to %class.scoped_refptr*
  %22 = bitcast <2 x i64>* %5 to %"class.net::ParsedCertificate"**
  %23 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %6, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.net::CertificateTrust", %"struct.net::CertificateTrust"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %6, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %6, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds <2 x i64>, <2 x i64>* %5, i64 0, i64 0
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 12
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 3, i32 0, i32 1
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"** %32 to i64*
  %35 = bitcast %"class.std::__1::vector.110"* %31 to i64*
  %36 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"** %33 to i64*
  %37 = bitcast %"struct.net::CertificateTrust"* %23 to i64*
  %38 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %31, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %0, i64 0, i32 5
  %40 = bitcast <2 x i64>* %5 to i8*
  br label %42

41:                                               ; preds = %279, %2
  ret void

42:                                               ; preds = %12, %279
  %43 = phi %class.scoped_refptr* [ %8, %12 ], [ %280, %279 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 0, i32 0
  %45 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %44, align 8
  %46 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %45, i64 0, i32 2
  %47 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %46) #15
  %48 = extractvalue { i8*, i64 } %47, 0
  store i8* %48, i8** %14, align 8
  %49 = extractvalue { i8*, i64 } %47, 1
  store i64 %49, i64* %15, align 8
  %50 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table"* %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #15
  %51 = icmp eq %"struct.std::__1::__hash_node_base"* %50, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br i1 %51, label %52, label %279

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %53 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %44, align 8
  %54 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %53, i64 0, i32 2
  %55 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %54) #15
  %56 = extractvalue { i8*, i64 } %55, 0
  store i8* %56, i8** %18, align 8
  %57 = extractvalue { i8*, i64 } %55, 1
  store i64 %57, i64* %19, align 8
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 16, i1 false)
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %22, align 16
  store i32 1, i32* %26, align 8
  %59 = bitcast %class.scoped_refptr* %43 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %44, align 8
  %61 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %22, align 16
  store i64 %60, i64* %27, align 16
  %62 = icmp eq %"class.net::ParsedCertificate"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %61) #15
  %68 = bitcast %"class.net::ParsedCertificate"* %61 to i8*
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %52, %63, %67
  %70 = load %"class.net::TrustStore"*, %"class.net::TrustStore"** %28, align 8
  %71 = load %"class.base::SupportsUserData"*, %"class.base::SupportsUserData"** %29, align 8
  %72 = bitcast %"class.net::TrustStore"* %70 to void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)***
  %73 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)**, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %73, i64 4
  %75 = load void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)*, void (%"class.net::TrustStore"*, %class.scoped_refptr*, %"struct.net::CertificateTrust"*, %"class.base::SupportsUserData"*)** %74, align 8
  call void %75(%"class.net::TrustStore"* %70, %class.scoped_refptr* nonnull dereferenceable(8) %21, %"struct.net::CertificateTrust"* %23, %"class.base::SupportsUserData"* %71) #15
  %76 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %30, align 8
  %77 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %22, align 16
  %78 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %76, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %94, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %76, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %77, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %77, i64 0, i32 34, i32 0, i32 0, i32 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %76, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %91, %"class.net::der::Input"* dereferenceable(16) %90) #15
  %93 = select i1 %92, i32 2, i32 0
  br label %94

94:                                               ; preds = %89, %85, %81, %69
  %95 = phi i32 [ 1, %69 ], [ %93, %89 ], [ 1, %85 ], [ 1, %81 ]
  %96 = load i32, i32* %24, align 8
  switch i32 %96, label %97 [
    i32 2, label %98
    i32 3, label %98
    i32 1, label %102
    i32 0, label %106
  ]

97:                                               ; preds = %94
  unreachable

98:                                               ; preds = %94, %94
  %99 = zext i32 %95 to i64
  %100 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  br label %108

102:                                              ; preds = %94
  %103 = zext i32 %95 to i64
  %104 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN3net12_GLOBAL__N_115CertIssuersIter10AddIssuersENSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE.2, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  br label %108

106:                                              ; preds = %94
  %107 = add nuw nsw i32 %95, 6
  br label %108

108:                                              ; preds = %106, %102, %98
  %109 = phi i32 [ %101, %98 ], [ %105, %102 ], [ %107, %106 ]
  store i32 %109, i32* %25, align 4
  %110 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %32, align 8
  %111 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %33, align 8
  %112 = icmp ult %"struct.net::(anonymous namespace)::IssuerEntry"* %110, %111
  %113 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %111 to i64
  br i1 %112, label %114, label %122

114:                                              ; preds = %108
  %115 = load i64, i64* %27, align 16
  %116 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %110 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %22, align 16
  %117 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %110, i64 0, i32 1
  %118 = bitcast %"struct.net::CertificateTrust"* %117 to i64*
  %119 = load i64, i64* %37, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %110, i64 1
  %121 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %120 to i64
  store i64 %121, i64* %34, align 8
  br label %269

122:                                              ; preds = %108
  %123 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %110 to i64
  %124 = load i64, i64* %35, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 4
  %127 = add nsw i64 %126, 1
  %128 = icmp ugt i64 %127, 1152921504606846975
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::vector.110"* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %130) #16
  unreachable

131:                                              ; preds = %122
  %132 = sub i64 %113, %124
  %133 = ashr exact i64 %132, 4
  %134 = icmp ult i64 %133, 576460752303423487
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = ashr exact i64 %132, 3
  %137 = icmp ult i64 %136, %127
  %138 = select i1 %137, i64 %127, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 1152921504606846975
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  call void @abort() #16
  unreachable

143:                                              ; preds = %140, %131
  %144 = phi i64 [ %138, %140 ], [ 1152921504606846975, %131 ]
  %145 = shl i64 %144, 4
  %146 = call i8* @_Znwm(i64 %145) #17
  %147 = bitcast i8* %146 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %147, %143 ], [ null, %135 ]
  %151 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %150, i64 %126
  %152 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %150, i64 %149
  %153 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %152 to i64
  %154 = load <2 x i64>, <2 x i64>* %5, align 16
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %22, align 16
  %155 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %151 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %155, align 8
  %156 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %151, i64 1
  %157 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %156 to i64
  %158 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %38, align 8
  %159 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %158 to i64
  %160 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %32, align 8
  %161 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %160, %158
  br i1 %161, label %244, label %162

162:                                              ; preds = %148
  %163 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %160, i64 -1
  %164 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %163 to i64
  %165 = sub i64 %164, %159
  %166 = lshr i64 %165, 4
  %167 = add nuw nsw i64 %166, 1
  %168 = and i64 %167, 3
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %187, label %170

170:                                              ; preds = %162, %170
  %171 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %174, %170 ], [ %151, %162 ]
  %172 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %175, %170 ], [ %160, %162 ]
  %173 = phi i64 [ %185, %170 ], [ %168, %162 ]
  %174 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %171, i64 -1
  %175 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %172, i64 -1
  %176 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %175, i64 0, i32 0, i32 0
  %177 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %175 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %174 to i64*
  store i64 %178, i64* %179, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %176, align 8
  %180 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %171, i64 -1, i32 1
  %181 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %172, i64 -1, i32 1
  %182 = bitcast %"struct.net::CertificateTrust"* %181 to i64*
  %183 = bitcast %"struct.net::CertificateTrust"* %180 to i64*
  %184 = load i64, i64* %182, align 8
  store i64 %184, i64* %183, align 8
  %185 = add i64 %173, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %170, !llvm.loop !20

187:                                              ; preds = %170, %162
  %188 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ undef, %162 ], [ %174, %170 ]
  %189 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %151, %162 ], [ %174, %170 ]
  %190 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %160, %162 ], [ %175, %170 ]
  %191 = icmp ult i64 %165, 48
  br i1 %191, label %240, label %192

192:                                              ; preds = %187, %192
  %193 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %228, %192 ], [ %189, %187 ]
  %194 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %229, %192 ], [ %190, %187 ]
  %195 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -1
  %196 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -1
  %197 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %196, i64 0, i32 0, i32 0
  %198 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %196 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %195 to i64*
  store i64 %199, i64* %200, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %197, align 8
  %201 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -1, i32 1
  %202 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -1, i32 1
  %203 = bitcast %"struct.net::CertificateTrust"* %202 to i64*
  %204 = bitcast %"struct.net::CertificateTrust"* %201 to i64*
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -2
  %207 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -2
  %208 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %207, i64 0, i32 0, i32 0
  %209 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %207 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %206 to i64*
  store i64 %210, i64* %211, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %208, align 8
  %212 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -2, i32 1
  %213 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -2, i32 1
  %214 = bitcast %"struct.net::CertificateTrust"* %213 to i64*
  %215 = bitcast %"struct.net::CertificateTrust"* %212 to i64*
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -3
  %218 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -3
  %219 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %218, i64 0, i32 0, i32 0
  %220 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %218 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %217 to i64*
  store i64 %221, i64* %222, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %219, align 8
  %223 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -3, i32 1
  %224 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -3, i32 1
  %225 = bitcast %"struct.net::CertificateTrust"* %224 to i64*
  %226 = bitcast %"struct.net::CertificateTrust"* %223 to i64*
  %227 = load i64, i64* %225, align 8
  store i64 %227, i64* %226, align 8
  %228 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -4
  %229 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -4
  %230 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %229, i64 0, i32 0, i32 0
  %231 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %228 to i64*
  store i64 %232, i64* %233, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %230, align 8
  %234 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %193, i64 -4, i32 1
  %235 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %194, i64 -4, i32 1
  %236 = bitcast %"struct.net::CertificateTrust"* %235 to i64*
  %237 = bitcast %"struct.net::CertificateTrust"* %234 to i64*
  %238 = load i64, i64* %236, align 8
  store i64 %238, i64* %237, align 8
  %239 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %229, %158
  br i1 %239, label %240, label %192

240:                                              ; preds = %192, %187
  %241 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %188, %187 ], [ %228, %192 ]
  %242 = load i64, i64* %35, align 8
  %243 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %32, align 8
  br label %244

244:                                              ; preds = %148, %240
  %245 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %243, %240 ], [ %158, %148 ]
  %246 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %241, %240 ], [ %151, %148 ]
  %247 = phi i64 [ %242, %240 ], [ %159, %148 ]
  %248 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %246 to i64
  store i64 %248, i64* %35, align 8
  store i64 %157, i64* %34, align 8
  store i64 %153, i64* %36, align 8
  %249 = inttoptr i64 %247 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %250 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %245, %249
  br i1 %250, label %265, label %251

251:                                              ; preds = %244, %263
  %252 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %253, %263 ], [ %245, %244 ]
  %253 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %252, i64 -1
  %254 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %253, i64 0, i32 0, i32 0
  %255 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %254, align 8
  %256 = icmp eq %"class.net::ParsedCertificate"* %255, null
  br i1 %256, label %263, label %257

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = atomicrmw sub i32* %258, i32 1 acq_rel
  %260 = icmp eq i32 %259, 1
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %255) #15
  %262 = bitcast %"class.net::ParsedCertificate"* %255 to i8*
  call void @_ZdlPv(i8* %262) #17
  br label %263

263:                                              ; preds = %261, %257, %251
  %264 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %253, %249
  br i1 %264, label %265, label %251

265:                                              ; preds = %263, %244
  %266 = icmp eq i64 %247, 0
  br i1 %266, label %269, label %267

267:                                              ; preds = %265
  %268 = inttoptr i64 %247 to i8*
  call void @_ZdlPv(i8* %268) #17
  br label %269

269:                                              ; preds = %114, %265, %267
  store i8 1, i8* %39, align 8
  %270 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %22, align 16
  %271 = icmp eq %"class.net::ParsedCertificate"* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw sub i32* %273, i32 1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %278

276:                                              ; preds = %272
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %270) #15
  %277 = bitcast %"class.net::ParsedCertificate"* %270 to i8*
  call void @_ZdlPv(i8* %277) #17
  br label %278

278:                                              ; preds = %269, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #15
  br label %279

279:                                              ; preds = %42, %278
  %280 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 1
  %281 = icmp eq %class.scoped_refptr* %280, %10
  br i1 %281, label %41, label %42
}

declare { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -1
  %10 = and i64 %6, 7
  %11 = icmp ult i64 %9, 7
  br i1 %11, label %60, label %12

12:                                               ; preds = %8
  %13 = sub i64 %6, %10
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %56, %14 ]
  %16 = phi i8* [ %4, %12 ], [ %57, %14 ]
  %17 = phi i64 [ %13, %12 ], [ %58, %14 ]
  %18 = load i8, i8* %16, align 1
  %19 = mul i64 %15, 131
  %20 = sext i8 %18 to i64
  %21 = add i64 %19, %20
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = mul i64 %21, 131
  %25 = sext i8 %23 to i64
  %26 = add i64 %24, %25
  %27 = getelementptr inbounds i8, i8* %16, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = mul i64 %26, 131
  %30 = sext i8 %28 to i64
  %31 = add i64 %29, %30
  %32 = getelementptr inbounds i8, i8* %16, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = mul i64 %31, 131
  %35 = sext i8 %33 to i64
  %36 = add i64 %34, %35
  %37 = getelementptr inbounds i8, i8* %16, i64 4
  %38 = load i8, i8* %37, align 1
  %39 = mul i64 %36, 131
  %40 = sext i8 %38 to i64
  %41 = add i64 %39, %40
  %42 = getelementptr inbounds i8, i8* %16, i64 5
  %43 = load i8, i8* %42, align 1
  %44 = mul i64 %41, 131
  %45 = sext i8 %43 to i64
  %46 = add i64 %44, %45
  %47 = getelementptr inbounds i8, i8* %16, i64 6
  %48 = load i8, i8* %47, align 1
  %49 = mul i64 %46, 131
  %50 = sext i8 %48 to i64
  %51 = add i64 %49, %50
  %52 = getelementptr inbounds i8, i8* %16, i64 7
  %53 = load i8, i8* %52, align 1
  %54 = mul i64 %51, 131
  %55 = sext i8 %53 to i64
  %56 = add i64 %54, %55
  %57 = getelementptr inbounds i8, i8* %16, i64 8
  %58 = add i64 %17, -8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %14

60:                                               ; preds = %14, %8
  %61 = phi i64 [ undef, %8 ], [ %56, %14 ]
  %62 = phi i64 [ 0, %8 ], [ %56, %14 ]
  %63 = phi i8* [ %4, %8 ], [ %57, %14 ]
  %64 = icmp eq i64 %10, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %60, %65
  %66 = phi i64 [ %72, %65 ], [ %62, %60 ]
  %67 = phi i8* [ %73, %65 ], [ %63, %60 ]
  %68 = phi i64 [ %74, %65 ], [ %10, %60 ]
  %69 = load i8, i8* %67, align 1
  %70 = mul i64 %66, 131
  %71 = sext i8 %69 to i64
  %72 = add i64 %70, %71
  %73 = getelementptr inbounds i8, i8* %67, i64 1
  %74 = add i64 %68, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %65, !llvm.loop !21

76:                                               ; preds = %60, %65, %2
  %77 = phi i64 [ 0, %2 ], [ %61, %60 ], [ %72, %65 ]
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %135, label %81

81:                                               ; preds = %76
  %82 = tail call i64 @llvm.ctpop.i64(i64 %79) #15, !range !22
  %83 = icmp ugt i64 %82, 1
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = add i64 %79, -1
  %86 = and i64 %85, %77
  br label %91

87:                                               ; preds = %81
  %88 = icmp ult i64 %77, %79
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %77, %79
  br label %91

91:                                               ; preds = %84, %87, %89
  %92 = phi i64 [ %86, %84 ], [ %90, %89 ], [ %77, %87 ]
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, i64 %92
  %96 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base"* %96, null
  br i1 %97, label %135, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %96, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %135, label %102

102:                                              ; preds = %98
  %103 = add i64 %79, -1
  br label %104

104:                                              ; preds = %102, %131
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %133, %131 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, %77
  br i1 %109, label %120, label %110

110:                                              ; preds = %104
  br i1 %83, label %113, label %111

111:                                              ; preds = %110
  %112 = and i64 %108, %103
  br label %117

113:                                              ; preds = %110
  %114 = icmp ult i64 %108, %79
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = urem i64 %108, %79
  br label %117

117:                                              ; preds = %111, %113, %115
  %118 = phi i64 [ %112, %111 ], [ %116, %115 ], [ %108, %113 ]
  %119 = icmp eq i64 %118, %92
  br i1 %119, label %131, label %135

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 3
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, %6
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 2
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = tail call i32 @bcmp(i8* %128, i8* %4, i64 %6) #15
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %120, %117, %125
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base"* %133, null
  br i1 %134, label %135, label %104

135:                                              ; preds = %125, %131, %117, %98, %76, %91
  %136 = phi %"struct.std::__1::__hash_node_base"* [ null, %91 ], [ null, %76 ], [ null, %98 ], [ %105, %125 ], [ null, %131 ], [ null, %117 ]
  ret %"struct.std::__1::__hash_node_base"* %136
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %77, label %9

9:                                                ; preds = %3
  %10 = add i64 %7, -1
  %11 = and i64 %7, 7
  %12 = icmp ult i64 %10, 7
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = sub i64 %7, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %57, %15 ]
  %17 = phi i8* [ %5, %13 ], [ %58, %15 ]
  %18 = phi i64 [ %14, %13 ], [ %59, %15 ]
  %19 = load i8, i8* %17, align 1
  %20 = mul i64 %16, 131
  %21 = sext i8 %19 to i64
  %22 = add i64 %20, %21
  %23 = getelementptr inbounds i8, i8* %17, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = mul i64 %22, 131
  %26 = sext i8 %24 to i64
  %27 = add i64 %25, %26
  %28 = getelementptr inbounds i8, i8* %17, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = mul i64 %27, 131
  %31 = sext i8 %29 to i64
  %32 = add i64 %30, %31
  %33 = getelementptr inbounds i8, i8* %17, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = mul i64 %32, 131
  %36 = sext i8 %34 to i64
  %37 = add i64 %35, %36
  %38 = getelementptr inbounds i8, i8* %17, i64 4
  %39 = load i8, i8* %38, align 1
  %40 = mul i64 %37, 131
  %41 = sext i8 %39 to i64
  %42 = add i64 %40, %41
  %43 = getelementptr inbounds i8, i8* %17, i64 5
  %44 = load i8, i8* %43, align 1
  %45 = mul i64 %42, 131
  %46 = sext i8 %44 to i64
  %47 = add i64 %45, %46
  %48 = getelementptr inbounds i8, i8* %17, i64 6
  %49 = load i8, i8* %48, align 1
  %50 = mul i64 %47, 131
  %51 = sext i8 %49 to i64
  %52 = add i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %17, i64 7
  %54 = load i8, i8* %53, align 1
  %55 = mul i64 %52, 131
  %56 = sext i8 %54 to i64
  %57 = add i64 %55, %56
  %58 = getelementptr inbounds i8, i8* %17, i64 8
  %59 = add i64 %18, -8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %15

61:                                               ; preds = %15, %9
  %62 = phi i64 [ undef, %9 ], [ %57, %15 ]
  %63 = phi i64 [ 0, %9 ], [ %57, %15 ]
  %64 = phi i8* [ %5, %9 ], [ %58, %15 ]
  %65 = icmp eq i64 %11, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %61, %66
  %67 = phi i64 [ %73, %66 ], [ %63, %61 ]
  %68 = phi i8* [ %74, %66 ], [ %64, %61 ]
  %69 = phi i64 [ %75, %66 ], [ %11, %61 ]
  %70 = load i8, i8* %68, align 1
  %71 = mul i64 %67, 131
  %72 = sext i8 %70 to i64
  %73 = add i64 %71, %72
  %74 = getelementptr inbounds i8, i8* %68, i64 1
  %75 = add i64 %69, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %66, !llvm.loop !23

77:                                               ; preds = %61, %66, %3
  %78 = phi i64 [ 0, %3 ], [ %62, %61 ], [ %73, %66 ]
  %79 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %136, label %82

82:                                               ; preds = %77
  %83 = tail call i64 @llvm.ctpop.i64(i64 %80) #15, !range !22
  %84 = icmp ugt i64 %83, 1
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = add i64 %80, -1
  %87 = and i64 %86, %78
  br label %92

88:                                               ; preds = %82
  %89 = icmp ult i64 %78, %80
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %78, %80
  br label %92

92:                                               ; preds = %85, %88, %90
  %93 = phi i64 [ %87, %85 ], [ %91, %90 ], [ %78, %88 ]
  %94 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, i64 %93
  %97 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base"* %97, null
  br i1 %98, label %136, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %136, label %103

103:                                              ; preds = %99
  %104 = add i64 %80, -1
  br label %105

105:                                              ; preds = %103, %132
  %106 = phi %"struct.std::__1::__hash_node_base"* [ %101, %103 ], [ %134, %132 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 1
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, %78
  br i1 %110, label %121, label %111

111:                                              ; preds = %105
  br i1 %84, label %114, label %112

112:                                              ; preds = %111
  %113 = and i64 %109, %104
  br label %118

114:                                              ; preds = %111
  %115 = icmp ult i64 %109, %80
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %109, %80
  br label %118

118:                                              ; preds = %112, %114, %116
  %119 = phi i64 [ %113, %112 ], [ %117, %116 ], [ %109, %114 ]
  %120 = icmp eq i64 %119, %93
  br i1 %120, label %121, label %136

121:                                              ; preds = %105, %118
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 3
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, %7
  br i1 %125, label %126, label %132

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 2
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i8**
  %129 = load i8*, i8** %128, align 8
  %130 = tail call i32 @bcmp(i8* %129, i8* %5, i64 %7) #15
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %222, label %132

132:                                              ; preds = %126, %121
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base"* %134, null
  br i1 %135, label %136, label %105

136:                                              ; preds = %118, %132, %99, %92, %77
  %137 = phi i64 [ %93, %92 ], [ -6148914691236517206, %77 ], [ %93, %99 ], [ %93, %132 ], [ %93, %118 ]
  %138 = tail call i8* @_Znwm(i64 32) #17, !noalias !24
  %139 = getelementptr inbounds i8, i8* %138, i64 16
  %140 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #15, !noalias !24
  %141 = getelementptr inbounds i8, i8* %138, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 %78, i64* %142, align 8, !noalias !24
  %143 = bitcast i8* %138 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %143, align 8, !noalias !24
  %144 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 1
  %147 = uitofp i64 %146 to float
  %148 = uitofp i64 %80 to float
  %149 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %150 = load float, float* %149, align 4
  %151 = fmul float %150, %148
  %152 = fcmp olt float %151, %147
  %153 = or i1 %81, %152
  br i1 %153, label %154, label %177

154:                                              ; preds = %136
  %155 = shl i64 %80, 1
  %156 = icmp ult i64 %80, 3
  %157 = tail call i64 @llvm.ctpop.i64(i64 %80) #15, !range !22
  %158 = icmp ugt i64 %157, 1
  %159 = or i1 %156, %158
  %160 = zext i1 %159 to i64
  %161 = or i64 %155, %160
  %162 = fdiv float %147, %150
  %163 = tail call float @llvm.ceil.f32(float %162) #15
  %164 = fptoui float %163 to i64
  %165 = icmp ult i64 %161, %164
  %166 = select i1 %165, i64 %164, i64 %161
  tail call void @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %166)
  %167 = load i64, i64* %79, align 8
  %168 = tail call i64 @llvm.ctpop.i64(i64 %167) #15, !range !22
  %169 = icmp ugt i64 %168, 1
  br i1 %169, label %173, label %170

170:                                              ; preds = %154
  %171 = add i64 %167, -1
  %172 = and i64 %171, %78
  br label %177

173:                                              ; preds = %154
  %174 = icmp ult i64 %78, %167
  br i1 %174, label %177, label %175

175:                                              ; preds = %173
  %176 = urem i64 %78, %167
  br label %177

177:                                              ; preds = %175, %173, %170, %136
  %178 = phi i64 [ %80, %136 ], [ %167, %170 ], [ %167, %173 ], [ %167, %175 ]
  %179 = phi i64 [ %137, %136 ], [ %172, %170 ], [ %78, %173 ], [ %176, %175 ]
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %181, i64 %179
  %183 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base"* %183, null
  br i1 %184, label %185, label %211

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %187 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast i8* %138 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i8**
  store i8* %138, i8** %190, align 8
  store %"struct.std::__1::__hash_node_base"* %186, %"struct.std::__1::__hash_node_base"** %182, align 8
  %191 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %143, align 8
  %192 = icmp eq %"struct.std::__1::__hash_node_base"* %191, null
  br i1 %192, label %218, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %191, i64 1
  %195 = bitcast %"struct.std::__1::__hash_node_base"* %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = tail call i64 @llvm.ctpop.i64(i64 %178) #15, !range !22
  %198 = icmp ugt i64 %197, 1
  br i1 %198, label %202, label %199

199:                                              ; preds = %193
  %200 = add i64 %178, -1
  %201 = and i64 %196, %200
  br label %206

202:                                              ; preds = %193
  %203 = icmp ult i64 %196, %178
  br i1 %203, label %206, label %204

204:                                              ; preds = %202
  %205 = urem i64 %196, %178
  br label %206

206:                                              ; preds = %199, %202, %204
  %207 = phi i64 [ %201, %199 ], [ %205, %204 ], [ %196, %202 ]
  %208 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %208, i64 %207
  %210 = bitcast %"struct.std::__1::__hash_node_base"** %209 to i8**
  br label %216

211:                                              ; preds = %177
  %212 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast i8* %138 to i64*
  store i64 %213, i64* %214, align 8
  %215 = bitcast %"struct.std::__1::__hash_node_base"* %183 to i8**
  br label %216

216:                                              ; preds = %206, %211
  %217 = phi i8** [ %215, %211 ], [ %210, %206 ]
  store i8* %138, i8** %217, align 8
  br label %218

218:                                              ; preds = %216, %185
  %219 = bitcast i8* %138 to %"struct.std::__1::__hash_node_base"*
  %220 = load i64, i64* %144, align 8
  %221 = add i64 %220, 1
  store i64 %221, i64* %144, align 8
  br label %222

222:                                              ; preds = %126, %218
  %223 = phi i8 [ 1, %218 ], [ 0, %126 ]
  %224 = phi %"struct.std::__1::__hash_node_base"* [ %219, %218 ], [ %106, %126 ]
  %225 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %224, 0
  %226 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %225, i8 %223, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %226
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !22
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !22
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !22
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %143, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !27

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %151, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !22
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %151, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %137
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %141, %137 ]
  %81 = phi i64 [ %71, %77 ], [ %139, %137 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %138, %137 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %137, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i8**
  br label %106

105:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %137

106:                                              ; preds = %100, %117
  %107 = phi %"struct.std::__1::__hash_node_base"* [ %109, %117 ], [ %80, %100 ]
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %106
  %112 = load i64, i64* %102, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %109, i64 3
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %112, %115
  br i1 %116, label %117, label %124

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %109, i64 2
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = load i8*, i8** %104, align 8
  %122 = tail call i32 @bcmp(i8* %121, i8* %120, i64 %112) #15
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %106, label %124

124:                                              ; preds = %111, %106, %117
  %125 = ptrtoint %"struct.std::__1::__hash_node_base"* %109 to i64
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %93
  %130 = bitcast %"struct.std::__1::__hash_node_base"** %129 to i64**
  %131 = load i64*, i64** %130, align 8
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %126, align 8
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %93
  %135 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %136, align 8
  br label %137

137:                                              ; preds = %92, %124, %105
  %138 = phi %"struct.std::__1::__hash_node_base"* [ %80, %105 ], [ %82, %124 ], [ %80, %92 ]
  %139 = phi i64 [ %93, %105 ], [ %81, %124 ], [ %81, %92 ]
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %138, i64 0, i32 0
  %141 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base"* %141, null
  br i1 %142, label %151, label %79

143:                                              ; preds = %2
  %144 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %144, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base"** %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %145 to i8*
  tail call void @_ZdlPv(i8* %148) #17
  br label %149

149:                                              ; preds = %143, %147
  %150 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %150, align 8
  br label %151

151:                                              ; preds = %137, %70, %35, %149
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net16CertIssuerSource7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.136"*, %"class.std::__1::unique_ptr.138"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.138"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.136"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.136"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.138"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.138"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.138"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.138"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.138"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.138"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.138"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.138"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.138"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::CertIssuerSource::Request"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.138"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.138"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.138"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.138"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !28

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.138"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.138"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.138"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.138"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.138"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.138"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.138"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.138"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.138"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.138"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.138"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.138"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.138"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.138"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.138"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.138"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.138"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.138"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.138"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.138"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.138"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.138"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.138"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.138"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.138"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.138"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.138"*
  %138 = icmp eq %"class.std::__1::unique_ptr.138"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.138"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %142, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %142, align 8
  %144 = icmp eq %"class.net::CertIssuerSource::Request"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::CertIssuerSource::Request"* %143 to void (%"class.net::CertIssuerSource::Request"*)***
  %147 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %147, i64 1
  %149 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %148, align 8
  tail call void %149(%"class.net::CertIssuerSource::Request"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.138"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"*, %class.anon.213* dereferenceable(1), i64, %"struct.net::(anonymous namespace)::IssuerEntry"*, i64) unnamed_addr #1 {
  switch i64 %3, label %61 [
    i64 0, label %299
    i64 1, label %299
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 2
  %10 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %10, align 8
  %12 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %11, i64 0, i32 6, i32 4
  %13 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %11, i64 0, i32 6, i32 5
  %14 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %8, i64 0, i32 0, i32 0
  %16 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %15, align 8
  %17 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %16, i64 0, i32 6, i32 4
  %18 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %16, i64 0, i32 6, i32 5
  %19 = load i32, i32* %9, align 4
  %20 = load i32, i32* %14, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %7
  %23 = icmp slt i32 %20, %19
  br i1 %23, label %299, label %24

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %12, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %17) #15
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %17, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %12) #15
  br i1 %27, label %299, label %28

28:                                               ; preds = %26
  %29 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %13, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %18) #15
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %18, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %13) #15
  br label %299

32:                                               ; preds = %7, %24, %28
  %33 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %10, align 8
  %35 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 1
  %36 = bitcast %"struct.net::CertificateTrust"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %8 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %15, align 8
  %40 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %10, align 8
  store i64 %39, i64* %33, align 8
  %41 = icmp eq %"class.net::ParsedCertificate"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %40) #15
  %47 = bitcast %"class.net::ParsedCertificate"* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %32, %42, %46
  %49 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 1
  %50 = bitcast %"struct.net::CertificateTrust"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %36, align 8
  %52 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %15, align 8
  store i64 %34, i64* %38, align 8
  %53 = icmp eq %"class.net::ParsedCertificate"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %52) #15
  %59 = bitcast %"class.net::ParsedCertificate"* %52 to i8*
  tail call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %48, %54, %58
  store i64 %37, i64* %50, align 8
  br label %299

61:                                               ; preds = %6
  %62 = icmp slt i64 %3, 1
  br i1 %62, label %63, label %141

63:                                               ; preds = %61
  %64 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %0, %1
  br i1 %64, label %299, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 1
  %67 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %66, %1
  br i1 %67, label %299, label %68

68:                                               ; preds = %65, %116
  %69 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %119, %116 ], [ %66, %65 ]
  %70 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %69, %116 ], [ %0, %65 ]
  %71 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %69, i64 0, i32 0, i32 0
  %72 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %71, align 8
  %74 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %70, i64 1, i32 1
  %75 = bitcast %"struct.net::CertificateTrust"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %69, %0
  br i1 %77, label %104, label %78

78:                                               ; preds = %68
  %79 = inttoptr i64 %73 to %"class.net::ParsedCertificate"*
  %80 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %79, i64 0, i32 6, i32 4
  %81 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %79, i64 0, i32 6, i32 5
  %82 = lshr i64 %76, 32
  %83 = trunc i64 %82 to i32
  br label %84

84:                                               ; preds = %134, %78
  %85 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %69, %78 ], [ %86, %134 ]
  %86 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %85, i64 -1
  %87 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %87, align 8
  %89 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %88, i64 0, i32 6, i32 4
  %90 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %88, i64 0, i32 6, i32 5
  %91 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %85, i64 -1, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, %83
  br i1 %93, label %121, label %94

94:                                               ; preds = %84
  %95 = icmp slt i32 %92, %83
  br i1 %95, label %104, label %96

96:                                               ; preds = %94
  %97 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %89, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %80) #15
  br i1 %97, label %121, label %98

98:                                               ; preds = %96
  %99 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %80, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %89) #15
  br i1 %99, label %104, label %100

100:                                              ; preds = %98
  %101 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %90, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %81) #15
  br i1 %101, label %121, label %102

102:                                              ; preds = %100
  %103 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %81, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %90) #15
  br label %104

104:                                              ; preds = %134, %98, %94, %102, %68
  %105 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %85, %102 ], [ %0, %68 ], [ %0, %134 ], [ %85, %98 ], [ %85, %94 ]
  %106 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %105 to i64*
  %107 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %105, i64 0, i32 0, i32 0
  %108 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %107, align 8
  store i64 %73, i64* %106, align 8
  %109 = icmp eq %"class.net::ParsedCertificate"* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw sub i32* %111, i32 1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %108) #15
  %115 = bitcast %"class.net::ParsedCertificate"* %108 to i8*
  tail call void @_ZdlPv(i8* %115) #17
  br label %116

116:                                              ; preds = %114, %110, %104
  %117 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %105, i64 0, i32 1
  %118 = bitcast %"struct.net::CertificateTrust"* %117 to i64*
  store i64 %76, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %69, i64 1
  %120 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %119, %1
  br i1 %120, label %299, label %68

121:                                              ; preds = %100, %96, %84
  %122 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %86 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %87, align 8
  %124 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %85 to i64*
  %125 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %85, i64 0, i32 0, i32 0
  %126 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %125, align 8
  store i64 %123, i64* %124, align 8
  %127 = icmp eq %"class.net::ParsedCertificate"* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %126) #15
  %133 = bitcast %"class.net::ParsedCertificate"* %126 to i8*
  tail call void @_ZdlPv(i8* %133) #17
  br label %134

134:                                              ; preds = %132, %128, %121
  %135 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %85, i64 0, i32 1
  %136 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %85, i64 -1, i32 1
  %137 = bitcast %"struct.net::CertificateTrust"* %136 to i64*
  %138 = bitcast %"struct.net::CertificateTrust"* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %86, %0
  br i1 %140, label %104, label %84

141:                                              ; preds = %61
  %142 = lshr i64 %3, 1
  %143 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 %142
  %144 = icmp sgt i64 %3, %5
  br i1 %144, label %297, label %145

145:                                              ; preds = %141
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE"(%"struct.net::(anonymous namespace)::IssuerEntry"* %0, %"struct.net::(anonymous namespace)::IssuerEntry"* %143, %class.anon.213* dereferenceable(1) %2, i64 %142, %"struct.net::(anonymous namespace)::IssuerEntry"* %4)
  %146 = sub nsw i64 %3, %142
  %147 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %142
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE"(%"struct.net::(anonymous namespace)::IssuerEntry"* %143, %"struct.net::(anonymous namespace)::IssuerEntry"* %1, %class.anon.213* dereferenceable(1) %2, i64 %146, %"struct.net::(anonymous namespace)::IssuerEntry"* %147)
  %148 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %3
  br label %151

149:                                              ; preds = %247
  %150 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %248, %148
  br i1 %150, label %277, label %252

151:                                              ; preds = %145, %247
  %152 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %249, %247 ], [ %4, %145 ]
  %153 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %248, %247 ], [ %147, %145 ]
  %154 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %250, %247 ], [ %0, %145 ]
  %155 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %153, %148
  br i1 %155, label %156, label %183

156:                                              ; preds = %151
  %157 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %152, %147
  br i1 %157, label %277, label %158

158:                                              ; preds = %156, %174
  %159 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %180, %174 ], [ %152, %156 ]
  %160 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %181, %174 ], [ %154, %156 ]
  %161 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %159, i64 0, i32 0, i32 0
  %162 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %159 to i64*
  %163 = load i64, i64* %162, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %161, align 8
  %164 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %160 to i64*
  %165 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %160, i64 0, i32 0, i32 0
  %166 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %165, align 8
  store i64 %163, i64* %164, align 8
  %167 = icmp eq %"class.net::ParsedCertificate"* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %158
  %169 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw sub i32* %169, i32 1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %166) #15
  %173 = bitcast %"class.net::ParsedCertificate"* %166 to i8*
  tail call void @_ZdlPv(i8* %173) #17
  br label %174

174:                                              ; preds = %172, %168, %158
  %175 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %160, i64 0, i32 1
  %176 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %159, i64 0, i32 1
  %177 = bitcast %"struct.net::CertificateTrust"* %176 to i64*
  %178 = bitcast %"struct.net::CertificateTrust"* %175 to i64*
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %178, align 8
  %180 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %159, i64 1
  %181 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %160, i64 1
  %182 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %180, %147
  br i1 %182, label %277, label %158

183:                                              ; preds = %151
  %184 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %153, i64 0, i32 2
  %185 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %152, i64 0, i32 0, i32 0
  %186 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %185, align 8
  %187 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %186, i64 0, i32 6, i32 4
  %188 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %186, i64 0, i32 6, i32 5
  %189 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %152, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %153, i64 0, i32 0, i32 0
  %191 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %190, align 8
  %192 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %191, i64 0, i32 6, i32 4
  %193 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %191, i64 0, i32 6, i32 5
  %194 = load i32, i32* %184, align 4
  %195 = load i32, i32* %189, align 4
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %207, label %197

197:                                              ; preds = %183
  %198 = icmp slt i32 %195, %194
  br i1 %198, label %227, label %199

199:                                              ; preds = %197
  %200 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %187, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %192) #15
  br i1 %200, label %207, label %201

201:                                              ; preds = %199
  %202 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %192, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %187) #15
  br i1 %202, label %227, label %203

203:                                              ; preds = %201
  %204 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %188, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %193) #15
  br i1 %204, label %207, label %205

205:                                              ; preds = %203
  %206 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %193, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %188) #15
  br label %227

207:                                              ; preds = %203, %199, %183
  %208 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %153 to i64*
  %209 = load i64, i64* %208, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %190, align 8
  %210 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %154 to i64*
  %211 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %154, i64 0, i32 0, i32 0
  %212 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %211, align 8
  store i64 %209, i64* %210, align 8
  %213 = icmp eq %"class.net::ParsedCertificate"* %212, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = atomicrmw sub i32* %215, i32 1 acq_rel
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %212) #15
  %219 = bitcast %"class.net::ParsedCertificate"* %212 to i8*
  tail call void @_ZdlPv(i8* %219) #17
  br label %220

220:                                              ; preds = %218, %214, %207
  %221 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %154, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %153, i64 0, i32 1
  %223 = bitcast %"struct.net::CertificateTrust"* %222 to i64*
  %224 = bitcast %"struct.net::CertificateTrust"* %221 to i64*
  %225 = load i64, i64* %223, align 8
  store i64 %225, i64* %224, align 8
  %226 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %153, i64 1
  br label %247

227:                                              ; preds = %205, %201, %197
  %228 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %152 to i64*
  %229 = load i64, i64* %228, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %185, align 8
  %230 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %154 to i64*
  %231 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %154, i64 0, i32 0, i32 0
  %232 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %231, align 8
  store i64 %229, i64* %230, align 8
  %233 = icmp eq %"class.net::ParsedCertificate"* %232, null
  br i1 %233, label %240, label %234

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw sub i32* %235, i32 1 acq_rel
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %238, label %240

238:                                              ; preds = %234
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %232) #15
  %239 = bitcast %"class.net::ParsedCertificate"* %232 to i8*
  tail call void @_ZdlPv(i8* %239) #17
  br label %240

240:                                              ; preds = %238, %234, %227
  %241 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %154, i64 0, i32 1
  %242 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %152, i64 0, i32 1
  %243 = bitcast %"struct.net::CertificateTrust"* %242 to i64*
  %244 = bitcast %"struct.net::CertificateTrust"* %241 to i64*
  %245 = load i64, i64* %243, align 8
  store i64 %245, i64* %244, align 8
  %246 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %152, i64 1
  br label %247

247:                                              ; preds = %240, %220
  %248 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %226, %220 ], [ %153, %240 ]
  %249 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %152, %220 ], [ %246, %240 ]
  %250 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %154, i64 1
  %251 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %249, %147
  br i1 %251, label %149, label %151

252:                                              ; preds = %149, %268
  %253 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %274, %268 ], [ %248, %149 ]
  %254 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %275, %268 ], [ %250, %149 ]
  %255 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %253, i64 0, i32 0, i32 0
  %256 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %253 to i64*
  %257 = load i64, i64* %256, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %255, align 8
  %258 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %254 to i64*
  %259 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %254, i64 0, i32 0, i32 0
  %260 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %259, align 8
  store i64 %257, i64* %258, align 8
  %261 = icmp eq %"class.net::ParsedCertificate"* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %252
  %263 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw sub i32* %263, i32 1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %268

266:                                              ; preds = %262
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %260) #15
  %267 = bitcast %"class.net::ParsedCertificate"* %260 to i8*
  tail call void @_ZdlPv(i8* %267) #17
  br label %268

268:                                              ; preds = %266, %262, %252
  %269 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %254, i64 0, i32 1
  %270 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %253, i64 0, i32 1
  %271 = bitcast %"struct.net::CertificateTrust"* %270 to i64*
  %272 = bitcast %"struct.net::CertificateTrust"* %269 to i64*
  %273 = load i64, i64* %271, align 8
  store i64 %273, i64* %272, align 8
  %274 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %253, i64 1
  %275 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %254, i64 1
  %276 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %274, %148
  br i1 %276, label %277, label %252

277:                                              ; preds = %268, %174, %149, %156
  %278 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %4, null
  %279 = icmp eq i64 %3, 0
  %280 = or i1 %279, %278
  br i1 %280, label %299, label %281

281:                                              ; preds = %277, %293
  %282 = phi i64 [ %294, %293 ], [ 0, %277 ]
  %283 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %295, %293 ], [ %4, %277 ]
  %284 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %283, i64 0, i32 0, i32 0
  %285 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %284, align 8
  %286 = icmp eq %"class.net::ParsedCertificate"* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %285, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = atomicrmw sub i32* %288, i32 1 acq_rel
  %290 = icmp eq i32 %289, 1
  br i1 %290, label %291, label %293

291:                                              ; preds = %287
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %285) #15
  %292 = bitcast %"class.net::ParsedCertificate"* %285 to i8*
  tail call void @_ZdlPv(i8* %292) #17
  br label %293

293:                                              ; preds = %291, %287, %281
  %294 = add nuw i64 %282, 1
  %295 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %283, i64 1
  %296 = icmp eq i64 %294, %3
  br i1 %296, label %299, label %281

297:                                              ; preds = %141
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %0, %"struct.net::(anonymous namespace)::IssuerEntry"* %143, %class.anon.213* dereferenceable(1) %2, i64 %142, %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %5)
  %298 = sub nsw i64 %3, %142
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %143, %"struct.net::(anonymous namespace)::IssuerEntry"* %1, %class.anon.213* dereferenceable(1) %2, i64 %298, %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %0, %"struct.net::(anonymous namespace)::IssuerEntry"* %143, %"struct.net::(anonymous namespace)::IssuerEntry"* %1, %class.anon.213* dereferenceable(1) %2, i64 %142, i64 %298, %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %5)
  ret void

299:                                              ; preds = %293, %116, %277, %65, %63, %30, %26, %22, %60, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeE"(%"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"*, %class.anon.213* dereferenceable(1), i64, %"struct.net::(anonymous namespace)::IssuerEntry"*) unnamed_addr #1 {
  switch i64 %3, label %77 [
    i64 0, label %422
    i64 1, label %6
    i64 2, label %16
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %7, align 8
  %11 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 1
  %13 = bitcast %"struct.net::CertificateTrust"* %12 to i64*
  %14 = bitcast %"struct.net::CertificateTrust"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  br label %422

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1
  %18 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 2
  %19 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 0, i32 0
  %20 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %19, align 8
  %21 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %20, i64 0, i32 6, i32 4
  %22 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %20, i64 0, i32 6, i32 5
  %23 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %17, i64 0, i32 0, i32 0
  %25 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %24, align 8
  %26 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %25, i64 0, i32 6, i32 4
  %27 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %25, i64 0, i32 6, i32 5
  %28 = load i32, i32* %18, align 4
  %29 = load i32, i32* %23, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %16
  %32 = icmp slt i32 %29, %28
  br i1 %32, label %59, label %33

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %21, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %26) #15
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %26, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %21) #15
  br i1 %36, label %59, label %37

37:                                               ; preds = %35
  %38 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %22, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %27) #15
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %27, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %22) #15
  br label %59

41:                                               ; preds = %16, %33, %37
  %42 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %17 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %4 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %24, align 8
  %45 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 1
  %47 = bitcast %"struct.net::CertificateTrust"* %46 to i64*
  %48 = bitcast %"struct.net::CertificateTrust"* %45 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 1
  %51 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %50 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %19, align 8
  %54 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 1, i32 1
  %55 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 1
  %56 = bitcast %"struct.net::CertificateTrust"* %55 to i64*
  %57 = bitcast %"struct.net::CertificateTrust"* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  br label %422

59:                                               ; preds = %39, %35, %31
  %60 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %4 to i64*
  store i64 %61, i64* %62, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %19, align 8
  %63 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 1
  %65 = bitcast %"struct.net::CertificateTrust"* %64 to i64*
  %66 = bitcast %"struct.net::CertificateTrust"* %63 to i64*
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 1
  %69 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %17 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %68 to i64*
  store i64 %70, i64* %71, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %24, align 8
  %72 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 1, i32 1
  %73 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 1
  %74 = bitcast %"struct.net::CertificateTrust"* %73 to i64*
  %75 = bitcast %"struct.net::CertificateTrust"* %72 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  br label %422

77:                                               ; preds = %5
  %78 = icmp slt i64 %3, 9
  br i1 %78, label %79, label %199

79:                                               ; preds = %77
  %80 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %0, %1
  br i1 %80, label %422, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 0, i32 0
  %83 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %4 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %82, align 8
  %86 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 0, i32 1
  %88 = bitcast %"struct.net::CertificateTrust"* %87 to i64*
  %89 = bitcast %"struct.net::CertificateTrust"* %86 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 1
  %92 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %91, %1
  br i1 %92, label %422, label %93

93:                                               ; preds = %81, %191
  %94 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %197, %191 ], [ %91, %81 ]
  %95 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %97, %191 ], [ %4, %81 ]
  %96 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %94, %191 ], [ %0, %81 ]
  %97 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %95, i64 1
  %98 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %96, i64 1, i32 2
  %99 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %95, i64 0, i32 0, i32 0
  %100 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %99, align 8
  %101 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %100, i64 0, i32 6, i32 4
  %102 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %100, i64 0, i32 6, i32 5
  %103 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %95, i64 0, i32 2
  %104 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %94, i64 0, i32 0, i32 0
  %105 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %104, align 8
  %106 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %105, i64 0, i32 6, i32 4
  %107 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %105, i64 0, i32 6, i32 5
  %108 = load i32, i32* %98, align 4
  %109 = load i32, i32* %103, align 4
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %121, label %111

111:                                              ; preds = %93
  %112 = icmp slt i32 %109, %108
  br i1 %112, label %186, label %113

113:                                              ; preds = %111
  %114 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %101, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %106) #15
  br i1 %114, label %121, label %115

115:                                              ; preds = %113
  %116 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %106, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %101) #15
  br i1 %116, label %186, label %117

117:                                              ; preds = %115
  %118 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %102, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %107) #15
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %107, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %102) #15
  br label %186

121:                                              ; preds = %117, %113, %93
  %122 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %95 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %99, align 8
  %124 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %97 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %124, align 8
  %125 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %95, %4
  br i1 %125, label %170, label %126

126:                                              ; preds = %121, %163
  %127 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %128, %163 ], [ %95, %121 ]
  %128 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %127, i64 -1
  %129 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %129, align 8
  %131 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %130, i64 0, i32 6, i32 4
  %132 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %130, i64 0, i32 6, i32 5
  %133 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %127, i64 -1, i32 2
  %134 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %104, align 8
  %135 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %134, i64 0, i32 6, i32 4
  %136 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %134, i64 0, i32 6, i32 5
  %137 = load i32, i32* %98, align 4
  %138 = load i32, i32* %133, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %150, label %140

140:                                              ; preds = %126
  %141 = icmp slt i32 %138, %137
  br i1 %141, label %170, label %142

142:                                              ; preds = %140
  %143 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %131, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %135) #15
  br i1 %143, label %150, label %144

144:                                              ; preds = %142
  %145 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %135, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %131) #15
  br i1 %145, label %170, label %146

146:                                              ; preds = %144
  %147 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %132, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %136) #15
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %136, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %132) #15
  br label %170

150:                                              ; preds = %146, %142, %126
  %151 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %128 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %129, align 8
  %153 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %127 to i64*
  %154 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %127, i64 0, i32 0, i32 0
  %155 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %154, align 8
  store i64 %152, i64* %153, align 8
  %156 = icmp eq %"class.net::ParsedCertificate"* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw sub i32* %158, i32 1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %155) #15
  %162 = bitcast %"class.net::ParsedCertificate"* %155 to i8*
  tail call void @_ZdlPv(i8* %162) #17
  br label %163

163:                                              ; preds = %161, %157, %150
  %164 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %127, i64 0, i32 1
  %165 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %127, i64 -1, i32 1
  %166 = bitcast %"struct.net::CertificateTrust"* %165 to i64*
  %167 = bitcast %"struct.net::CertificateTrust"* %164 to i64*
  %168 = load i64, i64* %166, align 8
  store i64 %168, i64* %167, align 8
  %169 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %128, %4
  br i1 %169, label %170, label %126

170:                                              ; preds = %163, %144, %140, %148, %121
  %171 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %127, %148 ], [ %4, %121 ], [ %127, %144 ], [ %127, %140 ], [ %4, %163 ]
  %172 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %94 to i64*
  %173 = load i64, i64* %172, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %104, align 8
  %174 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %171 to i64*
  %175 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %171, i64 0, i32 0, i32 0
  %176 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %175, align 8
  store i64 %173, i64* %174, align 8
  %177 = icmp eq %"class.net::ParsedCertificate"* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw sub i32* %179, i32 1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %184

182:                                              ; preds = %178
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %176) #15
  %183 = bitcast %"class.net::ParsedCertificate"* %176 to i8*
  tail call void @_ZdlPv(i8* %183) #17
  br label %184

184:                                              ; preds = %182, %178, %170
  %185 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %171, i64 0, i32 1
  br label %191

186:                                              ; preds = %119, %115, %111
  %187 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %94 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %97 to i64*
  store i64 %188, i64* %189, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %104, align 8
  %190 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %95, i64 1, i32 1
  br label %191

191:                                              ; preds = %186, %184
  %192 = phi %"struct.net::CertificateTrust"* [ %190, %186 ], [ %185, %184 ]
  %193 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %96, i64 1, i32 1
  %194 = bitcast %"struct.net::CertificateTrust"* %193 to i64*
  %195 = bitcast %"struct.net::CertificateTrust"* %192 to i64*
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %94, i64 1
  %198 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %197, %1
  br i1 %198, label %422, label %93

199:                                              ; preds = %77
  %200 = lshr i64 %3, 1
  %201 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 %200
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %0, %"struct.net::(anonymous namespace)::IssuerEntry"* %201, %class.anon.213* dereferenceable(1) %2, i64 %200, %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %200)
  %202 = sub nsw i64 %3, %200
  %203 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %4, i64 %200
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeEPNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %201, %"struct.net::(anonymous namespace)::IssuerEntry"* %1, %class.anon.213* dereferenceable(1) %2, i64 %202, %"struct.net::(anonymous namespace)::IssuerEntry"* %203, i64 %202)
  %204 = icmp eq i64 %200, 0
  br i1 %204, label %205, label %287

205:                                              ; preds = %417, %199
  %206 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %201, %199 ], [ %418, %417 ]
  %207 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %4, %199 ], [ %420, %417 ]
  %208 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %206, %1
  br i1 %208, label %422, label %209

209:                                              ; preds = %205
  %210 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %206 to i64
  %211 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %1, i64 -1, i32 0, i32 0
  %212 = ptrtoint %"class.net::ParsedCertificate"** %211 to i64
  %213 = sub i64 %212, %210
  %214 = lshr i64 %213, 4
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %235, label %218

218:                                              ; preds = %209, %218
  %219 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %232, %218 ], [ %207, %209 ]
  %220 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %231, %218 ], [ %206, %209 ]
  %221 = phi i64 [ %233, %218 ], [ %216, %209 ]
  %222 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %220, i64 0, i32 0, i32 0
  %223 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %220 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %219 to i64*
  store i64 %224, i64* %225, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %222, align 8
  %226 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %219, i64 0, i32 1
  %227 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %220, i64 0, i32 1
  %228 = bitcast %"struct.net::CertificateTrust"* %227 to i64*
  %229 = bitcast %"struct.net::CertificateTrust"* %226 to i64*
  %230 = load i64, i64* %228, align 8
  store i64 %230, i64* %229, align 8
  %231 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %220, i64 1
  %232 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %219, i64 1
  %233 = add i64 %221, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %218, !llvm.loop !29

235:                                              ; preds = %218, %209
  %236 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %207, %209 ], [ %232, %218 ]
  %237 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %206, %209 ], [ %231, %218 ]
  %238 = icmp ult i64 %213, 48
  br i1 %238, label %422, label %239

239:                                              ; preds = %235, %239
  %240 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %285, %239 ], [ %236, %235 ]
  %241 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %284, %239 ], [ %237, %235 ]
  %242 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 0, i32 0, i32 0
  %243 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %241 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %240 to i64*
  store i64 %244, i64* %245, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %242, align 8
  %246 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 0, i32 1
  %247 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 0, i32 1
  %248 = bitcast %"struct.net::CertificateTrust"* %247 to i64*
  %249 = bitcast %"struct.net::CertificateTrust"* %246 to i64*
  %250 = load i64, i64* %248, align 8
  store i64 %250, i64* %249, align 8
  %251 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 1
  %252 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 1
  %253 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %251, i64 0, i32 0, i32 0
  %254 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %251 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %252 to i64*
  store i64 %255, i64* %256, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %253, align 8
  %257 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 1, i32 1
  %258 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 1, i32 1
  %259 = bitcast %"struct.net::CertificateTrust"* %258 to i64*
  %260 = bitcast %"struct.net::CertificateTrust"* %257 to i64*
  %261 = load i64, i64* %259, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 2
  %263 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 2
  %264 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %262, i64 0, i32 0, i32 0
  %265 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %262 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %263 to i64*
  store i64 %266, i64* %267, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %264, align 8
  %268 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 2, i32 1
  %269 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 2, i32 1
  %270 = bitcast %"struct.net::CertificateTrust"* %269 to i64*
  %271 = bitcast %"struct.net::CertificateTrust"* %268 to i64*
  %272 = load i64, i64* %270, align 8
  store i64 %272, i64* %271, align 8
  %273 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 3
  %274 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 3
  %275 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %273, i64 0, i32 0, i32 0
  %276 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %273 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %274 to i64*
  store i64 %277, i64* %278, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %275, align 8
  %279 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 3, i32 1
  %280 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 3, i32 1
  %281 = bitcast %"struct.net::CertificateTrust"* %280 to i64*
  %282 = bitcast %"struct.net::CertificateTrust"* %279 to i64*
  %283 = load i64, i64* %281, align 8
  store i64 %283, i64* %282, align 8
  %284 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %241, i64 4
  %285 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %240, i64 4
  %286 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %284, %1
  br i1 %286, label %422, label %239

287:                                              ; preds = %199, %417
  %288 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %420, %417 ], [ %4, %199 ]
  %289 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %419, %417 ], [ %0, %199 ]
  %290 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %418, %417 ], [ %201, %199 ]
  %291 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %290, %1
  br i1 %291, label %292, label %373

292:                                              ; preds = %287
  %293 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %289, %201
  br i1 %293, label %422, label %294

294:                                              ; preds = %292
  %295 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %289 to i64
  %296 = add nsw i64 %200, -1
  %297 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %0, i64 %296, i32 0, i32 0
  %298 = ptrtoint %"class.net::ParsedCertificate"** %297 to i64
  %299 = sub i64 %298, %295
  %300 = lshr i64 %299, 4
  %301 = add nuw nsw i64 %300, 1
  %302 = and i64 %301, 3
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %321, label %304

304:                                              ; preds = %294, %304
  %305 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %318, %304 ], [ %288, %294 ]
  %306 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %317, %304 ], [ %289, %294 ]
  %307 = phi i64 [ %319, %304 ], [ %302, %294 ]
  %308 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %306, i64 0, i32 0, i32 0
  %309 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %306 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %305 to i64*
  store i64 %310, i64* %311, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %308, align 8
  %312 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %305, i64 0, i32 1
  %313 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %306, i64 0, i32 1
  %314 = bitcast %"struct.net::CertificateTrust"* %313 to i64*
  %315 = bitcast %"struct.net::CertificateTrust"* %312 to i64*
  %316 = load i64, i64* %314, align 8
  store i64 %316, i64* %315, align 8
  %317 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %306, i64 1
  %318 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %305, i64 1
  %319 = add i64 %307, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %304, !llvm.loop !30

321:                                              ; preds = %304, %294
  %322 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %288, %294 ], [ %318, %304 ]
  %323 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %289, %294 ], [ %317, %304 ]
  %324 = icmp ult i64 %299, 48
  br i1 %324, label %422, label %325

325:                                              ; preds = %321, %325
  %326 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %371, %325 ], [ %322, %321 ]
  %327 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %370, %325 ], [ %323, %321 ]
  %328 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 0, i32 0, i32 0
  %329 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %327 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %326 to i64*
  store i64 %330, i64* %331, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %328, align 8
  %332 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 0, i32 1
  %333 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 0, i32 1
  %334 = bitcast %"struct.net::CertificateTrust"* %333 to i64*
  %335 = bitcast %"struct.net::CertificateTrust"* %332 to i64*
  %336 = load i64, i64* %334, align 8
  store i64 %336, i64* %335, align 8
  %337 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 1
  %338 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 1
  %339 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %337, i64 0, i32 0, i32 0
  %340 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %337 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %338 to i64*
  store i64 %341, i64* %342, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %339, align 8
  %343 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 1, i32 1
  %344 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 1, i32 1
  %345 = bitcast %"struct.net::CertificateTrust"* %344 to i64*
  %346 = bitcast %"struct.net::CertificateTrust"* %343 to i64*
  %347 = load i64, i64* %345, align 8
  store i64 %347, i64* %346, align 8
  %348 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 2
  %349 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 2
  %350 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %348, i64 0, i32 0, i32 0
  %351 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %348 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %349 to i64*
  store i64 %352, i64* %353, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %350, align 8
  %354 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 2, i32 1
  %355 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 2, i32 1
  %356 = bitcast %"struct.net::CertificateTrust"* %355 to i64*
  %357 = bitcast %"struct.net::CertificateTrust"* %354 to i64*
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 3
  %360 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 3
  %361 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %359, i64 0, i32 0, i32 0
  %362 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %359 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %360 to i64*
  store i64 %363, i64* %364, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %361, align 8
  %365 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 3, i32 1
  %366 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 3, i32 1
  %367 = bitcast %"struct.net::CertificateTrust"* %366 to i64*
  %368 = bitcast %"struct.net::CertificateTrust"* %365 to i64*
  %369 = load i64, i64* %367, align 8
  store i64 %369, i64* %368, align 8
  %370 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %327, i64 4
  %371 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %326, i64 4
  %372 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %370, %201
  br i1 %372, label %422, label %325

373:                                              ; preds = %287
  %374 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %290, i64 0, i32 2
  %375 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %289, i64 0, i32 0, i32 0
  %376 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %375, align 8
  %377 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %376, i64 0, i32 6, i32 4
  %378 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %376, i64 0, i32 6, i32 5
  %379 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %289, i64 0, i32 2
  %380 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %290, i64 0, i32 0, i32 0
  %381 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %380, align 8
  %382 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %381, i64 0, i32 6, i32 4
  %383 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %381, i64 0, i32 6, i32 5
  %384 = load i32, i32* %374, align 4
  %385 = load i32, i32* %379, align 4
  %386 = icmp slt i32 %384, %385
  br i1 %386, label %397, label %387

387:                                              ; preds = %373
  %388 = icmp slt i32 %385, %384
  br i1 %388, label %407, label %389

389:                                              ; preds = %387
  %390 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %377, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %382) #15
  br i1 %390, label %397, label %391

391:                                              ; preds = %389
  %392 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %382, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %377) #15
  br i1 %392, label %407, label %393

393:                                              ; preds = %391
  %394 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %378, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %383) #15
  br i1 %394, label %397, label %395

395:                                              ; preds = %393
  %396 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %383, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %378) #15
  br label %407

397:                                              ; preds = %393, %389, %373
  %398 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %290 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %288 to i64*
  store i64 %399, i64* %400, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %380, align 8
  %401 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %288, i64 0, i32 1
  %402 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %290, i64 0, i32 1
  %403 = bitcast %"struct.net::CertificateTrust"* %402 to i64*
  %404 = bitcast %"struct.net::CertificateTrust"* %401 to i64*
  %405 = load i64, i64* %403, align 8
  store i64 %405, i64* %404, align 8
  %406 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %290, i64 1
  br label %417

407:                                              ; preds = %395, %391, %387
  %408 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %289 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %288 to i64*
  store i64 %409, i64* %410, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %375, align 8
  %411 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %288, i64 0, i32 1
  %412 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %289, i64 0, i32 1
  %413 = bitcast %"struct.net::CertificateTrust"* %412 to i64*
  %414 = bitcast %"struct.net::CertificateTrust"* %411 to i64*
  %415 = load i64, i64* %413, align 8
  store i64 %415, i64* %414, align 8
  %416 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %289, i64 1
  br label %417

417:                                              ; preds = %407, %397
  %418 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %406, %397 ], [ %290, %407 ]
  %419 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %289, %397 ], [ %416, %407 ]
  %420 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %288, i64 1
  %421 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %419, %201
  br i1 %421, label %205, label %287

422:                                              ; preds = %321, %325, %235, %239, %191, %292, %205, %81, %79, %59, %41, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"*, %class.anon.213* readnone dereferenceable(1), i64, i64, %"struct.net::(anonymous namespace)::IssuerEntry"*, i64) unnamed_addr #1 {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %712, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %1 to i64
  %12 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %0 to i64
  br label %13

13:                                               ; preds = %10, %705
  %14 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %710, %705 ], [ %2, %10 ]
  %15 = phi i64 [ %709, %705 ], [ %4, %10 ]
  %16 = phi i64 [ %708, %705 ], [ %5, %10 ]
  %17 = phi i64 [ %707, %705 ], [ %11, %10 ]
  %18 = phi i64 [ %706, %705 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %28

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %712, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %26 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %25, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %25, i64 0, i32 0, i32 0
  br label %427

28:                                               ; preds = %13
  %29 = inttoptr i64 %18 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %30 = inttoptr i64 %17 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %31 = icmp sgt i64 %15, %16
  br i1 %31, label %70, label %32

32:                                               ; preds = %28
  %33 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %29, %30
  br i1 %33, label %712, label %34

34:                                               ; preds = %32
  %35 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %30, i64 -1, i32 0, i32 0
  %36 = ptrtoint %"class.net::ParsedCertificate"** %35 to i64
  %37 = sub i64 %36, %18
  %38 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %30, i64 -1, i32 0, i32 0
  %39 = bitcast %"class.net::ParsedCertificate"** %38 to i8*
  %40 = sub i64 0, %18
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 4
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %34, %47
  %48 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %61, %47 ], [ %6, %34 ]
  %49 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %60, %47 ], [ %29, %34 ]
  %50 = phi i64 [ %62, %47 ], [ %45, %34 ]
  %51 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %49, i64 0, i32 0, i32 0
  %52 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %49 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %48 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %51, align 8
  %55 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %48, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %49, i64 0, i32 1
  %57 = bitcast %"struct.net::CertificateTrust"* %56 to i64*
  %58 = bitcast %"struct.net::CertificateTrust"* %55 to i64*
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %49, i64 1
  %61 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %48, i64 1
  %62 = add i64 %50, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %47, !llvm.loop !31

64:                                               ; preds = %47, %34
  %65 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ undef, %34 ], [ %48, %47 ]
  %66 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ undef, %34 ], [ %61, %47 ]
  %67 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %6, %34 ], [ %61, %47 ]
  %68 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %29, %34 ], [ %60, %47 ]
  %69 = icmp ult i8* %41, inttoptr (i64 48 to i8*)
  br i1 %69, label %107, label %212

70:                                               ; preds = %28
  %71 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %14, %30
  br i1 %71, label %712, label %72

72:                                               ; preds = %70
  %73 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %14, i64 -1, i32 0, i32 0
  %74 = ptrtoint %"class.net::ParsedCertificate"** %73 to i64
  %75 = sub i64 %74, %17
  %76 = getelementptr %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %14, i64 -1, i32 0, i32 0
  %77 = bitcast %"class.net::ParsedCertificate"** %76 to i8*
  %78 = sub i64 0, %17
  %79 = getelementptr i8, i8* %77, i64 %78
  %80 = ptrtoint i8* %79 to i64
  %81 = lshr i64 %80, 4
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 3
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %72, %85
  %86 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %99, %85 ], [ %6, %72 ]
  %87 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %98, %85 ], [ %30, %72 ]
  %88 = phi i64 [ %100, %85 ], [ %83, %72 ]
  %89 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %87, i64 0, i32 0, i32 0
  %90 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %86 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %89, align 8
  %93 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %86, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %87, i64 0, i32 1
  %95 = bitcast %"struct.net::CertificateTrust"* %94 to i64*
  %96 = bitcast %"struct.net::CertificateTrust"* %93 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %87, i64 1
  %99 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %86, i64 1
  %100 = add i64 %88, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %85, !llvm.loop !32

102:                                              ; preds = %85, %72
  %103 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ undef, %72 ], [ %99, %85 ]
  %104 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %6, %72 ], [ %99, %85 ]
  %105 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %30, %72 ], [ %98, %85 ]
  %106 = icmp ult i8* %79, inttoptr (i64 48 to i8*)
  br i1 %106, label %260, label %360

107:                                              ; preds = %212, %64
  %108 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %65, %64 ], [ %247, %212 ]
  %109 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %66, %64 ], [ %258, %212 ]
  %110 = lshr i64 %37, 4
  %111 = add nuw nsw i64 %110, 1
  %112 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %109, %6
  br i1 %112, label %408, label %113

113:                                              ; preds = %107, %207
  %114 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %209, %207 ], [ %6, %107 ]
  %115 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %210, %207 ], [ %29, %107 ]
  %116 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %208, %207 ], [ %30, %107 ]
  %117 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %116, %14
  br i1 %117, label %118, label %143

118:                                              ; preds = %113, %134
  %119 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %141, %134 ], [ %115, %113 ]
  %120 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %140, %134 ], [ %114, %113 ]
  %121 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %120, i64 0, i32 0, i32 0
  %122 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %121, align 8
  %124 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %119 to i64*
  %125 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %119, i64 0, i32 0, i32 0
  %126 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %125, align 8
  store i64 %123, i64* %124, align 8
  %127 = icmp eq %"class.net::ParsedCertificate"* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %126) #15
  %133 = bitcast %"class.net::ParsedCertificate"* %126 to i8*
  tail call void @_ZdlPv(i8* %133) #17
  br label %134

134:                                              ; preds = %132, %128, %118
  %135 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %119, i64 0, i32 1
  %136 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %120, i64 0, i32 1
  %137 = bitcast %"struct.net::CertificateTrust"* %136 to i64*
  %138 = bitcast %"struct.net::CertificateTrust"* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %120, i64 1
  %141 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %119, i64 1
  %142 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %120, %108
  br i1 %142, label %408, label %118

143:                                              ; preds = %113
  %144 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %116, i64 0, i32 2
  %145 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %114, i64 0, i32 0, i32 0
  %146 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %145, align 8
  %147 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %146, i64 0, i32 6, i32 4
  %148 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %146, i64 0, i32 6, i32 5
  %149 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %114, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %116, i64 0, i32 0, i32 0
  %151 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %150, align 8
  %152 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %151, i64 0, i32 6, i32 4
  %153 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %151, i64 0, i32 6, i32 5
  %154 = load i32, i32* %144, align 4
  %155 = load i32, i32* %149, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %167, label %157

157:                                              ; preds = %143
  %158 = icmp slt i32 %155, %154
  br i1 %158, label %187, label %159

159:                                              ; preds = %157
  %160 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %147, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %152) #15
  br i1 %160, label %167, label %161

161:                                              ; preds = %159
  %162 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %152, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %147) #15
  br i1 %162, label %187, label %163

163:                                              ; preds = %161
  %164 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %148, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %153) #15
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %153, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %148) #15
  br label %187

167:                                              ; preds = %163, %159, %143
  %168 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %116 to i64*
  %169 = load i64, i64* %168, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %150, align 8
  %170 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %115 to i64*
  %171 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %115, i64 0, i32 0, i32 0
  %172 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %171, align 8
  store i64 %169, i64* %170, align 8
  %173 = icmp eq %"class.net::ParsedCertificate"* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw sub i32* %175, i32 1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %172) #15
  %179 = bitcast %"class.net::ParsedCertificate"* %172 to i8*
  tail call void @_ZdlPv(i8* %179) #17
  br label %180

180:                                              ; preds = %178, %174, %167
  %181 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %115, i64 0, i32 1
  %182 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %116, i64 0, i32 1
  %183 = bitcast %"struct.net::CertificateTrust"* %182 to i64*
  %184 = bitcast %"struct.net::CertificateTrust"* %181 to i64*
  %185 = load i64, i64* %183, align 8
  store i64 %185, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %116, i64 1
  br label %207

187:                                              ; preds = %165, %161, %157
  %188 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %114 to i64*
  %189 = load i64, i64* %188, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %145, align 8
  %190 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %115 to i64*
  %191 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %115, i64 0, i32 0, i32 0
  %192 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %191, align 8
  store i64 %189, i64* %190, align 8
  %193 = icmp eq %"class.net::ParsedCertificate"* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw sub i32* %195, i32 1 acq_rel
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %192) #15
  %199 = bitcast %"class.net::ParsedCertificate"* %192 to i8*
  tail call void @_ZdlPv(i8* %199) #17
  br label %200

200:                                              ; preds = %198, %194, %187
  %201 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %115, i64 0, i32 1
  %202 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %114, i64 0, i32 1
  %203 = bitcast %"struct.net::CertificateTrust"* %202 to i64*
  %204 = bitcast %"struct.net::CertificateTrust"* %201 to i64*
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %114, i64 1
  br label %207

207:                                              ; preds = %200, %180
  %208 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %186, %180 ], [ %116, %200 ]
  %209 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %114, %180 ], [ %206, %200 ]
  %210 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %115, i64 1
  %211 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %209, %109
  br i1 %211, label %408, label %113

212:                                              ; preds = %64, %212
  %213 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %258, %212 ], [ %67, %64 ]
  %214 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %257, %212 ], [ %68, %64 ]
  %215 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 0, i32 0, i32 0
  %216 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %214 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %213 to i64*
  store i64 %217, i64* %218, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %215, align 8
  %219 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 0, i32 1
  %220 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 0, i32 1
  %221 = bitcast %"struct.net::CertificateTrust"* %220 to i64*
  %222 = bitcast %"struct.net::CertificateTrust"* %219 to i64*
  %223 = load i64, i64* %221, align 8
  store i64 %223, i64* %222, align 8
  %224 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 1
  %225 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 1
  %226 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %224, i64 0, i32 0, i32 0
  %227 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %224 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %225 to i64*
  store i64 %228, i64* %229, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %226, align 8
  %230 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 1, i32 1
  %231 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 1, i32 1
  %232 = bitcast %"struct.net::CertificateTrust"* %231 to i64*
  %233 = bitcast %"struct.net::CertificateTrust"* %230 to i64*
  %234 = load i64, i64* %232, align 8
  store i64 %234, i64* %233, align 8
  %235 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 2
  %236 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 2
  %237 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %235, i64 0, i32 0, i32 0
  %238 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %235 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %236 to i64*
  store i64 %239, i64* %240, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %237, align 8
  %241 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 2, i32 1
  %242 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 2, i32 1
  %243 = bitcast %"struct.net::CertificateTrust"* %242 to i64*
  %244 = bitcast %"struct.net::CertificateTrust"* %241 to i64*
  %245 = load i64, i64* %243, align 8
  store i64 %245, i64* %244, align 8
  %246 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 3
  %247 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 3
  %248 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %246, i64 0, i32 0, i32 0
  %249 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %246 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %247 to i64*
  store i64 %250, i64* %251, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %248, align 8
  %252 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 3, i32 1
  %253 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 3, i32 1
  %254 = bitcast %"struct.net::CertificateTrust"* %253 to i64*
  %255 = bitcast %"struct.net::CertificateTrust"* %252 to i64*
  %256 = load i64, i64* %254, align 8
  store i64 %256, i64* %255, align 8
  %257 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %214, i64 4
  %258 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %213, i64 4
  %259 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %257, %30
  br i1 %259, label %107, label %212

260:                                              ; preds = %360, %102
  %261 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %103, %102 ], [ %406, %360 ]
  %262 = lshr i64 %75, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %261, %6
  br i1 %264, label %408, label %265

265:                                              ; preds = %260, %349
  %266 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %358, %349 ], [ %14, %260 ]
  %267 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %352, %349 ], [ %261, %260 ]
  %268 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %351, %349 ], [ %30, %260 ]
  %269 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %268, %29
  br i1 %269, label %270, label %295

270:                                              ; preds = %265, %288
  %271 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %273, %288 ], [ %267, %265 ]
  %272 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %274, %288 ], [ %266, %265 ]
  %273 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %271, i64 -1
  %274 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %272, i64 -1
  %275 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %273, i64 0, i32 0, i32 0
  %276 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %273 to i64*
  %277 = load i64, i64* %276, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %275, align 8
  %278 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %274 to i64*
  %279 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %274, i64 0, i32 0, i32 0
  %280 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %279, align 8
  store i64 %277, i64* %278, align 8
  %281 = icmp eq %"class.net::ParsedCertificate"* %280, null
  br i1 %281, label %288, label %282

282:                                              ; preds = %270
  %283 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = atomicrmw sub i32* %283, i32 1 acq_rel
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %286, label %288

286:                                              ; preds = %282
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %280) #15
  %287 = bitcast %"class.net::ParsedCertificate"* %280 to i8*
  tail call void @_ZdlPv(i8* %287) #17
  br label %288

288:                                              ; preds = %286, %282, %270
  %289 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %272, i64 -1, i32 1
  %290 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %271, i64 -1, i32 1
  %291 = bitcast %"struct.net::CertificateTrust"* %290 to i64*
  %292 = bitcast %"struct.net::CertificateTrust"* %289 to i64*
  %293 = load i64, i64* %291, align 8
  store i64 %293, i64* %292, align 8
  %294 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %273, %6
  br i1 %294, label %408, label %270

295:                                              ; preds = %265
  %296 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %268, i64 -1
  %297 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %267, i64 -1
  %298 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %267, i64 -1, i32 2
  %299 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %296, i64 0, i32 0, i32 0
  %300 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %299, align 8
  %301 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %300, i64 0, i32 6, i32 4
  %302 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %300, i64 0, i32 6, i32 5
  %303 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %268, i64 -1, i32 2
  %304 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %297, i64 0, i32 0, i32 0
  %305 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %304, align 8
  %306 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %305, i64 0, i32 6, i32 4
  %307 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %305, i64 0, i32 6, i32 5
  %308 = load i32, i32* %298, align 4
  %309 = load i32, i32* %303, align 4
  %310 = icmp slt i32 %308, %309
  br i1 %310, label %321, label %311

311:                                              ; preds = %295
  %312 = icmp slt i32 %309, %308
  br i1 %312, label %335, label %313

313:                                              ; preds = %311
  %314 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %301, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %306) #15
  br i1 %314, label %321, label %315

315:                                              ; preds = %313
  %316 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %306, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %301) #15
  br i1 %316, label %335, label %317

317:                                              ; preds = %315
  %318 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %302, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %307) #15
  br i1 %318, label %321, label %319

319:                                              ; preds = %317
  %320 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %307, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %302) #15
  br label %335

321:                                              ; preds = %317, %313, %295
  %322 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %266, i64 -1
  %323 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %296 to i64*
  %324 = load i64, i64* %323, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %299, align 8
  %325 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %322 to i64*
  %326 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %322, i64 0, i32 0, i32 0
  %327 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %326, align 8
  store i64 %324, i64* %325, align 8
  %328 = icmp eq %"class.net::ParsedCertificate"* %327, null
  br i1 %328, label %349, label %329

329:                                              ; preds = %321
  %330 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %327, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = atomicrmw sub i32* %330, i32 1 acq_rel
  %332 = icmp eq i32 %331, 1
  br i1 %332, label %333, label %349

333:                                              ; preds = %329
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %327) #15
  %334 = bitcast %"class.net::ParsedCertificate"* %327 to i8*
  tail call void @_ZdlPv(i8* %334) #17
  br label %349

335:                                              ; preds = %319, %315, %311
  %336 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %266, i64 -1
  %337 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %297 to i64*
  %338 = load i64, i64* %337, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %304, align 8
  %339 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %336 to i64*
  %340 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %336, i64 0, i32 0, i32 0
  %341 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %340, align 8
  store i64 %338, i64* %339, align 8
  %342 = icmp eq %"class.net::ParsedCertificate"* %341, null
  br i1 %342, label %349, label %343

343:                                              ; preds = %335
  %344 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %341, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = atomicrmw sub i32* %344, i32 1 acq_rel
  %346 = icmp eq i32 %345, 1
  br i1 %346, label %347, label %349

347:                                              ; preds = %343
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %341) #15
  %348 = bitcast %"class.net::ParsedCertificate"* %341 to i8*
  tail call void @_ZdlPv(i8* %348) #17
  br label %349

349:                                              ; preds = %335, %343, %347, %321, %329, %333
  %350 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %268, %333 ], [ %268, %329 ], [ %268, %321 ], [ %267, %347 ], [ %267, %343 ], [ %267, %335 ]
  %351 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %296, %333 ], [ %296, %329 ], [ %296, %321 ], [ %268, %347 ], [ %268, %343 ], [ %268, %335 ]
  %352 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %267, %333 ], [ %267, %329 ], [ %267, %321 ], [ %297, %347 ], [ %297, %343 ], [ %297, %335 ]
  %353 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %266, i64 -1, i32 1
  %354 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %350, i64 -1, i32 1
  %355 = bitcast %"struct.net::CertificateTrust"* %354 to i64*
  %356 = bitcast %"struct.net::CertificateTrust"* %353 to i64*
  %357 = load i64, i64* %355, align 8
  store i64 %357, i64* %356, align 8
  %358 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %266, i64 -1
  %359 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %352, %6
  br i1 %359, label %408, label %265

360:                                              ; preds = %102, %360
  %361 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %406, %360 ], [ %104, %102 ]
  %362 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %405, %360 ], [ %105, %102 ]
  %363 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 0, i32 0, i32 0
  %364 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %362 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %361 to i64*
  store i64 %365, i64* %366, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %363, align 8
  %367 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 0, i32 1
  %368 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 0, i32 1
  %369 = bitcast %"struct.net::CertificateTrust"* %368 to i64*
  %370 = bitcast %"struct.net::CertificateTrust"* %367 to i64*
  %371 = load i64, i64* %369, align 8
  store i64 %371, i64* %370, align 8
  %372 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 1
  %373 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 1
  %374 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %372, i64 0, i32 0, i32 0
  %375 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %372 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %373 to i64*
  store i64 %376, i64* %377, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %374, align 8
  %378 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 1, i32 1
  %379 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 1, i32 1
  %380 = bitcast %"struct.net::CertificateTrust"* %379 to i64*
  %381 = bitcast %"struct.net::CertificateTrust"* %378 to i64*
  %382 = load i64, i64* %380, align 8
  store i64 %382, i64* %381, align 8
  %383 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 2
  %384 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 2
  %385 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %383, i64 0, i32 0, i32 0
  %386 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %383 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %384 to i64*
  store i64 %387, i64* %388, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %385, align 8
  %389 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 2, i32 1
  %390 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 2, i32 1
  %391 = bitcast %"struct.net::CertificateTrust"* %390 to i64*
  %392 = bitcast %"struct.net::CertificateTrust"* %389 to i64*
  %393 = load i64, i64* %391, align 8
  store i64 %393, i64* %392, align 8
  %394 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 3
  %395 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 3
  %396 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %394, i64 0, i32 0, i32 0
  %397 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %394 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %395 to i64*
  store i64 %398, i64* %399, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %396, align 8
  %400 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 3, i32 1
  %401 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 3, i32 1
  %402 = bitcast %"struct.net::CertificateTrust"* %401 to i64*
  %403 = bitcast %"struct.net::CertificateTrust"* %400 to i64*
  %404 = load i64, i64* %402, align 8
  store i64 %404, i64* %403, align 8
  %405 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %362, i64 4
  %406 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %361, i64 4
  %407 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %405, %14
  br i1 %407, label %260, label %360

408:                                              ; preds = %207, %134, %349, %288, %260, %107
  %409 = phi i64 [ %111, %107 ], [ %263, %260 ], [ %263, %288 ], [ %263, %349 ], [ %111, %134 ], [ %111, %207 ]
  %410 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %6, null
  br i1 %410, label %712, label %411

411:                                              ; preds = %408, %423
  %412 = phi i64 [ %424, %423 ], [ 0, %408 ]
  %413 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %425, %423 ], [ %6, %408 ]
  %414 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %413, i64 0, i32 0, i32 0
  %415 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %414, align 8
  %416 = icmp eq %"class.net::ParsedCertificate"* %415, null
  br i1 %416, label %423, label %417

417:                                              ; preds = %411
  %418 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = atomicrmw sub i32* %418, i32 1 acq_rel
  %420 = icmp eq i32 %419, 1
  br i1 %420, label %421, label %423

421:                                              ; preds = %417
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %415) #15
  %422 = bitcast %"class.net::ParsedCertificate"* %415 to i8*
  tail call void @_ZdlPv(i8* %422) #17
  br label %423

423:                                              ; preds = %421, %417, %411
  %424 = add nuw nsw i64 %412, 1
  %425 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %413, i64 1
  %426 = icmp eq i64 %424, %409
  br i1 %426, label %712, label %411

427:                                              ; preds = %24, %452
  %428 = phi i64 [ %15, %24 ], [ %455, %452 ]
  %429 = phi i64 [ %18, %24 ], [ %454, %452 ]
  %430 = inttoptr i64 %429 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %431 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %430, i64 0, i32 0, i32 0
  %432 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %431, align 8
  %433 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %432, i64 0, i32 6, i32 4
  %434 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %432, i64 0, i32 6, i32 5
  %435 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %430, i64 0, i32 2
  %436 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %27, align 8
  %437 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %436, i64 0, i32 6, i32 4
  %438 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %436, i64 0, i32 6, i32 5
  %439 = load i32, i32* %26, align 4
  %440 = load i32, i32* %435, align 4
  %441 = icmp slt i32 %439, %440
  br i1 %441, label %457, label %442

442:                                              ; preds = %427
  %443 = icmp slt i32 %440, %439
  br i1 %443, label %452, label %444

444:                                              ; preds = %442
  %445 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %433, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %437) #15
  br i1 %445, label %457, label %446

446:                                              ; preds = %444
  %447 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %437, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %433) #15
  br i1 %447, label %452, label %448

448:                                              ; preds = %446
  %449 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %434, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %438) #15
  br i1 %449, label %457, label %450

450:                                              ; preds = %448
  %451 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %438, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %434) #15
  br label %452

452:                                              ; preds = %450, %446, %442
  %453 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %430, i64 1
  %454 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %453 to i64
  %455 = add nsw i64 %428, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %712, label %427

457:                                              ; preds = %427, %444, %448
  %458 = inttoptr i64 %429 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %459 = icmp slt i64 %428, %16
  br i1 %459, label %460, label %509

460:                                              ; preds = %457
  %461 = sdiv i64 %16, 2
  %462 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %25, i64 %461
  %463 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %462 to i64
  %464 = sub i64 %17, %429
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %504, label %466

466:                                              ; preds = %460
  %467 = ashr exact i64 %464, 4
  %468 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %25, i64 %461, i32 2
  %469 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %462, i64 0, i32 0, i32 0
  br label %470

470:                                              ; preds = %500, %466
  %471 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %458, %466 ], [ %502, %500 ]
  %472 = phi i64 [ %467, %466 ], [ %501, %500 ]
  %473 = lshr i64 %472, 1
  %474 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %471, i64 %473
  %475 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %474, i64 0, i32 0, i32 0
  %476 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %475, align 8
  %477 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %476, i64 0, i32 6, i32 4
  %478 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %476, i64 0, i32 6, i32 5
  %479 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %471, i64 %473, i32 2
  %480 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %469, align 8
  %481 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %480, i64 0, i32 6, i32 4
  %482 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %480, i64 0, i32 6, i32 5
  %483 = load i32, i32* %468, align 4
  %484 = load i32, i32* %479, align 4
  %485 = icmp slt i32 %483, %484
  br i1 %485, label %500, label %486

486:                                              ; preds = %470
  %487 = icmp slt i32 %484, %483
  br i1 %487, label %496, label %488

488:                                              ; preds = %486
  %489 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %477, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %481) #15
  br i1 %489, label %500, label %490

490:                                              ; preds = %488
  %491 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %481, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %477) #15
  br i1 %491, label %496, label %492

492:                                              ; preds = %490
  %493 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %478, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %482) #15
  br i1 %493, label %500, label %494

494:                                              ; preds = %492
  %495 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %482, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %478) #15
  br label %496

496:                                              ; preds = %494, %490, %486
  %497 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %474, i64 1
  %498 = xor i64 %473, -1
  %499 = add i64 %472, %498
  br label %500

500:                                              ; preds = %496, %492, %488, %470
  %501 = phi i64 [ %499, %496 ], [ %473, %470 ], [ %473, %488 ], [ %473, %492 ]
  %502 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %497, %496 ], [ %471, %470 ], [ %471, %488 ], [ %471, %492 ]
  %503 = icmp eq i64 %501, 0
  br i1 %503, label %504, label %470

504:                                              ; preds = %500, %460
  %505 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %458, %460 ], [ %502, %500 ]
  %506 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %505 to i64
  %507 = sub i64 %506, %429
  %508 = ashr exact i64 %507, 4
  br label %593

509:                                              ; preds = %457
  %510 = icmp eq i64 %428, 1
  br i1 %510, label %511, label %543

511:                                              ; preds = %509
  %512 = inttoptr i64 %17 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %513 = inttoptr i64 %429 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %514 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %513, i64 0, i32 0, i32 0
  %515 = inttoptr i64 %429 to i64*
  %516 = load i64, i64* %515, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %514, align 8
  %517 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %513, i64 0, i32 1
  %518 = bitcast %"struct.net::CertificateTrust"* %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = inttoptr i64 %17 to i64*
  %521 = load i64, i64* %520, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %27, align 8
  %522 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %514, align 8
  store i64 %521, i64* %515, align 8
  %523 = icmp eq %"class.net::ParsedCertificate"* %522, null
  br i1 %523, label %530, label %524

524:                                              ; preds = %511
  %525 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %522, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %526 = atomicrmw sub i32* %525, i32 1 acq_rel
  %527 = icmp eq i32 %526, 1
  br i1 %527, label %528, label %530

528:                                              ; preds = %524
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %522) #15
  %529 = bitcast %"class.net::ParsedCertificate"* %522 to i8*
  tail call void @_ZdlPv(i8* %529) #17
  br label %530

530:                                              ; preds = %511, %524, %528
  %531 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %512, i64 0, i32 1
  %532 = bitcast %"struct.net::CertificateTrust"* %531 to i64*
  %533 = load i64, i64* %532, align 8
  store i64 %533, i64* %518, align 8
  %534 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %27, align 8
  store i64 %516, i64* %520, align 8
  %535 = icmp eq %"class.net::ParsedCertificate"* %534, null
  br i1 %535, label %542, label %536

536:                                              ; preds = %530
  %537 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %534, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = atomicrmw sub i32* %537, i32 1 acq_rel
  %539 = icmp eq i32 %538, 1
  br i1 %539, label %540, label %542

540:                                              ; preds = %536
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %534) #15
  %541 = bitcast %"class.net::ParsedCertificate"* %534 to i8*
  tail call void @_ZdlPv(i8* %541) #17
  br label %542

542:                                              ; preds = %540, %536, %530
  store i64 %519, i64* %532, align 8
  br label %712

543:                                              ; preds = %509
  %544 = sdiv i64 %428, 2
  %545 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %458, i64 %544
  %546 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %545 to i64
  %547 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %14 to i64
  %548 = sub i64 %547, %17
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %588, label %550

550:                                              ; preds = %543
  %551 = ashr exact i64 %548, 4
  %552 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %545, i64 0, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %458, i64 %544, i32 2
  br label %554

554:                                              ; preds = %584, %550
  %555 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %25, %550 ], [ %586, %584 ]
  %556 = phi i64 [ %551, %550 ], [ %585, %584 ]
  %557 = lshr i64 %556, 1
  %558 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %555, i64 %557
  %559 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %555, i64 %557, i32 2
  %560 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %552, align 8
  %561 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %560, i64 0, i32 6, i32 4
  %562 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %560, i64 0, i32 6, i32 5
  %563 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %558, i64 0, i32 0, i32 0
  %564 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %563, align 8
  %565 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %564, i64 0, i32 6, i32 4
  %566 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %564, i64 0, i32 6, i32 5
  %567 = load i32, i32* %559, align 4
  %568 = load i32, i32* %553, align 4
  %569 = icmp slt i32 %567, %568
  br i1 %569, label %580, label %570

570:                                              ; preds = %554
  %571 = icmp slt i32 %568, %567
  br i1 %571, label %584, label %572

572:                                              ; preds = %570
  %573 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %561, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %565) #15
  br i1 %573, label %580, label %574

574:                                              ; preds = %572
  %575 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %565, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %561) #15
  br i1 %575, label %584, label %576

576:                                              ; preds = %574
  %577 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %562, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %566) #15
  br i1 %577, label %580, label %578

578:                                              ; preds = %576
  %579 = tail call zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8) %566, %"struct.net::der::GeneralizedTime"* dereferenceable(8) %562) #15
  br label %584

580:                                              ; preds = %576, %572, %554
  %581 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %558, i64 1
  %582 = xor i64 %557, -1
  %583 = add i64 %556, %582
  br label %584

584:                                              ; preds = %580, %578, %574, %570
  %585 = phi i64 [ %583, %580 ], [ %557, %570 ], [ %557, %574 ], [ %557, %578 ]
  %586 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %581, %580 ], [ %555, %570 ], [ %555, %574 ], [ %555, %578 ]
  %587 = icmp eq i64 %585, 0
  br i1 %587, label %588, label %554

588:                                              ; preds = %584, %543
  %589 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %25, %543 ], [ %586, %584 ]
  %590 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %589 to i64
  %591 = sub i64 %590, %17
  %592 = ashr exact i64 %591, 4
  br label %593

593:                                              ; preds = %588, %504
  %594 = phi i64 [ %506, %504 ], [ %546, %588 ]
  %595 = phi i64 [ %463, %504 ], [ %590, %588 ]
  %596 = phi i64 [ %461, %504 ], [ %592, %588 ]
  %597 = phi i64 [ %508, %504 ], [ %544, %588 ]
  %598 = sub nsw i64 %428, %597
  %599 = sub nsw i64 %16, %596
  %600 = inttoptr i64 %594 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %601 = inttoptr i64 %595 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %602 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %600, %25
  br i1 %602, label %697, label %603

603:                                              ; preds = %593
  %604 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %25, %601
  br i1 %604, label %697, label %605

605:                                              ; preds = %603, %643
  %606 = phi i64 [ %646, %643 ], [ %17, %603 ]
  %607 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %639, %643 ], [ %600, %603 ]
  %608 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %640, %643 ], [ %25, %603 ]
  %609 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %607, i64 0, i32 0, i32 0
  %610 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %607 to i64*
  %611 = load i64, i64* %610, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %609, align 8
  %612 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %607, i64 0, i32 1
  %613 = bitcast %"struct.net::CertificateTrust"* %612 to i64*
  %614 = load i64, i64* %613, align 8
  %615 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %608, i64 0, i32 0, i32 0
  %616 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %608 to i64*
  %617 = load i64, i64* %616, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %615, align 8
  %618 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %609, align 8
  store i64 %617, i64* %610, align 8
  %619 = icmp eq %"class.net::ParsedCertificate"* %618, null
  br i1 %619, label %626, label %620

620:                                              ; preds = %605
  %621 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %618, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = atomicrmw sub i32* %621, i32 1 acq_rel
  %623 = icmp eq i32 %622, 1
  br i1 %623, label %624, label %626

624:                                              ; preds = %620
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %618) #15
  %625 = bitcast %"class.net::ParsedCertificate"* %618 to i8*
  tail call void @_ZdlPv(i8* %625) #17
  br label %626

626:                                              ; preds = %624, %620, %605
  %627 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %608, i64 0, i32 1
  %628 = bitcast %"struct.net::CertificateTrust"* %627 to i64*
  %629 = load i64, i64* %628, align 8
  store i64 %629, i64* %613, align 8
  %630 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %615, align 8
  store i64 %611, i64* %616, align 8
  %631 = icmp eq %"class.net::ParsedCertificate"* %630, null
  br i1 %631, label %638, label %632

632:                                              ; preds = %626
  %633 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %630, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %634 = atomicrmw sub i32* %633, i32 1 acq_rel
  %635 = icmp eq i32 %634, 1
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %630) #15
  %637 = bitcast %"class.net::ParsedCertificate"* %630 to i8*
  tail call void @_ZdlPv(i8* %637) #17
  br label %638

638:                                              ; preds = %636, %632, %626
  store i64 %614, i64* %628, align 8
  %639 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %607, i64 1
  %640 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %608, i64 1
  %641 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %640, %601
  %642 = inttoptr i64 %606 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br i1 %641, label %647, label %643

643:                                              ; preds = %638
  %644 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %640 to i64
  %645 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %639, %642
  %646 = select i1 %645, i64 %644, i64 %606
  br label %605

647:                                              ; preds = %638
  %648 = inttoptr i64 %606 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %649 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %639, %648
  br i1 %649, label %697, label %650

650:                                              ; preds = %647, %694
  %651 = phi i64 [ %696, %694 ], [ %606, %647 ]
  %652 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %689, %694 ], [ %639, %647 ]
  %653 = phi i64 [ %695, %694 ], [ %606, %647 ]
  %654 = inttoptr i64 %651 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  br label %655

655:                                              ; preds = %650, %693
  %656 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %689, %693 ], [ %652, %650 ]
  %657 = phi i64 [ %651, %693 ], [ %653, %650 ]
  %658 = inttoptr i64 %657 to %"struct.net::(anonymous namespace)::IssuerEntry"*
  %659 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %656, i64 0, i32 0, i32 0
  %660 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %656 to i64*
  %661 = load i64, i64* %660, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %659, align 8
  %662 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %656, i64 0, i32 1
  %663 = bitcast %"struct.net::CertificateTrust"* %662 to i64*
  %664 = load i64, i64* %663, align 8
  %665 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %658, i64 0, i32 0, i32 0
  %666 = inttoptr i64 %657 to i64*
  %667 = load i64, i64* %666, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %665, align 8
  %668 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %659, align 8
  store i64 %667, i64* %660, align 8
  %669 = icmp eq %"class.net::ParsedCertificate"* %668, null
  br i1 %669, label %676, label %670

670:                                              ; preds = %655
  %671 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %668, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %672 = atomicrmw sub i32* %671, i32 1 acq_rel
  %673 = icmp eq i32 %672, 1
  br i1 %673, label %674, label %676

674:                                              ; preds = %670
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %668) #15
  %675 = bitcast %"class.net::ParsedCertificate"* %668 to i8*
  tail call void @_ZdlPv(i8* %675) #17
  br label %676

676:                                              ; preds = %674, %670, %655
  %677 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %658, i64 0, i32 1
  %678 = bitcast %"struct.net::CertificateTrust"* %677 to i64*
  %679 = load i64, i64* %678, align 8
  store i64 %679, i64* %663, align 8
  %680 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %665, align 8
  store i64 %661, i64* %666, align 8
  %681 = icmp eq %"class.net::ParsedCertificate"* %680, null
  br i1 %681, label %688, label %682

682:                                              ; preds = %676
  %683 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %680, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = atomicrmw sub i32* %683, i32 1 acq_rel
  %685 = icmp eq i32 %684, 1
  br i1 %685, label %686, label %688

686:                                              ; preds = %682
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %680) #15
  %687 = bitcast %"class.net::ParsedCertificate"* %680 to i8*
  tail call void @_ZdlPv(i8* %687) #17
  br label %688

688:                                              ; preds = %686, %682, %676
  store i64 %664, i64* %678, align 8
  %689 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %656, i64 1
  %690 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %658, i64 1
  %691 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %690, %601
  %692 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %689, %654
  br i1 %691, label %693, label %694

693:                                              ; preds = %688
  br i1 %692, label %697, label %655

694:                                              ; preds = %688
  %695 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %690 to i64
  %696 = select i1 %692, i64 %695, i64 %651
  br label %650

697:                                              ; preds = %693, %593, %603, %647
  %698 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %600, %603 ], [ %601, %593 ], [ %639, %647 ], [ %639, %693 ]
  %699 = add nsw i64 %597, %596
  %700 = add nsw i64 %598, %599
  %701 = icmp slt i64 %699, %700
  br i1 %701, label %702, label %704

702:                                              ; preds = %697
  %703 = ptrtoint %"struct.net::(anonymous namespace)::IssuerEntry"* %698 to i64
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %458, %"struct.net::(anonymous namespace)::IssuerEntry"* %600, %"struct.net::(anonymous namespace)::IssuerEntry"* %698, %class.anon.213* dereferenceable(1) %3, i64 %597, i64 %596, %"struct.net::(anonymous namespace)::IssuerEntry"* %6, i64 %7)
  br label %705

704:                                              ; preds = %697
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net12_GLOBAL__N_115CertIssuersIter20SortRemainingIssuersEvE3$_0NS_11__wrap_iterIPNS2_11IssuerEntryEEEEEvT0_SA_SA_T_NS_15iterator_traitsISA_E15difference_typeESE_PNSD_10value_typeEl"(%"struct.net::(anonymous namespace)::IssuerEntry"* %698, %"struct.net::(anonymous namespace)::IssuerEntry"* %601, %"struct.net::(anonymous namespace)::IssuerEntry"* %14, %class.anon.213* dereferenceable(1) %3, i64 %598, i64 %599, %"struct.net::(anonymous namespace)::IssuerEntry"* %6, i64 %7)
  br label %705

705:                                              ; preds = %702, %704
  %706 = phi i64 [ %703, %702 ], [ %429, %704 ]
  %707 = phi i64 [ %595, %702 ], [ %594, %704 ]
  %708 = phi i64 [ %599, %702 ], [ %596, %704 ]
  %709 = phi i64 [ %598, %702 ], [ %597, %704 ]
  %710 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %14, %702 ], [ %698, %704 ]
  %711 = icmp eq i64 %708, 0
  br i1 %711, label %712, label %13

712:                                              ; preds = %705, %22, %452, %423, %8, %542, %408, %70, %32
  ret void
}

declare zeroext i1 @_ZN3net3derltERKNS0_15GeneralizedTimeES3_(%"struct.net::der::GeneralizedTime"* dereferenceable(8), %"struct.net::der::GeneralizedTime"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree.169"*, %"class.std::__1::tuple.230"* dereferenceable(48)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %4 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %5 = getelementptr inbounds %"class.std::__1::__tree.169", %"class.std::__1::__tree.169"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %87, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %3, i64 0, i32 0
  br label %13

13:                                               ; preds = %9, %50
  %14 = phi %"class.std::__1::__tree_end_node"* [ %52, %50 ], [ %5, %9 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %53, %50 ], [ %7, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = load i64, i64* %11, align 8
  %23 = icmp ugt i64 %20, %22
  %24 = select i1 %23, i64 %22, i64 %20
  %25 = call i32 @memcmp(i8* %18, i8* %21, i64 %24) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %13
  %28 = icmp ult i64 %20, %22
  br i1 %28, label %40, label %31

29:                                               ; preds = %13
  %30 = icmp slt i32 %25, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %29, %27
  %32 = call i32 @memcmp(i8* %21, i8* %18, i64 %24) #15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = icmp eq i64 %22, %20
  %36 = xor i1 %23, true
  %37 = or i1 %35, %36
  br i1 %37, label %43, label %47

38:                                               ; preds = %31
  %39 = icmp slt i32 %32, 0
  br i1 %39, label %47, label %43

40:                                               ; preds = %29, %27
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  br label %50

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %44 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %3, %"class.std::__1::tuple.230"* dereferenceable(48) %16, %"class.std::__1::tuple.230"* dereferenceable(48) %1) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node"**
  br i1 %44, label %50, label %47

47:                                               ; preds = %34, %38, %43
  %48 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %43, %40, %47
  %51 = phi %"class.std::__1::__tree_node"** [ %48, %47 ], [ %42, %40 ], [ %46, %43 ]
  %52 = phi %"class.std::__1::__tree_end_node"* [ %49, %47 ], [ %14, %40 ], [ %14, %43 ]
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %13

55:                                               ; preds = %50
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %52, %5
  br i1 %56, label %87, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 4
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::tuple.230"*
  %60 = load i8*, i8** %10, align 8
  %61 = load i64, i64* %11, align 8
  %62 = bitcast %"class.std::__1::__tree_end_node"* %58 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp ugt i64 %61, %66
  %68 = select i1 %67, i64 %66, i64 %61
  %69 = call i32 @memcmp(i8* %60, i8* %63, i64 %68) #15
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %57
  %72 = icmp ult i64 %61, %66
  br i1 %72, label %87, label %75

73:                                               ; preds = %57
  %74 = icmp slt i32 %69, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %73, %71
  %76 = call i32 @memcmp(i8* %63, i8* %60, i64 %68) #15
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = icmp eq i64 %66, %61
  %80 = xor i1 %67, true
  %81 = or i1 %79, %80
  br i1 %81, label %84, label %88

82:                                               ; preds = %75
  %83 = icmp slt i32 %76, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %78, %82
  %85 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #15
  %86 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %4, %"class.std::__1::tuple.230"* dereferenceable(48) %1, %"class.std::__1::tuple.230"* dereferenceable(48) %59) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #15
  br i1 %86, label %87, label %88

87:                                               ; preds = %55, %71, %73, %2, %84
  br label %88

88:                                               ; preds = %78, %82, %84, %87
  %89 = phi %"class.std::__1::__tree_end_node"* [ %5, %87 ], [ %52, %84 ], [ %52, %82 ], [ %52, %78 ]
  ret %"class.std::__1::__tree_end_node"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"*, %"class.std::__1::tuple.230"* dereferenceable(48), %"class.std::__1::tuple.230"* dereferenceable(48)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %7, %11
  %13 = select i1 %12, i64 %11, i64 %7
  %14 = tail call i32 @memcmp(i8* %5, i8* %9, i64 %13) #15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = icmp ult i64 %7, %11
  br i1 %17, label %47, label %20

18:                                               ; preds = %3
  %19 = icmp slt i32 %14, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %16, %18
  %21 = tail call i32 @memcmp(i8* %9, i8* %5, i64 %13) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = icmp eq i64 %11, %7
  %25 = xor i1 %12, true
  %26 = or i1 %24, %25
  br i1 %26, label %29, label %47

27:                                               ; preds = %20
  %28 = icmp slt i32 %21, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %23, %27
  %30 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %33, %37
  %39 = select i1 %38, i64 %37, i64 %33
  %40 = tail call i32 @memcmp(i8* %31, i8* %35, i64 %39) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %29
  %43 = icmp ult i64 %33, %37
  br i1 %43, label %46, label %47

44:                                               ; preds = %29
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %44, %42
  br label %47

47:                                               ; preds = %23, %16, %46, %44, %42, %27, %18
  %48 = phi i1 [ true, %18 ], [ false, %27 ], [ false, %42 ], [ false, %44 ], [ true, %46 ], [ true, %16 ], [ false, %23 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_115CertIssuersIterENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.100"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::(anonymous namespace)::CertIssuersIter"*, %"class.net::(anonymous namespace)::CertIssuersIter"** %2, align 8
  store %"class.net::(anonymous namespace)::CertIssuersIter"* null, %"class.net::(anonymous namespace)::CertIssuersIter"** %2, align 8
  %4 = icmp eq %"class.net::(anonymous namespace)::CertIssuersIter"* %3, null
  br i1 %4, label %90, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 11
  %7 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.138"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.138"* %8 to i8*
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 11, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.138"*, %"class.std::__1::unique_ptr.138"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.138"* %13, %8
  br i1 %14, label %31, label %15

15:                                               ; preds = %10, %26
  %16 = phi %"class.std::__1::unique_ptr.138"* [ %17, %26 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %18, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %18, align 8
  %20 = icmp eq %"class.net::CertIssuerSource::Request"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.net::CertIssuerSource::Request"* %19 to void (%"class.net::CertIssuerSource::Request"*)***
  %23 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %23, i64 1
  %25 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %24, align 8
  tail call void %25(%"class.net::CertIssuerSource::Request"* nonnull %19) #15
  br label %26

26:                                               ; preds = %21, %15
  %27 = icmp eq %"class.std::__1::unique_ptr.138"* %17, %8
  br i1 %27, label %28, label %15

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector.136"* %6 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %10
  %32 = phi i8* [ %30, %28 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.138"* %8, %"class.std::__1::unique_ptr.138"** %12, align 8
  tail call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %31, %5
  %34 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33, %37
  %38 = phi %"struct.std::__1::__hash_node_base"* [ %40, %37 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #17
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %42, label %43, label %37

43:                                               ; preds = %37, %33
  %44 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %44, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"** %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = bitcast %"struct.std::__1::__hash_node_base"** %45 to i8*
  tail call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 3
  %51 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %50, i64 0, i32 0, i32 0
  %52 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %51, align 8
  %53 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %52, null
  br i1 %53, label %78, label %54

54:                                               ; preds = %49
  %55 = bitcast %"struct.net::(anonymous namespace)::IssuerEntry"* %52 to i8*
  %56 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 3, i32 0, i32 1
  %57 = load %"struct.net::(anonymous namespace)::IssuerEntry"*, %"struct.net::(anonymous namespace)::IssuerEntry"** %56, align 8
  %58 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %57, %52
  br i1 %58, label %76, label %59

59:                                               ; preds = %54, %71
  %60 = phi %"struct.net::(anonymous namespace)::IssuerEntry"* [ %61, %71 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.net::(anonymous namespace)::IssuerEntry", %"struct.net::(anonymous namespace)::IssuerEntry"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %62, align 8
  %64 = icmp eq %"class.net::ParsedCertificate"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %63) #15
  %70 = bitcast %"class.net::ParsedCertificate"* %63 to i8*
  tail call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %69, %65, %59
  %72 = icmp eq %"struct.net::(anonymous namespace)::IssuerEntry"* %61, %52
  br i1 %72, label %73, label %59

73:                                               ; preds = %71
  %74 = bitcast %"class.std::__1::vector.110"* %50 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %54
  %77 = phi i8* [ %75, %73 ], [ %55, %54 ]
  store %"struct.net::(anonymous namespace)::IssuerEntry"* %52, %"struct.net::(anonymous namespace)::IssuerEntry"** %56, align 8
  tail call void @_ZdlPv(i8* %77) #17
  br label %78

78:                                               ; preds = %76, %49
  %79 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuersIter", %"class.net::(anonymous namespace)::CertIssuersIter"* %3, i64 0, i32 0, i32 0
  %80 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %79, align 8
  %81 = icmp eq %"class.net::ParsedCertificate"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw sub i32* %83, i32 1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %80) #15
  %87 = bitcast %"class.net::ParsedCertificate"* %80 to i8*
  tail call void @_ZdlPv(i8* %87) #17
  br label %88

88:                                               ; preds = %86, %82, %78
  %89 = bitcast %"class.net::(anonymous namespace)::CertIssuersIter"* %3 to i8*
  tail call void @_ZdlPv(i8* %89) #17
  br label %90

90:                                               ; preds = %1, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE4findIS7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEERKT_(%"class.std::__1::__tree.169"*, %"class.std::__1::tuple.230"* dereferenceable(48)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %4 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %5 = getelementptr inbounds %"class.std::__1::__tree.169", %"class.std::__1::__tree.169"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %87, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %3, i64 0, i32 0
  br label %13

13:                                               ; preds = %9, %50
  %14 = phi %"class.std::__1::__tree_end_node"* [ %52, %50 ], [ %5, %9 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %53, %50 ], [ %7, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = load i64, i64* %11, align 8
  %23 = icmp ugt i64 %20, %22
  %24 = select i1 %23, i64 %22, i64 %20
  %25 = call i32 @memcmp(i8* %18, i8* %21, i64 %24) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %13
  %28 = icmp ult i64 %20, %22
  br i1 %28, label %40, label %31

29:                                               ; preds = %13
  %30 = icmp slt i32 %25, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %29, %27
  %32 = call i32 @memcmp(i8* %21, i8* %18, i64 %24) #15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = icmp eq i64 %22, %20
  %36 = xor i1 %23, true
  %37 = or i1 %35, %36
  br i1 %37, label %43, label %47

38:                                               ; preds = %31
  %39 = icmp slt i32 %32, 0
  br i1 %39, label %47, label %43

40:                                               ; preds = %29, %27
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  br label %50

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  %44 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %3, %"class.std::__1::tuple.230"* dereferenceable(48) %16, %"class.std::__1::tuple.230"* dereferenceable(48) %1) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node"**
  br i1 %44, label %50, label %47

47:                                               ; preds = %34, %38, %43
  %48 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %43, %40, %47
  %51 = phi %"class.std::__1::__tree_node"** [ %48, %47 ], [ %42, %40 ], [ %46, %43 ]
  %52 = phi %"class.std::__1::__tree_end_node"* [ %49, %47 ], [ %14, %40 ], [ %14, %43 ]
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %13

55:                                               ; preds = %50
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %52, %5
  br i1 %56, label %87, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 4
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::tuple.230"*
  %60 = load i8*, i8** %10, align 8
  %61 = load i64, i64* %11, align 8
  %62 = bitcast %"class.std::__1::__tree_end_node"* %58 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp ugt i64 %61, %66
  %68 = select i1 %67, i64 %66, i64 %61
  %69 = call i32 @memcmp(i8* %60, i8* %63, i64 %68) #15
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %57
  %72 = icmp ult i64 %61, %66
  br i1 %72, label %87, label %75

73:                                               ; preds = %57
  %74 = icmp slt i32 %69, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %73, %71
  %76 = call i32 @memcmp(i8* %63, i8* %60, i64 %68) #15
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = icmp eq i64 %66, %61
  %80 = xor i1 %67, true
  %81 = or i1 %79, %80
  br i1 %81, label %84, label %88

82:                                               ; preds = %75
  %83 = icmp slt i32 %76, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %78, %82
  %85 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #15
  %86 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %4, %"class.std::__1::tuple.230"* dereferenceable(48) %1, %"class.std::__1::tuple.230"* dereferenceable(48) %59) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #15
  br i1 %86, label %87, label %88

87:                                               ; preds = %55, %71, %73, %2, %84
  br label %88

88:                                               ; preds = %78, %82, %84, %87
  %89 = phi %"class.std::__1::__tree_end_node"* [ %5, %87 ], [ %52, %84 ], [ %52, %82 ], [ %52, %78 ]
  ret %"class.std::__1::__tree_end_node"* %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISH_EERKT_(%"class.std::__1::__tree.169"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::tuple.230"* dereferenceable(48)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %5 = alloca %"struct.std::__1::__tuple_less.224", align 1
  %6 = getelementptr inbounds %"class.std::__1::__tree.169", %"class.std::__1::__tree.169"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %92, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::__tree.169", %"class.std::__1::__tree.169"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::__tuple_less.224", %"struct.std::__1::__tuple_less.224"* %5, i64 0, i32 0
  br label %16

16:                                               ; preds = %10, %88
  %17 = phi %"class.std::__1::__tree_node"* [ %91, %88 ], [ %8, %10 ]
  %18 = phi %"class.std::__1::__tree_node_base"** [ %90, %88 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %20 = load i8*, i8** %12, align 8
  %21 = load i64, i64* %13, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %21, %25
  %27 = select i1 %26, i64 %25, i64 %21
  %28 = call i32 @memcmp(i8* %20, i8* %23, i64 %27) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %16
  %31 = icmp ult i64 %21, %25
  br i1 %31, label %50, label %34

32:                                               ; preds = %16
  %33 = icmp slt i32 %28, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %32, %30
  %35 = call i32 @memcmp(i8* %23, i8* %20, i64 %27) #15
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = icmp eq i64 %25, %21
  %39 = xor i1 %26, true
  %40 = or i1 %38, %39
  br i1 %40, label %43, label %56

41:                                               ; preds = %34
  %42 = icmp slt i32 %35, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %37, %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #15
  %44 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %4, %"class.std::__1::tuple.230"* dereferenceable(48) %2, %"class.std::__1::tuple.230"* dereferenceable(48) %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #15
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = load i8*, i8** %22, align 8
  %47 = load i64, i64* %24, align 8
  %48 = load i8*, i8** %12, align 8
  %49 = load i64, i64* %13, align 8
  br label %56

50:                                               ; preds = %30, %32, %43
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %88

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %94

56:                                               ; preds = %45, %37, %41
  %57 = phi i64 [ %49, %45 ], [ %21, %37 ], [ %21, %41 ]
  %58 = phi i8* [ %48, %45 ], [ %20, %37 ], [ %20, %41 ]
  %59 = phi i64 [ %47, %45 ], [ %25, %37 ], [ %25, %41 ]
  %60 = phi i8* [ %46, %45 ], [ %23, %37 ], [ %23, %41 ]
  %61 = icmp ugt i64 %59, %57
  %62 = select i1 %61, i64 %57, i64 %59
  %63 = call i32 @memcmp(i8* %60, i8* %58, i64 %62) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %56
  %66 = icmp ult i64 %59, %57
  br i1 %66, label %80, label %69

67:                                               ; preds = %56
  %68 = icmp slt i32 %63, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %67, %65
  %70 = call i32 @memcmp(i8* %58, i8* %60, i64 %62) #15
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = icmp eq i64 %57, %59
  %74 = xor i1 %61, true
  %75 = or i1 %73, %74
  br i1 %75, label %78, label %86

76:                                               ; preds = %69
  %77 = icmp slt i32 %70, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %72, %76
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #15
  %79 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES8_S8_EEES9_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.224"* nonnull %5, %"class.std::__1::tuple.230"* dereferenceable(48) %19, %"class.std::__1::tuple.230"* dereferenceable(48) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #15
  br i1 %79, label %80, label %86

80:                                               ; preds = %65, %67, %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %85, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %94

86:                                               ; preds = %72, %76, %78
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %94

88:                                               ; preds = %80, %50
  %89 = phi %"class.std::__1::__tree_node_base"* [ %52, %50 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node_base"* %89 to %"class.std::__1::__tree_node"*
  br label %16

92:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %1, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %94

94:                                               ; preds = %92, %86, %84, %54
  %95 = phi %"class.std::__1::__tree_node_base"** [ %51, %54 ], [ %81, %84 ], [ %18, %86 ], [ %93, %92 ]
  ret %"class.std::__1::__tree_node_base"** %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"*, i32) local_unnamed_addr #3

declare void @_ZN4base23UmaHistogramCounts10000EPKci(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3net17ParsedCertificateEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.58"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %40, align 8
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %45 = ptrtoint %class.scoped_refptr* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %46, align 8
  %48 = ptrtoint %class.scoped_refptr* %47 to i64
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %50 = icmp eq %class.scoped_refptr* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.net::ParsedCertificate"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.scoped_refptr* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.scoped_refptr* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -1
  %64 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %61, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !33

71:                                               ; preds = %59, %51
  %72 = phi %class.scoped_refptr* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.scoped_refptr* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.scoped_refptr* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.scoped_refptr* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.scoped_refptr* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -1
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -2
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -2
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -3
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -3
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -4
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -4
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -5
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -5
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %105, align 8
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -6
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -6
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %class.scoped_refptr* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %111, align 8
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -7
  %116 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -7
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %117, align 8
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -8
  %122 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -8
  %123 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %122, i64 0, i32 0
  %124 = bitcast %class.scoped_refptr* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %class.scoped_refptr* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.net::ParsedCertificate"* null, %"class.net::ParsedCertificate"** %123, align 8
  %127 = icmp eq %class.scoped_refptr* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.scoped_refptr* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.scoped_refptr* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.scoped_refptr* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.scoped_refptr* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.scoped_refptr*
  %138 = icmp eq %class.scoped_refptr* %133, %137
  br i1 %138, label %153, label %139

139:                                              ; preds = %132, %151
  %140 = phi %class.scoped_refptr* [ %141, %151 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %140, i64 -1
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %141, i64 0, i32 0
  %143 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %142, align 8
  %144 = icmp eq %"class.net::ParsedCertificate"* %143, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw sub i32* %146, i32 1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %151

149:                                              ; preds = %145
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %143) #15
  %150 = bitcast %"class.net::ParsedCertificate"* %143 to i8*
  tail call void @_ZdlPv(i8* %150) #17
  br label %151

151:                                              ; preds = %149, %145, %139
  %152 = icmp eq %class.scoped_refptr* %141, %137
  br i1 %152, label %153, label %139

153:                                              ; preds = %151, %132
  %154 = icmp eq i64 %135, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %156) #17
  br label %157

157:                                              ; preds = %153, %155
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.65"*, %"class.std::__1::__tree_node.254"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.254"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.254"* %1 to %"class.std::__1::__tree_node.254"**
  %6 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.65"* %0, %"class.std::__1::__tree_node.254"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.254", %"class.std::__1::__tree_node.254"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.254"**
  %9 = load %"class.std::__1::__tree_node.254"*, %"class.std::__1::__tree_node.254"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.65"* %0, %"class.std::__1::__tree_node.254"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node.254"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN3net12CertPathIterEEclEPS2_(%"struct.std::__1::default_delete.195"*, %"class.net::CertPathIter"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.net::CertPathIter"* %1, null
  br i1 %3, label %48, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.net::CertIssuerSource"**, %"class.net::CertIssuerSource"*** %5, align 8
  %7 = icmp eq %"class.net::CertIssuerSource"** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = ptrtoint %"class.net::CertIssuerSource"** %6 to i64
  %10 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"class.net::CertIssuerSource"*** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.net::CertIssuerSource"** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  br label %13

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 1, i32 1, i32 0
  %16 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.169"* %15, %"class.std::__1::__tree_node"* %18) #15
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::CertIssuerIterPath", %"class.net::(anonymous namespace)::CertIssuerIterPath"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.100"* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %13
  %23 = bitcast %"class.std::__1::unique_ptr.100"* %20 to i8*
  %24 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.100"*, %"class.std::__1::unique_ptr.100"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.100"* %25, %20
  br i1 %26, label %34, label %27

27:                                               ; preds = %22, %27
  %28 = phi %"class.std::__1::unique_ptr.100"* [ %29, %27 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %28, i64 -1
  tail call fastcc void @_ZNSt3__110unique_ptrIN3net12_GLOBAL__N_115CertIssuersIterENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr.100"* %29) #15
  %30 = icmp eq %"class.std::__1::unique_ptr.100"* %29, %20
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  %32 = bitcast %"class.net::(anonymous namespace)::CertIssuerIterPath"* %14 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %22
  %35 = phi i8* [ %33, %31 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.100"* %20, %"class.std::__1::unique_ptr.100"** %24, align 8
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %34, %13
  %37 = getelementptr inbounds %"class.net::CertPathIter", %"class.net::CertPathIter"* %1, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %37, align 8
  %39 = icmp eq %"class.net::ParsedCertificate"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  tail call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %38) #15
  %45 = bitcast %"class.net::ParsedCertificate"* %38 to i8*
  tail call void @_ZdlPv(i8* %45) #17
  br label %46

46:                                               ; preds = %36, %40, %44
  %47 = bitcast %"class.net::CertPathIter"* %1 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %46, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.169"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.169"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.169"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net25CertPathBuilderResultPathENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.178"*, %"class.std::__1::unique_ptr.180"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.180"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.178"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.178"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.180"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.180"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.180"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.180"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.180"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.180"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.180"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.178", %"class.std::__1::vector.178"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.180"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.180"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.net::CertPathBuilderResultPath"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.180"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.180"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.180"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.180"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !34

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.180"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.180"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.180"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.180"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.180"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.180"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.180"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.180"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.180"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.180"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.180"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.180"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.180"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.180"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.180"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.180"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.180"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.180"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.180"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.180"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.180"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.180"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.180"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.180"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.180"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.180"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.180"*
  %138 = icmp eq %"class.std::__1::unique_ptr.180"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.180"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %142, align 8
  store %"struct.net::CertPathBuilderResultPath"* null, %"struct.net::CertPathBuilderResultPath"** %142, align 8
  %144 = icmp eq %"struct.net::CertPathBuilderResultPath"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3net25CertPathBuilderResultPathD2Ev(%"struct.net::CertPathBuilderResultPath"* nonnull %143) #15
  %146 = bitcast %"struct.net::CertPathBuilderResultPath"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #17
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.180"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE: argument 0"}
!5 = distinct !{!5, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE: argument 0"}
!8 = distinct !{!8, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE: argument 0"}
!11 = distinct !{!11, !"_ZN3net12_GLOBAL__N_118CertIssuerIterPath6GetKeyEPKNS_17ParsedCertificateE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE16__construct_nodeIJS7_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSA_ISH_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_5tupleIJN4base16BasicStringPieceIcNS_11char_traitsIcEEEES6_S6_EEENS_4lessIS7_EENS_9allocatorIS7_EEE16__construct_nodeIJS7_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSA_ISH_EEEEEEDpOT_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!20 = distinct !{!20, !16}
!21 = distinct !{!21, !16}
!22 = !{i64 0, i64 65}
!23 = distinct !{!23, !16}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__112__hash_tableIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS1_19StringPieceHashImplIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_"}
!27 = distinct !{!27, !16}
!28 = distinct !{!28, !16}
!29 = distinct !{!29, !16}
!30 = distinct !{!30, !16}
!31 = distinct !{!31, !16}
!32 = distinct !{!32, !16}
!33 = distinct !{!33, !16}
!34 = distinct !{!34, !16}
