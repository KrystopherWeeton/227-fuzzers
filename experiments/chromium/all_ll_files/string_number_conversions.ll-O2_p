; ModuleID = '../../base/strings/string_number_conversions.cc'
source_filename = "../../base/strings/string_number_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::NoDestructor" = type { [48 x i8] }
%"class.base::NoDestructor.35" = type { [48 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.double_conversion::StringBuilder" = type { %"class.double_conversion::Vector", i32, [4 x i8] }
%"class.double_conversion::Vector" = type <{ i8*, i32, [4 x i8] }>
%"class.double_conversion::DoubleToStringConverter" = type { i32, i8*, i8*, i8, i32, i32, i32, i32, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.double_conversion::StringToDoubleConverter" = type <{ i32, [4 x i8], double, double, i8*, i8*, i16, [6 x i8] }>
%"class.base::BasicStringPiece.10" = type { i16*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector"* }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_d = comdat any

$_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEET_d = comdat any

$_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjcEEbT_RT0_ = comdat any

$_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEjDsEEbT_RT0_ = comdat any

$_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEmDsEEbT_RT0_ = comdat any

$_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_Rd = comdat any

$_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_Rd = comdat any

$_ZN4base25CheckedContiguousIteratorIhEC2EPKhPhS3_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_ = comdat any

$_ZN4base8internal14StringToNumberIiLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE = comdat any

$_ZN4base8internal14StringToNumberIiLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE = comdat any

$_ZN4base8internal14StringToNumberIlLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE = comdat any

$_ZN4base8internal14StringToNumberIlLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE = comdat any

$_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8NegativeEE6InvokeIPKcEENS2_6ResultET_SA_ = comdat any

$_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_ = comdat any

$_ZN4base8internal20StringToNumberParserIjLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_ = comdat any

$_ZN4base8internal14StringToNumberIlLi16EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSEOh = comdat any

$_ZNK4base25CheckedContiguousIteratorIhEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIhEppEv = comdat any

$_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter = comdat any

$_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter = comdat any

$_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter = comdat any

$_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter = comdat any

@_ZZN4base9HexEncodeEPKvmE9kHexChars = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@.str = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter = internal global i64 0, align 8
@_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter = linkonce_odr hidden global %"class.base::NoDestructor.35" zeroinitializer, comdat, align 8
@_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter = linkonce_odr hidden global %"class.base::NoDestructor.35" zeroinitializer, comdat, align 8
@_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter = linkonce_odr hidden global i64 0, comdat, align 8
@.str.6 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca [13 x i8], align 1
  %4 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %4) #13, !noalias !2
  %5 = icmp slt i32 %1, 0
  %6 = sub i32 0, %1
  %7 = select i1 %5, i32 %6, i32 %1
  %8 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i64 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 13, i1 false) #13, !noalias !2
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i32 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  %14 = urem i32 %10, 10
  %15 = trunc i32 %14 to i8
  %16 = or i8 %15, 48
  store i8 %16, i8* %13, align 1, !noalias !2
  %17 = udiv i32 %10, 10
  %18 = icmp ugt i32 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i8, i8* %8, i64 %21
  store i8 45, i8* %22, align 1, !noalias !2
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = sub i64 0, %24
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = trunc i64 %25 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1, !alias.scope !2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %44

36:                                               ; preds = %29
  %37 = sub i64 16, %24
  %38 = and i64 %37, -16
  %39 = tail call i8* @_Znwm(i64 %38) #15
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8, !alias.scope !2
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8, !alias.scope !2
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8, !alias.scope !2
  br label %44

44:                                               ; preds = %36, %31
  %45 = phi i8* [ %35, %31 ], [ %39, %36 ]
  %46 = icmp eq i64 %24, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr [13 x i8], [13 x i8]* %3, i64 1, i64 %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %48, i64 %25, i1 false) #13
  %49 = getelementptr i8, i8* %45, i64 %25
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i8* [ %45, %44 ], [ %49, %47 ]
  store i8 0, i8* %51, align 1
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %4) #13, !noalias !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string.1"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca [13 x i16], align 16
  %4 = bitcast [13 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %4) #13, !noalias !5
  %5 = icmp slt i32 %1, 0
  %6 = sub i32 0, %1
  %7 = select i1 %5, i32 %6, i32 %1
  %8 = getelementptr inbounds [13 x i16], [13 x i16]* %3, i64 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 26, i1 false) #13, !noalias !5
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i32 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i16, i16* %8, i64 %12
  %14 = urem i32 %10, 10
  %15 = trunc i32 %14 to i16
  %16 = or i16 %15, 48
  store i16 %16, i16* %13, align 2, !noalias !5
  %17 = udiv i32 %10, 10
  %18 = icmp ugt i32 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i16, i16* %8, i64 %21
  store i16 45, i16* %22, align 2, !noalias !5
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = shl nuw i64 %24, 1
  %26 = sub i64 0, %25
  %27 = ashr exact i64 %26, 1
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %23
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %27 to i8
  %35 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1, !alias.scope !5
  %37 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %51

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #15
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %45, i8** %47, align 8, !alias.scope !5
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8, !alias.scope !5
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8, !alias.scope !5
  br label %51

51:                                               ; preds = %43, %33
  %52 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %53 = icmp eq i64 %24, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = bitcast i16* %52 to i8*
  %56 = getelementptr [13 x i16], [13 x i16]* %3, i64 1, i64 %24
  %57 = bitcast i16* %56 to i8*
  %58 = mul i64 %24, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 2 %57, i64 %58, i1 false) #13
  %59 = sub i64 0, %24
  %60 = getelementptr i16, i16* %52, i64 %59
  br label %61

61:                                               ; preds = %54, %51
  %62 = phi i16* [ %52, %51 ], [ %60, %54 ]
  store i16 0, i16* %62, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %4) #13, !noalias !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca [12 x i8], align 1
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #13, !noalias !8
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* %3, i64 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 12, i1 false) #13, !noalias !8
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i32 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = urem i32 %7, 10
  %12 = trunc i32 %11 to i8
  %13 = or i8 %12, 48
  store i8 %13, i8* %10, align 1, !noalias !8
  %14 = udiv i32 %7, 10
  %15 = icmp ugt i32 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = sub i64 1, %8
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #14
  unreachable

21:                                               ; preds = %16
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = trunc i64 %17 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %36

28:                                               ; preds = %21
  %29 = sub i64 17, %8
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8, !alias.scope !8
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8, !alias.scope !8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %35, align 8, !alias.scope !8
  br label %36

36:                                               ; preds = %28, %23
  %37 = phi i8* [ %27, %23 ], [ %31, %28 ]
  %38 = icmp eq i64 %9, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr [12 x i8], [12 x i8]* %3, i64 1, i64 %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %40, i64 %17, i1 false) #13
  %41 = sub i64 1, %8
  %42 = getelementptr i8, i8* %37, i64 %41
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i8* [ %37, %36 ], [ %42, %39 ]
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #13, !noalias !8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Ej(%"class.std::__1::basic_string.1"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca [12 x i16], align 16
  %4 = bitcast [12 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13, !noalias !11
  %5 = getelementptr inbounds [12 x i16], [12 x i16]* %3, i64 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 24, i1 false) #13, !noalias !11
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i32 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i16, i16* %5, i64 %9
  %11 = urem i32 %7, 10
  %12 = trunc i32 %11 to i16
  %13 = or i16 %12, 48
  store i16 %13, i16* %10, align 2, !noalias !11
  %14 = udiv i32 %7, 10
  %15 = icmp ugt i32 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = shl nuw i64 %9, 1
  %18 = sub i64 0, %17
  %19 = ashr exact i64 %18, 1
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %22) #14
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %25, label %30

25:                                               ; preds = %23
  %26 = trunc i64 %19 to i8
  %27 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1, !alias.scope !11
  %29 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %43

30:                                               ; preds = %23
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #15
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %37, i8** %39, align 8, !alias.scope !11
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8, !alias.scope !11
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8, !alias.scope !11
  br label %43

43:                                               ; preds = %35, %25
  %44 = phi i16* [ %29, %25 ], [ %38, %35 ]
  %45 = icmp eq i64 %9, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = bitcast i16* %44 to i8*
  %48 = getelementptr [12 x i16], [12 x i16]* %3, i64 1, i64 %9
  %49 = bitcast i16* %48 to i8*
  %50 = mul i64 %9, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 2 %49, i64 %50, i1 false) #13
  %51 = sub i64 1, %8
  %52 = getelementptr i16, i16* %44, i64 %51
  br label %53

53:                                               ; preds = %46, %43
  %54 = phi i16* [ %44, %43 ], [ %52, %46 ]
  store i16 0, i16* %54, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13, !noalias !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [25 x i8], align 16
  %4 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %4) #13, !noalias !14
  %5 = icmp slt i64 %1, 0
  %6 = sub i64 0, %1
  %7 = select i1 %5, i64 %6, i64 %1
  %8 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i64 0, i64 25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 25, i1 false) #13, !noalias !14
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i64 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  %14 = urem i64 %10, 10
  %15 = trunc i64 %14 to i8
  %16 = or i8 %15, 48
  store i8 %16, i8* %13, align 1, !noalias !14
  %17 = udiv i64 %10, 10
  %18 = icmp ugt i64 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i8, i8* %8, i64 %21
  store i8 45, i8* %22, align 1, !noalias !14
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = sub i64 0, %24
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = trunc i64 %25 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1, !alias.scope !14
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %44

36:                                               ; preds = %29
  %37 = sub i64 16, %24
  %38 = and i64 %37, -16
  %39 = tail call i8* @_Znwm(i64 %38) #15
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8, !alias.scope !14
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8, !alias.scope !14
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8, !alias.scope !14
  br label %44

44:                                               ; preds = %36, %31
  %45 = phi i8* [ %35, %31 ], [ %39, %36 ]
  %46 = icmp eq i64 %24, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr [25 x i8], [25 x i8]* %3, i64 1, i64 %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %48, i64 %25, i1 false) #13
  %49 = getelementptr i8, i8* %45, i64 %25
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i8* [ %45, %44 ], [ %49, %47 ]
  store i8 0, i8* %51, align 1
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %4) #13, !noalias !14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string.1"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [25 x i16], align 16
  %4 = bitcast [25 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %4) #13, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 50, i1 false) #13, !noalias !17
  %5 = icmp slt i64 %1, 0
  %6 = sub i64 0, %1
  %7 = select i1 %5, i64 %6, i64 %1
  %8 = getelementptr inbounds [25 x i16], [25 x i16]* %3, i64 0, i64 25
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i64 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i16, i16* %8, i64 %12
  %14 = urem i64 %10, 10
  %15 = trunc i64 %14 to i16
  %16 = or i16 %15, 48
  store i16 %16, i16* %13, align 2, !noalias !17
  %17 = udiv i64 %10, 10
  %18 = icmp ugt i64 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i16, i16* %8, i64 %21
  store i16 45, i16* %22, align 2, !noalias !17
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = shl nuw i64 %24, 1
  %26 = sub i64 0, %25
  %27 = ashr exact i64 %26, 1
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %23
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %27 to i8
  %35 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1, !alias.scope !17
  %37 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %51

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #15
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %45, i8** %47, align 8, !alias.scope !17
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8, !alias.scope !17
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8, !alias.scope !17
  br label %51

51:                                               ; preds = %43, %33
  %52 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %53 = icmp eq i64 %24, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = bitcast i16* %52 to i8*
  %56 = getelementptr [25 x i16], [25 x i16]* %3, i64 1, i64 %24
  %57 = bitcast i16* %56 to i8*
  %58 = mul i64 %24, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 2 %57, i64 %58, i1 false) #13
  %59 = sub i64 0, %24
  %60 = getelementptr i16, i16* %52, i64 %59
  br label %61

61:                                               ; preds = %54, %51
  %62 = phi i16* [ %52, %51 ], [ %60, %54 ]
  store i16 0, i16* %62, align 2
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %4) #13, !noalias !17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [24 x i8], align 16
  %4 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13, !noalias !20
  %5 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 24, i1 false) #13, !noalias !20
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i64 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = urem i64 %7, 10
  %12 = trunc i64 %11 to i8
  %13 = or i8 %12, 48
  store i8 %13, i8* %10, align 1, !noalias !20
  %14 = udiv i64 %7, 10
  %15 = icmp ugt i64 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = sub i64 1, %8
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #14
  unreachable

21:                                               ; preds = %16
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = trunc i64 %17 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !20
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %36

28:                                               ; preds = %21
  %29 = sub i64 17, %8
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8, !alias.scope !20
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8, !alias.scope !20
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %35, align 8, !alias.scope !20
  br label %36

36:                                               ; preds = %28, %23
  %37 = phi i8* [ %27, %23 ], [ %31, %28 ]
  %38 = icmp eq i64 %9, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr [24 x i8], [24 x i8]* %3, i64 1, i64 %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %40, i64 %17, i1 false) #13
  %41 = sub i64 1, %8
  %42 = getelementptr i8, i8* %37, i64 %41
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i8* [ %37, %36 ], [ %42, %39 ]
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13, !noalias !20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Em(%"class.std::__1::basic_string.1"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [24 x i16], align 16
  %4 = bitcast [24 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #13, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 48, i1 false) #13, !noalias !23
  %5 = getelementptr inbounds [24 x i16], [24 x i16]* %3, i64 0, i64 24
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i64 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i16, i16* %5, i64 %9
  %11 = urem i64 %7, 10
  %12 = trunc i64 %11 to i16
  %13 = or i16 %12, 48
  store i16 %13, i16* %10, align 2, !noalias !23
  %14 = udiv i64 %7, 10
  %15 = icmp ugt i64 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = shl nuw i64 %9, 1
  %18 = sub i64 0, %17
  %19 = ashr exact i64 %18, 1
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %22) #14
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %25, label %30

25:                                               ; preds = %23
  %26 = trunc i64 %19 to i8
  %27 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1, !alias.scope !23
  %29 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %43

30:                                               ; preds = %23
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #15
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %37, i8** %39, align 8, !alias.scope !23
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8, !alias.scope !23
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8, !alias.scope !23
  br label %43

43:                                               ; preds = %35, %25
  %44 = phi i16* [ %29, %25 ], [ %38, %35 ]
  %45 = icmp eq i64 %9, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = bitcast i16* %44 to i8*
  %48 = getelementptr [24 x i16], [24 x i16]* %3, i64 1, i64 %9
  %49 = bitcast i16* %48 to i8*
  %50 = mul i64 %9, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 2 %49, i64 %50, i1 false) #13
  %51 = sub i64 1, %8
  %52 = getelementptr i16, i16* %44, i64 %51
  br label %53

53:                                               ; preds = %46, %43
  %54 = phi i16* [ %44, %43 ], [ %52, %46 ]
  store i16 0, i16* %54, align 2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #13, !noalias !23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEx(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [25 x i8], align 16
  %4 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %4) #13, !noalias !26
  %5 = icmp slt i64 %1, 0
  %6 = sub i64 0, %1
  %7 = select i1 %5, i64 %6, i64 %1
  %8 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i64 0, i64 25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 25, i1 false) #13, !noalias !26
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i64 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  %14 = urem i64 %10, 10
  %15 = trunc i64 %14 to i8
  %16 = or i8 %15, 48
  store i8 %16, i8* %13, align 1, !noalias !26
  %17 = udiv i64 %10, 10
  %18 = icmp ugt i64 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i8, i8* %8, i64 %21
  store i8 45, i8* %22, align 1, !noalias !26
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = sub i64 0, %24
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = trunc i64 %25 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1, !alias.scope !26
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %44

36:                                               ; preds = %29
  %37 = sub i64 16, %24
  %38 = and i64 %37, -16
  %39 = tail call i8* @_Znwm(i64 %38) #15
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8, !alias.scope !26
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8, !alias.scope !26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8, !alias.scope !26
  br label %44

44:                                               ; preds = %36, %31
  %45 = phi i8* [ %35, %31 ], [ %39, %36 ]
  %46 = icmp eq i64 %24, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr [25 x i8], [25 x i8]* %3, i64 1, i64 %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %48, i64 %25, i1 false) #13
  %49 = getelementptr i8, i8* %45, i64 %25
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i8* [ %45, %44 ], [ %49, %47 ]
  store i8 0, i8* %51, align 1
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %4) #13, !noalias !26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Ex(%"class.std::__1::basic_string.1"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [25 x i16], align 16
  %4 = bitcast [25 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %4) #13, !noalias !29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 50, i1 false) #13, !noalias !29
  %5 = icmp slt i64 %1, 0
  %6 = sub i64 0, %1
  %7 = select i1 %5, i64 %6, i64 %1
  %8 = getelementptr inbounds [25 x i16], [25 x i16]* %3, i64 0, i64 25
  br label %9

9:                                                ; preds = %9, %2
  %10 = phi i64 [ %7, %2 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %2 ], [ %12, %9 ]
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds i16, i16* %8, i64 %12
  %14 = urem i64 %10, 10
  %15 = trunc i64 %14 to i16
  %16 = or i16 %15, 48
  store i16 %16, i16* %13, align 2, !noalias !29
  %17 = udiv i64 %10, 10
  %18 = icmp ugt i64 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  br i1 %5, label %20, label %23

20:                                               ; preds = %19
  %21 = add nsw i64 %11, -2
  %22 = getelementptr inbounds i16, i16* %8, i64 %21
  store i16 45, i16* %22, align 2, !noalias !29
  br label %23

23:                                               ; preds = %20, %19
  %24 = phi i64 [ %21, %20 ], [ %12, %19 ]
  %25 = shl nuw i64 %24, 1
  %26 = sub i64 0, %25
  %27 = ashr exact i64 %26, 1
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %23
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %27 to i8
  %35 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1, !alias.scope !29
  %37 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %51

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #15
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %45, i8** %47, align 8, !alias.scope !29
  %48 = or i64 %40, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8, !alias.scope !29
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %27, i64* %50, align 8, !alias.scope !29
  br label %51

51:                                               ; preds = %43, %33
  %52 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %53 = icmp eq i64 %24, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = bitcast i16* %52 to i8*
  %56 = getelementptr [25 x i16], [25 x i16]* %3, i64 1, i64 %24
  %57 = bitcast i16* %56 to i8*
  %58 = mul i64 %24, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 2 %57, i64 %58, i1 false) #13
  %59 = sub i64 0, %24
  %60 = getelementptr i16, i16* %52, i64 %59
  br label %61

61:                                               ; preds = %54, %51
  %62 = phi i16* [ %52, %51 ], [ %60, %54 ]
  store i16 0, i16* %62, align 2
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %4) #13, !noalias !29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEy(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [24 x i8], align 16
  %4 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13, !noalias !32
  %5 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 24, i1 false) #13, !noalias !32
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i64 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = urem i64 %7, 10
  %12 = trunc i64 %11 to i8
  %13 = or i8 %12, 48
  store i8 %13, i8* %10, align 1, !noalias !32
  %14 = udiv i64 %7, 10
  %15 = icmp ugt i64 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = sub i64 1, %8
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #14
  unreachable

21:                                               ; preds = %16
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = trunc i64 %17 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !32
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %36

28:                                               ; preds = %21
  %29 = sub i64 17, %8
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8, !alias.scope !32
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8, !alias.scope !32
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %35, align 8, !alias.scope !32
  br label %36

36:                                               ; preds = %28, %23
  %37 = phi i8* [ %27, %23 ], [ %31, %28 ]
  %38 = icmp eq i64 %9, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr [24 x i8], [24 x i8]* %3, i64 1, i64 %9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %40, i64 %17, i1 false) #13
  %41 = sub i64 1, %8
  %42 = getelementptr i8, i8* %37, i64 %41
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i8* [ %37, %36 ], [ %42, %39 ]
  store i8 0, i8* %44, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13, !noalias !32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Ey(%"class.std::__1::basic_string.1"* noalias sret, i64) local_unnamed_addr #0 {
  %3 = alloca [24 x i16], align 16
  %4 = bitcast [24 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #13, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 48, i1 false) #13, !noalias !35
  %5 = getelementptr inbounds [24 x i16], [24 x i16]* %3, i64 0, i64 24
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i64 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %9, %6 ]
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds i16, i16* %5, i64 %9
  %11 = urem i64 %7, 10
  %12 = trunc i64 %11 to i16
  %13 = or i16 %12, 48
  store i16 %13, i16* %10, align 2, !noalias !35
  %14 = udiv i64 %7, 10
  %15 = icmp ugt i64 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = shl nuw i64 %9, 1
  %18 = sub i64 0, %17
  %19 = ashr exact i64 %18, 1
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %22) #14
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %25, label %30

25:                                               ; preds = %23
  %26 = trunc i64 %19 to i8
  %27 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1, !alias.scope !35
  %29 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %43

30:                                               ; preds = %23
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #14
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #15
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %37, i8** %39, align 8, !alias.scope !35
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8, !alias.scope !35
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8, !alias.scope !35
  br label %43

43:                                               ; preds = %35, %25
  %44 = phi i16* [ %29, %25 ], [ %38, %35 ]
  %45 = icmp eq i64 %9, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = bitcast i16* %44 to i8*
  %48 = getelementptr [24 x i16], [24 x i16]* %3, i64 1, i64 %9
  %49 = bitcast i16* %48 to i8*
  %50 = mul i64 %9, -2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 2 %49, i64 %50, i1 false) #13
  %51 = sub i64 1, %8
  %52 = getelementptr i16, i16* %44, i64 %51
  br label %53

53:                                               ; preds = %46, %43
  %54 = phi i16* [ %44, %43 ], [ %52, %46 ]
  store i16 0, i16* %54, align 2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #13, !noalias !35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string"* noalias sret, double) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_d(%"class.std::__1::basic_string"* sret %0, double %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_d(%"class.std::__1::basic_string"* noalias sret, double) local_unnamed_addr #0 comdat {
  %3 = alloca [32 x i8], align 16
  %4 = alloca %"class.double_conversion::StringBuilder", align 8
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %"class.double_conversion::StringBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 1
  %10 = bitcast %"class.double_conversion::StringBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  store i8* %5, i8** %7, align 8
  store i32 32, i32* %8, align 8
  store i32 0, i32* %9, align 8
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !38

13:                                               ; preds = %2
  %14 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 1, i32* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter to i32*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #13
  store i8 101, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 24), align 8
  store <4 x i32> <i32 -6, i32 12, i32 0, i32 0>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 28) to <4 x i32>*), align 4
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 44) to i32*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter) #13
  br label %17

17:                                               ; preds = %2, %13, %16
  %18 = call zeroext i1 @_ZNK17double_conversion23DoubleToStringConverter20ToShortestIeeeNumberEdPNS_13StringBuilderENS0_8DtoaModeE(%"class.double_conversion::DoubleToStringConverter"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter to %"class.double_conversion::DoubleToStringConverter"*), double %1, %"class.double_conversion::StringBuilder"* nonnull %4, i32 0) #13
  %19 = load i32, i32* %9, align 8
  %20 = sext i32 %19 to i64
  %21 = icmp ugt i32 %19, -17
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %23) #14
  unreachable

24:                                               ; preds = %17
  %25 = icmp ult i32 %19, 23
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = trunc i32 %19 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1, !alias.scope !39
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %31 = icmp eq i32 %19, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 16 %5, i64 %20, i1 false) #13
  br label %43

33:                                               ; preds = %24
  %34 = add nuw nsw i64 %20, 16
  %35 = and i64 %34, -16
  %36 = call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8, !alias.scope !39
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8, !alias.scope !39
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %40, align 8, !alias.scope !39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 16 %5, i64 %20, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %36, i64 %20
  store i8 0, i8* %41, align 1
  %42 = icmp slt i32 %19, 0
  br i1 %42, label %48, label %45

43:                                               ; preds = %26, %32
  %44 = getelementptr inbounds i8, i8* %30, i64 %20
  store i8 0, i8* %44, align 1
  br label %45

45:                                               ; preds = %43, %33
  %46 = load i8*, i8** %7, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %20
  store i8 0, i8* %47, align 1
  store i32 -1, i32* %9, align 8
  br label %48

48:                                               ; preds = %33, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string.1"* noalias sret, double) local_unnamed_addr #0 {
  tail call void @_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEET_d(%"class.std::__1::basic_string.1"* sret %0, double %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal15DoubleToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEET_d(%"class.std::__1::basic_string.1"* noalias sret, double) local_unnamed_addr #0 comdat {
  %3 = alloca [32 x i8], align 16
  %4 = alloca %"class.double_conversion::StringBuilder", align 8
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #13
  %6 = bitcast %"class.double_conversion::StringBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.double_conversion::StringBuilder", %"class.double_conversion::StringBuilder"* %4, i64 0, i32 1
  %10 = bitcast %"class.double_conversion::StringBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  store i8* %5, i8** %7, align 8
  store i32 32, i32* %8, align 8
  store i32 0, i32* %9, align 8
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !38

13:                                               ; preds = %2
  %14 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 1, i32* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter to i32*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #13
  store i8 101, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 24), align 8
  store <4 x i32> <i32 -6, i32 12, i32 0, i32 0>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 28) to <4 x i32>*), align 4
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter, i64 0, i32 0, i64 44) to i32*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internalL26GetDoubleToStringConverterEvE9converter) #13
  br label %17

17:                                               ; preds = %2, %13, %16
  %18 = call zeroext i1 @_ZNK17double_conversion23DoubleToStringConverter20ToShortestIeeeNumberEdPNS_13StringBuilderENS0_8DtoaModeE(%"class.double_conversion::DoubleToStringConverter"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internalL26GetDoubleToStringConverterEvE9converter to %"class.double_conversion::DoubleToStringConverter"*), double %1, %"class.double_conversion::StringBuilder"* nonnull %4, i32 0) #13
  %19 = load i32, i32* %9, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %20
  %22 = icmp slt i32 %19, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %17
  %26 = icmp ult i32 %19, 11
  br i1 %26, label %40, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i64 %20, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  call void @abort() #14
  unreachable

32:                                               ; preds = %27
  %33 = shl nsw i64 %29, 1
  %34 = call i8* @_Znwm(i64 %33) #15
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %34, i8** %36, align 8, !alias.scope !42
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8, !alias.scope !42
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %39, align 8, !alias.scope !42
  br label %46

40:                                               ; preds = %25
  %41 = trunc i32 %19 to i8
  %42 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  store i8 %41, i8* %43, align 1, !alias.scope !42
  %44 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %45 = icmp eq i32 %19, 0
  br i1 %45, label %120, label %46

46:                                               ; preds = %40, %32
  %47 = phi i16* [ %35, %32 ], [ %44, %40 ]
  %48 = icmp ult i32 %19, 16
  br i1 %48, label %109, label %49

49:                                               ; preds = %46
  %50 = and i64 %20, -16
  %51 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %50
  %52 = getelementptr i16, i16* %47, i64 %50
  %53 = add nsw i64 %50, -16
  %54 = lshr exact i64 %53, 4
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %91, label %58

58:                                               ; preds = %49
  %59 = sub nuw nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %88, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %89, %60 ]
  %63 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %61
  %64 = getelementptr i16, i16* %47, i64 %61
  %65 = bitcast i8* %63 to <8 x i8>*
  %66 = load <8 x i8>, <8 x i8>* %65, align 16, !noalias !42
  %67 = getelementptr i8, i8* %63, i64 8
  %68 = bitcast i8* %67 to <8 x i8>*
  %69 = load <8 x i8>, <8 x i8>* %68, align 8, !noalias !42
  %70 = sext <8 x i8> %66 to <8 x i16>
  %71 = sext <8 x i8> %69 to <8 x i16>
  %72 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %72, align 2
  %73 = getelementptr i16, i16* %64, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2
  %75 = or i64 %61, 16
  %76 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %75
  %77 = getelementptr i16, i16* %47, i64 %75
  %78 = bitcast i8* %76 to <8 x i8>*
  %79 = load <8 x i8>, <8 x i8>* %78, align 16, !noalias !42
  %80 = getelementptr i8, i8* %76, i64 8
  %81 = bitcast i8* %80 to <8 x i8>*
  %82 = load <8 x i8>, <8 x i8>* %81, align 8, !noalias !42
  %83 = sext <8 x i8> %79 to <8 x i16>
  %84 = sext <8 x i8> %82 to <8 x i16>
  %85 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %85, align 2
  %86 = getelementptr i16, i16* %77, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2
  %88 = add i64 %61, 32
  %89 = add i64 %62, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %60, !llvm.loop !45

91:                                               ; preds = %60, %49
  %92 = phi i64 [ 0, %49 ], [ %88, %60 ]
  %93 = icmp eq i64 %56, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %92
  %96 = getelementptr i16, i16* %47, i64 %92
  %97 = bitcast i8* %95 to <8 x i8>*
  %98 = load <8 x i8>, <8 x i8>* %97, align 16, !noalias !42
  %99 = getelementptr i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to <8 x i8>*
  %101 = load <8 x i8>, <8 x i8>* %100, align 8, !noalias !42
  %102 = sext <8 x i8> %98 to <8 x i16>
  %103 = sext <8 x i8> %101 to <8 x i16>
  %104 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %104, align 2
  %105 = getelementptr i16, i16* %96, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2
  br label %107

107:                                              ; preds = %91, %94
  %108 = icmp eq i64 %50, %20
  br i1 %108, label %120, label %109

109:                                              ; preds = %107, %46
  %110 = phi i8* [ %5, %46 ], [ %51, %107 ]
  %111 = phi i16* [ %47, %46 ], [ %52, %107 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i8* [ %117, %112 ], [ %110, %109 ]
  %114 = phi i16* [ %118, %112 ], [ %111, %109 ]
  %115 = load i8, i8* %113, align 1, !noalias !42
  %116 = sext i8 %115 to i16
  store i16 %116, i16* %114, align 2
  %117 = getelementptr inbounds i8, i8* %113, i64 1
  %118 = getelementptr inbounds i16, i16* %114, i64 1
  %119 = icmp eq i8* %117, %21
  br i1 %119, label %120, label %112, !llvm.loop !47

120:                                              ; preds = %112, %107, %40
  %121 = phi i16* [ %44, %40 ], [ %52, %107 ], [ %118, %112 ]
  store i16 0, i16* %121, align 2
  %122 = load i32, i32* %9, align 8
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8*, i8** %7, align 8
  %126 = sext i32 %122 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  store i8 0, i8* %127, align 1
  store i32 -1, i32* %9, align 8
  br label %128

128:                                              ; preds = %120, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = tail call i64 @_ZN4base8internal14StringToNumberIiLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8* %0, i64 %1) #13
  %5 = trunc i64 %4 to i32
  store i32 %5, i32* %2, align 4
  %6 = and i64 %4, 4294967296
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = tail call i64 @_ZN4base8internal14StringToNumberIiLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i16* %0, i64 %1) #13
  %5 = trunc i64 %4 to i32
  store i32 %5, i32* %2, align 4
  %6 = and i64 %4, 4294967296
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjcEEbT_RT0_(i8* %0, i64 %1, i32* dereferenceable(4) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjcEEbT_RT0_(i8*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %77, label %15

26:                                               ; preds = %15, %6
  %27 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %28 = phi i64 [ 4294967296, %6 ], [ 0, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %84, label %31

31:                                               ; preds = %26
  %32 = icmp eq i8 %29, 43
  %33 = getelementptr inbounds i8, i8* %27, i64 1
  %34 = select i1 %32, i8* %33, i8* %27
  br label %35

35:                                               ; preds = %31, %3
  %36 = phi i64 [ %28, %31 ], [ 4294967296, %3 ]
  %37 = phi i8* [ %34, %31 ], [ %0, %3 ]
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %77, label %39

39:                                               ; preds = %35, %64
  %40 = phi i8* [ %68, %64 ], [ %37, %35 ]
  %41 = phi i32 [ %67, %64 ], [ 0, %35 ]
  %42 = load i8, i8* %40, align 1
  %43 = add i8 %42, -48
  %44 = icmp ult i8 %43, 10
  br i1 %44, label %45, label %73

45:                                               ; preds = %39
  %46 = icmp eq i8* %40, %37
  br i1 %46, label %64, label %47

47:                                               ; preds = %45
  %48 = icmp ugt i32 %41, 429496729
  br i1 %48, label %56, label %49

49:                                               ; preds = %47
  %50 = icmp eq i32 %41, 429496729
  %51 = icmp ugt i8 %43, 5
  %52 = and i1 %50, %51
  %53 = zext i32 %41 to i64
  %54 = select i1 %52, i64 4294967295, i64 %53
  %55 = select i1 %52, i64 0, i64 4294967296
  br label %56

56:                                               ; preds = %49, %47
  %57 = phi i64 [ 4294967295, %47 ], [ %54, %49 ]
  %58 = phi i64 [ 0, %47 ], [ %55, %49 ]
  %59 = or i64 %58, %57
  %60 = and i64 %59, 4294967296
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %56
  %63 = mul i32 %41, 10
  br label %64

64:                                               ; preds = %62, %45
  %65 = phi i32 [ %63, %62 ], [ %41, %45 ]
  %66 = zext i8 %43 to i32
  %67 = add i32 %65, %66
  %68 = getelementptr inbounds i8, i8* %40, i64 1
  %69 = icmp eq i8* %68, %4
  br i1 %69, label %73, label %39

70:                                               ; preds = %56
  %71 = trunc i64 %57 to i32
  %72 = and i64 %59, 1095216660480
  br label %73

73:                                               ; preds = %64, %39, %70
  %74 = phi i32 [ %71, %70 ], [ %67, %64 ], [ %41, %39 ]
  %75 = phi i64 [ %72, %70 ], [ 4294967296, %64 ], [ 0, %39 ]
  %76 = zext i32 %74 to i64
  br label %77

77:                                               ; preds = %22, %73, %35
  %78 = phi i64 [ %36, %35 ], [ %36, %73 ], [ 0, %22 ]
  %79 = phi i64 [ 0, %35 ], [ %75, %73 ], [ 0, %22 ]
  %80 = phi i64 [ 0, %35 ], [ %76, %73 ], [ 0, %22 ]
  %81 = or i64 %80, %79
  %82 = and i64 %78, -4294967296
  %83 = and i64 %82, %81
  br label %84

84:                                               ; preds = %26, %77
  %85 = phi i64 [ %80, %77 ], [ 0, %26 ]
  %86 = phi i64 [ %83, %77 ], [ 0, %26 ]
  %87 = or i64 %86, %85
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %2, align 4
  %89 = and i64 %87, 4294967296
  %90 = icmp ne i64 %89, 0
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16*, i64, i32*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEjDsEEbT_RT0_(i16* %0, i64 %1, i32* dereferenceable(4) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEjDsEEbT_RT0_(i16*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds i16, i16* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = load i16, i16* %0, align 2
  %8 = zext i16 %7 to i32
  %9 = tail call i32 @iswspace(i32 %8) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %16

11:                                               ; preds = %16
  %12 = load i16, i16* %18, align 2
  %13 = zext i16 %12 to i32
  %14 = tail call i32 @iswspace(i32 %13) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6, %11
  %17 = phi i16* [ %18, %11 ], [ %0, %6 ]
  %18 = getelementptr inbounds i16, i16* %17, i64 1
  %19 = icmp eq i16* %18, %4
  br i1 %19, label %75, label %11

20:                                               ; preds = %11, %6
  %21 = phi i16* [ %0, %6 ], [ %18, %11 ]
  %22 = phi i64 [ 4294967296, %6 ], [ 0, %11 ]
  %23 = load i16, i16* %21, align 2
  %24 = icmp eq i16 %23, 45
  br i1 %24, label %82, label %25

25:                                               ; preds = %20
  %26 = icmp eq i16 %23, 43
  %27 = getelementptr inbounds i16, i16* %21, i64 1
  %28 = select i1 %26, i16* %27, i16* %21
  br label %29

29:                                               ; preds = %25, %3
  %30 = phi i64 [ %22, %25 ], [ 4294967296, %3 ]
  %31 = phi i16* [ %28, %25 ], [ %0, %3 ]
  %32 = icmp eq i16* %31, %4
  br i1 %32, label %75, label %33

33:                                               ; preds = %29, %62
  %34 = phi i16* [ %66, %62 ], [ %31, %29 ]
  %35 = phi i32 [ %65, %62 ], [ 0, %29 ]
  %36 = load i16, i16* %34, align 2
  %37 = add i16 %36, -48
  %38 = icmp ult i16 %37, 10
  %39 = shl i16 %36, 8
  %40 = add i16 %39, -12288
  %41 = lshr exact i16 %40, 8
  %42 = trunc i16 %41 to i8
  br i1 %38, label %43, label %71

43:                                               ; preds = %33
  %44 = icmp eq i16* %34, %31
  br i1 %44, label %62, label %45

45:                                               ; preds = %43
  %46 = icmp ugt i32 %35, 429496729
  br i1 %46, label %54, label %47

47:                                               ; preds = %45
  %48 = icmp eq i32 %35, 429496729
  %49 = icmp ugt i8 %42, 5
  %50 = and i1 %48, %49
  %51 = zext i32 %35 to i64
  %52 = select i1 %50, i64 4294967295, i64 %51
  %53 = select i1 %50, i64 0, i64 4294967296
  br label %54

54:                                               ; preds = %47, %45
  %55 = phi i64 [ 4294967295, %45 ], [ %52, %47 ]
  %56 = phi i64 [ 0, %45 ], [ %53, %47 ]
  %57 = or i64 %56, %55
  %58 = and i64 %57, 4294967296
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %54
  %61 = mul i32 %35, 10
  br label %62

62:                                               ; preds = %60, %43
  %63 = phi i32 [ %61, %60 ], [ %35, %43 ]
  %64 = zext i16 %41 to i32
  %65 = add i32 %63, %64
  %66 = getelementptr inbounds i16, i16* %34, i64 1
  %67 = icmp eq i16* %66, %4
  br i1 %67, label %71, label %33

68:                                               ; preds = %54
  %69 = trunc i64 %55 to i32
  %70 = and i64 %57, 1095216660480
  br label %71

71:                                               ; preds = %62, %33, %68
  %72 = phi i32 [ %69, %68 ], [ %65, %62 ], [ %35, %33 ]
  %73 = phi i64 [ %70, %68 ], [ 4294967296, %62 ], [ 0, %33 ]
  %74 = zext i32 %72 to i64
  br label %75

75:                                               ; preds = %16, %71, %29
  %76 = phi i64 [ %30, %29 ], [ %30, %71 ], [ 0, %16 ]
  %77 = phi i64 [ 0, %29 ], [ %73, %71 ], [ 0, %16 ]
  %78 = phi i64 [ 0, %29 ], [ %74, %71 ], [ 0, %16 ]
  %79 = or i64 %78, %77
  %80 = and i64 %76, -4294967296
  %81 = and i64 %80, %79
  br label %82

82:                                               ; preds = %20, %75
  %83 = phi i64 [ %78, %75 ], [ 0, %20 ]
  %84 = phi i64 [ %81, %75 ], [ 0, %20 ]
  %85 = or i64 %84, %83
  %86 = trunc i64 %85 to i32
  store i32 %86, i32* %2, align 4
  %87 = and i64 %85, 4294967296
  %88 = icmp ne i64 %87, 0
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call { i64, i8 } @_ZN4base8internal14StringToNumberIlLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8* %0, i64 %1) #13
  %5 = extractvalue { i64, i8 } %4, 0
  %6 = extractvalue { i64, i8 } %4, 1
  store i64 %5, i64* %2, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPl(i16*, i64, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call { i64, i8 } @_ZN4base8internal14StringToNumberIlLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i16* %0, i64 %1) #13
  %5 = extractvalue { i64, i8 } %4, 0
  %6 = extractvalue { i64, i8 } %4, 1
  store i64 %5, i64* %2, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* readonly, i64, i64* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %61, label %15

26:                                               ; preds = %15, %6
  %27 = phi i8 [ 1, %6 ], [ 0, %15 ]
  %28 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = icmp eq i8 %29, 43
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  %34 = select i1 %32, i8* %33, i8* %28
  br label %35

35:                                               ; preds = %31, %3
  %36 = phi i8 [ %27, %31 ], [ 1, %3 ]
  %37 = phi i8* [ %34, %31 ], [ %0, %3 ]
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %61, label %39

39:                                               ; preds = %35, %55
  %40 = phi i8* [ %59, %55 ], [ %37, %35 ]
  %41 = phi i64 [ %58, %55 ], [ 0, %35 ]
  %42 = load i8, i8* %40, align 1
  %43 = add i8 %42, -48
  %44 = icmp ult i8 %43, 10
  br i1 %44, label %45, label %61

45:                                               ; preds = %39
  %46 = icmp eq i8* %40, %37
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = icmp ugt i64 %41, 1844674407370955161
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = icmp eq i64 %41, 1844674407370955161
  %51 = icmp ugt i8 %43, 5
  %52 = and i1 %50, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = mul i64 %41, 10
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i64 [ %54, %53 ], [ %41, %45 ]
  %57 = zext i8 %43 to i64
  %58 = add i64 %56, %57
  %59 = getelementptr inbounds i8, i8* %40, i64 1
  %60 = icmp eq i8* %59, %4
  br i1 %60, label %61, label %39

61:                                               ; preds = %22, %55, %49, %47, %39, %35
  %62 = phi i8 [ %36, %35 ], [ %36, %39 ], [ %36, %47 ], [ %36, %49 ], [ %36, %55 ], [ 0, %22 ]
  %63 = phi i64 [ 0, %35 ], [ %58, %55 ], [ -1, %49 ], [ -1, %47 ], [ %41, %39 ], [ 0, %22 ]
  %64 = phi i8 [ 0, %35 ], [ 1, %55 ], [ 0, %49 ], [ 0, %47 ], [ 0, %39 ], [ 0, %22 ]
  %65 = and i8 %64, %62
  %66 = icmp ne i8 %65, 0
  br label %67

67:                                               ; preds = %26, %61
  %68 = phi i64 [ %63, %61 ], [ 0, %26 ]
  %69 = phi i1 [ %66, %61 ], [ false, %26 ]
  store i64 %68, i64* %2, align 8
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16*, i64, i64*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEmDsEEbT_RT0_(i16* %0, i64 %1, i64* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEmDsEEbT_RT0_(i16*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds i16, i16* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = load i16, i16* %0, align 2
  %8 = zext i16 %7 to i32
  %9 = tail call i32 @iswspace(i32 %8) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %16

11:                                               ; preds = %16
  %12 = load i16, i16* %18, align 2
  %13 = zext i16 %12 to i32
  %14 = tail call i32 @iswspace(i32 %13) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6, %11
  %17 = phi i16* [ %18, %11 ], [ %0, %6 ]
  %18 = getelementptr inbounds i16, i16* %17, i64 1
  %19 = icmp eq i16* %18, %4
  br i1 %19, label %59, label %11

20:                                               ; preds = %11, %6
  %21 = phi i8 [ 1, %6 ], [ 0, %11 ]
  %22 = phi i16* [ %0, %6 ], [ %18, %11 ]
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 45
  br i1 %24, label %65, label %25

25:                                               ; preds = %20
  %26 = icmp eq i16 %23, 43
  %27 = getelementptr inbounds i16, i16* %22, i64 1
  %28 = select i1 %26, i16* %27, i16* %22
  br label %29

29:                                               ; preds = %25, %3
  %30 = phi i8 [ %21, %25 ], [ 1, %3 ]
  %31 = phi i16* [ %28, %25 ], [ %0, %3 ]
  %32 = icmp eq i16* %31, %4
  br i1 %32, label %59, label %33

33:                                               ; preds = %29, %53
  %34 = phi i16* [ %57, %53 ], [ %31, %29 ]
  %35 = phi i64 [ %56, %53 ], [ 0, %29 ]
  %36 = load i16, i16* %34, align 2
  %37 = add i16 %36, -48
  %38 = icmp ult i16 %37, 10
  %39 = shl i16 %36, 8
  %40 = add i16 %39, -12288
  %41 = lshr exact i16 %40, 8
  %42 = trunc i16 %41 to i8
  br i1 %38, label %43, label %59

43:                                               ; preds = %33
  %44 = icmp eq i16* %34, %31
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = icmp ugt i64 %35, 1844674407370955161
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  %48 = icmp eq i64 %35, 1844674407370955161
  %49 = icmp ugt i8 %42, 5
  %50 = and i1 %48, %49
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = mul i64 %35, 10
  br label %53

53:                                               ; preds = %51, %43
  %54 = phi i64 [ %52, %51 ], [ %35, %43 ]
  %55 = zext i16 %41 to i64
  %56 = add i64 %54, %55
  %57 = getelementptr inbounds i16, i16* %34, i64 1
  %58 = icmp eq i16* %57, %4
  br i1 %58, label %59, label %33

59:                                               ; preds = %16, %53, %47, %45, %33, %29
  %60 = phi i8 [ %30, %29 ], [ %30, %33 ], [ %30, %45 ], [ %30, %47 ], [ %30, %53 ], [ 0, %16 ]
  %61 = phi i64 [ 0, %29 ], [ %56, %53 ], [ -1, %47 ], [ -1, %45 ], [ %35, %33 ], [ 0, %16 ]
  %62 = phi i8 [ 0, %29 ], [ 1, %53 ], [ 0, %47 ], [ 0, %45 ], [ 0, %33 ], [ 0, %16 ]
  %63 = and i8 %62, %60
  %64 = icmp ne i8 %63, 0
  br label %65

65:                                               ; preds = %20, %59
  %66 = phi i64 [ %61, %59 ], [ 0, %20 ]
  %67 = phi i1 [ %64, %59 ], [ false, %20 ]
  store i64 %66, i64* %2, align 8
  ret i1 %67
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* readonly, i64, i64* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %61, label %15

26:                                               ; preds = %15, %6
  %27 = phi i8 [ 1, %6 ], [ 0, %15 ]
  %28 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = icmp eq i8 %29, 43
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  %34 = select i1 %32, i8* %33, i8* %28
  br label %35

35:                                               ; preds = %31, %3
  %36 = phi i8 [ %27, %31 ], [ 1, %3 ]
  %37 = phi i8* [ %34, %31 ], [ %0, %3 ]
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %61, label %39

39:                                               ; preds = %35, %55
  %40 = phi i8* [ %59, %55 ], [ %37, %35 ]
  %41 = phi i64 [ %58, %55 ], [ 0, %35 ]
  %42 = load i8, i8* %40, align 1
  %43 = add i8 %42, -48
  %44 = icmp ult i8 %43, 10
  br i1 %44, label %45, label %61

45:                                               ; preds = %39
  %46 = icmp eq i8* %40, %37
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = icmp ugt i64 %41, 1844674407370955161
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = icmp eq i64 %41, 1844674407370955161
  %51 = icmp ugt i8 %43, 5
  %52 = and i1 %50, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = mul i64 %41, 10
  br label %55

55:                                               ; preds = %53, %45
  %56 = phi i64 [ %54, %53 ], [ %41, %45 ]
  %57 = zext i8 %43 to i64
  %58 = add i64 %56, %57
  %59 = getelementptr inbounds i8, i8* %40, i64 1
  %60 = icmp eq i8* %59, %4
  br i1 %60, label %61, label %39

61:                                               ; preds = %22, %55, %49, %47, %39, %35
  %62 = phi i8 [ %36, %35 ], [ %36, %39 ], [ %36, %47 ], [ %36, %49 ], [ %36, %55 ], [ 0, %22 ]
  %63 = phi i64 [ 0, %35 ], [ %58, %55 ], [ -1, %49 ], [ -1, %47 ], [ %41, %39 ], [ 0, %22 ]
  %64 = phi i8 [ 0, %35 ], [ 1, %55 ], [ 0, %49 ], [ 0, %47 ], [ 0, %39 ], [ 0, %22 ]
  %65 = and i8 %64, %62
  %66 = icmp ne i8 %65, 0
  br label %67

67:                                               ; preds = %26, %61
  %68 = phi i64 [ %63, %61 ], [ 0, %26 ]
  %69 = phi i1 [ %66, %61 ], [ false, %26 ]
  store i64 %68, i64* %2, align 8
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base13StringToSizeTENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16*, i64, i64*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal15StringToIntImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEmDsEEbT_RT0_(i16* %0, i64 %1, i64* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_Rd(i8* %0, i64 %1, i8* %0, double* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_Rd(i8*, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !38

11:                                               ; preds = %4
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i32 12, i32* bitcast (%"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter to i32*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.35", %"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter, i64 0, i32 0, i64 8), i8 0, i64 34, i1 false)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter) #13
  br label %15

15:                                               ; preds = %11, %14, %4
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #13
  store i32 -1431655766, i32* %6, align 4
  %17 = load i64, i64* %8, align 8
  %18 = trunc i64 %17 to i32
  %19 = call double @_ZNK17double_conversion23StringToDoubleConverter14StringToDoubleEPKciPi(%"class.double_conversion::StringToDoubleConverter"* bitcast (%"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEcEEbT_PKT0_RdE9converter to %"class.double_conversion::StringToDoubleConverter"*), i8* %2, i32 %18, i32* nonnull %6) #13
  store double %19, double* %3, align 8
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %15
  %22 = fcmp une double %19, 0x7FF0000000000000
  %23 = fcmp une double %19, 0xFFF0000000000000
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = icmp eq i64 %17, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 0) #13
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %32) #13
  %34 = xor i1 %33, true
  br label %35

35:                                               ; preds = %29, %25, %21, %15
  %36 = phi i1 [ false, %25 ], [ false, %21 ], [ false, %15 ], [ %34, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #13
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16*, i64, double*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_Rd(i16* %0, i64 %1, i16* %0, double* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_Rd(i16*, i64, i16*, double* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::BasicStringPiece.10", align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.base::BasicStringPiece.10", %"class.base::BasicStringPiece.10"* %5, i64 0, i32 0
  store i16* %0, i16** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece.10", %"class.base::BasicStringPiece.10"* %5, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !38

11:                                               ; preds = %4
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i32 12, i32* bitcast (%"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter to i32*), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.35", %"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter, i64 0, i32 0, i64 8), i8 0, i64 34, i1 false)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter) #13
  br label %15

15:                                               ; preds = %11, %14, %4
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #13
  store i32 -1431655766, i32* %6, align 4
  %17 = load i64, i64* %8, align 8
  %18 = trunc i64 %17 to i32
  %19 = call double @_ZNK17double_conversion23StringToDoubleConverter14StringToDoubleEPKtiPi(%"class.double_conversion::StringToDoubleConverter"* bitcast (%"class.base::NoDestructor.35"* @_ZZN4base8internal18StringToDoubleImplINS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEtEEbT_PKT0_RdE9converter to %"class.double_conversion::StringToDoubleConverter"*), i16* %2, i32 %18, i32* nonnull %6) #13
  store double %19, double* %3, align 8
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %15
  %22 = fcmp une double %19, 0x7FF0000000000000
  %23 = fcmp une double %19, 0xFFF0000000000000
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = icmp eq i64 %17, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = call dereferenceable(2) i16* @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE2atEm(%"class.base::BasicStringPiece.10"* nonnull %5, i64 0) #13
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %32) #13
  %34 = xor i1 %33, true
  br label %35

35:                                               ; preds = %29, %25, %21, %15
  %36 = phi i1 [ false, %25 ], [ false, %21 ], [ false, %15 ], [ %34, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #13
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* noalias sret, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = shl i64 %2, 1
  %8 = icmp ugt i64 %7, -17
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  br i1 %8, label %10, label %12

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #14
  unreachable

12:                                               ; preds = %3
  %13 = icmp ult i64 %7, 23
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %7, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #15
  store i8* %17, i8** %4, align 8
  %18 = or i64 %16, -9223372036854775808
  store i64 %18, i64* %6, align 8
  store i64 %7, i64* %5, align 8
  br label %25

19:                                               ; preds = %12
  %20 = trunc i64 %7 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %24 = icmp eq i64 %7, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19, %14
  %26 = phi i8* [ %17, %14 ], [ %23, %19 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 %7, i1 false) #13
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi i8* [ %23, %19 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %7
  store i8 0, i8* %29, align 1
  %30 = icmp eq i64 %2, 0
  br i1 %30, label %63, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %35

35:                                               ; preds = %35, %31
  %36 = phi i64 [ 0, %31 ], [ %61, %35 ]
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = lshr i32 %39, 4
  %41 = and i32 %40, 15
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4base9HexEncodeEPKvmE9kHexChars, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = shl i64 %36, 1
  %46 = load i8, i8* %33, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i8*, i8** %4, align 8
  %49 = select i1 %47, i8* %48, i8* %34
  %50 = getelementptr inbounds i8, i8* %49, i64 %45
  store i8 %44, i8* %50, align 1
  %51 = and i32 %39, 15
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4base9HexEncodeEPKvmE9kHexChars, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = or i64 %45, 1
  %56 = load i8, i8* %33, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i8*, i8** %4, align 8
  %59 = select i1 %57, i8* %58, i8* %34
  %60 = getelementptr inbounds i8, i8* %59, i64 %55
  store i8 %54, i8* %60, align 1
  %61 = add nuw i64 %36, 1
  %62 = icmp eq i64 %61, %2
  br i1 %62, label %63, label %35

63:                                               ; preds = %35, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9HexEncodeENS_4spanIKhLm18446744073709551615EEE(%"class.std::__1::basic_string"* noalias sret, i64, i8*) local_unnamed_addr #0 {
  tail call void @_ZN4base9HexEncodeEPKvm(%"class.std::__1::basic_string"* sret %0, i8* %2, i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14HexStringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %38, label %15

26:                                               ; preds = %15, %6
  %27 = phi i64 [ 4294967296, %6 ], [ 0, %15 ]
  %28 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %28, i64 1
  %33 = tail call i64 @_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8NegativeEE6InvokeIPKcEENS2_6ResultET_SA_(i8* %32, i8* %4) #13
  br label %42

34:                                               ; preds = %26
  %35 = icmp eq i8 %29, 43
  %36 = getelementptr inbounds i8, i8* %28, i64 1
  %37 = select i1 %35, i8* %36, i8* %28
  br label %38

38:                                               ; preds = %22, %34, %3
  %39 = phi i64 [ %27, %34 ], [ 4294967296, %3 ], [ 0, %22 ]
  %40 = phi i8* [ %37, %34 ], [ %0, %3 ], [ %4, %22 ]
  %41 = tail call i64 @_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_(i8* %40, i8* %4) #13
  br label %42

42:                                               ; preds = %31, %38
  %43 = phi i64 [ %27, %31 ], [ %39, %38 ]
  %44 = phi i64 [ %33, %31 ], [ %41, %38 ]
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* %2, align 4
  %46 = and i64 %43, 4294967296
  %47 = and i64 %46, %44
  %48 = icmp ne i64 %47, 0
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %35, label %15

26:                                               ; preds = %15, %6
  %27 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %28 = phi i64 [ 4294967296, %6 ], [ 0, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  %32 = icmp eq i8 %29, 43
  %33 = getelementptr inbounds i8, i8* %27, i64 1
  %34 = select i1 %32, i8* %33, i8* %27
  br label %35

35:                                               ; preds = %22, %31, %3
  %36 = phi i64 [ %28, %31 ], [ 4294967296, %3 ], [ 0, %22 ]
  %37 = phi i8* [ %34, %31 ], [ %0, %3 ], [ %4, %22 ]
  %38 = tail call i64 @_ZN4base8internal20StringToNumberParserIjLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_(i8* %37, i8* %4) #13
  %39 = and i64 %36, -4294967296
  %40 = and i64 %39, %38
  %41 = and i64 %38, 4294967295
  br label %42

42:                                               ; preds = %26, %35
  %43 = phi i64 [ %41, %35 ], [ 0, %26 ]
  %44 = phi i64 [ %40, %35 ], [ 0, %26 ]
  %45 = or i64 %44, %43
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %2, align 4
  %47 = and i64 %44, 4294967296
  %48 = icmp ne i64 %47, 0
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16HexStringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call { i64, i8 } @_ZN4base8internal14StringToNumberIlLi16EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8* %0, i64 %1) #13
  %5 = extractvalue { i64, i8 } %4, 0
  %6 = extractvalue { i64, i8 } %4, 1
  store i64 %5, i64* %2, align 8
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base17HexStringToUInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i64* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds i8, i8* %0, i64 %1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = tail call i16** @__ctype_b_loc() #16
  %8 = load i16*, i16** %7, align 8
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 8192
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %26, label %22

15:                                               ; preds = %22
  %16 = load i8, i8* %24, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %8, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %6, %15
  %23 = phi i8* [ %24, %15 ], [ %0, %6 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  %25 = icmp eq i8* %24, %4
  br i1 %25, label %93, label %15

26:                                               ; preds = %15, %6
  %27 = phi i8 [ 1, %6 ], [ 0, %15 ]
  %28 = phi i8* [ %0, %6 ], [ %24, %15 ]
  %29 = phi i8 [ %9, %6 ], [ %16, %15 ]
  %30 = icmp eq i8 %29, 45
  br i1 %30, label %99, label %31

31:                                               ; preds = %26
  %32 = icmp eq i8 %29, 43
  %33 = getelementptr inbounds i8, i8* %28, i64 1
  %34 = select i1 %32, i8* %33, i8* %28
  br label %35

35:                                               ; preds = %31, %3
  %36 = phi i8 [ %27, %31 ], [ 1, %3 ]
  %37 = phi i8* [ %34, %31 ], [ %0, %3 ]
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %93, label %39

39:                                               ; preds = %35
  %40 = ptrtoint i8* %4 to i64
  %41 = ptrtoint i8* %37 to i64
  %42 = sub i64 %40, %41
  %43 = icmp sgt i64 %42, 2
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = load i8, i8* %37, align 1
  %46 = icmp eq i8 %45, 48
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %37, i64 1
  %49 = load i8, i8* %48, align 1
  switch i8 %49, label %52 [
    i8 120, label %50
    i8 88, label %50
  ]

50:                                               ; preds = %47, %47
  %51 = getelementptr inbounds i8, i8* %37, i64 2
  br label %52

52:                                               ; preds = %50, %47, %44, %39
  %53 = phi i8* [ %51, %50 ], [ %37, %44 ], [ %37, %39 ], [ %37, %47 ]
  %54 = icmp eq i8* %53, %4
  br i1 %54, label %93, label %55

55:                                               ; preds = %52, %86
  %56 = phi i8* [ %91, %86 ], [ %53, %52 ]
  %57 = phi i64 [ %90, %86 ], [ 0, %52 ]
  %58 = load i8, i8* %56, align 1
  %59 = sext i8 %58 to i16
  %60 = icmp sgt i8 %58, 47
  br i1 %60, label %61, label %93

61:                                               ; preds = %55
  %62 = icmp slt i8 %58, 58
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = add nsw i16 %59, -48
  br label %74

65:                                               ; preds = %61
  %66 = add nsw i8 %58, -97
  %67 = icmp ult i8 %66, 6
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = add nsw i16 %59, -87
  br label %74

70:                                               ; preds = %65
  %71 = add nsw i8 %58, -65
  %72 = icmp ult i8 %71, 6
  %73 = add nsw i16 %59, -55
  br i1 %72, label %74, label %93

74:                                               ; preds = %63, %68, %70
  %75 = phi i16 [ %73, %70 ], [ %69, %68 ], [ %64, %63 ]
  %76 = trunc i16 %75 to i8
  %77 = icmp eq i8* %56, %53
  br i1 %77, label %86, label %78

78:                                               ; preds = %74
  %79 = icmp ugt i64 %57, 1152921504606846975
  br i1 %79, label %93, label %80

80:                                               ; preds = %78
  %81 = icmp eq i64 %57, 1152921504606846975
  %82 = icmp ugt i8 %76, 15
  %83 = and i1 %81, %82
  br i1 %83, label %93, label %84

84:                                               ; preds = %80
  %85 = shl i64 %57, 4
  br label %86

86:                                               ; preds = %84, %74
  %87 = phi i64 [ %85, %84 ], [ %57, %74 ]
  %88 = and i16 %75, 255
  %89 = zext i16 %88 to i64
  %90 = add i64 %87, %89
  %91 = getelementptr inbounds i8, i8* %56, i64 1
  %92 = icmp eq i8* %91, %4
  br i1 %92, label %93, label %55

93:                                               ; preds = %22, %86, %78, %70, %55, %80, %35, %52
  %94 = phi i8 [ %36, %35 ], [ %36, %52 ], [ %36, %80 ], [ %36, %55 ], [ %36, %70 ], [ %36, %78 ], [ %36, %86 ], [ 0, %22 ]
  %95 = phi i64 [ 0, %35 ], [ 0, %52 ], [ %90, %86 ], [ -1, %78 ], [ %57, %70 ], [ %57, %55 ], [ -1, %80 ], [ 0, %22 ]
  %96 = phi i8 [ 0, %35 ], [ 1, %52 ], [ 1, %86 ], [ 0, %78 ], [ 0, %70 ], [ 0, %55 ], [ 0, %80 ], [ 0, %22 ]
  %97 = and i8 %96, %94
  %98 = icmp ne i8 %97, 0
  br label %99

99:                                               ; preds = %26, %93
  %100 = phi i64 [ %95, %93 ], [ 0, %26 ]
  %101 = phi i1 [ %98, %93 ], [ false, %26 ]
  store i64 %100, i64* %2, align 8
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16HexStringToBytesENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorIhNS1_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = icmp ne i64 %1, 0
  %11 = and i64 %1, 1
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %75

14:                                               ; preds = %3
  %15 = lshr i64 %1, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %75, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %19 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  br label %20

20:                                               ; preds = %69, %17
  %21 = phi i64 [ 0, %17 ], [ %73, %69 ]
  %22 = shl nuw i64 %21, 1
  %23 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %22) #13
  %24 = load i8, i8* %23, align 1
  %25 = icmp sgt i8 %24, 47
  br i1 %25, label %26, label %41

26:                                               ; preds = %20
  %27 = icmp slt i8 %24, 58
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = add nsw i8 %24, -48
  br label %41

30:                                               ; preds = %26
  %31 = add nsw i8 %24, -97
  %32 = icmp ult i8 %31, 6
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = add nsw i8 %24, -87
  br label %41

35:                                               ; preds = %30
  %36 = add nsw i8 %24, -65
  %37 = icmp ult i8 %36, 6
  %38 = add nsw i8 %24, -55
  %39 = zext i1 %37 to i16
  %40 = select i1 %37, i8 %38, i8 0
  br label %41

41:                                               ; preds = %35, %33, %28, %20
  %42 = phi i16 [ 1, %28 ], [ 1, %33 ], [ 0, %20 ], [ %39, %35 ]
  %43 = phi i8 [ %29, %28 ], [ %34, %33 ], [ 0, %20 ], [ %40, %35 ]
  %44 = or i64 %22, 1
  %45 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %44) #13
  %46 = load i8, i8* %45, align 1
  %47 = icmp sgt i8 %46, 47
  br i1 %47, label %48, label %75

48:                                               ; preds = %41
  %49 = icmp slt i8 %46, 58
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = add nsw i8 %46, -48
  br label %63

52:                                               ; preds = %48
  %53 = add nsw i8 %46, -97
  %54 = icmp ult i8 %53, 6
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = add nsw i8 %46, -87
  br label %63

57:                                               ; preds = %52
  %58 = add nsw i8 %46, -65
  %59 = icmp ult i8 %58, 6
  %60 = add nsw i8 %46, -55
  %61 = zext i1 %59 to i16
  %62 = select i1 %59, i8 %60, i8 0
  br label %63

63:                                               ; preds = %57, %55, %50
  %64 = phi i16 [ 1, %50 ], [ 1, %55 ], [ %61, %57 ]
  %65 = phi i8 [ %51, %50 ], [ %56, %55 ], [ %62, %57 ]
  %66 = icmp ne i16 %42, 0
  %67 = icmp ne i16 %64, 0
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  %70 = shl i8 %43, 4
  %71 = or i8 %65, %70
  store i8 %71, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %19, align 8
  %72 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSEOh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  %73 = add nuw nsw i64 %21, 1
  %74 = icmp eq i64 %73, %15
  br i1 %74, label %75, label %20

75:                                               ; preds = %41, %63, %69, %3, %14
  %76 = phi i1 [ false, %3 ], [ true, %14 ], [ true, %69 ], [ false, %63 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base17HexStringToStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = icmp ne i64 %1, 0
  %9 = and i64 %1, 1
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %69

12:                                               ; preds = %3
  %13 = lshr i64 %1, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %69, label %15

15:                                               ; preds = %12, %64
  %16 = phi i64 [ %67, %64 ], [ 0, %12 ]
  %17 = shl nuw i64 %16, 1
  %18 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %17) #13
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, 47
  br i1 %20, label %21, label %36

21:                                               ; preds = %15
  %22 = icmp slt i8 %19, 58
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = add nsw i8 %19, -48
  br label %36

25:                                               ; preds = %21
  %26 = add nsw i8 %19, -97
  %27 = icmp ult i8 %26, 6
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = add nsw i8 %19, -87
  br label %36

30:                                               ; preds = %25
  %31 = add nsw i8 %19, -65
  %32 = icmp ult i8 %31, 6
  %33 = add nsw i8 %19, -55
  %34 = zext i1 %32 to i16
  %35 = select i1 %32, i8 %33, i8 0
  br label %36

36:                                               ; preds = %30, %28, %23, %15
  %37 = phi i16 [ 1, %23 ], [ 1, %28 ], [ 0, %15 ], [ %34, %30 ]
  %38 = phi i8 [ %24, %23 ], [ %29, %28 ], [ 0, %15 ], [ %35, %30 ]
  %39 = or i64 %17, 1
  %40 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %39) #13
  %41 = load i8, i8* %40, align 1
  %42 = icmp sgt i8 %41, 47
  br i1 %42, label %43, label %69

43:                                               ; preds = %36
  %44 = icmp slt i8 %41, 58
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = add nsw i8 %41, -48
  br label %58

47:                                               ; preds = %43
  %48 = add nsw i8 %41, -97
  %49 = icmp ult i8 %48, 6
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = add nsw i8 %41, -87
  br label %58

52:                                               ; preds = %47
  %53 = add nsw i8 %41, -65
  %54 = icmp ult i8 %53, 6
  %55 = add nsw i8 %41, -55
  %56 = zext i1 %54 to i16
  %57 = select i1 %54, i8 %55, i8 0
  br label %58

58:                                               ; preds = %52, %50, %45
  %59 = phi i16 [ 1, %45 ], [ 1, %50 ], [ %56, %52 ]
  %60 = phi i8 [ %46, %45 ], [ %51, %50 ], [ %57, %52 ]
  %61 = icmp ne i16 %37, 0
  %62 = icmp ne i16 %59, 0
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  %65 = shl i8 %38, 4
  %66 = or i8 %60, %65
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext %66) #13
  %67 = add nuw nsw i64 %16, 1
  %68 = icmp eq i64 %67, %13
  br i1 %68, label %69, label %15

69:                                               ; preds = %36, %58, %64, %3, %12
  %70 = phi i1 [ false, %3 ], [ true, %12 ], [ true, %64 ], [ false, %58 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15HexStringToSpanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_4spanIhLm18446744073709551615EEE(i8*, i64, i64, i8*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = lshr i64 %1, 1
  %10 = icmp eq i64 %9, %2
  br i1 %10, label %11, label %84

11:                                               ; preds = %4
  %12 = getelementptr inbounds i8, i8* %3, i64 %2
  call void @_ZN4base25CheckedContiguousIteratorIhEC2EPKhPhS3_(%"class.base::CheckedContiguousIterator"* nonnull %8, i8* %3, i8* %3, i8* %12) #13
  %13 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %15, i64 24, i1 false) #13
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %16, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %17, align 8
  %18 = icmp ne i64 %1, 0
  %19 = and i64 %1, 1
  %20 = icmp eq i64 %19, 0
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %82

22:                                               ; preds = %11
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %82, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  br label %26

26:                                               ; preds = %75, %24
  %27 = phi i64 [ 0, %24 ], [ %80, %75 ]
  %28 = shl nuw i64 %27, 1
  %29 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %28) #13
  %30 = load i8, i8* %29, align 1
  %31 = icmp sgt i8 %30, 47
  br i1 %31, label %32, label %47

32:                                               ; preds = %26
  %33 = icmp slt i8 %30, 58
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = add nsw i8 %30, -48
  br label %47

36:                                               ; preds = %32
  %37 = add nsw i8 %30, -97
  %38 = icmp ult i8 %37, 6
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = add nsw i8 %30, -87
  br label %47

41:                                               ; preds = %36
  %42 = add nsw i8 %30, -65
  %43 = icmp ult i8 %42, 6
  %44 = add nsw i8 %30, -55
  %45 = zext i1 %43 to i16
  %46 = select i1 %43, i8 %44, i8 0
  br label %47

47:                                               ; preds = %41, %39, %34, %26
  %48 = phi i16 [ 1, %34 ], [ 1, %39 ], [ 0, %26 ], [ %45, %41 ]
  %49 = phi i8 [ %35, %34 ], [ %40, %39 ], [ 0, %26 ], [ %46, %41 ]
  %50 = or i64 %28, 1
  %51 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %50) #13
  %52 = load i8, i8* %51, align 1
  %53 = icmp sgt i8 %52, 47
  br i1 %53, label %54, label %82

54:                                               ; preds = %47
  %55 = icmp slt i8 %52, 58
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = add nsw i8 %52, -48
  br label %69

58:                                               ; preds = %54
  %59 = add nsw i8 %52, -97
  %60 = icmp ult i8 %59, 6
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = add nsw i8 %52, -87
  br label %69

63:                                               ; preds = %58
  %64 = add nsw i8 %52, -65
  %65 = icmp ult i8 %64, 6
  %66 = add nsw i8 %52, -55
  %67 = zext i1 %65 to i16
  %68 = select i1 %65, i8 %66, i8 0
  br label %69

69:                                               ; preds = %63, %61, %56
  %70 = phi i16 [ 1, %56 ], [ 1, %61 ], [ %67, %63 ]
  %71 = phi i8 [ %57, %56 ], [ %62, %61 ], [ %68, %63 ]
  %72 = icmp ne i16 %48, 0
  %73 = icmp ne i16 %70, 0
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %82

75:                                               ; preds = %69
  %76 = shl i8 %49, 4
  %77 = or i8 %71, %76
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %13, i64 24, i1 false) #13
  %78 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #13, !noalias !49
  %79 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #13
  store i8 %77, i8* %79, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  %80 = add nuw nsw i64 %27, 1
  %81 = icmp eq i64 %80, %2
  br i1 %81, label %82, label %26

82:                                               ; preds = %47, %69, %75, %11, %22
  %83 = phi i1 [ false, %11 ], [ true, %22 ], [ true, %75 ], [ false, %69 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  br label %84

84:                                               ; preds = %4, %82
  %85 = phi i1 [ %83, %82 ], [ false, %4 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIhEC2EPKhPhS3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !52
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

declare zeroext i1 @_ZNK17double_conversion23DoubleToStringConverter20ToShortestIeeeNumberEdPNS_13StringBuilderENS0_8DtoaModeE(%"class.double_conversion::DoubleToStringConverter"*, double, %"class.double_conversion::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal14StringToNumberIiLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8*, i64) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds i8, i8* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %81, label %5

5:                                                ; preds = %2
  %6 = tail call i16** @__ctype_b_loc() #16
  %7 = load i16*, i16** %6, align 8
  %8 = load i8, i8* %0, align 1
  %9 = zext i8 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 8192
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %25, label %21

14:                                               ; preds = %21
  %15 = load i8, i8* %23, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds i16, i16* %7, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, 8192
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %5, %14
  %22 = phi i8* [ %23, %14 ], [ %0, %5 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = icmp eq i8* %23, %3
  br i1 %24, label %123, label %14

25:                                               ; preds = %14, %5
  %26 = phi i64 [ 4294967296, %5 ], [ 0, %14 ]
  %27 = phi i8* [ %0, %5 ], [ %23, %14 ]
  %28 = phi i8 [ %8, %5 ], [ %15, %14 ]
  %29 = icmp eq i8 %28, 45
  br i1 %29, label %30, label %77

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = icmp eq i8* %31, %3
  br i1 %32, label %73, label %33

33:                                               ; preds = %30, %59
  %34 = phi i64 [ %63, %59 ], [ 1, %30 ]
  %35 = phi i32 [ %62, %59 ], [ 0, %30 ]
  %36 = getelementptr inbounds i8, i8* %27, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = add i8 %37, -48
  %39 = icmp ult i8 %38, 10
  br i1 %39, label %40, label %69

40:                                               ; preds = %33
  %41 = icmp eq i64 %34, 1
  br i1 %41, label %59, label %42

42:                                               ; preds = %40
  %43 = icmp slt i32 %35, -214748364
  br i1 %43, label %51, label %44

44:                                               ; preds = %42
  %45 = icmp eq i32 %35, -214748364
  %46 = icmp ugt i8 %38, 8
  %47 = and i1 %45, %46
  %48 = zext i32 %35 to i64
  %49 = select i1 %47, i64 2147483648, i64 %48
  %50 = select i1 %47, i64 0, i64 4294967296
  br label %51

51:                                               ; preds = %44, %42
  %52 = phi i64 [ 2147483648, %42 ], [ %49, %44 ]
  %53 = phi i64 [ 0, %42 ], [ %50, %44 ]
  %54 = or i64 %53, %52
  %55 = and i64 %54, 4294967296
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = mul nsw i32 %35, 10
  br label %59

59:                                               ; preds = %57, %40
  %60 = phi i32 [ %58, %57 ], [ %35, %40 ]
  %61 = zext i8 %38 to i32
  %62 = sub nsw i32 %60, %61
  %63 = add nuw nsw i64 %34, 1
  %64 = getelementptr inbounds i8, i8* %27, i64 %63
  %65 = icmp eq i8* %64, %3
  br i1 %65, label %69, label %33

66:                                               ; preds = %51
  %67 = trunc i64 %52 to i32
  %68 = and i64 %54, 1095216660480
  br label %69

69:                                               ; preds = %33, %59, %66
  %70 = phi i32 [ %67, %66 ], [ %35, %33 ], [ %62, %59 ]
  %71 = phi i64 [ %68, %66 ], [ 0, %33 ], [ 4294967296, %59 ]
  %72 = zext i32 %70 to i64
  br label %73

73:                                               ; preds = %30, %69
  %74 = phi i64 [ 0, %30 ], [ %71, %69 ]
  %75 = phi i64 [ 0, %30 ], [ %72, %69 ]
  %76 = or i64 %74, %75
  br label %128

77:                                               ; preds = %25
  %78 = icmp eq i8 %28, 43
  %79 = getelementptr inbounds i8, i8* %27, i64 1
  %80 = select i1 %78, i8* %79, i8* %27
  br label %81

81:                                               ; preds = %2, %77
  %82 = phi i64 [ %26, %77 ], [ 4294967296, %2 ]
  %83 = phi i8* [ %80, %77 ], [ %0, %2 ]
  %84 = icmp eq i8* %83, %3
  br i1 %84, label %123, label %85

85:                                               ; preds = %81, %110
  %86 = phi i8* [ %114, %110 ], [ %83, %81 ]
  %87 = phi i32 [ %113, %110 ], [ 0, %81 ]
  %88 = load i8, i8* %86, align 1
  %89 = add i8 %88, -48
  %90 = icmp ult i8 %89, 10
  br i1 %90, label %91, label %119

91:                                               ; preds = %85
  %92 = icmp eq i8* %86, %83
  br i1 %92, label %110, label %93

93:                                               ; preds = %91
  %94 = icmp sgt i32 %87, 214748364
  br i1 %94, label %102, label %95

95:                                               ; preds = %93
  %96 = icmp eq i32 %87, 214748364
  %97 = icmp ugt i8 %89, 7
  %98 = and i1 %96, %97
  %99 = zext i32 %87 to i64
  %100 = select i1 %98, i64 2147483647, i64 %99
  %101 = select i1 %98, i64 0, i64 4294967296
  br label %102

102:                                              ; preds = %95, %93
  %103 = phi i64 [ 2147483647, %93 ], [ %100, %95 ]
  %104 = phi i64 [ 0, %93 ], [ %101, %95 ]
  %105 = or i64 %104, %103
  %106 = and i64 %105, 4294967296
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %102
  %109 = mul nsw i32 %87, 10
  br label %110

110:                                              ; preds = %108, %91
  %111 = phi i32 [ %109, %108 ], [ %87, %91 ]
  %112 = zext i8 %89 to i32
  %113 = add nsw i32 %111, %112
  %114 = getelementptr inbounds i8, i8* %86, i64 1
  %115 = icmp eq i8* %114, %3
  br i1 %115, label %119, label %85

116:                                              ; preds = %102
  %117 = trunc i64 %103 to i32
  %118 = and i64 %105, 1095216660480
  br label %119

119:                                              ; preds = %85, %110, %116
  %120 = phi i32 [ %117, %116 ], [ %87, %85 ], [ %113, %110 ]
  %121 = phi i64 [ %118, %116 ], [ 0, %85 ], [ 4294967296, %110 ]
  %122 = zext i32 %120 to i64
  br label %123

123:                                              ; preds = %21, %81, %119
  %124 = phi i64 [ %82, %81 ], [ %82, %119 ], [ 0, %21 ]
  %125 = phi i64 [ 0, %81 ], [ %121, %119 ], [ 0, %21 ]
  %126 = phi i64 [ 0, %81 ], [ %122, %119 ], [ 0, %21 ]
  %127 = or i64 %125, %126
  br label %128

128:                                              ; preds = %123, %73
  %129 = phi i64 [ %26, %73 ], [ %124, %123 ]
  %130 = phi i64 [ %76, %73 ], [ %127, %123 ]
  %131 = or i64 %129, -1095216660481
  %132 = and i64 %130, %131
  ret i64 %132
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal14StringToNumberIiLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i16*, i64) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds i16, i16* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %79, label %5

5:                                                ; preds = %2
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = tail call i32 @iswspace(i32 %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %15

10:                                               ; preds = %15
  %11 = load i16, i16* %17, align 2
  %12 = zext i16 %11 to i32
  %13 = tail call i32 @iswspace(i32 %12) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %5, %10
  %16 = phi i16* [ %17, %10 ], [ %0, %5 ]
  %17 = getelementptr inbounds i16, i16* %16, i64 1
  %18 = icmp eq i16* %17, %3
  br i1 %18, label %125, label %10

19:                                               ; preds = %10, %5
  %20 = phi i64 [ 4294967296, %5 ], [ 0, %10 ]
  %21 = phi i16* [ %0, %5 ], [ %17, %10 ]
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 45
  br i1 %23, label %24, label %75

24:                                               ; preds = %19
  %25 = getelementptr inbounds i16, i16* %21, i64 1
  %26 = icmp eq i16* %25, %3
  br i1 %26, label %71, label %27

27:                                               ; preds = %24, %57
  %28 = phi i64 [ %61, %57 ], [ 1, %24 ]
  %29 = phi i32 [ %60, %57 ], [ 0, %24 ]
  %30 = getelementptr inbounds i16, i16* %21, i64 %28
  %31 = load i16, i16* %30, align 2
  %32 = add i16 %31, -48
  %33 = icmp ult i16 %32, 10
  %34 = shl i16 %31, 8
  %35 = add i16 %34, -12288
  %36 = lshr exact i16 %35, 8
  %37 = trunc i16 %36 to i8
  br i1 %33, label %38, label %67

38:                                               ; preds = %27
  %39 = icmp eq i64 %28, 1
  br i1 %39, label %57, label %40

40:                                               ; preds = %38
  %41 = icmp slt i32 %29, -214748364
  br i1 %41, label %49, label %42

42:                                               ; preds = %40
  %43 = icmp eq i32 %29, -214748364
  %44 = icmp ugt i8 %37, 8
  %45 = and i1 %43, %44
  %46 = zext i32 %29 to i64
  %47 = select i1 %45, i64 2147483648, i64 %46
  %48 = select i1 %45, i64 0, i64 4294967296
  br label %49

49:                                               ; preds = %42, %40
  %50 = phi i64 [ 2147483648, %40 ], [ %47, %42 ]
  %51 = phi i64 [ 0, %40 ], [ %48, %42 ]
  %52 = or i64 %51, %50
  %53 = and i64 %52, 4294967296
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %49
  %56 = mul nsw i32 %29, 10
  br label %57

57:                                               ; preds = %55, %38
  %58 = phi i32 [ %56, %55 ], [ %29, %38 ]
  %59 = zext i16 %36 to i32
  %60 = sub nsw i32 %58, %59
  %61 = add nuw nsw i64 %28, 1
  %62 = getelementptr inbounds i16, i16* %21, i64 %61
  %63 = icmp eq i16* %62, %3
  br i1 %63, label %67, label %27

64:                                               ; preds = %49
  %65 = trunc i64 %50 to i32
  %66 = and i64 %52, 1095216660480
  br label %67

67:                                               ; preds = %27, %57, %64
  %68 = phi i32 [ %65, %64 ], [ %29, %27 ], [ %60, %57 ]
  %69 = phi i64 [ %66, %64 ], [ 0, %27 ], [ 4294967296, %57 ]
  %70 = zext i32 %68 to i64
  br label %71

71:                                               ; preds = %24, %67
  %72 = phi i64 [ 0, %24 ], [ %69, %67 ]
  %73 = phi i64 [ 0, %24 ], [ %70, %67 ]
  %74 = or i64 %72, %73
  br label %130

75:                                               ; preds = %19
  %76 = icmp eq i16 %22, 43
  %77 = getelementptr inbounds i16, i16* %21, i64 1
  %78 = select i1 %76, i16* %77, i16* %21
  br label %79

79:                                               ; preds = %2, %75
  %80 = phi i64 [ %20, %75 ], [ 4294967296, %2 ]
  %81 = phi i16* [ %78, %75 ], [ %0, %2 ]
  %82 = icmp eq i16* %81, %3
  br i1 %82, label %125, label %83

83:                                               ; preds = %79, %112
  %84 = phi i16* [ %116, %112 ], [ %81, %79 ]
  %85 = phi i32 [ %115, %112 ], [ 0, %79 ]
  %86 = load i16, i16* %84, align 2
  %87 = add i16 %86, -48
  %88 = icmp ult i16 %87, 10
  %89 = shl i16 %86, 8
  %90 = add i16 %89, -12288
  %91 = lshr exact i16 %90, 8
  %92 = trunc i16 %91 to i8
  br i1 %88, label %93, label %121

93:                                               ; preds = %83
  %94 = icmp eq i16* %84, %81
  br i1 %94, label %112, label %95

95:                                               ; preds = %93
  %96 = icmp sgt i32 %85, 214748364
  br i1 %96, label %104, label %97

97:                                               ; preds = %95
  %98 = icmp eq i32 %85, 214748364
  %99 = icmp ugt i8 %92, 7
  %100 = and i1 %98, %99
  %101 = zext i32 %85 to i64
  %102 = select i1 %100, i64 2147483647, i64 %101
  %103 = select i1 %100, i64 0, i64 4294967296
  br label %104

104:                                              ; preds = %97, %95
  %105 = phi i64 [ 2147483647, %95 ], [ %102, %97 ]
  %106 = phi i64 [ 0, %95 ], [ %103, %97 ]
  %107 = or i64 %106, %105
  %108 = and i64 %107, 4294967296
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %104
  %111 = mul nsw i32 %85, 10
  br label %112

112:                                              ; preds = %110, %93
  %113 = phi i32 [ %111, %110 ], [ %85, %93 ]
  %114 = zext i16 %91 to i32
  %115 = add nsw i32 %113, %114
  %116 = getelementptr inbounds i16, i16* %84, i64 1
  %117 = icmp eq i16* %116, %3
  br i1 %117, label %121, label %83

118:                                              ; preds = %104
  %119 = trunc i64 %105 to i32
  %120 = and i64 %107, 1095216660480
  br label %121

121:                                              ; preds = %83, %112, %118
  %122 = phi i32 [ %119, %118 ], [ %85, %83 ], [ %115, %112 ]
  %123 = phi i64 [ %120, %118 ], [ 0, %83 ], [ 4294967296, %112 ]
  %124 = zext i32 %122 to i64
  br label %125

125:                                              ; preds = %15, %79, %121
  %126 = phi i64 [ %80, %79 ], [ %80, %121 ], [ 0, %15 ]
  %127 = phi i64 [ 0, %79 ], [ %123, %121 ], [ 0, %15 ]
  %128 = phi i64 [ 0, %79 ], [ %124, %121 ], [ 0, %15 ]
  %129 = or i64 %127, %128
  br label %130

130:                                              ; preds = %125, %71
  %131 = phi i64 [ %20, %71 ], [ %126, %125 ]
  %132 = phi i64 [ %74, %71 ], [ %129, %125 ]
  %133 = or i64 %131, -1095216660481
  %134 = and i64 %132, %133
  ret i64 %134
}

; Function Attrs: nounwind
declare i32 @iswspace(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4base8internal14StringToNumberIlLi10EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8*, i64) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds i8, i8* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %61, label %5

5:                                                ; preds = %2
  %6 = tail call i16** @__ctype_b_loc() #16
  %7 = load i16*, i16** %6, align 8
  %8 = load i8, i8* %0, align 1
  %9 = zext i8 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 8192
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %25, label %21

14:                                               ; preds = %21
  %15 = load i8, i8* %23, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds i16, i16* %7, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, 8192
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %5, %14
  %22 = phi i8* [ %23, %14 ], [ %0, %5 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = icmp eq i8* %23, %3
  br i1 %24, label %87, label %14

25:                                               ; preds = %14, %5
  %26 = phi i8 [ 1, %5 ], [ 0, %14 ]
  %27 = phi i8* [ %0, %5 ], [ %23, %14 ]
  %28 = phi i8 [ %8, %5 ], [ %15, %14 ]
  %29 = icmp eq i8 %28, 45
  br i1 %29, label %30, label %57

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = icmp eq i8* %31, %3
  br i1 %32, label %87, label %33

33:                                               ; preds = %30, %50
  %34 = phi i64 [ %54, %50 ], [ 1, %30 ]
  %35 = phi i64 [ %53, %50 ], [ 0, %30 ]
  %36 = getelementptr inbounds i8, i8* %27, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = add i8 %37, -48
  %39 = icmp ult i8 %38, 10
  br i1 %39, label %40, label %87

40:                                               ; preds = %33
  %41 = icmp eq i64 %34, 1
  br i1 %41, label %50, label %42

42:                                               ; preds = %40
  %43 = icmp slt i64 %35, -922337203685477580
  br i1 %43, label %87, label %44

44:                                               ; preds = %42
  %45 = icmp eq i64 %35, -922337203685477580
  %46 = icmp ugt i8 %38, 8
  %47 = and i1 %45, %46
  br i1 %47, label %87, label %48

48:                                               ; preds = %44
  %49 = mul nsw i64 %35, 10
  br label %50

50:                                               ; preds = %48, %40
  %51 = phi i64 [ %49, %48 ], [ %35, %40 ]
  %52 = zext i8 %38 to i64
  %53 = sub nsw i64 %51, %52
  %54 = add nuw nsw i64 %34, 1
  %55 = getelementptr inbounds i8, i8* %27, i64 %54
  %56 = icmp eq i8* %55, %3
  br i1 %56, label %87, label %33

57:                                               ; preds = %25
  %58 = icmp eq i8 %28, 43
  %59 = getelementptr inbounds i8, i8* %27, i64 1
  %60 = select i1 %58, i8* %59, i8* %27
  br label %61

61:                                               ; preds = %2, %57
  %62 = phi i8 [ %26, %57 ], [ 1, %2 ]
  %63 = phi i8* [ %60, %57 ], [ %0, %2 ]
  %64 = icmp eq i8* %63, %3
  br i1 %64, label %87, label %65

65:                                               ; preds = %61, %81
  %66 = phi i8* [ %85, %81 ], [ %63, %61 ]
  %67 = phi i64 [ %84, %81 ], [ 0, %61 ]
  %68 = load i8, i8* %66, align 1
  %69 = add i8 %68, -48
  %70 = icmp ult i8 %69, 10
  br i1 %70, label %71, label %87

71:                                               ; preds = %65
  %72 = icmp eq i8* %66, %63
  br i1 %72, label %81, label %73

73:                                               ; preds = %71
  %74 = icmp sgt i64 %67, 922337203685477580
  br i1 %74, label %87, label %75

75:                                               ; preds = %73
  %76 = icmp eq i64 %67, 922337203685477580
  %77 = icmp ugt i8 %69, 7
  %78 = and i1 %76, %77
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  %80 = mul nsw i64 %67, 10
  br label %81

81:                                               ; preds = %79, %71
  %82 = phi i64 [ %80, %79 ], [ %67, %71 ]
  %83 = zext i8 %69 to i64
  %84 = add nsw i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %66, i64 1
  %86 = icmp eq i8* %85, %3
  br i1 %86, label %87, label %65

87:                                               ; preds = %21, %33, %42, %50, %44, %65, %73, %81, %75, %61, %30
  %88 = phi i8 [ %26, %30 ], [ %62, %61 ], [ %62, %75 ], [ %62, %81 ], [ %62, %73 ], [ %62, %65 ], [ %26, %44 ], [ %26, %50 ], [ %26, %42 ], [ %26, %33 ], [ 0, %21 ]
  %89 = phi i64 [ 0, %30 ], [ 0, %61 ], [ %67, %65 ], [ 9223372036854775807, %73 ], [ %84, %81 ], [ 9223372036854775807, %75 ], [ %35, %33 ], [ -9223372036854775808, %42 ], [ %53, %50 ], [ -9223372036854775808, %44 ], [ 0, %21 ]
  %90 = phi i8 [ 0, %30 ], [ 0, %61 ], [ 0, %65 ], [ 0, %73 ], [ 1, %81 ], [ 0, %75 ], [ 0, %33 ], [ 0, %42 ], [ 1, %50 ], [ 0, %44 ], [ 0, %21 ]
  %91 = and i8 %88, %90
  %92 = insertvalue { i64, i8 } undef, i64 %89, 0
  %93 = insertvalue { i64, i8 } %92, i8 %91, 1
  ret { i64, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4base8internal14StringToNumberIlLi10EDsEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i16*, i64) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds i16, i16* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %59, label %5

5:                                                ; preds = %2
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = tail call i32 @iswspace(i32 %7) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %15

10:                                               ; preds = %15
  %11 = load i16, i16* %17, align 2
  %12 = zext i16 %11 to i32
  %13 = tail call i32 @iswspace(i32 %12) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %5, %10
  %16 = phi i16* [ %17, %10 ], [ %0, %5 ]
  %17 = getelementptr inbounds i16, i16* %16, i64 1
  %18 = icmp eq i16* %17, %3
  br i1 %18, label %89, label %10

19:                                               ; preds = %10, %5
  %20 = phi i8 [ 1, %5 ], [ 0, %10 ]
  %21 = phi i16* [ %0, %5 ], [ %17, %10 ]
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 45
  br i1 %23, label %24, label %55

24:                                               ; preds = %19
  %25 = getelementptr inbounds i16, i16* %21, i64 1
  %26 = icmp eq i16* %25, %3
  br i1 %26, label %89, label %27

27:                                               ; preds = %24, %48
  %28 = phi i64 [ %52, %48 ], [ 1, %24 ]
  %29 = phi i64 [ %51, %48 ], [ 0, %24 ]
  %30 = getelementptr inbounds i16, i16* %21, i64 %28
  %31 = load i16, i16* %30, align 2
  %32 = add i16 %31, -48
  %33 = icmp ult i16 %32, 10
  %34 = shl i16 %31, 8
  %35 = add i16 %34, -12288
  %36 = lshr exact i16 %35, 8
  %37 = trunc i16 %36 to i8
  br i1 %33, label %38, label %89

38:                                               ; preds = %27
  %39 = icmp eq i64 %28, 1
  br i1 %39, label %48, label %40

40:                                               ; preds = %38
  %41 = icmp slt i64 %29, -922337203685477580
  br i1 %41, label %89, label %42

42:                                               ; preds = %40
  %43 = icmp eq i64 %29, -922337203685477580
  %44 = icmp ugt i8 %37, 8
  %45 = and i1 %43, %44
  br i1 %45, label %89, label %46

46:                                               ; preds = %42
  %47 = mul nsw i64 %29, 10
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i64 [ %47, %46 ], [ %29, %38 ]
  %50 = zext i16 %36 to i64
  %51 = sub nsw i64 %49, %50
  %52 = add nuw nsw i64 %28, 1
  %53 = getelementptr inbounds i16, i16* %21, i64 %52
  %54 = icmp eq i16* %53, %3
  br i1 %54, label %89, label %27

55:                                               ; preds = %19
  %56 = icmp eq i16 %22, 43
  %57 = getelementptr inbounds i16, i16* %21, i64 1
  %58 = select i1 %56, i16* %57, i16* %21
  br label %59

59:                                               ; preds = %2, %55
  %60 = phi i8 [ %20, %55 ], [ 1, %2 ]
  %61 = phi i16* [ %58, %55 ], [ %0, %2 ]
  %62 = icmp eq i16* %61, %3
  br i1 %62, label %89, label %63

63:                                               ; preds = %59, %83
  %64 = phi i16* [ %87, %83 ], [ %61, %59 ]
  %65 = phi i64 [ %86, %83 ], [ 0, %59 ]
  %66 = load i16, i16* %64, align 2
  %67 = add i16 %66, -48
  %68 = icmp ult i16 %67, 10
  %69 = shl i16 %66, 8
  %70 = add i16 %69, -12288
  %71 = lshr exact i16 %70, 8
  %72 = trunc i16 %71 to i8
  br i1 %68, label %73, label %89

73:                                               ; preds = %63
  %74 = icmp eq i16* %64, %61
  br i1 %74, label %83, label %75

75:                                               ; preds = %73
  %76 = icmp sgt i64 %65, 922337203685477580
  br i1 %76, label %89, label %77

77:                                               ; preds = %75
  %78 = icmp eq i64 %65, 922337203685477580
  %79 = icmp ugt i8 %72, 7
  %80 = and i1 %78, %79
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = mul nsw i64 %65, 10
  br label %83

83:                                               ; preds = %81, %73
  %84 = phi i64 [ %82, %81 ], [ %65, %73 ]
  %85 = zext i16 %71 to i64
  %86 = add nsw i64 %84, %85
  %87 = getelementptr inbounds i16, i16* %64, i64 1
  %88 = icmp eq i16* %87, %3
  br i1 %88, label %89, label %63

89:                                               ; preds = %15, %27, %40, %48, %42, %63, %75, %83, %77, %59, %24
  %90 = phi i8 [ %20, %24 ], [ %60, %59 ], [ %60, %77 ], [ %60, %83 ], [ %60, %75 ], [ %60, %63 ], [ %20, %42 ], [ %20, %48 ], [ %20, %40 ], [ %20, %27 ], [ 0, %15 ]
  %91 = phi i64 [ 0, %24 ], [ 0, %59 ], [ %65, %63 ], [ 9223372036854775807, %75 ], [ %86, %83 ], [ 9223372036854775807, %77 ], [ %29, %27 ], [ -9223372036854775808, %40 ], [ %51, %48 ], [ -9223372036854775808, %42 ], [ 0, %15 ]
  %92 = phi i8 [ 0, %24 ], [ 0, %59 ], [ 0, %63 ], [ 0, %75 ], [ 1, %83 ], [ 0, %77 ], [ 0, %27 ], [ 0, %40 ], [ 1, %48 ], [ 0, %42 ], [ 0, %15 ]
  %93 = and i8 %90, %92
  %94 = insertvalue { i64, i8 } undef, i64 %91, 0
  %95 = insertvalue { i64, i8 } %94, i8 %93, 1
  ret { i64, i8 } %95
}

declare double @_ZNK17double_conversion23StringToDoubleConverter14StringToDoubleEPKciPi(%"class.double_conversion::StringToDoubleConverter"*, i8*, i32, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare double @_ZNK17double_conversion23StringToDoubleConverter14StringToDoubleEPKtiPi(%"class.double_conversion::StringToDoubleConverter"*, i16*, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(2) i16* @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE2atEm(%"class.base::BasicStringPiece.10"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8NegativeEE6InvokeIPKcEENS2_6ResultET_SA_(i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %0, %1
  br i1 %3, label %83, label %4

4:                                                ; preds = %2
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %0 to i64
  %7 = sub i64 %5, %6
  %8 = icmp sgt i64 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 48
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %17 [
    i8 120, label %15
    i8 88, label %15
  ]

15:                                               ; preds = %12, %12
  %16 = getelementptr inbounds i8, i8* %0, i64 2
  br label %17

17:                                               ; preds = %12, %15, %9, %4
  %18 = phi i8* [ %16, %15 ], [ %0, %9 ], [ %0, %4 ], [ %0, %12 ]
  %19 = icmp eq i8* %18, %1
  br i1 %19, label %76, label %20

20:                                               ; preds = %17, %63
  %21 = phi i8* [ %71, %63 ], [ %18, %17 ]
  %22 = phi i32 [ %70, %63 ], [ 0, %17 ]
  %23 = phi i8 [ %66, %63 ], [ undef, %17 ]
  %24 = phi i8 [ %65, %63 ], [ undef, %17 ]
  %25 = phi i8 [ %64, %63 ], [ undef, %17 ]
  %26 = load i8, i8* %21, align 1
  %27 = sext i8 %26 to i16
  %28 = icmp sgt i8 %26, 47
  br i1 %28, label %29, label %76

29:                                               ; preds = %20
  %30 = icmp slt i8 %26, 58
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = add nsw i8 %26, -97
  %33 = icmp ult i8 %32, 6
  br i1 %33, label %34, label %37

34:                                               ; preds = %31, %29
  %35 = phi i16 [ -48, %29 ], [ -87, %31 ]
  %36 = add nsw i16 %35, %27
  br label %42

37:                                               ; preds = %31
  %38 = add nsw i8 %26, -65
  %39 = icmp ult i8 %38, 6
  %40 = add nsw i16 %27, -55
  %41 = select i1 %39, i16 %40, i16 0
  br i1 %39, label %42, label %76

42:                                               ; preds = %37, %34
  %43 = phi i16 [ %36, %34 ], [ %41, %37 ]
  %44 = trunc i16 %43 to i8
  %45 = icmp eq i8* %21, %18
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = icmp slt i32 %22, -134217728
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = icmp ne i32 %22, -134217728
  %50 = icmp eq i8 %44, 0
  %51 = or i1 %49, %50
  %52 = zext i32 %22 to i64
  %53 = select i1 %51, i64 %52, i64 2147483648
  %54 = select i1 %51, i64 4294967296, i64 0
  br label %55

55:                                               ; preds = %46, %48
  %56 = phi i64 [ 2147483648, %46 ], [ %53, %48 ]
  %57 = phi i64 [ 0, %46 ], [ %54, %48 ]
  %58 = or i64 %57, %56
  %59 = and i64 %58, 4294967296
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = shl nsw i32 %22, 4
  br label %63

63:                                               ; preds = %61, %42
  %64 = phi i8 [ 0, %61 ], [ %25, %42 ]
  %65 = phi i8 [ 0, %61 ], [ %24, %42 ]
  %66 = phi i8 [ 0, %61 ], [ %23, %42 ]
  %67 = phi i32 [ %62, %61 ], [ %22, %42 ]
  %68 = and i16 %43, 255
  %69 = zext i16 %68 to i32
  %70 = sub nsw i32 %67, %69
  %71 = getelementptr inbounds i8, i8* %21, i64 1
  %72 = icmp eq i8* %71, %1
  br i1 %72, label %76, label %20

73:                                               ; preds = %55
  %74 = trunc i64 %56 to i32
  %75 = and i64 %58, 1095216660480
  br label %76

76:                                               ; preds = %63, %20, %37, %73, %17
  %77 = phi i32 [ 0, %17 ], [ %74, %73 ], [ %70, %63 ], [ %22, %37 ], [ %22, %20 ]
  %78 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %64, %63 ], [ %25, %37 ], [ %25, %20 ]
  %79 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %65, %63 ], [ %24, %37 ], [ %24, %20 ]
  %80 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %66, %63 ], [ %23, %37 ], [ %23, %20 ]
  %81 = phi i64 [ 4294967296, %17 ], [ %75, %73 ], [ 4294967296, %63 ], [ 0, %37 ], [ 0, %20 ]
  %82 = zext i32 %77 to i64
  br label %83

83:                                               ; preds = %76, %2
  %84 = phi i8 [ undef, %2 ], [ %78, %76 ]
  %85 = phi i8 [ undef, %2 ], [ %79, %76 ]
  %86 = phi i64 [ 0, %2 ], [ %81, %76 ]
  %87 = phi i64 [ 0, %2 ], [ %82, %76 ]
  %88 = phi i8 [ undef, %2 ], [ %80, %76 ]
  %89 = zext i8 %88 to i64
  %90 = shl nuw i64 %89, 56
  %91 = zext i8 %84 to i64
  %92 = shl nuw nsw i64 %91, 48
  %93 = zext i8 %85 to i64
  %94 = shl nuw nsw i64 %93, 40
  %95 = or i64 %86, %92
  %96 = or i64 %95, %94
  %97 = or i64 %96, %87
  %98 = or i64 %97, %90
  ret i64 %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal20StringToNumberParserIiLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_(i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %0, %1
  br i1 %3, label %83, label %4

4:                                                ; preds = %2
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %0 to i64
  %7 = sub i64 %5, %6
  %8 = icmp sgt i64 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 48
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %17 [
    i8 120, label %15
    i8 88, label %15
  ]

15:                                               ; preds = %12, %12
  %16 = getelementptr inbounds i8, i8* %0, i64 2
  br label %17

17:                                               ; preds = %12, %15, %9, %4
  %18 = phi i8* [ %16, %15 ], [ %0, %9 ], [ %0, %4 ], [ %0, %12 ]
  %19 = icmp eq i8* %18, %1
  br i1 %19, label %76, label %20

20:                                               ; preds = %17, %63
  %21 = phi i8* [ %71, %63 ], [ %18, %17 ]
  %22 = phi i32 [ %70, %63 ], [ 0, %17 ]
  %23 = phi i8 [ %66, %63 ], [ undef, %17 ]
  %24 = phi i8 [ %65, %63 ], [ undef, %17 ]
  %25 = phi i8 [ %64, %63 ], [ undef, %17 ]
  %26 = load i8, i8* %21, align 1
  %27 = sext i8 %26 to i16
  %28 = icmp sgt i8 %26, 47
  br i1 %28, label %29, label %76

29:                                               ; preds = %20
  %30 = icmp slt i8 %26, 58
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = add nsw i8 %26, -97
  %33 = icmp ult i8 %32, 6
  br i1 %33, label %34, label %37

34:                                               ; preds = %31, %29
  %35 = phi i16 [ -48, %29 ], [ -87, %31 ]
  %36 = add nsw i16 %35, %27
  br label %42

37:                                               ; preds = %31
  %38 = add nsw i8 %26, -65
  %39 = icmp ult i8 %38, 6
  %40 = add nsw i16 %27, -55
  %41 = select i1 %39, i16 %40, i16 0
  br i1 %39, label %42, label %76

42:                                               ; preds = %37, %34
  %43 = phi i16 [ %36, %34 ], [ %41, %37 ]
  %44 = trunc i16 %43 to i8
  %45 = icmp eq i8* %21, %18
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = icmp sgt i32 %22, 134217727
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = icmp eq i32 %22, 134217727
  %50 = icmp ugt i8 %44, 15
  %51 = and i1 %49, %50
  %52 = zext i32 %22 to i64
  %53 = select i1 %51, i64 2147483647, i64 %52
  %54 = select i1 %51, i64 0, i64 4294967296
  br label %55

55:                                               ; preds = %46, %48
  %56 = phi i64 [ 2147483647, %46 ], [ %53, %48 ]
  %57 = phi i64 [ 0, %46 ], [ %54, %48 ]
  %58 = or i64 %57, %56
  %59 = and i64 %58, 4294967296
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = shl nsw i32 %22, 4
  br label %63

63:                                               ; preds = %61, %42
  %64 = phi i8 [ 0, %61 ], [ %25, %42 ]
  %65 = phi i8 [ 0, %61 ], [ %24, %42 ]
  %66 = phi i8 [ 0, %61 ], [ %23, %42 ]
  %67 = phi i32 [ %62, %61 ], [ %22, %42 ]
  %68 = and i16 %43, 255
  %69 = zext i16 %68 to i32
  %70 = add nsw i32 %67, %69
  %71 = getelementptr inbounds i8, i8* %21, i64 1
  %72 = icmp eq i8* %71, %1
  br i1 %72, label %76, label %20

73:                                               ; preds = %55
  %74 = trunc i64 %56 to i32
  %75 = and i64 %58, 1095216660480
  br label %76

76:                                               ; preds = %63, %20, %37, %73, %17
  %77 = phi i32 [ 0, %17 ], [ %74, %73 ], [ %70, %63 ], [ %22, %37 ], [ %22, %20 ]
  %78 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %64, %63 ], [ %25, %37 ], [ %25, %20 ]
  %79 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %65, %63 ], [ %24, %37 ], [ %24, %20 ]
  %80 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %66, %63 ], [ %23, %37 ], [ %23, %20 ]
  %81 = phi i64 [ 4294967296, %17 ], [ %75, %73 ], [ 4294967296, %63 ], [ 0, %37 ], [ 0, %20 ]
  %82 = zext i32 %77 to i64
  br label %83

83:                                               ; preds = %76, %2
  %84 = phi i8 [ undef, %2 ], [ %78, %76 ]
  %85 = phi i8 [ undef, %2 ], [ %79, %76 ]
  %86 = phi i64 [ 0, %2 ], [ %81, %76 ]
  %87 = phi i64 [ 0, %2 ], [ %82, %76 ]
  %88 = phi i8 [ undef, %2 ], [ %80, %76 ]
  %89 = zext i8 %88 to i64
  %90 = shl nuw i64 %89, 56
  %91 = zext i8 %84 to i64
  %92 = shl nuw nsw i64 %91, 48
  %93 = zext i8 %85 to i64
  %94 = shl nuw nsw i64 %93, 40
  %95 = or i64 %86, %92
  %96 = or i64 %95, %94
  %97 = or i64 %96, %87
  %98 = or i64 %97, %90
  ret i64 %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal20StringToNumberParserIjLi16EE4BaseINS2_8PositiveEE6InvokeIPKcEENS2_6ResultET_SA_(i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %0, %1
  br i1 %3, label %83, label %4

4:                                                ; preds = %2
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %0 to i64
  %7 = sub i64 %5, %6
  %8 = icmp sgt i64 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = load i8, i8* %0, align 1
  %11 = icmp eq i8 %10, 48
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %17 [
    i8 120, label %15
    i8 88, label %15
  ]

15:                                               ; preds = %12, %12
  %16 = getelementptr inbounds i8, i8* %0, i64 2
  br label %17

17:                                               ; preds = %12, %15, %9, %4
  %18 = phi i8* [ %16, %15 ], [ %0, %9 ], [ %0, %4 ], [ %0, %12 ]
  %19 = icmp eq i8* %18, %1
  br i1 %19, label %76, label %20

20:                                               ; preds = %17, %63
  %21 = phi i8* [ %71, %63 ], [ %18, %17 ]
  %22 = phi i32 [ %70, %63 ], [ 0, %17 ]
  %23 = phi i8 [ %66, %63 ], [ undef, %17 ]
  %24 = phi i8 [ %65, %63 ], [ undef, %17 ]
  %25 = phi i8 [ %64, %63 ], [ undef, %17 ]
  %26 = load i8, i8* %21, align 1
  %27 = sext i8 %26 to i16
  %28 = icmp sgt i8 %26, 47
  br i1 %28, label %29, label %76

29:                                               ; preds = %20
  %30 = icmp slt i8 %26, 58
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = add nsw i8 %26, -97
  %33 = icmp ult i8 %32, 6
  br i1 %33, label %34, label %37

34:                                               ; preds = %31, %29
  %35 = phi i16 [ -48, %29 ], [ -87, %31 ]
  %36 = add nsw i16 %35, %27
  br label %42

37:                                               ; preds = %31
  %38 = add nsw i8 %26, -65
  %39 = icmp ult i8 %38, 6
  %40 = add nsw i16 %27, -55
  %41 = select i1 %39, i16 %40, i16 0
  br i1 %39, label %42, label %76

42:                                               ; preds = %37, %34
  %43 = phi i16 [ %36, %34 ], [ %41, %37 ]
  %44 = trunc i16 %43 to i8
  %45 = icmp eq i8* %21, %18
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = icmp ugt i32 %22, 268435455
  br i1 %47, label %55, label %48

48:                                               ; preds = %46
  %49 = icmp eq i32 %22, 268435455
  %50 = icmp ugt i8 %44, 15
  %51 = and i1 %49, %50
  %52 = zext i32 %22 to i64
  %53 = select i1 %51, i64 4294967295, i64 %52
  %54 = select i1 %51, i64 0, i64 4294967296
  br label %55

55:                                               ; preds = %46, %48
  %56 = phi i64 [ 4294967295, %46 ], [ %53, %48 ]
  %57 = phi i64 [ 0, %46 ], [ %54, %48 ]
  %58 = or i64 %57, %56
  %59 = and i64 %58, 4294967296
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = shl i32 %22, 4
  br label %63

63:                                               ; preds = %61, %42
  %64 = phi i8 [ 0, %61 ], [ %25, %42 ]
  %65 = phi i8 [ 0, %61 ], [ %24, %42 ]
  %66 = phi i8 [ 0, %61 ], [ %23, %42 ]
  %67 = phi i32 [ %62, %61 ], [ %22, %42 ]
  %68 = and i16 %43, 255
  %69 = zext i16 %68 to i32
  %70 = add i32 %67, %69
  %71 = getelementptr inbounds i8, i8* %21, i64 1
  %72 = icmp eq i8* %71, %1
  br i1 %72, label %76, label %20

73:                                               ; preds = %55
  %74 = trunc i64 %56 to i32
  %75 = and i64 %58, 1095216660480
  br label %76

76:                                               ; preds = %63, %20, %37, %73, %17
  %77 = phi i32 [ 0, %17 ], [ %74, %73 ], [ %70, %63 ], [ %22, %37 ], [ %22, %20 ]
  %78 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %64, %63 ], [ %25, %37 ], [ %25, %20 ]
  %79 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %65, %63 ], [ %24, %37 ], [ %24, %20 ]
  %80 = phi i8 [ undef, %17 ], [ 0, %73 ], [ %66, %63 ], [ %23, %37 ], [ %23, %20 ]
  %81 = phi i64 [ 4294967296, %17 ], [ %75, %73 ], [ 4294967296, %63 ], [ 0, %37 ], [ 0, %20 ]
  %82 = zext i32 %77 to i64
  br label %83

83:                                               ; preds = %76, %2
  %84 = phi i8 [ undef, %2 ], [ %78, %76 ]
  %85 = phi i8 [ undef, %2 ], [ %79, %76 ]
  %86 = phi i64 [ 0, %2 ], [ %81, %76 ]
  %87 = phi i64 [ 0, %2 ], [ %82, %76 ]
  %88 = phi i8 [ undef, %2 ], [ %80, %76 ]
  %89 = zext i8 %88 to i64
  %90 = shl nuw i64 %89, 56
  %91 = zext i8 %84 to i64
  %92 = shl nuw nsw i64 %91, 48
  %93 = zext i8 %85 to i64
  %94 = shl nuw nsw i64 %93, 40
  %95 = or i64 %86, %92
  %96 = or i64 %95, %94
  %97 = or i64 %96, %87
  %98 = or i64 %97, %90
  ret i64 %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4base8internal14StringToNumberIlLi16EcEEDaNS_16BasicStringPieceIT1_NSt3__111char_traitsIS3_EEEE(i8*, i64) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds i8, i8* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %91, label %5

5:                                                ; preds = %2
  %6 = tail call i16** @__ctype_b_loc() #16
  %7 = load i16*, i16** %6, align 8
  %8 = load i8, i8* %0, align 1
  %9 = zext i8 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 8192
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %25, label %21

14:                                               ; preds = %21
  %15 = load i8, i8* %23, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds i16, i16* %7, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, 8192
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %5, %14
  %22 = phi i8* [ %23, %14 ], [ %0, %5 ]
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = icmp eq i8* %23, %3
  br i1 %24, label %149, label %14

25:                                               ; preds = %14, %5
  %26 = phi i8 [ 1, %5 ], [ 0, %14 ]
  %27 = phi i8* [ %0, %5 ], [ %23, %14 ]
  %28 = phi i8 [ %8, %5 ], [ %15, %14 ]
  %29 = icmp eq i8 %28, 45
  br i1 %29, label %30, label %87

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = icmp eq i8* %31, %3
  br i1 %32, label %149, label %33

33:                                               ; preds = %30
  %34 = ptrtoint i8* %3 to i64
  %35 = ptrtoint i8* %31 to i64
  %36 = sub i64 %34, %35
  %37 = icmp sgt i64 %36, 2
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = load i8, i8* %31, align 1
  %40 = icmp eq i8 %39, 48
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %27, i64 2
  %43 = load i8, i8* %42, align 1
  switch i8 %43, label %46 [
    i8 120, label %44
    i8 88, label %44
  ]

44:                                               ; preds = %41, %41
  %45 = getelementptr inbounds i8, i8* %27, i64 3
  br label %46

46:                                               ; preds = %44, %41, %38, %33
  %47 = phi i8* [ %45, %44 ], [ %31, %38 ], [ %31, %33 ], [ %31, %41 ]
  %48 = icmp eq i8* %47, %3
  br i1 %48, label %149, label %49

49:                                               ; preds = %46, %80
  %50 = phi i8* [ %85, %80 ], [ %47, %46 ]
  %51 = phi i64 [ %84, %80 ], [ 0, %46 ]
  %52 = load i8, i8* %50, align 1
  %53 = sext i8 %52 to i16
  %54 = icmp sgt i8 %52, 47
  br i1 %54, label %55, label %149

55:                                               ; preds = %49
  %56 = icmp slt i8 %52, 58
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = add nsw i16 %53, -48
  br label %68

59:                                               ; preds = %55
  %60 = add nsw i8 %52, -97
  %61 = icmp ult i8 %60, 6
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = add nsw i16 %53, -87
  br label %68

64:                                               ; preds = %59
  %65 = add nsw i8 %52, -65
  %66 = icmp ult i8 %65, 6
  %67 = add nsw i16 %53, -55
  br i1 %66, label %68, label %149

68:                                               ; preds = %57, %62, %64
  %69 = phi i16 [ %67, %64 ], [ %63, %62 ], [ %58, %57 ]
  %70 = trunc i16 %69 to i8
  %71 = icmp eq i8* %50, %47
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  %73 = icmp slt i64 %51, -576460752303423488
  br i1 %73, label %149, label %74

74:                                               ; preds = %72
  %75 = icmp ne i64 %51, -576460752303423488
  %76 = icmp eq i8 %70, 0
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %149

78:                                               ; preds = %74
  %79 = shl nsw i64 %51, 4
  br label %80

80:                                               ; preds = %78, %68
  %81 = phi i64 [ %79, %78 ], [ %51, %68 ]
  %82 = and i16 %69, 255
  %83 = zext i16 %82 to i64
  %84 = sub nsw i64 %81, %83
  %85 = getelementptr inbounds i8, i8* %50, i64 1
  %86 = icmp eq i8* %85, %3
  br i1 %86, label %149, label %49

87:                                               ; preds = %25
  %88 = icmp eq i8 %28, 43
  %89 = getelementptr inbounds i8, i8* %27, i64 1
  %90 = select i1 %88, i8* %89, i8* %27
  br label %91

91:                                               ; preds = %2, %87
  %92 = phi i8 [ %26, %87 ], [ 1, %2 ]
  %93 = phi i8* [ %90, %87 ], [ %0, %2 ]
  %94 = icmp eq i8* %93, %3
  br i1 %94, label %149, label %95

95:                                               ; preds = %91
  %96 = ptrtoint i8* %3 to i64
  %97 = ptrtoint i8* %93 to i64
  %98 = sub i64 %96, %97
  %99 = icmp sgt i64 %98, 2
  br i1 %99, label %100, label %108

100:                                              ; preds = %95
  %101 = load i8, i8* %93, align 1
  %102 = icmp eq i8 %101, 48
  br i1 %102, label %103, label %108

103:                                              ; preds = %100
  %104 = getelementptr inbounds i8, i8* %93, i64 1
  %105 = load i8, i8* %104, align 1
  switch i8 %105, label %108 [
    i8 120, label %106
    i8 88, label %106
  ]

106:                                              ; preds = %103, %103
  %107 = getelementptr inbounds i8, i8* %93, i64 2
  br label %108

108:                                              ; preds = %106, %103, %100, %95
  %109 = phi i8* [ %107, %106 ], [ %93, %100 ], [ %93, %95 ], [ %93, %103 ]
  %110 = icmp eq i8* %109, %3
  br i1 %110, label %149, label %111

111:                                              ; preds = %108, %142
  %112 = phi i8* [ %147, %142 ], [ %109, %108 ]
  %113 = phi i64 [ %146, %142 ], [ 0, %108 ]
  %114 = load i8, i8* %112, align 1
  %115 = sext i8 %114 to i16
  %116 = icmp sgt i8 %114, 47
  br i1 %116, label %117, label %149

117:                                              ; preds = %111
  %118 = icmp slt i8 %114, 58
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = add nsw i16 %115, -48
  br label %130

121:                                              ; preds = %117
  %122 = add nsw i8 %114, -97
  %123 = icmp ult i8 %122, 6
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = add nsw i16 %115, -87
  br label %130

126:                                              ; preds = %121
  %127 = add nsw i8 %114, -65
  %128 = icmp ult i8 %127, 6
  %129 = add nsw i16 %115, -55
  br i1 %128, label %130, label %149

130:                                              ; preds = %119, %124, %126
  %131 = phi i16 [ %129, %126 ], [ %125, %124 ], [ %120, %119 ]
  %132 = trunc i16 %131 to i8
  %133 = icmp eq i8* %112, %109
  br i1 %133, label %142, label %134

134:                                              ; preds = %130
  %135 = icmp sgt i64 %113, 576460752303423487
  br i1 %135, label %149, label %136

136:                                              ; preds = %134
  %137 = icmp eq i64 %113, 576460752303423487
  %138 = icmp ugt i8 %132, 15
  %139 = and i1 %137, %138
  br i1 %139, label %149, label %140

140:                                              ; preds = %136
  %141 = shl nsw i64 %113, 4
  br label %142

142:                                              ; preds = %140, %130
  %143 = phi i64 [ %141, %140 ], [ %113, %130 ]
  %144 = and i16 %131, 255
  %145 = zext i16 %144 to i64
  %146 = add nsw i64 %143, %145
  %147 = getelementptr inbounds i8, i8* %112, i64 1
  %148 = icmp eq i8* %147, %3
  br i1 %148, label %149, label %111

149:                                              ; preds = %21, %80, %74, %72, %64, %49, %111, %126, %134, %142, %136, %108, %91, %46, %30
  %150 = phi i8 [ %26, %30 ], [ %26, %46 ], [ %92, %91 ], [ %92, %108 ], [ %92, %136 ], [ %92, %142 ], [ %92, %134 ], [ %92, %126 ], [ %92, %111 ], [ %26, %49 ], [ %26, %64 ], [ %26, %72 ], [ %26, %74 ], [ %26, %80 ], [ 0, %21 ]
  %151 = phi i64 [ 0, %30 ], [ 0, %46 ], [ 0, %91 ], [ 0, %108 ], [ %113, %111 ], [ %113, %126 ], [ 9223372036854775807, %134 ], [ %146, %142 ], [ 9223372036854775807, %136 ], [ %84, %80 ], [ -9223372036854775808, %74 ], [ -9223372036854775808, %72 ], [ %51, %64 ], [ %51, %49 ], [ 0, %21 ]
  %152 = phi i8 [ 0, %30 ], [ 1, %46 ], [ 0, %91 ], [ 1, %108 ], [ 0, %111 ], [ 0, %126 ], [ 0, %134 ], [ 1, %142 ], [ 0, %136 ], [ 1, %80 ], [ 0, %74 ], [ 0, %72 ], [ 0, %64 ], [ 0, %49 ], [ 0, %21 ]
  %153 = and i8 %152, %150
  %154 = insertvalue { i64, i8 } undef, i64 %151, 0
  %155 = insertvalue { i64, i8 } %154, i8 %153, 1
  ret { i64, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSEOh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ult i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #14
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #15
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #13
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #15
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIhEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIhEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiEET_T0_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiEET_T0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEiEET_T0_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEiEET_T0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEjEET_T0_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEjEET_T0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEjEET_T0_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEjEET_T0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEElEET_T0_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEElEET_T0_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEElEET_T0_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEElEET_T0_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmEET_T0_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmEET_T0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmEET_T0_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmEET_T0_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEExEET_T0_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEExEET_T0_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEExEET_T0_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEExEET_T0_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEyEET_T0_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEyEET_T0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEyEET_T0_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internalL12IntToStringTINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEyEET_T0_"}
!38 = !{!"branch_weights", i32 1, i32 1048575}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4base8internal8ToStringINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_PKNS9_10value_typeEm: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8ToStringINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEET_PKNS9_10value_typeEm"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN4base8internal8ToStringINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEcEET_PKT0_m: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8ToStringINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEcEET_PKT0_m"}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.isvectorized", i32 1}
!47 = distinct !{!47, !48, !46}
!48 = !{!"llvm.loop.unroll.runtime.disable"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN4base25CheckedContiguousIteratorIhEppEi: argument 0"}
!51 = distinct !{!51, !"_ZN4base25CheckedContiguousIteratorIhEppEi"}
!52 = !{i8 0, i8 2}
