; ModuleID = '../../third_party/blink/renderer/core/html/html_link_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_link_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.763", i32, [4 x i8], %"class.std::__1::unique_ptr.901", %"class.std::__1::unique_ptr.901", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.907", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.913", %"class.std::__1::unique_ptr.919", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.937", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.231", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.766", %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.807", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.814", %"class.std::__1::unique_ptr.821", %"class.std::__1::unique_ptr.828", %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.842", %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.856", %"class.std::__1::unique_ptr.881", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.799" = type { %"struct.std::__1::__atomic_base.800" }
%"struct.std::__1::__atomic_base.800" = type { %"struct.std::__1::__atomic_base.801" }
%"struct.std::__1::__atomic_base.801" = type { %"struct.std::__1::__cxx_atomic_impl.802" }
%"struct.std::__1::__cxx_atomic_impl.802" = type { %"struct.std::__1::__cxx_atomic_base_impl.803" }
%"struct.std::__1::__cxx_atomic_base_impl.803" = type { i64 }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::Worklist.810"* }
%"class.blink::Worklist.810" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.blink::Worklist.817"* }
%"class.blink::Worklist.817" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.blink::Worklist.824"* }
%"class.blink::Worklist.824" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.blink::Worklist.831"* }
%"class.blink::Worklist.831" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.blink::Worklist.838"* }
%"class.blink::Worklist.838" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.blink::Worklist.845"* }
%"class.blink::Worklist.845" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::Worklist.852"* }
%"class.blink::Worklist.852" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.799" }
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.859", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.874", [4 x i8] }>
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861", %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { float }
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.884", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.893" }
%"class.WTF::Vector.893" = type { %"class.WTF::VectorBuffer.894" }
%"class.WTF::VectorBuffer.894" = type { %"class.WTF::VectorBufferBase.895" }
%"class.WTF::VectorBufferBase.895" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.907" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911" }
%"class.WTF::VectorBufferBase.911" = type { %"struct.std::__1::pair.912"*, i32, i32 }
%"struct.std::__1::pair.912" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.925" }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.810"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.817"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.824"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.831"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.838"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1507", i64 }
%"class.std::__1::vector.1507" = type { %"class.std::__1::__vector_base.1508" }
%"class.std::__1::__vector_base.1508" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1509" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.1510" }
%"struct.std::__1::__compressed_pair_elem.1510" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__cxx_atomic_impl.233" }
%"struct.std::__1::__cxx_atomic_impl.233" = type { %"struct.std::__1::__cxx_atomic_base_impl.234" }
%"struct.std::__1::__cxx_atomic_base_impl.234" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.750", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.750" = type { %"class.base::RefCounted.751" }
%"class.base::RefCounted.751" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.754" }
%"class.blink::HeapHashMap.754" = type { %"class.WTF::HashMap.757" }
%"class.WTF::HashMap.757" = type { %"class.WTF::HashTable.758" }
%"class.WTF::HashTable.758" = type <{ %"struct.WTF::KeyValuePair.760"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.760" = type { %"class.blink::WeakMember.761", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.154" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__cxx_atomic_impl.157" }
%"struct.std::__1::__cxx_atomic_impl.157" = type { %"struct.std::__1::__cxx_atomic_base_impl.158" }
%"struct.std::__1::__cxx_atomic_base_impl.158" = type { i32 }
%"class.blink::HTMLLinkElement" = type <{ %"class.blink::HTMLElement", %"class.blink::LinkLoaderClient", %"class.blink::Member.21", %"class.blink::Member.27", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.blink::Member.37", %"class.WTF::Vector.41", %"class.blink::Member.46", %"class.blink::LinkRelAttribute", %"class.blink::Member.37", %"class.WTF::HashSet", %"class.blink::Member.37", %"class.WTF::HashSet", i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::Member.0", %"class.blink::Member.55", %"class.blink::Member.55", %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.82", %"class.blink::HeapVector.84" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::Document"* }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.63" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.39", i32, %"class.blink::HeapVector" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.69" }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::Member.39"*, i32, i32 }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.79" }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::HeapHashMap.81"* }
%"class.blink::HeapHashMap.81" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.84" = type { %"class.WTF::Vector.87" }
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.92", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.94, %"class.WTF::Vector.113", %"class.WTF::Vector.113", %"class.blink::Member", %"class.blink::Member.118", %"class.blink::HeapHashSet", %"class.blink::Member.53", %"class.WTF::HashSet.127", %"class.WTF::TextPosition", %"class.blink::Member.131", %"class.blink::HeapVector.133", %"class.blink::Member.140" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.94 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.95", %"class.WTF::Vector.97" }
%"class.WTF::RefCounted.95" = type { %"class.base::RefCounted.96" }
%"class.base::RefCounted.96" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.std::__1::unique_ptr.100"*, i32, i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.103", %"class.WTF::String" }
%"class.WTF::Vector.103" = type { %"class.WTF::VectorBuffer.104" }
%"class.WTF::VectorBuffer.104" = type { %"class.WTF::VectorBufferBase.105" }
%"class.WTF::VectorBufferBase.105" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.120" }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.124" }
%"class.WTF::HashSet.124" = type { %"class.WTF::HashTable.125" }
%"class.WTF::HashTable.125" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.127" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.94, %"class.blink::Member.90", %"class.blink::Member.118" }
%"class.blink::HeapVector.133" = type { %"class.WTF::Vector.136" }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"class.blink::Member.118"*, i32, i32 }
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::LinkLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::LinkResource"* }
%"class.blink::LinkResource" = type { i32 (...)**, %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLLinkElement"* }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::LinkLoader"* }
%"class.blink::LinkLoader" = type { %"class.blink::SingleModuleClient", %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35" }
%"class.blink::SingleModuleClient" = type { %"class.blink::NameClient" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::LinkLoader::FinishObserver"* }
%"class.blink::LinkLoader::FinishObserver" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::LinkLoaderClient"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::PrerenderHandle"* }
%"class.blink::PrerenderHandle" = type opaque
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.39", %"class.blink::QualifiedName", i8 }>
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::DOMTokenList"* }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.39", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.150", %"class.WTF::Vector.150", i8, i32, %"class.blink::Member.161", %"class.blink::Member.441", %"class.blink::Member.727", %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::Member.733", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.735", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.90", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.746", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.39", %"class.blink::Member.703", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::UserActionElementSet", %"class.blink::Member.956", double, double, i64, i64, %"class.blink::HeapHashSet.958", %"class.blink::HeapHashSet.965", i16, i8, %"class.blink::Member.972", %"class.blink::Member.974", %"class.blink::Member.1306", %"class.blink::Member.1308", %"class.blink::TextLinkColors", %"class.blink::Member.1310", i8, [7 x i8], %"class.blink::HeapHashMap.1312", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.39", %"class.WTF::Vector.1319", %"class.blink::Member.1324", %"class.blink::Member.1326", i8, %"class.blink::Member.39", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1328", %"class.blink::HeapVector.1330", %"class.std::__1::unique_ptr.1338", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1344", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1357", %"class.WTF::Vector.1359", i8, i8, %"class.std::__1::unique_ptr.1364", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1370", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1378", i8, i32, %"class.blink::Member.1380", %"class.blink::Member.1382", %"class.blink::Member.1384", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1386", %"class.WTF::HashMap.1388", %"class.blink::Member.1393", %"class.blink::Member.1395", %"class.blink::Member.1397", %"class.blink::Member.1399", %"class.blink::Member.53", %"class.blink::Member.53", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1401", i8, i32, %"class.blink::Member.1408", %"class.blink::Member.1410", i32, %"class.blink::Member.1412", %"class.blink::Member.1414", %"class.blink::Member.1416", %"class.std::__1::unique_ptr.1418", i64, %"class.std::__1::unique_ptr.1424", i32, i32, %"class.blink::Member.1430", %"class.blink::Member.1432", %"class.blink::Member.1434", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1436", %"class.WTF::Vector.714", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1438", %"class.blink::Member.1445", %"class.std::__1::unique_ptr.1447", %"class.blink::Member.1453", i8, i8, %"class.WTF::String", %"class.blink::Member.1455", i8, [7 x i8], %"class.blink::HeapHashMap.1457", %"class.blink::HeapObserverSet.1464", %"class.blink::Member.1472", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1474", i32, i8, i8, %"class.blink::WeakMember.1476", %"class.blink::Member.1477" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.143" }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.153 }
%class.scoped_refptr.153 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.154" }
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.553", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.561", %"class.blink::Member.53", %"class.blink::Member.563", i8, %"class.blink::Member.565", %"class.blink::Member.567", %"class.blink::Member.569", %"class.blink::Member.569", %"class.blink::Member.569", %"class.blink::Member.569", %"class.blink::Member.569", %"class.blink::Member.569", %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::Member.575", %"class.blink::Member.577", %"class.blink::Member.581", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.498", %"class.blink::Member.583", %class.scoped_refptr.585, %"class.blink::HeapHashSet.647", %"class.blink::Member.654", %"class.blink::HeapHashMap.667", %"class.std::__1::unique_ptr.674", %"class.blink::Member.686", %"class.blink::Member.707", %"class.blink::Member.709", %"class.blink::Member.711", %"class.WTF::Vector.714", %"class.util::TokenType", %"class.WTF::HashSet.719", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.183", %"class.blink::Member.185", %"class.blink::Member.187", %"class.blink::Member.189", i8, %"class.WTF::Vector.191" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.176" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.165" }
%"class.blink::HeapVector.165" = type { %"class.WTF::Vector.168" }
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170", [32 x i8] }
%"class.WTF::VectorBufferBase.170" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.171" }
%"class.blink::Member.171" = type { %"class.blink::MemberBase.172" }
%"class.blink::MemberBase.172" = type { %"class.blink::HeapVector.173"* }
%"class.blink::HeapVector.173" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.WTF::Vector.179"* }
%"class.WTF::Vector.179" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1526", %"class.blink::Member.1528", %"class.blink::Member.1530", i8, i32, i8, i32, %"class.blink::Member.1532", %"class.blink::Member.185", %"class.blink::FrameLifecycle", %"class.blink::Member.183", %"class.blink::Member.183", %"class.blink::Member.183", %"class.blink::Member.183", %"class.blink::Member.183", %"class.blink::Member.183", %"class.blink::Member.692", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1536", %"class.blink::Member.1546", i8, %"class.base::UnguessableToken", %"class.absl::optional.1548", %"class.absl::optional.1553", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.183", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1565", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1573", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1581", %"class.blink::FrameLoader", %"class.blink::Member.1602", %"class.blink::Member.39", %"class.blink::Member.1604", %"class.blink::Member.1606", %"class.blink::Member.1608", %"class.blink::Member.1610", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1614", %class.scoped_refptr.1616, %"class.blink::Member.1617", %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::Member.1625", %"class.blink::Member.1627", %"class.blink::Member.1629", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1631", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1634", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1655", %"class.std::__1::unique_ptr.1656", %"class.absl::optional.1553", i32, [4 x i8], %"class.std::__1::unique_ptr.1662", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1670", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1675", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1680", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1683", %"class.blink::Member.1685", %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.mojo::StructPtr.1692", %"class.blink::Member.1701", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1703", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1565" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1566" }
%"class.blink::HeapHashMap.1566" = type { %"class.WTF::HashMap.1569" }
%"class.WTF::HashMap.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"struct.WTF::KeyValuePair.1572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1572" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.677", %"class.base::WeakPtrFactory.682" }
%"class.WTF::HashMap.677" = type { %"class.WTF::HashTable.678" }
%"class.WTF::HashTable.678" = type <{ %"struct.WTF::KeyValuePair.681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.681" = type opaque
%"class.base::WeakPtrFactory.682" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.213 }
%class.scoped_refptr.213 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.214", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.214" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.215" }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1579" }
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.690" }
%"class.blink::WeakMember.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.378" }
%"class.blink::HeapHashSet.378" = type { %"class.WTF::HashSet.381" }
%"class.WTF::HashSet.381" = type { %"class.WTF::HashTable.382" }
%"class.WTF::HashTable.382" = type <{ %"class.blink::WeakMember.384"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.384" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.315", %"class.base::RepeatingCallback.2546", i64, %"class.std::__1::map.2547", i8*, i64, %"class.base::WeakPtrFactory.2556" }
%"class.base::RepeatingCallback.315" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2546" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2547" = type { %"class.std::__1::__tree.2548" }
%"class.std::__1::__tree.2548" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2549", %"class.std::__1::__compressed_pair.2553" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2549" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2553" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::WeakPtrFactory.2556" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1581" = type { %"class.WTF::HashSet.1584" }
%"class.WTF::HashSet.1584" = type { %"class.WTF::HashTable.1585" }
%"class.WTF::HashTable.1585" = type <{ %"class.blink::WeakMember.1587"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1587" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.692", %"class.blink::Member.1588", %"class.blink::Member.1590", %"class.std::__1::unique_ptr.1592", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1598" }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1997", %"class.blink::Member.2002", %"class.std::__1::unique_ptr.2004", %"class.std::__1::unique_ptr.468", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2181, %"class.WTF::AtomicString", i32, %"class.absl::optional.2080", %class.scoped_refptr.401, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2045", i8, %"class.absl::optional.2052", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.692", %"class.blink::Member.2182", %"class.blink::Member.729", %"class.blink::Member.2193", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2195", %class.scoped_refptr.393, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2208", %"class.std::__1::unique_ptr.2057", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2210", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2215, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2229, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2230", %"class.blink::Member.2245", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2258", %"class.WTF::Vector.498", i8, i8, i8, %"class.blink::WebVector.2170", %"class.blink::WebVector.2170", %"class.mojo::Remote.2263" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1997" = type { %"class.WTF::VectorBuffer.1998" }
%"class.WTF::VectorBuffer.1998" = type { %"class.WTF::VectorBufferBase.1999" }
%"class.WTF::VectorBufferBase.1999" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2002" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2004" = type { %"class.std::__1::__compressed_pair.2005" }
%"class.std::__1::__compressed_pair.2005" = type { %"struct.std::__1::__compressed_pair_elem.2006" }
%"struct.std::__1::__compressed_pair_elem.2006" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2008", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2045", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2052", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2057", %"class.base::UnguessableToken", %"class.blink::WebVector.2063", %"class.base::TickClock"*, %"class.blink::WebVector.2072", %"class.absl::optional.2080", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2085", %"class.blink::WebVector", i8, %"class.blink::WebVector.2104", i8, %"class.std::__1::unique_ptr.2112", %"class.blink::WebVector.2170", %"class.blink::WebVector.2170" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector.2008" = type { %"class.std::__1::vector.2009" }
%"class.std::__1::vector.2009" = type { %"class.std::__1::__vector_base.2010" }
%"class.std::__1::__vector_base.2010" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2040" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2040" = type { %"struct.std::__1::__compressed_pair_elem.2041" }
%"struct.std::__1::__compressed_pair_elem.2041" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2011", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2011" = type { %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2051", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2051" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2007" }
%"class.blink::WebPrivatePtr.2007" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2063" = type { %"class.std::__1::vector.2064" }
%"class.std::__1::vector.2064" = type { %"class.std::__1::__vector_base.2065" }
%"class.std::__1::__vector_base.2065" = type { %"class.std::__1::unique_ptr.2066"*, %"class.std::__1::unique_ptr.2066"*, %"class.std::__1::__compressed_pair.2067" }
%"class.std::__1::unique_ptr.2066" = type opaque
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.2068" }
%"struct.std::__1::__compressed_pair_elem.2068" = type { %"class.std::__1::unique_ptr.2066"* }
%"class.blink::WebVector.2072" = type { %"class.std::__1::vector.2073" }
%"class.std::__1::vector.2073" = type { %"class.std::__1::__vector_base.2074" }
%"class.std::__1::__vector_base.2074" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2085" = type { %"class.absl::optional_internal::optional_data.2086" }
%"class.absl::optional_internal::optional_data.2086" = type { %"class.absl::optional_internal::optional_data_base.2087" }
%"class.absl::optional_internal::optional_data_base.2087" = type { %"class.absl::optional_internal::optional_data_dtor_base.2088" }
%"class.absl::optional_internal::optional_data_dtor_base.2088" = type { i8, [7 x i8], %union.anon.2089 }
%union.anon.2089 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1639" }
%"class.std::__1::vector.1639" = type { %"class.std::__1::__vector_base.1640" }
%"class.std::__1::__vector_base.1640" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2104" = type { %"class.std::__1::vector.2105" }
%"class.std::__1::vector.2105" = type { %"class.std::__1::__vector_base.2106" }
%"class.std::__1::__vector_base.2106" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { i32* }
%"class.std::__1::unique_ptr.2112" = type { %"class.std::__1::__compressed_pair.2113" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.2114" }
%"struct.std::__1::__compressed_pair_elem.2114" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2115" }
%"class.blink::WebVector.2115" = type { %"class.std::__1::vector.2116" }
%"class.std::__1::vector.2116" = type { %"class.std::__1::__vector_base.2117" }
%"class.std::__1::__vector_base.2117" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2162" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2118", %"class.blink::WebVector.2126", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2157", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2118" = type { %"class.std::__1::vector.2119" }
%"class.std::__1::vector.2119" = type { %"class.std::__1::__vector_base.2120" }
%"class.std::__1::__vector_base.2120" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2121" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2121" = type { %"struct.std::__1::__compressed_pair_elem.2122" }
%"struct.std::__1::__compressed_pair_elem.2122" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2126" = type { %"class.std::__1::vector.2127" }
%"class.std::__1::vector.2127" = type { %"class.std::__1::__vector_base.2128" }
%"class.std::__1::__vector_base.2128" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2152" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2129", %"class.blink::WebVector", %"class.blink::WebVector.2137", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2129" = type { %"class.std::__1::vector.2130" }
%"class.std::__1::vector.2130" = type { %"class.std::__1::__vector_base.2131" }
%"class.std::__1::__vector_base.2131" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2132" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.2133" }
%"struct.std::__1::__compressed_pair_elem.2133" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2137" = type { %"class.std::__1::vector.2138" }
%"class.std::__1::vector.2138" = type { %"class.std::__1::__vector_base.2139" }
%"class.std::__1::__vector_base.2139" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2147" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2140" }
%"class.blink::WebVector.2140" = type { %"class.std::__1::vector.2141" }
%"class.std::__1::vector.2141" = type { %"class.std::__1::__vector_base.2142" }
%"class.std::__1::__vector_base.2142" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2143" }
%"class.std::__1::__compressed_pair.2143" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8* }
%"class.std::__1::__compressed_pair.2147" = type { %"struct.std::__1::__compressed_pair_elem.2148" }
%"struct.std::__1::__compressed_pair_elem.2148" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2152" = type { %"struct.std::__1::__compressed_pair_elem.2153" }
%"struct.std::__1::__compressed_pair_elem.2153" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2157" = type { %"class.absl::optional_internal::optional_data.2158" }
%"class.absl::optional_internal::optional_data.2158" = type { %"class.absl::optional_internal::optional_data_base.2159" }
%"class.absl::optional_internal::optional_data_base.2159" = type { %"class.absl::optional_internal::optional_data_dtor_base.2160" }
%"class.absl::optional_internal::optional_data_dtor_base.2160" = type { i8, [7 x i8], %union.anon.2161 }
%union.anon.2161 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2162" = type { %"struct.std::__1::__compressed_pair_elem.2163" }
%"struct.std::__1::__compressed_pair_elem.2163" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.471" }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.474" }
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"class.mojo::StructPtr.477"*, i32, i32 }
%"class.mojo::StructPtr.477" = type { %"class.std::__1::unique_ptr.478" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.481", %"class.WTF::HashMap.488", %"class.WTF::HashMap.493", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.498", i32, %"class.mojo::StructPtr.503", %"class.WTF::Vector.498" }
%"class.mojo::StructPtr.481" = type { %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.497" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.503" = type { %"class.std::__1::unique_ptr.504" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.498", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.518" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.312", i32 }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.315", %"class.base::OnceCallback.316", %"class.absl::optional.317", %"class.absl::optional.322", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.329", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.337", %"class.std::__1::map.348", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.357", i8, %class.scoped_refptr.196, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.358" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.316" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.317" = type { %"class.absl::optional_internal::optional_data.318" }
%"class.absl::optional_internal::optional_data.318" = type { %"class.absl::optional_internal::optional_data_base.319" }
%"class.absl::optional_internal::optional_data_base.319" = type { %"class.absl::optional_internal::optional_data_dtor_base.320" }
%"class.absl::optional_internal::optional_data_dtor_base.320" = type { i8, %union.anon.321 }
%union.anon.321 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.196, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.327" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.327" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.271 }
%class.scoped_refptr.271 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2271", [4 x i8], %"class.base::RepeatingCallback.315", %class.scoped_refptr.196, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2271" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.332", %class.scoped_refptr.333 }
%"class.base::RepeatingCallback.332" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.333 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.195", [4 x i8] }>
%"class.base::RefCountedThreadSafe.195" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.337" = type { %"class.std::__1::__tree.338" }
%"class.std::__1::__tree.338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.348" = type { %"class.std::__1::__tree.349" }
%"class.std::__1::__tree.349" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::OnceCallback.357" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.196 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.197" }>
%"class.base::RefCountedThreadSafe.197" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.358" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2181 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2080" = type { %"class.absl::optional_internal::optional_data.2081" }
%"class.absl::optional_internal::optional_data.2081" = type { %"class.absl::optional_internal::optional_data_base.2082" }
%"class.absl::optional_internal::optional_data_base.2082" = type { %"class.absl::optional_internal::optional_data_dtor_base.2083" }
%"class.absl::optional_internal::optional_data_dtor_base.2083" = type { i8, %union.anon.2084 }
%union.anon.2084 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.401 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.394", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.396", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.401 }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2052" = type { %"class.absl::optional_internal::optional_data.2053" }
%"class.absl::optional_internal::optional_data.2053" = type { %"class.absl::optional_internal::optional_data_base.2054" }
%"class.absl::optional_internal::optional_data_base.2054" = type { %"class.absl::optional_internal::optional_data_dtor_base.2055" }
%"class.absl::optional_internal::optional_data_dtor_base.2055" = type { i8, %union.anon.2056 }
%union.anon.2056 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2090", %"class.base::flat_map.1536", i8, [7 x i8] }>
%"class.std::__1::vector.2090" = type { %"class.std::__1::__vector_base.2091" }
%"class.std::__1::__vector_base.2091" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2099" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2092", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2092" = type { %"class.std::__1::__vector_base.2093" }
%"class.std::__1::__vector_base.2093" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2094" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.396" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2094" = type { %"struct.std::__1::__compressed_pair_elem.2095" }
%"struct.std::__1::__compressed_pair_elem.2095" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.498", %"class.blink::Member.2186", %"class.absl::optional.2188", i64, i64, i32, %class.scoped_refptr.585, %class.scoped_refptr.2181, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.585 }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2188" = type { %"class.absl::optional_internal::optional_data.2189" }
%"class.absl::optional_internal::optional_data.2189" = type { %"class.absl::optional_internal::optional_data_base.2190" }
%"class.absl::optional_internal::optional_data_base.2190" = type { %"class.absl::optional_internal::optional_data_dtor_base.2191" }
%"class.absl::optional_internal::optional_data_dtor_base.2191" = type { i8, %union.anon.2192 }
%union.anon.2192 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.2193" = type { %"class.blink::MemberBase.2194" }
%"class.blink::MemberBase.2194" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2020", %class.scoped_refptr.2030, %class.scoped_refptr.2031, %"struct.blink::CacheControlHeader", %"class.absl::optional.317", %"class.absl::optional.1951", %"class.absl::optional.1951", %"class.absl::optional.1951", i64, %"class.blink::KURL", %"class.WTF::Vector.1997", %"class.WTF::String", %"class.WTF::Vector.498", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1553", %"class.WTF::Vector.498", %"class.blink::KURL", %"class.absl::optional.2032" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2014" }
%"class.WTF::HashMap.2014" = type { %"class.WTF::HashTable.2015" }
%"class.WTF::HashTable.2015" = type <{ %"struct.WTF::KeyValuePair.2018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2018" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2019", i8 }
%"struct.std::__1::array.2019" = type { [16 x i8] }
%"class.absl::optional.2020" = type { %"class.absl::optional_internal::optional_data.2021" }
%"class.absl::optional_internal::optional_data.2021" = type { %"class.absl::optional_internal::optional_data_base.2022" }
%"class.absl::optional_internal::optional_data_base.2022" = type { %"class.absl::optional_internal::optional_data_dtor_base.2023" }
%"class.absl::optional_internal::optional_data_dtor_base.2023" = type { i8, %union.anon.2024 }
%union.anon.2024 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.498", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1133", %"class.WTF::Vector.2025" }
%"class.WTF::Vector.1133" = type { %"class.WTF::VectorBuffer.1134" }
%"class.WTF::VectorBuffer.1134" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2025" = type { %"class.WTF::VectorBuffer.2026" }
%"class.WTF::VectorBuffer.2026" = type { %"class.WTF::VectorBufferBase.2027" }
%"class.WTF::VectorBufferBase.2027" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2030 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2031 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.317", %"class.absl::optional.317" }
%"class.absl::optional.1951" = type { %"class.absl::optional_internal::optional_data.1952" }
%"class.absl::optional_internal::optional_data.1952" = type { %"class.absl::optional_internal::optional_data_base.1953" }
%"class.absl::optional_internal::optional_data_base.1953" = type { %"class.absl::optional_internal::optional_data_dtor_base.1954" }
%"class.absl::optional_internal::optional_data_dtor_base.1954" = type { i8, %union.anon.1955 }
%union.anon.1955 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1944" }
%"class.base::time_internal::TimeBase.1944" = type { i64 }
%"class.absl::optional.2032" = type { %"class.absl::optional_internal::optional_data.2033" }
%"class.absl::optional_internal::optional_data.2033" = type { %"class.absl::optional_internal::optional_data_base.2034" }
%"class.absl::optional_internal::optional_data_base.2034" = type { %"class.absl::optional_internal::optional_data_dtor_base.2035" }
%"class.absl::optional_internal::optional_data_dtor_base.2035" = type { i8, %union.anon.2036 }
%union.anon.2036 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2195" = type { %"class.mojo::internal::InterfacePtrState.2196" }
%"class.mojo::internal::InterfacePtrState.2196" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2197" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.194, %"class.std::__1::unique_ptr.312", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.196, i32 }>
%class.scoped_refptr.194 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.196, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.274", %"class.absl::optional.279", %"class.absl::optional.235", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.303", i8, [7 x i8], %class.scoped_refptr.196, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.195" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.196, %"class.std::__1::unique_ptr.220", %"class.absl::optional", %"struct.std::__1::atomic.231", i8, i8, i8, i8, i32, i32, %"class.absl::optional.235", %"class.std::__1::unique_ptr.240", i8, i64, %class.scoped_refptr.270, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.273" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.196, i8, %"class.mojo::ScopedHandleBase.223", %class.scoped_refptr.224, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.225" }
%"class.mojo::ScopedHandleBase.223" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.224 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.229 }
%union.anon.229 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.230", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.230" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.243", i8, i64, %class.scoped_refptr.244, %class.scoped_refptr.266 }
%"class.base::RepeatingCallback.243" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.244 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.245", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.255", i8, [7 x i8] }>
%"class.base::RefCounted.245" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%class.scoped_refptr.266 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.270 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.273" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%union.anon.278 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.279" = type { %"class.absl::optional_internal::optional_data.280" }
%"class.absl::optional_internal::optional_data.280" = type { %"class.absl::optional_internal::optional_data_base.281" }
%"class.absl::optional_internal::optional_data_base.281" = type { %"class.absl::optional_internal::optional_data_dtor_base.282" }
%"class.absl::optional_internal::optional_data_dtor_base.282" = type { i8, [7 x i8], %union.anon.283 }
%union.anon.283 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, %union.anon.239 }
%union.anon.239 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.288 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.288 = type { %"class.std::__1::map.291" }
%"class.std::__1::map.291" = type { %"class.std::__1::__tree.292" }
%"class.std::__1::__tree.292" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.302"*, i64 }
%"class.std::__1::unique_ptr.302" = type opaque
%"class.std::__1::map.303" = type { %"class.std::__1::__tree.304" }
%"class.std::__1::__tree.304" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2197" = type { %"class.std::__1::__compressed_pair.2198" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.2199" }
%"struct.std::__1::__compressed_pair_elem.2199" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.393 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.317", %"class.absl::optional.317", %"class.absl::optional.317", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2203", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1590" }
%"class.WTF::Vector.2203" = type { %"class.WTF::VectorBuffer.2204" }
%"class.WTF::VectorBuffer.2204" = type { %"class.WTF::VectorBufferBase.2205" }
%"class.WTF::VectorBufferBase.2205" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1536", %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.432"*, %"struct.std::__1::pair.432"*, %"class.std::__1::__compressed_pair.433" }
%"struct.std::__1::pair.432" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::pair.432"* }
%"class.WTF::Vector.2210" = type { %"class.WTF::VectorBuffer.2211" }
%"class.WTF::VectorBuffer.2211" = type { %"class.WTF::VectorBufferBase.2212" }
%"class.WTF::VectorBufferBase.2212" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2215 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2216", i64, %"class.WTF::Vector.2218", %"class.WTF::Vector.2223" }
%"class.WTF::RefCounted.2216" = type { %"class.base::RefCounted.2217" }
%"class.base::RefCounted.2217" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2218" = type { %"class.WTF::VectorBuffer.2219" }
%"class.WTF::VectorBuffer.2219" = type { %"class.WTF::VectorBufferBase.2220" }
%"class.WTF::VectorBufferBase.2220" = type { i8*, i32, i32 }
%"class.WTF::Vector.2223" = type { %"class.WTF::VectorBuffer.2224" }
%"class.WTF::VectorBuffer.2224" = type { %"class.WTF::VectorBufferBase.2225" }
%"class.WTF::VectorBufferBase.2225" = type { %"class.std::__1::unique_ptr.2226"*, i32, i32 }
%"class.std::__1::unique_ptr.2226" = type opaque
%class.scoped_refptr.2229 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2234", %"class.std::__1::unique_ptr.2239", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2234" = type { %"class.WTF::HashTable.2235" }
%"class.WTF::HashTable.2235" = type <{ %"struct.WTF::KeyValuePair.2238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2238" = type { %"class.WTF::Vector.2605", %class.scoped_refptr.2610 }
%"class.WTF::Vector.2605" = type { %"class.WTF::VectorBuffer.2606" }
%"class.WTF::VectorBuffer.2606" = type { %"class.WTF::VectorBufferBase.2607", [32 x i8] }
%"class.WTF::VectorBufferBase.2607" = type { i8*, i32, i32 }
%class.scoped_refptr.2610 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2611", %"class.WTF::Vector.2613", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2611" = type { %"class.base::RefCounted.2612" }
%"class.base::RefCounted.2612" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2613" = type { %"class.WTF::VectorBuffer.2614" }
%"class.WTF::VectorBuffer.2614" = type { %"class.WTF::VectorBufferBase.2607" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2617", i64, %"class.absl::optional.2622" }
%"class.std::__1::unique_ptr.2617" = type { %"class.std::__1::__compressed_pair.2618" }
%"class.std::__1::__compressed_pair.2618" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.absl::optional.2622" = type { %"class.absl::optional_internal::optional_data.2623" }
%"class.absl::optional_internal::optional_data.2623" = type { %"class.absl::optional_internal::optional_data_base.2624" }
%"class.absl::optional_internal::optional_data_base.2624" = type { %"class.absl::optional_internal::optional_data_dtor_base.2625" }
%"class.absl::optional_internal::optional_data_dtor_base.2625" = type { i8, %union.anon.2626 }
%union.anon.2626 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2627", %"class.std::__1::unique_ptr.2628" }
%"class.mojo::ScopedHandleBase.2627" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2628" = type { %"class.std::__1::__compressed_pair.2629" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { i8* }
%"class.std::__1::unique_ptr.2239" = type { %"class.std::__1::__compressed_pair.2240" }
%"class.std::__1::__compressed_pair.2240" = type { %"struct.std::__1::__compressed_pair_elem.2241" }
%"struct.std::__1::__compressed_pair_elem.2241" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2245" = type { %"class.blink::MemberBase.2246" }
%"class.blink::MemberBase.2246" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2251" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2247", %"class.std::__1::bitset.2247", %"class.std::__1::bitset.2249" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2247" = type { %"class.std::__1::__bitset.2248" }
%"class.std::__1::__bitset.2248" = type { [11 x i64] }
%"class.std::__1::bitset.2249" = type { %"class.std::__1::__bitset.2250" }
%"class.std::__1::__bitset.2250" = type { [2 x i64] }
%"class.blink::HeapHashSet.2251" = type { %"class.WTF::HashSet.2254" }
%"class.WTF::HashSet.2254" = type { %"class.WTF::HashTable.2255" }
%"class.WTF::HashTable.2255" = type <{ %"class.blink::Member.2257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2257" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::Vector.2258" = type { %"class.WTF::VectorBuffer.2259" }
%"class.WTF::VectorBuffer.2259" = type { %"class.WTF::VectorBufferBase.2260" }
%"class.WTF::VectorBufferBase.2260" = type { i32*, i32, i32 }
%"class.blink::WebVector.2170" = type { %"class.std::__1::vector.2171" }
%"class.std::__1::vector.2171" = type { %"class.std::__1::__vector_base.2172" }
%"class.std::__1::__vector_base.2172" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2173" }
%"class.std::__1::__compressed_pair.2173" = type { %"struct.std::__1::__compressed_pair_elem.2174" }
%"struct.std::__1::__compressed_pair_elem.2174" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2263" = type { %"class.mojo::internal::InterfacePtrState.2264" }
%"class.mojo::internal::InterfacePtrState.2264" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2265" }
%"class.std::__1::unique_ptr.2265" = type { %"class.std::__1::__compressed_pair.2266" }
%"class.std::__1::__compressed_pair.2266" = type { %"struct.std::__1::__compressed_pair_elem.2267" }
%"struct.std::__1::__compressed_pair_elem.2267" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1592" = type { %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.1598" = type { %"class.WTF::HashTable.1599" }
%"class.WTF::HashTable.1599" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1710", %"class.blink::Member.692", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1715", i8, i32, %"class.blink::Color", %"class.absl::optional.1717", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1722", %"class.blink::Member.1724", %"class.blink::Member.1724", %"class.std::__1::unique_ptr.1727", i32, [4 x i8], %"class.WTF::HashSet.1730", %"class.blink::Member.1737", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1739", %"class.blink::HeapHashSet.1746", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1754", i8, %"class.blink::Member.1760", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1772", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1786", i8, %"class.std::__1::unique_ptr.1792", %"class.std::__1::unique_ptr.1909", %"class.WTF::Vector.1915", i32, %class.scoped_refptr.1920, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1921", %"class.blink::Member.1923", %"class.blink::Member.1925", %"class.blink::HeapHashSet.1927", %"class.blink::HeapHashSet.1934", %"class.std::__1::unique_ptr.1941", %"class.std::__1::unique_ptr.1948", %"class.WTF::Vector.150" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1710" = type { %"class.WTF::HashTable.1711" }
%"class.WTF::HashTable.1711" = type <{ %class.scoped_refptr.1714*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1714 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1715" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1716", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.946, %"class.base::WeakPtrFactory.947" }
%class.scoped_refptr.946 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.947" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1716" = type { %"class.blink::MemberBase.1603" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1717" = type { %"class.absl::optional_internal::optional_data.1718" }
%"class.absl::optional_internal::optional_data.1718" = type { %"class.absl::optional_internal::optional_data_base.1719" }
%"class.absl::optional_internal::optional_data_base.1719" = type { %"class.absl::optional_internal::optional_data_dtor_base.1720" }
%"class.absl::optional_internal::optional_data_dtor_base.1720" = type { i8, %union.anon.1721 }
%union.anon.1721 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::HeapHashSet.1726"* }
%"class.blink::HeapHashSet.1726" = type opaque
%"class.std::__1::unique_ptr.1727" = type { %"class.std::__1::__compressed_pair.1728" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1729" }
%"struct.std::__1::__compressed_pair_elem.1729" = type { %"class.WTF::HashSet.1730"* }
%"class.WTF::HashSet.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1739" = type { %"class.WTF::HashSet.1742" }
%"class.WTF::HashSet.1742" = type { %"class.WTF::HashTable.1743" }
%"class.WTF::HashTable.1743" = type <{ %"class.blink::Member.1745"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1745" = type opaque
%"class.blink::HeapHashSet.1746" = type { %"class.WTF::HashSet.1749" }
%"class.WTF::HashSet.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"class.blink::Member.1752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1982", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1993", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.39" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1984", %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.blink::Member.1989", %"class.blink::Member.1991", %"class.WTF::Vector.150", i16, %class.scoped_refptr.946 }
%"class.blink::ThreadState::PrefinalizerRegistration.1984" = type { i8 }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1993" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1994", { i64, i64 } }
%"class.blink::WeakMember.1994" = type { %"class.blink::MemberBase.1753" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1764", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1764" = type { %"class.WTF::HashTable.1765" }
%"class.WTF::HashTable.1765" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1768", i32, i32 }
%"class.WTF::Vector.1768" = type { %"class.WTF::VectorBuffer.1769" }
%"class.WTF::VectorBuffer.1769" = type { %"class.WTF::VectorBufferBase.1770" }
%"class.WTF::VectorBufferBase.1770" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1772" = type { %"class.WTF::LinkedHashSet.1775" }
%"class.WTF::LinkedHashSet.1775" = type { %"class.WTF::HashMap.1776", %"class.WTF::VectorBackedLinkedList.1780" }
%"class.WTF::HashMap.1776" = type { %"class.WTF::HashTable.1777" }
%"class.WTF::HashTable.1777" = type <{ %"struct.WTF::KeyValuePair.1779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1779" = type opaque
%"class.WTF::VectorBackedLinkedList.1780" = type { %"class.WTF::Vector.1781", i32, i32 }
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { %"class.WTF::VectorBackedLinkedListNode.1784"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1784" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1795, %class.scoped_refptr.1795, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1886", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1891", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1795 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1796", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1803" }
%"class.WTF::RefCounted.1796" = type { %"class.base::RefCounted.1797" }
%"class.base::RefCounted.1797" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1798", i32, [4 x i8] }>
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800" }
%"class.WTF::VectorBufferBase.1800" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1809", %"class.std::__1::unique_ptr.1858", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1806, %class.scoped_refptr.1807, %class.scoped_refptr.1808 }
%class.scoped_refptr.1806 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1822", i8, i8, %class.scoped_refptr.1806, i32, i32 }
%"class.WTF::RefCounted.1822" = type { %"class.base::RefCounted.1823" }
%"class.base::RefCounted.1823" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1807 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1977" }
%"class.blink::PaintPropertyNode.1977" = type { %"class.WTF::RefCounted.1978", i8, i8, %class.scoped_refptr.1807, i32, i32 }
%"class.WTF::RefCounted.1978" = type { %"class.base::RefCounted.1979" }
%"class.base::RefCounted.1979" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1808 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1974" }
%"class.blink::PaintPropertyNode.1974" = type { %"class.WTF::RefCounted.1975", i8, i8, %class.scoped_refptr.1808, i32, i32 }
%"class.WTF::RefCounted.1975" = type { %"class.base::RefCounted.1976" }
%"class.base::RefCounted.1976" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1812", %"class.WTF::Vector.1817", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.1818" }
%"class.WTF::VectorBuffer.1818" = type { %"class.WTF::VectorBufferBase.1819" }
%"class.WTF::VectorBufferBase.1819" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1837" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1830, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1831", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1824" }
%"class.std::__1::unique_ptr.1824" = type { %"class.std::__1::__compressed_pair.1825" }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.1826" }
%"struct.std::__1::__compressed_pair_elem.1826" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1830 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1959", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1959" = type { %"class.WTF::RefCounted.1960", i8, i8, %class.scoped_refptr.1830, i32, i32 }
%"class.WTF::RefCounted.1960" = type { %"class.base::RefCounted.1961" }
%"class.base::RefCounted.1961" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1962" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1962" = type { %"class.absl::optional_internal::optional_data.1963" }
%"class.absl::optional_internal::optional_data.1963" = type { %"class.absl::optional_internal::optional_data_base.1964" }
%"class.absl::optional_internal::optional_data_base.1964" = type { %"class.absl::optional_internal::optional_data_dtor_base.1965" }
%"class.absl::optional_internal::optional_data_dtor_base.1965" = type { i8, %union.anon.1966 }
%union.anon.1966 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1967", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1967" = type { %"class.std::__1::__vector_base.1968" }
%"class.std::__1::__vector_base.1968" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1969" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.1970" }
%"struct.std::__1::__compressed_pair_elem.1970" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1831" = type { %"class.std::__1::__compressed_pair.1832" }
%"class.std::__1::__compressed_pair.1832" = type { %"struct.std::__1::__compressed_pair_elem.1833" }
%"struct.std::__1::__compressed_pair_elem.1833" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1837" = type { %"class.std::__1::__compressed_pair.1838" }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1840", %"class.std::__1::unique_ptr.1846", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1846" = type { %"class.std::__1::__compressed_pair.1847" }
%"class.std::__1::__compressed_pair.1847" = type { %"struct.std::__1::__compressed_pair_elem.1848" }
%"struct.std::__1::__compressed_pair_elem.1848" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1861", %"class.absl::optional.1861" }
%"class.absl::optional.1861" = type { %"class.absl::optional_internal::optional_data.1862" }
%"class.absl::optional_internal::optional_data.1862" = type { %"class.absl::optional_internal::optional_data_base.1863" }
%"class.absl::optional_internal::optional_data_base.1863" = type { %"class.absl::optional_internal::optional_data_dtor_base.1864" }
%"class.absl::optional_internal::optional_data_dtor_base.1864" = type { i8, [3 x i8], %union.anon.1865 }
%union.anon.1865 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1803"*, %"class.absl::optional.1871", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1871" = type { %"class.absl::optional_internal::optional_data.1872" }
%"class.absl::optional_internal::optional_data.1872" = type { %"class.absl::optional_internal::optional_data_base.1873" }
%"class.absl::optional_internal::optional_data_base.1873" = type { %"class.absl::optional_internal::optional_data_dtor_base.1874" }
%"class.absl::optional_internal::optional_data_dtor_base.1874" = type { i8, %union.anon.1875 }
%union.anon.1875 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1876", %"class.WTF::Vector.1881" }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878", [128 x i8] }
%"class.WTF::VectorBufferBase.1878" = type { i32*, i32, i32 }
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883", [128 x i8] }
%"class.WTF::VectorBufferBase.1883" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1886" = type { %"class.WTF::VectorBuffer.1887" }
%"class.WTF::VectorBuffer.1887" = type { %"class.WTF::VectorBufferBase.1888" }
%"class.WTF::VectorBufferBase.1888" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1891" = type { %"class.WTF::HashTable.1892" }
%"class.WTF::HashTable.1892" = type <{ %"struct.WTF::KeyValuePair.1895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1895" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1896", %"class.WTF::Vector.1901" }
%"class.WTF::HashMap.1896" = type { %"class.WTF::HashTable.1897" }
%"class.WTF::HashTable.1897" = type <{ %"struct.WTF::KeyValuePair.1900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1900" = type opaque
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903" }
%"class.WTF::VectorBufferBase.1903" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1915" = type { %"class.WTF::VectorBuffer.1916" }
%"class.WTF::VectorBuffer.1916" = type { %"class.WTF::VectorBufferBase.1917" }
%"class.WTF::VectorBufferBase.1917" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1920 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1927" = type { %"class.WTF::HashSet.1930" }
%"class.WTF::HashSet.1930" = type { %"class.WTF::HashTable.1931" }
%"class.WTF::HashTable.1931" = type <{ %"class.blink::WeakMember.1933"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1933" = type opaque
%"class.blink::HeapHashSet.1934" = type { %"class.WTF::HashSet.1937" }
%"class.WTF::HashSet.1937" = type { %"class.WTF::HashTable.1938" }
%"class.WTF::HashTable.1938" = type <{ %"class.blink::WeakMember.1940"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1940" = type opaque
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1948" = type { %"class.std::__1::__compressed_pair.1949" }
%"class.std::__1::__compressed_pair.1949" = type { %"struct.std::__1::__compressed_pair_elem.1950" }
%"struct.std::__1::__compressed_pair_elem.1950" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1951", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.692" }
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1616 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1631" = type { %"class.blink::Member.1632" }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2559" }
%"class.mojo::Remote.2559" = type { %"class.mojo::internal::InterfacePtrState.2560" }
%"class.mojo::internal::InterfacePtrState.2560" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2561" }
%"class.std::__1::unique_ptr.2561" = type { %"class.std::__1::__compressed_pair.2562" }
%"class.std::__1::__compressed_pair.2562" = type { %"struct.std::__1::__compressed_pair_elem.2563" }
%"struct.std::__1::__compressed_pair_elem.2563" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1634" = type { %"class.std::__1::__compressed_pair.1635" }
%"class.std::__1::__compressed_pair.1635" = type { %"struct.std::__1::__compressed_pair_elem.1636" }
%"struct.std::__1::__compressed_pair_elem.1636" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1637, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1637 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1638", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1638" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1646, i8, [7 x i8] }>
%class.scoped_refptr.1646 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1647", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1647" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1648" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1655" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1656" = type { %"class.std::__1::__compressed_pair.1657" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1658" }
%"struct.std::__1::__compressed_pair_elem.1658" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1662" = type { %"class.std::__1::__compressed_pair.1663" }
%"class.std::__1::__compressed_pair.1663" = type { %"struct.std::__1::__compressed_pair_elem.1664" }
%"struct.std::__1::__compressed_pair_elem.1664" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1668" }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2569" }
%"class.mojo::AssociatedRemote.2569" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2570" }
%"class.mojo::internal::AssociatedInterfacePtrState.2570" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2571" }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1670" = type { %"class.blink::Member.1671" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2579" }
%"class.mojo::AssociatedRemote.2579" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2580" }
%"class.mojo::internal::AssociatedInterfacePtrState.2580" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2581" }
%"class.std::__1::unique_ptr.2581" = type { %"class.std::__1::__compressed_pair.2582" }
%"class.std::__1::__compressed_pair.2582" = type { %"struct.std::__1::__compressed_pair_elem.2583" }
%"struct.std::__1::__compressed_pair_elem.2583" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1673" }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2589", %"class.blink::Member.692", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2589" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2590" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.312" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2590" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1675" = type { %"class.blink::Member.1676" }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2593", %"class.blink::Member.692", %"class.mojo::AssociatedReceiver.2594" }
%"class.blink::ThreadState::PrefinalizerRegistration.2593" = type { i8 }
%"class.mojo::AssociatedReceiver.2594" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2595" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2595" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1678" }
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2598", %"class.blink::Member.692", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2598" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.194, %"class.std::__1::unique_ptr.312", %"class.base::WeakPtrFactory.2599" }
%"class.base::WeakPtrFactory.2599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1680" = type { %"class.blink::Member.1681" }
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2602", %"class.blink::Member.692", %"class.mojo::AssociatedReceiver.2603" }
%"class.blink::ThreadState::PrefinalizerRegistration.2602" = type { i8 }
%"class.mojo::AssociatedReceiver.2603" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2604" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2604" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::HeapHashMap.1691"* }
%"class.blink::HeapHashMap.1691" = type opaque
%"class.mojo::StructPtr.1692" = type { %"class.std::__1::unique_ptr.1693" }
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1696", %"class.mojo::InlinedStructPtr.1697" }
%"class.mojo::InlinedStructPtr.1696" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1697" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1703" = type { %"class.absl::optional_internal::optional_data.1704" }
%"class.absl::optional_internal::optional_data.1704" = type { %"class.absl::optional_internal::optional_data_base.1705" }
%"class.absl::optional_internal::optional_data_base.1705" = type { %"class.absl::optional_internal::optional_data_dtor_base.1706" }
%"class.absl::optional_internal::optional_data_dtor_base.1706" = type { i8, %union.anon.1707 }
%union.anon.1707 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.183", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1536" = type { %"class.base::internal::flat_tree.1537" }
%"class.base::internal::flat_tree.1537" = type { %"class.std::__1::vector.1538" }
%"class.std::__1::vector.1538" = type { %"class.std::__1::__vector_base.1539" }
%"class.std::__1::__vector_base.1539" = type { %"struct.std::__1::pair.1540"*, %"struct.std::__1::pair.1540"*, %"class.std::__1::__compressed_pair.1541" }
%"struct.std::__1::pair.1540" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"struct.std::__1::pair.1540"* }
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1548" = type { %"class.absl::optional_internal::optional_data.1549" }
%"class.absl::optional_internal::optional_data.1549" = type { %"class.absl::optional_internal::optional_data_base.1550" }
%"class.absl::optional_internal::optional_data_base.1550" = type { %"class.absl::optional_internal::optional_data_dtor_base.1551" }
%"class.absl::optional_internal::optional_data_dtor_base.1551" = type { i8, %union.anon.1552 }
%union.anon.1552 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1553" = type { %"class.absl::optional_internal::optional_data.1554" }
%"class.absl::optional_internal::optional_data.1554" = type { %"class.absl::optional_internal::optional_data_base.1555" }
%"class.absl::optional_internal::optional_data_base.1555" = type { %"class.absl::optional_internal::optional_data_dtor_base.1556" }
%"class.absl::optional_internal::optional_data_dtor_base.1556" = type { i8, %union.anon.1557 }
%union.anon.1557 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1558" }
%"class.blink::HeapHashSet.1558" = type { %"class.WTF::HashSet.1561" }
%"class.WTF::HashSet.1561" = type { %"class.WTF::HashTable.1562" }
%"class.WTF::HashTable.1562" = type <{ %"class.blink::WeakMember.1564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1564" = type opaque
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.362" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.370", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.447", i32, i8, [3 x i8], %"class.blink::HeapVector.449", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.468", %"class.blink::Member.527", %"class.blink::Member.551", i8 }>
%"class.blink::Supplementable.370" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.371" }
%"class.blink::HeapHashMap.371" = type { %"class.WTF::HashMap.374" }
%"class.WTF::HashMap.374" = type { %"class.WTF::HashTable.375" }
%"class.WTF::HashTable.375" = type <{ %"struct.WTF::KeyValuePair.377"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.377" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.385" }
%"class.blink::Supplementable.385" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.386" }
%"class.blink::HeapHashMap.386" = type { %"class.WTF::HashMap.389" }
%"class.WTF::HashMap.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"struct.WTF::KeyValuePair.392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.392" = type { i8*, %"class.blink::Member.2512" }
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2514" }
%"class.blink::Member.2514" = type { %"class.blink::MemberBase.2515" }
%"class.blink::MemberBase.2515" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.393, %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429", %"class.blink::Member.441", i32, [4 x i8], %"class.WTF::HashSet.443", i32, i32 }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.405", %"class.std::__1::map.416", %"class.std::__1::map.425"* }
%"class.std::__1::map.405" = type { %"class.std::__1::__tree.406" }
%"class.std::__1::__tree.406" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.416" = type { %"class.std::__1::__tree.417" }
%"class.std::__1::__tree.417" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.425" = type opaque
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.449" = type { %"class.WTF::Vector.452" }
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"class.blink::Member.455"*, i32, i32 }
%"class.blink::Member.455" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.461", i32, i32 }
%"class.blink::HeapHashMap.461" = type { %"class.WTF::HashMap.464" }
%"class.WTF::HashMap.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"struct.WTF::KeyValuePair.467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.467" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashSet.531", %"class.WTF::HashMap.535", %"class.std::__1::unique_ptr.540", %"class.blink::Member.441", %"class.WTF::HashMap.546" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.550" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2636" }
%"class.WTF::Vector.2636" = type { %"class.WTF::VectorBuffer.2637" }
%"class.WTF::VectorBuffer.2637" = type { %"class.WTF::VectorBufferBase.2638" }
%"class.WTF::VectorBufferBase.2638" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2639" }
%"class.absl::optional.2639" = type { %"class.absl::optional_internal::optional_data.2640" }
%"class.absl::optional_internal::optional_data.2640" = type { %"class.absl::optional_internal::optional_data_base.2641" }
%"class.absl::optional_internal::optional_data_base.2641" = type { %"class.absl::optional_internal::optional_data_dtor_base.2642" }
%"class.absl::optional_internal::optional_data_dtor_base.2642" = type { i8, %union.anon.2643 }
%union.anon.2643 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.553" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.554" }
%"class.blink::HeapHashMap.554" = type { %"class.WTF::HashMap.557" }
%"class.WTF::HashMap.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.585 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.587", i64, %"class.WTF::Vector.591", %"class.WTF::Vector.596", %"class.WTF::Vector.602", %"class.WTF::Vector.620", %class.scoped_refptr.393, %"class.WTF::HashMap.626", %"class.WTF::Vector.631", %"class.WTF::Vector.591", %"class.WTF::Vector.637", %"class.WTF::HashMap.642", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.586" }
%"class.base::RefCountedThreadSafe.586" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598", [8 x i8] }
%"class.WTF::VectorBufferBase.598" = type { %class.scoped_refptr.599*, i32, i32 }
%class.scoped_refptr.599 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.602" = type { %"class.WTF::VectorBuffer.603" }
%"class.WTF::VectorBuffer.603" = type { %"class.WTF::VectorBufferBase.604" }
%"class.WTF::VectorBufferBase.604" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.612" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.623", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.623" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"struct.WTF::KeyValuePair.630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.630" = type opaque
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { %"class.mojo::ScopedHandleBase.634"*, i32, i32 }
%"class.mojo::ScopedHandleBase.634" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593", [16 x i8] }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type { i8**, %"class.std::__1::unique_ptr.2538" }
%"class.std::__1::unique_ptr.2538" = type { %"class.std::__1::__compressed_pair.2539" }
%"class.std::__1::__compressed_pair.2539" = type { %"struct.std::__1::__compressed_pair_elem.2540" }
%"struct.std::__1::__compressed_pair_elem.2540" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.647" = type { %"class.WTF::HashSet.650" }
%"class.WTF::HashSet.650" = type { %"class.WTF::HashTable.651" }
%"class.WTF::HashTable.651" = type <{ %"class.blink::WeakMember.653"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.653" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.661", %"class.blink::Member.661", %"class.blink::Member.663", %"class.blink::Member.665", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.656" }
%"class.absl::optional.656" = type { %"class.absl::optional_internal::optional_data.657" }
%"class.absl::optional_internal::optional_data.657" = type { %"class.absl::optional_internal::optional_data_base.658" }
%"class.absl::optional_internal::optional_data_base.658" = type { %"class.absl::optional_internal::optional_data_dtor_base.659" }
%"class.absl::optional_internal::optional_data_dtor_base.659" = type { i8, %union.anon.660 }
%union.anon.660 = type { i64 }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::Event"* }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.692", %"class.blink::CachedTextInputInfo", %"class.blink::Member.703", %"class.blink::Member.705", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.694", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.696", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.696" = type { %"class.WTF::HashMap.699" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.161", %"class.blink::Member.1520", %"class.blink::Member.1522" }
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.161", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1516" }
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::HeapHashMap.713"* }
%"class.blink::HeapHashMap.713" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { i64*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.370", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.447", i32, i8, [3 x i8], %"class.blink::HeapVector.449", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.468", %"class.blink::Member.527", %"class.blink::Member.551", i8, [7 x i8] }>
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.745 }
%class.scoped_refptr.745 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.746" = type { %"class.WTF::VectorBuffer.747" }
%"class.WTF::VectorBuffer.747" = type { %"class.WTF::VectorBufferBase.748" }
%"class.WTF::VectorBufferBase.748" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.749 }
%class.scoped_refptr.749 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.53", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.949" }
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.958" = type { %"class.WTF::HashSet.961" }
%"class.WTF::HashSet.961" = type { %"class.WTF::HashTable.962" }
%"class.WTF::HashTable.962" = type <{ %"class.blink::WeakMember.964"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.964" = type opaque
%"class.blink::HeapHashSet.965" = type { %"class.WTF::HashSet.968" }
%"class.WTF::HashSet.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"class.blink::WeakMember.971"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.971" = type opaque
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.53", i32, i32, i32, %"class.blink::Member.90", %"class.blink::Member.978", %"class.blink::Member.1005", %"class.blink::HeapHashMap.1007", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1014", %"class.blink::HeapHashSet.1014", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1020", %"class.blink::Member.1034", %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.blink::Member.1072", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1238", %"class.blink::Member.1244", %"class.blink::HeapHashMap.1246", %"class.blink::HeapHashMap.1253", %"class.std::__1::unique_ptr.1260", i32, %"class.blink::HeapVector.1266", %"class.blink::HeapVector.1266", %"class.blink::HeapVector.990", %"class.blink::HeapHashSet.1274", %"class.blink::HeapHashMap.1281", %"class.blink::Member.1288", %"class.blink::HeapHashMap.1290", %class.scoped_refptr.1297, %class.scoped_refptr.1298, %"class.blink::Member.1202", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1299", %"class.blink::Member.39" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.982", %"class.blink::HeapVector.990", i8 }>
%"class.blink::HeapVector.982" = type { %"class.WTF::Vector.985" }
%"class.WTF::Vector.985" = type { %"class.WTF::VectorBuffer.986" }
%"class.WTF::VectorBuffer.986" = type { %"class.WTF::VectorBufferBase.987" }
%"class.WTF::VectorBufferBase.987" = type { %"class.blink::Member.988"*, i32, i32 }
%"class.blink::Member.988" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1001", %"class.blink::Member.1003", %"class.blink::Member.1003", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1001" = type <{ %"class.blink::Member.1003"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.1003", %"class.blink::Member.1003" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1007" = type { %"class.WTF::HashMap.1010" }
%"class.WTF::HashMap.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"struct.WTF::KeyValuePair.1013"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1013" = type opaque
%"class.blink::HeapHashSet.1014" = type { %"class.WTF::HashSet.1017" }
%"class.WTF::HashSet.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1024", %"class.blink::Member.1026" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1030", %"class.blink::Member.1032" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1492", %"class.blink::Member.1026", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1492" = type { %"class.WTF::Vector.1495" }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"class.blink::Member.1032"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1499, i32, %"class.absl::optional.1500", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.154" }>
%class.sk_sp.1499 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1500" = type { %"class.absl::optional_internal::optional_data.1501" }
%"class.absl::optional_internal::optional_data.1501" = type { %"class.absl::optional_internal::optional_data_base.1502" }
%"class.absl::optional_internal::optional_data_base.1502" = type { %"class.absl::optional_internal::optional_data_dtor_base.1503" }
%"class.absl::optional_internal::optional_data_dtor_base.1503" = type { i8, %union.anon.1504 }
%union.anon.1504 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.53", %class.scoped_refptr.1045, %"class.blink::SelectorFilter", %"class.blink::Member.1005", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1038" }
%"class.blink::HeapHashMap.1038" = type { %"class.WTF::HashMap.1041" }
%"class.WTF::HashMap.1041" = type { %"class.WTF::HashTable.1042" }
%"class.WTF::HashTable.1042" = type <{ %"struct.WTF::KeyValuePair.1044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1044" = type opaque
%class.scoped_refptr.1045 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1046", %"class.std::__1::unique_ptr.1058" }
%"class.blink::HeapVector.1046" = type { %"class.WTF::Vector.1049" }
%"class.WTF::Vector.1049" = type { %"class.WTF::VectorBuffer.1050" }
%"class.WTF::VectorBuffer.1050" = type { %"class.WTF::VectorBufferBase.1051" }
%"class.WTF::VectorBufferBase.1051" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.39", %"class.WTF::Vector.1052" }
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054", [16 x i8] }
%"class.WTF::VectorBufferBase.1054" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1070", i8, [7 x i8] }>
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1094", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1081", %class.scoped_refptr.1086, %class.scoped_refptr.1093, %class.scoped_refptr.1092, %"class.WTF::Vector.113", %"class.WTF::Vector.113", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"struct.WTF::KeyValuePair.1080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1080" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2506 }
%class.scoped_refptr.2506 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1087", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1089", %"union.blink::InvalidationSet::Backing.1090", %"union.blink::InvalidationSet::Backing.1091", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1087" = type { %"class.base::RefCounted.1088" }
%"class.base::RefCounted.1088" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1089" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1090" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1091" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type opaque
%class.scoped_refptr.1086 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1092, %class.scoped_refptr.1092 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1087", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1089", %"union.blink::InvalidationSet::Backing.1090", %"union.blink::InvalidationSet::Backing.1091", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1093 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1092 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1098", %"class.blink::HeapHashMap.1098", %"class.blink::HeapHashMap.1098", %"class.blink::HeapHashMap.1098", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::HeapVector.1105", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1145", %"class.blink::HeapVector.1153", %"class.blink::HeapVector.1161", %"class.blink::HeapVector.1178", %"class.blink::HeapVector.1186", %"class.blink::HeapVector.1194", %"class.blink::HeapVector.1207", %"class.WTF::Vector.1214", i32, %"class.blink::Member.1220" }
%"class.blink::HeapHashMap.1098" = type { %"class.WTF::HashMap.1101" }
%"class.WTF::HashMap.1101" = type { %"class.WTF::HashTable.1102" }
%"class.WTF::HashTable.1102" = type <{ %"struct.WTF::KeyValuePair.1104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1104" = type { %"class.WTF::AtomicString", %"class.blink::Member.2520" }
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::HeapVector.1105"* }
%"class.blink::HeapVector.1105" = type { %"class.WTF::Vector.1108" }
%"class.WTF::Vector.1108" = type { %"class.WTF::VectorBuffer.1109" }
%"class.WTF::VectorBuffer.1109" = type { %"class.WTF::VectorBufferBase.1110" }
%"class.WTF::VectorBufferBase.1110" = type { %"class.blink::Member.1111"*, i32, i32 }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1115", i64, [4 x i32] }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.14", %"class.blink::Member.1140" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1145" = type { %"class.WTF::Vector.1148" }
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"class.blink::Member.1151"*, i32, i32 }
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1153" = type { %"class.WTF::Vector.1156" }
%"class.WTF::Vector.1156" = type { %"class.WTF::VectorBuffer.1157" }
%"class.WTF::VectorBuffer.1157" = type { %"class.WTF::VectorBufferBase.1158" }
%"class.WTF::VectorBufferBase.1158" = type { %"class.blink::Member.1159"*, i32, i32 }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.2517" }
%"class.blink::MemberBase.2517" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.14" }
%"class.blink::HeapVector.1161" = type { %"class.WTF::Vector.1164" }
%"class.WTF::Vector.1164" = type { %"class.WTF::VectorBuffer.1165" }
%"class.WTF::VectorBuffer.1165" = type { %"class.WTF::VectorBufferBase.1166" }
%"class.WTF::VectorBufferBase.1166" = type { %"class.blink::Member.1167"*, i32, i32 }
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1169", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1169" = type { %"class.WTF::Vector.1172" }
%"class.WTF::Vector.1172" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174" }
%"class.WTF::VectorBufferBase.1174" = type { %"class.blink::Member.1175"*, i32, i32 }
%"class.blink::Member.1175" = type opaque
%"class.blink::HeapVector.1178" = type { %"class.WTF::Vector.1181" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::Member.1184"*, i32, i32 }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.14" }
%"class.blink::HeapVector.1186" = type { %"class.WTF::Vector.1189" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::Member.1192"*, i32, i32 }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", i32, [4 x i8] }>
%"class.blink::HeapVector.1194" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202", %"class.blink::Member.1202" }
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1115", i32, i32 }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1217, i8, [7 x i8] }>
%class.scoped_refptr.1217 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1224", %"class.blink::HeapHashMap.1224", %"class.blink::HeapHashMap.1224", %"class.blink::HeapHashMap.1224" }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1231" }
%"class.blink::HeapHashMap.1231" = type { %"class.WTF::HashMap.1234" }
%"class.WTF::HashMap.1234" = type { %"class.WTF::HashTable.1235" }
%"class.WTF::HashTable.1235" = type <{ %"struct.WTF::KeyValuePair.1237"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1237" = type { %"class.blink::Member.51", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2507", %"class.WTF::Vector.2507" }
%"class.WTF::Vector.2507" = type { %"class.WTF::VectorBuffer.2508" }
%"class.WTF::VectorBuffer.2508" = type { %"class.WTF::VectorBufferBase.2509" }
%"class.WTF::VectorBufferBase.2509" = type { %class.scoped_refptr.2506*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1238" = type { %"class.WTF::HashSet.1241" }
%"class.WTF::HashSet.1241" = type { %"class.WTF::HashTable.1242" }
%"class.WTF::HashTable.1242" = type <{ %"class.blink::Member.39"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1246" = type { %"class.WTF::HashMap.1249" }
%"class.WTF::HashMap.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"struct.WTF::KeyValuePair.1252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1252" = type opaque
%"class.blink::HeapHashMap.1253" = type { %"class.WTF::HashMap.1256" }
%"class.WTF::HashMap.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"struct.WTF::KeyValuePair.1259"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1259" = type opaque
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1266" = type { %"class.WTF::Vector.1269" }
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"struct.std::__1::pair.1272"*, i32, i32 }
%"struct.std::__1::pair.1272" = type opaque
%"class.blink::HeapVector.990" = type { %"class.WTF::Vector.993" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"struct.std::__1::pair.996"*, i32, i32 }
%"struct.std::__1::pair.996" = type opaque
%"class.blink::HeapHashSet.1274" = type { %"class.WTF::HashSet.1277" }
%"class.WTF::HashSet.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"class.blink::WeakMember.1280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1280" = type { %"class.blink::MemberBase.91" }
%"class.blink::HeapHashMap.1281" = type { %"class.WTF::HashMap.1284" }
%"class.WTF::HashMap.1284" = type { %"class.WTF::HashTable.1285" }
%"class.WTF::HashTable.1285" = type <{ %"struct.WTF::KeyValuePair.1287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1287" = type { %"class.WTF::AtomicString", %"class.blink::Member.1167" }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1290" = type { %"class.WTF::HashMap.1293" }
%"class.WTF::HashMap.1293" = type { %"class.WTF::HashTable.1294" }
%"class.WTF::HashTable.1294" = type <{ %"struct.WTF::KeyValuePair.1296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1296" = type opaque
%class.scoped_refptr.1297 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1298 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1299" = type { %"class.WTF::HashSet.1302" }
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"class.blink::Member.1305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1305" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.84" }
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1312" = type { %"class.WTF::HashMap.1315" }
%"class.WTF::HashMap.1315" = type { %"class.WTF::HashTable.1316" }
%"class.WTF::HashTable.1316" = type <{ %"struct.WTF::KeyValuePair.1318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1318" = type opaque
%"class.WTF::Vector.1319" = type { %"class.WTF::VectorBuffer.1320" }
%"class.WTF::VectorBuffer.1320" = type { %"class.WTF::VectorBufferBase.1321" }
%"class.WTF::VectorBufferBase.1321" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1330" = type { %"class.WTF::Vector.1333" }
%"class.WTF::Vector.1333" = type { %"class.WTF::VectorBuffer.1334" }
%"class.WTF::VectorBuffer.1334" = type { %"class.WTF::VectorBufferBase.1335" }
%"class.WTF::VectorBufferBase.1335" = type { %"class.blink::Member.1336"*, i32, i32 }
%"class.blink::Member.1336" = type opaque
%"class.std::__1::unique_ptr.1338" = type { %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1344" = type { %"class.WTF::HashSet.1347" }
%"class.WTF::HashSet.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"class.blink::WeakMember.1350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1350" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1351", i32, [4 x i8] }>
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353" }
%"class.WTF::VectorBufferBase.1353" = type { %"struct.std::__1::pair.1354"*, i32, i32 }
%"struct.std::__1::pair.1354" = type opaque
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1370" = type { %"class.WTF::Vector.1373" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"class.blink::Member.1376"*, i32, i32 }
%"class.blink::Member.1376" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.53" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1380" = type { %"class.blink::MemberBase.1381" }
%"class.blink::MemberBase.1381" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1388" = type { %"class.WTF::HashTable.1389" }
%"class.WTF::HashTable.1389" = type <{ %"struct.WTF::KeyValuePair.1392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1392" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.948", { i64, i64 } }
%"class.blink::WeakMember.948" = type { %"class.blink::MemberBase.54" }
%"class.blink::HeapHashSet.1401" = type { %"class.WTF::HashSet.1404" }
%"class.WTF::HashSet.1404" = type { %"class.WTF::HashTable.1405" }
%"class.WTF::HashTable.1405" = type <{ %"class.blink::Member.1407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1407" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.714" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase.716" }
%"class.WTF::VectorBufferBase.716" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1438" = type { %"class.WTF::HashMap.1441" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1444" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1457" = type { %"class.WTF::HashMap.1460" }
%"class.WTF::HashMap.1460" = type { %"class.WTF::HashTable.1461" }
%"class.WTF::HashTable.1461" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"class.blink::HeapObserverSet.1464" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1465" }
%"class.blink::HeapHashSet.1465" = type { %"class.WTF::HashSet.1468" }
%"class.WTF::HashSet.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"class.blink::WeakMember.1471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1471" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.53", %"class.blink::HeapHashSet.1481", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1488", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1481" = type { %"class.WTF::HashSet.1484" }
%"class.WTF::HashSet.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"class.blink::Member.1487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1487" = type opaque
%"class.blink::HeapTaskRunnerTimer.1488" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1489", { i64, i64 } }
%"class.blink::WeakMember.1489" = type { %"class.blink::MemberBase.1475" }
%"class.blink::WeakMember.1476" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::WebVector.2272" = type { %"class.std::__1::vector.2273" }
%"class.std::__1::vector.2273" = type { %"class.std::__1::__vector_base.2274" }
%"class.std::__1::__vector_base.2274" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.gfx::Size"* }
%"class.blink::LinkStyle" = type <{ %"class.blink::LinkResource", %"class.blink::ResourceClient.base", [7 x i8], %"class.blink::Member.90", i32, i32, i8, %"class.blink::StyleEngineContext", i8, i8, i8, i8, [2 x i8] }>
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2280", [7 x i8], %"class.blink::Member.2281", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.2280" = type { i8 }
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2285", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2305", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2357", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2374", %"class.blink::ResourceResponse", %class.scoped_refptr.2215, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2285" = type { %"class.absl::optional_internal::optional_data.2286" }
%"class.absl::optional_internal::optional_data.2286" = type { %"class.absl::optional_internal::optional_data_base.2287" }
%"class.absl::optional_internal::optional_data_base.2287" = type { %"class.absl::optional_internal::optional_data_dtor_base.2288" }
%"class.absl::optional_internal::optional_data_dtor_base.2288" = type { i8, %union.anon.2289 }
%union.anon.2289 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2290", i8, %"class.absl::optional.2295", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2290" = type { %"class.absl::optional_internal::optional_data.2291" }
%"class.absl::optional_internal::optional_data.2291" = type { %"class.absl::optional_internal::optional_data_base.2292" }
%"class.absl::optional_internal::optional_data_base.2292" = type { %"class.absl::optional_internal::optional_data_dtor_base.2293" }
%"class.absl::optional_internal::optional_data_dtor_base.2293" = type { i8, [7 x i8], %union.anon.2294 }
%union.anon.2294 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2295" = type { %"class.absl::optional_internal::optional_data.2296" }
%"class.absl::optional_internal::optional_data.2296" = type { %"class.absl::optional_internal::optional_data_base.2297" }
%"class.absl::optional_internal::optional_data_base.2297" = type { %"class.absl::optional_internal::optional_data_dtor_base.2298" }
%"class.absl::optional_internal::optional_data_dtor_base.2298" = type { i8, %union.anon.2299 }
%union.anon.2299 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2300", %"class.WTF::Vector.498" }
%"class.WTF::Vector.2300" = type { %"class.WTF::VectorBuffer.2301" }
%"class.WTF::VectorBuffer.2301" = type { %"class.WTF::VectorBufferBase.2302" }
%"class.WTF::VectorBufferBase.2302" = type { i32*, i32, i32 }
%"class.WTF::Vector.2305" = type { %"class.WTF::VectorBuffer.2306" }
%"class.WTF::VectorBuffer.2306" = type { %"class.WTF::VectorBufferBase.2307" }
%"class.WTF::VectorBufferBase.2307" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2353" }
%"class.WTF::HashMap.2353" = type { %"class.WTF::HashTable.2354" }
%"class.WTF::HashTable.2354" = type <{ %"struct.WTF::KeyValuePair.2356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2356" = type <{ %"class.blink::WeakMember.2536", i32, [4 x i8] }>
%"class.blink::WeakMember.2536" = type { %"class.blink::MemberBase.2537" }
%"class.blink::MemberBase.2537" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2280", [7 x i8], %"class.blink::Member.2281", i8, [7 x i8] }>
%"class.blink::HeapHashSet.2357" = type { %"class.WTF::HashSet.2360" }
%"class.WTF::HashSet.2360" = type { %"class.WTF::HashTable.2361" }
%"class.WTF::HashTable.2361" = type <{ %"class.blink::WeakMember.2363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2363" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2364", %"class.WTF::String", %"class.WTF::HashSet.2365", i8, i8, %class.scoped_refptr.749, %class.scoped_refptr.2370, %class.scoped_refptr.2372 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.2364" = type { i8 }
%"class.WTF::HashSet.2365" = type { %"class.WTF::HashTable.2366" }
%"class.WTF::HashTable.2366" = type <{ %"struct.std::__1::pair.2369"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2369" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.2370 = type { %"class.base::RefCountedData.2371"* }
%"class.base::RefCountedData.2371" = type opaque
%class.scoped_refptr.2372 = type { %"class.base::RefCountedData.2373"* }
%"class.base::RefCountedData.2373" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.401, %class.scoped_refptr.401, %class.scoped_refptr.401, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2308, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2321", %"class.absl::optional.2326", %"class.absl::optional.2336", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1553", %"class.absl::optional.2336", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2336", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1553", %"class.absl::optional.2341", i8, %class.scoped_refptr.2347 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.2308 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2309", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.2310", %class.scoped_refptr.2319, i8, %"class.url::Origin" }
%"class.base::RefCounted.2309" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.2310" = type { %"class.std::__1::vector.2311" }
%"class.std::__1::vector.2311" = type { %"class.std::__1::__vector_base.2312" }
%"class.std::__1::__vector_base.2312" = type { %"class.std::__1::unique_ptr.2313"*, %"class.std::__1::unique_ptr.2313"*, %"class.std::__1::__compressed_pair.2314" }
%"class.std::__1::unique_ptr.2313" = type { %"class.std::__1::__compressed_pair.2522" }
%"class.std::__1::__compressed_pair.2522" = type { %"struct.std::__1::__compressed_pair_elem.2523" }
%"struct.std::__1::__compressed_pair_elem.2523" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2314" = type { %"struct.std::__1::__compressed_pair_elem.2315" }
%"struct.std::__1::__compressed_pair_elem.2315" = type { %"class.std::__1::unique_ptr.2313"* }
%class.scoped_refptr.2319 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2320", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2320" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2321" = type { %"class.absl::optional_internal::optional_data.2322" }
%"class.absl::optional_internal::optional_data.2322" = type { %"class.absl::optional_internal::optional_data_base.2323" }
%"class.absl::optional_internal::optional_data_base.2323" = type { %"class.absl::optional_internal::optional_data_dtor_base.2324" }
%"class.absl::optional_internal::optional_data_dtor_base.2324" = type { i8, %union.anon.2325 }
%union.anon.2325 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2326" = type { %"class.absl::optional_internal::optional_data.2327" }
%"class.absl::optional_internal::optional_data.2327" = type { %"class.absl::optional_internal::optional_data_base.2328" }
%"class.absl::optional_internal::optional_data_base.2328" = type { %"class.absl::optional_internal::optional_data_dtor_base.2329" }
%"class.absl::optional_internal::optional_data_dtor_base.2329" = type { i8, %union.anon.2330 }
%union.anon.2330 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2331", %"class.WTF::Vector.498", %"class.WTF::String" }
%"class.WTF::Vector.2331" = type { %"class.WTF::VectorBuffer.2332" }
%"class.WTF::VectorBuffer.2332" = type { %"class.WTF::VectorBufferBase.2333" }
%"class.WTF::VectorBufferBase.2333" = type { %class.scoped_refptr.401*, i32, i32 }
%"class.absl::optional.2336" = type { %"class.absl::optional_internal::optional_data.2337" }
%"class.absl::optional_internal::optional_data.2337" = type { %"class.absl::optional_internal::optional_data_base.2338" }
%"class.absl::optional_internal::optional_data_base.2338" = type { %"class.absl::optional_internal::optional_data_dtor_base.2339" }
%"class.absl::optional_internal::optional_data_dtor_base.2339" = type { i8, %union.anon.2340 }
%union.anon.2340 = type { %"class.WTF::String" }
%"class.absl::optional.2341" = type { %"class.absl::optional_internal::optional_data.2342" }
%"class.absl::optional_internal::optional_data.2342" = type { %"class.absl::optional_internal::optional_data_base.2343" }
%"class.absl::optional_internal::optional_data_base.2343" = type { %"class.absl::optional_internal::optional_data_dtor_base.2344" }
%"class.absl::optional_internal::optional_data_dtor_base.2344" = type { i8, %union.anon.2345 }
%union.anon.2345 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2346" }
%"class.mojo::PendingRemote.2346" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2347 = type { %"class.base::RefCountedData.2348"* }
%"class.base::RefCountedData.2348" = type { %"class.base::RefCountedThreadSafe.2527", %"class.base::internal::flat_tree.2528" }
%"class.base::RefCountedThreadSafe.2527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2528" = type { %"class.std::__1::vector.2529" }
%"class.std::__1::vector.2529" = type { %"class.std::__1::__vector_base.2530" }
%"class.std::__1::__vector_base.2530" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2531" }
%"class.std::__1::__compressed_pair.2531" = type { %"struct.std::__1::__compressed_pair_elem.2532" }
%"struct.std::__1::__compressed_pair_elem.2532" = type { i32* }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2376" }
%"class.std::__1::__tree.2376" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2377", %"class.std::__1::__compressed_pair.2381" }
%"class.std::__1::__compressed_pair.2377" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.blink::StyleEngineContext" = type { i8 }
%"struct.blink::LinkLoadParameters" = type { %"class.blink::LinkRelAttribute", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1553" }
%"class.blink::LinkWebBundle" = type { %"class.blink::LinkResource", %"class.blink::SubresourceWebBundle", %"class.blink::Member.2385" }
%"class.blink::SubresourceWebBundle" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::WebBundleLoader"* }
%"class.blink::WebBundleLoader" = type opaque
%"class.blink::LinkManifest" = type { %"class.blink::LinkResource" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2655" }
%"class.WTF::Vector.2655" = type { %"class.WTF::VectorBuffer.2656" }
%"class.WTF::VectorBuffer.2656" = type { %"class.WTF::VectorBufferBase.2657", [64 x i8] }
%"class.WTF::VectorBufferBase.2657" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2389", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2401", %"class.WTF::Vector.2402" }
%"class.std::__1::unique_ptr.2389" = type { %"class.std::__1::__compressed_pair.2390" }
%"class.std::__1::__compressed_pair.2390" = type { %"struct.std::__1::__compressed_pair_elem.2391" }
%"struct.std::__1::__compressed_pair_elem.2391" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2392", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2392" = type { %"class.std::__1::__compressed_pair.2393" }
%"class.std::__1::__compressed_pair.2393" = type { %"struct.std::__1::__compressed_pair_elem.2394" }
%"struct.std::__1::__compressed_pair_elem.2394" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2401" = type { %"class.blink::MemberBase.693" }
%"class.WTF::Vector.2402" = type { %"class.WTF::VectorBuffer.2403" }
%"class.WTF::VectorBuffer.2403" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.blink::IncrementLoadEventDelayCount" = type { %"class.blink::WeakPersistent" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.2409" }
%"class.blink::PersistentBase.2409" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.2410" }
%"class.blink::PersistentNodePtr.2410" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.2414" = type { %"class.blink::PersistentBase.2415" }
%"class.blink::PersistentBase.2415" = type { %"class.blink::HTMLLinkElement"*, %"class.blink::PersistentNodePtr.2416" }
%"class.blink::PersistentNodePtr.2416" = type { %"class.blink::PersistentNode"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.197", [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2421, %"class.blink::Member.2422", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2467" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2421 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.2426", %"class.blink::HeapHashMap.2433", %"class.std::__1::unique_ptr.2443", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.2455", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.2458" }
%"class.blink::HeapHashMap.2426" = type { %"class.WTF::HashMap.2429" }
%"class.WTF::HashMap.2429" = type { %"class.WTF::HashTable.2430" }
%"class.WTF::HashTable.2430" = type <{ %"struct.WTF::KeyValuePair.2432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2432" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.2433" = type { %"class.WTF::HashMap.2436" }
%"class.WTF::HashMap.2436" = type { %"class.WTF::HashTable.2437" }
%"class.WTF::HashTable.2437" = type <{ %"struct.WTF::KeyValuePair.2439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2439" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.2440" }
%"class.blink::TraceWrapperV8Reference.2440" = type { %"class.v8::TracedReference.2441" }
%"class.v8::TracedReference.2441" = type { %"class.v8::BasicTracedReference.2442" }
%"class.v8::BasicTracedReference.2442" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.2443" = type { %"class.std::__1::__compressed_pair.2444" }
%"class.std::__1::__compressed_pair.2444" = type { %"struct.std::__1::__compressed_pair_elem.2445" }
%"struct.std::__1::__compressed_pair_elem.2445" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.2446" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.2446" = type { %"class.std::__1::__compressed_pair.2447" }
%"class.std::__1::__compressed_pair.2447" = type { %"struct.std::__1::__compressed_pair_elem.2448" }
%"struct.std::__1::__compressed_pair_elem.2448" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.2455" = type { %"class.v8::Persistent.2456" }
%"class.v8::Persistent.2456" = type { %"class.v8::PersistentBase.2457" }
%"class.v8::PersistentBase.2457" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.2458" = type { %"class.WTF::HashMap.2461" }
%"class.WTF::HashMap.2461" = type { %"class.WTF::HashTable.2462" }
%"class.WTF::HashTable.2462" = type <{ %"struct.WTF::KeyValuePair.2464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2464" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2465" }
%"class.blink::Persistent.2465" = type { %"class.blink::PersistentBase.2466" }
%"class.blink::PersistentBase.2466" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2467" = type { %"class.base::StrongAlias.2468" }
%"class.base::StrongAlias.2468" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.2469", i8, i8, %class.scoped_refptr.946, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.2469" = type { %"class.std::__1::__compressed_pair.2470" }
%"class.std::__1::__compressed_pair.2470" = type { %"struct.std::__1::__compressed_pair_elem.2471" }
%"struct.std::__1::__compressed_pair_elem.2471" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2477", i8, [7 x i8] }>
%"class.blink::Member.2477" = type { %"class.blink::MemberBase.2478" }
%"class.blink::MemberBase.2478" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2479" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2479" = type { %"class.v8::TracedReference.2480" }
%"class.v8::TracedReference.2480" = type { %"class.v8::BasicTracedReference.2481" }
%"class.v8::BasicTracedReference.2481" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2482", %"class.WTF::String"* }
%"class.blink::HeapVector.2482" = type { %"class.WTF::Vector.2485" }
%"class.WTF::Vector.2485" = type { %"class.WTF::VectorBuffer.2486" }
%"class.WTF::VectorBuffer.2486" = type { %"class.WTF::VectorBufferBase.2487" }
%"class.WTF::VectorBufferBase.2487" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.2489" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2490", %"class.blink::HeapVector.2495", i8, [7 x i8] }>
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2493" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2492" }
%"class.blink::WeakMember.2492" = type { %"class.blink::MemberBase.442" }
%"class.blink::Member.2493" = type { %"class.blink::MemberBase.2494" }
%"class.blink::MemberBase.2494" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.2495" = type { %"class.WTF::Vector.2498" }
%"class.WTF::Vector.2498" = type { %"class.WTF::VectorBuffer.2499" }
%"class.WTF::VectorBuffer.2499" = type { %"class.WTF::VectorBufferBase.2500", [96 x i8] }
%"class.WTF::VectorBufferBase.2500" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1202" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1306", %"class.blink::Member.2504", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2504" = type { %"class.blink::MemberBase.2505" }
%"class.blink::MemberBase.2505" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::FormAssociated" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink15HTMLLinkElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm = comdat any

$_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12LinkResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12LinkResourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12LinkResourceEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15HTMLLinkElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLLinkElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS3_28IncrementLoadEventDelayCountENS5_14default_deleteIS7_EEEEEJNS3_10PersistentIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS2_28IncrementLoadEventDelayCountENS4_14default_deleteIS6_EEEEEJNS2_10PersistentIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10TraceTraitINS_12DOMTokenListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10LinkLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink15HTMLLinkElementE = hidden unnamed_addr constant { [177 x i8*], [3 x i8*], [10 x i8*] } { [177 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*, %"class.blink::Visitor"*)* @_ZNK5blink15HTMLLinkElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLLinkElement"*)* @_ZNK5blink15HTMLLinkElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*, i32)* @_ZN5blink15HTMLLinkElement43NotifyLoadedSheetAndAllCriticalSubresourcesENS_4Node22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLLinkElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink15HTMLLinkElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink15HTMLLinkElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZNK5blink15HTMLLinkElement21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2489"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink15HTMLLinkElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink15HTMLLinkElement21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::HTMLLinkElement"*)* @_ZNK5blink15HTMLLinkElement24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*, %"class.blink::Attribute"*)* @_ZNK5blink15HTMLLinkElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement14ShouldLoadLinkEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement21IsLinkCreatedByParserEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement10LinkLoadedEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement18LinkLoadingErroredEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElement20GetLoadingTaskRunnerEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLLinkElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink15HTMLLinkElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElement14ShouldLoadLinkEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElement10LinkLoadedEv to i8*), i8* bitcast (void (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElement18LinkLoadingErroredEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElement21IsLinkCreatedByParserEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::HTMLLinkElement"*)* @_ZThn104_N5blink15HTMLLinkElement20GetLoadingTaskRunnerEv to i8*)] }, align 8
@_ZN5blink10html_names10kSizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kResourcesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kScopesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kRelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"link\00", align 1
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kAsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kMediaAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kIntegrityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kImportanceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [47 x i8] c"HTML element <link> is ignored in shadow tree.\00", align 1
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [14 x i8] c"ScheduleEvent\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/html/html_link_element.cc\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@_ZN5blink10html_names10kAsyncAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::KURL]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink15HTMLLinkElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SingleModuleClientEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SingleModuleClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink12DOMTokenListE = external unnamed_addr constant { [12 x i8*] }, align 8
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv = private unnamed_addr constant [57 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::Size]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12LinkResourceEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LinkResource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12LinkResourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12LinkResourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12LinkResourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink15HTMLLinkElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::HTMLLinkElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::HTMLLinkElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink15HTMLLinkElementC2ERNS_8DocumentENS_18CreateElementFlagsE
@_ZN5blink15HTMLLinkElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLLinkElement"*), void (%"class.blink::HTMLLinkElement"*)* @_ZN5blink15HTMLLinkElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLLinkElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* %1, i32 1026) #12
  %6 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::LinkLoaderClient", %"class.blink::LinkLoaderClient"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::LinkResource"* null, %"class.blink::LinkResource"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %14, i8 zeroext 3) #12
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm(i64 32) #12
  %17 = bitcast i8* %16 to %"class.blink::LinkLoader"*
  %18 = icmp eq %"class.blink::HTMLLinkElement"* %0, null
  %19 = select i1 %18, %"class.blink::LinkLoaderClient"* null, %"class.blink::LinkLoaderClient"* %8
  tail call void @_ZN5blink10LinkLoaderC1EPNS_16LinkLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::LinkLoader"* %17, %"class.blink::LinkLoaderClient"* %19, %"class.base::SingleThreadTaskRunner"* %15) #12
  %20 = getelementptr inbounds i8, i8* %16, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = bitcast %"class.blink::LinkLoader"** %24 to i8**
  store i8* %16, i8** %25, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 4, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 9
  %28 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 40, i1 false)
  store i32 1, i32* %27, align 8
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i64**
  store i64* null, i64** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12DOMTokenListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  %35 = bitcast i8* %34 to %"class.blink::SpaceSplitString::Data"**
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 24
  %37 = bitcast i8* %36 to %"class.blink::Element"**
  store %"class.blink::Element"* %5, %"class.blink::Element"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds i8, i8* %30, i64 32
  %41 = bitcast i8* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 16777216
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %49) #12
  br label %50

50:                                               ; preds = %3, %43, %48
  %51 = getelementptr inbounds i8, i8* %30, i64 40
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds i8, i8* %30, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 11, i32 0, i32 0
  %57 = bitcast %"class.blink::DOMTokenList"** %56 to i8**
  store i8* %30, i8** %57, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12
  %59 = bitcast %"class.WTF::Vector.41"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #12
  %60 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %61 = bitcast i8* %60 to %"class.blink::RelList"*
  tail call void @_ZN5blink7RelListC1EPNS_7ElementE(%"class.blink::RelList"* %61, %"class.blink::Element"* %5) #12
  %62 = getelementptr inbounds i8, i8* %60, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  %66 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 13, i32 0, i32 0
  %67 = bitcast %"class.blink::RelList"** %66 to i8**
  store i8* %60, i8** %67, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14
  tail call void @_ZN5blink16LinkRelAttributeC1Ev(%"class.blink::LinkRelAttribute"* %68) #12
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kResourcesAttrE, align 8
  %70 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %71 = bitcast i8* %70 to i32 (...)***
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to i64**
  store i64* null, i64** %73, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12DOMTokenListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to %"class.blink::SpaceSplitString::Data"**
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %70, i64 24
  %77 = bitcast i8* %76 to %"class.blink::Element"**
  store %"class.blink::Element"* %5, %"class.blink::Element"** %77, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = getelementptr inbounds i8, i8* %70, i64 32
  %81 = bitcast i8* %80 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %79, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %79, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %50
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 16777216
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #12
  br label %90

90:                                               ; preds = %50, %83, %88
  %91 = getelementptr inbounds i8, i8* %70, i64 40
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds i8, i8* %70, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  %96 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 15, i32 0, i32 0
  %97 = bitcast %"class.blink::DOMTokenList"** %96 to i8**
  store i8* %70, i8** %97, align 8
  %98 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 16
  %99 = bitcast %"class.WTF::HashSet"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 20, i1 false) #12
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kScopesAttrE, align 8
  %101 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %102 = bitcast i8* %101 to i32 (...)***
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = bitcast i8* %103 to i64**
  store i64* null, i64** %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink12DOMTokenListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %105 = getelementptr inbounds i8, i8* %101, i64 16
  %106 = bitcast i8* %105 to %"class.blink::SpaceSplitString::Data"**
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %101, i64 24
  %108 = bitcast i8* %107 to %"class.blink::Element"**
  store %"class.blink::Element"* %5, %"class.blink::Element"** %108, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds i8, i8* %101, i64 32
  %112 = bitcast i8* %111 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %110, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %113 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %113, label %121, label %114

114:                                              ; preds = %90
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 16777216
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %120) #12
  br label %121

121:                                              ; preds = %90, %114, %119
  %122 = getelementptr inbounds i8, i8* %101, i64 40
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds i8, i8* %101, i64 -4
  %124 = bitcast i8* %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = or i16 %125, 1
  store atomic i16 %126, i16* %124 release, align 2
  %127 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 17, i32 0, i32 0
  %128 = bitcast %"class.blink::DOMTokenList"** %127 to i8**
  store i8* %101, i8** %128, align 8
  %129 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 18
  %130 = bitcast %"class.WTF::HashSet"* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 20, i1 false) #12
  %131 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 19
  %132 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 0
  %133 = load i8, i8* %132, align 8
  %134 = and i8 %133, 1
  store i8 %134, i8* %131, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink15HTMLLinkElement20GetLoadingTaskRunnerEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %5, i8 zeroext 3) #12
  ret %"class.base::SingleThreadTaskRunner"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink16LinkRelAttributeC1Ev(%"class.blink::LinkRelAttribute"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElementD2Ev(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [177 x i8*], [3 x i8*], [10 x i8*] }, { [177 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink15HTMLLinkElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 18, i32 0, i32 0
  %6 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  %7 = icmp eq %"class.blink::KURL"* %6, null
  br i1 %7, label %27, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 18, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %22, %12
  %15 = phi i64 [ 0, %12 ], [ %23, %22 ]
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 %15, i32 4
  %17 = bitcast %"class.WTF::String"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, inttoptr (i64 -1 to i8*)
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 %15
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %21) #12
  br label %22

22:                                               ; preds = %20, %14
  %23 = add nuw nsw i64 %15, 1
  %24 = icmp eq i64 %23, %13
  br i1 %24, label %25, label %14

25:                                               ; preds = %22, %8
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #12
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %5, align 8
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 16, i32 0, i32 0
  %29 = load %"class.blink::KURL"*, %"class.blink::KURL"** %28, align 8
  %30 = icmp eq %"class.blink::KURL"* %29, null
  br i1 %30, label %50, label %31, !prof !2

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 16, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = zext i32 %33 to i64
  br label %37

37:                                               ; preds = %45, %35
  %38 = phi i64 [ 0, %35 ], [ %46, %45 ]
  %39 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 %38, i32 4
  %40 = bitcast %"class.WTF::String"* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, inttoptr (i64 -1 to i8*)
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 %38
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %44) #12
  br label %45

45:                                               ; preds = %43, %37
  %46 = add nuw nsw i64 %38, 1
  %47 = icmp eq i64 %46, %36
  br i1 %47, label %48, label %37

48:                                               ; preds = %45, %31
  %49 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %28, align 8
  br label %50

50:                                               ; preds = %27, %48
  %51 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %52 = load %"class.gfx::Size"*, %"class.gfx::Size"** %51, align 8
  %53 = icmp eq %"class.gfx::Size"* %52, null
  %54 = bitcast %"class.gfx::Size"* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #12
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  %62 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 8, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #12
  br label %78

78:                                               ; preds = %61, %74, %77
  %79 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 7, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %78, %91, %94
  %96 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 6, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #12
  br label %112

112:                                              ; preds = %95, %108, %111
  %113 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 5, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #12
  br label %129

129:                                              ; preds = %112, %125, %128
  %130 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 4, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #12
  br label %146

146:                                              ; preds = %129, %142, %145
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %147 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %147) #12
  %148 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %148) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink15HTMLLinkElementD1Ev(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::HTMLLinkElement"*
  tail call void @_ZN5blink15HTMLLinkElementD2Ev(%"class.blink::HTMLLinkElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElementD0Ev(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15HTMLLinkElementD2Ev(%"class.blink::HTMLLinkElement"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink15HTMLLinkElementD0Ev(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::HTMLLinkElement"*
  tail call void @_ZN5blink15HTMLLinkElementD2Ev(%"class.blink::HTMLLinkElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLLinkElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LinkRelAttribute", align 4
  %4 = alloca %"class.blink::WebVector.2272", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %14
  br i1 %15, label %16, label %58

16:                                               ; preds = %2
  %17 = bitcast %"class.blink::LinkRelAttribute"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  call void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %18) #12
  %19 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14
  %20 = bitcast %"class.blink::LinkRelAttribute"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 4 %17, i64 6, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %21 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %22 = load i16, i16* %21, align 4
  %23 = and i16 %22, 4096
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = call %"class.blink::Document"* @_ZNK5blink8Document14ParentDocumentEv(%"class.blink::Document"* %29) #12
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %25
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = icmp eq %"class.blink::Document"* %35, null
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 2
  %38 = icmp eq %"class.blink::UseCounter"* %37, null
  %39 = or i1 %36, %38
  br i1 %39, label %45, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::UseCounter"* %37 to void (%"class.blink::UseCounter"*, i32)***
  %42 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %42, i64 3
  %44 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %43, align 8
  call void %44(%"class.blink::UseCounter"* nonnull %37, i32 3120) #12
  br label %45

45:                                               ; preds = %16, %40, %32, %25
  %46 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 13, i32 0, i32 0
  %47 = bitcast %"class.blink::RelList"** %46 to %"class.blink::DOMTokenList"**
  %48 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %47, align 8
  %49 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %50 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %49, align 8
  call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %48, %"class.WTF::AtomicString"* dereferenceable(8) %50, %"class.WTF::AtomicString"* dereferenceable(8) %9) #12
  %51 = call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %52 = icmp eq %"class.blink::LinkResource"* %51, null
  br i1 %52, label %636, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.blink::LinkResource"* %51 to void (%"class.blink::LinkResource"*)***
  %55 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %55, i64 3
  %57 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %56, align 8
  call void %57(%"class.blink::LinkResource"* nonnull %51) #12
  br label %636

58:                                               ; preds = %2
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %61
  br i1 %62, label %63, label %72

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  %65 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %66 = icmp eq %"class.blink::LinkResource"* %65, null
  br i1 %66, label %636, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.blink::LinkResource"* %65 to void (%"class.blink::LinkResource"*)***
  %69 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %69, i64 3
  %71 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %70, align 8
  tail call void %71(%"class.blink::LinkResource"* nonnull %65) #12
  br label %636

72:                                               ; preds = %58
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %75
  br i1 %76, label %77, label %126

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 4
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %77
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"class.WTF::String"* %78 to i64*
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %120 = icmp eq %"class.blink::LinkResource"* %119, null
  br i1 %120, label %636, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.blink::LinkResource"* %119 to void (%"class.blink::LinkResource"*)***
  %123 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %123, i64 3
  %125 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %124, align 8
  tail call void %125(%"class.blink::LinkResource"* nonnull %119) #12
  br label %636

126:                                              ; preds = %72
  %127 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kAsAttrE, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %129
  br i1 %130, label %131, label %180

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 5
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %153, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #12
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !3

150:                                              ; preds = %141
  tail call void @llvm.trap() #12
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %151, %136, %131
  %154 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  %155 = bitcast %"class.WTF::String"* %132 to i64*
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %132, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  store i64 %154, i64* %155, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #12
  br label %172

172:                                              ; preds = %153, %168, %171
  %173 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %174 = icmp eq %"class.blink::LinkResource"* %173, null
  br i1 %174, label %636, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.blink::LinkResource"* %173 to void (%"class.blink::LinkResource"*)***
  %177 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %177, i64 3
  %179 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %178, align 8
  tail call void %179(%"class.blink::LinkResource"* nonnull %173) #12
  br label %636

180:                                              ; preds = %126
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %183
  br i1 %184, label %185, label %202

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %636, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %191 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 9
  %192 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %190, i32 1, i32* %191) #12
  %193 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %194 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %194, i64 0, i32 2, i32 0, i32 0
  %196 = load %"class.blink::Document"*, %"class.blink::Document"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %196, i64 0, i32 2
  %198 = bitcast %"class.blink::UseCounter"* %197 to void (%"class.blink::UseCounter"*, i32)***
  %199 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %199, i64 3
  %201 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %200, align 8
  tail call void %201(%"class.blink::UseCounter"* %197, i32 1757) #12
  br label %636

202:                                              ; preds = %180
  %203 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %204 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %205
  br i1 %206, label %207, label %323

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 11, i32 0, i32 0
  %209 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %208, align 8
  %210 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %211 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %210, align 8
  tail call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %209, %"class.WTF::AtomicString"* dereferenceable(8) %211, %"class.WTF::AtomicString"* dereferenceable(8) %9) #12
  %212 = bitcast %"class.blink::WebVector.2272"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #12
  %213 = getelementptr inbounds %"class.blink::WebVector.2272", %"class.blink::WebVector.2272"* %4, i64 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.blink::WebVector.2272", %"class.blink::WebVector.2272"* %4, i64 0, i32 0, i32 0, i32 1
  %215 = bitcast %"class.blink::WebString"* %5 to i8*
  %216 = bitcast %"class.blink::WebVector.2272"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #12
  call void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %9) #12
  call void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector.2272"* nonnull sret %4, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #12
  %217 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12
  %218 = bitcast %"class.gfx::Size"** %214 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.blink::WebVector.2272"* %4 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = sub i64 %219, %221
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %223, 4294967296
  br i1 %224, label %226, label %225, !prof !2

225:                                              ; preds = %207
  call void @llvm.trap() #12
  unreachable

226:                                              ; preds = %207
  %227 = trunc i64 %223 to i32
  %228 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp ult i32 %229, %227
  br i1 %230, label %231, label %292

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %233 = load i32, i32* %232, align 8
  %234 = icmp ult i32 %233, %227
  br i1 %234, label %235, label %274

235:                                              ; preds = %231
  %236 = lshr i32 %233, 2
  %237 = add nuw i32 %233, 1
  %238 = add i32 %237, %236
  %239 = icmp ugt i32 %238, 4
  %240 = select i1 %239, i32 %238, i32 4
  %241 = icmp ugt i32 %240, %227
  %242 = select i1 %241, i32 %240, i32 %227
  %243 = icmp ult i32 %233, %242
  br i1 %243, label %244, label %274, !prof !2

244:                                              ; preds = %235
  %245 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %217, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.gfx::Size"*, %"class.gfx::Size"** %245, align 8
  %247 = icmp eq %"class.gfx::Size"* %246, null
  %248 = zext i32 %242 to i64
  %249 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %248) #12
  %250 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %249, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #12
  br i1 %247, label %251, label %256

251:                                              ; preds = %244
  %252 = ptrtoint i8* %250 to i64
  %253 = bitcast %"class.WTF::Vector.41"* %217 to i64*
  store atomic i64 %252, i64* %253 monotonic, align 8
  %254 = lshr i64 %249, 3
  %255 = trunc i64 %254 to i32
  store i32 %255, i32* %232, align 8
  br label %274

256:                                              ; preds = %244
  %257 = lshr i64 %249, 3
  %258 = ptrtoint i8* %250 to i64
  %259 = load %"class.gfx::Size"*, %"class.gfx::Size"** %245, align 8
  %260 = icmp ne i8* %250, null
  %261 = icmp ne %"class.gfx::Size"* %259, null
  %262 = and i1 %260, %261
  %263 = bitcast %"class.gfx::Size"* %259 to i8*
  br i1 %262, label %264, label %270, !prof !2

264:                                              ; preds = %256
  %265 = load i32, i32* %228, align 4
  %266 = zext i32 %265 to i64
  %267 = shl nuw nsw i64 %266, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %250, i8* nonnull align 4 %263, i64 %267, i1 false) #12
  %268 = bitcast %"class.WTF::Vector.41"* %217 to i8**
  %269 = load i8*, i8** %268, align 8
  br label %270

270:                                              ; preds = %264, %256
  %271 = phi i8* [ %269, %264 ], [ %263, %256 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %271) #12
  %272 = bitcast %"class.WTF::Vector.41"* %217 to i64*
  store atomic i64 %258, i64* %272 monotonic, align 8
  %273 = trunc i64 %257 to i32
  store i32 %273, i32* %232, align 8
  br label %274

274:                                              ; preds = %270, %251, %235, %231
  %275 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %217, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.gfx::Size"*, %"class.gfx::Size"** %275, align 8
  %277 = load i32, i32* %228, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %276, i64 %278
  %280 = icmp eq i32 %277, %227
  br i1 %280, label %291, label %281

281:                                              ; preds = %274
  %282 = and i64 %223, 4294967295
  %283 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %276, i64 %282
  %284 = bitcast %"class.gfx::Size"* %279 to i8*
  %285 = ptrtoint %"class.gfx::Size"* %279 to i64
  %286 = getelementptr %"class.gfx::Size", %"class.gfx::Size"* %283, i64 -1, i32 0
  %287 = ptrtoint i32* %286 to i64
  %288 = add i64 %287, 8
  %289 = sub i64 %288, %285
  %290 = and i64 %289, -8
  call void @llvm.memset.p0i8.i64(i8* align 4 %284, i8 0, i64 %290, i1 false) #12
  br label %291

291:                                              ; preds = %274, %281
  store i32 %227, i32* %228, align 4
  br label %294

292:                                              ; preds = %226
  store i32 %227, i32* %228, align 4
  %293 = icmp eq i32 %227, 0
  br i1 %293, label %295, label %294

294:                                              ; preds = %291, %292
  br label %310

295:                                              ; preds = %310, %292
  %296 = call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %297 = icmp eq %"class.blink::LinkResource"* %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %295
  %299 = bitcast %"class.blink::LinkResource"* %296 to void (%"class.blink::LinkResource"*)***
  %300 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %300, i64 3
  %302 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %301, align 8
  call void %302(%"class.blink::LinkResource"* nonnull %296) #12
  br label %303

303:                                              ; preds = %295, %298
  %304 = load %"class.gfx::Size"*, %"class.gfx::Size"** %213, align 8
  %305 = icmp eq %"class.gfx::Size"* %304, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %303
  %307 = ptrtoint %"class.gfx::Size"* %304 to i64
  store i64 %307, i64* %218, align 8
  %308 = bitcast %"class.gfx::Size"* %304 to i8*
  call void @_ZdlPv(i8* %308) #13
  br label %309

309:                                              ; preds = %303, %306
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #12
  br label %636

310:                                              ; preds = %294, %310
  %311 = phi i64 [ %319, %310 ], [ 0, %294 ]
  %312 = load %"class.gfx::Size"*, %"class.gfx::Size"** %213, align 8
  %313 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %312, i64 %311
  %314 = trunc i64 %311 to i32
  %315 = call dereferenceable(8) %"class.gfx::Size"* @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.41"* %217, i32 %314) #12
  %316 = bitcast %"class.gfx::Size"* %313 to i64*
  %317 = bitcast %"class.gfx::Size"* %315 to i64*
  %318 = load i64, i64* %316, align 4
  store i64 %318, i64* %317, align 4
  %319 = add nuw nsw i64 %311, 1
  %320 = load i32, i32* %228, align 4
  %321 = zext i32 %320 to i64
  %322 = icmp ult i64 %319, %321
  br i1 %322, label %310, label %295

323:                                              ; preds = %202
  %324 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kMediaAttrE, align 8
  %325 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %324, i64 0, i32 0, i32 0
  %326 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %325, align 8
  %327 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %326
  br i1 %327, label %328, label %390

328:                                              ; preds = %323
  %329 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %9) #12
  %330 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 6
  %331 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %331, label %349, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %349

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = zext i32 %339 to i33
  %341 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %340, i33 1) #12
  %342 = extractvalue { i33, i1 } %341, 1
  %343 = extractvalue { i33, i1 } %341, 0
  %344 = icmp slt i33 %343, 0
  %345 = or i1 %342, %344
  br i1 %345, label %346, label %347, !prof !3

346:                                              ; preds = %337
  tail call void @llvm.trap() #12
  unreachable

347:                                              ; preds = %337
  %348 = trunc i33 %343 to i32
  store i32 %348, i32* %338, align 4
  br label %349

349:                                              ; preds = %347, %332, %328
  %350 = ptrtoint %"class.WTF::StringImpl"* %329 to i64
  %351 = bitcast %"class.WTF::String"* %330 to i64*
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %330, i64 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  store i64 %350, i64* %351, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %349
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #12
  br label %368

368:                                              ; preds = %349, %364, %367
  br i1 %331, label %382, label %369

369:                                              ; preds = %368
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #12
  br label %382

382:                                              ; preds = %368, %378, %381
  %383 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %384 = icmp eq %"class.blink::LinkResource"* %383, null
  br i1 %384, label %636, label %385

385:                                              ; preds = %382
  %386 = bitcast %"class.blink::LinkResource"* %383 to void (%"class.blink::LinkResource"*)***
  %387 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %387, i64 3
  %389 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %388, align 8
  tail call void %389(%"class.blink::LinkResource"* nonnull %383) #12
  br label %636

390:                                              ; preds = %323
  %391 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %392 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %391, i64 0, i32 0, i32 0
  %393 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %392, align 8
  %394 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %393
  br i1 %394, label %395, label %436

395:                                              ; preds = %390
  %396 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 7
  %397 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %417, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %417

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  %408 = zext i32 %407 to i33
  %409 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %408, i33 1) #12
  %410 = extractvalue { i33, i1 } %409, 1
  %411 = extractvalue { i33, i1 } %409, 0
  %412 = icmp slt i33 %411, 0
  %413 = or i1 %410, %412
  br i1 %413, label %414, label %415, !prof !3

414:                                              ; preds = %405
  tail call void @llvm.trap() #12
  unreachable

415:                                              ; preds = %405
  %416 = trunc i33 %411 to i32
  store i32 %416, i32* %406, align 4
  br label %417

417:                                              ; preds = %415, %400, %395
  %418 = ptrtoint %"class.WTF::StringImpl"* %398 to i64
  %419 = bitcast %"class.WTF::String"* %396 to i64*
  %420 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %396, i64 0, i32 0, i32 0
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %420, align 8
  store i64 %418, i64* %419, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %636, label %423

423:                                              ; preds = %417
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %636

435:                                              ; preds = %432
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #12
  br label %636

436:                                              ; preds = %390
  %437 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %438 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %437, i64 0, i32 0, i32 0
  %439 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %438, align 8
  %440 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %439
  br i1 %440, label %441, label %500

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %443 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %442) #12
  %444 = icmp eq %"class.blink::ExecutionContext"* %443, null
  %445 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %443, i64 0, i32 4
  %446 = select i1 %444, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %445
  %447 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %446) #12
  br i1 %447, label %450, label %448

448:                                              ; preds = %441
  %449 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  br label %500

450:                                              ; preds = %441
  %451 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %452 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %452, i64 0, i32 2, i32 0, i32 0
  %454 = load %"class.blink::Document"*, %"class.blink::Document"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %454, i64 0, i32 2
  %456 = bitcast %"class.blink::UseCounter"* %455 to void (%"class.blink::UseCounter"*, i32)***
  %457 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %456, align 8
  %458 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %457, i64 3
  %459 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %458, align 8
  tail call void %459(%"class.blink::UseCounter"* %455, i32 2738) #12
  %460 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 8
  %461 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %461, align 8
  %463 = icmp eq %"class.WTF::StringImpl"* %462, null
  br i1 %463, label %481, label %464

464:                                              ; preds = %450
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = load atomic i32, i32* %465 monotonic, align 4
  %467 = and i32 %466, 2
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %481

469:                                              ; preds = %464
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 0
  %471 = load i32, i32* %470, align 4
  %472 = zext i32 %471 to i33
  %473 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %472, i33 1) #12
  %474 = extractvalue { i33, i1 } %473, 1
  %475 = extractvalue { i33, i1 } %473, 0
  %476 = icmp slt i33 %475, 0
  %477 = or i1 %474, %476
  br i1 %477, label %478, label %479, !prof !3

478:                                              ; preds = %469
  tail call void @llvm.trap() #12
  unreachable

479:                                              ; preds = %469
  %480 = trunc i33 %475 to i32
  store i32 %480, i32* %470, align 4
  br label %481

481:                                              ; preds = %479, %464, %450
  %482 = ptrtoint %"class.WTF::StringImpl"* %462 to i64
  %483 = bitcast %"class.WTF::String"* %460 to i64*
  %484 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %460, i64 0, i32 0, i32 0
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %484, align 8
  store i64 %482, i64* %483, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %485, null
  br i1 %486, label %636, label %487

487:                                              ; preds = %481
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = load atomic i32, i32* %488 monotonic, align 4
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  br i1 %491, label %494, label %496

494:                                              ; preds = %487
  %495 = add i32 %493, -1
  store i32 %495, i32* %492, align 4
  br label %496

496:                                              ; preds = %494, %487
  %497 = phi i32 [ %495, %494 ], [ %493, %487 ]
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %636

499:                                              ; preds = %496
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %485) #12
  br label %636

500:                                              ; preds = %448, %436
  %501 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %449, %448 ], [ %12, %436 ]
  %502 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kResourcesAttrE, align 8
  %503 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %502, i64 0, i32 0, i32 0
  %504 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %503, align 8
  %505 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %501, %504
  br i1 %505, label %506, label %525

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %508 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %507) #12
  %509 = tail call zeroext i1 @_ZN5blink13LinkWebBundle16IsFeatureEnabledEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %508) #12
  br i1 %509, label %512, label %510

510:                                              ; preds = %506
  %511 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  br label %525

512:                                              ; preds = %506
  %513 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 15, i32 0, i32 0
  %514 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %513, align 8
  %515 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %516 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %515, align 8
  tail call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %514, %"class.WTF::AtomicString"* dereferenceable(8) %516, %"class.WTF::AtomicString"* dereferenceable(8) %9) #12
  %517 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 16
  tail call fastcc void @_ZN5blink12_GLOBAL__N_118ParseUrlsListValueERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.WTF::HashSet"* dereferenceable(24) %517)
  %518 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %519 = icmp eq %"class.blink::LinkResource"* %518, null
  br i1 %519, label %636, label %520

520:                                              ; preds = %512
  %521 = bitcast %"class.blink::LinkResource"* %518 to void (%"class.blink::LinkResource"*)***
  %522 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %521, align 8
  %523 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %522, i64 3
  %524 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %523, align 8
  tail call void %524(%"class.blink::LinkResource"* nonnull %518) #12
  br label %636

525:                                              ; preds = %510, %500
  %526 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %511, %510 ], [ %501, %500 ]
  %527 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kScopesAttrE, align 8
  %528 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %527, i64 0, i32 0, i32 0
  %529 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %528, align 8
  %530 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %526, %529
  br i1 %530, label %531, label %550

531:                                              ; preds = %525
  %532 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %533 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %532) #12
  %534 = tail call zeroext i1 @_ZN5blink13LinkWebBundle16IsFeatureEnabledEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %533) #12
  br i1 %534, label %537, label %535

535:                                              ; preds = %531
  %536 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  br label %550

537:                                              ; preds = %531
  %538 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 17, i32 0, i32 0
  %539 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %538, align 8
  %540 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %541 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %540, align 8
  tail call void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"* %539, %"class.WTF::AtomicString"* dereferenceable(8) %541, %"class.WTF::AtomicString"* dereferenceable(8) %9) #12
  %542 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 18
  tail call fastcc void @_ZN5blink12_GLOBAL__N_118ParseUrlsListValueERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8) %9, %"class.WTF::HashSet"* dereferenceable(24) %542)
  %543 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %544 = icmp eq %"class.blink::LinkResource"* %543, null
  br i1 %544, label %636, label %545

545:                                              ; preds = %537
  %546 = bitcast %"class.blink::LinkResource"* %543 to void (%"class.blink::LinkResource"*)***
  %547 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %546, align 8
  %548 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %547, i64 3
  %549 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %548, align 8
  tail call void %549(%"class.blink::LinkResource"* nonnull %543) #12
  br label %636

550:                                              ; preds = %535, %525
  %551 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %536, %535 ], [ %526, %525 ]
  %552 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %553 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %552, i64 0, i32 0, i32 0
  %554 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %553, align 8
  %555 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %551, %554
  br i1 %555, label %556, label %612

556:                                              ; preds = %550
  %557 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %558 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %557, align 8
  %559 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %558, i64 0, i32 2, i32 0, i32 0
  %560 = load %"class.blink::Document"*, %"class.blink::Document"** %559, align 8
  %561 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %560, i64 0, i32 2
  %562 = bitcast %"class.blink::UseCounter"* %561 to void (%"class.blink::UseCounter"*, i32)***
  %563 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %562, align 8
  %564 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %563, i64 3
  %565 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %564, align 8
  tail call void %565(%"class.blink::UseCounter"* %561, i32 809) #12
  %566 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 3
  %567 = load i32, i32* %566, align 8
  %568 = icmp eq i32 %567, 1
  br i1 %568, label %569, label %578

569:                                              ; preds = %556
  %570 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %557, align 8
  %571 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %570, i64 0, i32 2, i32 0, i32 0
  %572 = load %"class.blink::Document"*, %"class.blink::Document"** %571, align 8
  %573 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %572, i64 0, i32 2
  %574 = bitcast %"class.blink::UseCounter"* %573 to void (%"class.blink::UseCounter"*, i32)***
  %575 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %574, align 8
  %576 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %575, i64 3
  %577 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %576, align 8
  tail call void %577(%"class.blink::UseCounter"* %573, i32 2516) #12
  br label %578

578:                                              ; preds = %569, %556
  %579 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %580 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %579, align 8
  %581 = icmp eq %"class.blink::LinkResource"* %580, null
  br i1 %581, label %593, label %582

582:                                              ; preds = %578
  %583 = bitcast %"class.blink::LinkResource"* %580 to i32 (%"class.blink::LinkResource"*)***
  %584 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %583, align 8
  %585 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %584, i64 2
  %586 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %585, align 8
  %587 = tail call i32 %586(%"class.blink::LinkResource"* nonnull %580) #12
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %593

589:                                              ; preds = %582
  %590 = bitcast %"class.blink::LinkResource"** %579 to %"class.blink::LinkStyle"**
  %591 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %590, align 8
  %592 = icmp eq %"class.blink::LinkStyle"* %591, null
  br i1 %592, label %593, label %607

593:                                              ; preds = %578, %582, %589
  %594 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm(i64 72) #12
  %595 = bitcast i8* %594 to %"class.blink::LinkStyle"*
  tail call void @_ZN5blink9LinkStyleC1EPNS_15HTMLLinkElementE(%"class.blink::LinkStyle"* %595, %"class.blink::HTMLLinkElement"* %0) #12
  %596 = getelementptr inbounds i8, i8* %594, i64 -4
  %597 = bitcast i8* %596 to i16*
  %598 = load atomic i16, i16* %597 monotonic, align 2
  %599 = or i16 %598, 1
  store atomic i16 %599, i16* %597 release, align 2
  %600 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2
  %601 = ptrtoint i8* %594 to i64
  %602 = bitcast %"class.blink::Member.21"* %600 to i64*
  store atomic i64 %601, i64* %602 monotonic, align 8
  %603 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %607, label %605

605:                                              ; preds = %593
  %606 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %594) #12
  br label %607

607:                                              ; preds = %605, %593, %589
  %608 = phi %"class.blink::LinkStyle"* [ %591, %589 ], [ %595, %593 ], [ %595, %605 ]
  %609 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %610 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %609, align 8
  %611 = icmp ne %"class.WTF::StringImpl"* %610, null
  tail call void @_ZN5blink9LinkStyle16SetDisabledStateEb(%"class.blink::LinkStyle"* %608, i1 zeroext %611) #12
  br label %636

612:                                              ; preds = %550
  %613 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %614 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %613, i64 0, i32 0, i32 0
  %615 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %614, align 8
  %616 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %551, %615
  br i1 %616, label %617, label %634

617:                                              ; preds = %612
  %618 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %619 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %618, align 8
  %620 = icmp eq %"class.blink::LinkResource"* %619, null
  br i1 %620, label %634, label %621

621:                                              ; preds = %617
  %622 = bitcast %"class.blink::LinkResource"* %619 to i32 (%"class.blink::LinkResource"*)***
  %623 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %622, align 8
  %624 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %623, i64 2
  %625 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %624, align 8
  %626 = tail call i32 %625(%"class.blink::LinkResource"* nonnull %619) #12
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %634

628:                                              ; preds = %621
  %629 = bitcast %"class.blink::LinkResource"** %618 to %"class.blink::LinkStyle"**
  %630 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %629, align 8
  %631 = icmp eq %"class.blink::LinkStyle"* %630, null
  br i1 %631, label %634, label %632

632:                                              ; preds = %628
  %633 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  tail call void @_ZN5blink9LinkStyle13SetSheetTitleERKN3WTF6StringE(%"class.blink::LinkStyle"* nonnull %630, %"class.WTF::String"* dereferenceable(8) %633) #12
  br label %634

634:                                              ; preds = %617, %621, %632, %628, %612
  %635 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"* %635, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  br label %636

636:                                              ; preds = %545, %537, %520, %512, %499, %496, %481, %435, %432, %417, %385, %382, %175, %172, %121, %118, %67, %63, %53, %45, %309, %607, %634, %185, %189
  ret void
}

declare void @_ZN5blink16LinkRelAttributeC1ERKN3WTF6StringE(%"class.blink::LinkRelAttribute"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::Document"* @_ZNK5blink8Document14ParentDocumentEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMTokenList23DidUpdateAttributeValueERKN3WTF12AtomicStringES4_(%"class.blink::DOMTokenList"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement7ProcessEv(%"class.blink::HTMLLinkElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0)
  %3 = icmp eq %"class.blink::LinkResource"* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::LinkResource"* %2 to void (%"class.blink::LinkResource"*)***
  %6 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %6, i64 3
  %8 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %7, align 8
  tail call void %8(%"class.blink::LinkResource"* nonnull %2) #12
  br label %9

9:                                                ; preds = %1, %4
  ret void
}

declare void @_ZN5blink7Element46LogUpdateAttributeIfIsolatedWorldAndInDocumentEPKcRKNS0_27AttributeModificationParamsE(%"class.blink::Element"*, i8*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #2

declare void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector.2272"* sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF12AtomicStringE(%"class.blink::WebString"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink13LinkWebBundle16IsFeatureEnabledEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_118ParseUrlsListValueERKN3WTF12AtomicStringERNS1_7HashSetINS_4KURLENS_8KURLHashENS1_10HashTraitsIS6_EENS1_18PartitionAllocatorEEE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::HashSet"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.blink::SpaceSplitString", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = bitcast %"class.blink::SpaceSplitString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::SpaceSplitString", %"class.blink::SpaceSplitString"* %3, i64 0, i32 0, i32 0
  store %"class.blink::SpaceSplitString::Data"* null, %"class.blink::SpaceSplitString::Data"** %6, align 8
  call void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %0) #12
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::KURL"*, %"class.blink::KURL"** %7, align 8
  %9 = icmp eq %"class.blink::KURL"* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ 0, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 %17, i32 4
  %19 = bitcast %"class.WTF::String"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, inttoptr (i64 -1 to i8*)
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 %17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %23) #12
  br label %24

24:                                               ; preds = %22, %16
  %25 = add nuw nsw i64 %17, 1
  %26 = icmp eq i64 %25, %15
  br i1 %26, label %27, label %16

27:                                               ; preds = %24, %10
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #12
  %29 = bitcast %"class.WTF::HashSet"* %1 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %11, align 8
  %30 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 2
  store i32 0, i32* %30, align 4
  br label %31

31:                                               ; preds = %2, %27
  %32 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %6, align 8
  %33 = icmp eq %"class.blink::SpaceSplitString::Data"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %32, i64 0, i32 2, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi i32 [ %36, %34 ], [ 0, %31 ]
  %39 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0
  call void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %39, i32 %38) #12
  %40 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  br label %41

41:                                               ; preds = %66, %37
  %42 = phi i32 [ 0, %37 ], [ %67, %66 ]
  %43 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %6, align 8
  %44 = icmp eq %"class.blink::SpaceSplitString::Data"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %43, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %41 ]
  %50 = icmp ult i32 %42, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  br i1 %44, label %59, label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #12
  %54 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %43) #12
  %58 = bitcast %"class.blink::SpaceSplitString::Data"* %43 to i8*
  call void @free(i8* %58) #12
  br label %59

59:                                               ; preds = %51, %52, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void

60:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 112, i1 false)
  %61 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %43, i64 0, i32 2
  %62 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 %42) #12
  call void @_ZN5blink13LinkWebBundle16ParseResourceUrlERKN3WTF12AtomicStringE(%"class.blink::KURL"* nonnull sret %4, %"class.WTF::AtomicString"* dereferenceable(8) %62) #12
  %63 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #12
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = call { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %39, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #12
  br label %66

66:                                               ; preds = %64, %60
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %40) #12
  %67 = add nuw i32 %42, 1
  br label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %2, align 8
  %4 = icmp eq %"class.blink::LinkResource"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LinkResource"* %3 to i32 (%"class.blink::LinkResource"*)***
  %7 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %7, i64 2
  %9 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LinkResource"* nonnull %3) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::LinkResource"** %2 to %"class.blink::LinkStyle"**
  %14 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %13, align 8
  br label %15

15:                                               ; preds = %1, %5, %12
  %16 = phi %"class.blink::LinkStyle"* [ %14, %12 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::LinkStyle"* %16
}

declare void @_ZN5blink9LinkStyle16SetDisabledStateEb(%"class.blink::LinkStyle"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink9LinkStyle13SetSheetTitleERKN3WTF6StringE(%"class.blink::LinkStyle"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLLinkElement14ShouldLoadLinkEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #12
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZNK5blink7Element23GetNonEmptyURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18) #12
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 3, i32 8
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #12
  br label %22

22:                                               ; preds = %10, %5, %15
  %23 = phi i1 [ %21, %15 ], [ false, %5 ], [ false, %10 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZNK5blink7Element23GetNonEmptyURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_N5blink15HTMLLinkElement14ShouldLoadLinkEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %4 = bitcast %"class.WTF::Vector.41"* %3 to %"class.blink::HTMLLinkElement"*
  %5 = bitcast %"class.WTF::Vector.41"* %3 to %"class.blink::Node"*
  %6 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %5) #12
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %3, i64 1
  %9 = bitcast %"class.WTF::Vector.41"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %4, i64 0, i32 14, i32 1
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 1
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13, %1
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %19) #12
  %20 = bitcast %"class.WTF::Vector.41"* %3 to %"class.blink::Element"*
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZNK5blink7Element23GetNonEmptyURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %20, %"class.blink::QualifiedName"* dereferenceable(8) %21) #12
  %22 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 3, i32 8
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = icmp eq i8 %23, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %19) #12
  br label %25

25:                                               ; preds = %7, %13, %18
  %26 = phi i1 [ %24, %18 ], [ false, %7 ], [ false, %13 ]
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLLinkElement21IsLinkCreatedByParserEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 19
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn104_N5blink15HTMLLinkElement21IsLinkCreatedByParserEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %2, i64 17, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLLinkElement8LoadLinkERKNS_18LinkLoadParametersE(%"class.blink::HTMLLinkElement"* nocapture readonly, %"struct.blink::LinkLoadParameters"* dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::LinkLoader"*, %"class.blink::LinkLoader"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call zeroext i1 @_ZN5blink10LinkLoader8LoadLinkERKNS_18LinkLoadParametersERNS_8DocumentE(%"class.blink::LinkLoader"* %4, %"struct.blink::LinkLoadParameters"* dereferenceable(224) %1, %"class.blink::Document"* dereferenceable(2848) %8) #12
  ret i1 %9
}

declare zeroext i1 @_ZN5blink10LinkLoader8LoadLinkERKNS_18LinkLoadParametersERNS_8DocumentE(%"class.blink::LinkLoader"*, %"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement14LoadStylesheetERKNS_18LinkLoadParametersERKN3WTF12TextEncodingENS_15FetchParameters11DeferOptionEPNS_14ResourceClientENS_22RenderBlockingBehaviorE(%"class.blink::HTMLLinkElement"* nocapture readonly, %"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.WTF::TextEncoding"* dereferenceable(8), i32, %"class.blink::ResourceClient"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::LinkLoader"*, %"class.blink::LinkLoader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  tail call void @_ZN5blink10LinkLoader14LoadStylesheetERKNS_18LinkLoadParametersERKN3WTF12AtomicStringERKNS4_12TextEncodingENS_15FetchParameters11DeferOptionERNS_8DocumentEPNS_14ResourceClientENS_22RenderBlockingBehaviorE(%"class.blink::LinkLoader"* %8, %"struct.blink::LinkLoadParameters"* dereferenceable(224) %1, %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.WTF::TextEncoding"* dereferenceable(8) %2, i32 %3, %"class.blink::Document"* dereferenceable(2848) %15, %"class.blink::ResourceClient"* %4, i8 zeroext %5) #12
  ret void
}

declare void @_ZN5blink10LinkLoader14LoadStylesheetERKNS_18LinkLoadParametersERKN3WTF12AtomicStringERKNS4_12TextEncodingENS_15FetchParameters11DeferOptionERNS_8DocumentEPNS_14ResourceClientENS_22RenderBlockingBehaviorE(%"class.blink::LinkLoader"*, %"struct.blink::LinkLoadParameters"* dereferenceable(224), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8), i32, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ResourceClient"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #12
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %12 = load i16, i16* %11, align 4
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZNK5blink7Element23GetNonEmptyURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18) #12
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 3, i32 8
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #12
  br i1 %21, label %67, label %22

22:                                               ; preds = %10, %5, %15
  %23 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %23, align 8
  %25 = icmp eq %"class.blink::LinkResource"* %24, null
  br i1 %25, label %189, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::LinkResource"* %24 to i32 (%"class.blink::LinkResource"*)***
  %28 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %28, i64 2
  %30 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %29, align 8
  %31 = call i32 %30(%"class.blink::LinkResource"* nonnull %24) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %189

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::LinkResource"** %23 to %"class.blink::LinkStyle"**
  %35 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %34, align 8
  %36 = icmp eq %"class.blink::LinkStyle"* %35, null
  br i1 %36, label %189, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %35, i64 0, i32 0
  %39 = bitcast %"class.blink::LinkStyle"* %35 to i32 (%"class.blink::LinkResource"*)***
  %40 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %40, i64 2
  %42 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %41, align 8
  %43 = call i32 %42(%"class.blink::LinkResource"* nonnull %38) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %34, align 8
  br label %47

47:                                               ; preds = %37, %45
  %48 = phi %"class.blink::LinkStyle"* [ %46, %45 ], [ null, %37 ]
  %49 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %49, align 8
  %51 = icmp eq %"class.blink::CSSStyleSheet"* %50, null
  br i1 %51, label %189, label %52

52:                                               ; preds = %47
  %53 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %23, align 8
  %54 = icmp eq %"class.blink::LinkResource"* %53, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::LinkResource"* %53 to i32 (%"class.blink::LinkResource"*)***
  %57 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %57, i64 2
  %59 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %58, align 8
  %60 = call i32 %59(%"class.blink::LinkResource"* nonnull %53) #12
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %34, align 8
  br label %64

64:                                               ; preds = %52, %55, %62
  %65 = phi %"class.blink::LinkStyle"* [ %63, %62 ], [ null, %55 ], [ null, %52 ]
  %66 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %65, i64 0, i32 0
  br label %189

67:                                               ; preds = %15
  %68 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2
  %69 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %69, align 8
  %71 = icmp eq %"class.blink::LinkResource"* %70, null
  br i1 %71, label %72, label %187

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %74 = load i16, i16* %73, align 4
  %75 = and i16 %74, 8192
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %72
  %78 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %3) #12
  %79 = call zeroext i1 @_ZN5blink13LinkWebBundle16IsFeatureEnabledEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %78) #12
  br i1 %79, label %80, label %189

80:                                               ; preds = %77
  %81 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm(i64 32) #12
  %82 = bitcast i8* %81 to %"class.blink::LinkWebBundle"*
  call void @_ZN5blink13LinkWebBundleC1EPNS_15HTMLLinkElementE(%"class.blink::LinkWebBundle"* %82, %"class.blink::HTMLLinkElement"* %0) #12
  %83 = getelementptr inbounds i8, i8* %81, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  %87 = ptrtoint i8* %81 to i64
  %88 = bitcast %"class.blink::Member.21"* %68 to i64*
  store atomic i64 %87, i64* %88 monotonic, align 8
  %89 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %187, label %91

91:                                               ; preds = %80
  %92 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #12
  br label %187

93:                                               ; preds = %72
  %94 = and i16 %74, 256
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm(i64 16) #12
  %98 = bitcast i8* %97 to %"class.blink::LinkManifest"*
  call void @_ZN5blink12LinkManifestC1EPNS_15HTMLLinkElementE(%"class.blink::LinkManifest"* %98, %"class.blink::HTMLLinkElement"* %0) #12
  %99 = getelementptr inbounds i8, i8* %97, i64 -4
  %100 = bitcast i8* %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = or i16 %101, 1
  store atomic i16 %102, i16* %100 release, align 2
  %103 = ptrtoint i8* %97 to i64
  %104 = bitcast %"class.blink::Member.21"* %68 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %187, label %107

107:                                              ; preds = %96
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #12
  br label %187

109:                                              ; preds = %93
  %110 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm(i64 72) #12
  %111 = bitcast i8* %110 to %"class.blink::LinkStyle"*
  call void @_ZN5blink9LinkStyleC1EPNS_15HTMLLinkElementE(%"class.blink::LinkStyle"* %111, %"class.blink::HTMLLinkElement"* %0) #12
  %112 = getelementptr inbounds i8, i8* %110, i64 -4
  %113 = bitcast i8* %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  %116 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %117 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %118 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %117, align 8
  %119 = icmp eq %"class.blink::ElementData"* %118, null
  br i1 %119, label %180, label %120

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %118, i64 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %120
  %126 = bitcast %"class.blink::ElementData"* %118 to %"class.blink::UniqueElementData"*
  %127 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %118, i64 1, i32 1
  %128 = bitcast %"class.blink::Member.14"* %127 to %"class.blink::Attribute"**
  %129 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %126, i64 0, i32 2, i32 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  br label %137

132:                                              ; preds = %120
  %133 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %118, i64 1
  %134 = bitcast %"class.blink::ElementData"* %133 to %"class.blink::Attribute"*
  %135 = lshr i32 %122, 1
  %136 = and i32 %135, 268435455
  br label %137

137:                                              ; preds = %132, %125
  %138 = phi %"class.blink::Attribute"* [ %134, %132 ], [ %129, %125 ]
  %139 = phi i32 [ %136, %132 ], [ %131, %125 ]
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %138, i64 %140
  %142 = icmp eq i32 %139, 0
  br i1 %142, label %180, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %116, i64 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %164, %143
  %149 = phi %"class.blink::Attribute"* [ %138, %143 ], [ %165, %164 ]
  %150 = phi i32 [ 0, %143 ], [ %166, %164 ]
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %153 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %152, %145
  br i1 %153, label %168, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %156, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %159, %154
  %165 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 1
  %166 = add i32 %150, 1
  %167 = icmp eq %"class.blink::Attribute"* %165, %141
  br i1 %167, label %180, label %148

168:                                              ; preds = %148, %159
  %169 = icmp eq i32 %150, -1
  br i1 %169, label %180, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %172, i64 0, i32 2, i32 0, i32 0
  %174 = load %"class.blink::Document"*, %"class.blink::Document"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %174, i64 0, i32 2
  %176 = bitcast %"class.blink::UseCounter"* %175 to void (%"class.blink::UseCounter"*, i32)***
  %177 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %177, i64 3
  %179 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %178, align 8
  call void %179(%"class.blink::UseCounter"* %175, i32 809) #12
  call void @_ZN5blink9LinkStyle16SetDisabledStateEb(%"class.blink::LinkStyle"* %111, i1 zeroext true) #12
  br label %180

180:                                              ; preds = %164, %168, %137, %109, %170
  %181 = ptrtoint i8* %110 to i64
  %182 = bitcast %"class.blink::Member.21"* %68 to i64*
  store atomic i64 %181, i64* %182 monotonic, align 8
  %183 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %180
  %186 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %110) #12
  br label %187

187:                                              ; preds = %67, %185, %180, %107, %96, %91, %80
  %188 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %69, align 8
  br label %189

189:                                              ; preds = %47, %22, %26, %77, %33, %187, %64
  %190 = phi %"class.blink::LinkResource"* [ %188, %187 ], [ %66, %64 ], [ null, %33 ], [ null, %47 ], [ null, %77 ], [ null, %26 ], [ null, %22 ]
  ret %"class.blink::LinkResource"* %190
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15HTMLLinkElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLLinkElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0
  %6 = tail call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %5, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  %7 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  tail call void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameES5_(%"class.blink::Element"* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %"class.blink::QualifiedName"* dereferenceable(8) %8, %"class.blink::QualifiedName"* dereferenceable(8) %9) #12
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %91, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 59, i32 0, i32 0
  %21 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %20, align 8
  tail call void @_ZN5blink11StyleEngine26AddStyleSheetCandidateNodeERNS_4NodeE(%"class.blink::StyleEngine"* %21, %"class.blink::Node"* dereferenceable(64) %15) #12
  %22 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %15) #12
  br i1 %22, label %33, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 256
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %30 = load i16, i16* %29, align 4
  %31 = and i16 %30, 1
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %14, %28
  %34 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %34) #12
  call void @_ZNK5blink7Element23GetNonEmptyURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %3, %"class.blink::Element"* %7, %"class.blink::QualifiedName"* dereferenceable(8) %9) #12
  %35 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 3, i32 8
  %36 = load i8, i8* %35, align 8, !range !4
  %37 = icmp eq i8 %36, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %34) #12
  br i1 %37, label %74, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  br label %41

41:                                               ; preds = %38, %28, %23
  %42 = phi i32 [ %40, %38 ], [ %25, %28 ], [ %25, %23 ]
  %43 = and i32 %42, 512
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %74, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %47, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i64 46) #12
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #12
  %52 = bitcast i8* %51 to %"class.blink::ConsoleMessage"*
  %53 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #12
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %52, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %53) #12
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %50, %"class.blink::ConsoleMessage"* %52, i1 zeroext false) #12
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12
  br label %73

73:                                               ; preds = %45, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  br label %91

74:                                               ; preds = %41, %33
  %75 = call %"class.blink::LinkResource"* @_ZN5blink15HTMLLinkElement21LinkResourceToProcessEv(%"class.blink::HTMLLinkElement"* %0) #12
  %76 = icmp eq %"class.blink::LinkResource"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::LinkResource"* %75 to void (%"class.blink::LinkResource"*)***
  %79 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %79, i64 3
  %81 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %80, align 8
  call void %81(%"class.blink::LinkResource"* nonnull %75) #12
  br label %82

82:                                               ; preds = %74, %77
  %83 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %83, align 8
  %85 = icmp eq %"class.blink::LinkResource"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.blink::LinkResource"* %84 to void (%"class.blink::LinkResource"*)***
  %88 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %88, i64 5
  %90 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %89, align 8
  call void %90(%"class.blink::LinkResource"* nonnull %84) #12
  br label %91

91:                                               ; preds = %82, %2, %86, %73
  ret i32 0
}

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink7Element41LogAddElementIfIsolatedWorldAndInDocumentEPKcRKNS_13QualifiedNameES5_(%"class.blink::Element"*, i8*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11StyleEngine26AddStyleSheetCandidateNodeERNS_4NodeE(%"class.blink::StyleEngine"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLLinkElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %6, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = and i32 %5, 256
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::LinkLoader"*, %"class.blink::LinkLoader"** %14, align 8
  tail call void @_ZN5blink10LinkLoader5AbortEv(%"class.blink::LinkLoader"* %15) #12
  br i1 %13, label %31, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 59, i32 0, i32 0
  %22 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %21, align 8
  tail call void @_ZN5blink11StyleEngine29RemoveStyleSheetCandidateNodeERNS_4NodeERNS_13ContainerNodeE(%"class.blink::StyleEngine"* %22, %"class.blink::Node"* dereferenceable(64) %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  %23 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %23, align 8
  %25 = icmp eq %"class.blink::LinkResource"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.blink::LinkResource"* %24 to void (%"class.blink::LinkResource"*)***
  %28 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %28, i64 4
  %30 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %29, align 8
  tail call void %30(%"class.blink::LinkResource"* nonnull %24) #12
  br label %31

31:                                               ; preds = %16, %11, %2, %26
  ret void
}

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink10LinkLoader5AbortEv(%"class.blink::LinkLoader"*) local_unnamed_addr #2

declare void @_ZN5blink11StyleEngine29RemoveStyleSheetCandidateNodeERNS_4NodeERNS_13ContainerNodeE(%"class.blink::StyleEngine"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement21FinishParsingChildrenEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 19
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"* %3) #12
  ret void
}

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLLinkElement21HasActivationBehaviorEv(%"class.blink::HTMLLinkElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLLinkElement19StyleSheetIsLoadingEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %2, align 8
  %4 = icmp eq %"class.blink::LinkResource"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LinkResource"* %3 to i32 (%"class.blink::LinkResource"*)***
  %7 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %7, i64 2
  %9 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LinkResource"* nonnull %3) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::LinkResource"** %2 to %"class.blink::LinkStyle"**
  %14 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %13, align 8
  %15 = icmp eq %"class.blink::LinkStyle"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %14, i64 0, i32 0
  %18 = bitcast %"class.blink::LinkStyle"* %14 to i32 (%"class.blink::LinkResource"*)***
  %19 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %19, i64 2
  %21 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LinkResource"* nonnull %17) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %13, align 8
  br label %26

26:                                               ; preds = %16, %24
  %27 = phi %"class.blink::LinkStyle"* [ %25, %24 ], [ null, %16 ]
  %28 = tail call zeroext i1 @_ZNK5blink9LinkStyle19StyleSheetIsLoadingEv(%"class.blink::LinkStyle"* %27) #12
  br label %29

29:                                               ; preds = %1, %5, %12, %26
  %30 = phi i1 [ false, %12 ], [ %28, %26 ], [ false, %5 ], [ false, %1 ]
  ret i1 %30
}

declare zeroext i1 @_ZNK5blink9LinkStyle19StyleSheetIsLoadingEv(%"class.blink::LinkStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement10LinkLoadedEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 16
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %13 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %13, i64 3
  %15 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, align 8
  tail call void %15(%"class.blink::UseCounter"* %11, i32 2956) #12
  br label %16

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %20 = bitcast i8* %19 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %18, i32 1, i32 1, i32 1) #12
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %17, %"class.blink::Event"* dereferenceable(104) %20) #12
  ret void
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink15HTMLLinkElement10LinkLoadedEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::HTMLLinkElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %3, i64 0, i32 14, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, 16
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %2, i64 2
  %10 = bitcast %"class.WTF::Vector.41"* %9 to %"class.blink::TreeScope"**
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 2
  %15 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* %14, i32 2956) #12
  br label %19

19:                                               ; preds = %1, %8
  %20 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::EventTarget"*
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %23 = bitcast i8* %22 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %21, i32 1, i32 1, i32 1) #12
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %20, %"class.blink::Event"* dereferenceable(104) %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement18LinkLoadingErroredEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 16
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 2
  %12 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %13 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %13, i64 3
  %15 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, align 8
  tail call void %15(%"class.blink::UseCounter"* %11, i32 2957) #12
  br label %16

16:                                               ; preds = %1, %6
  %17 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %20 = bitcast i8* %19 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %20, %"class.WTF::AtomicString"* dereferenceable(8) %18, i32 1, i32 1, i32 1) #12
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %17, %"class.blink::Event"* dereferenceable(104) %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink15HTMLLinkElement18LinkLoadingErroredEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::HTMLLinkElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %3, i64 0, i32 14, i32 1
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, 16
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %2, i64 2
  %10 = bitcast %"class.WTF::Vector.41"* %9 to %"class.blink::TreeScope"**
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 2
  %15 = bitcast %"class.blink::UseCounter"* %14 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* %14, i32 2957) #12
  br label %19

19:                                               ; preds = %1, %8
  %20 = bitcast %"class.WTF::Vector.41"* %2 to %"class.blink::EventTarget"*
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %23 = bitcast i8* %22 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %21, i32 1, i32 1, i32 1) #12
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %20, %"class.blink::Event"* dereferenceable(104) %23) #12
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZThn104_N5blink15HTMLLinkElement20GetLoadingTaskRunnerEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %3 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %2, i64 2
  %4 = bitcast %"class.WTF::Vector.41"* %3 to %"class.blink::TreeScope"**
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %7, i8 zeroext 3) #12
  ret %"class.base::SingleThreadTaskRunner"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15HTMLLinkElement11SheetLoadedEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %2, align 8
  %4 = icmp eq %"class.blink::LinkResource"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LinkResource"* %3 to i32 (%"class.blink::LinkResource"*)***
  %7 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %7, i64 2
  %9 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LinkResource"* nonnull %3) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::LinkResource"** %2 to %"class.blink::LinkStyle"**
  %14 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %13, align 8
  br label %15

15:                                               ; preds = %1, %5, %12
  %16 = phi %"class.blink::LinkStyle"* [ %14, %12 ], [ null, %5 ], [ null, %1 ]
  %17 = tail call zeroext i1 @_ZN5blink9LinkStyle11SheetLoadedEv(%"class.blink::LinkStyle"* %16) #12
  ret i1 %17
}

declare zeroext i1 @_ZN5blink9LinkStyle11SheetLoadedEv(%"class.blink::LinkStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement43NotifyLoadedSheetAndAllCriticalSubresourcesENS_4Node22LoadedSheetErrorStatusE(%"class.blink::HTMLLinkElement"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %3, align 8
  %5 = icmp eq %"class.blink::LinkResource"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::LinkResource"* %4 to i32 (%"class.blink::LinkResource"*)***
  %8 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %8, i64 2
  %10 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::LinkResource"* nonnull %4) #12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %6
  %14 = bitcast %"class.blink::LinkResource"** %3 to %"class.blink::LinkStyle"**
  %15 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %14, align 8
  br label %16

16:                                               ; preds = %2, %6, %13
  %17 = phi %"class.blink::LinkStyle"* [ %15, %13 ], [ null, %6 ], [ null, %2 ]
  tail call void @_ZN5blink9LinkStyle43NotifyLoadedSheetAndAllCriticalSubresourcesENS_4Node22LoadedSheetErrorStatusE(%"class.blink::LinkStyle"* %17, i32 %1) #12
  ret void
}

declare void @_ZN5blink9LinkStyle43NotifyLoadedSheetAndAllCriticalSubresourcesENS_4Node22LoadedSheetErrorStatusE(%"class.blink::LinkStyle"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement20DispatchPendingEventENSt3__110unique_ptrINS_28IncrementLoadEventDelayCountENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %3, align 8
  %5 = bitcast %"class.blink::LinkResource"* %4 to i1 (%"class.blink::LinkResource"*)***
  %6 = load i1 (%"class.blink::LinkResource"*)**, i1 (%"class.blink::LinkResource"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::LinkResource"*)*, i1 (%"class.blink::LinkResource"*)** %6, i64 6
  %8 = load i1 (%"class.blink::LinkResource"*)*, i1 (%"class.blink::LinkResource"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::LinkResource"* %4) #12
  %10 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 1
  %11 = load i16, i16* %10, align 4
  %12 = and i16 %11, 16
  %13 = icmp eq i16 %12, 0
  br i1 %9, label %14, label %35

14:                                               ; preds = %2
  br i1 %13, label %25, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 2
  %21 = bitcast %"class.blink::UseCounter"* %20 to void (%"class.blink::UseCounter"*, i32)***
  %22 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, i64 3
  %24 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %23, align 8
  tail call void %24(%"class.blink::UseCounter"* %20, i32 2956) #12
  br label %25

25:                                               ; preds = %14, %15
  %26 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %29 = bitcast i8* %28 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %29, %"class.WTF::AtomicString"* dereferenceable(8) %27, i32 1, i32 1, i32 1) #12
  %30 = getelementptr inbounds i8, i8* %28, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %26, %"class.blink::Event"* dereferenceable(104) %29) #12
  br label %56

35:                                               ; preds = %2
  br i1 %13, label %46, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 2
  %42 = bitcast %"class.blink::UseCounter"* %41 to void (%"class.blink::UseCounter"*, i32)***
  %43 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %43, i64 3
  %45 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, align 8
  tail call void %45(%"class.blink::UseCounter"* %41, i32 2957) #12
  br label %46

46:                                               ; preds = %35, %36
  %47 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %49 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #12
  %50 = bitcast i8* %49 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %50, %"class.WTF::AtomicString"* dereferenceable(8) %48, i32 1, i32 1, i32 1) #12
  %51 = getelementptr inbounds i8, i8* %49, i64 -4
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  %55 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %47, %"class.blink::Event"* dereferenceable(104) %50) #12
  br label %56

56:                                               ; preds = %46, %25
  tail call void @_ZN5blink28IncrementLoadEventDelayCount22ClearAndCheckLoadEventEv(%"class.blink::IncrementLoadEventDelayCount"* %1) #12
  %57 = icmp eq %"class.blink::IncrementLoadEventDelayCount"* %1, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  tail call void @_ZN5blink28IncrementLoadEventDelayCountD1Ev(%"class.blink::IncrementLoadEventDelayCount"* nonnull %1) #12
  %59 = bitcast %"class.blink::IncrementLoadEventDelayCount"* %1 to i8*
  tail call void @free(i8* %59) #12
  br label %60

60:                                               ; preds = %56, %58
  ret void
}

declare void @_ZN5blink28IncrementLoadEventDelayCount22ClearAndCheckLoadEventEv(%"class.blink::IncrementLoadEventDelayCount"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement13ScheduleEventEv(%"class.blink::HTMLLinkElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.blink::Persistent.2414", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %8, i8 zeroext 1) #12
  %10 = bitcast %"class.base::SingleThreadTaskRunner"* %9 to %"class.base::TaskRunner"*
  %11 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i32 363) #12
  %12 = bitcast %"class.blink::Persistent.2414"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::Persistent.2414", %"class.blink::Persistent.2414"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::Persistent.2414", %"class.blink::Persistent.2414"* %4, i64 0, i32 0, i32 0
  store %"class.blink::HTMLLinkElement"* %0, %"class.blink::HTMLLinkElement"** %14, align 8, !alias.scope !5
  %15 = getelementptr inbounds %"class.blink::Persistent.2414", %"class.blink::Persistent.2414"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8, !alias.scope !5
  %16 = ptrtoint %"class.blink::HTMLLinkElement"* %0 to i64
  switch i64 %16, label %17 [
    i64 0, label %32
    i64 -1, label %32
  ]

17:                                               ; preds = %1
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !5
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8, !noalias !5
  %21 = icmp eq %"class.blink::PersistentNode"* %20, null
  br i1 %21, label %22, label %25, !prof !3

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %23) #12
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8
  br label %25

25:                                               ; preds = %22, %17
  %26 = phi %"class.blink::PersistentNode"* [ %24, %22 ], [ %20, %17 ]
  %27 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !5
  %29 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  store i64 %28, i64* %29, align 8, !noalias !5
  %30 = bitcast %"class.blink::PersistentNode"* %26 to %"class.blink::PersistentBase.2415"**
  store %"class.blink::PersistentBase.2415"* %13, %"class.blink::PersistentBase.2415"** %30, align 8, !noalias !5
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15HTMLLinkElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %15, align 8, !alias.scope !5
  br label %32

32:                                               ; preds = %1, %1, %25
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = call noalias i8* @malloc(i64 16) #12
  %37 = bitcast i8* %36 to %"class.blink::IncrementLoadEventDelayCount"*
  call void @_ZN5blink28IncrementLoadEventDelayCountC1ERNS_8DocumentE(%"class.blink::IncrementLoadEventDelayCount"* %37, %"class.blink::Document"* dereferenceable(2848) %35) #12
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %39, align 8, !alias.scope !8
  %40 = call i8* @_Znwm(i64 72) #13, !noalias !11
  %41 = bitcast i8* %40 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS3_28IncrementLoadEventDelayCountENS5_14default_deleteIS7_EEEEEJNS3_10PersistentIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS2_28IncrementLoadEventDelayCountENS4_14default_deleteIS6_EEEEEJNS2_10PersistentIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !11
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)* @_ZN5blink15HTMLLinkElement20DispatchPendingEventENSt3__110unique_ptrINS_28IncrementLoadEventDelayCountENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %43, align 8, !noalias !11
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = bitcast %"class.blink::Persistent.2414"* %4 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !11
  %47 = bitcast i8* %44 to i64*
  store i64 %46, i64* %47, align 8, !noalias !11
  %48 = getelementptr inbounds i8, i8* %40, i64 56
  %49 = bitcast i8* %48 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %49, align 8, !noalias !11
  switch i64 %46, label %50 [
    i64 0, label %65
    i64 -1, label %65
  ]

50:                                               ; preds = %32
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !11
  %52 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %52, align 8, !noalias !11
  %54 = icmp eq %"class.blink::PersistentNode"* %53, null
  br i1 %54, label %55, label %58, !prof !3

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %56) #12, !noalias !11
  %57 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %52, align 8, !noalias !11
  br label %58

58:                                               ; preds = %55, %50
  %59 = phi %"class.blink::PersistentNode"* [ %57, %55 ], [ %53, %50 ]
  %60 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !11
  %62 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  store i64 %61, i64* %62, align 8, !noalias !11
  %63 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 0
  store i8* %44, i8** %63, align 8, !noalias !11
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15HTMLLinkElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %64, align 8, !noalias !11
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %49, align 8, !noalias !11
  br label %65

65:                                               ; preds = %58, %32, %32
  %66 = getelementptr inbounds i8, i8* %40, i64 64
  %67 = bitcast i8* %66 to i64*
  store i64 %38, i64* %67, align 8, !noalias !11
  %68 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %40, i8** %68, align 8, !alias.scope !11
  %69 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #12
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %70) #12
  %71 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %72 = icmp eq %"class.blink::PersistentNode"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %65
  %74 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %75 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %74, i64 0, i32 0, i32 0
  %76 = bitcast %"class.blink::PersistentRegion"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::PersistentNode"* %71 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %71, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  store %"class.blink::PersistentNode"* %71, %"class.blink::PersistentNode"** %75, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  br label %80

80:                                               ; preds = %65, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  %81 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.197", %"class.base::RefCountedThreadSafe.197"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe.197", %"class.base::RefCountedThreadSafe.197"* %83, i64 -2
  %89 = bitcast %"class.base::RefCountedThreadSafe.197"* %88 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %89) #12
  br label %90

90:                                               ; preds = %80, %82, %87
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HTMLLinkElement24StartLoadingDynamicSheetEv(%"class.blink::HTMLLinkElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::LinkResource"*, %"class.blink::LinkResource"** %2, align 8
  %4 = icmp eq %"class.blink::LinkResource"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LinkResource"* %3 to i32 (%"class.blink::LinkResource"*)***
  %7 = load i32 (%"class.blink::LinkResource"*)**, i32 (%"class.blink::LinkResource"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %7, i64 2
  %9 = load i32 (%"class.blink::LinkResource"*)*, i32 (%"class.blink::LinkResource"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LinkResource"* nonnull %3) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::LinkResource"** %2 to %"class.blink::LinkStyle"**
  %14 = load %"class.blink::LinkStyle"*, %"class.blink::LinkStyle"** %13, align 8
  br label %15

15:                                               ; preds = %1, %5, %12
  %16 = phi %"class.blink::LinkStyle"* [ %14, %12 ], [ null, %5 ], [ null, %1 ]
  tail call void @_ZN5blink9LinkStyle24StartLoadingDynamicSheetEv(%"class.blink::LinkStyle"* %16) #12
  ret void
}

declare void @_ZN5blink9LinkStyle24StartLoadingDynamicSheetEv(%"class.blink::LinkStyle"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLLinkElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLLinkElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3, align 8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, %11
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLLinkElement21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLLinkElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  br label %12

12:                                               ; preds = %9, %2
  %13 = phi i1 [ true, %2 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink15HTMLLinkElement24SubResourceAttributeNameEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ElementData"* %7 to %"class.blink::UniqueElementData"*
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1, i32 1
  %17 = bitcast %"class.blink::Member.14"* %16 to %"class.blink::Attribute"**
  %18 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  br label %26

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1
  %23 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::Attribute"*
  %24 = lshr i32 %11, 1
  %25 = and i32 %24, 268435455
  br label %26

26:                                               ; preds = %21, %14
  %27 = phi %"class.blink::Attribute"* [ %23, %21 ], [ %18, %14 ]
  %28 = phi i32 [ %25, %21 ], [ %20, %14 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %27, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %59, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %52, %32
  %38 = phi %"class.blink::Attribute"* [ %27, %32 ], [ %53, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %34
  br i1 %41, label %55, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 1
  %54 = icmp eq %"class.blink::Attribute"* %53, %30
  br i1 %54, label %59, label %37

55:                                               ; preds = %47, %37
  %56 = icmp eq %"class.blink::Attribute"* %38, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 1
  br label %61

59:                                               ; preds = %52, %55, %26, %1
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi %"class.WTF::AtomicString"* [ %60, %59 ], [ %58, %57 ]
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [9 x i8]* nonnull dereferenceable(9) @.str.4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  br label %85

83:                                               ; preds = %77
  %84 = call dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"* %4) #12
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi %"class.blink::QualifiedName"* [ %82, %81 ], [ %84, %83 ]
  ret %"class.blink::QualifiedName"* %86
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15HTMLLinkElement4HrefEv(%"class.blink::KURL"* noalias sret, %"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %2
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %59, %65
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #12
  br label %75

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  tail call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %74, %"class.WTF::String"* dereferenceable(8) %61) #12
  br label %75

75:                                               ; preds = %70, %69
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink15HTMLLinkElement3RelEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  ret %"class.WTF::AtomicString"* %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink15HTMLLinkElement7GetTypeEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  ret %"class.WTF::AtomicString"* %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HTMLLinkElement5AsyncEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAsyncAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %50, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %51, %50 ]
  %36 = phi i32 [ 0, %29 ], [ %52, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %31
  br i1 %39, label %54, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %52 = add i32 %36, 1
  %53 = icmp eq %"class.blink::Attribute"* %51, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %50, %45, %34, %23
  %55 = phi i32 [ -1, %23 ], [ %36, %34 ], [ %36, %45 ], [ -1, %50 ]
  %56 = icmp ne i32 %55, -1
  br label %57

57:                                               ; preds = %1, %54
  %58 = phi i1 [ false, %1 ], [ %56, %54 ]
  ret i1 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15HTMLLinkElement11GetIconTypeEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 14, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.41"* @_ZNK5blink15HTMLLinkElement9IconSizesEv(%"class.blink::HTMLLinkElement"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 12
  ret %"class.WTF::Vector.41"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMTokenList"* @_ZNK5blink15HTMLLinkElement5sizesEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %2, align 8
  ret %"class.blink::DOMTokenList"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMTokenList"* @_ZNK5blink15HTMLLinkElement9resourcesEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %2, align 8
  ret %"class.blink::DOMTokenList"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DOMTokenList"* @_ZNK5blink15HTMLLinkElement6scopesEv(%"class.blink::HTMLLinkElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"class.blink::DOMTokenList"*, %"class.blink::DOMTokenList"** %2, align 8
  ret %"class.blink::DOMTokenList"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15HTMLLinkElement5TraceEPNS_7VisitorE(%"class.blink::HTMLLinkElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.21"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12LinkResourceEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 11
  %15 = bitcast %"class.blink::Member.37"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMTokenListEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.27"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LinkLoaderEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 13
  %37 = bitcast %"class.blink::Member.46"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv) #12
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 15
  %48 = bitcast %"class.blink::Member.37"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMTokenListEE5TraceEPNS_7VisitorEPKv) #12
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 17
  %59 = bitcast %"class.blink::Member.37"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMTokenListEE5TraceEPNS_7VisitorEPKv) #12
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %69, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink15HTMLLinkElement5TraceEPNS_7VisitorE(%"class.blink::HTMLLinkElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLLinkElement", %"class.blink::HTMLLinkElement"* %0, i64 -1, i32 12
  %4 = bitcast %"class.WTF::Vector.41"* %3 to %"class.blink::HTMLLinkElement"*
  tail call void @_ZNK5blink15HTMLLinkElement5TraceEPNS_7VisitorE(%"class.blink::HTMLLinkElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15HTMLLinkElement18GetWrapperTypeInfoEv(%"class.blink::HTMLLinkElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15HTMLLinkElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #12
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.WTF::HashMap.2489"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #2

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #2

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink13LinkWebBundle16ParseResourceUrlERKN3WTF12AtomicStringE(%"class.blink::KURL"* sret, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink16SpaceSplitString3SetERKN3WTF12AtomicStringE(%"class.blink::SpaceSplitString"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = mul nuw nsw i64 %27, 112
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to %"class.blink::KURL"*
  %31 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable"* %0, %"class.blink::KURL"* %30, i32 %17, %"class.blink::KURL"* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable"*, %"class.blink::KURL"*, i32, %"class.blink::KURL"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::KURL"* %1, %"class.blink::KURL"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::KURL"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %25

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  br label %55

22:                                               ; preds = %76
  %23 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi i64* [ %19, %17 ], [ %23, %22 ]
  %27 = phi i64 [ %18, %17 ], [ %24, %22 ]
  %28 = phi %"class.blink::KURL"* [ null, %17 ], [ %77, %22 ]
  %29 = phi i32 [ 0, %17 ], [ %78, %22 ]
  %30 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  store atomic i64 %27, i64* %30 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %31, i64* %26, align 8
  store i32 %29, i32* %9, align 8
  %32 = inttoptr i64 %31 to %"class.blink::KURL"*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %34
  %37 = zext i32 %29 to i64
  br label %38

38:                                               ; preds = %46, %36
  %39 = phi i64 [ 0, %36 ], [ %47, %46 ]
  %40 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 %39, i32 4
  %41 = bitcast %"class.WTF::String"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, inttoptr (i64 -1 to i8*)
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 %39
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %45) #12
  br label %46

46:                                               ; preds = %44, %38
  %47 = add nuw nsw i64 %39, 1
  %48 = icmp eq i64 %47, %37
  br i1 %48, label %49, label %38

49:                                               ; preds = %46, %34
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %32, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %51

51:                                               ; preds = %25, %49
  %52 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, -2147483648
  store i32 %54, i32* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret %"class.blink::KURL"* %28

55:                                               ; preds = %20, %76
  %56 = phi %"class.blink::KURL"* [ null, %20 ], [ %77, %76 ]
  %57 = phi i32 [ 0, %20 ], [ %78, %76 ]
  %58 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %58, i64 %59
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #12
  %61 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %60, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #12
  %62 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %58, i64 %59, i32 4
  %63 = bitcast %"class.WTF::String"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  %66 = or i1 %61, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %55
  %68 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %68, i64 %59
  %70 = call { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %69) #12
  %71 = extractvalue { %"class.blink::KURL"*, i8 } %70, 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %71) #12
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %71, %"class.blink::KURL"* dereferenceable(112) %69) #12
  %72 = load %"class.blink::KURL"*, %"class.blink::KURL"** %16, align 8
  %73 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %72, i64 %59
  %74 = icmp eq %"class.blink::KURL"* %73, %3
  %75 = select i1 %74, %"class.blink::KURL"* %71, %"class.blink::KURL"* %56
  br label %76

76:                                               ; preds = %55, %67
  %77 = phi %"class.blink::KURL"* [ %56, %55 ], [ %75, %67 ]
  %78 = add i32 %57, 1
  %79 = load i32, i32* %13, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %22, label %55
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::KURL"*, %"class.blink::KURL"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = lshr i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %11) #12
  br label %18

18:                                               ; preds = %2, %16
  %19 = phi i32 [ %17, %16 ], [ %14, %2 ]
  %20 = and i32 %19, %8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %21
  %23 = ptrtoint %"class.blink::KURL"* %22 to i64
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #12
  %25 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %22, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #12
  br i1 %25, label %42, label %26

26:                                               ; preds = %18
  %27 = xor i32 %19, -1
  %28 = lshr i32 %19, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %62
  %41 = ptrtoint %"class.blink::KURL"* %68 to i64
  br label %42

42:                                               ; preds = %40, %18
  %43 = phi i64 [ %23, %18 ], [ %41, %40 ]
  %44 = phi %"class.blink::KURL"* [ null, %18 ], [ %63, %40 ]
  %45 = icmp eq %"class.blink::KURL"* %44, null
  %46 = ptrtoint %"class.blink::KURL"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %71

48:                                               ; preds = %26, %62
  %49 = phi %"class.blink::KURL"* [ null, %26 ], [ %63, %62 ]
  %50 = phi i64 [ %23, %26 ], [ %69, %62 ]
  %51 = phi %"class.blink::KURL"* [ %22, %26 ], [ %68, %62 ]
  %52 = phi i64 [ %21, %26 ], [ %67, %62 ]
  %53 = phi i64 [ 0, %26 ], [ %65, %62 ]
  %54 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %52, i32 4
  %55 = bitcast %"class.WTF::String"* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %62, label %58

58:                                               ; preds = %48
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %61 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"* %60) #12
  br i1 %61, label %71, label %62

62:                                               ; preds = %48, %58
  %63 = phi %"class.blink::KURL"* [ %49, %58 ], [ %51, %48 ]
  %64 = icmp eq i64 %53, 0
  %65 = select i1 %64, i64 %39, i64 %53
  %66 = add i64 %65, %52
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 %67
  %69 = ptrtoint %"class.blink::KURL"* %68 to i64
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %3) #12
  %70 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %68, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #12
  br i1 %70, label %40, label %48

71:                                               ; preds = %58, %42
  %72 = phi i64 [ %47, %42 ], [ %50, %58 ]
  %73 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %74 = inttoptr i64 %72 to %"class.blink::KURL"*
  %75 = insertvalue { %"class.blink::KURL"*, i8 } undef, %"class.blink::KURL"* %74, 0
  %76 = insertvalue { %"class.blink::KURL"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::KURL"*, i8 } %76
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::KURL"*, i8 } @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_S2_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  %7 = icmp eq %"class.blink::KURL"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"class.blink::KURL"* null)
  %10 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::KURL"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #12
  br label %25

25:                                               ; preds = %11, %23
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %28
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #12
  %31 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %29, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #12
  br i1 %31, label %77, label %32

32:                                               ; preds = %25
  %33 = xor i32 %26, -1
  %34 = lshr i32 %26, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %59
  %47 = phi %"class.blink::KURL"* [ %29, %32 ], [ %65, %59 ]
  %48 = phi %"class.blink::KURL"* [ null, %32 ], [ %60, %59 ]
  %49 = phi i64 [ %28, %32 ], [ %64, %59 ]
  %50 = phi i64 [ 0, %32 ], [ %62, %59 ]
  %51 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %49, i32 4
  %52 = bitcast %"class.WTF::String"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #12
  br i1 %58, label %91, label %59

59:                                               ; preds = %46, %55
  %60 = phi %"class.blink::KURL"* [ %48, %55 ], [ %47, %46 ]
  %61 = icmp eq i64 %50, 0
  %62 = select i1 %61, i64 %45, i64 %50
  %63 = add i64 %62, %49
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 %64
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %4) #12
  %66 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %65, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #12
  br i1 %66, label %67, label %46

67:                                               ; preds = %59
  %68 = icmp eq %"class.blink::KURL"* %60, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %60, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 112, i1 false) #12
  %71 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %25, %67, %69
  %78 = phi %"class.blink::KURL"* [ %60, %69 ], [ %65, %67 ], [ %29, %25 ]
  %79 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %78, %"class.blink::KURL"* dereferenceable(112) %2) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %13, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  %90 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"class.blink::KURL"* %78)
  br label %91

91:                                               ; preds = %55, %77, %89
  %92 = phi i8 [ 1, %77 ], [ 1, %89 ], [ 0, %55 ]
  %93 = phi %"class.blink::KURL"* [ %78, %77 ], [ %90, %89 ], [ %47, %55 ]
  %94 = insertvalue { %"class.blink::KURL"*, i8 } undef, %"class.blink::KURL"* %93, 0
  %95 = insertvalue { %"class.blink::KURL"*, i8 } %94, i8 %92, 1
  ret { %"class.blink::KURL"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"*, %"class.blink::KURL"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 112
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  %37 = call %"class.blink::KURL"* @_ZN3WTF9HashTableIN5blink4KURLES2_NS_17IdentityExtractorENS1_8KURLHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable"* %0, %"class.blink::KURL"* %36, i32 %32, %"class.blink::KURL"* %1) #12
  ret %"class.blink::KURL"* %37
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN5blink10LinkLoaderC1EPNS_16LinkLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::LinkLoader"*, %"class.blink::LinkLoaderClient"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18SingleModuleClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18SingleModuleClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SingleModuleClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SingleModuleClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SingleModuleClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::SingleModuleClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SingleModuleClient"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18SingleModuleClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SingleModuleClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::SingleModuleClient"*)***
  %4 = load void (%"class.blink::SingleModuleClient"*)**, void (%"class.blink::SingleModuleClient"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::SingleModuleClient"*)*, void (%"class.blink::SingleModuleClient"*)** %4, i64 1
  %6 = load void (%"class.blink::SingleModuleClient"*)*, void (%"class.blink::SingleModuleClient"*)** %5, align 8
  tail call void %6(%"class.blink::SingleModuleClient"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18SingleModuleClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink7RelListC1EPNS_7ElementE(%"class.blink::RelList"*, %"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.gfx::Size"* @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.41"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.gfx::Size"*, %"class.gfx::Size"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %24, i64 %25
  ret %"class.gfx::Size"* %26
}

declare void @_ZN5blink9LinkStyleC1EPNS_15HTMLLinkElementE(%"class.blink::LinkStyle"*, %"class.blink::HTMLLinkElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12LinkResourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12LinkResourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12LinkResourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12LinkResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LinkResource"*
  %4 = bitcast i8* %1 to void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)**, void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::LinkResource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::LinkResource"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12LinkResourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::LinkResource"*
  %3 = bitcast i8* %0 to void (%"class.blink::LinkResource"*)***
  %4 = load void (%"class.blink::LinkResource"*)**, void (%"class.blink::LinkResource"*)*** %3, align 8
  %5 = load void (%"class.blink::LinkResource"*)*, void (%"class.blink::LinkResource"*)** %4, align 8
  tail call void %5(%"class.blink::LinkResource"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12LinkResourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13LinkWebBundleC1EPNS_15HTMLLinkElementE(%"class.blink::LinkWebBundle"*, %"class.blink::HTMLLinkElement"*) unnamed_addr #2

declare void @_ZN5blink12LinkManifestC1EPNS_15HTMLLinkElementE(%"class.blink::LinkManifest"*, %"class.blink::HTMLLinkElement"*) unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink28IncrementLoadEventDelayCountD1Ev(%"class.blink::IncrementLoadEventDelayCount"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_15HTMLLinkElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HTMLLinkElement"**
  %5 = load %"class.blink::HTMLLinkElement"*, %"class.blink::HTMLLinkElement"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::HTMLLinkElement"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HTMLLinkElement"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLLinkElementEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLLinkElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLLinkElement"*
  tail call void @_ZNK5blink15HTMLLinkElement5TraceEPNS_7VisitorE(%"class.blink::HTMLLinkElement"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink28IncrementLoadEventDelayCountC1ERNS_8DocumentE(%"class.blink::IncrementLoadEventDelayCount"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS3_28IncrementLoadEventDelayCountENS5_14default_deleteIS7_EEEEEJNS3_10PersistentIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::HTMLLinkElement"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)**
  %21 = load void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)*, void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::HTMLLinkElement"*, %"class.blink::IncrementLoadEventDelayCount"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::IncrementLoadEventDelayCount"**
  %28 = load %"class.blink::IncrementLoadEventDelayCount"*, %"class.blink::IncrementLoadEventDelayCount"** %27, align 8
  store %"class.blink::IncrementLoadEventDelayCount"* null, %"class.blink::IncrementLoadEventDelayCount"** %27, align 8
  tail call void %25(%"class.blink::HTMLLinkElement"* %12, %"class.blink::IncrementLoadEventDelayCount"* %28) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS2_28IncrementLoadEventDelayCountENS4_14default_deleteIS6_EEEEEJNS2_10PersistentIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::IncrementLoadEventDelayCount"**
  %6 = load %"class.blink::IncrementLoadEventDelayCount"*, %"class.blink::IncrementLoadEventDelayCount"** %5, align 8
  store %"class.blink::IncrementLoadEventDelayCount"* null, %"class.blink::IncrementLoadEventDelayCount"** %5, align 8
  %7 = icmp eq %"class.blink::IncrementLoadEventDelayCount"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink28IncrementLoadEventDelayCountD1Ev(%"class.blink::IncrementLoadEventDelayCount"* nonnull %6) #12
  %9 = bitcast %"class.blink::IncrementLoadEventDelayCount"* %6 to i8*
  tail call void @free(i8* %9) #12
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %12 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %11 to %"class.blink::PersistentNode"**
  %13 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %14 = icmp eq %"class.blink::PersistentNode"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::PersistentNode"* %13 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %21, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %17, align 8
  br label %22

22:                                               ; preds = %10, %15
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMTokenListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMTokenList"*
  %4 = bitcast i8* %1 to void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)**, void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)*, void (%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DOMTokenList"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LinkLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LinkLoader"*
  tail call void @_ZNK5blink10LinkLoader5TraceEPNS_7VisitorE(%"class.blink::LinkLoader"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink10LinkLoader5TraceEPNS_7VisitorE(%"class.blink::LinkLoader"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7RelListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMTokenList"*
  tail call void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink12DOMTokenList5TraceEPNS_7VisitorE(%"class.blink::DOMTokenList"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink22WrapPersistentInternalINS_15HTMLLinkElementEEENS_10PersistentIT_EEPS3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink22WrapPersistentInternalINS_15HTMLLinkElementEEENS_10PersistentIT_EEPS3_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF4BindIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS1_28IncrementLoadEventDelayCountENS3_14default_deleteIS5_EEEEEJNS1_10PersistentIS2_EES8_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF4BindIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS1_28IncrementLoadEventDelayCountENS3_14default_deleteIS5_EEEEEJNS1_10PersistentIS2_EES8_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!11 = !{!12, !14, !9}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS3_28IncrementLoadEventDelayCountENS5_14default_deleteIS7_EEEEEJNS3_10PersistentIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS3_28IncrementLoadEventDelayCountENS5_14default_deleteIS7_EEEEEJNS3_10PersistentIS4_EESA_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS1_28IncrementLoadEventDelayCountENS3_14default_deleteIS5_EEEEEJNS1_10PersistentIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN5blink15HTMLLinkElementEFvNSt3__110unique_ptrINS1_28IncrementLoadEventDelayCountENS3_14default_deleteIS5_EEEEEJNS1_10PersistentIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
