; ModuleID = '../../third_party/skia/src/gpu/GrTexture.cpp'
source_filename = "../../third_party/skia/src/gpu/GrTexture.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.134 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %class.sk_sp.68, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.108", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.5", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.4 }
%class.sk_sp.4 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.15, %class.SkTArray.24, %class.SkTArray.26, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.8"*, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.26, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.15 = type { %class.SkTHashTable.16 }
%class.SkTHashTable.16 = type { i32, i32, %class.SkAutoTArray.17 }
%class.SkAutoTArray.17 = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.148" }
%"struct.std::__1::pair.148" = type { i32, %class.SkTArray.149* }
%class.SkTArray.149 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.24 = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.149, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.26 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.40 }
%class.SkFibBlockSizes.40 = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.68 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.96, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTHashMap.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.111, %class.sk_sp.111 }
%class.sk_sp.111 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.133 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.133 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.134 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.135, void (i8*)*, i8* }
%class.SkNVRefCnt.135 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.136, i32, [4 x i8] }
%union.anon.136 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.141 = type { %class.GrTexture* }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.138, %class.sk_sp.140 }
%union.anon.138 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.139, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.139 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.140 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%"class.std::__1::function" = type opaque
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp.142, %class.sk_sp.142, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.142 = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.SkTraceMemoryDump = type opaque

$_ZN9GrTexture9asTextureEv = comdat any

$_ZNK9GrTexture9asTextureEv = comdat any

$_ZN9GrTextureD1Ev = comdat any

$_ZN9GrTextureD0Ev = comdat any

$_ZNK9GrSurface15getResourceTypeEv = comdat any

$_ZTv0_n40_N9GrTextureD1Ev = comdat any

$_ZTv0_n40_N9GrTextureD0Ev = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZTv0_n96_N9GrTexture9asTextureEv = comdat any

$_ZTv0_n104_NK9GrTexture9asTextureEv = comdat any

$_ZN9GrSurface14asRenderTargetEv = comdat any

$_ZNK9GrSurface14asRenderTargetEv = comdat any

$_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

@_ZZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType = internal global i32 0, align 4
@_ZGVZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType = internal global i64 0, align 8
@_ZTV9GrTexture = hidden unnamed_addr constant { [12 x i8*], [31 x i8*] } { [12 x i8*] [i8* inttoptr (i64 24 to i8*), i8* null, i8* null, i8* bitcast (%class.GrTexture* (%class.GrTexture*)* @_ZN9GrTexture9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrTexture*)* @_ZNK9GrTexture9asTextureEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrTexture*, %class.GrScratchKey*)* @_ZNK9GrTexture17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrTexture*)* @_ZNK9GrTexture15onGpuMemorySizeEv to i8*), i8* bitcast (void (%class.GrTexture*)* @_ZN9GrTextureD1Ev to i8*), i8* bitcast (void (%class.GrTexture*)* @_ZN9GrTextureD0Ev to i8*)], [31 x i8*] [i8* null, i8* null, i8* null, i8* inttoptr (i64 -24 to i8*), i8* inttoptr (i64 -24 to i8*), i8* null, i8* inttoptr (i64 -24 to i8*), i8* inttoptr (i64 -24 to i8*), i8* null, i8* null, i8* null, i8* inttoptr (i64 -24 to i8*), i8* null, i8* null, i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrSurface*)* @_ZNK9GrSurface15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrTexture*)* @_ZTv0_n40_N9GrTextureD1Ev to i8*), i8* bitcast (void (%class.GrTexture*)* @_ZTv0_n40_N9GrTextureD0Ev to i8*), i8* bitcast (void (%class.GrSurface*)* @_ZN9GrSurface9onReleaseEv to i8*), i8* bitcast (void (%class.GrSurface*)* @_ZN9GrSurface9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrTexture*, %class.GrScratchKey*)* @_ZTv0_n72_NK9GrTexture17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrTexture*)* @_ZTv0_n80_NK9GrTexture15onGpuMemorySizeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.GrTexture* (%class.GrTexture*)* @_ZTv0_n96_N9GrTexture9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrTexture*)* @_ZTv0_n104_NK9GrTexture9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrSurface*)* @_ZN9GrSurface14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrSurface*)* @_ZNK9GrSurface14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrSurface*, %class.sk_sp.134*)* @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)] }, align 8
@_ZTT9GrTexture = hidden unnamed_addr constant [2 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [31 x i8*] }, { [12 x i8*], [31 x i8*] }* @_ZTV9GrTexture, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [31 x i8*] }, { [12 x i8*], [31 x i8*] }* @_ZTV9GrTexture, i32 0, inrange i32 1, i32 16) to i8*)], align 8
@.str = private unnamed_addr constant [8 x i8] c"Surface\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9GrTexture16markMipmapsDirtyEv(%class.GrTexture* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9GrTexture16markMipmapsCleanEv(%class.GrTexture* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 2
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK9GrTexture15onGpuMemorySizeEv(%class.GrTexture*) unnamed_addr #2 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #8
  %4 = bitcast %class.GrTexture* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.GrTexture* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %8
  %11 = bitcast i8* %10 to %class.GrSurface*
  %12 = bitcast i8* %10 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %13 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %13, i64 9
  %15 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %14, align 8
  call void %15(%class.GrBackendFormat* nonnull sret %2, %class.GrSurface* %11) #8
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 152
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 0
  %27 = call i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* nonnull dereferenceable(72) %2, i64 %23, i32 1, i1 zeroext %26, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #8
  ret i64 %27
}

declare i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* dereferenceable(72), i64, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZTv0_n80_NK9GrTexture15onGpuMemorySizeEv(%class.GrTexture*) unnamed_addr #2 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = bitcast %class.GrTexture* %0 to i8*
  %4 = bitcast %class.GrTexture* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -80
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #8
  %11 = bitcast i8* %9 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = bitcast i8* %16 to %class.GrSurface*
  %18 = bitcast i8* %16 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %19 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %19, i64 9
  %21 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %20, align 8
  call void %21(%class.GrBackendFormat* nonnull sret %2, %class.GrSurface* %17) #8
  %22 = load i8*, i8** %11, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 %25
  %27 = getelementptr inbounds i8, i8* %26, i64 152
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %9, i64 12
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp ne i32 %32, 0
  %34 = call i64 @_ZN9GrSurface11ComputeSizeERK15GrBackendFormat7SkISizei11GrMipmappedb(%class.GrBackendFormat* nonnull dereferenceable(72) %2, i64 %29, i32 1, i1 zeroext %33, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #8
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9GrTextureC2EP5GrGpuRK7SkISize11GrProtected13GrTextureType14GrMipmapStatus(%class.GrTexture* nocapture, i8** nocapture readonly, %class.GrGpu* nocapture readnone, %struct.SkISize* nocapture readnone dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #2 align 2 {
  %8 = bitcast i8** %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.GrTexture* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8*, i8** %1, i64 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrTexture* %0 to i8**
  %15 = inttoptr i64 %9 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.GrTexture* %0 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  %21 = bitcast i8* %20 to i64*
  store i64 %13, i64* %21, align 8
  %22 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 1
  store i32 %5, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 2
  store i32 %6, i32* %23, align 4
  %24 = icmp eq i32 %6, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %7
  %26 = load i8*, i8** %14, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %19, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 152
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i8, i8* %30, i64 156
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = tail call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %33, i32 %36) #8
  br label %38

38:                                               ; preds = %7, %25
  %39 = phi i32 [ %37, %25 ], [ 0, %7 ]
  %40 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 3
  store i32 %39, i32* %40, align 8
  %41 = icmp eq i32 %5, 3
  br i1 %41, label %42, label %52

42:                                               ; preds = %38
  %43 = load i8*, i8** %14, align 8
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %19, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 160
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = or i32 %50, 1
  store i32 %51, i32* %49, align 4
  br label %52

52:                                               ; preds = %42, %38
  ret void
}

declare i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9GrTexture19StealBackendTextureE5sk_spIS_EP16GrBackendTexturePNSt3__18functionIFvS2_EEE(%class.sk_sp.141* nocapture readonly, %class.GrBackendTexture*, %"class.std::__1::function"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.141, %class.sk_sp.141* %0, i64 0, i32 0
  %5 = load %class.GrTexture*, %class.GrTexture** %4, align 8
  %6 = bitcast %class.GrTexture* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr i8, i8* %7, i64 -24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 8
  %12 = bitcast %class.GrTexture* %5 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = bitcast i8* %13 to i32*
  %15 = load atomic i32, i32* %14 seq_cst, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %62

17:                                               ; preds = %3
  %18 = load %class.GrTexture*, %class.GrTexture** %4, align 8
  %19 = bitcast %class.GrTexture* %18 to i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)***
  %20 = load i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)**, i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)*, i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)** %20, i64 4
  %22 = load i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)*, i1 (%class.GrTexture*, %class.GrBackendTexture*, %"class.std::__1::function"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%class.GrTexture* %18, %class.GrBackendTexture* %1, %"class.std::__1::function"* %2) #8
  br i1 %23, label %24, label %62

24:                                               ; preds = %17
  %25 = load %class.GrTexture*, %class.GrTexture** %4, align 8
  %26 = bitcast %class.GrTexture* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %class.GrTexture* %25 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = getelementptr inbounds i8, i8* %32, i64 72
  %34 = bitcast i8* %33 to i32**
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 65535
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %24
  %41 = bitcast i8* %32 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResource15removeUniqueKeyEv(%class.GrGpuResource* %41) #8
  %42 = load %class.GrTexture*, %class.GrTexture** %4, align 8
  %43 = bitcast %class.GrTexture* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.GrTexture* %42 to i8*
  br label %49

49:                                               ; preds = %24, %40
  %50 = phi i8* [ %31, %24 ], [ %48, %40 ]
  %51 = phi i64 [ %30, %24 ], [ %47, %40 ]
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 32
  %54 = bitcast i8* %53 to i32**
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 1
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 65535
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %49
  %61 = bitcast i8* %52 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResource16removeScratchKeyEv(%class.GrGpuResource* %61) #8
  br label %62

62:                                               ; preds = %49, %60, %17, %3
  %63 = phi i1 [ false, %3 ], [ false, %17 ], [ true, %60 ], [ true, %49 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9GrTexture17computeScratchKeyEP12GrScratchKey(%class.GrTexture*, %class.GrScratchKey*) unnamed_addr #2 align 2 {
  %3 = alloca %class.GrBackendFormat, align 8
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = bitcast %class.GrTexture* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.GrTexture* %0 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = getelementptr inbounds i8, i8* %11, i64 128
  %13 = bitcast i8* %12 to %class.GrGpu**
  %14 = load %class.GrGpu*, %class.GrGpu** %13, align 8
  %15 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %14, i64 0, i32 2, i32 0
  %16 = load %class.GrCaps*, %class.GrCaps** %15, align 8
  %17 = bitcast %class.GrBackendFormat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %17) #8
  %18 = bitcast i8* %11 to %class.GrSurface*
  %19 = bitcast i8* %11 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %20 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %20, i64 9
  %22 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %21, align 8
  call void %22(%class.GrBackendFormat* nonnull sret %3, %class.GrSurface* %18) #8
  %23 = call zeroext i1 @_ZNK6GrCaps18isFormatCompressedERK15GrBackendFormat(%class.GrCaps* %16, %class.GrBackendFormat* nonnull dereferenceable(72) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %17) #8
  br i1 %23, label %73, label %24

24:                                               ; preds = %2
  %25 = load i8*, i8** %5, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %10, i64 %28
  %30 = bitcast i8* %29 to %class.GrSurface*
  %31 = bitcast i8* %29 to %class.GrRenderTarget* (%class.GrSurface*)***
  %32 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %31, align 8
  %33 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %32, i64 13
  %34 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %33, align 8
  %35 = call %class.GrRenderTarget* %34(%class.GrSurface* %30) #8
  %36 = icmp eq %class.GrRenderTarget* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %35, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  br label %40

40:                                               ; preds = %24, %37
  %41 = phi i1 [ true, %37 ], [ false, %24 ]
  %42 = phi i32 [ %39, %37 ], [ 1, %24 ]
  %43 = load i8*, i8** %5, align 8
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %10, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 164
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = getelementptr inbounds i8, i8* %47, i64 128
  %52 = bitcast i8* %51 to %class.GrGpu**
  %53 = load %class.GrGpu*, %class.GrGpu** %52, align 8
  %54 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %53, i64 0, i32 2, i32 0
  %55 = load %class.GrCaps*, %class.GrCaps** %54, align 8
  %56 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %56) #8
  %57 = bitcast i8* %47 to %class.GrSurface*
  %58 = bitcast i8* %47 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %59 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %59, i64 9
  %61 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %60, align 8
  call void %61(%class.GrBackendFormat* nonnull sret %4, %class.GrSurface* %57) #8
  %62 = load i8*, i8** %5, align 8
  %63 = getelementptr i8, i8* %62, i64 -24
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %10, i64 %65
  %67 = getelementptr inbounds i8, i8* %66, i64 152
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %0, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 0
  call void @_ZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKey(%class.GrCaps* dereferenceable(232) %55, %class.GrBackendFormat* nonnull dereferenceable(72) %4, i64 %69, i1 zeroext %41, i32 %42, i1 zeroext %72, i1 zeroext %50, %class.GrScratchKey* %1)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %56) #8
  br label %73

73:                                               ; preds = %2, %40
  ret void
}

declare zeroext i1 @_ZNK6GrCaps18isFormatCompressedERK15GrBackendFormat(%class.GrCaps*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKey(%class.GrCaps* dereferenceable(232), %class.GrBackendFormat* dereferenceable(72), i64, i1 zeroext, i32, i1 zeroext, i1 zeroext, %class.GrScratchKey*) local_unnamed_addr #2 align 2 {
  %9 = trunc i64 %2 to i32
  %10 = lshr i64 %2, 32
  %11 = trunc i64 %10 to i32
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !3

14:                                               ; preds = %8
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @_ZN12GrScratchKey20GenerateResourceTypeEv() #8
  store i32 %18, i32* @_ZZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType, align 4
  %19 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType) #8
  br label %20

20:                                               ; preds = %14, %17, %8
  %21 = bitcast %class.GrCaps* %0 to i64 (%class.GrCaps*, %class.GrBackendFormat*)***
  %22 = load i64 (%class.GrCaps*, %class.GrBackendFormat*)**, i64 (%class.GrCaps*, %class.GrBackendFormat*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%class.GrCaps*, %class.GrBackendFormat*)*, i64 (%class.GrCaps*, %class.GrBackendFormat*)** %22, i64 15
  %24 = load i64 (%class.GrCaps*, %class.GrBackendFormat*)*, i64 (%class.GrCaps*, %class.GrBackendFormat*)** %23, align 8
  %25 = tail call i64 %24(%class.GrCaps* %0, %class.GrBackendFormat* dereferenceable(72) %1) #8
  %26 = load i32, i32* @_ZZN9GrTexture17ComputeScratchKeyERK6GrCapsRK15GrBackendFormat7SkISize12GrRenderablei11GrMipmapped11GrProtectedP12GrScratchKeyE5kType, align 4
  %27 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %30 = icmp eq i32* %28, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %20
  %32 = bitcast i32* %28 to i8*
  tail call void @_Z7sk_freePv(i8* %32) #8
  br label %33

33:                                               ; preds = %20, %31
  store i32* %29, i32** %27, align 8
  %34 = or i32 %26, 1835008
  %35 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  store i32 %9, i32* %36, align 4
  %37 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 3
  store i32 %11, i32* %37, align 4
  %38 = trunc i64 %25 to i32
  %39 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 4
  store i32 %38, i32* %39, align 4
  %40 = lshr i64 %25, 32
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 5
  store i32 %41, i32* %42, align 4
  %43 = zext i1 %5 to i32
  %44 = zext i1 %6 to i32
  %45 = shl nuw nsw i32 %44, 1
  %46 = zext i1 %3 to i32
  %47 = shl nuw nsw i32 %46, 2
  %48 = shl i32 %4, 3
  %49 = or i32 %48, %47
  %50 = or i32 %49, %43
  %51 = or i32 %50, %45
  %52 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 6
  store i32 %51, i32* %52, align 4
  %53 = icmp eq %class.GrScratchKey* %7, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %33
  %55 = getelementptr inbounds %class.GrScratchKey, %class.GrScratchKey* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %56 = lshr i32 %34, 16
  %57 = zext i32 %56 to i64
  %58 = add nsw i64 %57, -4
  %59 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* %55, i64 %58) #8
  store i32 %59, i32* %29, align 4
  br label %60

60:                                               ; preds = %33, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n72_NK9GrTexture17computeScratchKeyEP12GrScratchKey(%class.GrTexture*, %class.GrScratchKey*) unnamed_addr #2 align 2 {
  %3 = bitcast %class.GrTexture* %0 to i8*
  %4 = bitcast %class.GrTexture* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -72
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = bitcast i8* %9 to %class.GrTexture*
  tail call void @_ZNK9GrTexture17computeScratchKeyEP12GrScratchKey(%class.GrTexture* %10, %class.GrScratchKey* %1)
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

declare i32 @_ZN12GrScratchKey20GenerateResourceTypeEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZN9GrTexture9asTextureEv(%class.GrTexture*) unnamed_addr #2 comdat align 2 {
  ret %class.GrTexture* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZNK9GrTexture9asTextureEv(%class.GrTexture*) unnamed_addr #2 comdat align 2 {
  ret %class.GrTexture* %0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrTextureD1Ev(%class.GrTexture*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrTextureD0Ev(%class.GrTexture*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK9GrSurface15getResourceTypeEv(%class.GrSurface*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n40_N9GrTextureD1Ev(%class.GrTexture*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n40_N9GrTextureD0Ev(%class.GrTexture*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @_ZN9GrSurface9onReleaseEv(%class.GrSurface*) unnamed_addr #3

declare void @_ZN9GrSurface9onAbandonEv(%class.GrSurface*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZTv0_n96_N9GrTexture9asTextureEv(%class.GrTexture*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %class.GrTexture* %0 to i8*
  %3 = bitcast %class.GrTexture* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -96
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrTexture*
  ret %class.GrTexture* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZTv0_n104_NK9GrTexture9asTextureEv(%class.GrTexture*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %class.GrTexture* %0 to i8*
  %3 = bitcast %class.GrTexture* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -104
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrTexture*
  ret %class.GrTexture* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZN9GrSurface14asRenderTargetEv(%class.GrSurface*) unnamed_addr #2 comdat align 2 {
  ret %class.GrRenderTarget* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZNK9GrSurface14asRenderTargetEv(%class.GrSurface*) unnamed_addr #2 comdat align 2 {
  ret %class.GrRenderTarget* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrSurface*, %class.sk_sp.134*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare void @_ZN13GrGpuResource15removeUniqueKeyEv(%class.GrGpuResource*) local_unnamed_addr #3

declare void @_ZN13GrGpuResource16removeScratchKeyEv(%class.GrGpuResource*) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
