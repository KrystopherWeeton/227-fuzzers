; ModuleID = '../../third_party/re2/src/re2/prefilter.cc'
source_filename = "../../third_party/re2/src/re2/prefilter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.re2::CaseFold" = type { i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::Prefilter" = type <{ i32, [4 x i8], %"class.std::__1::vector"*, %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.re2::Prefilter"**, %"class.re2::Prefilter"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.re2::Prefilter"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::Prefilter::Info" = type { %"class.std::__1::set", i8, %"class.re2::Prefilter"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.re2::CharClass" = type <{ i8, [3 x i8], i32, %"struct.re2::RuneRange"*, i32, [4 x i8] }>
%"struct.re2::RuneRange" = type { i32, i32 }
%"class.re2::Regexp" = type { i8, i8, i16, i16, i16, %union.anon.14, %"class.re2::Regexp"*, %union.anon.15 }
%union.anon.14 = type { %"class.re2::Regexp"** }
%union.anon.15 = type { %struct.anon.17 }
%struct.anon.17 = type { i32, %"class.std::__1::basic_string"* }
%"class.re2::Prefilter::Info::Walker" = type <{ %"class.re2::Regexp::Walker", i8, [7 x i8] }>
%"class.re2::Regexp::Walker" = type { i32 (...)**, %"class.std::__1::stack", i8, i32 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::__split_buffer" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.28" }
%"struct.re2::WalkState" = type { %"class.re2::Regexp"*, i32, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.re2::WalkState"** }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.37"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.37" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.47" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::allocator.31"* }
%"class.std::__1::allocator.31" = type { i8 }

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev = comdat any

$_ZN10LogMessageD2Ev = comdat any

$_ZN3re29Prefilter4Info6WalkerD0Ev = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE8PreVisitEPS0_S4_Pb = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE4CopyES4_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED0Ev = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE9PostVisitEPS0_S4_S4_PS4_i = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE5ResetEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE12WalkInternalEPS0_S4_b = comdat any

$_ZNSt3__15dequeIN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS6_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE10push_frontEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEERNS_9allocatorIS7_EEE10push_frontERKS7_ = comdat any

$_ZTVN3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE = comdat any

@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/prefilter.cc\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"Bad regexp op \00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"Bad op in Prefilter::DebugString: \00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"op%d\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"*no-matches*\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"<nil>\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN3re29Prefilter4Info6WalkerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev to i8*), i8* bitcast (void (%"class.re2::Prefilter::Info::Walker"*)* @_ZN3re29Prefilter4Info6WalkerD0Ev to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE8PreVisitEPS0_S4_Pb to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Prefilter::Info::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)* @_ZN3re29Prefilter4Info6Walker9PostVisitEPNS_6RegexpEPS1_S5_PS5_i to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE4CopyES4_ to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Prefilter::Info::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)* @_ZN3re29Prefilter4Info6Walker10ShortVisitEPNS_6RegexpEPS1_ to i8*)] }, align 8
@_ZN3re215unicode_tolowerE = external global [0 x %"struct.re2::CaseFold"], align 4
@_ZN3re219num_unicode_tolowerE = external local_unnamed_addr constant i32, align 4
@_ZTVN3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev to i8*), i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED0Ev to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE8PreVisitEPS0_S4_Pb to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE9PostVisitEPS0_S4_S4_PS4_i to i8*), i8* bitcast (%"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE4CopyES4_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/walker-inl.h\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"Stack not empty.\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.18 = private unnamed_addr constant [10 x i8] c"Walk NULL\00", align 1

@_ZN3re29PrefilterC1ENS0_2OpE = hidden unnamed_addr alias void (%"class.re2::Prefilter"*, i32), void (%"class.re2::Prefilter"*, i32)* @_ZN3re29PrefilterC2ENS0_2OpE
@_ZN3re29PrefilterD1Ev = hidden unnamed_addr alias void (%"class.re2::Prefilter"*), void (%"class.re2::Prefilter"*)* @_ZN3re29PrefilterD2Ev
@_ZN3re29Prefilter4InfoC1Ev = hidden unnamed_addr alias void (%"class.re2::Prefilter::Info"*), void (%"class.re2::Prefilter::Info"*)* @_ZN3re29Prefilter4InfoC2Ev
@_ZN3re29Prefilter4InfoD1Ev = hidden unnamed_addr alias void (%"class.re2::Prefilter::Info"*), void (%"class.re2::Prefilter::Info"*)* @_ZN3re29Prefilter4InfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29PrefilterC2ENS0_2OpE(%"class.re2::Prefilter"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 2
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %6, align 8
  %7 = add i32 %1, -3
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #13
  %11 = bitcast %"class.std::__1::vector"** %6 to i8**
  store i8* %10, i8** %11, align 8
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 2
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.re2::Prefilter"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %37, label %15

12:                                               ; preds = %26
  %13 = bitcast %"class.re2::Prefilter"*** %29 to i64*
  %14 = icmp eq %"class.std::__1::vector"* %27, null
  br i1 %14, label %48, label %37

15:                                               ; preds = %5, %26
  %16 = phi %"class.std::__1::vector"* [ %27, %26 ], [ %3, %5 ]
  %17 = phi i64 [ %28, %26 ], [ 0, %5 ]
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %19 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %18, align 8
  %20 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %19, i64 %17
  %21 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %20, align 8
  %22 = icmp eq %"class.re2::Prefilter"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %21) #13
  %24 = bitcast %"class.re2::Prefilter"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  br label %26

26:                                               ; preds = %15, %23
  %27 = phi %"class.std::__1::vector"* [ %16, %15 ], [ %25, %23 ]
  %28 = add nuw i64 %17, 1
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %30 = bitcast %"class.re2::Prefilter"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %28, %35
  br i1 %36, label %15, label %12

37:                                               ; preds = %5, %12
  %38 = phi i64* [ %13, %12 ], [ %7, %5 ]
  %39 = phi %"class.std::__1::vector"* [ %27, %12 ], [ %3, %5 ]
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %40, align 8
  %42 = icmp eq %"class.re2::Prefilter"** %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = ptrtoint %"class.re2::Prefilter"** %41 to i64
  store i64 %44, i64* %38, align 8
  %45 = bitcast %"class.re2::Prefilter"** %41 to i8*
  tail call void @_ZdlPv(i8* %45) #14
  br label %46

46:                                               ; preds = %37, %43
  %47 = bitcast %"class.std::__1::vector"* %39 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %12
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %2, align 8
  br label %49

49:                                               ; preds = %1, %48
  %50 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 3
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %49, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter8SimplifyEv(%"class.re2::Prefilter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -3
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %0, i64 0, i32 2
  %8 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %12 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %11, align 8
  %13 = icmp eq %"class.re2::Prefilter"** %10, %12
  br i1 %13, label %24, label %30

14:                                               ; preds = %45
  %15 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %41, i64 0, i32 2
  %16 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %20 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %19, align 8
  %21 = icmp eq %"class.re2::Prefilter"** %18, %20
  br i1 %21, label %22, label %30

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %41, i64 0, i32 0
  br label %24

24:                                               ; preds = %22, %6
  %25 = phi i32 [ %3, %6 ], [ %47, %22 ]
  %26 = phi i32* [ %2, %6 ], [ %23, %22 ]
  %27 = phi %"class.re2::Prefilter"* [ %0, %6 ], [ %41, %22 ]
  %28 = icmp ne i32 %25, 3
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %26, align 8
  br label %50

30:                                               ; preds = %6, %14
  %31 = phi %"class.re2::Prefilter"** [ %18, %14 ], [ %10, %6 ]
  %32 = phi %"class.re2::Prefilter"** [ %20, %14 ], [ %12, %6 ]
  %33 = phi %"class.re2::Prefilter"*** [ %19, %14 ], [ %11, %6 ]
  %34 = phi %"class.re2::Prefilter"* [ %41, %14 ], [ %0, %6 ]
  %35 = ptrtoint %"class.re2::Prefilter"** %31 to i64
  %36 = ptrtoint %"class.re2::Prefilter"** %32 to i64
  %37 = sub i64 %36, %35
  %38 = icmp eq i64 %37, 8
  br i1 %38, label %39, label %50

39:                                               ; preds = %30
  %40 = bitcast %"class.re2::Prefilter"*** %33 to i64*
  %41 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %31, align 8
  store i64 %35, i64* %40, align 8
  %42 = icmp eq %"class.re2::Prefilter"* %34, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %34) #13
  %44 = bitcast %"class.re2::Prefilter"* %34 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %43, %39
  %46 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %41, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -3
  %49 = icmp ult i32 %48, 2
  br i1 %49, label %14, label %50

50:                                               ; preds = %30, %45, %1, %24
  %51 = phi %"class.re2::Prefilter"* [ %27, %24 ], [ %0, %1 ], [ %34, %30 ], [ %41, %45 ]
  ret %"class.re2::Prefilter"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32, %"class.re2::Prefilter"*, %"class.re2::Prefilter"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -3
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %8, label %52

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 2
  %10 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %14 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %13, align 8
  %15 = icmp eq %"class.re2::Prefilter"** %12, %14
  br i1 %15, label %26, label %32

16:                                               ; preds = %47
  %17 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %43, i64 0, i32 2
  %18 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %22 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %21, align 8
  %23 = icmp eq %"class.re2::Prefilter"** %20, %22
  br i1 %23, label %24, label %32

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %43, i64 0, i32 0
  br label %26

26:                                               ; preds = %24, %8
  %27 = phi i32 [ %5, %8 ], [ %49, %24 ]
  %28 = phi i32* [ %4, %8 ], [ %25, %24 ]
  %29 = phi %"class.re2::Prefilter"* [ %1, %8 ], [ %43, %24 ]
  %30 = icmp ne i32 %27, 3
  %31 = zext i1 %30 to i32
  store i32 %31, i32* %28, align 8
  br label %52

32:                                               ; preds = %8, %16
  %33 = phi %"class.re2::Prefilter"** [ %20, %16 ], [ %12, %8 ]
  %34 = phi %"class.re2::Prefilter"** [ %22, %16 ], [ %14, %8 ]
  %35 = phi %"class.re2::Prefilter"*** [ %21, %16 ], [ %13, %8 ]
  %36 = phi %"class.re2::Prefilter"* [ %43, %16 ], [ %1, %8 ]
  %37 = ptrtoint %"class.re2::Prefilter"** %33 to i64
  %38 = ptrtoint %"class.re2::Prefilter"** %34 to i64
  %39 = sub i64 %38, %37
  %40 = icmp eq i64 %39, 8
  br i1 %40, label %41, label %52

41:                                               ; preds = %32
  %42 = bitcast %"class.re2::Prefilter"*** %35 to i64*
  %43 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %33, align 8
  store i64 %37, i64* %42, align 8
  %44 = icmp eq %"class.re2::Prefilter"* %36, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %36) #13
  %46 = bitcast %"class.re2::Prefilter"* %36 to i8*
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %45, %41
  %48 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %43, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, -3
  %51 = icmp ult i32 %50, 2
  br i1 %51, label %16, label %52

52:                                               ; preds = %32, %47, %3, %26
  %53 = phi %"class.re2::Prefilter"* [ %29, %26 ], [ %1, %3 ], [ %43, %47 ], [ %36, %32 ]
  %54 = ptrtoint %"class.re2::Prefilter"* %53 to i64
  %55 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %2, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, -3
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %103

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %2, i64 0, i32 2
  %61 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 0, i32 0, i32 1
  %65 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %64, align 8
  %66 = icmp eq %"class.re2::Prefilter"** %63, %65
  br i1 %66, label %77, label %83

67:                                               ; preds = %98
  %68 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %94, i64 0, i32 2
  %69 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %69, i64 0, i32 0, i32 1
  %73 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %72, align 8
  %74 = icmp eq %"class.re2::Prefilter"** %71, %73
  br i1 %74, label %75, label %83

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %94, i64 0, i32 0
  br label %77

77:                                               ; preds = %75, %59
  %78 = phi i32 [ %56, %59 ], [ %100, %75 ]
  %79 = phi i32* [ %55, %59 ], [ %76, %75 ]
  %80 = phi %"class.re2::Prefilter"* [ %2, %59 ], [ %94, %75 ]
  %81 = icmp ne i32 %78, 3
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %79, align 8
  br label %103

83:                                               ; preds = %59, %67
  %84 = phi %"class.re2::Prefilter"** [ %71, %67 ], [ %63, %59 ]
  %85 = phi %"class.re2::Prefilter"** [ %73, %67 ], [ %65, %59 ]
  %86 = phi %"class.re2::Prefilter"*** [ %72, %67 ], [ %64, %59 ]
  %87 = phi %"class.re2::Prefilter"* [ %94, %67 ], [ %2, %59 ]
  %88 = ptrtoint %"class.re2::Prefilter"** %84 to i64
  %89 = ptrtoint %"class.re2::Prefilter"** %85 to i64
  %90 = sub i64 %89, %88
  %91 = icmp eq i64 %90, 8
  br i1 %91, label %92, label %103

92:                                               ; preds = %83
  %93 = bitcast %"class.re2::Prefilter"*** %86 to i64*
  %94 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %84, align 8
  store i64 %88, i64* %93, align 8
  %95 = icmp eq %"class.re2::Prefilter"* %87, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %87) #13
  %97 = bitcast %"class.re2::Prefilter"* %87 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %94, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, -3
  %102 = icmp ult i32 %101, 2
  br i1 %102, label %67, label %103

103:                                              ; preds = %83, %98, %52, %77
  %104 = phi %"class.re2::Prefilter"* [ %80, %77 ], [ %2, %52 ], [ %94, %98 ], [ %87, %83 ]
  %105 = ptrtoint %"class.re2::Prefilter"* %104 to i64
  %106 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %53, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %104, i64 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp sgt i32 %107, %109
  %111 = select i1 %110, i64 %105, i64 %54
  %112 = select i1 %110, i64 %54, i64 %105
  %113 = inttoptr i64 %111 to %"class.re2::Prefilter"*
  %114 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  switch i32 %115, label %131 [
    i32 0, label %116
    i32 1, label %118
  ]

116:                                              ; preds = %103
  %117 = icmp eq i32 %0, 3
  br i1 %117, label %120, label %126

118:                                              ; preds = %103
  %119 = icmp eq i32 %0, 4
  br i1 %119, label %120, label %126

120:                                              ; preds = %118, %116
  %121 = icmp eq i64 %111, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %113) #13
  %123 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %122, %120
  %125 = inttoptr i64 %112 to %"class.re2::Prefilter"*
  br label %474

126:                                              ; preds = %116, %118
  %127 = icmp eq i64 %112, 0
  br i1 %127, label %474, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %112 to %"class.re2::Prefilter"*
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %129) #13
  %130 = inttoptr i64 %112 to i8*
  tail call void @_ZdlPv(i8* %130) #14
  br label %474

131:                                              ; preds = %103
  %132 = icmp eq i32 %115, %0
  %133 = inttoptr i64 %112 to %"class.re2::Prefilter"*
  br i1 %132, label %134, label %245

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %133, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, %0
  br i1 %137, label %138, label %245

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %133, i64 0, i32 2
  %140 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %140, i64 0, i32 0, i32 1
  %142 = bitcast %"class.re2::Prefilter"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::vector"* %140 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %143, %145
  br i1 %146, label %151, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %113, i64 0, i32 2
  br label %155

149:                                              ; preds = %232
  %150 = bitcast %"class.re2::Prefilter"*** %235 to i64*
  br label %151

151:                                              ; preds = %149, %138
  %152 = phi i64* [ %142, %138 ], [ %150, %149 ]
  %153 = phi i64 [ %143, %138 ], [ %239, %149 ]
  store i64 %153, i64* %152, align 8
  %154 = icmp eq i64 %112, 0
  br i1 %154, label %474, label %243

155:                                              ; preds = %147, %232
  %156 = phi %"class.std::__1::vector"* [ %140, %147 ], [ %234, %232 ]
  %157 = phi i64 [ 0, %147 ], [ %233, %232 ]
  %158 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %156, i64 0, i32 0, i32 0
  %159 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %158, align 8
  %160 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %159, i64 %157
  %161 = bitcast %"class.re2::Prefilter"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %148, align 8
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %163, i64 0, i32 0, i32 1
  %165 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %163, i64 0, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %166, align 8
  %168 = icmp eq %"class.re2::Prefilter"** %165, %167
  %169 = ptrtoint %"class.re2::Prefilter"** %167 to i64
  br i1 %168, label %175, label %170

170:                                              ; preds = %155
  %171 = bitcast %"class.re2::Prefilter"** %165 to i64*
  store i64 %162, i64* %171, align 8
  %172 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %165, i64 1
  %173 = ptrtoint %"class.re2::Prefilter"** %172 to i64
  %174 = bitcast %"class.re2::Prefilter"*** %164 to i64*
  store i64 %173, i64* %174, align 8
  br label %232

175:                                              ; preds = %155
  %176 = ptrtoint %"class.re2::Prefilter"** %165 to i64
  %177 = bitcast %"class.re2::Prefilter"*** %164 to i64*
  %178 = bitcast %"class.std::__1::vector"* %163 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %176, %179
  %181 = ashr exact i64 %180, 3
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 2305843009213693951
  br i1 %183, label %184, label %186

184:                                              ; preds = %175
  %185 = bitcast %"class.std::__1::vector"* %163 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %185) #15
  unreachable

186:                                              ; preds = %175
  %187 = bitcast %"class.re2::Prefilter"*** %166 to i64*
  %188 = sub i64 %169, %179
  %189 = ashr exact i64 %188, 3
  %190 = icmp ult i64 %189, 1152921504606846975
  br i1 %190, label %191, label %199

191:                                              ; preds = %186
  %192 = ashr exact i64 %188, 2
  %193 = icmp ult i64 %192, %182
  %194 = select i1 %193, i64 %182, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 2305843009213693951
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  tail call void @abort() #15
  unreachable

199:                                              ; preds = %196, %186
  %200 = phi i64 [ %194, %196 ], [ 2305843009213693951, %186 ]
  %201 = shl i64 %200, 3
  %202 = tail call i8* @_Znwm(i64 %201) #14
  %203 = bitcast i8* %202 to %"class.re2::Prefilter"**
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi %"class.re2::Prefilter"** [ %203, %199 ], [ null, %191 ]
  %207 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %206, i64 %181
  %208 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %206, i64 %205
  %209 = ptrtoint %"class.re2::Prefilter"** %208 to i64
  %210 = bitcast %"class.re2::Prefilter"** %207 to i64*
  store i64 %162, i64* %210, align 8
  %211 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %207, i64 1
  %212 = ptrtoint %"class.re2::Prefilter"** %211 to i64
  %213 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %163, i64 0, i32 0, i32 0
  %214 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %213, align 8
  %215 = load i64, i64* %177, align 8
  %216 = ptrtoint %"class.re2::Prefilter"** %214 to i64
  %217 = sub i64 %215, %216
  %218 = ashr exact i64 %217, 3
  %219 = sub nsw i64 0, %218
  %220 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %207, i64 %219
  %221 = ptrtoint %"class.re2::Prefilter"** %220 to i64
  %222 = icmp sgt i64 %217, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %204
  %224 = bitcast %"class.re2::Prefilter"** %220 to i8*
  %225 = bitcast %"class.re2::Prefilter"** %214 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %225, i64 %217, i1 false) #13
  %226 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %213, align 8
  br label %227

227:                                              ; preds = %223, %204
  %228 = phi %"class.re2::Prefilter"** [ %214, %204 ], [ %226, %223 ]
  store i64 %221, i64* %178, align 8
  store i64 %212, i64* %177, align 8
  store i64 %209, i64* %187, align 8
  %229 = icmp eq %"class.re2::Prefilter"** %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %227
  %231 = bitcast %"class.re2::Prefilter"** %228 to i8*
  tail call void @_ZdlPv(i8* %231) #14
  br label %232

232:                                              ; preds = %170, %227, %230
  %233 = add nuw i64 %157, 1
  %234 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %139, align 8
  %235 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %234, i64 0, i32 0, i32 1
  %236 = bitcast %"class.re2::Prefilter"*** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.std::__1::vector"* %234 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = sub i64 %237, %239
  %241 = ashr exact i64 %240, 3
  %242 = icmp ult i64 %233, %241
  br i1 %242, label %155, label %149

243:                                              ; preds = %151
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %133) #13
  %244 = inttoptr i64 %112 to i8*
  tail call void @_ZdlPv(i8* %244) #14
  br label %474

245:                                              ; preds = %131, %134
  %246 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %133, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, %0
  %249 = select i1 %248, i64 %112, i64 %111
  %250 = select i1 %248, i64 %111, i64 %112
  %251 = inttoptr i64 %249 to %"class.re2::Prefilter"*
  %252 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %251, i64 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, %0
  br i1 %254, label %255, label %326

255:                                              ; preds = %245
  %256 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %251, i64 0, i32 2
  %257 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 1
  %259 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %260, align 8
  %262 = icmp eq %"class.re2::Prefilter"** %259, %261
  %263 = ptrtoint %"class.re2::Prefilter"** %261 to i64
  br i1 %262, label %269, label %264

264:                                              ; preds = %255
  %265 = bitcast %"class.re2::Prefilter"** %259 to i64*
  store i64 %250, i64* %265, align 8
  %266 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %259, i64 1
  %267 = ptrtoint %"class.re2::Prefilter"** %266 to i64
  %268 = bitcast %"class.re2::Prefilter"*** %258 to i64*
  store i64 %267, i64* %268, align 8
  br label %474

269:                                              ; preds = %255
  %270 = ptrtoint %"class.re2::Prefilter"** %259 to i64
  %271 = bitcast %"class.re2::Prefilter"*** %258 to i64*
  %272 = bitcast %"class.std::__1::vector"* %257 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = sub i64 %270, %273
  %275 = ashr exact i64 %274, 3
  %276 = add nsw i64 %275, 1
  %277 = icmp ugt i64 %276, 2305843009213693951
  br i1 %277, label %278, label %280

278:                                              ; preds = %269
  %279 = bitcast %"class.std::__1::vector"* %257 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %279) #15
  unreachable

280:                                              ; preds = %269
  %281 = bitcast %"class.re2::Prefilter"*** %260 to i64*
  %282 = sub i64 %263, %273
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %283, 1152921504606846975
  br i1 %284, label %285, label %293

285:                                              ; preds = %280
  %286 = ashr exact i64 %282, 2
  %287 = icmp ult i64 %286, %276
  %288 = select i1 %287, i64 %276, i64 %286
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %298, label %290

290:                                              ; preds = %285
  %291 = icmp ugt i64 %288, 2305843009213693951
  br i1 %291, label %292, label %293

292:                                              ; preds = %290
  tail call void @abort() #15
  unreachable

293:                                              ; preds = %290, %280
  %294 = phi i64 [ %288, %290 ], [ 2305843009213693951, %280 ]
  %295 = shl i64 %294, 3
  %296 = tail call i8* @_Znwm(i64 %295) #14
  %297 = bitcast i8* %296 to %"class.re2::Prefilter"**
  br label %298

298:                                              ; preds = %293, %285
  %299 = phi i64 [ %294, %293 ], [ 0, %285 ]
  %300 = phi %"class.re2::Prefilter"** [ %297, %293 ], [ null, %285 ]
  %301 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %300, i64 %275
  %302 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %300, i64 %299
  %303 = ptrtoint %"class.re2::Prefilter"** %302 to i64
  %304 = bitcast %"class.re2::Prefilter"** %301 to i64*
  store i64 %250, i64* %304, align 8
  %305 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %301, i64 1
  %306 = ptrtoint %"class.re2::Prefilter"** %305 to i64
  %307 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %257, i64 0, i32 0, i32 0
  %308 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %307, align 8
  %309 = load i64, i64* %271, align 8
  %310 = ptrtoint %"class.re2::Prefilter"** %308 to i64
  %311 = sub i64 %309, %310
  %312 = ashr exact i64 %311, 3
  %313 = sub nsw i64 0, %312
  %314 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %301, i64 %313
  %315 = ptrtoint %"class.re2::Prefilter"** %314 to i64
  %316 = icmp sgt i64 %311, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %298
  %318 = bitcast %"class.re2::Prefilter"** %314 to i8*
  %319 = bitcast %"class.re2::Prefilter"** %308 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 %311, i1 false) #13
  %320 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %307, align 8
  br label %321

321:                                              ; preds = %317, %298
  %322 = phi %"class.re2::Prefilter"** [ %308, %298 ], [ %320, %317 ]
  store i64 %315, i64* %272, align 8
  store i64 %306, i64* %271, align 8
  store i64 %303, i64* %281, align 8
  %323 = icmp eq %"class.re2::Prefilter"** %322, null
  br i1 %323, label %474, label %324

324:                                              ; preds = %321
  %325 = bitcast %"class.re2::Prefilter"** %322 to i8*
  tail call void @_ZdlPv(i8* %325) #14
  br label %474

326:                                              ; preds = %245
  %327 = tail call i8* @_Znwm(i64 48) #14
  %328 = bitcast i8* %327 to %"class.re2::Prefilter"*
  %329 = getelementptr inbounds i8, i8* %327, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %329, i8 0, i64 24, i1 false) #13
  %330 = bitcast i8* %327 to i32*
  store i32 %0, i32* %330, align 8
  %331 = getelementptr inbounds i8, i8* %327, i64 8
  %332 = bitcast i8* %331 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %332, align 8
  %333 = add i32 %0, -3
  %334 = icmp ult i32 %333, 2
  br i1 %334, label %335, label %339

335:                                              ; preds = %326
  %336 = tail call i8* @_Znwm(i64 24) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 0, i64 24, i1 false) #13
  %337 = bitcast i8* %331 to i8**
  store i8* %336, i8** %337, align 8
  %338 = bitcast i8* %336 to %"class.std::__1::vector"*
  br label %339

339:                                              ; preds = %326, %335
  %340 = phi %"class.std::__1::vector"* [ null, %326 ], [ %338, %335 ]
  %341 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %340, i64 0, i32 0, i32 1
  %342 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %340, i64 0, i32 0, i32 2, i32 0, i32 0
  %344 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %343, align 8
  %345 = icmp eq %"class.re2::Prefilter"** %342, %344
  %346 = ptrtoint %"class.re2::Prefilter"** %344 to i64
  br i1 %345, label %352, label %347

347:                                              ; preds = %339
  %348 = bitcast %"class.re2::Prefilter"** %342 to i64*
  store i64 %249, i64* %348, align 8
  %349 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %342, i64 1
  %350 = ptrtoint %"class.re2::Prefilter"** %349 to i64
  %351 = bitcast %"class.re2::Prefilter"*** %341 to i64*
  store i64 %350, i64* %351, align 8
  br label %410

352:                                              ; preds = %339
  %353 = ptrtoint %"class.re2::Prefilter"** %342 to i64
  %354 = bitcast %"class.re2::Prefilter"*** %341 to i64*
  %355 = bitcast %"class.std::__1::vector"* %340 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = sub i64 %353, %356
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = icmp ugt i64 %359, 2305843009213693951
  br i1 %360, label %361, label %363

361:                                              ; preds = %352
  %362 = bitcast %"class.std::__1::vector"* %340 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %362) #15
  unreachable

363:                                              ; preds = %352
  %364 = bitcast %"class.re2::Prefilter"*** %343 to i64*
  %365 = sub i64 %346, %356
  %366 = ashr exact i64 %365, 3
  %367 = icmp ult i64 %366, 1152921504606846975
  br i1 %367, label %368, label %376

368:                                              ; preds = %363
  %369 = ashr exact i64 %365, 2
  %370 = icmp ult i64 %369, %359
  %371 = select i1 %370, i64 %359, i64 %369
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %381, label %373

373:                                              ; preds = %368
  %374 = icmp ugt i64 %371, 2305843009213693951
  br i1 %374, label %375, label %376

375:                                              ; preds = %373
  tail call void @abort() #15
  unreachable

376:                                              ; preds = %373, %363
  %377 = phi i64 [ %371, %373 ], [ 2305843009213693951, %363 ]
  %378 = shl i64 %377, 3
  %379 = tail call i8* @_Znwm(i64 %378) #14
  %380 = bitcast i8* %379 to %"class.re2::Prefilter"**
  br label %381

381:                                              ; preds = %376, %368
  %382 = phi i64 [ %377, %376 ], [ 0, %368 ]
  %383 = phi %"class.re2::Prefilter"** [ %380, %376 ], [ null, %368 ]
  %384 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %383, i64 %358
  %385 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %383, i64 %382
  %386 = ptrtoint %"class.re2::Prefilter"** %385 to i64
  %387 = bitcast %"class.re2::Prefilter"** %384 to i64*
  store i64 %249, i64* %387, align 8
  %388 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %384, i64 1
  %389 = ptrtoint %"class.re2::Prefilter"** %388 to i64
  %390 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %340, i64 0, i32 0, i32 0
  %391 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %390, align 8
  %392 = load i64, i64* %354, align 8
  %393 = ptrtoint %"class.re2::Prefilter"** %391 to i64
  %394 = sub i64 %392, %393
  %395 = ashr exact i64 %394, 3
  %396 = sub nsw i64 0, %395
  %397 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %384, i64 %396
  %398 = ptrtoint %"class.re2::Prefilter"** %397 to i64
  %399 = icmp sgt i64 %394, 0
  br i1 %399, label %400, label %404

400:                                              ; preds = %381
  %401 = bitcast %"class.re2::Prefilter"** %397 to i8*
  %402 = bitcast %"class.re2::Prefilter"** %391 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* align 8 %402, i64 %394, i1 false) #13
  %403 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %390, align 8
  br label %404

404:                                              ; preds = %400, %381
  %405 = phi %"class.re2::Prefilter"** [ %391, %381 ], [ %403, %400 ]
  store i64 %398, i64* %355, align 8
  store i64 %389, i64* %354, align 8
  store i64 %386, i64* %364, align 8
  %406 = icmp eq %"class.re2::Prefilter"** %405, null
  br i1 %406, label %410, label %407

407:                                              ; preds = %404
  %408 = bitcast %"class.re2::Prefilter"** %405 to i8*
  tail call void @_ZdlPv(i8* %408) #14
  %409 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %341, align 8
  br label %410

410:                                              ; preds = %347, %404, %407
  %411 = phi %"class.re2::Prefilter"** [ %349, %347 ], [ %388, %404 ], [ %409, %407 ]
  %412 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %343, align 8
  %413 = icmp eq %"class.re2::Prefilter"** %411, %412
  br i1 %413, label %419, label %414

414:                                              ; preds = %410
  %415 = bitcast %"class.re2::Prefilter"** %411 to i64*
  store i64 %250, i64* %415, align 8
  %416 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %411, i64 1
  %417 = ptrtoint %"class.re2::Prefilter"** %416 to i64
  %418 = bitcast %"class.re2::Prefilter"*** %341 to i64*
  store i64 %417, i64* %418, align 8
  br label %474

419:                                              ; preds = %410
  %420 = ptrtoint %"class.re2::Prefilter"** %412 to i64
  %421 = bitcast %"class.re2::Prefilter"*** %341 to i64*
  %422 = bitcast %"class.std::__1::vector"* %340 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = sub i64 %420, %423
  %425 = ashr exact i64 %424, 3
  %426 = add nsw i64 %425, 1
  %427 = icmp ugt i64 %426, 2305843009213693951
  br i1 %427, label %428, label %430

428:                                              ; preds = %419
  %429 = bitcast %"class.std::__1::vector"* %340 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %429) #15
  unreachable

430:                                              ; preds = %419
  %431 = bitcast %"class.re2::Prefilter"*** %343 to i64*
  %432 = icmp ult i64 %425, 1152921504606846975
  br i1 %432, label %433, label %441

433:                                              ; preds = %430
  %434 = ashr exact i64 %424, 2
  %435 = icmp ult i64 %434, %426
  %436 = select i1 %435, i64 %426, i64 %434
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %446, label %438

438:                                              ; preds = %433
  %439 = icmp ugt i64 %436, 2305843009213693951
  br i1 %439, label %440, label %441

440:                                              ; preds = %438
  tail call void @abort() #15
  unreachable

441:                                              ; preds = %438, %430
  %442 = phi i64 [ %436, %438 ], [ 2305843009213693951, %430 ]
  %443 = shl i64 %442, 3
  %444 = tail call i8* @_Znwm(i64 %443) #14
  %445 = bitcast i8* %444 to %"class.re2::Prefilter"**
  br label %446

446:                                              ; preds = %441, %433
  %447 = phi i64 [ %442, %441 ], [ 0, %433 ]
  %448 = phi %"class.re2::Prefilter"** [ %445, %441 ], [ null, %433 ]
  %449 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %448, i64 %425
  %450 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %448, i64 %447
  %451 = ptrtoint %"class.re2::Prefilter"** %450 to i64
  %452 = bitcast %"class.re2::Prefilter"** %449 to i64*
  store i64 %250, i64* %452, align 8
  %453 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %449, i64 1
  %454 = ptrtoint %"class.re2::Prefilter"** %453 to i64
  %455 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %340, i64 0, i32 0, i32 0
  %456 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %455, align 8
  %457 = load i64, i64* %421, align 8
  %458 = ptrtoint %"class.re2::Prefilter"** %456 to i64
  %459 = sub i64 %457, %458
  %460 = ashr exact i64 %459, 3
  %461 = sub nsw i64 0, %460
  %462 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %449, i64 %461
  %463 = ptrtoint %"class.re2::Prefilter"** %462 to i64
  %464 = icmp sgt i64 %459, 0
  br i1 %464, label %465, label %469

465:                                              ; preds = %446
  %466 = bitcast %"class.re2::Prefilter"** %462 to i8*
  %467 = bitcast %"class.re2::Prefilter"** %456 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %466, i8* align 8 %467, i64 %459, i1 false) #13
  %468 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %455, align 8
  br label %469

469:                                              ; preds = %465, %446
  %470 = phi %"class.re2::Prefilter"** [ %456, %446 ], [ %468, %465 ]
  store i64 %463, i64* %422, align 8
  store i64 %454, i64* %421, align 8
  store i64 %451, i64* %431, align 8
  %471 = icmp eq %"class.re2::Prefilter"** %470, null
  br i1 %471, label %474, label %472

472:                                              ; preds = %469
  %473 = bitcast %"class.re2::Prefilter"** %470 to i8*
  tail call void @_ZdlPv(i8* %473) #14
  br label %474

474:                                              ; preds = %472, %469, %414, %324, %321, %264, %151, %243, %126, %128, %124
  %475 = phi %"class.re2::Prefilter"* [ %125, %124 ], [ %113, %128 ], [ %113, %126 ], [ %113, %243 ], [ %113, %151 ], [ %251, %264 ], [ %251, %321 ], [ %251, %324 ], [ %328, %414 ], [ %328, %469 ], [ %328, %472 ]
  ret %"class.re2::Prefilter"* %475
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter3AndEPS0_S1_(%"class.re2::Prefilter"*, %"class.re2::Prefilter"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32 3, %"class.re2::Prefilter"* %0, %"class.re2::Prefilter"* %1)
  ret %"class.re2::Prefilter"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter2OrEPS0_S1_(%"class.re2::Prefilter"*, %"class.re2::Prefilter"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32 4, %"class.re2::Prefilter"* %0, %"class.re2::Prefilter"* %1)
  ret %"class.re2::Prefilter"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #14
  %3 = bitcast i8* %2 to %"class.re2::Prefilter"*
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = bitcast i8* %2 to i32*
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::set"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = inttoptr i64 %10 to %"class.std::__1::__tree_end_node"*
  %13 = icmp eq %"class.std::__1::__tree_end_node"* %11, %12
  br i1 %13, label %235, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %228, %14
  %18 = phi i64 [ %10, %14 ], [ %230, %228 ]
  %19 = inttoptr i64 %18 to %"class.std::__1::__tree_node"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %30

28:                                               ; preds = %17
  %29 = zext i8 %23 to i64
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi i64 [ %27, %25 ], [ %29, %28 ]
  %32 = icmp eq i64 %31, 0
  %33 = inttoptr i64 %18 to %"class.std::__1::__tree_node_base"*
  br i1 %32, label %202, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %33
  br i1 %43, label %60, label %51

44:                                               ; preds = %34, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %36, %34 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %44

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 0
  br label %60

51:                                               ; preds = %38, %51
  %52 = phi %"class.std::__1::__tree_end_node"** [ %55, %51 ], [ %39, %38 ]
  %53 = bitcast %"class.std::__1::__tree_end_node"** %52 to %"class.std::__1::__tree_node_base"**
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 2
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %54
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %49, %38
  %61 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %40, %38 ], [ %56, %51 ]
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %11
  br i1 %62, label %202, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %67

67:                                               ; preds = %171, %63
  %68 = phi %"class.std::__1::__tree_end_node"* [ %61, %63 ], [ %172, %171 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 4
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 5
  %78 = bitcast %"class.std::__1::__tree_end_node"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  br label %83

80:                                               ; preds = %67
  %81 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8*
  %82 = zext i8 %72 to i64
  br label %83

83:                                               ; preds = %80, %74
  %84 = phi i8* [ %76, %74 ], [ %81, %80 ]
  %85 = phi i64 [ %79, %74 ], [ %82, %80 ]
  %86 = load i8, i8* %22, align 1
  %87 = icmp slt i8 %86, 0
  %88 = load i8*, i8** %64, align 8
  %89 = load i64, i64* %65, align 8
  %90 = zext i8 %86 to i64
  %91 = select i1 %87, i8* %88, i8* %66
  %92 = select i1 %87, i64 %89, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %125, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds i8, i8* %84, i64 %85
  %96 = ptrtoint i8* %95 to i64
  %97 = ptrtoint i8* %84 to i64
  %98 = icmp slt i64 %85, %92
  br i1 %98, label %174, label %99

99:                                               ; preds = %94
  %100 = load i8, i8* %91, align 1
  %101 = zext i8 %100 to i32
  br label %102

102:                                              ; preds = %114, %99
  %103 = phi i64 [ %117, %114 ], [ %85, %99 ]
  %104 = phi i8* [ %115, %114 ], [ %84, %99 ]
  %105 = sub nsw i64 %103, %92
  %106 = add nsw i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %174, label %108

108:                                              ; preds = %102
  %109 = tail call i8* @memchr(i8* %104, i32 %101, i64 %106) #13
  %110 = icmp eq i8* %109, null
  br i1 %110, label %174, label %111

111:                                              ; preds = %108
  %112 = tail call i32 @bcmp(i8* nonnull %109, i8* %91, i64 %92) #13
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds i8, i8* %109, i64 1
  %116 = ptrtoint i8* %115 to i64
  %117 = sub i64 %96, %116
  %118 = icmp slt i64 %117, %92
  br i1 %118, label %174, label %102

119:                                              ; preds = %111
  %120 = ptrtoint i8* %109 to i64
  %121 = icmp eq i8* %109, %95
  %122 = sub i64 %120, %97
  %123 = icmp eq i64 %122, -1
  %124 = or i1 %121, %123
  br i1 %124, label %174, label %125

125:                                              ; preds = %119, %83
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 1, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  %130 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 2
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.std::__1::__tree_end_node"**
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %130
  br i1 %136, label %153, label %144

137:                                              ; preds = %125, %137
  %138 = phi %"class.std::__1::__tree_node_base"* [ %140, %137 ], [ %127, %125 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %137

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0
  br label %153

144:                                              ; preds = %129, %144
  %145 = phi %"class.std::__1::__tree_end_node"** [ %148, %144 ], [ %132, %129 ]
  %146 = bitcast %"class.std::__1::__tree_end_node"** %145 to %"class.std::__1::__tree_node_base"**
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 2
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, %147
  br i1 %152, label %153, label %144

153:                                              ; preds = %144, %142, %129
  %154 = phi %"class.std::__1::__tree_end_node"* [ %143, %142 ], [ %133, %129 ], [ %149, %144 ]
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %156 = icmp eq %"class.std::__1::__tree_end_node"* %155, %68
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = ptrtoint %"class.std::__1::__tree_end_node"* %154 to i64
  store i64 %158, i64* %9, align 8
  br label %159

159:                                              ; preds = %157, %153
  %160 = load i64, i64* %15, align 8
  %161 = add i64 %160, -1
  store i64 %161, i64* %15, align 8
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %163 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %162, %"class.std::__1::__tree_node_base"* %163) #13
  %164 = load i8, i8* %71, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8**
  %168 = load i8*, i8** %167, align 8
  tail call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %166, %159
  %170 = bitcast %"class.std::__1::__tree_end_node"* %68 to i8*
  tail call void @_ZdlPv(i8* %170) #14
  br label %171

171:                                              ; preds = %193, %191, %178, %169
  %172 = phi %"class.std::__1::__tree_end_node"* [ %154, %169 ], [ %192, %191 ], [ %182, %178 ], [ %198, %193 ]
  %173 = icmp eq %"class.std::__1::__tree_end_node"* %172, %11
  br i1 %173, label %202, label %67

174:                                              ; preds = %114, %108, %102, %119, %94
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 1, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node_base"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 2
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_end_node"**
  %182 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, %179
  br i1 %185, label %171, label %193

186:                                              ; preds = %174, %186
  %187 = phi %"class.std::__1::__tree_node_base"* [ %189, %186 ], [ %176, %174 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %186

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0
  br label %171

193:                                              ; preds = %178, %193
  %194 = phi %"class.std::__1::__tree_end_node"** [ %197, %193 ], [ %181, %178 ]
  %195 = bitcast %"class.std::__1::__tree_end_node"** %194 to %"class.std::__1::__tree_node_base"**
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %196, i64 0, i32 2
  %198 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 0, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, %196
  br i1 %201, label %171, label %193

202:                                              ; preds = %171, %60, %30
  %203 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 1
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 2
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, %33
  br i1 %211, label %228, label %219

212:                                              ; preds = %202, %212
  %213 = phi %"class.std::__1::__tree_node_base"* [ %215, %212 ], [ %204, %202 ]
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %212

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 0
  br label %228

219:                                              ; preds = %206, %219
  %220 = phi %"class.std::__1::__tree_end_node"** [ %223, %219 ], [ %207, %206 ]
  %221 = bitcast %"class.std::__1::__tree_end_node"** %220 to %"class.std::__1::__tree_node_base"**
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %224 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %224, i64 0, i32 0
  %226 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %225, align 8
  %227 = icmp eq %"class.std::__1::__tree_node_base"* %226, %222
  br i1 %227, label %228, label %219

228:                                              ; preds = %219, %217, %206
  %229 = phi %"class.std::__1::__tree_end_node"* [ %218, %217 ], [ %208, %206 ], [ %224, %219 ]
  %230 = ptrtoint %"class.std::__1::__tree_end_node"* %229 to i64
  %231 = icmp eq %"class.std::__1::__tree_end_node"* %11, %229
  br i1 %231, label %232, label %17

232:                                              ; preds = %228
  %233 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %234 = icmp eq %"class.std::__1::__tree_end_node"* %233, %11
  br i1 %234, label %235, label %237

235:                                              ; preds = %292, %1, %232
  %236 = phi %"class.re2::Prefilter"* [ %3, %232 ], [ %3, %1 ], [ %264, %292 ]
  ret %"class.re2::Prefilter"* %236

237:                                              ; preds = %232, %292
  %238 = phi %"class.re2::Prefilter"* [ %264, %292 ], [ %3, %232 ]
  %239 = phi %"class.std::__1::__tree_end_node"* [ %293, %292 ], [ %233, %232 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 4
  %241 = tail call i8* @_Znwm(i64 48) #14
  %242 = bitcast i8* %241 to %"class.re2::Prefilter"*
  %243 = getelementptr inbounds i8, i8* %241, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #13
  %244 = bitcast i8* %241 to i32*
  store i32 2, i32* %244, align 8
  %245 = getelementptr inbounds i8, i8* %241, i64 8
  %246 = bitcast i8* %245 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %246, align 8
  %247 = bitcast i8* %243 to %"class.std::__1::basic_string"*
  %248 = bitcast %"class.std::__1::__tree_end_node"* %240 to i8*
  %249 = icmp eq i8* %243, %248
  br i1 %249, label %263, label %250

250:                                              ; preds = %237
  %251 = bitcast %"class.std::__1::__tree_end_node"* %240 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %256, label %255

255:                                              ; preds = %250
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %248, i64 24, i1 false) #13
  br label %263

256:                                              ; preds = %250
  %257 = bitcast %"class.std::__1::__tree_end_node"* %240 to i8**
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 5
  %260 = bitcast %"class.std::__1::__tree_end_node"* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %247, i8* %258, i64 %261) #13
  br label %263

263:                                              ; preds = %237, %255, %256
  %264 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32 4, %"class.re2::Prefilter"* %238, %"class.re2::Prefilter"* nonnull %242) #13
  %265 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 1, i32 0
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  %267 = icmp eq %"class.std::__1::__tree_node_base"* %266, null
  br i1 %267, label %268, label %276

268:                                              ; preds = %263
  %269 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_node_base"*
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 2
  %271 = bitcast %"class.std::__1::__tree_end_node"* %270 to %"class.std::__1::__tree_end_node"**
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %271, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, %269
  br i1 %275, label %292, label %283

276:                                              ; preds = %263, %276
  %277 = phi %"class.std::__1::__tree_node_base"* [ %279, %276 ], [ %266, %263 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %281, label %276

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  br label %292

283:                                              ; preds = %268, %283
  %284 = phi %"class.std::__1::__tree_end_node"** [ %287, %283 ], [ %271, %268 ]
  %285 = bitcast %"class.std::__1::__tree_end_node"** %284 to %"class.std::__1::__tree_node_base"**
  %286 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %285, align 8
  %287 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %286, i64 0, i32 2
  %288 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %287, align 8
  %289 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %288, i64 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, %286
  br i1 %291, label %292, label %283

292:                                              ; preds = %283, %268, %281
  %293 = phi %"class.std::__1::__tree_end_node"* [ %282, %281 ], [ %272, %268 ], [ %288, %283 ]
  %294 = icmp eq %"class.std::__1::__tree_end_node"* %293, %11
  br i1 %294, label %235, label %237
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter"* @_ZN3re29Prefilter10FromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #14
  %3 = bitcast i8* %2 to %"class.re2::Prefilter"*
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = bitcast i8* %2 to i32*
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %7, align 8
  %8 = bitcast i8* %4 to %"class.std::__1::basic_string"*
  %9 = icmp eq %"class.std::__1::basic_string"* %8, %0
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %16, i64 24, i1 false) #13
  br label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %19, i64 %21) #13
  br label %23

23:                                               ; preds = %1, %15, %17
  ret %"class.re2::Prefilter"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29Prefilter4InfoC2Ev(%"class.re2::Prefilter::Info"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29Prefilter4InfoD2Ev(%"class.re2::Prefilter::Info"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %3 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %2, align 8
  %4 = icmp eq %"class.re2::Prefilter"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %3) #13
  %6 = bitcast %"class.re2::Prefilter"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %8, %"class.std::__1::__tree_node"* %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter4Info9TakeMatchEv(%"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %7 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %6, align 8
  br label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0
  %10 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %9)
  %11 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* %10, %"class.re2::Prefilter"** %11, align 8
  store i8 0, i8* %2, align 8
  br label %12

12:                                               ; preds = %5, %8
  %13 = phi %"class.re2::Prefilter"* [ %7, %5 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %14, align 8
  ret %"class.re2::Prefilter"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re29Prefilter4Info8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  br i1 %11, label %74, label %12

12:                                               ; preds = %6, %62
  %13 = phi i32 [ %15, %62 ], [ 0, %6 ]
  %14 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %9, %6 ]
  %15 = add nuw nsw i32 %13, 1
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #13
  br label %19

19:                                               ; preds = %12, %17
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 4
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 5
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  %31 = zext i8 %23 to i64
  %32 = select i1 %24, i8* %26, i8* %30
  %33 = select i1 %24, i64 %29, i64 %31
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %32, i64 %33) #13
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %19
  %39 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %62, label %53

46:                                               ; preds = %19, %46
  %47 = phi %"class.std::__1::__tree_node_base"* [ %49, %46 ], [ %36, %19 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0
  br label %62

53:                                               ; preds = %38, %53
  %54 = phi %"class.std::__1::__tree_end_node"** [ %57, %53 ], [ %41, %38 ]
  %55 = bitcast %"class.std::__1::__tree_end_node"** %54 to %"class.std::__1::__tree_node_base"**
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %56
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %38, %51
  %63 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %42, %38 ], [ %58, %53 ]
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %10
  br i1 %64, label %74, label %12

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  %67 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %66, align 8
  %68 = icmp eq %"class.re2::Prefilter"* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  tail call void @_ZNK3re29Prefilter11DebugStringEv(%"class.std::__1::basic_string"* sret %0, %"class.re2::Prefilter"* nonnull %67)
  br label %74

70:                                               ; preds = %65
  %71 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 0, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %73, align 8
  br label %74

74:                                               ; preds = %62, %6, %70, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3re29Prefilter11DebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.re2::Prefilter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.LogMessage, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %8 [
    i32 1, label %50
    i32 2, label %55
    i32 0, label %69
    i32 3, label %73
    i32 4, label %134
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %9) #13
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %10 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8
  %26 = load i8*, i8** %18, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  %32 = bitcast %"class.std::__1::basic_stringbuf"* %13 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %32) #13
  %33 = getelementptr inbounds i8, i8* %30, i64 136
  %34 = bitcast i8* %33 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 144
  %36 = bitcast i8* %35 to i32*
  store i32 -1, i32* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 1
  %39 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %3, i64 0, i32 1, i32 1, i32 3
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %39, align 8
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %10 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #13
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %43, i32 667) #13
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #13
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i64 34) #13
  %47 = load i32, i32* %6, align 8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %46, i32 %47) #13
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %9) #13
  %49 = load i32, i32* %6, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %49) #13
  br label %198

50:                                               ; preds = %2
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 12, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 12, i1 false) #13
  %54 = getelementptr inbounds i8, i8* %53, i64 12
  store i8 0, i8* %54, align 4
  br label %198

55:                                               ; preds = %2
  %56 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 3
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #13
  br label %198

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %66, i64 %68) #13
  br label %198

69:                                               ; preds = %2
  %70 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 0, i8* %71, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %72, align 8
  br label %198

73:                                               ; preds = %2
  %74 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 -86, i64 24, i1 false)
  store i8 0, i8* %75, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %77, align 8
  %78 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 2
  %79 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %79, i64 0, i32 0, i32 1
  %81 = bitcast %"class.re2::Prefilter"*** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector"* %79 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %82, %84
  br i1 %85, label %198, label %86

86:                                               ; preds = %73
  %87 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds i8, i8* %87, i64 5
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %93

93:                                               ; preds = %86, %123
  %94 = phi %"class.std::__1::vector"* [ %79, %86 ], [ %125, %123 ]
  %95 = phi i64 [ 0, %86 ], [ %124, %123 ]
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #13
  %99 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %78, align 8
  br label %100

100:                                              ; preds = %93, %97
  %101 = phi %"class.std::__1::vector"* [ %94, %93 ], [ %99, %97 ]
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %102, align 8
  %104 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %103, i64 %95
  %105 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %104, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #13
  %106 = icmp eq %"class.re2::Prefilter"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  call void @_ZNK3re29Prefilter11DebugStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.re2::Prefilter"* nonnull %105)
  %108 = load i8, i8* %89, align 1
  br label %110

109:                                              ; preds = %100
  store i8 5, i8* %89, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #13
  store i8 0, i8* %90, align 1
  br label %110

110:                                              ; preds = %109, %107
  %111 = phi i8 [ 5, %109 ], [ %108, %107 ]
  %112 = icmp slt i8 %111, 0
  %113 = load i8*, i8** %91, align 8
  %114 = load i64, i64* %92, align 8
  %115 = zext i8 %111 to i64
  %116 = select i1 %112, i8* %113, i8* %87
  %117 = select i1 %112, i64 %114, i64 %115
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %116, i64 %117) #13
  %119 = load i8, i8* %89, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %110
  %122 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %110, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #13
  %124 = add nuw i64 %95, 1
  %125 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %78, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %125, i64 0, i32 0, i32 1
  %127 = bitcast %"class.re2::Prefilter"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector"* %125 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %128, %130
  %132 = ashr exact i64 %131, 3
  %133 = icmp ult i64 %124, %132
  br i1 %133, label %93, label %198

134:                                              ; preds = %2
  %135 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 -86, i64 24, i1 false)
  store i8 1, i8* %136, align 1
  %138 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 40, i8* %138, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 1
  store i8 0, i8* %139, align 1
  %140 = getelementptr inbounds %"class.re2::Prefilter", %"class.re2::Prefilter"* %1, i64 0, i32 2
  %141 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 0, i32 0, i32 1
  %143 = bitcast %"class.re2::Prefilter"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector"* %141 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %144, %146
  br i1 %147, label %155, label %148

148:                                              ; preds = %134
  %149 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %150 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = getelementptr inbounds i8, i8* %149, i64 5
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %157

155:                                              ; preds = %187, %134
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #13
  br label %198

157:                                              ; preds = %148, %187
  %158 = phi %"class.std::__1::vector"* [ %141, %148 ], [ %189, %187 ]
  %159 = phi i64 [ 0, %148 ], [ %188, %187 ]
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #13
  %163 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %140, align 8
  br label %164

164:                                              ; preds = %157, %161
  %165 = phi %"class.std::__1::vector"* [ %158, %157 ], [ %163, %161 ]
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.re2::Prefilter"**, %"class.re2::Prefilter"*** %166, align 8
  %168 = getelementptr inbounds %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %167, i64 %159
  %169 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #13
  %170 = icmp eq %"class.re2::Prefilter"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %164
  call void @_ZNK3re29Prefilter11DebugStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.re2::Prefilter"* nonnull %169)
  %172 = load i8, i8* %151, align 1
  br label %174

173:                                              ; preds = %164
  store i8 5, i8* %151, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %149, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5, i1 false) #13
  store i8 0, i8* %152, align 1
  br label %174

174:                                              ; preds = %173, %171
  %175 = phi i8 [ 5, %173 ], [ %172, %171 ]
  %176 = icmp slt i8 %175, 0
  %177 = load i8*, i8** %153, align 8
  %178 = load i64, i64* %154, align 8
  %179 = zext i8 %175 to i64
  %180 = select i1 %176, i8* %177, i8* %149
  %181 = select i1 %176, i64 %178, i64 %179
  %182 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %180, i64 %181) #13
  %183 = load i8, i8* %151, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %174
  %186 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %174, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #13
  %188 = add nuw i64 %159, 1
  %189 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %140, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 1
  %191 = bitcast %"class.re2::Prefilter"*** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp ult i64 %188, %196
  br i1 %197, label %157, label %155

198:                                              ; preds = %123, %73, %64, %61, %155, %69, %50, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6ConcatEPS1_S2_(%"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.re2::Prefilter::Info"* %0, null
  br i1 %5, label %205, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 40) #14
  %8 = bitcast i8* %7 to %"class.re2::Prefilter::Info"*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  %10 = bitcast i8* %7 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 32
  %13 = bitcast i8* %12 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %13, align 8
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %15, %16
  br i1 %17, label %181, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = bitcast i8* %7 to %"class.std::__1::__tree"*
  %28 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %29 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %30 = bitcast i8* %7 to %"class.std::__1::__tree_end_node"**
  %31 = bitcast i8* %7 to i64*
  %32 = bitcast i8* %9 to %"class.std::__1::__tree_node_base"**
  %33 = getelementptr inbounds i8, i8* %7, i64 16
  %34 = bitcast i8* %33 to i64*
  br label %35

35:                                               ; preds = %75, %18
  %36 = phi %"class.std::__1::__tree_end_node"* [ %15, %18 ], [ %76, %75 ]
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %38 = icmp eq %"class.std::__1::__tree_end_node"* %37, %20
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 5
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = bitcast %"class.std::__1::__tree_end_node"* %40 to i8**
  %46 = bitcast %"class.std::__1::__tree_end_node"* %40 to i8*
  br label %78

47:                                               ; preds = %178, %35
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %47, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %47 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %64, %51
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %16
  br i1 %77, label %181, label %35

78:                                               ; preds = %178, %39
  %79 = phi %"class.std::__1::__tree_end_node"* [ %37, %39 ], [ %179, %178 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #13, !alias.scope !3
  %81 = load i8, i8* %42, align 1, !noalias !3
  %82 = icmp slt i8 %81, 0
  %83 = load i64, i64* %44, align 8, !noalias !3
  %84 = zext i8 %81 to i64
  %85 = select i1 %82, i64 %83, i64 %84
  %86 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1, !noalias !3
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 5
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !3
  %93 = zext i8 %88 to i64
  %94 = select i1 %89, i64 %92, i64 %93
  %95 = load i8*, i8** %45, align 8, !noalias !3
  %96 = select i1 %82, i8* %95, i8* %46
  %97 = add i64 %94, %85
  %98 = icmp ugt i64 %97, -17
  br i1 %98, label %99, label %101

99:                                               ; preds = %78
  %100 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %100) #15
  unreachable

101:                                              ; preds = %78
  %102 = icmp ult i64 %97, 23
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = trunc i64 %85 to i8
  store i8 %104, i8* %26, align 1, !alias.scope !3
  br label %110

105:                                              ; preds = %101
  %106 = add nuw i64 %97, 16
  %107 = and i64 %106, -16
  %108 = call i8* @_Znwm(i64 %107) #14
  store i8* %108, i8** %22, align 8, !alias.scope !3
  %109 = or i64 %107, -9223372036854775808
  store i64 %109, i64* %24, align 8, !alias.scope !3
  store i64 %85, i64* %23, align 8, !alias.scope !3
  br label %110

110:                                              ; preds = %105, %103
  %111 = phi i8* [ %21, %103 ], [ %108, %105 ]
  %112 = icmp eq i64 %85, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %111, i8* align 1 %96, i64 %85, i1 false) #13
  br label %114

114:                                              ; preds = %113, %110
  %115 = getelementptr inbounds i8, i8* %111, i64 %85
  store i8 0, i8* %115, align 1
  %116 = bitcast %"class.std::__1::__tree_end_node"* %80 to i8**
  %117 = load i8*, i8** %116, align 8, !noalias !3
  %118 = bitcast %"class.std::__1::__tree_end_node"* %80 to i8*
  %119 = select i1 %89, i8* %117, i8* %118
  %120 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %119, i64 %94) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %121 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %27, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #13
  %122 = bitcast %"class.std::__1::__tree_node_base"** %121 to %"class.std::__1::__tree_node"**
  %123 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node"* %123, null
  br i1 %124, label %125, label %145

125:                                              ; preds = %114
  %126 = call i8* @_Znwm(i64 56) #14, !noalias !6
  %127 = getelementptr inbounds i8, i8* %126, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %21, i64 24, i1 false) #13, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #13, !noalias !6
  %128 = load i64, i64* %29, align 8
  %129 = bitcast i8* %126 to %"class.std::__1::__tree_node_base"*
  %130 = getelementptr inbounds i8, i8* %126, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 16, i1 false) #13
  %131 = bitcast i8* %130 to i64*
  store i64 %128, i64* %131, align 8
  %132 = bitcast %"class.std::__1::__tree_node_base"** %121 to i8**
  store i8* %126, i8** %132, align 8
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %125
  %138 = ptrtoint %"class.std::__1::__tree_node_base"* %135 to i64
  store i64 %138, i64* %31, align 8
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %140

140:                                              ; preds = %137, %125
  %141 = phi %"class.std::__1::__tree_node_base"* [ %129, %125 ], [ %139, %137 ]
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"* %141) #13
  %143 = load i64, i64* %34, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %34, align 8
  br label %145

145:                                              ; preds = %140, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %146 = load i8, i8* %26, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %148, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 1, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_node_base"*
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 2
  %157 = bitcast %"class.std::__1::__tree_end_node"* %156 to %"class.std::__1::__tree_end_node"**
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, %155
  br i1 %161, label %178, label %169

162:                                              ; preds = %150, %162
  %163 = phi %"class.std::__1::__tree_node_base"* [ %165, %162 ], [ %152, %150 ]
  %164 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %162

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0
  br label %178

169:                                              ; preds = %154, %169
  %170 = phi %"class.std::__1::__tree_end_node"** [ %173, %169 ], [ %157, %154 ]
  %171 = bitcast %"class.std::__1::__tree_end_node"** %170 to %"class.std::__1::__tree_node_base"**
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 2
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %172
  br i1 %177, label %178, label %169

178:                                              ; preds = %169, %167, %154
  %179 = phi %"class.std::__1::__tree_end_node"* [ %168, %167 ], [ %158, %154 ], [ %174, %169 ]
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %179, %20
  br i1 %180, label %47, label %78

181:                                              ; preds = %75, %6
  store i8 1, i8* %11, align 8
  %182 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %183 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %182, align 8
  %184 = icmp eq %"class.re2::Prefilter"* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %181
  call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %183) #13
  %186 = bitcast %"class.re2::Prefilter"* %183 to i8*
  call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %181, %185
  %188 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %190 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %189, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %188, %"class.std::__1::__tree_node"* %190) #13
  %191 = bitcast %"class.re2::Prefilter::Info"* %0 to i8*
  call void @_ZdlPv(i8* %191) #14
  %192 = icmp eq %"class.re2::Prefilter::Info"* %1, null
  br i1 %192, label %205, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  %195 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %194, align 8
  %196 = icmp eq %"class.re2::Prefilter"* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %195) #13
  %198 = bitcast %"class.re2::Prefilter"* %195 to i8*
  call void @_ZdlPv(i8* %198) #14
  br label %199

199:                                              ; preds = %193, %197
  %200 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %202 = bitcast %"class.std::__1::__tree_end_node"* %201 to %"class.std::__1::__tree_node"**
  %203 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %202, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %200, %"class.std::__1::__tree_node"* %203) #13
  %204 = bitcast %"class.re2::Prefilter::Info"* %1 to i8*
  call void @_ZdlPv(i8* %204) #14
  br label %205

205:                                              ; preds = %187, %199, %2
  %206 = phi %"class.re2::Prefilter::Info"* [ %1, %2 ], [ %8, %199 ], [ %8, %187 ]
  ret %"class.re2::Prefilter::Info"* %206
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AndEPS1_S2_(%"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.re2::Prefilter::Info"* %0, null
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = icmp eq %"class.re2::Prefilter::Info"* %1, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 40) #14
  %8 = bitcast i8* %7 to %"class.re2::Prefilter::Info"*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  %10 = bitcast i8* %7 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 32
  %13 = bitcast i8* %12 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %13, align 8
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %19 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %18, align 8
  br label %24

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0
  %22 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %21) #13
  %23 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* %22, %"class.re2::Prefilter"** %23, align 8
  store i8 0, i8* %14, align 8
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi %"class.re2::Prefilter"* [ %19, %17 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %26, align 8
  %27 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  %32 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %31, align 8
  br label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0
  %35 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %34) #13
  %36 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  store %"class.re2::Prefilter"* %35, %"class.re2::Prefilter"** %36, align 8
  store i8 0, i8* %27, align 8
  br label %37

37:                                               ; preds = %30, %33
  %38 = phi %"class.re2::Prefilter"* [ %32, %30 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %39, align 8
  %40 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32 3, %"class.re2::Prefilter"* %25, %"class.re2::Prefilter"* %38) #13
  store %"class.re2::Prefilter"* %40, %"class.re2::Prefilter"** %13, align 8
  store i8 0, i8* %11, align 8
  %41 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %26, align 8
  %42 = icmp eq %"class.re2::Prefilter"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %41) #13
  %44 = bitcast %"class.re2::Prefilter"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %37, %43
  %46 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %46, %"class.std::__1::__tree_node"* %49) #13
  %50 = bitcast %"class.re2::Prefilter::Info"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #14
  %51 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %39, align 8
  %52 = icmp eq %"class.re2::Prefilter"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %51) #13
  %54 = bitcast %"class.re2::Prefilter"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %45, %53
  %56 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node"**
  %59 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %58, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %56, %"class.std::__1::__tree_node"* %59) #13
  %60 = bitcast %"class.re2::Prefilter::Info"* %1 to i8*
  tail call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %4, %2, %55
  %62 = phi %"class.re2::Prefilter::Info"* [ %8, %55 ], [ %1, %2 ], [ %0, %4 ]
  ret %"class.re2::Prefilter::Info"* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AltEPS1_S2_(%"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #14
  %4 = bitcast i8* %3 to %"class.re2::Prefilter::Info"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = bitcast i8* %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 24
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 32
  %9 = bitcast i8* %8 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %9, align 8
  %10 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %101, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %104, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %19, %20
  br i1 %21, label %59, label %22

22:                                               ; preds = %17
  %23 = bitcast i8* %3 to %"class.std::__1::__tree"*
  br label %24

24:                                               ; preds = %56, %22
  %25 = phi %"class.std::__1::__tree_end_node"* [ %19, %22 ], [ %57, %56 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::basic_string"*
  %28 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %23, %"class.std::__1::basic_string"* dereferenceable(24) %27, %"class.std::__1::basic_string"* dereferenceable(24) %27) #13
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %24
  %33 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %56, label %47

40:                                               ; preds = %24, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %30, %24 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %32, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %32 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %45, %32
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %32 ], [ %52, %47 ]
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %20
  br i1 %58, label %59, label %24

59:                                               ; preds = %56, %17
  %60 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %61, %62
  br i1 %63, label %125, label %64

64:                                               ; preds = %59
  %65 = bitcast i8* %3 to %"class.std::__1::__tree"*
  br label %66

66:                                               ; preds = %98, %64
  %67 = phi %"class.std::__1::__tree_end_node"* [ %61, %64 ], [ %99, %98 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 4
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::basic_string"*
  %70 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %65, %"class.std::__1::basic_string"* dereferenceable(24) %69, %"class.std::__1::basic_string"* dereferenceable(24) %69) #13
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 1, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %82

74:                                               ; preds = %66
  %75 = bitcast %"class.std::__1::__tree_end_node"* %67 to %"class.std::__1::__tree_node_base"*
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 2
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to %"class.std::__1::__tree_end_node"**
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, %75
  br i1 %81, label %98, label %89

82:                                               ; preds = %66, %82
  %83 = phi %"class.std::__1::__tree_node_base"* [ %85, %82 ], [ %72, %66 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, null
  br i1 %86, label %87, label %82

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %83, i64 0, i32 0
  br label %98

89:                                               ; preds = %74, %89
  %90 = phi %"class.std::__1::__tree_end_node"** [ %93, %89 ], [ %77, %74 ]
  %91 = bitcast %"class.std::__1::__tree_end_node"** %90 to %"class.std::__1::__tree_node_base"**
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 2
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, %92
  br i1 %97, label %98, label %89

98:                                               ; preds = %89, %87, %74
  %99 = phi %"class.std::__1::__tree_end_node"* [ %88, %87 ], [ %78, %74 ], [ %94, %89 ]
  %100 = icmp eq %"class.std::__1::__tree_end_node"* %99, %62
  br i1 %100, label %125, label %66

101:                                              ; preds = %2
  %102 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %103 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %102, align 8
  br label %108

104:                                              ; preds = %13
  %105 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0
  %106 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %105) #13
  %107 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* %106, %"class.re2::Prefilter"** %107, align 8
  store i8 0, i8* %10, align 8
  br label %108

108:                                              ; preds = %101, %104
  %109 = phi %"class.re2::Prefilter"* [ %103, %101 ], [ %106, %104 ]
  %110 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %110, align 8
  %111 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 1
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  %116 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %115, align 8
  br label %121

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0
  %119 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %118) #13
  %120 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  store %"class.re2::Prefilter"* %119, %"class.re2::Prefilter"** %120, align 8
  store i8 0, i8* %111, align 8
  br label %121

121:                                              ; preds = %114, %117
  %122 = phi %"class.re2::Prefilter"* [ %116, %114 ], [ %119, %117 ]
  %123 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %123, align 8
  %124 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter5AndOrENS0_2OpEPS0_S2_(i32 4, %"class.re2::Prefilter"* %109, %"class.re2::Prefilter"* %122) #13
  store %"class.re2::Prefilter"* %124, %"class.re2::Prefilter"** %9, align 8
  br label %125

125:                                              ; preds = %98, %59, %121
  %126 = phi i8 [ 0, %121 ], [ 1, %59 ], [ 1, %98 ]
  store i8 %126, i8* %7, align 8
  %127 = icmp eq %"class.re2::Prefilter::Info"* %0, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %130 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %129, align 8
  %131 = icmp eq %"class.re2::Prefilter"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %128
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %130) #13
  %133 = bitcast %"class.re2::Prefilter"* %130 to i8*
  tail call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %128, %132
  %135 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to %"class.std::__1::__tree_node"**
  %138 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %137, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %135, %"class.std::__1::__tree_node"* %138) #13
  %139 = bitcast %"class.re2::Prefilter::Info"* %0 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %125
  %141 = icmp eq %"class.re2::Prefilter::Info"* %1, null
  br i1 %141, label %154, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 2
  %144 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %143, align 8
  %145 = icmp eq %"class.re2::Prefilter"* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %144) #13
  %147 = bitcast %"class.re2::Prefilter"* %144 to i8*
  tail call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %142, %146
  %149 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_node"**
  %152 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %151, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %149, %"class.std::__1::__tree_node"* %152) #13
  %153 = bitcast %"class.re2::Prefilter::Info"* %1 to i8*
  tail call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %148, %140
  ret %"class.re2::Prefilter::Info"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info5QuestEPS1_(%"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #14
  %3 = bitcast i8* %2 to %"class.re2::Prefilter::Info"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = bitcast i8* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 24
  %7 = getelementptr inbounds i8, i8* %2, i64 32
  store i8 0, i8* %6, align 8
  %8 = tail call i8* @_Znwm(i64 48) #14
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  store i8* %8, i8** %11, align 8
  %12 = icmp eq %"class.re2::Prefilter::Info"* %0, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %15 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %14, align 8
  %16 = icmp eq %"class.re2::Prefilter"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %15) #13
  %18 = bitcast %"class.re2::Prefilter"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_node"* %23) #13
  %24 = bitcast %"class.re2::Prefilter::Info"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %19, %1
  ret %"class.re2::Prefilter::Info"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info4StarEPS1_(%"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info5QuestEPS1_(%"class.re2::Prefilter::Info"* %0)
  ret %"class.re2::Prefilter::Info"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info4PlusEPS1_(%"class.re2::Prefilter::Info"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #14
  %3 = bitcast i8* %2 to %"class.re2::Prefilter::Info"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = bitcast i8* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 24
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 32
  %8 = bitcast i8* %7 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %8, align 8
  %9 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  %14 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %13, align 8
  br label %19

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0
  %17 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %16) #13
  %18 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* %17, %"class.re2::Prefilter"** %18, align 8
  store i8 0, i8* %9, align 8
  br label %19

19:                                               ; preds = %12, %15
  %20 = phi %"class.re2::Prefilter"* [ %14, %12 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %21, align 8
  store %"class.re2::Prefilter"* %20, %"class.re2::Prefilter"** %8, align 8
  store i8 0, i8* %6, align 8
  %22 = icmp eq %"class.re2::Prefilter::Info"* %0, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %24, %"class.std::__1::__tree_node"* %27) #13
  %28 = bitcast %"class.re2::Prefilter::Info"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %23, %19
  ret %"class.re2::Prefilter::Info"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info7LiteralEi(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call i8* @_Znwm(i64 40) #14
  %7 = bitcast i8* %6 to %"class.re2::Prefilter::Info"*
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = bitcast i8* %6 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 32
  %12 = bitcast i8* %11 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %12, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = icmp slt i32 %0, 128
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = add i32 %0, -65
  %17 = icmp ult i32 %16, 26
  %18 = add nsw i32 %0, 32
  %19 = select i1 %17, i32 %18, i32 %0
  br label %30

20:                                               ; preds = %1
  %21 = load i32, i32* @_ZN3re219num_unicode_tolowerE, align 4
  %22 = tail call %"struct.re2::CaseFold"* @_ZN3re214LookupCaseFoldEPKNS_8CaseFoldEii(%"struct.re2::CaseFold"* getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re215unicode_tolowerE, i64 0, i64 0), i32 %21, i32 %0) #13
  %23 = icmp eq %"struct.re2::CaseFold"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %22, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call i32 @_ZN3re29ApplyFoldEPKNS_8CaseFoldEi(%"struct.re2::CaseFold"* nonnull %22, i32 %0) #13
  br label %30

30:                                               ; preds = %15, %20, %24, %28
  %31 = phi i32 [ %19, %15 ], [ %29, %28 ], [ %0, %24 ], [ %0, %20 ]
  %32 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  store i32 %31, i32* %3, align 4, !noalias !9
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #13, !noalias !9
  store i32 -1431655766, i32* %4, align 4, !noalias !9
  %34 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %33, i32* nonnull %3) #13, !noalias !9
  %35 = sext i32 %34 to i64
  %36 = icmp ugt i32 %34, -17
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %38) #15
  unreachable

39:                                               ; preds = %30
  %40 = icmp ult i32 %34, 23
  br i1 %40, label %49, label %41

41:                                               ; preds = %39
  %42 = add nuw nsw i64 %35, 16
  %43 = and i64 %42, -16
  %44 = call i8* @_Znwm(i64 %43) #14
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %44, i8** %45, align 8, !alias.scope !9
  %46 = or i64 %43, -9223372036854775808
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8, !alias.scope !9
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %48, align 8, !alias.scope !9
  br label %54

49:                                               ; preds = %39
  %50 = trunc i32 %34 to i8
  %51 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 %50, i8* %52, align 1, !alias.scope !9
  %53 = icmp eq i32 %34, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49, %41
  %55 = phi i8* [ %44, %41 ], [ %13, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* nonnull align 4 %33, i64 %35, i1 false) #13
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i8* [ %13, %49 ], [ %55, %54 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %35
  store i8 0, i8* %58, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #13, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  %59 = bitcast i8* %6 to %"class.std::__1::__tree"*
  %60 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %61 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %59, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #13
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %91

65:                                               ; preds = %56
  %66 = call i8* @_Znwm(i64 56) #14, !noalias !12
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %13, i64 24, i1 false) #13, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #13, !noalias !12
  %68 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %66, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #13
  %72 = bitcast i8* %71 to i64*
  store i64 %69, i64* %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %73, align 8
  %74 = bitcast i8* %6 to %"class.std::__1::__tree_end_node"**
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %65
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %77 to i64
  %81 = bitcast i8* %6 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %83

83:                                               ; preds = %79, %65
  %84 = phi %"class.std::__1::__tree_node_base"* [ %70, %65 ], [ %82, %79 ]
  %85 = bitcast i8* %8 to %"class.std::__1::__tree_node_base"**
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %86, %"class.std::__1::__tree_node_base"* %84) #13
  %87 = getelementptr inbounds i8, i8* %6, i64 16
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %56, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %92 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %91, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  store i8 1, i8* %10, align 8
  ret %"class.re2::Prefilter::Info"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info13LiteralLatin1Ei(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 40) #14
  %5 = bitcast i8* %4 to %"class.re2::Prefilter::Info"*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = bitcast i8* %4 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 32
  %10 = bitcast i8* %9 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %10, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = add i32 %0, -65
  %13 = icmp ult i32 %12, 26
  %14 = add nsw i32 %0, 32
  %15 = select i1 %13, i32 %14, i32 %0
  %16 = trunc i32 %15 to i8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 1, i8* %18, align 1, !alias.scope !15
  store i8 %16, i8* %11, align 8, !alias.scope !15
  %19 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 0, i8* %19, align 1, !alias.scope !15
  %20 = bitcast i8* %4 to %"class.std::__1::__tree"*
  %21 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %22 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %20, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #13
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %52

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 56) #14, !noalias !18
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %11, i64 24, i1 false) #13, !noalias !18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #13, !noalias !18
  %29 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8* %27 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #13
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8**
  store i8* %27, i8** %34, align 8
  %35 = bitcast i8* %4 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %26
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %38 to i64
  %42 = bitcast i8* %4 to i64*
  store i64 %41, i64* %42, align 8
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  br label %44

44:                                               ; preds = %40, %26
  %45 = phi %"class.std::__1::__tree_node_base"* [ %31, %26 ], [ %43, %40 ]
  %46 = bitcast i8* %6 to %"class.std::__1::__tree_node_base"**
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %47, %"class.std::__1::__tree_node_base"* %45) #13
  %48 = getelementptr inbounds i8, i8* %4, i64 16
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %1, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %53 = load i8, i8* %18, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  store i8 1, i8* %8, align 8
  ret %"class.re2::Prefilter::Info"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info16AnyCharOrAnyByteEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 40) #14
  %2 = bitcast i8* %1 to %"class.re2::Prefilter::Info"*
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = bitcast i8* %1 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %6 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  store i8* %7, i8** %10, align 8
  ret %"class.re2::Prefilter::Info"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info7NoMatchEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 40) #14
  %2 = bitcast i8* %1 to %"class.re2::Prefilter::Info"*
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = bitcast i8* %1 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13
  %9 = bitcast i8* %7 to i32*
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %11, align 8
  %12 = bitcast i8* %6 to i8**
  store i8* %7, i8** %12, align 8
  ret %"class.re2::Prefilter::Info"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info8AnyMatchEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 40) #14
  %2 = bitcast i8* %1 to %"class.re2::Prefilter::Info"*
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = bitcast i8* %1 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 32
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %6 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  store i8* %7, i8** %10, align 8
  ret %"class.re2::Prefilter::Info"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info11EmptyStringEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @_Znwm(i64 40) #14
  %4 = bitcast i8* %3 to %"class.re2::Prefilter::Info"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = bitcast i8* %3 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 24
  %8 = getelementptr inbounds i8, i8* %3, i64 32
  %9 = bitcast i8* %8 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %9, align 8
  store i8 1, i8* %7, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 0, i8* %12, align 1
  store i8 0, i8* %10, align 8
  %13 = bitcast i8* %3 to %"class.std::__1::__tree"*
  %14 = bitcast %"class.std::__1::__tree_end_node"** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %1, align 8
  %15 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %13, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #13
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %19, label %45

19:                                               ; preds = %0
  %20 = call i8* @_Znwm(i64 56) #14, !noalias !21
  %21 = getelementptr inbounds i8, i8* %20, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %10, i64 24, i1 false) #13, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #13, !noalias !21
  %22 = bitcast %"class.std::__1::__tree_end_node"** %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i8* %20 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds i8, i8* %20, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #13
  %26 = bitcast i8* %25 to i64*
  store i64 %23, i64* %26, align 8
  %27 = bitcast %"class.std::__1::__tree_node_base"** %15 to i8**
  store i8* %20, i8** %27, align 8
  %28 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"**
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %19
  %34 = ptrtoint %"class.std::__1::__tree_node_base"* %31 to i64
  %35 = bitcast i8* %3 to i64*
  store i64 %34, i64* %35, align 8
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  br label %37

37:                                               ; preds = %33, %19
  %38 = phi %"class.std::__1::__tree_node_base"* [ %24, %19 ], [ %36, %33 ]
  %39 = bitcast i8* %5 to %"class.std::__1::__tree_node_base"**
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"* %38) #13
  %41 = getelementptr inbounds i8, i8* %3, i64 16
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %0, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %46 = load i8, i8* %12, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  ret %"class.re2::Prefilter::Info"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6CClassEPNS_9CharClassEb(%"class.re2::CharClass"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 10
  %12 = tail call i8* @_Znwm(i64 40) #14
  %13 = bitcast i8* %12 to %"class.re2::Prefilter::Info"*
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #13
  %15 = bitcast i8* %12 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 24
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds i8, i8* %12, i64 32
  br i1 %11, label %18, label %23

18:                                               ; preds = %2
  %19 = tail call i8* @_Znwm(i64 48) #14
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %17 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #13
  store i8* %19, i8** %22, align 8
  br label %184

23:                                               ; preds = %2
  %24 = bitcast i8* %17 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %24, align 8
  %25 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %23
  %30 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %25, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %32 = load i32, i32* @_ZN3re219num_unicode_tolowerE, align 4
  %33 = bitcast i32* %4 to i8*
  %34 = bitcast i32* %5 to i8*
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = bitcast i8* %12 to %"class.std::__1::__tree"*
  %41 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  %42 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %43 = bitcast i8* %12 to %"class.std::__1::__tree_end_node"**
  %44 = bitcast i8* %12 to i64*
  %45 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"**
  %46 = getelementptr inbounds i8, i8* %12, i64 16
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  %52 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %53 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %56

55:                                               ; preds = %68, %23
  store i8 1, i8* %16, align 8
  br label %184

56:                                               ; preds = %29, %68
  %57 = phi i32 [ %27, %29 ], [ %69, %68 ]
  %58 = phi %"struct.re2::RuneRange"* [ %30, %29 ], [ %70, %68 ]
  %59 = phi %"struct.re2::RuneRange"* [ %30, %29 ], [ %71, %68 ]
  %60 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %61, %63
  br i1 %64, label %68, label %75

65:                                               ; preds = %179
  %66 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %25, align 8
  %67 = load i32, i32* %26, align 8
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi i32 [ %67, %65 ], [ %57, %56 ]
  %70 = phi %"struct.re2::RuneRange"* [ %66, %65 ], [ %58, %56 ]
  %71 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %59, i64 1
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %70, i64 %72
  %74 = icmp eq %"struct.re2::RuneRange"* %71, %73
  br i1 %74, label %55, label %56

75:                                               ; preds = %56, %179
  %76 = phi i32 [ %181, %179 ], [ %61, %56 ]
  br i1 %1, label %77, label %112

77:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #13
  %78 = add i32 %76, -65
  %79 = icmp ult i32 %78, 26
  %80 = add nsw i32 %76, 32
  %81 = select i1 %79, i32 %80, i32 %76
  %82 = trunc i32 %81 to i8
  store i8 1, i8* %50, align 1, !alias.scope !24
  store i8 %82, i8* %48, align 8, !alias.scope !24
  store i8 0, i8* %51, align 1, !alias.scope !24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %83 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %40, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #13
  %84 = bitcast %"class.std::__1::__tree_node_base"** %83 to %"class.std::__1::__tree_node"**
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node"* %85, null
  br i1 %86, label %87, label %107

87:                                               ; preds = %77
  %88 = call i8* @_Znwm(i64 56) #14, !noalias !27
  %89 = getelementptr inbounds i8, i8* %88, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %48, i64 24, i1 false) #13, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #13, !noalias !27
  %90 = load i64, i64* %53, align 8
  %91 = bitcast i8* %88 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds i8, i8* %88, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #13
  %93 = bitcast i8* %92 to i64*
  store i64 %90, i64* %93, align 8
  %94 = bitcast %"class.std::__1::__tree_node_base"** %83 to i8**
  store i8* %88, i8** %94, align 8
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %87
  %100 = ptrtoint %"class.std::__1::__tree_node_base"* %97 to i64
  store i64 %100, i64* %44, align 8
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  br label %102

102:                                              ; preds = %99, %87
  %103 = phi %"class.std::__1::__tree_node_base"* [ %91, %87 ], [ %101, %99 ]
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %104, %"class.std::__1::__tree_node_base"* %103) #13
  %105 = load i64, i64* %47, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %47, align 8
  br label %107

107:                                              ; preds = %77, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  %108 = load i8, i8* %50, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %179

110:                                              ; preds = %107
  %111 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %111) #14
  br label %179

112:                                              ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %113 = icmp slt i32 %76, 128
  br i1 %113, label %114, label %119

114:                                              ; preds = %112
  %115 = add i32 %76, -65
  %116 = icmp ult i32 %115, 26
  %117 = add nsw i32 %76, 32
  %118 = select i1 %116, i32 %117, i32 %76
  br label %128

119:                                              ; preds = %112
  %120 = call %"struct.re2::CaseFold"* @_ZN3re214LookupCaseFoldEPKNS_8CaseFoldEii(%"struct.re2::CaseFold"* getelementptr inbounds ([0 x %"struct.re2::CaseFold"], [0 x %"struct.re2::CaseFold"]* @_ZN3re215unicode_tolowerE, i64 0, i64 0), i32 %32, i32 %76) #13
  %121 = icmp eq %"struct.re2::CaseFold"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.re2::CaseFold", %"struct.re2::CaseFold"* %120, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, %76
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = call i32 @_ZN3re29ApplyFoldEPKNS_8CaseFoldEi(%"struct.re2::CaseFold"* nonnull %120, i32 %76) #13
  br label %128

128:                                              ; preds = %114, %119, %122, %126
  %129 = phi i32 [ %118, %114 ], [ %127, %126 ], [ %76, %122 ], [ %76, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 %129, i32* %4, align 4, !noalias !30
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #13, !noalias !30
  store i32 -1431655766, i32* %5, align 4, !noalias !30
  %130 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %34, i32* nonnull %4) #13, !noalias !30
  %131 = sext i32 %130 to i64
  %132 = icmp ugt i32 %130, -17
  br i1 %132, label %133, label %135

133:                                              ; preds = %128
  %134 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %134) #15
  unreachable

135:                                              ; preds = %128
  %136 = icmp ult i32 %130, 23
  br i1 %136, label %142, label %137

137:                                              ; preds = %135
  %138 = add nuw nsw i64 %131, 16
  %139 = and i64 %138, -16
  %140 = call i8* @_Znwm(i64 %139) #14
  store i8* %140, i8** %35, align 8, !alias.scope !30
  %141 = or i64 %139, -9223372036854775808
  store i64 %141, i64* %36, align 8, !alias.scope !30
  store i64 %131, i64* %37, align 8, !alias.scope !30
  br label %145

142:                                              ; preds = %135
  %143 = trunc i32 %130 to i8
  store i8 %143, i8* %39, align 1, !alias.scope !30
  %144 = icmp eq i32 %130, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %142, %137
  %146 = phi i8* [ %140, %137 ], [ %31, %142 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %146, i8* nonnull align 4 %34, i64 %131, i1 false) #13
  br label %147

147:                                              ; preds = %142, %145
  %148 = phi i8* [ %31, %142 ], [ %146, %145 ]
  %149 = getelementptr inbounds i8, i8* %148, i64 %131
  store i8 0, i8* %149, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #13, !noalias !30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %150 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* nonnull %40, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #13
  %151 = bitcast %"class.std::__1::__tree_node_base"** %150 to %"class.std::__1::__tree_node"**
  %152 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node"* %152, null
  br i1 %153, label %154, label %174

154:                                              ; preds = %147
  %155 = call i8* @_Znwm(i64 56) #14, !noalias !33
  %156 = getelementptr inbounds i8, i8* %155, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %31, i64 24, i1 false) #13, !noalias !33
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13, !noalias !33
  %157 = load i64, i64* %42, align 8
  %158 = bitcast i8* %155 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds i8, i8* %155, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #13
  %160 = bitcast i8* %159 to i64*
  store i64 %157, i64* %160, align 8
  %161 = bitcast %"class.std::__1::__tree_node_base"** %150 to i8**
  store i8* %155, i8** %161, align 8
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %154
  %167 = ptrtoint %"class.std::__1::__tree_node_base"* %164 to i64
  store i64 %167, i64* %44, align 8
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  br label %169

169:                                              ; preds = %166, %154
  %170 = phi %"class.std::__1::__tree_node_base"* [ %158, %154 ], [ %168, %166 ]
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %171, %"class.std::__1::__tree_node_base"* %170) #13
  %172 = load i64, i64* %47, align 8
  %173 = add i64 %172, 1
  store i64 %173, i64* %47, align 8
  br label %174

174:                                              ; preds = %147, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %175 = load i8, i8* %39, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  %178 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %177, %174, %110, %107
  %180 = phi i8* [ %48, %107 ], [ %48, %110 ], [ %31, %174 ], [ %31, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #13
  %181 = add nsw i32 %76, 1
  %182 = load i32, i32* %62, align 4
  %183 = icmp slt i32 %76, %182
  br i1 %183, label %75, label %65

184:                                              ; preds = %55, %18
  ret %"class.re2::Prefilter::Info"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter9BuildInfoEPNS_6RegexpE(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.re2::Prefilter::Info::Walker", align 8
  %3 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 2
  %5 = bitcast %"class.re2::Prefilter::Info::Walker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 72, i1 false)
  %6 = lshr i16 %4, 5
  %7 = trunc i16 %6 to i8
  %8 = and i8 %7, 1
  %9 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::stack"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 49, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re29Prefilter4Info6WalkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 1
  store i8 %8, i8* %12, align 8
  %13 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 0, i32 3
  store i32 100000, i32* %14, align 4
  %15 = call %"class.re2::Prefilter::Info"* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE12WalkInternalEPS0_S4_b(%"class.re2::Regexp::Walker"* nonnull %13, %"class.re2::Regexp"* %0, %"class.re2::Prefilter::Info"* null, i1 zeroext false) #13
  %16 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %2, i64 0, i32 0, i32 2
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.re2::Prefilter::Info"* %15, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %15, i64 0, i32 2
  %23 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %22, align 8
  %24 = icmp eq %"class.re2::Prefilter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  call void @_ZN3re29PrefilterD2Ev(%"class.re2::Prefilter"* nonnull %23) #13
  %26 = bitcast %"class.re2::Prefilter"* %23 to i8*
  call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %15, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %28, %"class.std::__1::__tree_node"* %31) #13
  %32 = bitcast %"class.re2::Prefilter::Info"* %15 to i8*
  call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %1, %19, %27
  %34 = phi %"class.re2::Prefilter::Info"* [ null, %27 ], [ null, %19 ], [ %15, %1 ]
  call void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev(%"class.re2::Regexp::Walker"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #13
  ret %"class.re2::Prefilter::Info"* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerIPNS_9Prefilter4InfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = udiv i64 %6, 85
  %8 = urem i64 %6, 85
  %9 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %7
  %10 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = icmp eq %"struct.re2::WalkState"** %11, %4
  %13 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %14 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %9, align 8
  %19 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %18, i64 %8
  %20 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = udiv i64 %22, 85
  %24 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %4, i64 %23
  %25 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %24, align 8
  %26 = urem i64 %22, 85
  %27 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %25, i64 %26
  %28 = icmp eq %"struct.re2::WalkState"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %17, %15
  %30 = phi i64* [ %16, %15 ], [ %20, %17 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  %32 = sub i64 %13, %14
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %17, %48
  %36 = phi %"struct.re2::WalkState"* [ %51, %48 ], [ %19, %17 ]
  %37 = phi %"struct.re2::WalkState"** [ %50, %48 ], [ %9, %17 ]
  %38 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %36, i64 1
  %39 = ptrtoint %"struct.re2::WalkState"* %38 to i64
  %40 = bitcast %"struct.re2::WalkState"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4080
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %37, i64 1
  %46 = bitcast %"struct.re2::WalkState"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.re2::WalkState"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.re2::WalkState"*
  %52 = icmp eq %"struct.re2::WalkState"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.re2::WalkState"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.re2::WalkState"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #14
  %57 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %58 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %57, i64 1
  store %"struct.re2::WalkState"** %58, %"struct.re2::WalkState"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.re2::WalkState"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.re2::WalkState"** [ %11, %29 ], [ %65, %64 ]
  %68 = phi %"struct.re2::WalkState"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 85, %70 ], [ 42, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.re2::WalkState"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.re2::WalkState"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.re2::WalkState"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #14
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %76, i64 1
  %80 = icmp eq %"struct.re2::WalkState"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %83 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %84 = icmp eq %"struct.re2::WalkState"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.re2::WalkState"** %82 to i64
  %87 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 -1
  %88 = ptrtoint %"struct.re2::WalkState"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %83, i64 %91
  store %"struct.re2::WalkState"** %92, %"struct.re2::WalkState"*** %10, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %94, align 8
  %96 = icmp eq %"struct.re2::WalkState"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.re2::WalkState"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6Walker10ShortVisitEPNS_6RegexpEPS1_(%"class.re2::Prefilter::Info::Walker"* nocapture readnone, %"class.re2::Regexp"* nocapture readnone, %"class.re2::Prefilter::Info"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #14
  %5 = bitcast i8* %4 to %"class.re2::Prefilter::Info"*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = bitcast i8* %4 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 32
  %10 = tail call i8* @_Znwm(i64 48) #14
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %9 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #13
  store i8* %10, i8** %13, align 8
  ret %"class.re2::Prefilter::Info"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6Walker9PostVisitEPNS_6RegexpEPS1_S5_PS5_i(%"class.re2::Prefilter::Info::Walker"* nocapture readonly, %"class.re2::Regexp"* nocapture readonly, %"class.re2::Prefilter::Info"* nocapture readnone, %"class.re2::Prefilter::Info"* nocapture readnone, %"class.re2::Prefilter::Info"** nocapture readonly, i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.LogMessage, align 8
  %8 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  switch i8 %9, label %14 [
    i8 11, label %238
    i8 1, label %57
    i8 2, label %70
    i8 14, label %70
    i8 15, label %70
    i8 18, label %70
    i8 19, label %70
    i8 16, label %70
    i8 17, label %70
    i8 3, label %72
    i8 4, label %82
    i8 5, label %10
    i8 6, label %171
    i8 7, label %184
    i8 9, label %187
    i8 8, label %190
    i8 12, label %219
    i8 13, label %219
    i8 20, label %230
  ]

10:                                               ; preds = %6
  %11 = icmp sgt i32 %5, 0
  br i1 %11, label %12, label %139

12:                                               ; preds = %10
  %13 = zext i32 %5 to i64
  br label %143

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %15) #13
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1
  %17 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %17, align 8
  %19 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0
  %21 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8**
  %25 = inttoptr i64 %21 to i8*
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = bitcast i8* %30 to i64*
  store i64 %23, i64* %31, align 8
  %32 = load i8*, i8** %24, align 8
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 %35
  %37 = bitcast i8* %36 to %"class.std::__1::ios_base"*
  %38 = bitcast %"class.std::__1::basic_stringbuf"* %19 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %37, i8* %38) #13
  %39 = getelementptr inbounds i8, i8* %36, i64 136
  %40 = bitcast i8* %39 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 144
  %42 = bitcast i8* %41 to i32*
  store i32 -1, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %17, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %20) #13
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 1
  %45 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 3
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %45, align 8
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %49, i32 535) #13
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #13
  %53 = load i8, i8* %8, align 8
  %54 = zext i8 %53 to i32
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %52, i32 %54) #13
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %15) #13
  %56 = call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info11EmptyStringEv()
  br label %240

57:                                               ; preds = %6
  %58 = tail call i8* @_Znwm(i64 40) #14
  %59 = bitcast i8* %58 to %"class.re2::Prefilter::Info"*
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = bitcast i8* %58 to i8**
  store i8* %60, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 24
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds i8, i8* %58, i64 32
  %64 = tail call i8* @_Znwm(i64 48) #14
  %65 = getelementptr inbounds i8, i8* %64, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #13
  %66 = bitcast i8* %64 to i32*
  store i32 1, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %64, i64 8
  %68 = bitcast i8* %67 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %68, align 8
  %69 = bitcast i8* %63 to i8**
  store i8* %64, i8** %69, align 8
  br label %240

70:                                               ; preds = %6, %6, %6, %6, %6, %6, %6
  %71 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info11EmptyStringEv()
  br label %240

72:                                               ; preds = %6
  %73 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %0, i64 0, i32 1
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  br i1 %75, label %80, label %78

78:                                               ; preds = %72
  %79 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info13LiteralLatin1Ei(i32 %77)
  br label %240

80:                                               ; preds = %72
  %81 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info7LiteralEi(i32 %77)
  br label %240

82:                                               ; preds = %6
  %83 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %82
  %87 = tail call i8* @_Znwm(i64 40) #14
  %88 = bitcast i8* %87 to %"class.re2::Prefilter::Info"*
  %89 = getelementptr inbounds i8, i8* %87, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #13
  %90 = bitcast i8* %87 to i8**
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 24
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds i8, i8* %87, i64 32
  %93 = tail call i8* @_Znwm(i64 48) #14
  %94 = getelementptr inbounds i8, i8* %93, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #13
  %95 = bitcast i8* %93 to i32*
  store i32 1, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %93, i64 8
  %97 = bitcast i8* %96 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %97, align 8
  %98 = bitcast i8* %92 to i8**
  store i8* %93, i8** %98, align 8
  br label %240

99:                                               ; preds = %82
  %100 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %0, i64 0, i32 1
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  %103 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %104 = bitcast %"class.std::__1::basic_string"** %103 to i32**
  %105 = load i32*, i32** %104, align 8
  %106 = load i32, i32* %105, align 4
  br i1 %102, label %123, label %107

107:                                              ; preds = %99
  %108 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info13LiteralLatin1Ei(i32 %106)
  %109 = load i32, i32* %83, align 8
  %110 = icmp sgt i32 %109, 1
  br i1 %110, label %111, label %240

111:                                              ; preds = %107, %111
  %112 = phi i64 [ %119, %111 ], [ 1, %107 ]
  %113 = phi %"class.re2::Prefilter::Info"* [ %118, %111 ], [ %108, %107 ]
  %114 = load i32*, i32** %104, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 %112
  %116 = load i32, i32* %115, align 4
  %117 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info13LiteralLatin1Ei(i32 %116)
  %118 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6ConcatEPS1_S2_(%"class.re2::Prefilter::Info"* %113, %"class.re2::Prefilter::Info"* nonnull %117)
  %119 = add nuw nsw i64 %112, 1
  %120 = load i32, i32* %83, align 8
  %121 = sext i32 %120 to i64
  %122 = icmp slt i64 %119, %121
  br i1 %122, label %111, label %240

123:                                              ; preds = %99
  %124 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info7LiteralEi(i32 %106)
  %125 = load i32, i32* %83, align 8
  %126 = icmp sgt i32 %125, 1
  br i1 %126, label %127, label %240

127:                                              ; preds = %123, %127
  %128 = phi i64 [ %135, %127 ], [ 1, %123 ]
  %129 = phi %"class.re2::Prefilter::Info"* [ %134, %127 ], [ %124, %123 ]
  %130 = load i32*, i32** %104, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 %128
  %132 = load i32, i32* %131, align 4
  %133 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info7LiteralEi(i32 %132)
  %134 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6ConcatEPS1_S2_(%"class.re2::Prefilter::Info"* %129, %"class.re2::Prefilter::Info"* nonnull %133)
  %135 = add nuw nsw i64 %128, 1
  %136 = load i32, i32* %83, align 8
  %137 = sext i32 %136 to i64
  %138 = icmp slt i64 %135, %137
  br i1 %138, label %127, label %240

139:                                              ; preds = %166, %10
  %140 = phi %"class.re2::Prefilter::Info"* [ null, %10 ], [ %167, %166 ]
  %141 = phi %"class.re2::Prefilter::Info"* [ null, %10 ], [ %168, %166 ]
  %142 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AndEPS1_S2_(%"class.re2::Prefilter::Info"* %140, %"class.re2::Prefilter::Info"* %141)
  br label %240

143:                                              ; preds = %166, %12
  %144 = phi i64 [ 0, %12 ], [ %169, %166 ]
  %145 = phi %"class.re2::Prefilter::Info"* [ null, %12 ], [ %168, %166 ]
  %146 = phi %"class.re2::Prefilter::Info"* [ null, %12 ], [ %167, %166 ]
  %147 = getelementptr inbounds %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, i64 %144
  %148 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %147, align 8
  %149 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %148, i64 0, i32 1
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %161, label %152

152:                                              ; preds = %143
  %153 = icmp eq %"class.re2::Prefilter::Info"* %145, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %148, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %145, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = mul i64 %158, %156
  %160 = icmp ugt i64 %159, 16
  br i1 %160, label %161, label %164

161:                                              ; preds = %143, %154
  %162 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AndEPS1_S2_(%"class.re2::Prefilter::Info"* %146, %"class.re2::Prefilter::Info"* %145)
  %163 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AndEPS1_S2_(%"class.re2::Prefilter::Info"* %162, %"class.re2::Prefilter::Info"* %148)
  br label %166

164:                                              ; preds = %152, %154
  %165 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6ConcatEPS1_S2_(%"class.re2::Prefilter::Info"* %145, %"class.re2::Prefilter::Info"* %148)
  br label %166

166:                                              ; preds = %164, %161
  %167 = phi %"class.re2::Prefilter::Info"* [ %163, %161 ], [ %146, %164 ]
  %168 = phi %"class.re2::Prefilter::Info"* [ null, %161 ], [ %165, %164 ]
  %169 = add nuw nsw i64 %144, 1
  %170 = icmp eq i64 %169, %13
  br i1 %170, label %139, label %143

171:                                              ; preds = %6
  %172 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, align 8
  %173 = icmp sgt i32 %5, 1
  br i1 %173, label %174, label %240

174:                                              ; preds = %171
  %175 = zext i32 %5 to i64
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i64 [ 1, %174 ], [ %182, %176 ]
  %178 = phi %"class.re2::Prefilter::Info"* [ %172, %174 ], [ %181, %176 ]
  %179 = getelementptr inbounds %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, i64 %177
  %180 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %179, align 8
  %181 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info3AltEPS1_S2_(%"class.re2::Prefilter::Info"* %178, %"class.re2::Prefilter::Info"* %180)
  %182 = add nuw nsw i64 %177, 1
  %183 = icmp eq i64 %182, %175
  br i1 %183, label %240, label %176

184:                                              ; preds = %6
  %185 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, align 8
  %186 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info5QuestEPS1_(%"class.re2::Prefilter::Info"* %185) #13
  br label %240

187:                                              ; preds = %6
  %188 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, align 8
  %189 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info5QuestEPS1_(%"class.re2::Prefilter::Info"* %188)
  br label %240

190:                                              ; preds = %6
  %191 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, align 8
  %192 = tail call i8* @_Znwm(i64 40) #14
  %193 = bitcast i8* %192 to %"class.re2::Prefilter::Info"*
  %194 = getelementptr inbounds i8, i8* %192, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 16, i1 false) #13
  %195 = bitcast i8* %192 to i8**
  store i8* %194, i8** %195, align 8
  %196 = getelementptr inbounds i8, i8* %192, i64 24
  store i8 0, i8* %196, align 8
  %197 = getelementptr inbounds i8, i8* %192, i64 32
  %198 = bitcast i8* %197 to %"class.re2::Prefilter"**
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %198, align 8
  %199 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 1
  %200 = load i8, i8* %199, align 8, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %190
  %203 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 2
  %204 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %203, align 8
  br label %209

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 0
  %207 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %206) #13
  %208 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 2
  store %"class.re2::Prefilter"* %207, %"class.re2::Prefilter"** %208, align 8
  store i8 0, i8* %199, align 8
  br label %209

209:                                              ; preds = %205, %202
  %210 = phi %"class.re2::Prefilter"* [ %204, %202 ], [ %207, %205 ]
  %211 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %211, align 8
  store %"class.re2::Prefilter"* %210, %"class.re2::Prefilter"** %198, align 8
  store i8 0, i8* %196, align 8
  %212 = icmp eq %"class.re2::Prefilter::Info"* %191, null
  br i1 %212, label %240, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %191, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %216 = bitcast %"class.std::__1::__tree_end_node"* %215 to %"class.std::__1::__tree_node"**
  %217 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %214, %"class.std::__1::__tree_node"* %217) #13
  %218 = bitcast %"class.re2::Prefilter::Info"* %191 to i8*
  tail call void @_ZdlPv(i8* %218) #14
  br label %240

219:                                              ; preds = %6, %6
  %220 = tail call i8* @_Znwm(i64 40) #14
  %221 = bitcast i8* %220 to %"class.re2::Prefilter::Info"*
  %222 = getelementptr inbounds i8, i8* %220, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 16, i1 false) #13
  %223 = bitcast i8* %220 to i8**
  store i8* %222, i8** %223, align 8
  %224 = getelementptr inbounds i8, i8* %220, i64 24
  store i8 0, i8* %224, align 8
  %225 = getelementptr inbounds i8, i8* %220, i64 32
  %226 = tail call i8* @_Znwm(i64 48) #14
  %227 = bitcast i8* %226 to i32*
  store i32 0, i32* %227, align 8
  %228 = getelementptr inbounds i8, i8* %226, i64 8
  %229 = bitcast i8* %225 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 32, i1 false) #13
  store i8* %226, i8** %229, align 8
  br label %240

230:                                              ; preds = %6
  %231 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %232 = bitcast %union.anon.15* %231 to %"class.re2::CharClass"**
  %233 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %232, align 8
  %234 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %0, i64 0, i32 1
  %235 = load i8, i8* %234, align 8, !range !2
  %236 = icmp ne i8 %235, 0
  %237 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter4Info6CClassEPNS_9CharClassEb(%"class.re2::CharClass"* %233, i1 zeroext %236)
  br label %240

238:                                              ; preds = %6
  %239 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %4, align 8
  br label %240

240:                                              ; preds = %176, %111, %127, %171, %107, %123, %213, %209, %78, %80, %238, %230, %219, %187, %184, %139, %86, %70, %57, %14
  %241 = phi %"class.re2::Prefilter::Info"* [ %56, %14 ], [ %237, %230 ], [ %221, %219 ], [ %189, %187 ], [ %186, %184 ], [ %142, %139 ], [ %88, %86 ], [ %79, %78 ], [ %81, %80 ], [ %71, %70 ], [ %59, %57 ], [ %239, %238 ], [ %193, %209 ], [ %193, %213 ], [ %124, %123 ], [ %108, %107 ], [ %172, %171 ], [ %134, %127 ], [ %118, %111 ], [ %181, %176 ]
  ret %"class.re2::Prefilter::Info"* %241
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1) #13
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #13
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #16
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #13
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter10FromRegexpEPNS_6RegexpE(%"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.re2::Regexp"* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"* nonnull %0) #13
  %5 = icmp eq %"class.re2::Regexp"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.re2::Prefilter::Info"* @_ZN3re29Prefilter9BuildInfoEPNS_6RegexpE(%"class.re2::Regexp"* nonnull %4)
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %4) #13
  %8 = icmp eq %"class.re2::Prefilter::Info"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 2
  %15 = load %"class.re2::Prefilter"*, %"class.re2::Prefilter"** %14, align 8
  br label %20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 0
  %18 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter9OrStringsEPNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.std::__1::set"* %17) #13
  %19 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 2
  store %"class.re2::Prefilter"* %18, %"class.re2::Prefilter"** %19, align 8
  store i8 0, i8* %10, align 8
  br label %20

20:                                               ; preds = %16, %13
  %21 = phi %"class.re2::Prefilter"* [ %15, %13 ], [ %18, %16 ]
  %22 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 2
  store %"class.re2::Prefilter"* null, %"class.re2::Prefilter"** %22, align 8
  %23 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.re2::Prefilter::Info", %"class.re2::Prefilter::Info"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %23, %"class.std::__1::__tree_node"* %26) #13
  %27 = bitcast %"class.re2::Prefilter::Info"* %7 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %3, %6, %20, %1
  %29 = phi %"class.re2::Prefilter"* [ null, %1 ], [ null, %3 ], [ %21, %20 ], [ null, %6 ]
  ret %"class.re2::Prefilter"* %29
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"*) local_unnamed_addr #4

declare void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"*) local_unnamed_addr #4

declare void @_ZN3re212StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prefilter"* @_ZN3re29Prefilter7FromRE2EPKNS_3RE2E(%"class.re2::RE2"* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.re2::RE2"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.re2::RE2", %"class.re2::RE2"* %0, i64 0, i32 2
  %5 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %4, align 8
  %6 = icmp eq %"class.re2::Regexp"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.re2::Prefilter"* @_ZN3re29Prefilter10FromRegexpEPNS_6RegexpE(%"class.re2::Regexp"* nonnull %5)
  br label %9

9:                                                ; preds = %7, %3, %1
  %10 = phi %"class.re2::Prefilter"* [ null, %1 ], [ %8, %7 ], [ null, %3 ]
  ret %"class.re2::Prefilter"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re29Prefilter4Info6WalkerD0Ev(%"class.re2::Prefilter::Info::Walker"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Prefilter::Info::Walker", %"class.re2::Prefilter::Info::Walker"* %0, i64 0, i32 0
  tail call void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED2Ev(%"class.re2::Regexp::Walker"* %2) #13
  %3 = bitcast %"class.re2::Prefilter::Info::Walker"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Prefilter::Info"* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE8PreVisitEPS0_S4_Pb(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Prefilter::Info"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Prefilter::Info"* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE4CopyES4_(%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Prefilter::Info"* %1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #14, !noalias !36
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !36
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #13, !noalias !36
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !36
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #13, !noalias !36
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #13
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #13
  %46 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #13
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare i32 @_ZN3re210runetocharEPcPKi(i8*, i32*) local_unnamed_addr #4

declare %"struct.re2::CaseFold"* @_ZN3re214LookupCaseFoldEPKNS_8CaseFoldEii(%"struct.re2::CaseFold"*, i32, i32) local_unnamed_addr #4

declare i32 @_ZN3re29ApplyFoldEPKNS_8CaseFoldEi(%"struct.re2::CaseFold"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEED0Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Prefilter::Info"* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE9PostVisitEPS0_S4_S4_PS4_i(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.re2::Prefilter::Info"* %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE5ResetEv(%"class.re2::Regexp::Walker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %100, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #13
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #13
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #13
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i64 0, i64 0), i64 42) #13
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 149) #13
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #13
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i64 16) #13
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #13
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %100, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.re2::WalkState"*** %50 to i64*
  %52 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  br label %53

53:                                               ; preds = %47, %97
  %54 = phi i64 [ %45, %47 ], [ %98, %97 ]
  %55 = load i64, i64* %48, align 8
  %56 = add i64 %54, -1
  %57 = add i64 %56, %55
  %58 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %59 = udiv i64 %57, 85
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %58, i64 %59
  %61 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, align 8
  %62 = urem i64 %57, 85
  %63 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %61, i64 %62, i32 5
  %64 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %63, align 8
  %65 = icmp eq %"class.re2::Prefilter::Info"** %64, null
  %66 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  br i1 %65, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast %"class.re2::Prefilter::Info"** %64 to i8*
  call void @_ZdaPv(i8* %68) #14
  %69 = load i64, i64* %3, align 8
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %52, align 8
  %72 = add i64 %69, -1
  br label %73

73:                                               ; preds = %67, %53
  %74 = phi i64 [ %72, %67 ], [ %56, %53 ]
  %75 = phi i64 [ %71, %67 ], [ %66, %53 ]
  %76 = phi i64 [ %70, %67 ], [ %55, %53 ]
  %77 = phi i64 [ %69, %67 ], [ %54, %53 ]
  store i64 %74, i64* %3, align 8
  %78 = load i64, i64* %51, align 8
  %79 = sub i64 %78, %75
  %80 = ashr exact i64 %79, 3
  %81 = icmp eq i64 %79, 0
  %82 = mul i64 %80, 85
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = sub i64 1, %77
  %86 = sub i64 %85, %76
  %87 = add i64 %86, %84
  %88 = icmp ult i64 %87, 170
  br i1 %88, label %97, label %89

89:                                               ; preds = %73
  %90 = inttoptr i64 %78 to %"struct.re2::WalkState"**
  %91 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 -1
  %92 = bitcast %"struct.re2::WalkState"** %91 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #14
  %94 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %50, align 8
  %95 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %94, i64 -1
  store %"struct.re2::WalkState"** %95, %"struct.re2::WalkState"*** %50, align 8
  %96 = load i64, i64* %3, align 8
  br label %97

97:                                               ; preds = %73, %89
  %98 = phi i64 [ %74, %73 ], [ %96, %89 ]
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %53

100:                                              ; preds = %97, %6, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #4

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #10

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #11

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.re2::Prefilter::Info"* @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE12WalkInternalEPS0_S4_b(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.LogMessage, align 8
  %6 = alloca { %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"* }, align 8
  %7 = alloca i8, align 1
  %8 = alloca { %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"* }, align 8
  tail call void @_ZN3re26Regexp6WalkerIPNS_9Prefilter4InfoEE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %9 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %11) #13
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8**
  %21 = inttoptr i64 %17 to i8*
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %12 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = bitcast i8* %26 to i64*
  store i64 %19, i64* %27, align 8
  %28 = load i8*, i8** %20, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 %31
  %33 = bitcast i8* %32 to %"class.std::__1::ios_base"*
  %34 = bitcast %"class.std::__1::basic_stringbuf"* %15 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %33, i8* %34) #13
  %35 = getelementptr inbounds i8, i8* %32, i64 136
  %36 = bitcast i8* %35 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %36, align 8
  %37 = getelementptr inbounds i8, i8* %32, i64 144
  %38 = bitcast i8* %37 to i32*
  store i32 -1, i32* %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %16) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %41 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i64 0, i64 0), i64 42) #13
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #13
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %45, i32 162) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i64 9) #13
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %11) #13
  br label %335

49:                                               ; preds = %4
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %51 = bitcast { %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"* }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %"struct.re2::WalkState"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"struct.re2::WalkState"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp eq i64 %58, 0
  %61 = mul i64 %59, 85
  %62 = add i64 %61, -1
  %63 = select i1 %60, i64 0, i64 %62
  %64 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %65
  %69 = icmp eq i64 %63, %68
  %70 = inttoptr i64 %57 to %"struct.re2::WalkState"**
  %71 = inttoptr i64 %54 to %"struct.re2::WalkState"**
  br i1 %69, label %72, label %79

72:                                               ; preds = %49
  %73 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %50, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %73) #13
  %74 = load i64, i64* %66, align 8
  %75 = load i64, i64* %64, align 8
  %76 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %77 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %78 = add i64 %75, %74
  br label %79

79:                                               ; preds = %72, %49
  %80 = phi i64 [ %78, %72 ], [ %68, %49 ]
  %81 = phi %"struct.re2::WalkState"** [ %77, %72 ], [ %71, %49 ]
  %82 = phi %"struct.re2::WalkState"** [ %76, %72 ], [ %70, %49 ]
  %83 = icmp eq %"struct.re2::WalkState"** %81, %82
  br i1 %83, label %91, label %84

84:                                               ; preds = %79
  %85 = udiv i64 %80, 85
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %82, i64 %85
  %87 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %86, align 8
  %88 = urem i64 %80, 85
  %89 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %87, i64 %88
  %90 = bitcast %"struct.re2::WalkState"* %89 to i8*
  br label %91

91:                                               ; preds = %79, %84
  %92 = phi i8* [ %90, %84 ], [ null, %79 ]
  %93 = bitcast i8* %92 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %93, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to i32*
  store i32 -1, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %92, i64 16
  %97 = bitcast i8* %96 to %"class.re2::Prefilter::Info"**
  store %"class.re2::Prefilter::Info"* %2, %"class.re2::Prefilter::Info"** %97, align 8
  %98 = getelementptr inbounds i8, i8* %92, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %51, i64 16, i1 false)
  %99 = getelementptr inbounds i8, i8* %92, i64 40
  %100 = bitcast i8* %99 to %"class.re2::Prefilter::Info"***
  store %"class.re2::Prefilter::Info"** null, %"class.re2::Prefilter::Info"*** %100, align 8
  %101 = load i64, i64* %66, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51)
  %103 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 3
  %104 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)***
  %105 = bitcast { %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"* }* %8 to i8*
  %106 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %50, i64 0, i32 0
  %107 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)***
  %108 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)***
  %109 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 2
  %110 = bitcast %"class.re2::Regexp::Walker"* %0 to %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)***
  br label %111

111:                                              ; preds = %333, %91
  %112 = phi i64 [ %334, %333 ], [ %102, %91 ]
  %113 = load i64, i64* %64, align 8
  %114 = add i64 %112, -1
  %115 = add i64 %114, %113
  %116 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %117 = udiv i64 %115, 85
  %118 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %116, i64 %117
  %119 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %118, align 8
  %120 = urem i64 %115, 85
  %121 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 0
  %122 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %121, align 8
  %123 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %160

126:                                              ; preds = %111
  %127 = load i32, i32* %103, align 4
  %128 = add nsw i32 %127, -1
  store i32 %128, i32* %103, align 4
  %129 = icmp slt i32 %127, 1
  br i1 %129, label %130, label %137

130:                                              ; preds = %126
  store i8 1, i8* %109, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %132 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %131, align 8
  %133 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)**, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)*** %110, align 8
  %134 = getelementptr inbounds %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)** %133, i64 5
  %135 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*)** %134, align 8
  %136 = call %"class.re2::Prefilter::Info"* %135(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Prefilter::Info"* %132) #13
  br label %281

137:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store i8 0, i8* %7, align 1
  %138 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %139 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %138, align 8
  %140 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)**, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)*** %104, align 8
  %141 = getelementptr inbounds %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)** %140, i64 2
  %142 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, i8*)** %141, align 8
  %143 = call %"class.re2::Prefilter::Info"* %142(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Prefilter::Info"* %139, i8* nonnull %7) #13
  %144 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  store %"class.re2::Prefilter::Info"* %143, %"class.re2::Prefilter::Info"** %144, align 8
  %145 = load i8, i8* %7, align 1, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %137
  store i32 0, i32* %123, align 8
  %148 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  store %"class.re2::Prefilter::Info"** null, %"class.re2::Prefilter::Info"*** %148, align 8
  %149 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 4
  %150 = load i16, i16* %149, align 2
  switch i16 %150, label %153 [
    i16 1, label %151
    i16 0, label %158
  ]

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 4
  store %"class.re2::Prefilter::Info"** %152, %"class.re2::Prefilter::Info"*** %148, align 8
  br label %158

153:                                              ; preds = %147
  %154 = zext i16 %150 to i64
  %155 = shl nuw nsw i64 %154, 3
  %156 = call i8* @_Znam(i64 %155) #14
  %157 = bitcast %"class.re2::Prefilter::Info"*** %148 to i8**
  store i8* %156, i8** %157, align 8
  br label %158

158:                                              ; preds = %147, %153, %151
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  br label %160

159:                                              ; preds = %137
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  br label %281

160:                                              ; preds = %158, %111
  %161 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 4
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  %165 = load i32, i32* %123, align 8
  br label %262

166:                                              ; preds = %160
  %167 = icmp eq i16 %162, 1
  %168 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %122, i64 0, i32 5
  br i1 %167, label %169, label %171

169:                                              ; preds = %166
  %170 = bitcast %union.anon.14* %168 to %"class.re2::Regexp"**
  br label %174

171:                                              ; preds = %166
  %172 = getelementptr inbounds %union.anon.14, %union.anon.14* %168, i64 0, i32 0
  %173 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %172, align 8
  br label %174

174:                                              ; preds = %169, %171
  %175 = phi %"class.re2::Regexp"** [ %170, %169 ], [ %173, %171 ]
  %176 = load i32, i32* %123, align 8
  %177 = zext i16 %162 to i32
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %179, label %262

179:                                              ; preds = %174
  %180 = icmp sgt i32 %176, 0
  %181 = and i1 %180, %3
  br i1 %181, label %187, label %182

182:                                              ; preds = %179
  %183 = sext i32 %176 to i64
  %184 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %183
  %185 = bitcast %"class.re2::Regexp"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  br label %213

187:                                              ; preds = %179
  %188 = add nsw i32 %176, -1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %189
  %191 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %190, align 8
  %192 = sext i32 %176 to i64
  %193 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %175, i64 %192
  %194 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %193, align 8
  %195 = icmp eq %"class.re2::Regexp"* %191, %194
  br i1 %195, label %198, label %196

196:                                              ; preds = %187
  %197 = ptrtoint %"class.re2::Regexp"* %194 to i64
  br label %213

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  %200 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %199, align 8
  %201 = getelementptr inbounds %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %200, i64 %189
  %202 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %201, align 8
  %203 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)**, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)*** %107, align 8
  %204 = getelementptr inbounds %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)** %203, i64 4
  %205 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Prefilter::Info"*)** %204, align 8
  %206 = call %"class.re2::Prefilter::Info"* %205(%"class.re2::Regexp::Walker"* %0, %"class.re2::Prefilter::Info"* %202) #13
  %207 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %199, align 8
  %208 = load i32, i32* %123, align 8
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %207, i64 %209
  store %"class.re2::Prefilter::Info"* %206, %"class.re2::Prefilter::Info"** %210, align 8
  %211 = load i32, i32* %123, align 8
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %123, align 8
  br label %333

213:                                              ; preds = %196, %182
  %214 = phi i64 [ %186, %182 ], [ %197, %196 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105)
  %215 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  %216 = bitcast %"class.re2::Prefilter::Info"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %53, align 8
  %219 = load i64, i64* %56, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = icmp eq i64 %220, 0
  %223 = mul i64 %221, 85
  %224 = add i64 %223, -1
  %225 = select i1 %222, i64 0, i64 %224
  %226 = load i64, i64* %64, align 8
  %227 = load i64, i64* %66, align 8
  %228 = add i64 %227, %226
  %229 = icmp eq i64 %225, %228
  %230 = inttoptr i64 %219 to %"struct.re2::WalkState"**
  %231 = inttoptr i64 %218 to %"struct.re2::WalkState"**
  br i1 %229, label %232, label %238

232:                                              ; preds = %213
  call void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %106) #13
  %233 = load i64, i64* %66, align 8
  %234 = load i64, i64* %64, align 8
  %235 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %236 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %237 = add i64 %234, %233
  br label %238

238:                                              ; preds = %232, %213
  %239 = phi i64 [ %237, %232 ], [ %228, %213 ]
  %240 = phi %"struct.re2::WalkState"** [ %236, %232 ], [ %231, %213 ]
  %241 = phi %"struct.re2::WalkState"** [ %235, %232 ], [ %230, %213 ]
  %242 = icmp eq %"struct.re2::WalkState"** %240, %241
  br i1 %242, label %250, label %243

243:                                              ; preds = %238
  %244 = udiv i64 %239, 85
  %245 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %241, i64 %244
  %246 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %245, align 8
  %247 = urem i64 %239, 85
  %248 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %246, i64 %247
  %249 = bitcast %"struct.re2::WalkState"* %248 to i8*
  br label %250

250:                                              ; preds = %238, %243
  %251 = phi i8* [ %249, %243 ], [ null, %238 ]
  %252 = bitcast i8* %251 to i64*
  store i64 %214, i64* %252, align 8
  %253 = getelementptr inbounds i8, i8* %251, i64 8
  %254 = bitcast i8* %253 to i32*
  store i32 -1, i32* %254, align 8
  %255 = getelementptr inbounds i8, i8* %251, i64 16
  %256 = bitcast i8* %255 to i64*
  store i64 %217, i64* %256, align 8
  %257 = getelementptr inbounds i8, i8* %251, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* nonnull align 8 %105, i64 16, i1 false)
  %258 = getelementptr inbounds i8, i8* %251, i64 40
  %259 = bitcast i8* %258 to %"class.re2::Prefilter::Info"***
  store %"class.re2::Prefilter::Info"** null, %"class.re2::Prefilter::Info"*** %259, align 8
  %260 = load i64, i64* %66, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105)
  br label %333

262:                                              ; preds = %164, %174
  %263 = phi i32 [ %165, %164 ], [ %176, %174 ]
  %264 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 2
  %265 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %264, align 8
  %266 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 3
  %267 = load %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %266, align 8
  %268 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %119, i64 %120, i32 5
  %269 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %268, align 8
  %270 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)**, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)*** %108, align 8
  %271 = getelementptr inbounds %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)** %270, i64 3
  %272 = load %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)*, %"class.re2::Prefilter::Info"* (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"**, i32)** %271, align 8
  %273 = call %"class.re2::Prefilter::Info"* %272(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %122, %"class.re2::Prefilter::Info"* %265, %"class.re2::Prefilter::Info"* %267, %"class.re2::Prefilter::Info"** %269, i32 %263) #13
  %274 = load i16, i16* %161, align 2
  %275 = icmp ugt i16 %274, 1
  br i1 %275, label %276, label %281

276:                                              ; preds = %262
  %277 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %268, align 8
  %278 = icmp eq %"class.re2::Prefilter::Info"** %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = bitcast %"class.re2::Prefilter::Info"** %277 to i8*
  call void @_ZdaPv(i8* %280) #14
  br label %281

281:                                              ; preds = %159, %262, %279, %276, %130
  %282 = phi %"class.re2::Prefilter::Info"* [ %136, %130 ], [ %273, %276 ], [ %273, %279 ], [ %273, %262 ], [ %143, %159 ]
  %283 = load i64, i64* %66, align 8
  %284 = load i64, i64* %64, align 8
  %285 = add i64 %283, -1
  store i64 %285, i64* %66, align 8
  %286 = load i64, i64* %53, align 8
  %287 = load i64, i64* %56, align 8
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 3
  %290 = icmp eq i64 %288, 0
  %291 = mul i64 %289, 85
  %292 = add i64 %291, -1
  %293 = select i1 %290, i64 0, i64 %292
  %294 = sub i64 1, %283
  %295 = sub i64 %294, %284
  %296 = add i64 %295, %293
  %297 = icmp ult i64 %296, 170
  br i1 %297, label %306, label %298

298:                                              ; preds = %281
  %299 = inttoptr i64 %286 to %"struct.re2::WalkState"**
  %300 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %299, i64 -1
  %301 = bitcast %"struct.re2::WalkState"** %300 to i8**
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #14
  %303 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %52, align 8
  %304 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %303, i64 -1
  store %"struct.re2::WalkState"** %304, %"struct.re2::WalkState"*** %52, align 8
  %305 = load i64, i64* %66, align 8
  br label %306

306:                                              ; preds = %281, %298
  %307 = phi i64 [ %285, %281 ], [ %305, %298 ]
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %335, label %309

309:                                              ; preds = %306
  %310 = load i64, i64* %64, align 8
  %311 = add i64 %307, -1
  %312 = add i64 %311, %310
  %313 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %55, align 8
  %314 = udiv i64 %312, 85
  %315 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %313, i64 %314
  %316 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %315, align 8
  %317 = urem i64 %312, 85
  %318 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 5
  %319 = load %"class.re2::Prefilter::Info"**, %"class.re2::Prefilter::Info"*** %318, align 8
  %320 = icmp eq %"class.re2::Prefilter::Info"** %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %309
  %322 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 1
  %323 = load i32, i32* %322, align 8
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %"class.re2::Prefilter::Info"*, %"class.re2::Prefilter::Info"** %319, i64 %324
  br label %328

326:                                              ; preds = %309
  %327 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 4
  br label %328

328:                                              ; preds = %326, %321
  %329 = phi %"class.re2::Prefilter::Info"** [ %327, %326 ], [ %325, %321 ]
  store %"class.re2::Prefilter::Info"* %282, %"class.re2::Prefilter::Info"** %329, align 8
  %330 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %316, i64 %317, i32 1
  %331 = load i32, i32* %330, align 8
  %332 = add nsw i32 %331, 1
  store i32 %332, i32* %330, align 8
  br label %333

333:                                              ; preds = %198, %250, %328
  %334 = load i64, i64* %66, align 8
  br label %111

335:                                              ; preds = %306, %10
  %336 = phi %"class.re2::Prefilter::Info"* [ %2, %10 ], [ %282, %306 ]
  ret %"class.re2::Prefilter::Info"* %336
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.re2::WalkState"*, align 8
  %3 = alloca %"struct.re2::WalkState"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.47", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 84
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -85
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = bitcast %"struct.re2::WalkState"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  store %"struct.re2::WalkState"** %14, %"struct.re2::WalkState"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %17, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %16, %18
  %20 = ptrtoint %"struct.re2::WalkState"** %18 to i64
  %21 = bitcast %"struct.re2::WalkState"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  %25 = icmp ugt %"struct.re2::WalkState"** %14, %24
  %26 = ptrtoint %"struct.re2::WalkState"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %14, i64 %32
  %34 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.re2::WalkState"** %33 to i8*
  %40 = bitcast %"struct.re2::WalkState"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.re2::WalkState"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  store %"struct.re2::WalkState"** %44, %"struct.re2::WalkState"*** %15, align 8
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %43, i64 %32
  store %"struct.re2::WalkState"** %45, %"struct.re2::WalkState"*** %10, align 8
  %46 = bitcast %"struct.re2::WalkState"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.re2::WalkState"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to %"struct.re2::WalkState"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %57
  %63 = ptrtoint %"struct.re2::WalkState"** %62 to i64
  %64 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %53
  %65 = ptrtoint %"struct.re2::WalkState"** %64 to i64
  %66 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %67 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.re2::WalkState"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.re2::WalkState"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.re2::WalkState"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %79, i64 1
  %87 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  %88 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !39

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.re2::WalkState"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.re2::WalkState"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.re2::WalkState"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.re2::WalkState"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 1
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 1
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 2
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 2
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 3
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 3
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 4
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 4
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 5
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 5
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 6
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 6
  %132 = bitcast %"struct.re2::WalkState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.re2::WalkState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 7
  %136 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 7
  %137 = bitcast %"struct.re2::WalkState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.re2::WalkState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 8
  %141 = ptrtoint %"struct.re2::WalkState"** %140 to i64
  %142 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 8
  %143 = icmp eq %"struct.re2::WalkState"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.re2::WalkState"** %70 to i64
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.re2::WalkState"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.re2::WalkState"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.re2::WalkState"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast %"struct.re2::WalkState"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %160, i64 1
  store %"struct.re2::WalkState"** %161, %"struct.re2::WalkState"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.re2::WalkState"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.re2::WalkState"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.re2::WalkState"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.re2::WalkState"**
  %181 = inttoptr i64 %169 to %"struct.re2::WalkState"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.re2::WalkState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4080) #14
  %187 = bitcast %"struct.re2::WalkState"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.re2::WalkState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4080) #14
  %191 = bitcast %"struct.re2::WalkState"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %193 = bitcast %"struct.re2::WalkState"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %192, i64 1
  store %"struct.re2::WalkState"** %195, %"struct.re2::WalkState"*** %167, align 8
  %196 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %197 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %172, align 8
  %198 = icmp eq %"struct.re2::WalkState"** %196, %197
  %199 = ptrtoint %"struct.re2::WalkState"** %197 to i64
  %200 = bitcast %"struct.re2::WalkState"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  %204 = icmp ugt %"struct.re2::WalkState"** %195, %203
  %205 = ptrtoint %"struct.re2::WalkState"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %195, i64 %211
  %213 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.re2::WalkState"** %212 to i8*
  %219 = bitcast %"struct.re2::WalkState"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.re2::WalkState"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %212, i64 %215
  store %"struct.re2::WalkState"** %223, %"struct.re2::WalkState"*** %164, align 8
  %224 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %222, i64 %211
  store %"struct.re2::WalkState"** %224, %"struct.re2::WalkState"*** %167, align 8
  %225 = bitcast %"struct.re2::WalkState"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #15
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to %"struct.re2::WalkState"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %234
  %240 = ptrtoint %"struct.re2::WalkState"** %239 to i64
  %241 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %230
  %242 = ptrtoint %"struct.re2::WalkState"** %241 to i64
  %243 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %244 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.re2::WalkState"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.re2::WalkState"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.re2::WalkState"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %256, i64 1
  %264 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  %265 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !41

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.re2::WalkState"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.re2::WalkState"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.re2::WalkState"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.re2::WalkState"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.re2::WalkState"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 1
  %283 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 1
  %284 = bitcast %"struct.re2::WalkState"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.re2::WalkState"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 2
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 2
  %289 = bitcast %"struct.re2::WalkState"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.re2::WalkState"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 3
  %293 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 3
  %294 = bitcast %"struct.re2::WalkState"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.re2::WalkState"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 4
  %298 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 4
  %299 = bitcast %"struct.re2::WalkState"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.re2::WalkState"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 5
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 5
  %304 = bitcast %"struct.re2::WalkState"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.re2::WalkState"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 6
  %308 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 6
  %309 = bitcast %"struct.re2::WalkState"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.re2::WalkState"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 7
  %313 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 7
  %314 = bitcast %"struct.re2::WalkState"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.re2::WalkState"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 8
  %318 = ptrtoint %"struct.re2::WalkState"** %317 to i64
  %319 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 8
  %320 = icmp eq %"struct.re2::WalkState"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.re2::WalkState"** %247 to i64
  %323 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.re2::WalkState"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.re2::WalkState"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.re2::WalkState"** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast %"struct.re2::WalkState"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %336 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %335, i64 1
  store %"struct.re2::WalkState"** %336, %"struct.re2::WalkState"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.re2::WalkState"** null, %"struct.re2::WalkState"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.31"** %342 to %"class.std::__1::__compressed_pair.28"**
  store %"class.std::__1::__compressed_pair.28"* %346, %"class.std::__1::__compressed_pair.28"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #15
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to %"struct.re2::WalkState"**
  %355 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %171
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %339, align 8
  %357 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %345
  store %"struct.re2::WalkState"** %357, %"struct.re2::WalkState"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4080) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.re2::WalkState"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.re2::WalkState"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.re2::WalkState"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %356, i64 %370
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %339, align 8
  %372 = ptrtoint %"struct.re2::WalkState"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #15
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %382 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to %"struct.re2::WalkState"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %383
  %389 = ptrtoint %"struct.re2::WalkState"** %388 to i64
  %390 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %377
  %391 = ptrtoint %"struct.re2::WalkState"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %395 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %396 = ptrtoint %"struct.re2::WalkState"** %395 to i64
  %397 = ptrtoint %"struct.re2::WalkState"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.re2::WalkState"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.re2::WalkState"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.re2::WalkState"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.re2::WalkState"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %406, i64 1
  store %"struct.re2::WalkState"** %408, %"struct.re2::WalkState"*** %340, align 8
  %409 = icmp eq %"struct.re2::WalkState"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.re2::WalkState"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %413 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %414 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %415 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.re2::WalkState"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.47"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.re2::WalkState"**
  %441 = inttoptr i64 %434 to %"struct.re2::WalkState"**
  %442 = icmp eq %"struct.re2::WalkState"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 -1
  %445 = ptrtoint %"struct.re2::WalkState"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 %448
  store %"struct.re2::WalkState"** %449, %"struct.re2::WalkState"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.re2::WalkState"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEERNS_9allocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.47"* nonnull %4, %"struct.re2::WalkState"** dereferenceable(8) %457)
  %458 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %459 = icmp eq %"struct.re2::WalkState"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  %9 = bitcast %"struct.re2::WalkState"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  %15 = icmp ugt %"struct.re2::WalkState"** %12, %14
  %16 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %12, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.re2::WalkState"** %23 to i8*
  %30 = bitcast %"struct.re2::WalkState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.re2::WalkState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %26
  store %"struct.re2::WalkState"** %34, %"struct.re2::WalkState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %22
  store %"struct.re2::WalkState"** %35, %"struct.re2::WalkState"*** %11, align 8
  %36 = bitcast %"struct.re2::WalkState"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.re2::WalkState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to %"struct.re2::WalkState"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %47
  %53 = ptrtoint %"struct.re2::WalkState"** %52 to i64
  %54 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %43
  %55 = ptrtoint %"struct.re2::WalkState"** %54 to i64
  %56 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.re2::WalkState"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.re2::WalkState"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.re2::WalkState"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %69, i64 1
  %77 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  %78 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !42

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.re2::WalkState"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.re2::WalkState"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.re2::WalkState"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.re2::WalkState"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.re2::WalkState"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 1
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 1
  %97 = bitcast %"struct.re2::WalkState"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.re2::WalkState"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 2
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 2
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.re2::WalkState"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 3
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 3
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 4
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 4
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 5
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 5
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 6
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 6
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 7
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 7
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 8
  %131 = ptrtoint %"struct.re2::WalkState"** %130 to i64
  %132 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 8
  %133 = icmp eq %"struct.re2::WalkState"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.re2::WalkState"** %60 to i64
  %136 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.re2::WalkState"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.re2::WalkState"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.re2::WalkState"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.re2::WalkState"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast %"struct.re2::WalkState"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %152, i64 1
  store %"struct.re2::WalkState"** %153, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !43

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateIPNS1_9Prefilter4InfoEEERNS_9allocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.47"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.47", %"struct.std::__1::__split_buffer.47"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.47"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !44

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { cold nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3re2L12RuneToStringEi: argument 0"}
!11 = distinct !{!11, !"_ZN3re2L12RuneToStringEi"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3re2L18RuneToStringLatin1Ei: argument 0"}
!17 = distinct !{!17, !"_ZN3re2L18RuneToStringLatin1Ei"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3re2L18RuneToStringLatin1Ei: argument 0"}
!26 = distinct !{!26, !"_ZN3re2L18RuneToStringLatin1Ei"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3re2L12RuneToStringEi: argument 0"}
!32 = distinct !{!32, !"_ZN3re2L12RuneToStringEi"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!39 = distinct !{!39, !40}
!40 = !{!"llvm.loop.unroll.disable"}
!41 = distinct !{!41, !40}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !40}
!44 = distinct !{!44, !40}
