; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLUniformHandler.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLUniformHandler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%class.GrFragmentProcessor = type opaque
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrGLSLUniformHandler17getUniformMappingERK19GrFragmentProcessor8SkString(%class.GrShaderVar* noalias sret, %class.GrGLSLUniformHandler*, %class.GrFragmentProcessor* readnone, %class.SkString*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*)***
  %6 = load i32 (%class.GrGLSLUniformHandler*)**, i32 (%class.GrGLSLUniformHandler*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*)*, i32 (%class.GrGLSLUniformHandler*)** %6, i64 4
  %8 = load i32 (%class.GrGLSLUniformHandler*)*, i32 (%class.GrGLSLUniformHandler*)** %7, align 8
  %9 = tail call i32 %8(%class.GrGLSLUniformHandler* %1) #3
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %37

11:                                               ; preds = %4
  %12 = bitcast %class.GrGLSLUniformHandler* %1 to %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)***
  br label %13

13:                                               ; preds = %11, %26
  %14 = phi i32 [ %9, %11 ], [ %15, %26 ]
  %15 = add nsw i32 %14, -1
  %16 = load %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)**, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*** %12, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)** %16, i64 6
  %18 = load %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)** %17, align 8
  %19 = tail call dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* %18(%class.GrGLSLUniformHandler* %1, i32 %15) #3
  %20 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 2
  %21 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %20, align 8
  %22 = icmp eq %class.GrFragmentProcessor* %21, %2
  br i1 %22, label %23, label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 3
  %25 = tail call zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* %24, %class.SkString* dereferenceable(8) %3) #3
  br i1 %25, label %28, label %26

26:                                               ; preds = %13, %23
  %27 = icmp sgt i32 %15, 0
  br i1 %27, label %13, label %37

28:                                               ; preds = %23
  %29 = bitcast %class.GrShaderVar* %0 to i8*
  %30 = bitcast %"struct.GrGLSLUniformHandler::UniformInfo"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 12, i1 false) #3
  %31 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %31, %class.SkString* dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 4
  %34 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %33, %class.SkString* dereferenceable(8) %34) #3
  %35 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %35, %class.SkString* dereferenceable(8) %36) #3
  br label %44

37:                                               ; preds = %26, %4
  %38 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 1
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 2
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %41) #3
  %42 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %42) #3
  %43 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 5
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %43) #3
  br label %44

44:                                               ; preds = %28, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLSLUniformHandler25liftUniformToVertexShaderERK19GrFragmentProcessor8SkString(%class.GrShaderVar* noalias sret, %class.GrGLSLUniformHandler*, %class.GrFragmentProcessor* readnone, %class.SkString*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*)***
  %6 = load i32 (%class.GrGLSLUniformHandler*)**, i32 (%class.GrGLSLUniformHandler*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*)*, i32 (%class.GrGLSLUniformHandler*)** %6, i64 4
  %8 = load i32 (%class.GrGLSLUniformHandler*)*, i32 (%class.GrGLSLUniformHandler*)** %7, align 8
  %9 = tail call i32 %8(%class.GrGLSLUniformHandler* %1) #3
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %40

11:                                               ; preds = %4
  %12 = bitcast %class.GrGLSLUniformHandler* %1 to %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)***
  br label %13

13:                                               ; preds = %11, %26
  %14 = phi i32 [ %9, %11 ], [ %15, %26 ]
  %15 = add nsw i32 %14, -1
  %16 = load %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)**, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*** %12, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)** %16, i64 5
  %18 = load %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)*, %"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrGLSLUniformHandler*, i32)** %17, align 8
  %19 = tail call dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* %18(%class.GrGLSLUniformHandler* %1, i32 %15) #3
  %20 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 2
  %21 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %20, align 8
  %22 = icmp eq %class.GrFragmentProcessor* %21, %2
  br i1 %22, label %23, label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 3
  %25 = tail call zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* %24, %class.SkString* dereferenceable(8) %3) #3
  br i1 %25, label %28, label %26

26:                                               ; preds = %13, %23
  %27 = icmp sgt i32 %15, 0
  br i1 %27, label %13, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = or i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = bitcast %class.GrShaderVar* %0 to i8*
  %33 = bitcast %"struct.GrGLSLUniformHandler::UniformInfo"* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 12, i1 false) #3
  %34 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %34, %class.SkString* dereferenceable(8) %35) #3
  %36 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %36, %class.SkString* dereferenceable(8) %37) #3
  %38 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"struct.GrGLSLUniformHandler::UniformInfo", %"struct.GrGLSLUniformHandler::UniformInfo"* %19, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %39) #3
  br label %47

40:                                               ; preds = %26, %4
  %41 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 0
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 1
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 2
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %44) #3
  %45 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %45) #3
  %46 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 5
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %46) #3
  br label %47

47:                                               ; preds = %28, %40
  ret void
}

declare zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
