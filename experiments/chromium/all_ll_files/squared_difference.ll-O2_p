; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/squared_difference.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/squared_difference.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::squared_difference::OpData" = type { i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }

$_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIfEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_ = comdat any

$_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIiEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_ = comdat any

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIfEET_S4_S4_ = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIiEET_S4_S4_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [75 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/squared_difference.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@.str.12 = private unnamed_addr constant [63 x i8] c"SquaredDifference only supports FLOAT32 and INT32 now, got %d.\00", align 1
@_ZZN6tflite3ops7builtin27Register_SQUARED_DIFFERENCEEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin18squared_difference4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin18squared_difference4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin18squared_difference7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin18squared_difference4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin18squared_difference4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 1) #9
  store i8 0, i8* %4, align 1
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin18squared_difference4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #9
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin18squared_difference7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %"struct.tflite::ops::builtin::squared_difference::OpData"**
  %6 = load %"struct.tflite::ops::builtin::squared_difference::OpData"*, %"struct.tflite::ops::builtin::squared_difference::OpData"** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %14 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %13, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %14(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %10, i32 2) #10
  br label %91

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %23 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %22, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %23(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %19, i32 1) #10
  br label %91

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %24, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %24 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %62 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %61, align 8
  %63 = tail call i8* @TfLiteTypeGetName(i32 %56) #10
  %64 = load i32, i32* %57, align 8
  %65 = tail call i8* @TfLiteTypeGetName(i32 %64) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %62(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* %63, i8* %65) #10
  br label %91

66:                                               ; preds = %53
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  store i32 %56, i32* %67, align 8
  %68 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44) #10
  %69 = xor i1 %68, true
  %70 = getelementptr inbounds %"struct.tflite::ops::builtin::squared_difference::OpData", %"struct.tflite::ops::builtin::squared_difference::OpData"* %6, i64 0, i32 0
  %71 = zext i1 %69 to i8
  store i8 %71, i8* %70, align 1
  %72 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %73 = load i8, i8* %70, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %66
  %76 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteIntArray** nonnull %3) #10
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %89

78:                                               ; preds = %75
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %84

80:                                               ; preds = %66
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8
  %83 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %82) #10
  store %struct.TfLiteIntArray* %83, %struct.TfLiteIntArray** %3, align 8
  br label %84

84:                                               ; preds = %78, %80
  %85 = phi %struct.TfLiteIntArray* [ %79, %78 ], [ %83, %80 ]
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %87 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %86, align 8
  %88 = call i32 %87(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %54, %struct.TfLiteIntArray* %85) #10
  br label %89

89:                                               ; preds = %75, %84
  %90 = phi i32 [ %88, %84 ], [ %76, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  br label %91

91:                                               ; preds = %60, %89, %21, %12
  %92 = phi i32 [ 1, %12 ], [ 1, %21 ], [ 1, %60 ], [ %90, %89 ]
  ret i32 %92
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #5

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #5

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin18squared_difference4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %4 = bitcast i8** %3 to %"struct.tflite::ops::builtin::squared_difference::OpData"**
  %5 = load %"struct.tflite::ops::builtin::squared_difference::OpData"*, %"struct.tflite::ops::builtin::squared_difference::OpData"** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 %14
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi %struct.TfLiteTensor* [ %15, %11 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %23 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %22, align 8
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 %24
  br label %26

26:                                               ; preds = %16, %21
  %27 = phi %struct.TfLiteTensor* [ %25, %21 ], [ null, %16 ]
  %28 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %29 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %28, align 8
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %29, i64 0, i32 1, i64 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %35 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %34, align 8
  %36 = sext i32 %31 to i64
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 %36
  br label %38

38:                                               ; preds = %26, %33
  %39 = phi %struct.TfLiteTensor* [ %37, %33 ], [ null, %26 ]
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %44 [
    i32 1, label %42
    i32 2, label %43
  ]

42:                                               ; preds = %38
  tail call void @_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIfEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::squared_difference::OpData"* %5, %struct.TfLiteTensor* %17, %struct.TfLiteTensor* %27, %struct.TfLiteTensor* %39)
  br label %47

43:                                               ; preds = %38
  tail call void @_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIiEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %"struct.tflite::ops::builtin::squared_difference::OpData"* %5, %struct.TfLiteTensor* %17, %struct.TfLiteTensor* %27, %struct.TfLiteTensor* %39)
  br label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %46 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %45, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %46(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.12, i64 0, i64 0), i32 %41) #10
  br label %47

47:                                               ; preds = %42, %43, %44
  %48 = phi i32 [ 1, %44 ], [ 0, %43 ], [ 0, %42 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIfEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::squared_difference::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = getelementptr inbounds %"struct.tflite::ops::builtin::squared_difference::OpData", %"struct.tflite::ops::builtin::squared_difference::OpData"* %2, i64 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %148, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %20, align 8, !alias.scope !3
  br label %49

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %23 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %22, align 8, !noalias !3
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !3
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %23, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %25, i32* %27, align 8, !alias.scope !3
  %28 = icmp sgt i32 %25, 5
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = sext i32 %25 to i64
  %31 = shl nsw i64 %30, 2
  %32 = tail call i8* @_Znam(i64 %31) #9, !noalias !3
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %34 = bitcast i32** %33 to i8**
  store i8* %32, i8** %34, align 8, !alias.scope !3
  %35 = bitcast i8* %32 to i32*
  br label %41

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to i32*
  %39 = sext i32 %25 to i64
  %40 = shl nsw i64 %39, 2
  br label %41

41:                                               ; preds = %36, %29
  %42 = phi i64 [ %31, %29 ], [ %40, %36 ]
  %43 = phi i32* [ %35, %29 ], [ %38, %36 ]
  %44 = bitcast i32* %43 to i8*
  %45 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 %42, i1 false) #10
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %47 = bitcast %union.TfLitePtrUnion* %46 to float**
  %48 = load float*, float** %47, align 8
  br label %49

49:                                               ; preds = %19, %41
  %50 = phi float* [ %48, %41 ], [ null, %19 ]
  %51 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #10
  %52 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %54, align 8, !alias.scope !6
  br label %83

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %57 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %56, align 8, !noalias !6
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !6
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %57, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %59, i32* %61, align 8, !alias.scope !6
  %62 = icmp sgt i32 %59, 5
  br i1 %62, label %63, label %70

63:                                               ; preds = %55
  %64 = sext i32 %59 to i64
  %65 = shl nsw i64 %64, 2
  %66 = tail call i8* @_Znam(i64 %65) #9, !noalias !6
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %68 = bitcast i32** %67 to i8**
  store i8* %66, i8** %68, align 8, !alias.scope !6
  %69 = bitcast i8* %66 to i32*
  br label %75

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %72 = bitcast %union.anon* %71 to i32*
  %73 = sext i32 %59 to i64
  %74 = shl nsw i64 %73, 2
  br label %75

75:                                               ; preds = %70, %63
  %76 = phi i64 [ %65, %63 ], [ %74, %70 ]
  %77 = phi i32* [ %69, %63 ], [ %72, %70 ]
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %76, i1 false) #10
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %81 = bitcast %union.TfLitePtrUnion* %80 to float**
  %82 = load float*, float** %81, align 8
  br label %83

83:                                               ; preds = %53, %75
  %84 = phi float* [ %82, %75 ], [ null, %53 ]
  %85 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #10
  %86 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %88, align 8, !alias.scope !9
  br label %117

89:                                               ; preds = %83
  %90 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %91 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %90, align 8, !noalias !9
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4, !noalias !9
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 0
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %93, i32* %95, align 8, !alias.scope !9
  %96 = icmp sgt i32 %93, 5
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  %98 = sext i32 %93 to i64
  %99 = shl nsw i64 %98, 2
  %100 = tail call i8* @_Znam(i64 %99) #9, !noalias !9
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %102 = bitcast i32** %101 to i8**
  store i8* %100, i8** %102, align 8, !alias.scope !9
  %103 = bitcast i8* %100 to i32*
  br label %109

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %106 = bitcast %union.anon* %105 to i32*
  %107 = sext i32 %93 to i64
  %108 = shl nsw i64 %107, 2
  br label %109

109:                                              ; preds = %104, %97
  %110 = phi i64 [ %99, %97 ], [ %108, %104 ]
  %111 = phi i32* [ %103, %97 ], [ %106, %104 ]
  %112 = bitcast i32* %111 to i8*
  %113 = bitcast i32* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 %110, i1 false) #10
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %115 = bitcast %union.TfLitePtrUnion* %114 to float**
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %87, %109
  %118 = phi float* [ %116, %109 ], [ null, %87 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %50, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %84, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %118, float (float, float)* nonnull @_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIfEET_S4_S4_)
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp sgt i32 %120, 5
  br i1 %121, label %122, label %128

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = icmp eq i32* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %127) #9
  br label %128

128:                                              ; preds = %117, %122, %126
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #10
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp sgt i32 %130, 5
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %137) #9
  br label %138

138:                                              ; preds = %128, %132, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #10
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp sgt i32 %140, 5
  br i1 %141, label %142, label %531

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %144, null
  br i1 %145, label %531, label %146

146:                                              ; preds = %142
  %147 = bitcast i32* %144 to i8*
  call void @_ZdaPv(i8* %147) #9
  br label %531

148:                                              ; preds = %6
  %149 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #10
  %150 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %150, label %151, label %153

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %152, align 8, !alias.scope !12
  br label %182

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %155 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %154, align 8, !noalias !12
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4, !noalias !12
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 0
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %157, i32* %159, align 8, !alias.scope !12
  %160 = icmp sgt i32 %157, 5
  br i1 %160, label %161, label %168

161:                                              ; preds = %153
  %162 = sext i32 %157 to i64
  %163 = shl nsw i64 %162, 2
  %164 = tail call i8* @_Znam(i64 %163) #9, !noalias !12
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %166 = bitcast i32** %165 to i8**
  store i8* %164, i8** %166, align 8, !alias.scope !12
  %167 = bitcast i8* %164 to i32*
  br label %173

168:                                              ; preds = %153
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %170 = bitcast %union.anon* %169 to i32*
  %171 = sext i32 %157 to i64
  %172 = shl nsw i64 %171, 2
  br label %173

173:                                              ; preds = %168, %161
  %174 = phi i64 [ %163, %161 ], [ %172, %168 ]
  %175 = phi i32* [ %167, %161 ], [ %170, %168 ]
  %176 = bitcast i32* %175 to i8*
  %177 = bitcast i32* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %174, i1 false) #10
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %179 = bitcast %union.TfLitePtrUnion* %178 to float**
  %180 = load float*, float** %179, align 8
  %181 = bitcast float* %180 to i8*
  br label %182

182:                                              ; preds = %151, %173
  %183 = phi i32 [ %157, %173 ], [ 0, %151 ]
  %184 = phi i8* [ %181, %173 ], [ null, %151 ]
  %185 = phi float* [ %180, %173 ], [ null, %151 ]
  %186 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #10
  %187 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %187, label %188, label %190

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %189, align 8, !alias.scope !15
  br label %219

190:                                              ; preds = %182
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %191, align 8, !noalias !15
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 0
  %194 = load i32, i32* %193, align 4, !noalias !15
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 0
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %194, i32* %196, align 8, !alias.scope !15
  %197 = icmp sgt i32 %194, 5
  br i1 %197, label %198, label %205

198:                                              ; preds = %190
  %199 = sext i32 %194 to i64
  %200 = shl nsw i64 %199, 2
  %201 = tail call i8* @_Znam(i64 %200) #9, !noalias !15
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %203 = bitcast i32** %202 to i8**
  store i8* %201, i8** %203, align 8, !alias.scope !15
  %204 = bitcast i8* %201 to i32*
  br label %210

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %207 = bitcast %union.anon* %206 to i32*
  %208 = sext i32 %194 to i64
  %209 = shl nsw i64 %208, 2
  br label %210

210:                                              ; preds = %205, %198
  %211 = phi i64 [ %200, %198 ], [ %209, %205 ]
  %212 = phi i32* [ %204, %198 ], [ %207, %205 ]
  %213 = bitcast i32* %212 to i8*
  %214 = bitcast i32* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %213, i8* align 4 %214, i64 %211, i1 false) #10
  %215 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %216 = bitcast %union.TfLitePtrUnion* %215 to float**
  %217 = load float*, float** %216, align 8
  %218 = bitcast float* %217 to i8*
  br label %219

219:                                              ; preds = %188, %210
  %220 = phi i32 [ %194, %210 ], [ 0, %188 ]
  %221 = phi i8* [ %218, %210 ], [ null, %188 ]
  %222 = phi float* [ %217, %210 ], [ null, %188 ]
  %223 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223) #10
  %224 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %224, label %225, label %227

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %226, align 8, !alias.scope !18
  br label %256

227:                                              ; preds = %219
  %228 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %229 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %228, align 8, !noalias !18
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 0
  %231 = load i32, i32* %230, align 4, !noalias !18
  %232 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 1, i64 0
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %231, i32* %233, align 8, !alias.scope !18
  %234 = icmp sgt i32 %231, 5
  br i1 %234, label %235, label %242

235:                                              ; preds = %227
  %236 = sext i32 %231 to i64
  %237 = shl nsw i64 %236, 2
  %238 = tail call i8* @_Znam(i64 %237) #9, !noalias !18
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %240 = bitcast i32** %239 to i8**
  store i8* %238, i8** %240, align 8, !alias.scope !18
  %241 = bitcast i8* %238 to i32*
  br label %247

242:                                              ; preds = %227
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %244 = bitcast %union.anon* %243 to i32*
  %245 = sext i32 %231 to i64
  %246 = shl nsw i64 %245, 2
  br label %247

247:                                              ; preds = %242, %235
  %248 = phi i64 [ %237, %235 ], [ %246, %242 ]
  %249 = phi i32* [ %241, %235 ], [ %244, %242 ]
  %250 = bitcast i32* %249 to i8*
  %251 = bitcast i32* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %251, i64 %248, i1 false) #10
  %252 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %253 = bitcast %union.TfLitePtrUnion* %252 to float**
  %254 = load float*, float** %253, align 8
  %255 = bitcast float* %254 to i8*
  br label %256

256:                                              ; preds = %225, %247
  %257 = phi i32 [ %231, %247 ], [ 0, %225 ]
  %258 = phi i8* [ %255, %247 ], [ null, %225 ]
  %259 = phi float* [ %254, %247 ], [ null, %225 ]
  %260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %261 = icmp sgt i32 %183, 5
  br i1 %261, label %262, label %265

262:                                              ; preds = %256
  %263 = getelementptr inbounds %union.anon, %union.anon* %260, i64 0, i32 0
  %264 = load i32*, i32** %263, align 8
  br label %268

265:                                              ; preds = %256
  %266 = bitcast %union.anon* %260 to i32*
  %267 = icmp sgt i32 %183, 0
  br i1 %267, label %268, label %371

268:                                              ; preds = %265, %262
  %269 = phi i32* [ %264, %262 ], [ %266, %265 ]
  %270 = zext i32 %183 to i64
  %271 = icmp ult i32 %183, 8
  br i1 %271, label %357, label %272

272:                                              ; preds = %268
  %273 = and i64 %270, 4294967288
  %274 = add nsw i64 %273, -8
  %275 = lshr exact i64 %274, 3
  %276 = add nuw nsw i64 %275, 1
  %277 = and i64 %276, 3
  %278 = icmp ult i64 %274, 24
  br i1 %278, label %324, label %279

279:                                              ; preds = %272
  %280 = sub nsw i64 %276, %277
  br label %281

281:                                              ; preds = %281, %279
  %282 = phi i64 [ 0, %279 ], [ %321, %281 ]
  %283 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %279 ], [ %319, %281 ]
  %284 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %279 ], [ %320, %281 ]
  %285 = phi i64 [ %280, %279 ], [ %322, %281 ]
  %286 = getelementptr inbounds i32, i32* %269, i64 %282
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4
  %289 = getelementptr inbounds i32, i32* %286, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4
  %292 = mul nsw <4 x i32> %288, %283
  %293 = mul nsw <4 x i32> %291, %284
  %294 = or i64 %282, 8
  %295 = getelementptr inbounds i32, i32* %269, i64 %294
  %296 = bitcast i32* %295 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4
  %298 = getelementptr inbounds i32, i32* %295, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4
  %301 = mul nsw <4 x i32> %297, %292
  %302 = mul nsw <4 x i32> %300, %293
  %303 = or i64 %282, 16
  %304 = getelementptr inbounds i32, i32* %269, i64 %303
  %305 = bitcast i32* %304 to <4 x i32>*
  %306 = load <4 x i32>, <4 x i32>* %305, align 4
  %307 = getelementptr inbounds i32, i32* %304, i64 4
  %308 = bitcast i32* %307 to <4 x i32>*
  %309 = load <4 x i32>, <4 x i32>* %308, align 4
  %310 = mul nsw <4 x i32> %306, %301
  %311 = mul nsw <4 x i32> %309, %302
  %312 = or i64 %282, 24
  %313 = getelementptr inbounds i32, i32* %269, i64 %312
  %314 = bitcast i32* %313 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4
  %316 = getelementptr inbounds i32, i32* %313, i64 4
  %317 = bitcast i32* %316 to <4 x i32>*
  %318 = load <4 x i32>, <4 x i32>* %317, align 4
  %319 = mul nsw <4 x i32> %315, %310
  %320 = mul nsw <4 x i32> %318, %311
  %321 = add i64 %282, 32
  %322 = add i64 %285, -4
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %281, !llvm.loop !21

324:                                              ; preds = %281, %272
  %325 = phi <4 x i32> [ undef, %272 ], [ %319, %281 ]
  %326 = phi <4 x i32> [ undef, %272 ], [ %320, %281 ]
  %327 = phi i64 [ 0, %272 ], [ %321, %281 ]
  %328 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %319, %281 ]
  %329 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %272 ], [ %320, %281 ]
  %330 = icmp eq i64 %277, 0
  br i1 %330, label %347, label %331

331:                                              ; preds = %324, %331
  %332 = phi i64 [ %344, %331 ], [ %327, %324 ]
  %333 = phi <4 x i32> [ %342, %331 ], [ %328, %324 ]
  %334 = phi <4 x i32> [ %343, %331 ], [ %329, %324 ]
  %335 = phi i64 [ %345, %331 ], [ %277, %324 ]
  %336 = getelementptr inbounds i32, i32* %269, i64 %332
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4
  %339 = getelementptr inbounds i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4
  %342 = mul nsw <4 x i32> %338, %333
  %343 = mul nsw <4 x i32> %341, %334
  %344 = add i64 %332, 8
  %345 = add i64 %335, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %331, !llvm.loop !23

347:                                              ; preds = %331, %324
  %348 = phi <4 x i32> [ %325, %324 ], [ %342, %331 ]
  %349 = phi <4 x i32> [ %326, %324 ], [ %343, %331 ]
  %350 = mul <4 x i32> %349, %348
  %351 = shufflevector <4 x i32> %350, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %352 = mul <4 x i32> %350, %351
  %353 = shufflevector <4 x i32> %352, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %354 = mul <4 x i32> %352, %353
  %355 = extractelement <4 x i32> %354, i32 0
  %356 = icmp eq i64 %273, %270
  br i1 %356, label %368, label %357

357:                                              ; preds = %347, %268
  %358 = phi i64 [ 0, %268 ], [ %273, %347 ]
  %359 = phi i32 [ 1, %268 ], [ %355, %347 ]
  br label %360

360:                                              ; preds = %357, %360
  %361 = phi i64 [ %366, %360 ], [ %358, %357 ]
  %362 = phi i32 [ %365, %360 ], [ %359, %357 ]
  %363 = getelementptr inbounds i32, i32* %269, i64 %361
  %364 = load i32, i32* %363, align 4
  %365 = mul nsw i32 %364, %362
  %366 = add nuw nsw i64 %361, 1
  %367 = icmp eq i64 %366, %270
  br i1 %367, label %368, label %360, !llvm.loop !25

368:                                              ; preds = %360, %347
  %369 = phi i32 [ %355, %347 ], [ %365, %360 ]
  %370 = icmp sgt i32 %369, 0
  br i1 %370, label %371, label %508

371:                                              ; preds = %368, %265
  %372 = phi i32 [ %369, %368 ], [ 1, %265 ]
  %373 = zext i32 %372 to i64
  %374 = icmp ult i32 %372, 8
  br i1 %374, label %471, label %375

375:                                              ; preds = %371
  %376 = getelementptr float, float* %259, i64 %373
  %377 = bitcast float* %376 to i8*
  %378 = getelementptr float, float* %185, i64 %373
  %379 = bitcast float* %378 to i8*
  %380 = getelementptr float, float* %222, i64 %373
  %381 = bitcast float* %380 to i8*
  %382 = icmp ult i8* %258, %379
  %383 = icmp ult i8* %184, %377
  %384 = and i1 %382, %383
  %385 = icmp ult i8* %258, %381
  %386 = icmp ult i8* %221, %377
  %387 = and i1 %385, %386
  %388 = or i1 %384, %387
  br i1 %388, label %471, label %389

389:                                              ; preds = %375
  %390 = and i64 %373, 4294967288
  %391 = add nsw i64 %390, -8
  %392 = lshr exact i64 %391, 3
  %393 = add nuw nsw i64 %392, 1
  %394 = and i64 %393, 1
  %395 = icmp eq i64 %391, 0
  br i1 %395, label %445, label %396

396:                                              ; preds = %389
  %397 = sub nuw nsw i64 %393, %394
  br label %398

398:                                              ; preds = %398, %396
  %399 = phi i64 [ 0, %396 ], [ %442, %398 ]
  %400 = phi i64 [ %397, %396 ], [ %443, %398 ]
  %401 = getelementptr inbounds float, float* %185, i64 %399
  %402 = bitcast float* %401 to <4 x float>*
  %403 = load <4 x float>, <4 x float>* %402, align 4, !alias.scope !27
  %404 = getelementptr inbounds float, float* %401, i64 4
  %405 = bitcast float* %404 to <4 x float>*
  %406 = load <4 x float>, <4 x float>* %405, align 4, !alias.scope !27
  %407 = getelementptr inbounds float, float* %222, i64 %399
  %408 = bitcast float* %407 to <4 x float>*
  %409 = load <4 x float>, <4 x float>* %408, align 4, !alias.scope !30
  %410 = getelementptr inbounds float, float* %407, i64 4
  %411 = bitcast float* %410 to <4 x float>*
  %412 = load <4 x float>, <4 x float>* %411, align 4, !alias.scope !30
  %413 = fsub <4 x float> %403, %409
  %414 = fsub <4 x float> %406, %412
  %415 = fmul <4 x float> %413, %413
  %416 = fmul <4 x float> %414, %414
  %417 = getelementptr inbounds float, float* %259, i64 %399
  %418 = bitcast float* %417 to <4 x float>*
  store <4 x float> %415, <4 x float>* %418, align 4, !alias.scope !32, !noalias !34
  %419 = getelementptr inbounds float, float* %417, i64 4
  %420 = bitcast float* %419 to <4 x float>*
  store <4 x float> %416, <4 x float>* %420, align 4, !alias.scope !32, !noalias !34
  %421 = or i64 %399, 8
  %422 = getelementptr inbounds float, float* %185, i64 %421
  %423 = bitcast float* %422 to <4 x float>*
  %424 = load <4 x float>, <4 x float>* %423, align 4, !alias.scope !27
  %425 = getelementptr inbounds float, float* %422, i64 4
  %426 = bitcast float* %425 to <4 x float>*
  %427 = load <4 x float>, <4 x float>* %426, align 4, !alias.scope !27
  %428 = getelementptr inbounds float, float* %222, i64 %421
  %429 = bitcast float* %428 to <4 x float>*
  %430 = load <4 x float>, <4 x float>* %429, align 4, !alias.scope !30
  %431 = getelementptr inbounds float, float* %428, i64 4
  %432 = bitcast float* %431 to <4 x float>*
  %433 = load <4 x float>, <4 x float>* %432, align 4, !alias.scope !30
  %434 = fsub <4 x float> %424, %430
  %435 = fsub <4 x float> %427, %433
  %436 = fmul <4 x float> %434, %434
  %437 = fmul <4 x float> %435, %435
  %438 = getelementptr inbounds float, float* %259, i64 %421
  %439 = bitcast float* %438 to <4 x float>*
  store <4 x float> %436, <4 x float>* %439, align 4, !alias.scope !32, !noalias !34
  %440 = getelementptr inbounds float, float* %438, i64 4
  %441 = bitcast float* %440 to <4 x float>*
  store <4 x float> %437, <4 x float>* %441, align 4, !alias.scope !32, !noalias !34
  %442 = add i64 %399, 16
  %443 = add i64 %400, -2
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %398, !llvm.loop !35

445:                                              ; preds = %398, %389
  %446 = phi i64 [ 0, %389 ], [ %442, %398 ]
  %447 = icmp eq i64 %394, 0
  br i1 %447, label %469, label %448

448:                                              ; preds = %445
  %449 = getelementptr inbounds float, float* %185, i64 %446
  %450 = bitcast float* %449 to <4 x float>*
  %451 = load <4 x float>, <4 x float>* %450, align 4, !alias.scope !27
  %452 = getelementptr inbounds float, float* %449, i64 4
  %453 = bitcast float* %452 to <4 x float>*
  %454 = load <4 x float>, <4 x float>* %453, align 4, !alias.scope !27
  %455 = getelementptr inbounds float, float* %222, i64 %446
  %456 = bitcast float* %455 to <4 x float>*
  %457 = load <4 x float>, <4 x float>* %456, align 4, !alias.scope !30
  %458 = getelementptr inbounds float, float* %455, i64 4
  %459 = bitcast float* %458 to <4 x float>*
  %460 = load <4 x float>, <4 x float>* %459, align 4, !alias.scope !30
  %461 = fsub <4 x float> %451, %457
  %462 = fsub <4 x float> %454, %460
  %463 = fmul <4 x float> %461, %461
  %464 = fmul <4 x float> %462, %462
  %465 = getelementptr inbounds float, float* %259, i64 %446
  %466 = bitcast float* %465 to <4 x float>*
  store <4 x float> %463, <4 x float>* %466, align 4, !alias.scope !32, !noalias !34
  %467 = getelementptr inbounds float, float* %465, i64 4
  %468 = bitcast float* %467 to <4 x float>*
  store <4 x float> %464, <4 x float>* %468, align 4, !alias.scope !32, !noalias !34
  br label %469

469:                                              ; preds = %445, %448
  %470 = icmp eq i64 %390, %373
  br i1 %470, label %508, label %471

471:                                              ; preds = %469, %375, %371
  %472 = phi i64 [ 0, %375 ], [ 0, %371 ], [ %390, %469 ]
  %473 = xor i64 %472, -1
  %474 = and i64 %373, 1
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %485, label %476

476:                                              ; preds = %471
  %477 = getelementptr inbounds float, float* %185, i64 %472
  %478 = load float, float* %477, align 4
  %479 = getelementptr inbounds float, float* %222, i64 %472
  %480 = load float, float* %479, align 4
  %481 = fsub float %478, %480
  %482 = fmul float %481, %481
  %483 = getelementptr inbounds float, float* %259, i64 %472
  store float %482, float* %483, align 4
  %484 = or i64 %472, 1
  br label %485

485:                                              ; preds = %471, %476
  %486 = phi i64 [ %472, %471 ], [ %484, %476 ]
  %487 = sub nsw i64 0, %373
  %488 = icmp eq i64 %473, %487
  br i1 %488, label %508, label %489

489:                                              ; preds = %485, %489
  %490 = phi i64 [ %506, %489 ], [ %486, %485 ]
  %491 = getelementptr inbounds float, float* %185, i64 %490
  %492 = load float, float* %491, align 4
  %493 = getelementptr inbounds float, float* %222, i64 %490
  %494 = load float, float* %493, align 4
  %495 = fsub float %492, %494
  %496 = fmul float %495, %495
  %497 = getelementptr inbounds float, float* %259, i64 %490
  store float %496, float* %497, align 4
  %498 = add nuw nsw i64 %490, 1
  %499 = getelementptr inbounds float, float* %185, i64 %498
  %500 = load float, float* %499, align 4
  %501 = getelementptr inbounds float, float* %222, i64 %498
  %502 = load float, float* %501, align 4
  %503 = fsub float %500, %502
  %504 = fmul float %503, %503
  %505 = getelementptr inbounds float, float* %259, i64 %498
  store float %504, float* %505, align 4
  %506 = add nuw nsw i64 %490, 2
  %507 = icmp eq i64 %506, %373
  br i1 %507, label %508, label %489, !llvm.loop !36

508:                                              ; preds = %485, %489, %469, %368
  %509 = icmp sgt i32 %257, 5
  br i1 %509, label %510, label %516

510:                                              ; preds = %508
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %512 = load i32*, i32** %511, align 8
  %513 = icmp eq i32* %512, null
  br i1 %513, label %516, label %514

514:                                              ; preds = %510
  %515 = bitcast i32* %512 to i8*
  tail call void @_ZdaPv(i8* %515) #9
  br label %516

516:                                              ; preds = %508, %510, %514
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223) #10
  %517 = icmp sgt i32 %220, 5
  br i1 %517, label %518, label %524

518:                                              ; preds = %516
  %519 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %520 = load i32*, i32** %519, align 8
  %521 = icmp eq i32* %520, null
  br i1 %521, label %524, label %522

522:                                              ; preds = %518
  %523 = bitcast i32* %520 to i8*
  tail call void @_ZdaPv(i8* %523) #9
  br label %524

524:                                              ; preds = %516, %518, %522
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #10
  br i1 %261, label %525, label %531

525:                                              ; preds = %524
  %526 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %527 = load i32*, i32** %526, align 8
  %528 = icmp eq i32* %527, null
  br i1 %528, label %531, label %529

529:                                              ; preds = %525
  %530 = bitcast i32* %527 to i8*
  tail call void @_ZdaPv(i8* %530) #9
  br label %531

531:                                              ; preds = %529, %525, %524, %146, %142, %138
  %532 = phi i8* [ %17, %138 ], [ %17, %142 ], [ %17, %146 ], [ %149, %524 ], [ %149, %525 ], [ %149, %529 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %532) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin18squared_difference21EvalSquaredDifferenceIiEEvP13TfLiteContextP10TfLiteNodePKNS2_6OpDataEPK12TfLiteTensorSD_PSB_(%struct.TfLiteContext*, %struct.TfLiteNode*, %"struct.tflite::ops::builtin::squared_difference::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = getelementptr inbounds %"struct.tflite::ops::builtin::squared_difference::OpData", %"struct.tflite::ops::builtin::squared_difference::OpData"* %2, i64 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %145, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %20, align 8, !alias.scope !37
  br label %48

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %23 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %22, align 8, !noalias !37
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !37
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %23, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %25, i32* %27, align 8, !alias.scope !37
  %28 = icmp sgt i32 %25, 5
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = sext i32 %25 to i64
  %31 = shl nsw i64 %30, 2
  %32 = tail call i8* @_Znam(i64 %31) #9, !noalias !37
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %34 = bitcast i32** %33 to i8**
  store i8* %32, i8** %34, align 8, !alias.scope !37
  %35 = bitcast i8* %32 to i32*
  br label %41

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %38 = bitcast %union.anon* %37 to i32*
  %39 = sext i32 %25 to i64
  %40 = shl nsw i64 %39, 2
  br label %41

41:                                               ; preds = %36, %29
  %42 = phi i64 [ %31, %29 ], [ %40, %36 ]
  %43 = phi i32* [ %35, %29 ], [ %38, %36 ]
  %44 = bitcast i32* %43 to i8*
  %45 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 %42, i1 false) #10
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1, i32 0
  %47 = load i32*, i32** %46, align 8
  br label %48

48:                                               ; preds = %19, %41
  %49 = phi i32* [ %47, %41 ], [ null, %19 ]
  %50 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #10
  %51 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %53, align 8, !alias.scope !40
  br label %81

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %56 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %55, align 8, !noalias !40
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4, !noalias !40
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %56, i64 0, i32 1, i64 0
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %58, i32* %60, align 8, !alias.scope !40
  %61 = icmp sgt i32 %58, 5
  br i1 %61, label %62, label %69

62:                                               ; preds = %54
  %63 = sext i32 %58 to i64
  %64 = shl nsw i64 %63, 2
  %65 = tail call i8* @_Znam(i64 %64) #9, !noalias !40
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %67 = bitcast i32** %66 to i8**
  store i8* %65, i8** %67, align 8, !alias.scope !40
  %68 = bitcast i8* %65 to i32*
  br label %74

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %71 = bitcast %union.anon* %70 to i32*
  %72 = sext i32 %58 to i64
  %73 = shl nsw i64 %72, 2
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi i64 [ %64, %62 ], [ %73, %69 ]
  %76 = phi i32* [ %68, %62 ], [ %71, %69 ]
  %77 = bitcast i32* %76 to i8*
  %78 = bitcast i32* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %75, i1 false) #10
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %80 = load i32*, i32** %79, align 8
  br label %81

81:                                               ; preds = %52, %74
  %82 = phi i32* [ %80, %74 ], [ null, %52 ]
  %83 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #10
  %84 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %86, align 8, !alias.scope !43
  br label %114

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %88, align 8, !noalias !43
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 4, !noalias !43
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %91, i32* %93, align 8, !alias.scope !43
  %94 = icmp sgt i32 %91, 5
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = sext i32 %91 to i64
  %97 = shl nsw i64 %96, 2
  %98 = tail call i8* @_Znam(i64 %97) #9, !noalias !43
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %100 = bitcast i32** %99 to i8**
  store i8* %98, i8** %100, align 8, !alias.scope !43
  %101 = bitcast i8* %98 to i32*
  br label %107

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i32*
  %105 = sext i32 %91 to i64
  %106 = shl nsw i64 %105, 2
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi i64 [ %97, %95 ], [ %106, %102 ]
  %109 = phi i32* [ %101, %95 ], [ %104, %102 ]
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast i32* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %108, i1 false) #10
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %113 = load i32*, i32** %112, align 8
  br label %114

114:                                              ; preds = %85, %107
  %115 = phi i32* [ %113, %107 ], [ null, %85 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i32* %49, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i32* %82, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %115, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIiEET_S4_S4_)
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = icmp sgt i32 %117, 5
  br i1 %118, label %119, label %125

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = icmp eq i32* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast i32* %121 to i8*
  call void @_ZdaPv(i8* %124) #9
  br label %125

125:                                              ; preds = %114, %119, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #10
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = icmp sgt i32 %127, 5
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = icmp eq i32* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast i32* %131 to i8*
  call void @_ZdaPv(i8* %134) #9
  br label %135

135:                                              ; preds = %125, %129, %133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #10
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp sgt i32 %137, 5
  br i1 %138, label %139, label %525

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %525, label %143

143:                                              ; preds = %139
  %144 = bitcast i32* %141 to i8*
  call void @_ZdaPv(i8* %144) #9
  br label %525

145:                                              ; preds = %6
  %146 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %146) #10
  %147 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %149, align 8, !alias.scope !46
  br label %178

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %151, align 8, !noalias !46
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 4, !noalias !46
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %152, i64 0, i32 1, i64 0
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %154, i32* %156, align 8, !alias.scope !46
  %157 = icmp sgt i32 %154, 5
  br i1 %157, label %158, label %165

158:                                              ; preds = %150
  %159 = sext i32 %154 to i64
  %160 = shl nsw i64 %159, 2
  %161 = tail call i8* @_Znam(i64 %160) #9, !noalias !46
  %162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %163 = bitcast i32** %162 to i8**
  store i8* %161, i8** %163, align 8, !alias.scope !46
  %164 = bitcast i8* %161 to i32*
  br label %170

165:                                              ; preds = %150
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %167 = bitcast %union.anon* %166 to i32*
  %168 = sext i32 %154 to i64
  %169 = shl nsw i64 %168, 2
  br label %170

170:                                              ; preds = %165, %158
  %171 = phi i64 [ %160, %158 ], [ %169, %165 ]
  %172 = phi i32* [ %164, %158 ], [ %167, %165 ]
  %173 = bitcast i32* %172 to i8*
  %174 = bitcast i32* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %174, i64 %171, i1 false) #10
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = bitcast i32* %176 to i8*
  br label %178

178:                                              ; preds = %148, %170
  %179 = phi i32 [ %154, %170 ], [ 0, %148 ]
  %180 = phi i8* [ %177, %170 ], [ null, %148 ]
  %181 = phi i32* [ %176, %170 ], [ null, %148 ]
  %182 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %182) #10
  %183 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %185, align 8, !alias.scope !49
  br label %214

186:                                              ; preds = %178
  %187 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %188 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %187, align 8, !noalias !49
  %189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %188, i64 0, i32 0
  %190 = load i32, i32* %189, align 4, !noalias !49
  %191 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %188, i64 0, i32 1, i64 0
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %190, i32* %192, align 8, !alias.scope !49
  %193 = icmp sgt i32 %190, 5
  br i1 %193, label %194, label %201

194:                                              ; preds = %186
  %195 = sext i32 %190 to i64
  %196 = shl nsw i64 %195, 2
  %197 = tail call i8* @_Znam(i64 %196) #9, !noalias !49
  %198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %199 = bitcast i32** %198 to i8**
  store i8* %197, i8** %199, align 8, !alias.scope !49
  %200 = bitcast i8* %197 to i32*
  br label %206

201:                                              ; preds = %186
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %203 = bitcast %union.anon* %202 to i32*
  %204 = sext i32 %190 to i64
  %205 = shl nsw i64 %204, 2
  br label %206

206:                                              ; preds = %201, %194
  %207 = phi i64 [ %196, %194 ], [ %205, %201 ]
  %208 = phi i32* [ %200, %194 ], [ %203, %201 ]
  %209 = bitcast i32* %208 to i8*
  %210 = bitcast i32* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %209, i8* align 4 %210, i64 %207, i1 false) #10
  %211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = bitcast i32* %212 to i8*
  br label %214

214:                                              ; preds = %184, %206
  %215 = phi i32 [ %190, %206 ], [ 0, %184 ]
  %216 = phi i8* [ %213, %206 ], [ null, %184 ]
  %217 = phi i32* [ %212, %206 ], [ null, %184 ]
  %218 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #10
  %219 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %219, label %220, label %222

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %221, align 8, !alias.scope !52
  br label %250

222:                                              ; preds = %214
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8, !noalias !52
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4, !noalias !52
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 1, i64 0
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %226, i32* %228, align 8, !alias.scope !52
  %229 = icmp sgt i32 %226, 5
  br i1 %229, label %230, label %237

230:                                              ; preds = %222
  %231 = sext i32 %226 to i64
  %232 = shl nsw i64 %231, 2
  %233 = tail call i8* @_Znam(i64 %232) #9, !noalias !52
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %235 = bitcast i32** %234 to i8**
  store i8* %233, i8** %235, align 8, !alias.scope !52
  %236 = bitcast i8* %233 to i32*
  br label %242

237:                                              ; preds = %222
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %239 = bitcast %union.anon* %238 to i32*
  %240 = sext i32 %226 to i64
  %241 = shl nsw i64 %240, 2
  br label %242

242:                                              ; preds = %237, %230
  %243 = phi i64 [ %232, %230 ], [ %241, %237 ]
  %244 = phi i32* [ %236, %230 ], [ %239, %237 ]
  %245 = bitcast i32* %244 to i8*
  %246 = bitcast i32* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %243, i1 false) #10
  %247 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = bitcast i32* %248 to i8*
  br label %250

250:                                              ; preds = %220, %242
  %251 = phi i32 [ %226, %242 ], [ 0, %220 ]
  %252 = phi i8* [ %249, %242 ], [ null, %220 ]
  %253 = phi i32* [ %248, %242 ], [ null, %220 ]
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %255 = icmp sgt i32 %179, 5
  br i1 %255, label %256, label %259

256:                                              ; preds = %250
  %257 = getelementptr inbounds %union.anon, %union.anon* %254, i64 0, i32 0
  %258 = load i32*, i32** %257, align 8
  br label %262

259:                                              ; preds = %250
  %260 = bitcast %union.anon* %254 to i32*
  %261 = icmp sgt i32 %179, 0
  br i1 %261, label %262, label %365

262:                                              ; preds = %259, %256
  %263 = phi i32* [ %258, %256 ], [ %260, %259 ]
  %264 = zext i32 %179 to i64
  %265 = icmp ult i32 %179, 8
  br i1 %265, label %351, label %266

266:                                              ; preds = %262
  %267 = and i64 %264, 4294967288
  %268 = add nsw i64 %267, -8
  %269 = lshr exact i64 %268, 3
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 3
  %272 = icmp ult i64 %268, 24
  br i1 %272, label %318, label %273

273:                                              ; preds = %266
  %274 = sub nsw i64 %270, %271
  br label %275

275:                                              ; preds = %275, %273
  %276 = phi i64 [ 0, %273 ], [ %315, %275 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %273 ], [ %313, %275 ]
  %278 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %273 ], [ %314, %275 ]
  %279 = phi i64 [ %274, %273 ], [ %316, %275 ]
  %280 = getelementptr inbounds i32, i32* %263, i64 %276
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4
  %283 = getelementptr inbounds i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4
  %286 = mul nsw <4 x i32> %282, %277
  %287 = mul nsw <4 x i32> %285, %278
  %288 = or i64 %276, 8
  %289 = getelementptr inbounds i32, i32* %263, i64 %288
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4
  %292 = getelementptr inbounds i32, i32* %289, i64 4
  %293 = bitcast i32* %292 to <4 x i32>*
  %294 = load <4 x i32>, <4 x i32>* %293, align 4
  %295 = mul nsw <4 x i32> %291, %286
  %296 = mul nsw <4 x i32> %294, %287
  %297 = or i64 %276, 16
  %298 = getelementptr inbounds i32, i32* %263, i64 %297
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4
  %301 = getelementptr inbounds i32, i32* %298, i64 4
  %302 = bitcast i32* %301 to <4 x i32>*
  %303 = load <4 x i32>, <4 x i32>* %302, align 4
  %304 = mul nsw <4 x i32> %300, %295
  %305 = mul nsw <4 x i32> %303, %296
  %306 = or i64 %276, 24
  %307 = getelementptr inbounds i32, i32* %263, i64 %306
  %308 = bitcast i32* %307 to <4 x i32>*
  %309 = load <4 x i32>, <4 x i32>* %308, align 4
  %310 = getelementptr inbounds i32, i32* %307, i64 4
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4
  %313 = mul nsw <4 x i32> %309, %304
  %314 = mul nsw <4 x i32> %312, %305
  %315 = add i64 %276, 32
  %316 = add i64 %279, -4
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %275, !llvm.loop !55

318:                                              ; preds = %275, %266
  %319 = phi <4 x i32> [ undef, %266 ], [ %313, %275 ]
  %320 = phi <4 x i32> [ undef, %266 ], [ %314, %275 ]
  %321 = phi i64 [ 0, %266 ], [ %315, %275 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %266 ], [ %313, %275 ]
  %323 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %266 ], [ %314, %275 ]
  %324 = icmp eq i64 %271, 0
  br i1 %324, label %341, label %325

325:                                              ; preds = %318, %325
  %326 = phi i64 [ %338, %325 ], [ %321, %318 ]
  %327 = phi <4 x i32> [ %336, %325 ], [ %322, %318 ]
  %328 = phi <4 x i32> [ %337, %325 ], [ %323, %318 ]
  %329 = phi i64 [ %339, %325 ], [ %271, %318 ]
  %330 = getelementptr inbounds i32, i32* %263, i64 %326
  %331 = bitcast i32* %330 to <4 x i32>*
  %332 = load <4 x i32>, <4 x i32>* %331, align 4
  %333 = getelementptr inbounds i32, i32* %330, i64 4
  %334 = bitcast i32* %333 to <4 x i32>*
  %335 = load <4 x i32>, <4 x i32>* %334, align 4
  %336 = mul nsw <4 x i32> %332, %327
  %337 = mul nsw <4 x i32> %335, %328
  %338 = add i64 %326, 8
  %339 = add i64 %329, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %325, !llvm.loop !56

341:                                              ; preds = %325, %318
  %342 = phi <4 x i32> [ %319, %318 ], [ %336, %325 ]
  %343 = phi <4 x i32> [ %320, %318 ], [ %337, %325 ]
  %344 = mul <4 x i32> %343, %342
  %345 = shufflevector <4 x i32> %344, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %346 = mul <4 x i32> %344, %345
  %347 = shufflevector <4 x i32> %346, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %348 = mul <4 x i32> %346, %347
  %349 = extractelement <4 x i32> %348, i32 0
  %350 = icmp eq i64 %267, %264
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %262
  %352 = phi i64 [ 0, %262 ], [ %267, %341 ]
  %353 = phi i32 [ 1, %262 ], [ %349, %341 ]
  br label %354

354:                                              ; preds = %351, %354
  %355 = phi i64 [ %360, %354 ], [ %352, %351 ]
  %356 = phi i32 [ %359, %354 ], [ %353, %351 ]
  %357 = getelementptr inbounds i32, i32* %263, i64 %355
  %358 = load i32, i32* %357, align 4
  %359 = mul nsw i32 %358, %356
  %360 = add nuw nsw i64 %355, 1
  %361 = icmp eq i64 %360, %264
  br i1 %361, label %362, label %354, !llvm.loop !57

362:                                              ; preds = %354, %341
  %363 = phi i32 [ %349, %341 ], [ %359, %354 ]
  %364 = icmp sgt i32 %363, 0
  br i1 %364, label %365, label %502

365:                                              ; preds = %362, %259
  %366 = phi i32 [ %363, %362 ], [ 1, %259 ]
  %367 = zext i32 %366 to i64
  %368 = icmp ult i32 %366, 8
  br i1 %368, label %465, label %369

369:                                              ; preds = %365
  %370 = getelementptr i32, i32* %253, i64 %367
  %371 = bitcast i32* %370 to i8*
  %372 = getelementptr i32, i32* %181, i64 %367
  %373 = bitcast i32* %372 to i8*
  %374 = getelementptr i32, i32* %217, i64 %367
  %375 = bitcast i32* %374 to i8*
  %376 = icmp ult i8* %252, %373
  %377 = icmp ult i8* %180, %371
  %378 = and i1 %376, %377
  %379 = icmp ult i8* %252, %375
  %380 = icmp ult i8* %216, %371
  %381 = and i1 %379, %380
  %382 = or i1 %378, %381
  br i1 %382, label %465, label %383

383:                                              ; preds = %369
  %384 = and i64 %367, 4294967288
  %385 = add nsw i64 %384, -8
  %386 = lshr exact i64 %385, 3
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %439, label %390

390:                                              ; preds = %383
  %391 = sub nuw nsw i64 %387, %388
  br label %392

392:                                              ; preds = %392, %390
  %393 = phi i64 [ 0, %390 ], [ %436, %392 ]
  %394 = phi i64 [ %391, %390 ], [ %437, %392 ]
  %395 = getelementptr inbounds i32, i32* %181, i64 %393
  %396 = bitcast i32* %395 to <4 x i32>*
  %397 = load <4 x i32>, <4 x i32>* %396, align 4, !alias.scope !58
  %398 = getelementptr inbounds i32, i32* %395, i64 4
  %399 = bitcast i32* %398 to <4 x i32>*
  %400 = load <4 x i32>, <4 x i32>* %399, align 4, !alias.scope !58
  %401 = getelementptr inbounds i32, i32* %217, i64 %393
  %402 = bitcast i32* %401 to <4 x i32>*
  %403 = load <4 x i32>, <4 x i32>* %402, align 4, !alias.scope !61
  %404 = getelementptr inbounds i32, i32* %401, i64 4
  %405 = bitcast i32* %404 to <4 x i32>*
  %406 = load <4 x i32>, <4 x i32>* %405, align 4, !alias.scope !61
  %407 = sub nsw <4 x i32> %397, %403
  %408 = sub nsw <4 x i32> %400, %406
  %409 = mul nsw <4 x i32> %407, %407
  %410 = mul nsw <4 x i32> %408, %408
  %411 = getelementptr inbounds i32, i32* %253, i64 %393
  %412 = bitcast i32* %411 to <4 x i32>*
  store <4 x i32> %409, <4 x i32>* %412, align 4, !alias.scope !63, !noalias !65
  %413 = getelementptr inbounds i32, i32* %411, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  store <4 x i32> %410, <4 x i32>* %414, align 4, !alias.scope !63, !noalias !65
  %415 = or i64 %393, 8
  %416 = getelementptr inbounds i32, i32* %181, i64 %415
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4, !alias.scope !58
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4, !alias.scope !58
  %422 = getelementptr inbounds i32, i32* %217, i64 %415
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4, !alias.scope !61
  %425 = getelementptr inbounds i32, i32* %422, i64 4
  %426 = bitcast i32* %425 to <4 x i32>*
  %427 = load <4 x i32>, <4 x i32>* %426, align 4, !alias.scope !61
  %428 = sub nsw <4 x i32> %418, %424
  %429 = sub nsw <4 x i32> %421, %427
  %430 = mul nsw <4 x i32> %428, %428
  %431 = mul nsw <4 x i32> %429, %429
  %432 = getelementptr inbounds i32, i32* %253, i64 %415
  %433 = bitcast i32* %432 to <4 x i32>*
  store <4 x i32> %430, <4 x i32>* %433, align 4, !alias.scope !63, !noalias !65
  %434 = getelementptr inbounds i32, i32* %432, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %435, align 4, !alias.scope !63, !noalias !65
  %436 = add i64 %393, 16
  %437 = add i64 %394, -2
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %392, !llvm.loop !66

439:                                              ; preds = %392, %383
  %440 = phi i64 [ 0, %383 ], [ %436, %392 ]
  %441 = icmp eq i64 %388, 0
  br i1 %441, label %463, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds i32, i32* %181, i64 %440
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4, !alias.scope !58
  %446 = getelementptr inbounds i32, i32* %443, i64 4
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4, !alias.scope !58
  %449 = getelementptr inbounds i32, i32* %217, i64 %440
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4, !alias.scope !61
  %452 = getelementptr inbounds i32, i32* %449, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  %454 = load <4 x i32>, <4 x i32>* %453, align 4, !alias.scope !61
  %455 = sub nsw <4 x i32> %445, %451
  %456 = sub nsw <4 x i32> %448, %454
  %457 = mul nsw <4 x i32> %455, %455
  %458 = mul nsw <4 x i32> %456, %456
  %459 = getelementptr inbounds i32, i32* %253, i64 %440
  %460 = bitcast i32* %459 to <4 x i32>*
  store <4 x i32> %457, <4 x i32>* %460, align 4, !alias.scope !63, !noalias !65
  %461 = getelementptr inbounds i32, i32* %459, i64 4
  %462 = bitcast i32* %461 to <4 x i32>*
  store <4 x i32> %458, <4 x i32>* %462, align 4, !alias.scope !63, !noalias !65
  br label %463

463:                                              ; preds = %439, %442
  %464 = icmp eq i64 %384, %367
  br i1 %464, label %502, label %465

465:                                              ; preds = %463, %369, %365
  %466 = phi i64 [ 0, %369 ], [ 0, %365 ], [ %384, %463 ]
  %467 = xor i64 %466, -1
  %468 = and i64 %367, 1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %479, label %470

470:                                              ; preds = %465
  %471 = getelementptr inbounds i32, i32* %181, i64 %466
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds i32, i32* %217, i64 %466
  %474 = load i32, i32* %473, align 4
  %475 = sub nsw i32 %472, %474
  %476 = mul nsw i32 %475, %475
  %477 = getelementptr inbounds i32, i32* %253, i64 %466
  store i32 %476, i32* %477, align 4
  %478 = or i64 %466, 1
  br label %479

479:                                              ; preds = %465, %470
  %480 = phi i64 [ %466, %465 ], [ %478, %470 ]
  %481 = sub nsw i64 0, %367
  %482 = icmp eq i64 %467, %481
  br i1 %482, label %502, label %483

483:                                              ; preds = %479, %483
  %484 = phi i64 [ %500, %483 ], [ %480, %479 ]
  %485 = getelementptr inbounds i32, i32* %181, i64 %484
  %486 = load i32, i32* %485, align 4
  %487 = getelementptr inbounds i32, i32* %217, i64 %484
  %488 = load i32, i32* %487, align 4
  %489 = sub nsw i32 %486, %488
  %490 = mul nsw i32 %489, %489
  %491 = getelementptr inbounds i32, i32* %253, i64 %484
  store i32 %490, i32* %491, align 4
  %492 = add nuw nsw i64 %484, 1
  %493 = getelementptr inbounds i32, i32* %181, i64 %492
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i32, i32* %217, i64 %492
  %496 = load i32, i32* %495, align 4
  %497 = sub nsw i32 %494, %496
  %498 = mul nsw i32 %497, %497
  %499 = getelementptr inbounds i32, i32* %253, i64 %492
  store i32 %498, i32* %499, align 4
  %500 = add nuw nsw i64 %484, 2
  %501 = icmp eq i64 %500, %367
  br i1 %501, label %502, label %483, !llvm.loop !67

502:                                              ; preds = %479, %483, %463, %362
  %503 = icmp sgt i32 %251, 5
  br i1 %503, label %504, label %510

504:                                              ; preds = %502
  %505 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %506 = load i32*, i32** %505, align 8
  %507 = icmp eq i32* %506, null
  br i1 %507, label %510, label %508

508:                                              ; preds = %504
  %509 = bitcast i32* %506 to i8*
  tail call void @_ZdaPv(i8* %509) #9
  br label %510

510:                                              ; preds = %502, %504, %508
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #10
  %511 = icmp sgt i32 %215, 5
  br i1 %511, label %512, label %518

512:                                              ; preds = %510
  %513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %514 = load i32*, i32** %513, align 8
  %515 = icmp eq i32* %514, null
  br i1 %515, label %518, label %516

516:                                              ; preds = %512
  %517 = bitcast i32* %514 to i8*
  tail call void @_ZdaPv(i8* %517) #9
  br label %518

518:                                              ; preds = %510, %512, %516
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %182) #10
  br i1 %255, label %519, label %525

519:                                              ; preds = %518
  %520 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %521 = load i32*, i32** %520, align 8
  %522 = icmp eq i32* %521, null
  br i1 %522, label %525, label %523

523:                                              ; preds = %519
  %524 = bitcast i32* %521 to i8*
  tail call void @_ZdaPv(i8* %524) #9
  br label %525

525:                                              ; preds = %523, %519, %518, %143, %139, %135
  %526 = phi i8* [ %17, %135 ], [ %17, %139 ], [ %17, %143 ], [ %146, %518 ], [ %146, %519 ], [ %146, %523 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %526) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin27Register_SQUARED_DIFFERENCEEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin27Register_SQUARED_DIFFERENCEEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float (float, float)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !68
  %14 = load i32, i32* %11, align 8, !noalias !68
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #11, !noalias !68
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !68
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !68
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !68
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !68
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !68
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !68
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !68
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !68
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !68
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !68
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !68
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !68
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !68
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !68
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !68
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !68
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !68
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !71

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !68
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !68
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !72

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !68
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !73

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !68
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #10
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #10
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #10
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #10
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #9
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds float, float* %1, i64 %225
  %227 = load float, float* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = load float, float* %229, align 4
  %231 = call float %6(float %227, float %230) #10
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds float, float* %5, i64 %232
  store float %231, float* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIfEET_S4_S4_(float, float) #3 comdat {
  %3 = fsub float %0, %1
  %4 = fmul float %3, %3
  ret float %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !74
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !74
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #11, !noalias !74
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !74
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !74
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !74
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !74
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !74
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !74
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !74
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !74
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !74
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !74
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !74
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !74
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !74
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !74
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !74
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !74
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !74
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !77

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !74
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !74
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !78

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !74
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !79

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !74
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #10
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !80
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !80
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #11, !noalias !80
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !80
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !80
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !80
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !80
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !80
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !80
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !80
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !80
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !80
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !80
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !80
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !80
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !80
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !80
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !80
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !80
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !80
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !83

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !80
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !80
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !84

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !80
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !85

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !80
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #10
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #9
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #10
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #9
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32 (i32, i32)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !86
  %14 = load i32, i32* %11, align 8, !noalias !86
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #11, !noalias !86
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !86
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !86
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !86
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !86
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !86
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !86
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !86
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !86
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !86
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !86
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !86
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !86
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !86
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !86
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !86
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !86
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !86
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !89

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !86
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !86
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !90

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !86
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !91

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !86
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #10
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #10
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #10
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #10
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #9
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds i32, i32* %1, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds i32, i32* %3, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = call i32 %6(i32 %227, i32 %230) #10
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds i32, i32* %5, i64 %232
  store i32 %231, i32* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin18squared_difference17SquaredDifferenceIiEET_S4_S4_(i32, i32) #3 comdat {
  %3 = sub nsw i32 %0, %1
  %4 = mul nsw i32 %3, %3
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !26, !22}
!26 = !{!"llvm.loop.unroll.runtime.disable"}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = !{!33}
!33 = distinct !{!33, !29}
!34 = !{!28, !31}
!35 = distinct !{!35, !22}
!36 = distinct !{!36, !22}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!39 = distinct !{!39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!42 = distinct !{!42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!45 = distinct !{!45, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!48 = distinct !{!48, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!51 = distinct !{!51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!54 = distinct !{!54, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!55 = distinct !{!55, !22}
!56 = distinct !{!56, !24}
!57 = distinct !{!57, !26, !22}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = !{!64}
!64 = distinct !{!64, !60}
!65 = !{!59, !62}
!66 = distinct !{!66, !22}
!67 = distinct !{!67, !22}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!71 = distinct !{!71, !22}
!72 = distinct !{!72, !24}
!73 = distinct !{!73, !26, !22}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!77 = distinct !{!77, !22}
!78 = distinct !{!78, !24}
!79 = distinct !{!79, !26, !22}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!83 = distinct !{!83, !22}
!84 = distinct !{!84, !24}
!85 = distinct !{!85, !26, !22}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!88 = distinct !{!88, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!89 = distinct !{!89, !22}
!90 = distinct !{!90, !24}
!91 = distinct !{!91, !26, !22}
