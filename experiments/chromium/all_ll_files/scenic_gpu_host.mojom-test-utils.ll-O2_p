; ModuleID = 'gen/ui/ozone/public/mojom/scenic_gpu_host.mojom-test-utils.cc'
source_filename = "gen/ui/ozone/public/mojom/scenic_gpu_host.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::mojom::ScenicGpuHostAsyncWaiter" = type { %"class.ui::mojom::ScenicGpuHost"* }
%"class.ui::mojom::ScenicGpuHost" = type { i32 (...)** }
%"class.ui::mojom::ScenicGpuHostInterceptorForTesting" = type { %"class.ui::mojom::ScenicGpuHost" }
%"class.mojo::PlatformHandle" = type { i32, [4 x i8], %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }

$_ZN2ui5mojom13ScenicGpuHostD2Ev = comdat any

$_ZN2ui5mojom34ScenicGpuHostInterceptorForTestingD0Ev = comdat any

@_ZTVN2ui5mojom34ScenicGpuHostInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::mojom::ScenicGpuHost"*)* @_ZN2ui5mojom13ScenicGpuHostD2Ev to i8*), i8* bitcast (void (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)* @_ZN2ui5mojom34ScenicGpuHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*, i32, %"class.mojo::PlatformHandle"*)* @_ZN2ui5mojom34ScenicGpuHostInterceptorForTesting21AttachSurfaceToWindowEiN4mojo14PlatformHandleE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN2ui5mojom24ScenicGpuHostAsyncWaiterC1EPNS0_13ScenicGpuHostE = hidden unnamed_addr alias void (%"class.ui::mojom::ScenicGpuHostAsyncWaiter"*, %"class.ui::mojom::ScenicGpuHost"*), void (%"class.ui::mojom::ScenicGpuHostAsyncWaiter"*, %"class.ui::mojom::ScenicGpuHost"*)* @_ZN2ui5mojom24ScenicGpuHostAsyncWaiterC2EPNS0_13ScenicGpuHostE
@_ZN2ui5mojom24ScenicGpuHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.ui::mojom::ScenicGpuHostAsyncWaiter"*), void (%"class.ui::mojom::ScenicGpuHostAsyncWaiter"*)* @_ZN2ui5mojom24ScenicGpuHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui5mojom34ScenicGpuHostInterceptorForTesting21AttachSurfaceToWindowEiN4mojo14PlatformHandleE(%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*, i32, %"class.mojo::PlatformHandle"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PlatformHandle", align 8
  %5 = bitcast %"class.ui::mojom::ScenicGpuHostInterceptorForTesting"* %0 to %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)***
  %6 = load %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)**, %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)*, %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)*, %"class.ui::mojom::ScenicGpuHost"* (%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.ui::mojom::ScenicGpuHost"* %8(%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"* %0) #7
  call void @_ZN4mojo14PlatformHandleC1EOS0_(%"class.mojo::PlatformHandle"* nonnull %4, %"class.mojo::PlatformHandle"* dereferenceable(24) %2) #7
  %10 = bitcast %"class.ui::mojom::ScenicGpuHost"* %9 to void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)***
  %11 = load void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)**, void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)*, void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)** %11, i64 2
  %13 = load void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)*, void (%"class.ui::mojom::ScenicGpuHost"*, i32, %"class.mojo::PlatformHandle"*)** %12, align 8
  call void %13(%"class.ui::mojom::ScenicGpuHost"* %9, i32 %1, %"class.mojo::PlatformHandle"* nonnull %4) #7
  call void @_ZN4mojo14PlatformHandleD1Ev(%"class.mojo::PlatformHandle"* nonnull %4) #7
  ret void
}

declare void @_ZN4mojo14PlatformHandleC1EOS0_(%"class.mojo::PlatformHandle"*, %"class.mojo::PlatformHandle"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo14PlatformHandleD1Ev(%"class.mojo::PlatformHandle"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui5mojom24ScenicGpuHostAsyncWaiterC2EPNS0_13ScenicGpuHostE(%"class.ui::mojom::ScenicGpuHostAsyncWaiter"* nocapture, %"class.ui::mojom::ScenicGpuHost"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.ui::mojom::ScenicGpuHostAsyncWaiter", %"class.ui::mojom::ScenicGpuHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.ui::mojom::ScenicGpuHost"* %1, %"class.ui::mojom::ScenicGpuHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui5mojom24ScenicGpuHostAsyncWaiterD2Ev(%"class.ui::mojom::ScenicGpuHostAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui5mojom13ScenicGpuHostD2Ev(%"class.ui::mojom::ScenicGpuHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui5mojom34ScenicGpuHostInterceptorForTestingD0Ev(%"class.ui::mojom::ScenicGpuHostInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
