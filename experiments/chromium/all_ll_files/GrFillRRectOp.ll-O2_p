; ModuleID = '../../third_party/skia/src/gpu/ops/GrFillRRectOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrFillRRectOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i32 }
%class.SkAlignedSTStorage.192 = type { [56 x i8] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.82, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.81, [4 x i8] }>
%union.anon.81 = type { [7 x i32] }
%class.sk_sp.82 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.83, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.(anonymous namespace)::CoverageVertex" = type { %"struct.std::__1::array", %"struct.std::__1::array.193", %"struct.std::__1::array.193", %"struct.std::__1::array.193", float, float }
%"struct.std::__1::array" = type { [4 x float] }
%"struct.std::__1::array.193" = type { [2 x float] }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.65" }
%"struct.std::__1::pair.65" = type { i32, %class.SkTArray.66* }
%class.SkTArray.66 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.66, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.72, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.72 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::FillRRectOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, %struct.SkRGBA4f, %struct.SkRect, i32, %class.SkSTArray.73, i32, i32, %class.sk_sp.76, %class.sk_sp.76, %class.sk_sp.76, i32, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%class.SkSTArray.73 = type { %class.SkAlignedSTStorage.74, %class.SkTArray.75 }
%class.SkAlignedSTStorage.74 = type { [256 x i8] }
%class.SkTArray.75 = type { i8*, i64 }
%class.sk_sp.76 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.77, i32, [4 x i8] }
%union.anon.77 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.128, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.79, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.79 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.80, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.121" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.80 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.84 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.84 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.85, void (i8*)*, i8* }
%class.SkNVRefCnt.85 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.80, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.119, %class.sk_sp.120, %class.sk_sp.120 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.94, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.110, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.86 }
%class.SkTHashTable.86 = type { i32, i32, %class.SkAutoTArray.87 }
%class.SkAutoTArray.87 = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.94 = type { %class.SkTHashTable.95 }
%class.SkTHashTable.95 = type { i32, i32, %class.SkAutoTArray.96 }
%class.SkAutoTArray.96 = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.103, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.103 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.109, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.109 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.110 = type { %class.SkTHashTable.111 }
%class.SkTHashTable.111 = type { i32, i32, %class.SkAutoTArray.112 }
%class.SkAutoTArray.112 = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.119 = type { %class.GrCaps* }
%class.sk_sp.120 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.126 }
%union.anon.126 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.127, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.127 = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.128 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.129"*, [24 x i8] }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.135, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.135 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.std::__1::function.137" = type opaque
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.150, %class.SkArenaAllocList.151, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.154*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.138, %class.sk_sp.140, %class.sk_sp.145, %class.GrGpu*, i32, i8* }
%class.SkTArray.138 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.139 }
%class.sk_sp.139 = type { %class.GrBuffer* }
%class.sk_sp.140 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.141, [4 x i8], %"class.std::__1::unique_ptr.142", i32, [4 x i8] }>
%class.GrNonAtomicRef.141 = type { i32 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.145, i8, [7 x i8] }>
%class.sk_sp.145 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.146, i8*, i64 }
%class.GrNonAtomicRef.146 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.150 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.151 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.152, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.152 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.153, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.153 = type { %"struct.std::__1::atomic" }
%class.SkTArray.154 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.76, %class.sk_sp.76, %class.sk_sp.76, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.SkTArray.164 = type { %"class.GrGeometryProcessor::Attribute"*, i64 }
%"class.(anonymous namespace)::FillRRectOp::Processor" = type { %class.GrGeometryProcessor.base, i32, %class.SkSTArray.162, %"class.GrGeometryProcessor::Attribute"* }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef.135, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.SkSTArray.162 = type { %class.SkAlignedSTStorage.163, %class.SkTArray.164 }
%class.SkAlignedSTStorage.163 = type { [96 x i8] }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.166*, i32, i32 }
%class.SkTArray.166 = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.167 }
%class.SkTArray.167 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"class.(anonymous namespace)::FillRRectOp::Processor::Impl" = type { %class.GrGLSLGeometryProcessor }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.173, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.175, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.184], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.170 }
%union.anon.170 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.173 = type { %class.SkAlignedSTStorage.174, %class.SkTArray.23 }
%class.SkAlignedSTStorage.174 = type { [120 x i8] }
%class.SkSTArray.175 = type { %class.SkAlignedSTStorage.176, %class.SkTArray.177 }
%class.SkAlignedSTStorage.176 = type { [16 x i8] }
%class.SkTArray.177 = type { %"class.std::__1::unique_ptr.178"*, i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.184 = type { %class.SkAlignedSTStorage.185, %class.SkTArray.23 }
%class.SkAlignedSTStorage.185 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.186, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.186 = type { %class.GrSBlockAllocator.187 }
%class.GrSBlockAllocator.187 = type { [80 x i8] }
%class.GrResourceHandle = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.191* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.188 }
%class.SkSTArray.188 = type { %class.SkAlignedSTStorage.189, %class.SkTArray.190 }
%class.SkAlignedSTStorage.189 = type { [32 x i8] }
%class.SkTArray.190 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.191 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.173, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.175, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.184], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV4GrOp = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@_ZN12_GLOBAL__N_111FillRRectOp9Processor14kVertexAttribsE = internal constant [3 x %"class.GrGeometryProcessor::Attribute"] [%"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i32 3, i32 24 }, %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i32 3, i32 24 }, %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), i32 3, i32 24 }], align 16
@.str = private unnamed_addr constant [15 x i8] c"radii_selector\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"corner_and_radius_outsets\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"aa_bloat_and_coverage\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/ops/GrFillRRectOp.cpp\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Invalid round rect type.\00", align 1
@_ZTVN12_GLOBAL__N_111FillRRectOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*)* @_ZN12_GLOBAL__N_111FillRRectOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*)* @_ZN12_GLOBAL__N_111FillRRectOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::FillRRectOp"*)* @_ZNK12_GLOBAL__N_111FillRRectOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*, %"class.std::__1::function.137"*)* @_ZNK12_GLOBAL__N_111FillRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRRectOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_111FillRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_111FillRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRRectOp"*)* @_ZNK12_GLOBAL__N_111FillRRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRRectOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_111FillRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::FillRRectOp"*)* @_ZN12_GLOBAL__N_111FillRRectOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_111FillRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.155", align 4
@.str.5 = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.6 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.137"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [14 x i8] c"GrFillRRectOp\00", align 1
@_ZTVN12_GLOBAL__N_111FillRRectOp9ProcessorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)* @_ZN12_GLOBAL__N_111FillRRectOp9ProcessorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)* @_ZN12_GLOBAL__N_111FillRRectOp9ProcessorD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::FillRRectOp::Processor"*)* @_ZNK12_GLOBAL__N_111FillRRectOp9Processor4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor"*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK12_GLOBAL__N_111FillRRectOp9Processor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%"class.(anonymous namespace)::FillRRectOp::Processor"*, %class.GrShaderCaps*)* @_ZNK12_GLOBAL__N_111FillRRectOp9Processor18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"skew\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"radii_x\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"radii_y\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"local_rect\00", align 1
@.str.14 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"GrFillRRectOp::Processor\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@_ZTVN12_GLOBAL__N_111FillRRectOp9Processor4ImplE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"*)* @_ZN12_GLOBAL__N_111FillRRectOp9Processor4ImplD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN12_GLOBAL__N_111FillRRectOp9Processor4Impl7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN12_GLOBAL__N_111FillRRectOp9Processor4Impl10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS3_8GrGPArgsE to i8*)] }, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.18 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"float aa_bloat_multiplier = %i;\00", align 1
@.str.22 = private unnamed_addr constant [46 x i8] c"float2 corner = corner_and_radius_outsets.xy;\00", align 1
@.str.23 = private unnamed_addr constant [53 x i8] c"float2 radius_outset = corner_and_radius_outsets.zw;\00", align 1
@.str.24 = private unnamed_addr constant [54 x i8] c"float2 aa_bloat_direction = aa_bloat_and_coverage.xy;\00", align 1
@.str.25 = private unnamed_addr constant [52 x i8] c"float is_linear_coverage = aa_bloat_and_coverage.w;\00", align 1
@.str.26 = private unnamed_addr constant [88 x i8] c"float2 pixellength = inversesqrt(float2(dot(skew.xz, skew.xz), dot(skew.yw, skew.yw)));\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"float4 normalized_axis_dirs = skew * pixellength.xyxy;\00", align 1
@.str.28 = private unnamed_addr constant [83 x i8] c"float2 axiswidths = (abs(normalized_axis_dirs.xy) + abs(normalized_axis_dirs.zw));\00", align 1
@.str.29 = private unnamed_addr constant [55 x i8] c"float2 aa_bloatradius = axiswidths * pixellength * .5;\00", align 1
@.str.30 = private unnamed_addr constant [101 x i8] c"float4 radii_and_neighbors = radii_selector* float4x4(radii_x, radii_y, radii_x.yxwz, radii_y.wzyx);\00", align 1
@.str.31 = private unnamed_addr constant [39 x i8] c"float2 radii = radii_and_neighbors.xy;\00", align 1
@.str.32 = private unnamed_addr constant [48 x i8] c"float2 neighbor_radii = radii_and_neighbors.zw;\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"float coverage_multiplier = 1;\00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"if (any(greaterThan(aa_bloatradius, float2(1)))) {\00", align 1
@.str.35 = private unnamed_addr constant [58 x i8] c"corner = max(abs(corner), aa_bloatradius) * sign(corner);\00", align 1
@.str.36 = private unnamed_addr constant [81 x i8] c"coverage_multiplier = 1 / (max(aa_bloatradius.x, 1) * max(aa_bloatradius.y, 1));\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"radii = float2(0);\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.39 = private unnamed_addr constant [42 x i8] c"float coverage = aa_bloat_and_coverage.z;\00", align 1
@.str.40 = private unnamed_addr constant [55 x i8] c"coverage = (coverage - .5) * aa_bloat_multiplier + .5;\00", align 1
@.str.41 = private unnamed_addr constant [50 x i8] c"if (any(lessThan(radii, aa_bloatradius * 1.5))) {\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"aa_bloat_direction = sign(corner);\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"if (coverage > .5) {\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"aa_bloat_direction = -aa_bloat_direction;\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"is_linear_coverage = 1;\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"} else {\00", align 1
@.str.47 = private unnamed_addr constant [64 x i8] c"radii = clamp(radii, pixellength * 1.5, 2 - pixellength * 1.5);\00", align 1
@.str.48 = private unnamed_addr constant [82 x i8] c"neighbor_radii = clamp(neighbor_radii, pixellength * 1.5, 2 - pixellength * 1.5);\00", align 1
@.str.49 = private unnamed_addr constant [45 x i8] c"float2 spacing = 2 - radii - neighbor_radii;\00", align 1
@.str.50 = private unnamed_addr constant [66 x i8] c"float2 extra_pad = max(pixellength * .0625 - spacing, float2(0));\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"radii -= extra_pad * .5;\00", align 1
@.str.52 = private unnamed_addr constant [78 x i8] c"float2 aa_outset = aa_bloat_direction * aa_bloatradius * aa_bloat_multiplier;\00", align 1
@.str.53 = private unnamed_addr constant [63 x i8] c"float2 vertexpos = corner + radius_outset * radii + aa_outset;\00", align 1
@.str.54 = private unnamed_addr constant [63 x i8] c"if (aa_bloat_direction.x != 0 && vertexpos.x * corner.x < 0) {\00", align 1
@.str.55 = private unnamed_addr constant [34 x i8] c"float backset = abs(vertexpos.x);\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"vertexpos.x = 0;\00", align 1
@.str.57 = private unnamed_addr constant [71 x i8] c"vertexpos.y += backset * sign(corner.y) * pixellength.y/pixellength.x;\00", align 1
@.str.58 = private unnamed_addr constant [77 x i8] c"coverage = (coverage - .5) * abs(corner.x) / (abs(corner.x) + backset) + .5;\00", align 1
@.str.59 = private unnamed_addr constant [63 x i8] c"if (aa_bloat_direction.y != 0 && vertexpos.y * corner.y < 0) {\00", align 1
@.str.60 = private unnamed_addr constant [34 x i8] c"float backset = abs(vertexpos.y);\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"vertexpos.y = 0;\00", align 1
@.str.62 = private unnamed_addr constant [71 x i8] c"vertexpos.x += backset * sign(corner.x) * pixellength.x/pixellength.y;\00", align 1
@.str.63 = private unnamed_addr constant [77 x i8] c"coverage = (coverage - .5) * abs(corner.y) / (abs(corner.y) + backset) + .5;\00", align 1
@.str.64 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.65 = private unnamed_addr constant [94 x i8] c"float2 localcoord = (local_rect.xy * (1 - vertexpos) + local_rect.zw * (1 + vertexpos)) * .5;\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"localcoord\00", align 1
@.str.67 = private unnamed_addr constant [50 x i8] c"float2x2 skewmatrix = float2x2(skew.xy, skew.zw);\00", align 1
@.str.68 = private unnamed_addr constant [54 x i8] c"float2 devcoord = vertexpos * skewmatrix + translate;\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"devcoord\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"arccoord\00", align 1
@.str.71 = private unnamed_addr constant [31 x i8] c"if (0 != is_linear_coverage) {\00", align 1
@.str.72 = private unnamed_addr constant [51 x i8] c"%s.xy = float2(0, coverage * coverage_multiplier);\00", align 1
@.str.73 = private unnamed_addr constant [69 x i8] c"float2 arccoord = 1 - abs(radius_outset) + aa_outset/radii * corner;\00", align 1
@.str.74 = private unnamed_addr constant [42 x i8] c"%s.xy = float2(arccoord.x+1, arccoord.y);\00", align 1
@.str.75 = private unnamed_addr constant [44 x i8] c"float2x2 derivatives = inverse(skewmatrix);\00", align 1
@.str.76 = private unnamed_addr constant [44 x i8] c"%s.zw = derivatives * (arccoord/radii * 2);\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"float x_plus_1=%s.x, y=%s.y;\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"half coverage;\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"if (0 == x_plus_1) {\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"coverage = half(y);\00", align 1
@.str.81 = private unnamed_addr constant [38 x i8] c"float fn = x_plus_1 * (x_plus_1 - 2);\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"fn = fma(y,y, fn);\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"float fnwidth = fwidth(fn);\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"float gx=%s.z, gy=%s.w;\00", align 1
@.str.85 = private unnamed_addr constant [35 x i8] c"float fnwidth = abs(gx) + abs(gy);\00", align 1
@.str.86 = private unnamed_addr constant [34 x i8] c"coverage = .5 - half(fn/fnwidth);\00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"coverage = clamp(coverage, 0, 1);\00", align 1
@.str.88 = private unnamed_addr constant [37 x i8] c"coverage = (coverage >= .5) ? 1 : 0;\00", align 1
@.str.89 = private unnamed_addr constant [28 x i8] c"half4 %s = half4(coverage);\00", align 1
@.str.90 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage = internal global %class.SkAlignedSTStorage.192 zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey = internal global i64 0, align 8
@_ZN12_GLOBAL__N_110kIndexDataE = internal constant [90 x i16] [i16 0, i16 1, i16 7, i16 1, i16 2, i16 7, i16 7, i16 2, i16 6, i16 2, i16 3, i16 6, i16 6, i16 3, i16 5, i16 3, i16 4, i16 5, i16 0, i16 1, i16 8, i16 1, i16 9, i16 8, i16 2, i16 3, i16 10, i16 3, i16 11, i16 10, i16 4, i16 5, i16 12, i16 5, i16 13, i16 12, i16 6, i16 7, i16 14, i16 7, i16 15, i16 14, i16 16, i16 17, i16 21, i16 17, i16 21, i16 18, i16 21, i16 18, i16 20, i16 18, i16 20, i16 19, i16 22, i16 23, i16 27, i16 23, i16 27, i16 24, i16 27, i16 24, i16 26, i16 24, i16 26, i16 25, i16 28, i16 29, i16 33, i16 29, i16 33, i16 30, i16 33, i16 30, i16 32, i16 30, i16 32, i16 31, i16 34, i16 35, i16 39, i16 35, i16 39, i16 36, i16 39, i16 36, i16 38, i16 36, i16 38, i16 37], align 16
@_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage = internal global %class.SkAlignedSTStorage.192 zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey = internal unnamed_addr global %class.GrUniqueKey* null, align 8
@_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey = internal global i64 0, align 8
@_ZN12_GLOBAL__N_111kVertexDataE = internal constant [40 x %"struct.(anonymous namespace)::CoverageVertex"] [%"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 1.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 1.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0x3FE2BEC320000000, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 0x3FE2BEC320000000] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 0x3FE2BEC320000000] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0xBFE2BEC320000000, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float -1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0xBFE2BEC320000000, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 0xBFE2BEC320000000] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 1.000000e+00, float 0.000000e+00] }, float 1.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float -1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 0.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0.000000e+00, float 0xBFE2BEC320000000] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }, %"struct.(anonymous namespace)::CoverageVertex" { %"struct.std::__1::array" { [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float 0x3FE2BEC320000000, float 0.000000e+00] }, %"struct.std::__1::array.193" { [2 x float] [float -1.000000e+00, float 1.000000e+00] }, float 0.000000e+00, float 0.000000e+00 }], align 16
@_ZN12_GLOBAL__N_120gIndexBufferKey_onceE = internal global { { { i8 } } } zeroinitializer, align 1
@_ZN12_GLOBAL__N_121gVertexBufferKey_onceE = internal global { { { i8 } } } zeroinitializer, align 1
@switch.table._ZN12_GLOBAL__N_111FillRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [26 x i64] [i64 4, i64 8, i64 12, i64 16, i64 4, i64 4, i64 8, i64 8, i64 12, i64 16, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8, i64 4, i64 4, i64 4, i64 4, i64 4, i64 8], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN13GrFillRRectOp4MakeEP18GrRecordingContextO7GrPaintRK8SkMatrixRK7SkRRectRK6SkRect4GrAA(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.SkRRect* nocapture readonly dereferenceable(52), %struct.SkRect* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #0 {
  %7 = alloca %struct.SkRGBA4f, align 4
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %struct.SkRect*
  %11 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %12 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %11) #15
  %13 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %12, i64 0, i32 3
  %14 = bitcast i48* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 512
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %291, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0, i32 3
  %20 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0, i32 2
  %22 = bitcast float* %21 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 0, i32 0
  %25 = bitcast %class.SkRRect* %3 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = fsub <2 x float> %23, %26
  %28 = extractelement <2 x float> %27, i32 0
  %29 = extractelement <2 x float> %27, i32 1
  %30 = fcmp olt float %29, %28
  %31 = select i1 %30, float %28, float %29
  %32 = fcmp ult float %31, 1.000000e+06
  br i1 %32, label %33, label %291

33:                                               ; preds = %18
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 192
  %37 = icmp eq i32 %36, 128
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #15
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %34, align 4
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i32 [ %40, %38 ], [ %35, %33 ]
  %43 = and i32 %42, 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %291

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %12, i64 0, i32 2, i32 0
  %47 = load %class.GrShaderCaps*, %class.GrShaderCaps** %46, align 8
  %48 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %47, i64 0, i32 2
  %49 = bitcast i56* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %213, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %57 = load float, float* %56, align 4
  %58 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %55, i32 0
  %59 = insertelement <4 x float> %58, float %57, i32 1
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %63 = load float, float* %62, align 4
  %64 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %61, i32 0
  %65 = insertelement <4 x float> %64, float %63, i32 1
  %66 = fmul <4 x float> %59, %59
  %67 = fmul <4 x float> %65, %65
  %68 = fadd <4 x float> %66, %67
  %69 = tail call <4 x float> @llvm.sqrt.v4f32(<4 x float> %68) #15
  %70 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  switch i32 %71, label %157 [
    i32 0, label %212
    i32 1, label %212
    i32 2, label %91
    i32 3, label %91
    i32 4, label %110
    i32 5, label %72
  ]

72:                                               ; preds = %53
  %73 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 0
  %74 = bitcast %struct.SkPoint* %73 to i64*
  %75 = load i64, i64* %74, align 4
  %76 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %75, i32 0
  %77 = bitcast <2 x i64> %76 to <4 x float>
  %78 = fmul <4 x float> %69, %77
  %79 = extractelement <4 x float> %78, i32 1
  %80 = extractelement <4 x float> %78, i32 0
  %81 = fcmp olt float %79, %80
  %82 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %78, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %83 = select i1 %81, <4 x float> %82, <4 x float> %78
  %84 = extractelement <4 x float> %83, i32 0
  %85 = fcmp olt float %84, 1.000000e+00
  %86 = select i1 %85, float 1.000000e+00, float %84
  %87 = fmul float %86, %86
  %88 = fmul float %87, 5.000000e+00
  %89 = extractelement <4 x float> %83, i32 1
  %90 = fcmp ogt float %88, %89
  br i1 %90, label %138, label %213

91:                                               ; preds = %53, %53
  %92 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1
  %93 = bitcast [4 x %struct.SkPoint]* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %94, i32 0
  %96 = bitcast <2 x i64> %95 to <4 x float>
  %97 = fmul <4 x float> %69, %96
  %98 = extractelement <4 x float> %97, i32 1
  %99 = extractelement <4 x float> %97, i32 0
  %100 = fcmp olt float %98, %99
  %101 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %97, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %102 = select i1 %100, <4 x float> %101, <4 x float> %97
  %103 = extractelement <4 x float> %102, i32 0
  %104 = fcmp olt float %103, 1.000000e+00
  %105 = select i1 %104, float 1.000000e+00, float %103
  %106 = fmul float %105, %105
  %107 = fmul float %106, 5.000000e+00
  %108 = extractelement <4 x float> %102, i32 1
  %109 = fcmp ogt float %107, %108
  br i1 %109, label %212, label %213

110:                                              ; preds = %53
  %111 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 0
  %112 = bitcast %struct.SkPoint* %111 to i64*
  %113 = load i64, i64* %112, align 1
  %114 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %113, i32 0
  %115 = bitcast <2 x i64> %114 to <4 x float>
  %116 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 2
  %117 = bitcast %struct.SkPoint* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %118, i32 0
  %120 = bitcast <2 x i64> %119 to <4 x float>
  %121 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %115, <4 x float> %120) #15
  %122 = tail call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %115, <4 x float> %120) #15
  %123 = shufflevector <4 x float> %121, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %124 = shufflevector <4 x float> %123, <4 x float> %122, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %125 = fmul <4 x float> %69, %124
  %126 = extractelement <4 x float> %125, i32 1
  %127 = extractelement <4 x float> %125, i32 0
  %128 = fcmp olt float %126, %127
  %129 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %125, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %130 = select i1 %128, <4 x float> %129, <4 x float> %125
  %131 = extractelement <4 x float> %130, i32 0
  %132 = fcmp olt float %131, 1.000000e+00
  %133 = select i1 %132, float 1.000000e+00, float %131
  %134 = fmul float %133, %133
  %135 = fmul float %134, 5.000000e+00
  %136 = extractelement <4 x float> %130, i32 1
  %137 = fcmp ogt float %135, %136
  br i1 %137, label %196, label %213

138:                                              ; preds = %72
  %139 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 1
  %140 = bitcast %struct.SkPoint* %139 to i64*
  %141 = load i64, i64* %140, align 4
  %142 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %141, i32 0
  %143 = bitcast <2 x i64> %142 to <4 x float>
  %144 = fmul <4 x float> %69, %143
  %145 = extractelement <4 x float> %144, i32 1
  %146 = extractelement <4 x float> %144, i32 0
  %147 = fcmp olt float %145, %146
  %148 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %144, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %149 = select i1 %147, <4 x float> %148, <4 x float> %144
  %150 = extractelement <4 x float> %149, i32 0
  %151 = fcmp olt float %150, 1.000000e+00
  %152 = select i1 %151, float 1.000000e+00, float %150
  %153 = fmul float %152, %152
  %154 = fmul float %153, 5.000000e+00
  %155 = extractelement <4 x float> %149, i32 1
  %156 = fcmp ogt float %154, %155
  br i1 %156, label %158, label %213

157:                                              ; preds = %53
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 769, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

158:                                              ; preds = %138
  %159 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 2
  %160 = bitcast %struct.SkPoint* %159 to i64*
  %161 = load i64, i64* %160, align 4
  %162 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %161, i32 0
  %163 = bitcast <2 x i64> %162 to <4 x float>
  %164 = fmul <4 x float> %69, %163
  %165 = extractelement <4 x float> %164, i32 1
  %166 = extractelement <4 x float> %164, i32 0
  %167 = fcmp olt float %165, %166
  %168 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %164, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %169 = select i1 %167, <4 x float> %168, <4 x float> %164
  %170 = extractelement <4 x float> %169, i32 0
  %171 = fcmp olt float %170, 1.000000e+00
  %172 = select i1 %171, float 1.000000e+00, float %170
  %173 = fmul float %172, %172
  %174 = fmul float %173, 5.000000e+00
  %175 = extractelement <4 x float> %169, i32 1
  %176 = fcmp ogt float %174, %175
  br i1 %176, label %177, label %213

177:                                              ; preds = %158
  %178 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %3, i64 0, i32 1, i64 3
  %179 = bitcast %struct.SkPoint* %178 to i64*
  %180 = load i64, i64* %179, align 4
  %181 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %180, i32 0
  %182 = bitcast <2 x i64> %181 to <4 x float>
  %183 = fmul <4 x float> %69, %182
  %184 = extractelement <4 x float> %183, i32 1
  %185 = extractelement <4 x float> %183, i32 0
  %186 = fcmp olt float %184, %185
  %187 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %183, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %188 = select i1 %186, <4 x float> %187, <4 x float> %183
  %189 = extractelement <4 x float> %188, i32 0
  %190 = fcmp olt float %189, 1.000000e+00
  %191 = select i1 %190, float 1.000000e+00, float %189
  %192 = fmul float %191, %191
  %193 = fmul float %192, 5.000000e+00
  %194 = extractelement <4 x float> %188, i32 1
  %195 = fcmp ogt float %193, %194
  br i1 %195, label %212, label %213

196:                                              ; preds = %110
  %197 = shufflevector <4 x float> %122, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %198 = shufflevector <4 x float> %197, <4 x float> %121, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %199 = fmul <4 x float> %69, %198
  %200 = extractelement <4 x float> %199, i32 1
  %201 = extractelement <4 x float> %199, i32 0
  %202 = fcmp olt float %200, %201
  %203 = shufflevector <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x float> %199, <4 x i32> <i32 5, i32 4, i32 2, i32 3>
  %204 = select i1 %202, <4 x float> %203, <4 x float> %199
  %205 = extractelement <4 x float> %204, i32 0
  %206 = fcmp olt float %205, 1.000000e+00
  %207 = select i1 %206, float 1.000000e+00, float %205
  %208 = fmul float %207, %207
  %209 = fmul float %208, 5.000000e+00
  %210 = extractelement <4 x float> %204, i32 1
  %211 = fcmp ogt float %209, %210
  br i1 %211, label %212, label %213

212:                                              ; preds = %196, %177, %91, %53, %53
  br label %213

213:                                              ; preds = %212, %196, %177, %158, %138, %110, %91, %72, %45
  %214 = phi i32 [ 1, %212 ], [ 0, %196 ], [ 0, %91 ], [ 0, %45 ], [ 0, %110 ], [ 0, %72 ], [ 0, %138 ], [ 0, %158 ], [ 0, %177 ]
  %215 = or i32 %214, 16
  %216 = select i1 %5, i32 %214, i32 %215
  %217 = load float, float* %24, align 4
  %218 = load float, float* %21, align 4
  %219 = load float, float* %20, align 4
  %220 = load float, float* %19, align 4
  %221 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %221) #15
  %222 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %223 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 0
  %224 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %225 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %226 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %227 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %228 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %229 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %230 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 7
  %231 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %232 = fsub float %218, %217
  %233 = fmul float %232, 5.000000e-01
  %234 = fsub float %220, %219
  %235 = fmul float %234, 5.000000e-01
  %236 = fadd float %217, %218
  %237 = fmul float %236, 5.000000e-01
  %238 = fadd float %219, %220
  %239 = fmul float %238, 5.000000e-01
  store float %233, float* %223, align 4
  store float 0.000000e+00, float* %224, align 4
  store float %237, float* %225, align 4
  store float 0.000000e+00, float* %226, align 4
  store float %235, float* %227, align 4
  store float %239, float* %228, align 4
  store float 0.000000e+00, float* %229, align 4
  store float 0.000000e+00, float* %230, align 4
  store float 1.000000e+00, float* %231, align 4
  %240 = fcmp une float %233, 1.000000e+00
  %241 = fcmp une float %235, 1.000000e+00
  %242 = or i1 %240, %241
  %243 = fcmp une float %237, 0.000000e+00
  %244 = fcmp une float %239, 0.000000e+00
  %245 = or i1 %243, %244
  %246 = zext i1 %245 to i32
  %247 = select i1 %242, i32 18, i32 16
  %248 = or i32 %247, %246
  store i32 %248, i32* %222, align 4
  %249 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %8, %class.SkMatrix* dereferenceable(40) %2) #15
  %250 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #15
  %251 = load float, float* %225, align 4
  %252 = load float, float* %228, align 4
  %253 = fadd float %251, 0.000000e+00
  %254 = fadd float %252, 0.000000e+00
  %255 = load float, float* %223, align 4
  %256 = load float, float* %224, align 4
  %257 = load float, float* %226, align 4
  %258 = insertelement <2 x float> undef, float %255, i32 0
  %259 = insertelement <2 x float> %258, float %257, i32 1
  %260 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %259)
  %261 = load float, float* %227, align 4
  %262 = insertelement <2 x float> undef, float %256, i32 0
  %263 = insertelement <2 x float> %262, float %261, i32 1
  %264 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %263)
  %265 = fadd <2 x float> %260, %264
  %266 = shufflevector <2 x float> %265, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %267 = insertelement <4 x float> undef, float %251, i32 0
  %268 = insertelement <4 x float> %267, float %252, i32 1
  %269 = insertelement <4 x float> %268, float %253, i32 2
  %270 = insertelement <4 x float> %269, float %254, i32 3
  %271 = fsub <4 x float> %270, %266
  %272 = fadd <4 x float> %270, %266
  %273 = shufflevector <4 x float> %271, <4 x float> %272, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %273, <4 x float>* %9, align 16
  %274 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %274) #15
  %275 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %276 = bitcast %struct.SkRGBA4f* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %274, i8* align 4 %276, i64 16, i1 false) #15
  %277 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %278 = load i8, i8* %277, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %213
  %281 = call i8* @_Znwm(i64 424) #17
  br label %286

282:                                              ; preds = %213
  %283 = call i8* @_Znwm(i64 456) #15
  %284 = getelementptr inbounds i8, i8* %283, i64 424
  %285 = bitcast i8* %284 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %285, %class.GrPaint* dereferenceable(48) %1) #15
  br label %286

286:                                              ; preds = %282, %280
  %287 = phi i8* [ %283, %282 ], [ %281, %280 ]
  %288 = phi %class.GrProcessorSet* [ %285, %282 ], [ null, %280 ]
  %289 = bitcast i8* %287 to %"class.(anonymous namespace)::FillRRectOp"*
  call fastcc void @_ZN12_GLOBAL__N_111FillRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK7SkRRectRK6SkRectNS0_14ProcessorFlagsESG_(%"class.(anonymous namespace)::FillRRectOp"* nonnull %289, %class.GrProcessorSet* %288, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkMatrix* nonnull dereferenceable(40) %8, %class.SkRRect* dereferenceable(52) %3, %struct.SkRect* dereferenceable(16) %4, i32 %216, %struct.SkRect* nonnull dereferenceable(16) %10) #15
  %290 = bitcast i8* %287 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %274) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %221) #15
  br label %291

291:                                              ; preds = %6, %18, %41, %286
  %292 = phi %class.GrOp* [ null, %6 ], [ null, %18 ], [ %290, %286 ], [ null, %41 ]
  ret %class.GrOp* %292
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #4

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #5

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.max.ps(<4 x float>, <4 x float>) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111FillRRectOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixRK7SkRRectRK6SkRectNS0_14ProcessorFlagsESG_(%"class.(anonymous namespace)::FillRRectOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* nocapture readonly dereferenceable(40), %class.SkRRect* nocapture readonly dereferenceable(52), %struct.SkRect* nocapture readonly dereferenceable(16), i32, %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %20, !prof !3

12:                                               ; preds = %8
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.155", %"struct.std::__1::atomic.155"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6, i64 0, i64 0)) #16
  unreachable

19:                                               ; preds = %15
  store i32 %16, i32* @_ZZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID) #15
  br label %20

20:                                               ; preds = %8, %12, %19
  %21 = load i32, i32* @_ZZN12_GLOBAL__N_111FillRRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %9, i32 %21) #15
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  %24 = lshr i32 %6, 4
  %25 = and i32 %24, 1
  %26 = xor i32 %25, 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %23, %class.GrProcessorSet* %1, i32 %26, i8 zeroext 0) #15
  %27 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 2
  %28 = bitcast %struct.SkRGBA4f* %27 to i8*
  %29 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 3
  %31 = bitcast %struct.SkRect* %30 to i8*
  %32 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 16, i1 false)
  %33 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %34 = and i32 %6, -15
  store i32 %34, i32* %33, align 8
  %35 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %36 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 0
  %37 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %38 = bitcast i8* %37 to i64*
  %39 = bitcast i8* %35 to i8**
  store i8* %36, i8** %39, align 8
  store i64 2199023255552, i64* %38, align 8
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 6
  store i32 1, i32* %40, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 7
  %42 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 12
  store %class.GrProgramInfo* null, %class.GrProgramInfo** %42, align 8
  %43 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %44 = bitcast %struct.SkRect* %43 to i8*
  %45 = bitcast %struct.SkRect* %7 to i8*
  %46 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 32, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %45, i64 16, i1 false) #15
  %47 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %48 = trunc i32 %25 to i16
  %49 = xor i16 %48, 1
  store i16 %49, i16* %47, align 2
  %50 = bitcast %class.SkMatrix* %3 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 1
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = bitcast i8* %35 to %class.SkTArray.75*
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %62 = load i8*, i8** %39, align 8
  %63 = load i64, i64* %38, align 8
  %64 = lshr i64 %63, 1
  %65 = and i64 %64, 2147483647
  %66 = add i64 %63, 8
  %67 = and i64 %66, 4294967294
  %68 = and i64 %63, -4294967295
  %69 = or i64 %67, %68
  store i64 %69, i64* %38, align 8
  %70 = getelementptr inbounds i8, i8* %62, i64 %65
  %71 = bitcast i8* %70 to i32*
  store i32 %51, i32* %71, align 4
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %72 = load i8*, i8** %39, align 8
  %73 = load i64, i64* %38, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = add i64 %73, 8
  %77 = and i64 %76, 4294967294
  %78 = and i64 %73, -4294967295
  %79 = or i64 %77, %78
  store i64 %79, i64* %38, align 8
  %80 = getelementptr inbounds i8, i8* %72, i64 %75
  %81 = bitcast i8* %80 to i32*
  store i32 %54, i32* %81, align 4
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %82 = load i8*, i8** %39, align 8
  %83 = load i64, i64* %38, align 8
  %84 = lshr i64 %83, 1
  %85 = and i64 %84, 2147483647
  %86 = add i64 %83, 8
  %87 = and i64 %86, 4294967294
  %88 = and i64 %83, -4294967295
  %89 = or i64 %87, %88
  store i64 %89, i64* %38, align 8
  %90 = getelementptr inbounds i8, i8* %82, i64 %85
  %91 = bitcast i8* %90 to i32*
  store i32 %57, i32* %91, align 4
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %92 = load i8*, i8** %39, align 8
  %93 = load i64, i64* %38, align 8
  %94 = lshr i64 %93, 1
  %95 = and i64 %94, 2147483647
  %96 = add i64 %93, 8
  %97 = and i64 %96, 4294967294
  %98 = and i64 %93, -4294967295
  %99 = or i64 %97, %98
  store i64 %99, i64* %38, align 8
  %100 = getelementptr inbounds i8, i8* %92, i64 %95
  %101 = bitcast i8* %100 to i32*
  store i32 %60, i32* %101, align 4
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 2
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 5
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %108 = load i8*, i8** %39, align 8
  %109 = load i64, i64* %38, align 8
  %110 = lshr i64 %109, 1
  %111 = and i64 %110, 2147483647
  %112 = add i64 %109, 8
  %113 = and i64 %112, 4294967294
  %114 = and i64 %109, -4294967295
  %115 = or i64 %113, %114
  store i64 %115, i64* %38, align 8
  %116 = getelementptr inbounds i8, i8* %108, i64 %111
  %117 = bitcast i8* %116 to i32*
  store i32 %104, i32* %117, align 4
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 4, i32 1) #15
  %118 = load i8*, i8** %39, align 8
  %119 = load i64, i64* %38, align 8
  %120 = lshr i64 %119, 1
  %121 = and i64 %120, 2147483647
  %122 = add i64 %119, 8
  %123 = and i64 %122, 4294967294
  %124 = and i64 %119, -4294967295
  %125 = or i64 %123, %124
  store i64 %125, i64* %38, align 8
  %126 = getelementptr inbounds i8, i8* %118, i64 %121
  %127 = bitcast i8* %126 to i32*
  store i32 %107, i32* %127, align 4
  %128 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 1, i64 0
  %129 = bitcast %struct.SkPoint* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 1
  %131 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 1, i64 2
  %132 = bitcast %struct.SkPoint* %131 to <4 x float>*
  %133 = load <4 x float>, <4 x float>* %132, align 1
  %134 = shufflevector <4 x float> %130, <4 x float> %133, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %135 = shufflevector <4 x float> %130, <4 x float> %133, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %136 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 0, i32 2
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = fsub float %137, %139
  %141 = fdiv float 2.000000e+00, %140
  %142 = insertelement <4 x float> undef, float %141, i32 0
  %143 = shufflevector <4 x float> %142, <4 x float> undef, <4 x i32> zeroinitializer
  %144 = fmul <4 x float> %134, %143
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 16, i32 1) #15
  %145 = load i8*, i8** %39, align 8
  %146 = load i64, i64* %38, align 8
  %147 = lshr i64 %146, 1
  %148 = and i64 %147, 2147483647
  %149 = add i64 %146, 32
  %150 = and i64 %149, 4294967294
  %151 = and i64 %146, -4294967295
  %152 = or i64 %150, %151
  store i64 %152, i64* %38, align 8
  %153 = getelementptr inbounds i8, i8* %145, i64 %148
  %154 = bitcast i8* %153 to <4 x float>*
  store <4 x float> %144, <4 x float>* %154, align 1
  %155 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 0, i32 3
  %156 = load float, float* %155, align 4
  %157 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %4, i64 0, i32 0, i32 1
  %158 = load float, float* %157, align 4
  %159 = fsub float %156, %158
  %160 = fdiv float 2.000000e+00, %159
  %161 = insertelement <4 x float> undef, float %160, i32 0
  %162 = shufflevector <4 x float> %161, <4 x float> undef, <4 x i32> zeroinitializer
  %163 = fmul <4 x float> %135, %162
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %61, i32 16, i32 1) #15
  %164 = load i8*, i8** %39, align 8
  %165 = load i64, i64* %38, align 8
  %166 = lshr i64 %165, 1
  %167 = and i64 %166, 2147483647
  %168 = add i64 %165, 32
  %169 = and i64 %168, 4294967294
  %170 = and i64 %165, -4294967295
  %171 = or i64 %169, %170
  store i64 %171, i64* %38, align 8
  %172 = getelementptr inbounds i8, i8* %164, i64 %167
  %173 = bitcast i8* %172 to <4 x float>*
  store <4 x float> %163, <4 x float>* %173, align 1
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #2

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOpD2Ev(%"class.(anonymous namespace)::FillRRectOp"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 10, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 9, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 8, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #15
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_Z7sk_freePv(i8* %38) #15
  br label %39

39:                                               ; preds = %29, %35
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %40) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %class.GrOp*, %class.GrOp** %41, align 8
  store %class.GrOp* null, %class.GrOp** %41, align 8
  %43 = icmp eq %class.GrOp* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = bitcast %class.GrOp* %42 to void (%class.GrOp*)***
  %46 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %46, i64 1
  %48 = load void (%class.GrOp*)*, void (%class.GrOp*)** %47, align 8
  tail call void %48(%class.GrOp* nonnull %42) #15
  br label %49

49:                                               ; preds = %39, %44
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOpD0Ev(%"class.(anonymous namespace)::FillRRectOp"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 10, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 9, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #15
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 8, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #15
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_Z7sk_freePv(i8* %38) #15
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %40) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %class.GrOp*, %class.GrOp** %41, align 8
  store %class.GrOp* null, %class.GrOp** %41, align 8
  %43 = icmp eq %class.GrOp* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = bitcast %class.GrOp* %42 to void (%class.GrOp*)***
  %46 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %46, i64 1
  %48 = load void (%class.GrOp*)*, void (%class.GrOp*)** %47, align 8
  tail call void %48(%class.GrOp* nonnull %42) #15
  br label %49

49:                                               ; preds = %39, %44
  %50 = bitcast %"class.(anonymous namespace)::FillRRectOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_111FillRRectOp4nameEv(%"class.(anonymous namespace)::FillRRectOp"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111FillRRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::FillRRectOp"* nocapture readonly, %"class.std::__1::function.137"*) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 12
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.137"* %1) #15
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.137"* %1) #15
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_111FillRRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::FillRRectOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #9 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %7 = bitcast %class.GrOp* %6 to %class.GrSimpleMeshDrawOpHelper*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %9 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %5, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %7, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %8, %struct.SkRect* dereferenceable(16) %9, i1 zeroext false) #15
  br i1 %10, label %11, label %95

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2
  %15 = bitcast %class.GrOp* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %18, label %95

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %20 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 1
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 2147483647
  %26 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 7, i32 3
  %27 = getelementptr inbounds i16, i16* %26, i64 4
  %28 = bitcast i16* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 1
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 2147483647
  %33 = xor i32 %32, 2147483647
  %34 = icmp ugt i32 %25, %33
  br i1 %34, label %95, label %35

35:                                               ; preds = %18
  %36 = bitcast i8* %19 to %class.SkTArray.75*
  %37 = bitcast i16* %26 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %36, i32 %32, i32 1) #15
  %39 = icmp eq i32 %32, 0
  br i1 %39, label %82, label %40

40:                                               ; preds = %35
  %41 = bitcast i8* %19 to i8**
  %42 = zext i32 %32 to i64
  %43 = and i64 %42, 1
  %44 = icmp eq i32 %32, 1
  br i1 %44, label %70, label %45

45:                                               ; preds = %40
  %46 = sub nsw i64 %42, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ 0, %45 ], [ %67, %47 ]
  %49 = phi i64 [ %46, %45 ], [ %68, %47 ]
  %50 = load i8*, i8** %41, align 8
  %51 = load i64, i64* %21, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = getelementptr inbounds i8, i8* %54, i64 %48
  %56 = getelementptr inbounds i8, i8* %38, i64 %48
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %55, align 1
  %58 = or i64 %48, 1
  %59 = load i8*, i8** %41, align 8
  %60 = load i64, i64* %21, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = getelementptr inbounds i8, i8* %59, i64 %62
  %64 = getelementptr inbounds i8, i8* %63, i64 %58
  %65 = getelementptr inbounds i8, i8* %38, i64 %58
  %66 = load i8, i8* %65, align 1
  store i8 %66, i8* %64, align 1
  %67 = add nuw nsw i64 %48, 2
  %68 = add i64 %49, -2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = phi i64 [ 0, %40 ], [ %67, %47 ]
  %72 = icmp eq i64 %43, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %70
  %74 = load i8*, i8** %41, align 8
  %75 = load i64, i64* %21, align 8
  %76 = lshr i64 %75, 1
  %77 = and i64 %76, 2147483647
  %78 = getelementptr inbounds i8, i8* %74, i64 %77
  %79 = getelementptr inbounds i8, i8* %78, i64 %71
  %80 = getelementptr inbounds i8, i8* %38, i64 %71
  %81 = load i8, i8* %80, align 1
  store i8 %81, i8* %79, align 1
  br label %82

82:                                               ; preds = %73, %70, %35
  %83 = load i64, i64* %21, align 8
  %84 = and i64 %29, 4294967294
  %85 = add i64 %83, %84
  %86 = and i64 %85, 4294967294
  %87 = and i64 %83, -4294967295
  %88 = or i64 %86, %87
  store i64 %88, i64* %21, align 8
  %89 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 7, i32 6, i32 2
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 6
  %93 = load i32, i32* %92, align 8
  %94 = add nsw i32 %93, %91
  store i32 %94, i32* %92, align 8
  br label %95

95:                                               ; preds = %18, %11, %4, %82
  %96 = phi i32 [ 0, %82 ], [ 2, %4 ], [ 2, %11 ], [ 2, %18 ]
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #9 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #15
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::FillRRectOp"*, %class.GrOpFlushState*, %struct.SkRect* nocapture readnone dereferenceable(16)) unnamed_addr #9 align 2 {
  %4 = alloca %class.sk_sp.76, align 8
  %5 = alloca %class.sk_sp.76, align 8
  %6 = alloca %class.sk_sp.76, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %7, i64 0, i32 0
  %9 = load %class.GrBuffer*, %class.GrBuffer** %8, align 8
  %10 = icmp eq %class.GrBuffer* %9, null
  br i1 %10, label %102, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %12, i64 0, i32 0
  %14 = load %class.GrBuffer*, %class.GrBuffer** %13, align 8
  %15 = icmp eq %class.GrBuffer* %14, null
  br i1 %15, label %102, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 9
  %18 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %17, i64 0, i32 0
  %19 = load %class.GrBuffer*, %class.GrBuffer** %18, align 8
  %20 = icmp eq %class.GrBuffer* %19, null
  br i1 %20, label %102, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 12
  %23 = load %class.GrProgramInfo*, %class.GrProgramInfo** %22, align 8
  %24 = icmp eq %class.GrProgramInfo* %23, null
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0
  %27 = icmp eq %class.GrOpFlushState* %1, null
  %28 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 1
  %29 = select i1 %27, %"class.GrMeshDrawOp::Target"* null, %"class.GrMeshDrawOp::Target"* %28
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %26, %"class.GrMeshDrawOp::Target"* %29) #15
  %30 = load %class.GrProgramInfo*, %class.GrProgramInfo** %22, align 8
  br label %31

31:                                               ; preds = %21, %25
  %32 = phi %class.GrProgramInfo* [ %23, %21 ], [ %30, %25 ]
  %33 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %34 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %35 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %34, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %35, %class.GrProgramInfo* dereferenceable(128) %32, %struct.SkRect* dereferenceable(16) %33) #15
  %36 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %32, i64 0, i32 5
  %37 = load %class.GrPipeline*, %class.GrPipeline** %36, align 8
  %38 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %37, i64 0, i32 5
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 32
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %44 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %43, align 8
  %45 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %44, i64 0, i32 4
  %46 = load %class.GrAppliedClip*, %class.GrAppliedClip** %45, align 8
  %47 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %46, i64 0, i32 0, i32 0, i32 1
  %48 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %34, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %48, %struct.SkIRect* dereferenceable(16) %47) #15
  br label %49

49:                                               ; preds = %31, %42
  %50 = load %class.GrProgramInfo*, %class.GrProgramInfo** %22, align 8
  %51 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %50, i64 0, i32 7
  %52 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %51, align 8
  %53 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %50, i64 0, i32 5
  %54 = load %class.GrPipeline*, %class.GrPipeline** %53, align 8
  %55 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %34, align 8
  tail call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %55, %class.GrGeometryProcessor* dereferenceable(80) %52, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %54) #15
  %56 = bitcast %class.sk_sp.76* %12 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %13, align 8
  %58 = bitcast %class.sk_sp.76* %7 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %class.sk_sp.76* %17 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %class.sk_sp.76* %7 to <2 x %class.GrBuffer*>*
  store <2 x %class.GrBuffer*> zeroinitializer, <2 x %class.GrBuffer*>* %62, align 8
  %63 = bitcast %class.sk_sp.76* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %class.sk_sp.76* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %class.sk_sp.76* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %34, align 8
  %67 = bitcast %class.sk_sp.76* %4 to i64*
  store i64 %57, i64* %67, align 8
  %68 = bitcast %class.sk_sp.76* %5 to i64*
  store i64 %59, i64* %68, align 8
  %69 = bitcast %class.sk_sp.76* %6 to i64*
  store i64 %61, i64* %69, align 8
  call void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass* %66, %class.sk_sp.76* nonnull %4, %class.sk_sp.76* nonnull %5, %class.sk_sp.76* nonnull %6, i1 zeroext false) #15
  %70 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %6, i64 0, i32 0
  %71 = load %class.GrBuffer*, %class.GrBuffer** %70, align 8
  %72 = icmp eq %class.GrBuffer* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %49
  %74 = bitcast %class.GrBuffer* %71 to void (%class.GrBuffer*)***
  %75 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %75, i64 3
  %77 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %76, align 8
  call void %77(%class.GrBuffer* nonnull %71) #15
  br label %78

78:                                               ; preds = %73, %49
  %79 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %5, i64 0, i32 0
  %80 = load %class.GrBuffer*, %class.GrBuffer** %79, align 8
  %81 = icmp eq %class.GrBuffer* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = bitcast %class.GrBuffer* %80 to void (%class.GrBuffer*)***
  %84 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %84, i64 3
  %86 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %85, align 8
  call void %86(%class.GrBuffer* nonnull %80) #15
  br label %87

87:                                               ; preds = %82, %78
  %88 = getelementptr inbounds %class.sk_sp.76, %class.sk_sp.76* %4, i64 0, i32 0
  %89 = load %class.GrBuffer*, %class.GrBuffer** %88, align 8
  %90 = icmp eq %class.GrBuffer* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %class.GrBuffer* %89 to void (%class.GrBuffer*)***
  %93 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %93, i64 3
  %95 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %94, align 8
  call void %95(%class.GrBuffer* nonnull %89) #15
  br label %96

96:                                               ; preds = %91, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  %97 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 6
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 11
  %100 = load i32, i32* %99, align 8
  %101 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %34, align 8
  call void @_ZN15GrOpsRenderPass20drawIndexedInstancedEiiiii(%class.GrOpsRenderPass* %101, i32 90, i32 0, i32 %98, i32 %100, i32 0) #15
  br label %102

102:                                              ; preds = %16, %11, %3, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_111FillRRectOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::FillRRectOp"*) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #15
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_111FillRRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::FillRRectOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #9 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 2
  %8 = call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper* %6, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, i32 %3, i32 1, %struct.SkRGBA4f* %7, i8* nonnull %5) #15
  %9 = load i8, i8* %5, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = or i32 %13, 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %16 = bitcast i8* %15 to %class.SkTArray.75*
  call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %16, i32 16, i32 1) #15
  %17 = bitcast i8* %15 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %21, 1
  %23 = and i64 %22, 2147483647
  %24 = add i64 %21, 32
  %25 = and i64 %24, 4294967294
  %26 = and i64 %21, -4294967295
  %27 = or i64 %25, %26
  store i64 %27, i64* %20, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 %23
  %29 = bitcast %struct.SkRGBA4f* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 16, i1 false) #15
  br label %47

30:                                               ; preds = %4
  %31 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %7) #15
  %32 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %33 = bitcast i8* %32 to %class.SkTArray.75*
  call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %33, i32 4, i32 1) #15
  %34 = bitcast i8* %32 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 1
  %40 = and i64 %39, 2147483647
  %41 = add i64 %38, 8
  %42 = and i64 %41, 4294967294
  %43 = and i64 %38, -4294967295
  %44 = or i64 %42, %43
  store i64 %44, i64* %37, align 8
  %45 = getelementptr inbounds i8, i8* %35, i64 %40
  %46 = bitcast i8* %45 to i32*
  store i32 %31, i32* %46, align 4
  br label %47

47:                                               ; preds = %30, %11
  %48 = and i32 %8, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %70, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, 2
  store i32 %53, i32* %51, align 4
  %54 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 3
  %55 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %56 = bitcast i8* %55 to %class.SkTArray.75*
  call void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75* %56, i32 16, i32 1) #15
  %57 = bitcast i8* %55 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = add i64 %61, 32
  %65 = and i64 %64, 4294967294
  %66 = and i64 %61, -4294967295
  %67 = or i64 %65, %66
  store i64 %67, i64* %60, align 8
  %68 = getelementptr inbounds i8, i8* %58, i64 %63
  %69 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 16, i1 false) #15
  br label %70

70:                                               ; preds = %47, %50
  %71 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = lshr i64 %73, 1
  %75 = trunc i64 %74 to i32
  %76 = and i32 %75, 2147483647
  %77 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 7
  store i32 %76, i32* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  ret i32 %8
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_111FillRRectOp11programInfoEv(%"class.(anonymous namespace)::FillRRectOp"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 12
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::FillRRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #9 align 2 {
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %2, i32 209, i32 8) #15
  %13 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %2, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint i8* %12 to i64
  %17 = sub i64 %16, %15
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds i8, i8* %12, i64 200
  store i8* %19, i8** %13, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %2, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_111FillRRectOp9Processor4MakeEPS_8GrAATypeNS2_14ProcessorFlagsEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_, i32 %18) #15
  %20 = bitcast i8* %12 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %20, i32 53) #15
  %21 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOp9ProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 76
  %23 = bitcast i8* %22 to i32*
  store i32 %11, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %12, i64 176
  %25 = getelementptr inbounds i8, i8* %12, i64 80
  %26 = getelementptr inbounds i8, i8* %12, i64 184
  %27 = bitcast i8* %26 to i64*
  %28 = bitcast i8* %24 to i8**
  store i8* %25, i8** %28, align 8
  store i64 51539607552, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 24
  %30 = bitcast i8* %29 to %"class.GrGeometryProcessor::Attribute"**
  store %"class.GrGeometryProcessor::Attribute"* getelementptr inbounds ([3 x %"class.GrGeometryProcessor::Attribute"], [3 x %"class.GrGeometryProcessor::Attribute"]* @_ZN12_GLOBAL__N_111FillRRectOp9Processor14kVertexAttribsE, i64 0, i64 0), %"class.GrGeometryProcessor::Attribute"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %12, i64 32
  %32 = bitcast i8* %31 to i32*
  store i32 3, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %12, i64 36
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %12, i64 40
  %36 = bitcast i8* %35 to i64*
  store i32 3, i32* %34, align 4
  store i64 48, i64* %36, align 8
  %37 = bitcast i8* %24 to %class.SkTArray.164*
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %38 = bitcast i8* %24 to %"class.GrGeometryProcessor::Attribute"**
  %39 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %40 = load i64, i64* %27, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = add i64 %40, 2
  %44 = and i64 %43, 4294967294
  %45 = and i64 %40, -4294967295
  %46 = or i64 %44, %45
  store i64 %46, i64* %27, align 8
  %47 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %39, i64 %42, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %39, i64 %42, i32 1
  store i32 3, i32* %48, align 8
  %49 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %39, i64 %42, i32 2
  store i32 24, i32* %49, align 4
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %50 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %51 = load i64, i64* %27, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = add i64 %51, 2
  %55 = and i64 %54, 4294967294
  %56 = and i64 %51, -4294967295
  %57 = or i64 %55, %56
  store i64 %57, i64* %27, align 8
  %58 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %50, i64 %53, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %50, i64 %53, i32 1
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %50, i64 %53, i32 2
  store i32 22, i32* %60, align 4
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %61 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %62 = load i64, i64* %27, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = add i64 %62, 2
  %66 = and i64 %65, 4294967294
  %67 = and i64 %62, -4294967295
  %68 = or i64 %66, %67
  store i64 %68, i64* %27, align 8
  %69 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %61, i64 %64, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %61, i64 %64, i32 1
  store i32 3, i32* %70, align 8
  %71 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %61, i64 %64, i32 2
  store i32 24, i32* %71, align 4
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %72 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %73 = load i64, i64* %27, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = add i64 %73, 2
  %77 = and i64 %76, 4294967294
  %78 = and i64 %73, -4294967295
  %79 = or i64 %77, %78
  store i64 %79, i64* %27, align 8
  %80 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %72, i64 %75, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %72, i64 %75, i32 1
  store i32 3, i32* %81, align 8
  %82 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %72, i64 %75, i32 2
  store i32 24, i32* %82, align 4
  %83 = load i32, i32* %23, align 4
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i64 133143986193, i64 133143986179
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %87 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %88 = load i64, i64* %27, align 8
  %89 = lshr i64 %88, 1
  %90 = and i64 %89, 2147483647
  %91 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %87, i64 %90
  %92 = add i64 %88, 2
  %93 = and i64 %92, 4294967294
  %94 = and i64 %88, -4294967295
  %95 = or i64 %93, %94
  store i64 %95, i64* %27, align 8
  %96 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %91, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %87, i64 %90, i32 1
  %98 = bitcast i32* %97 to i64*
  store i64 %86, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %12, i64 192
  %100 = bitcast i8* %99 to %"class.GrGeometryProcessor::Attribute"**
  store %"class.GrGeometryProcessor::Attribute"* %91, %"class.GrGeometryProcessor::Attribute"** %100, align 8
  %101 = load i32, i32* %23, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %8
  tail call void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164* %37, i32 1, i32 1) #15
  %105 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %106 = load i64, i64* %27, align 8
  %107 = lshr i64 %106, 1
  %108 = and i64 %107, 2147483647
  %109 = add i64 %106, 2
  %110 = and i64 %109, 4294967294
  %111 = and i64 %106, -4294967295
  %112 = or i64 %110, %111
  store i64 %112, i64* %27, align 8
  %113 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %105, i64 %108, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %105, i64 %108, i32 1
  store i32 3, i32* %114, align 8
  %115 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %105, i64 %108, i32 2
  store i32 24, i32* %115, align 4
  br label %116

116:                                              ; preds = %104, %8
  %117 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %38, align 8
  %118 = load i64, i64* %27, align 8
  %119 = lshr i64 %118, 1
  %120 = trunc i64 %119 to i32
  %121 = and i32 %120, 2147483647
  %122 = getelementptr inbounds i8, i8* %12, i64 48
  %123 = bitcast i8* %122 to %"class.GrGeometryProcessor::Attribute"**
  store %"class.GrGeometryProcessor::Attribute"* %117, %"class.GrGeometryProcessor::Attribute"** %123, align 8
  %124 = getelementptr inbounds i8, i8* %12, i64 56
  %125 = bitcast i8* %124 to i32*
  store i32 %121, i32* %125, align 8
  %126 = getelementptr inbounds i8, i8* %12, i64 60
  %127 = bitcast i8* %126 to i32*
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %12, i64 64
  %129 = bitcast i8* %128 to i64*
  store i64 0, i64* %129, align 8
  %130 = icmp eq i32 %121, 0
  br i1 %130, label %156, label %131

131:                                              ; preds = %116
  %132 = zext i32 %121 to i64
  br label %133

133:                                              ; preds = %151, %131
  %134 = phi i64 [ 0, %131 ], [ %152, %151 ]
  %135 = phi i32 [ 0, %131 ], [ %153, %151 ]
  %136 = phi i64 [ 0, %131 ], [ %154, %151 ]
  %137 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %117, i64 %136, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133
  %141 = add nsw i32 %135, 1
  store i32 %141, i32* %127, align 4
  %142 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %117, i64 %136, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp ult i32 %143, 26
  br i1 %144, label %146, label %145

145:                                              ; preds = %140
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

146:                                              ; preds = %140
  %147 = sext i32 %143 to i64
  %148 = getelementptr inbounds [26 x i64], [26 x i64]* @switch.table._ZN12_GLOBAL__N_111FillRRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 %147
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %134
  store i64 %150, i64* %129, align 8
  br label %151

151:                                              ; preds = %146, %133
  %152 = phi i64 [ %150, %146 ], [ %134, %133 ]
  %153 = phi i32 [ %141, %146 ], [ %135, %133 ]
  %154 = add nuw nsw i64 %136, 1
  %155 = icmp eq i64 %154, %132
  br i1 %155, label %156, label %133

156:                                              ; preds = %151, %116
  %157 = tail call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper* %9, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %20, i8 zeroext 0, i32 %6, i32 %7) #15
  %158 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 12
  store %class.GrProgramInfo* %157, %class.GrProgramInfo** %158, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::FillRRectOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #9 align 2 {
  %3 = alloca %class.sk_sp.120, align 8
  %4 = alloca %class.sk_sp.120, align 8
  %5 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i1 (%"class.GrMeshDrawOp::Target"*)***
  %6 = load i1 (%"class.GrMeshDrawOp::Target"*)**, i1 (%"class.GrMeshDrawOp::Target"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.GrMeshDrawOp::Target"*)*, i1 (%"class.GrMeshDrawOp::Target"*)** %6, i64 18
  %8 = load i1 (%"class.GrMeshDrawOp::Target"*)*, i1 (%"class.GrMeshDrawOp::Target"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.GrMeshDrawOp::Target"* %1) #15
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)***
  %12 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)**, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %12, i64 27
  %14 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %13, align 8
  %15 = tail call dereferenceable(232) %class.GrCaps* %14(%"class.GrMeshDrawOp::Target"* %1) #15
  %16 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %15, i64 0, i32 3
  %17 = bitcast i48* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 256
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = or i32 %23, 8
  store i32 %24, i32* %22, align 4
  br label %25

25:                                               ; preds = %10, %21, %2
  %26 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 11
  %33 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)***
  %34 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %34, i64 3
  %36 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.76*, i32*)** %35, align 8
  %37 = tail call i8* %36(%"class.GrMeshDrawOp::Target"* %1, i64 %28, i32 %30, %class.sk_sp.76* %31, i32* %32) #15
  %38 = icmp eq i8* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %25
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 256
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 5, i32 0, i32 0, i64 264
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %42, i64 %47, i1 false)
  br label %48

48:                                               ; preds = %25, %39
  %49 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage to i8*) acquire, align 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55, !prof !3

51:                                               ; preds = %48
  %52 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage) #15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage) #15
  br label %55

55:                                               ; preds = %51, %54, %48
  %56 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_120gIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %56, label %57 [
    i8 2, label %76
    i8 0, label %58
  ]

57:                                               ; preds = %58, %55
  br label %73

58:                                               ; preds = %55
  %59 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_120gIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %60 = extractvalue { i8, i1 } %59, 1
  br i1 %60, label %61, label %57

61:                                               ; preds = %58
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false)
  %62 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #15
  %63 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage to i32**), align 8
  %64 = icmp eq i32* %63, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = bitcast i32* %63 to i8*
  tail call void @_Z7sk_freePv(i8* %66) #15
  br label %67

67:                                               ; preds = %61, %65
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage to i32**), align 8
  %68 = or i32 %62, 524288
  store i32 %68, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8
  %69 = lshr i32 %68, 16
  %70 = zext i32 %69 to i64
  %71 = add nsw i64 %70, -4
  %72 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %71) #15
  store i32 %72, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_120gIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %76

73:                                               ; preds = %57, %73
  %74 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_120gIndexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %75 = icmp eq i8 %74, 2
  br i1 %75, label %76, label %73

76:                                               ; preds = %73, %55, %67
  %77 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey to i8*) acquire, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %83, !prof !3

79:                                               ; preds = %76
  %80 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey) #15
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE23gIndexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey) #15
  br label %83

83:                                               ; preds = %79, %82, %76
  %84 = bitcast %class.sk_sp.120* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #15
  %85 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)***
  %86 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %85, align 8
  %87 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %86, i64 22
  %88 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %87, align 8
  %89 = tail call %class.GrResourceProvider* %88(%"class.GrMeshDrawOp::Target"* %1) #15
  %90 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE15gIndexBufferKey, align 8
  call void @_ZN18GrResourceProvider22findOrMakeStaticBufferE15GrGpuBufferTypemPKvRK11GrUniqueKey(%class.sk_sp.120* nonnull sret %3, %class.GrResourceProvider* %89, i32 1, i64 180, i8* bitcast ([90 x i16]* @_ZN12_GLOBAL__N_110kIndexDataE to i8*), %class.GrUniqueKey* dereferenceable(56) %90) #15
  %91 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %3, i64 0, i32 0
  %92 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %91, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %91, align 8
  %93 = icmp eq %class.GrGpuBuffer* %92, null
  %94 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %92, i64 0, i32 1
  %95 = select i1 %93, %class.GrBuffer* null, %class.GrBuffer* %94
  %96 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 10, i32 0
  %97 = load %class.GrBuffer*, %class.GrBuffer** %96, align 8
  store %class.GrBuffer* %95, %class.GrBuffer** %96, align 8
  %98 = icmp eq %class.GrBuffer* %97, null
  br i1 %98, label %114, label %99

99:                                               ; preds = %83
  %100 = bitcast %class.GrBuffer* %97 to void (%class.GrBuffer*)***
  %101 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %101, i64 3
  %103 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %102, align 8
  call void %103(%class.GrBuffer* nonnull %97) #15
  %104 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %91, align 8
  %105 = icmp eq %class.GrGpuBuffer* %104, null
  br i1 %105, label %114, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %104, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %107, i64 -1
  %113 = bitcast %class.GrIORef* %112 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %113, i32 0) #15
  br label %114

114:                                              ; preds = %83, %99, %106, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #15
  %115 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage to i8*) acquire, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121, !prof !3

117:                                              ; preds = %114
  %118 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage) #15
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage) #15
  br label %121

121:                                              ; preds = %117, %120, %114
  %122 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_121gVertexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %122, label %123 [
    i8 2, label %142
    i8 0, label %124
  ]

123:                                              ; preds = %124, %121
  br label %139

124:                                              ; preds = %121
  %125 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_121gVertexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %126 = extractvalue { i8, i1 } %125, 1
  br i1 %126, label %127, label %123

127:                                              ; preds = %124
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false)
  %128 = call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #15
  %129 = load i32*, i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage to i32**), align 8
  %130 = icmp eq i32* %129, bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 8) to i32*)
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = bitcast i32* %129 to i8*
  call void @_Z7sk_freePv(i8* %132) #15
  br label %133

133:                                              ; preds = %127, %131
  store i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), i32** bitcast (%class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage to i32**), align 8
  %134 = or i32 %128, 524288
  store i32 %134, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), align 4
  store i8* null, i8** bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 48) to i8**), align 8
  %135 = lshr i32 %134, 16
  %136 = zext i32 %135 to i64
  %137 = add nsw i64 %136, -4
  %138 = call i32 @_Z17GrResourceKeyHashPKjm(i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 12) to i32*), i64 %137) #15
  store i32 %138, i32* bitcast (i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 8) to i32*), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_121gVertexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %142

139:                                              ; preds = %123, %139
  %140 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_121gVertexBufferKey_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %141 = icmp eq i8 %140, 2
  br i1 %141, label %142, label %139

142:                                              ; preds = %139, %121, %133
  %143 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey to i8*) acquire, align 8
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %149, !prof !3

145:                                              ; preds = %142
  %146 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey) #15
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  store i8* getelementptr inbounds (%class.SkAlignedSTStorage.192, %class.SkAlignedSTStorage.192* @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE24gVertexBufferKey_storage, i64 0, i32 0, i64 0), i8** bitcast (%class.GrUniqueKey** @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey) #15
  br label %149

149:                                              ; preds = %145, %148, %142
  %150 = bitcast %class.sk_sp.120* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #15
  %151 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)**, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*** %85, align 8
  %152 = getelementptr inbounds %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %151, i64 22
  %153 = load %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)*, %class.GrResourceProvider* (%"class.GrMeshDrawOp::Target"*)** %152, align 8
  %154 = call %class.GrResourceProvider* %153(%"class.GrMeshDrawOp::Target"* %1) #15
  %155 = load %class.GrUniqueKey*, %class.GrUniqueKey** @_ZZN12_GLOBAL__N_111FillRRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE16gVertexBufferKey, align 8
  call void @_ZN18GrResourceProvider22findOrMakeStaticBufferE15GrGpuBufferTypemPKvRK11GrUniqueKey(%class.sk_sp.120* nonnull sret %4, %class.GrResourceProvider* %154, i32 0, i64 1920, i8* bitcast ([40 x %"struct.(anonymous namespace)::CoverageVertex"]* @_ZN12_GLOBAL__N_111kVertexDataE to i8*), %class.GrUniqueKey* dereferenceable(56) %155) #15
  %156 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %4, i64 0, i32 0
  %157 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %156, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %156, align 8
  %158 = icmp eq %class.GrGpuBuffer* %157, null
  %159 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %157, i64 0, i32 1
  %160 = select i1 %158, %class.GrBuffer* null, %class.GrBuffer* %159
  %161 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp", %"class.(anonymous namespace)::FillRRectOp"* %0, i64 0, i32 9, i32 0
  %162 = load %class.GrBuffer*, %class.GrBuffer** %161, align 8
  store %class.GrBuffer* %160, %class.GrBuffer** %161, align 8
  %163 = icmp eq %class.GrBuffer* %162, null
  br i1 %163, label %179, label %164

164:                                              ; preds = %149
  %165 = bitcast %class.GrBuffer* %162 to void (%class.GrBuffer*)***
  %166 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %166, i64 3
  %168 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %167, align 8
  call void %168(%class.GrBuffer* nonnull %162) #15
  %169 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %156, align 8
  %170 = icmp eq %class.GrGpuBuffer* %169, null
  br i1 %170, label %179, label %171

171:                                              ; preds = %164
  %172 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %169, i64 0, i32 0, i32 1
  %173 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 -1 acq_rel
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %172, i64 -1
  %178 = bitcast %class.GrIORef* %177 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %178, i32 0) #15
  br label %179

179:                                              ; preds = %149, %164, %171, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #15
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIcLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.75*, i32, i32) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #15
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #15
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #15
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i64 [ %54, %53 ], [ %60, %57 ]
  %63 = getelementptr inbounds %class.SkTArray.75, %class.SkTArray.75* %0, i64 0, i32 0
  store i8* %44, i8** %63, align 8
  %64 = and i64 %62, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.137"*) unnamed_addr #9 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #9 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.137"*) local_unnamed_addr #2

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.137"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass*, %class.sk_sp.76*, %class.sk_sp.76*, %class.sk_sp.76*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN15GrOpsRenderPass20drawIndexedInstancedEiiiii(%class.GrOpsRenderPass*, i32, i32, i32, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #2

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClip11GrClampType27GrProcessorAnalysisCoverageP8SkRGBA4fIL11SkAlphaType2EEPb(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32, i32, %struct.SkRGBA4f*, i8*) local_unnamed_addr #2

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #2

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17createProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_111FillRRectOp9Processor4MakeEPS_8GrAATypeNS2_14ProcessorFlagsEEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESC_(i8*) #7 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -209
  %3 = bitcast i8* %2 to %"class.(anonymous namespace)::FillRRectOp::Processor"*
  %4 = bitcast i8* %2 to void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)***
  %5 = load void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)**, void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)*** %4, align 8
  %6 = load void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)*, void (%"class.(anonymous namespace)::FillRRectOp::Processor"*)** %5, align 8
  tail call void %6(%"class.(anonymous namespace)::FillRRectOp::Processor"* %3) #15
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9ProcessorD2Ev(%"class.(anonymous namespace)::FillRRectOp::Processor"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOp9ProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 2, i32 0, i32 0, i64 104
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 2, i32 0, i32 0, i64 96
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9ProcessorD0Ev(%"class.(anonymous namespace)::FillRRectOp::Processor"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOp9ProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 2, i32 0, i32 0, i64 104
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 2, i32 0, i32 0, i64 96
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %8
  %13 = bitcast %"class.(anonymous namespace)::FillRRectOp::Processor"* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %13) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_111FillRRectOp9Processor4nameEv(%"class.(anonymous namespace)::FillRRectOp::Processor"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111FillRRectOp9Processor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%"class.(anonymous namespace)::FillRRectOp::Processor"* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %7 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %7, i64 2
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, align 8
  tail call void %9(%class.GrProcessorKeyBuilder* %2, i32 5, i32 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull %class.GrGLSLGeometryProcessor* @_ZNK12_GLOBAL__N_111FillRRectOp9Processor18createGLSLInstanceERK12GrShaderCaps(%"class.(anonymous namespace)::FillRRectOp::Processor"* nocapture readnone, %class.GrShaderCaps* nocapture readnone dereferenceable(144)) unnamed_addr #9 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 0, i64 16, i1 false)
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_111FillRRectOp9Processor4ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #9 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.90, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN19GrGeometryProcessor9AttributeELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.164*, i32, i32) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.164, %class.SkTArray.164* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.164, %class.SkTArray.164* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %49, align 8
  %55 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %54, i64 %51
  %56 = bitcast %"class.GrGeometryProcessor::Attribute"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 16, i1 false) #15
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.164* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #15
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.167, %class.SkTArray.167* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #15
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.167* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #15
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9Processor4ImplD0Ev(%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor::Impl", %"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor::Impl", %"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor::Impl", %"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.167, %class.SkTArray.167* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #15
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #15
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #15
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #15
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #15
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #15
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.167* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #15
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #17
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9Processor4Impl7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* nocapture, %class.GrGLSLProgramDataManager* nocapture dereferenceable(8), %class.GrShaderCaps* nocapture dereferenceable(144), %class.GrGeometryProcessor* nocapture dereferenceable(80)) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #9 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #9 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111FillRRectOp9Processor4Impl10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS3_8GrGPArgsE(%"class.(anonymous namespace)::FillRRectOp::Processor::Impl"* nocapture readnone, %"struct.GrGLSLGeometryProcessor::EmitArgs"* nocapture readonly dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #9 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrShaderVar, align 8
  %6 = alloca %class.GrGLSLVarying, align 8
  %7 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1 to %class.GrGLSLShaderBuilder**
  %8 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %7, align 8
  %9 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %10 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %9, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %12 = bitcast %class.GrGeometryProcessor** %11 to %"class.(anonymous namespace)::FillRRectOp::Processor"**
  %13 = load %"class.(anonymous namespace)::FillRRectOp::Processor"*, %"class.(anonymous namespace)::FillRRectOp::Processor"** %12, align 8
  %14 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp ne i32 %16, 0
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %19 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %18, align 8
  %20 = bitcast %"class.(anonymous namespace)::FillRRectOp::Processor"* %13 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %19, %class.GrGeometryProcessor* dereferenceable(80) %20) #15
  %21 = bitcast %class.GrGLSLFPFragmentBuilder* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.GrGLSLFPFragmentBuilder* %10 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = bitcast i8* %27 to %class.GrGLSLShaderBuilder*
  %29 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %30 = load i8*, i8** %29, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i8* %30)
  %31 = getelementptr inbounds %"class.(anonymous namespace)::FillRRectOp::Processor", %"class.(anonymous namespace)::FillRRectOp::Processor"* %13, i64 0, i32 3
  %32 = load %"class.GrGeometryProcessor::Attribute"*, %"class.GrGeometryProcessor::Attribute"** %31, align 8
  %33 = load i8*, i8** %29, align 8
  tail call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %19, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %32, i8* %33, i32 1) #15
  %34 = load i32, i32* %14, align 4
  %35 = and i32 %34, 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %3
  %38 = lshr i32 %34, 4
  %39 = and i32 %38, 1
  %40 = xor i32 %39, 1
  br label %41

41:                                               ; preds = %3, %37
  %42 = phi i32 [ %40, %37 ], [ 2, %3 ]
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i32 %42)
  %43 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %8, i64 0, i32 3, i32 0, i32 0, i64 120
  %44 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %8, i64 0, i32 14
  %45 = load i32, i32* %44, align 8
  %46 = bitcast i8* %43 to %class.SkString**
  %47 = load %class.SkString*, %class.SkString** %46, align 8
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %47, i64 %48
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %49, i64 -1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.22, i64 0, i64 0)) #15
  %50 = load i32, i32* %44, align 8
  %51 = load %class.SkString*, %class.SkString** %46, align 8
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds %class.SkString, %class.SkString* %51, i64 %52
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %53, i64 -1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0)) #15
  %54 = load i32, i32* %44, align 8
  %55 = load %class.SkString*, %class.SkString** %46, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %56
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %57, i64 -1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.24, i64 0, i64 0)) #15
  %58 = load i32, i32* %44, align 8
  %59 = load %class.SkString*, %class.SkString** %46, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds %class.SkString, %class.SkString* %59, i64 %60
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %61, i64 -1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.25, i64 0, i64 0)) #15
  %62 = load i32, i32* %44, align 8
  %63 = load %class.SkString*, %class.SkString** %46, align 8
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds %class.SkString, %class.SkString* %63, i64 %64
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %65, i64 -1, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.26, i64 0, i64 0)) #15
  %66 = load i32, i32* %44, align 8
  %67 = load %class.SkString*, %class.SkString** %46, align 8
  %68 = sext i32 %66 to i64
  %69 = getelementptr inbounds %class.SkString, %class.SkString* %67, i64 %68
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %69, i64 -1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0)) #15
  %70 = load i32, i32* %44, align 8
  %71 = load %class.SkString*, %class.SkString** %46, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %class.SkString, %class.SkString* %71, i64 %72
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %73, i64 -1, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.28, i64 0, i64 0)) #15
  %74 = load i32, i32* %44, align 8
  %75 = load %class.SkString*, %class.SkString** %46, align 8
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds %class.SkString, %class.SkString* %75, i64 %76
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %77, i64 -1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0)) #15
  %78 = load i32, i32* %44, align 8
  %79 = load %class.SkString*, %class.SkString** %46, align 8
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds %class.SkString, %class.SkString* %79, i64 %80
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %81, i64 -1, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.30, i64 0, i64 0)) #15
  %82 = load i32, i32* %44, align 8
  %83 = load %class.SkString*, %class.SkString** %46, align 8
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds %class.SkString, %class.SkString* %83, i64 %84
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %85, i64 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.31, i64 0, i64 0)) #15
  %86 = load i32, i32* %44, align 8
  %87 = load %class.SkString*, %class.SkString** %46, align 8
  %88 = sext i32 %86 to i64
  %89 = getelementptr inbounds %class.SkString, %class.SkString* %87, i64 %88
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %89, i64 -1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.32, i64 0, i64 0)) #15
  %90 = load i32, i32* %44, align 8
  %91 = load %class.SkString*, %class.SkString** %46, align 8
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds %class.SkString, %class.SkString* %91, i64 %92
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %93, i64 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i64 0, i64 0)) #15
  %94 = load i32, i32* %44, align 8
  %95 = load %class.SkString*, %class.SkString** %46, align 8
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds %class.SkString, %class.SkString* %95, i64 %96
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %97, i64 -1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #15
  %98 = load i32, i32* %44, align 8
  %99 = load %class.SkString*, %class.SkString** %46, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds %class.SkString, %class.SkString* %99, i64 %100
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %101, i64 -1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.35, i64 0, i64 0)) #15
  %102 = load i32, i32* %44, align 8
  %103 = load %class.SkString*, %class.SkString** %46, align 8
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds %class.SkString, %class.SkString* %103, i64 %104
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %105, i64 -1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.36, i64 0, i64 0)) #15
  %106 = load i32, i32* %44, align 8
  %107 = load %class.SkString*, %class.SkString** %46, align 8
  %108 = sext i32 %106 to i64
  %109 = getelementptr inbounds %class.SkString, %class.SkString* %107, i64 %108
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %109, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0)) #15
  %110 = load i32, i32* %44, align 8
  %111 = load %class.SkString*, %class.SkString** %46, align 8
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds %class.SkString, %class.SkString* %111, i64 %112
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %113, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %114 = load i32, i32* %44, align 8
  %115 = load %class.SkString*, %class.SkString** %46, align 8
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds %class.SkString, %class.SkString* %115, i64 %116
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %117, i64 -1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0)) #15
  %118 = load i32, i32* %14, align 4
  %119 = and i32 %118, 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %41
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0))
  br label %122

122:                                              ; preds = %41, %121
  %123 = load i32, i32* %44, align 8
  %124 = load %class.SkString*, %class.SkString** %46, align 8
  %125 = sext i32 %123 to i64
  %126 = getelementptr inbounds %class.SkString, %class.SkString* %124, i64 %125
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %126, i64 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.41, i64 0, i64 0)) #15
  %127 = load i32, i32* %44, align 8
  %128 = load %class.SkString*, %class.SkString** %46, align 8
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds %class.SkString, %class.SkString* %128, i64 %129
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %130, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0)) #15
  %131 = load i32, i32* %44, align 8
  %132 = load %class.SkString*, %class.SkString** %46, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds %class.SkString, %class.SkString* %132, i64 %133
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %134, i64 -1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0)) #15
  %135 = load i32, i32* %44, align 8
  %136 = load %class.SkString*, %class.SkString** %46, align 8
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds %class.SkString, %class.SkString* %136, i64 %137
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %138, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  %139 = load i32, i32* %44, align 8
  %140 = load %class.SkString*, %class.SkString** %46, align 8
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds %class.SkString, %class.SkString* %140, i64 %141
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %142, i64 -1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0)) #15
  %143 = load i32, i32* %44, align 8
  %144 = load %class.SkString*, %class.SkString** %46, align 8
  %145 = sext i32 %143 to i64
  %146 = getelementptr inbounds %class.SkString, %class.SkString* %144, i64 %145
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %146, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %147 = load i32, i32* %44, align 8
  %148 = load %class.SkString*, %class.SkString** %46, align 8
  %149 = sext i32 %147 to i64
  %150 = getelementptr inbounds %class.SkString, %class.SkString* %148, i64 %149
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %150, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0)) #15
  %151 = load i32, i32* %44, align 8
  %152 = load %class.SkString*, %class.SkString** %46, align 8
  %153 = sext i32 %151 to i64
  %154 = getelementptr inbounds %class.SkString, %class.SkString* %152, i64 %153
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %154, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0)) #15
  %155 = load i32, i32* %44, align 8
  %156 = load %class.SkString*, %class.SkString** %46, align 8
  %157 = sext i32 %155 to i64
  %158 = getelementptr inbounds %class.SkString, %class.SkString* %156, i64 %157
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %158, i64 -1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.47, i64 0, i64 0)) #15
  %159 = load i32, i32* %44, align 8
  %160 = load %class.SkString*, %class.SkString** %46, align 8
  %161 = sext i32 %159 to i64
  %162 = getelementptr inbounds %class.SkString, %class.SkString* %160, i64 %161
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %162, i64 -1, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.48, i64 0, i64 0)) #15
  %163 = load i32, i32* %44, align 8
  %164 = load %class.SkString*, %class.SkString** %46, align 8
  %165 = sext i32 %163 to i64
  %166 = getelementptr inbounds %class.SkString, %class.SkString* %164, i64 %165
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %166, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.49, i64 0, i64 0)) #15
  %167 = load i32, i32* %44, align 8
  %168 = load %class.SkString*, %class.SkString** %46, align 8
  %169 = sext i32 %167 to i64
  %170 = getelementptr inbounds %class.SkString, %class.SkString* %168, i64 %169
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %170, i64 -1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.50, i64 0, i64 0)) #15
  %171 = load i32, i32* %44, align 8
  %172 = load %class.SkString*, %class.SkString** %46, align 8
  %173 = sext i32 %171 to i64
  %174 = getelementptr inbounds %class.SkString, %class.SkString* %172, i64 %173
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %174, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i64 0, i64 0)) #15
  %175 = load i32, i32* %44, align 8
  %176 = load %class.SkString*, %class.SkString** %46, align 8
  %177 = sext i32 %175 to i64
  %178 = getelementptr inbounds %class.SkString, %class.SkString* %176, i64 %177
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %178, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %179 = load i32, i32* %44, align 8
  %180 = load %class.SkString*, %class.SkString** %46, align 8
  %181 = sext i32 %179 to i64
  %182 = getelementptr inbounds %class.SkString, %class.SkString* %180, i64 %181
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %182, i64 -1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.52, i64 0, i64 0)) #15
  %183 = load i32, i32* %44, align 8
  %184 = load %class.SkString*, %class.SkString** %46, align 8
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds %class.SkString, %class.SkString* %184, i64 %185
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %186, i64 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i64 0, i64 0)) #15
  %187 = load i32, i32* %44, align 8
  %188 = load %class.SkString*, %class.SkString** %46, align 8
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds %class.SkString, %class.SkString* %188, i64 %189
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %190, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0)) #15
  %191 = load i32, i32* %44, align 8
  %192 = load %class.SkString*, %class.SkString** %46, align 8
  %193 = sext i32 %191 to i64
  %194 = getelementptr inbounds %class.SkString, %class.SkString* %192, i64 %193
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %194, i64 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.54, i64 0, i64 0)) #15
  %195 = load i32, i32* %44, align 8
  %196 = load %class.SkString*, %class.SkString** %46, align 8
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds %class.SkString, %class.SkString* %196, i64 %197
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %198, i64 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.55, i64 0, i64 0)) #15
  %199 = load i32, i32* %44, align 8
  %200 = load %class.SkString*, %class.SkString** %46, align 8
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds %class.SkString, %class.SkString* %200, i64 %201
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %202, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0)) #15
  %203 = load i32, i32* %44, align 8
  %204 = load %class.SkString*, %class.SkString** %46, align 8
  %205 = sext i32 %203 to i64
  %206 = getelementptr inbounds %class.SkString, %class.SkString* %204, i64 %205
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %206, i64 -1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.57, i64 0, i64 0)) #15
  %207 = load i32, i32* %44, align 8
  %208 = load %class.SkString*, %class.SkString** %46, align 8
  %209 = sext i32 %207 to i64
  %210 = getelementptr inbounds %class.SkString, %class.SkString* %208, i64 %209
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %210, i64 -1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.58, i64 0, i64 0)) #15
  %211 = load i32, i32* %44, align 8
  %212 = load %class.SkString*, %class.SkString** %46, align 8
  %213 = sext i32 %211 to i64
  %214 = getelementptr inbounds %class.SkString, %class.SkString* %212, i64 %213
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %214, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %215 = load i32, i32* %44, align 8
  %216 = load %class.SkString*, %class.SkString** %46, align 8
  %217 = sext i32 %215 to i64
  %218 = getelementptr inbounds %class.SkString, %class.SkString* %216, i64 %217
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %218, i64 -1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.59, i64 0, i64 0)) #15
  %219 = load i32, i32* %44, align 8
  %220 = load %class.SkString*, %class.SkString** %46, align 8
  %221 = sext i32 %219 to i64
  %222 = getelementptr inbounds %class.SkString, %class.SkString* %220, i64 %221
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %222, i64 -1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.60, i64 0, i64 0)) #15
  %223 = load i32, i32* %44, align 8
  %224 = load %class.SkString*, %class.SkString** %46, align 8
  %225 = sext i32 %223 to i64
  %226 = getelementptr inbounds %class.SkString, %class.SkString* %224, i64 %225
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %226, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0)) #15
  %227 = load i32, i32* %44, align 8
  %228 = load %class.SkString*, %class.SkString** %46, align 8
  %229 = sext i32 %227 to i64
  %230 = getelementptr inbounds %class.SkString, %class.SkString* %228, i64 %229
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %230, i64 -1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.62, i64 0, i64 0)) #15
  %231 = load i32, i32* %44, align 8
  %232 = load %class.SkString*, %class.SkString** %46, align 8
  %233 = sext i32 %231 to i64
  %234 = getelementptr inbounds %class.SkString, %class.SkString* %232, i64 %233
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %234, i64 -1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.63, i64 0, i64 0)) #15
  %235 = load i32, i32* %44, align 8
  %236 = load %class.SkString*, %class.SkString** %46, align 8
  %237 = sext i32 %235 to i64
  %238 = getelementptr inbounds %class.SkString, %class.SkString* %236, i64 %237
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %238, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %239 = load i32, i32* %44, align 8
  %240 = load %class.SkString*, %class.SkString** %46, align 8
  %241 = sext i32 %239 to i64
  %242 = getelementptr inbounds %class.SkString, %class.SkString* %240, i64 %241
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %242, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %243 = bitcast %class.GrShaderVar* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %243) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 -86, i64 40, i1 false)
  %244 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0)) #15
  %245 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 0
  store i32 22, i32* %245, align 8
  %246 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 1
  store i32 0, i32* %246, align 4
  %247 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 2
  store i32 0, i32* %247, align 8
  %248 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %248, %class.SkString* nonnull dereferenceable(8) %4) #15
  %249 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %249) #15
  %250 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %250) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244)
  %251 = load i32, i32* %14, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %262, label %254

254:                                              ; preds = %122
  %255 = load i32, i32* %44, align 8
  %256 = load %class.SkString*, %class.SkString** %46, align 8
  %257 = sext i32 %255 to i64
  %258 = getelementptr inbounds %class.SkString, %class.SkString* %256, i64 %257
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %258, i64 -1, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.65, i64 0, i64 0)) #15
  %259 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 0
  store i32 22, i32* %259, align 8
  %260 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %261 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %260, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0)) #15
  br label %262

262:                                              ; preds = %122, %254
  %263 = load i32, i32* %44, align 8
  %264 = load %class.SkString*, %class.SkString** %46, align 8
  %265 = sext i32 %263 to i64
  %266 = getelementptr inbounds %class.SkString, %class.SkString* %264, i64 %265
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %266, i64 -1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.67, i64 0, i64 0)) #15
  %267 = load i32, i32* %44, align 8
  %268 = load %class.SkString*, %class.SkString** %46, align 8
  %269 = sext i32 %267 to i64
  %270 = getelementptr inbounds %class.SkString, %class.SkString* %268, i64 %269
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %270, i64 -1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.68, i64 0, i64 0)) #15
  %271 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 0
  store i32 22, i32* %271, align 8
  %272 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 3
  %273 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %272, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0)) #15
  %274 = bitcast %class.GrGLSLVarying* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %274) #15
  %275 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 0
  %276 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 1
  %277 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 2
  %278 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 5
  %279 = select i1 %17, i32 22, i32 24
  store i32 %279, i32* %275, align 8
  %280 = bitcast i32* %276 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %280, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), %class.GrGLSLVarying* nonnull %6, i32 0) #15
  %281 = load i32, i32* %44, align 8
  %282 = load %class.SkString*, %class.SkString** %46, align 8
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds %class.SkString, %class.SkString* %282, i64 %283
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %284, i64 -1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.71, i64 0, i64 0)) #15
  %285 = load i8*, i8** %277, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.72, i64 0, i64 0), i8* %285)
  %286 = load i32, i32* %44, align 8
  %287 = load %class.SkString*, %class.SkString** %46, align 8
  %288 = sext i32 %286 to i64
  %289 = getelementptr inbounds %class.SkString, %class.SkString* %287, i64 %288
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %289, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0)) #15
  %290 = load i32, i32* %44, align 8
  %291 = load %class.SkString*, %class.SkString** %46, align 8
  %292 = sext i32 %290 to i64
  %293 = getelementptr inbounds %class.SkString, %class.SkString* %291, i64 %292
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %293, i64 -1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.73, i64 0, i64 0)) #15
  %294 = load i8*, i8** %277, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.74, i64 0, i64 0), i8* %294)
  br i1 %17, label %297, label %295

295:                                              ; preds = %262
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.75, i64 0, i64 0))
  %296 = load i8*, i8** %277, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.76, i64 0, i64 0), i8* %296)
  br label %297

297:                                              ; preds = %295, %262
  %298 = load i32, i32* %44, align 8
  %299 = load %class.SkString*, %class.SkString** %46, align 8
  %300 = sext i32 %298 to i64
  %301 = getelementptr inbounds %class.SkString, %class.SkString* %299, i64 %300
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %301, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #15
  %302 = load i8*, i8** %21, align 8
  %303 = getelementptr i8, i8* %302, i64 -24
  %304 = bitcast i8* %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds i8, i8* %26, i64 %305
  %307 = bitcast i8* %306 to %class.GrGLSLShaderBuilder*
  %308 = load i8*, i8** %278, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %307, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i64 0, i64 0), i8* %308, i8* %308)
  %309 = load i8*, i8** %21, align 8
  %310 = getelementptr i8, i8* %309, i64 -24
  %311 = bitcast i8* %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds i8, i8* %26, i64 %312
  %314 = bitcast i8* %313 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %314, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0))
  %315 = load i8*, i8** %21, align 8
  %316 = getelementptr i8, i8* %315, i64 -24
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = getelementptr inbounds i8, i8* %26, i64 %318
  %320 = bitcast i8* %319 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %320, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0))
  %321 = load i8*, i8** %21, align 8
  %322 = getelementptr i8, i8* %321, i64 -24
  %323 = bitcast i8* %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds i8, i8* %26, i64 %324
  %326 = bitcast i8* %325 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %326, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0))
  %327 = load i8*, i8** %21, align 8
  %328 = getelementptr i8, i8* %327, i64 -24
  %329 = bitcast i8* %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds i8, i8* %26, i64 %330
  %332 = bitcast i8* %331 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %332, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0))
  %333 = load i8*, i8** %21, align 8
  %334 = getelementptr i8, i8* %333, i64 -24
  %335 = bitcast i8* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = getelementptr inbounds i8, i8* %26, i64 %336
  %338 = bitcast i8* %337 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %338, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.81, i64 0, i64 0))
  %339 = load i8*, i8** %21, align 8
  %340 = getelementptr i8, i8* %339, i64 -24
  %341 = bitcast i8* %340 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds i8, i8* %26, i64 %342
  %344 = bitcast i8* %343 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %344, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82, i64 0, i64 0))
  %345 = load i8*, i8** %21, align 8
  %346 = getelementptr i8, i8* %345, i64 -24
  %347 = bitcast i8* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds i8, i8* %26, i64 %348
  %350 = bitcast i8* %349 to %class.GrGLSLShaderBuilder*
  br i1 %17, label %351, label %352

351:                                              ; preds = %297
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %350, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0))
  br label %360

352:                                              ; preds = %297
  %353 = load i8*, i8** %278, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %350, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0), i8* %353, i8* %353)
  %354 = load i8*, i8** %21, align 8
  %355 = getelementptr i8, i8* %354, i64 -24
  %356 = bitcast i8* %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = getelementptr inbounds i8, i8* %26, i64 %357
  %359 = bitcast i8* %358 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %359, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85, i64 0, i64 0))
  br label %360

360:                                              ; preds = %352, %351
  %361 = load i8*, i8** %21, align 8
  %362 = getelementptr i8, i8* %361, i64 -24
  %363 = bitcast i8* %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = getelementptr inbounds i8, i8* %26, i64 %364
  %366 = bitcast i8* %365 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %366, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.86, i64 0, i64 0))
  %367 = load i32, i32* %14, align 4
  %368 = and i32 %367, 8
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %377, label %370

370:                                              ; preds = %360
  %371 = load i8*, i8** %21, align 8
  %372 = getelementptr i8, i8* %371, i64 -24
  %373 = bitcast i8* %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = getelementptr inbounds i8, i8* %26, i64 %374
  %376 = bitcast i8* %375 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  br label %377

377:                                              ; preds = %360, %370
  %378 = load i8*, i8** %21, align 8
  %379 = getelementptr i8, i8* %378, i64 -24
  %380 = bitcast i8* %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds i8, i8* %26, i64 %381
  %383 = bitcast i8* %382 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %383, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0))
  %384 = load i32, i32* %14, align 4
  %385 = and i32 %384, 8
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %395

387:                                              ; preds = %377
  %388 = load i8*, i8** %21, align 8
  %389 = getelementptr i8, i8* %388, i64 -24
  %390 = bitcast i8* %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds i8, i8* %26, i64 %391
  %393 = bitcast i8* %392 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %394 = load i32, i32* %14, align 4
  br label %395

395:                                              ; preds = %377, %387
  %396 = phi i32 [ %384, %377 ], [ %394, %387 ]
  %397 = and i32 %396, 16
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %406, label %399

399:                                              ; preds = %395
  %400 = load i8*, i8** %21, align 8
  %401 = getelementptr i8, i8* %400, i64 -24
  %402 = bitcast i8* %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = getelementptr inbounds i8, i8* %26, i64 %403
  %405 = bitcast i8* %404 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %405, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.88, i64 0, i64 0))
  br label %406

406:                                              ; preds = %395, %399
  %407 = load i8*, i8** %21, align 8
  %408 = getelementptr i8, i8* %407, i64 -24
  %409 = bitcast i8* %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = getelementptr inbounds i8, i8* %26, i64 %410
  %412 = bitcast i8* %411 to %class.GrGLSLShaderBuilder*
  %413 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %414 = load i8*, i8** %413, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %412, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.89, i64 0, i64 0), i8* %414)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %274) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* %250) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* %249) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* %248) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %243) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #15
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #15
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #15
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #15
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #15
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #12

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #15
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #15

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #15

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #2

declare void @_ZN18GrResourceProvider22findOrMakeStaticBufferE15GrGpuBufferTypemPKvRK11GrUniqueKey(%class.sk_sp.120* sret, %class.GrResourceProvider*, i32, i64, i8*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #2

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind readnone }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
