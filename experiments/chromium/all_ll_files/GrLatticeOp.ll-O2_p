; ModuleID = '../../third_party/skia/src/gpu/ops/GrLatticeOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrLatticeOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i32 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"class.(anonymous namespace)::SkNx" = type { <4 x float> }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.177" }
%"struct.std::__1::pair.177" = type { i32, %class.SkTArray.178* }
%class.SkTArray.178 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.178, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.56 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.56 = type { %"class.std::__1::unique_ptr.53"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.70, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.70 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.71, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.166" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.71 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.162 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.72, i8* }
%class.sk_sp.72 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.73, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.73 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.74, %"class.std::__1::unique_ptr.76", i32, %class.GrDirectContext*, %class.SkSTArray.159, i8, i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.74 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.75, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.75 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %class.sk_sp.94, %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.134", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153" }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.94 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.106, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.122, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.106 = type { %class.SkTHashTable.107 }
%class.SkTHashTable.107 = type { i32, i32, %class.SkAutoTArray.108 }
%class.SkAutoTArray.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.115, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.115 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.116" }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.121, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.121 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.122 = type { %class.SkTHashTable.123 }
%class.SkTHashTable.123 = type { i32, i32, %class.SkAutoTArray.124 }
%class.SkAutoTArray.124 = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.74, %class.sk_sp.137, %class.sk_sp.137 }
%class.sk_sp.137 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.159 = type { %class.SkAlignedSTStorage.160, %class.SkTArray.161 }
%class.SkAlignedSTStorage.160 = type { [64 x i8] }
%class.SkTArray.161 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.162 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.163, void (i8*)*, i8* }
%class.SkNVRefCnt.163 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.164, i32, [4 x i8] }
%union.anon.164 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.71, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.sk_sp.171 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%"class.(anonymous namespace)::NonAALatticeOp" = type { %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelper, %class.SkSTArray.184, %class.GrSurfaceProxyView, i32, %class.sk_sp.171, i32, i8, %struct.GrSimpleMesh*, %class.GrProgramInfo* }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%class.SkSTArray.184 = type { %class.SkAlignedSTStorage.185, %class.SkTArray.186 }
%class.SkAlignedSTStorage.185 = type { [80 x i8] }
%class.SkTArray.186 = type { %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, i64 }
%"struct.(anonymous namespace)::NonAALatticeOp::Patch" = type { %class.SkMatrix, %"class.std::__1::unique_ptr.60", %struct.SkRect, %struct.SkRGBA4f }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.SkLatticeIter* }
%class.SkLatticeIter = type { %class.SkTArray.63, %class.SkTArray.63, %class.SkTArray.64, %class.SkTArray.64, %class.SkTArray.65, %class.SkTArray.66, i32, i32, i32, i32 }
%class.SkTArray.63 = type { i32*, i64 }
%class.SkTArray.64 = type { float*, i64 }
%class.SkTArray.65 = type { i8*, i64 }
%class.SkTArray.66 = type { i32*, i64 }
%struct.GrSimpleMesh = type { %class.sk_sp.187, i32, i32, i32, i32, i16, i16, i8, %class.sk_sp.187, i32, i32 }
%class.sk_sp.187 = type { %class.GrBuffer* }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.190, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.188 }
%union.anon.188 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.189, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.189 = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.190 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.191"*, [24 x i8] }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %class.GrFragmentProcessor* }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.197, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.197 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::function.198" = type { %"class.std::__1::__function::__policy_func.202" }
%"class.std::__1::__function::__policy_func.202" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.203", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.203" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)* }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.53" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.216, %class.SkArenaAllocList.217, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.220*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.204, %class.sk_sp.206, %class.sk_sp.211, %class.GrGpu*, i32, i8* }
%class.SkTArray.204 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.205 }
%class.sk_sp.205 = type { %class.GrBuffer* }
%class.sk_sp.206 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.207, [4 x i8], %"class.std::__1::unique_ptr.208", i32, [4 x i8] }>
%class.GrNonAtomicRef.207 = type { i32 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.211, i8, [7 x i8] }>
%class.sk_sp.211 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.212, i8*, i64 }
%class.GrNonAtomicRef.212 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.216 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.217 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.218, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.218 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.219, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.219 = type { %"struct.std::__1::atomic" }
%class.SkTArray.220 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.187, %class.sk_sp.187, %class.sk_sp.187, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%"class.GrMeshDrawOp::QuadHelper" = type { %"class.GrMeshDrawOp::PatternHelper.base", [7 x i8] }
%"class.GrMeshDrawOp::PatternHelper.base" = type <{ i8*, %struct.GrSimpleMesh*, i8 }>
%struct.SkPoint = type { float, float }
%"class.(anonymous namespace)::LatticeGP" = type { %class.GrGeometryProcessor.base, %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %class.sk_sp.171, %"class.GrGeometryProcessor::TextureSampler" }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef.197, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.227*, i32, i32 }
%class.SkTArray.227 = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.228 }
%class.SkTArray.228 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GLSLProcessor = type <{ %class.GrGLSLGeometryProcessor, %class.GrGLSLColorSpaceXformHelper, [4 x i8] }>
%class.GrGLSLColorSpaceXformHelper = type { %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %"struct.SkColorSpaceXformSteps::Flags", i32, i32 }
%class.GrResourceHandle = type { i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.249*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type opaque
%class.GrGLSLGeometryBuilder = type opaque
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.234, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.236, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.245], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.231 }
%union.anon.231 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.234 = type { %class.SkAlignedSTStorage.235, %class.SkTArray.23 }
%class.SkAlignedSTStorage.235 = type { [120 x i8] }
%class.SkSTArray.236 = type { %class.SkAlignedSTStorage.237, %class.SkTArray.238 }
%class.SkAlignedSTStorage.237 = type { [16 x i8] }
%class.SkTArray.238 = type { %"class.std::__1::unique_ptr.239"*, i64 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.245 = type { %class.SkAlignedSTStorage.246, %class.SkTArray.23 }
%class.SkAlignedSTStorage.246 = type { [8 x i8] }
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.247, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.247 = type { %class.GrSBlockAllocator.248 }
%class.GrSBlockAllocator.248 = type { [80 x i8] }
%class.GrResourceHandle.249 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.253* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.250 }
%class.SkSTArray.250 = type { %class.SkAlignedSTStorage.251, %class.SkTArray.252 }
%class.SkAlignedSTStorage.251 = type { [32 x i8] }
%class.SkTArray.252 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.253 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.234, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.236, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.245], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN13SkLatticeIterD2Ev = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN17GrColorSpaceXform8XformKeyEPKS_ = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV4GrOp = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@_ZTVN12_GLOBAL__N_114NonAALatticeOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*)* @_ZN12_GLOBAL__N_114NonAALatticeOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*)* @_ZN12_GLOBAL__N_114NonAALatticeOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::NonAALatticeOp"*)* @_ZNK12_GLOBAL__N_114NonAALatticeOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*, %"class.std::__1::function.198"*)* @_ZNK12_GLOBAL__N_114NonAALatticeOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_114NonAALatticeOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_114NonAALatticeOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::NonAALatticeOp"*)* @_ZNK12_GLOBAL__N_114NonAALatticeOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_114NonAALatticeOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::NonAALatticeOp"*)* @_ZN12_GLOBAL__N_114NonAALatticeOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_114NonAALatticeOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::NonAALatticeOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.221", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.198"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"NonAALatticeOp\00", align 1
@_ZN21GrUserStencilSettings7kUnusedE = external local_unnamed_addr constant %struct.GrUserStencilSettings*, align 8
@_ZTVN12_GLOBAL__N_19LatticeGPE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::LatticeGP"*)* @_ZN12_GLOBAL__N_19LatticeGPD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::LatticeGP"*)* @_ZN12_GLOBAL__N_19LatticeGPD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::LatticeGP"*)* @_ZNK12_GLOBAL__N_19LatticeGP4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::LatticeGP"*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK12_GLOBAL__N_19LatticeGP19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%"class.(anonymous namespace)::LatticeGP"*, %class.GrShaderCaps*)* @_ZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%"class.(anonymous namespace)::LatticeGP"*, i32)* @_ZNK12_GLOBAL__N_19LatticeGP16onTextureSamplerEi to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.ref.tmp = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"textureCoords\00", align 1
@.ref.tmp.5 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.6 = private unnamed_addr constant [14 x i8] c"textureDomain\00", align 1
@.ref.tmp.7 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i32 3, i32 24 }, align 8
@.str.8 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"LatticeGP\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTVZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsE13GLSLProcessor = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GLSLProcessor*)* @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%class.GLSLProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerS3_RK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.GLSLProcessor*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS5_8GrGPArgsE to i8*)] }, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.14 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"float2 textureCoords;\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"float4 textureDomain;\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%s = \00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"clamp(textureCoords, textureDomain.xy, textureDomain.zw)\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"const half4 %s = half4(1);\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"SrcTF\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"ColorXform\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"DstTF\00", align 1
@.str.27 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/gpu/ops/GrLatticeOp.cpp\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets = internal global %"class.(anonymous namespace)::SkNx" zeroinitializer, align 16
@_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets = internal global %"class.(anonymous namespace)::SkNx" zeroinitializer, align 16
@_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls = internal global %"class.(anonymous namespace)::SkNx" zeroinitializer, align 16
@_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls = internal global i64 0, align 8
@switch.table._ZN12_GLOBAL__N_114NonAALatticeOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [10 x i64] [i64 40, i64 48, i64 40, i64 40, i64 40, i64 40, i64 40, i64 40, i64 36, i64 40], align 8

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.GrOp* @_ZN11GrLatticeOp9MakeNonAAEP18GrRecordingContextO7GrPaintRK8SkMatrix18GrSurfaceProxyView11SkAlphaType5sk_spI17GrColorSpaceXformE12SkFilterModeNSt3__110unique_ptrI13SkLatticeIterNSD_14default_deleteISF_EEEERK6SkRect(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.GrSurfaceProxyView* nocapture, i32, %class.sk_sp.171* nocapture, i32, i64, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = alloca %class.sk_sp.171, align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %class.sk_sp.171, align 8
  %14 = alloca %struct.SkRGBA4f, align 4
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 0, i32 0
  %16 = bitcast %class.GrSurfaceProxyView* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  %18 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %3, i64 0, i32 2, i32 0
  %21 = load i16, i16* %20, align 2
  %22 = getelementptr inbounds %class.sk_sp.171, %class.sk_sp.171* %5, i64 0, i32 0
  %23 = bitcast %class.sk_sp.171* %5 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %22, align 8
  %25 = bitcast %struct.SkRGBA4f* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #13
  %26 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %27 = bitcast %struct.SkRGBA4f* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %27, i64 16, i1 false) #13
  %28 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %69, label %31

31:                                               ; preds = %9
  %32 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = bitcast %class.sk_sp.171* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = tail call i8* @_Znwm(i64 216) #14
  %35 = bitcast i8* %34 to %"class.(anonymous namespace)::NonAALatticeOp"*
  %36 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  store i64 %17, i64* %36, align 8
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  store i32 %19, i32* %37, align 8
  %38 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  store i16 %21, i16* %38, align 4
  %39 = bitcast %class.sk_sp.171* %11 to i64*
  store i64 %24, i64* %39, align 8
  call fastcc void @_ZN12_GLOBAL__N_114NonAALatticeOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix18GrSurfaceProxyViewS4_5sk_spI17GrColorSpaceXformE12SkFilterModeNSt3__110unique_ptrI13SkLatticeIterNSG_14default_deleteISI_EEEERK6SkRect(%"class.(anonymous namespace)::NonAALatticeOp"* nonnull %35, %class.GrProcessorSet* null, %struct.SkRGBA4f* nonnull dereferenceable(16) %14, %class.SkMatrix* dereferenceable(40) %2, %class.GrSurfaceProxyView* nonnull %10, i32 %4, %class.sk_sp.171* nonnull %11, i32 %6, i64 %7, %struct.SkRect* dereferenceable(16) %8) #13
  %40 = getelementptr inbounds %class.sk_sp.171, %class.sk_sp.171* %11, i64 0, i32 0
  %41 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %40, align 8
  %42 = icmp eq %class.GrColorSpaceXform* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.GrColorSpaceXform* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.GrColorSpaceXform* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* nonnull %48) #13
  br label %53

53:                                               ; preds = %47, %43, %31
  %54 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %55 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %54, align 8
  %56 = icmp eq %class.GrSurfaceProxy* %55, null
  br i1 %56, label %109, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %55, i64 0, i32 1
  %59 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %109

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %58, i64 -2
  %64 = bitcast %class.SkNVRefCnt* %63 to %class.GrSurfaceProxy*
  %65 = bitcast %class.SkNVRefCnt* %63 to void (%class.GrSurfaceProxy*)***
  %66 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %66, i64 1
  %68 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %67, align 8
  tail call void %68(%class.GrSurfaceProxy* nonnull %64) #13
  br label %109

69:                                               ; preds = %9
  %70 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #13
  %71 = bitcast %class.sk_sp.171* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  %72 = tail call i8* @_Znwm(i64 248) #13
  %73 = getelementptr inbounds i8, i8* %72, i64 216
  %74 = bitcast i8* %73 to %class.GrProcessorSet*
  tail call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %74, %class.GrPaint* dereferenceable(48) %1) #13
  %75 = bitcast i8* %72 to %"class.(anonymous namespace)::NonAALatticeOp"*
  %76 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %17, i64* %76, align 8
  %77 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  store i32 %19, i32* %77, align 8
  %78 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  store i16 %21, i16* %78, align 4
  %79 = bitcast %class.sk_sp.171* %13 to i64*
  store i64 %24, i64* %79, align 8
  call fastcc void @_ZN12_GLOBAL__N_114NonAALatticeOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix18GrSurfaceProxyViewS4_5sk_spI17GrColorSpaceXformE12SkFilterModeNSt3__110unique_ptrI13SkLatticeIterNSG_14default_deleteISI_EEEERK6SkRect(%"class.(anonymous namespace)::NonAALatticeOp"* nonnull %75, %class.GrProcessorSet* %74, %struct.SkRGBA4f* nonnull dereferenceable(16) %14, %class.SkMatrix* dereferenceable(40) %2, %class.GrSurfaceProxyView* nonnull %12, i32 %4, %class.sk_sp.171* nonnull %13, i32 %6, i64 %7, %struct.SkRect* dereferenceable(16) %8) #13
  %80 = getelementptr inbounds %class.sk_sp.171, %class.sk_sp.171* %13, i64 0, i32 0
  %81 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %80, align 8
  %82 = icmp eq %class.GrColorSpaceXform* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %69
  %84 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.GrColorSpaceXform* %81 to %class.SkRefCntBase*
  %89 = bitcast %class.GrColorSpaceXform* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  tail call void %92(%class.SkRefCntBase* nonnull %88) #13
  br label %93

93:                                               ; preds = %87, %83, %69
  %94 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %95 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %94, align 8
  %96 = icmp eq %class.GrSurfaceProxy* %95, null
  br i1 %96, label %109, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %95, i64 0, i32 1
  %99 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %98, i64 -2
  %104 = bitcast %class.SkNVRefCnt* %103 to %class.GrSurfaceProxy*
  %105 = bitcast %class.SkNVRefCnt* %103 to void (%class.GrSurfaceProxy*)***
  %106 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %106, i64 1
  %108 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %107, align 8
  tail call void %108(%class.GrSurfaceProxy* nonnull %104) #13
  br label %109

109:                                              ; preds = %93, %97, %102, %53, %57, %62
  %110 = phi i8* [ %32, %62 ], [ %32, %57 ], [ %32, %53 ], [ %70, %102 ], [ %70, %97 ], [ %70, %93 ]
  %111 = phi i8* [ %33, %62 ], [ %33, %57 ], [ %33, %53 ], [ %71, %102 ], [ %71, %97 ], [ %71, %93 ]
  %112 = phi i8* [ %34, %62 ], [ %34, %57 ], [ %34, %53 ], [ %72, %102 ], [ %72, %97 ], [ %72, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  %113 = bitcast i8* %112 to %class.GrOp*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #13
  ret %class.GrOp* %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114NonAALatticeOpC2EP14GrProcessorSetRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrix18GrSurfaceProxyViewS4_5sk_spI17GrColorSpaceXformE12SkFilterModeNSt3__110unique_ptrI13SkLatticeIterNSG_14default_deleteISI_EEEERK6SkRect(%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrProcessorSet*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.GrSurfaceProxyView* nocapture, i32, %class.sk_sp.171* nocapture, i32, i64, %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !3

14:                                               ; preds = %10
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID) #13
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.221", %"struct.std::__1::atomic.221"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

21:                                               ; preds = %17
  store i32 %18, i32* @_ZZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID) #13
  br label %22

22:                                               ; preds = %21, %14, %10
  %23 = load i32, i32* @_ZZN12_GLOBAL__N_114NonAALatticeOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %11, i32 %23) #13
  %24 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114NonAALatticeOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper* %25, %class.GrProcessorSet* %1, i32 0, i8 zeroext 0) #13
  %26 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %27 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %29 = bitcast i8* %28 to i64*
  %30 = bitcast i8* %26 to i8**
  store i8* %27, i8** %30, align 8
  store i64 8589934592, i64* %29, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %33 = bitcast %class.GrSurfaceProxyView* %4 to i64*
  %34 = load i64, i64* %33, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %32, align 8
  %35 = bitcast %class.GrSurfaceProxyView* %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 1
  %37 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 2, i32 0
  %40 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 2, i32 0
  %41 = load i16, i16* %40, align 2
  store i16 %41, i16* %39, align 2
  %42 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 4
  store i32 %5, i32* %42, align 8
  %43 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %class.sk_sp.171, %class.sk_sp.171* %6, i64 0, i32 0
  %45 = bitcast %class.sk_sp.171* %6 to i64*
  %46 = load i64, i64* %45, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %44, align 8
  %47 = bitcast %class.sk_sp.171* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 6
  store i32 %7, i32* %48, align 8
  %49 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 8
  %50 = bitcast i8* %26 to %class.SkTArray.186*
  %51 = bitcast %struct.GrSimpleMesh** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false)
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114NonAALatticeOp5PatchELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.186* %50, i32 1) #13
  %52 = bitcast i8* %26 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %53 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %52, align 8
  %54 = load i64, i64* %29, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %29, align 8
  %62 = bitcast %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %57 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %62, align 4
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 0, i32 0, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %64, align 4
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 0, i32 0, i64 8
  store float 1.000000e+00, float* %65, align 4
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 0, i32 1
  store i32 16, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 1
  %68 = bitcast %"class.std::__1::unique_ptr.60"* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = bitcast %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %57 to i8*
  %70 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 4 %70, i64 40, i1 false)
  %71 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 3
  %72 = bitcast %struct.SkRGBA4f* %71 to i8*
  %73 = bitcast %struct.SkRGBA4f* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 4 %73, i64 16, i1 false)
  store i64 %8, i64* %68, align 8
  %74 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %53, i64 %56, i32 2
  %75 = bitcast %struct.SkRect* %74 to i8*
  %76 = bitcast %struct.SkRect* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 4 %76, i64 16, i1 false)
  %77 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %78 = tail call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %3, %struct.SkRect* %77, %struct.SkRect* dereferenceable(16) %74, i32 1) #13
  %79 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  store i16 0, i16* %79, align 2
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #3

declare void @_ZN24GrSimpleMeshDrawOpHelperC1EP14GrProcessorSet8GrAATypeNS_10InputFlagsE(%class.GrSimpleMeshDrawOpHelper*, %class.GrProcessorSet*, i32, i8 zeroext) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NonAALatticeOpD2Ev(%"class.(anonymous namespace)::NonAALatticeOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_114NonAALatticeOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %17, align 8
  %19 = icmp eq %class.GrSurfaceProxy* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %18, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %21, i64 -2
  %27 = bitcast %class.SkNVRefCnt* %26 to %class.GrSurfaceProxy*
  %28 = bitcast %class.SkNVRefCnt* %26 to void (%class.GrSurfaceProxy*)***
  %29 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %29, i64 1
  %31 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %30, align 8
  tail call void %31(%class.GrSurfaceProxy* nonnull %27) #13
  br label %32

32:                                               ; preds = %16, %20, %25
  %33 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %34 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 4294967294
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  %40 = bitcast i8* %33 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  br label %45

41:                                               ; preds = %53, %32
  %42 = phi i64 [ %36, %32 ], [ %55, %53 ]
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %62, label %59

45:                                               ; preds = %53, %39
  %46 = phi i64 [ 0, %39 ], [ %54, %53 ]
  %47 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %40, align 8
  %48 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %47, i64 %46, i32 1, i32 0, i32 0, i32 0
  %49 = load %class.SkLatticeIter*, %class.SkLatticeIter** %48, align 8
  store %class.SkLatticeIter* null, %class.SkLatticeIter** %48, align 8
  %50 = icmp eq %class.SkLatticeIter* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  tail call void @_ZN13SkLatticeIterD2Ev(%class.SkLatticeIter* nonnull %49) #13
  %52 = bitcast %class.SkLatticeIter* %49 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %51, %45
  %54 = add nuw nsw i64 %46, 1
  %55 = load i64, i64* %35, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = icmp ult i64 %54, %57
  br i1 %58, label %45, label %41

59:                                               ; preds = %41
  %60 = bitcast i8* %33 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_Z7sk_freePv(i8* %61) #13
  br label %62

62:                                               ; preds = %41, %59
  %63 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper* %63) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %64 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %class.GrOp*, %class.GrOp** %64, align 8
  store %class.GrOp* null, %class.GrOp** %64, align 8
  %66 = icmp eq %class.GrOp* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = bitcast %class.GrOp* %65 to void (%class.GrOp*)***
  %69 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %69, i64 1
  %71 = load void (%class.GrOp*)*, void (%class.GrOp*)** %70, align 8
  tail call void %71(%class.GrOp* nonnull %65) #13
  br label %72

72:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NonAALatticeOpD0Ev(%"class.(anonymous namespace)::NonAALatticeOp"*) unnamed_addr #4 align 2 {
  tail call void @_ZN12_GLOBAL__N_114NonAALatticeOpD2Ev(%"class.(anonymous namespace)::NonAALatticeOp"* %0) #13
  %2 = bitcast %"class.(anonymous namespace)::NonAALatticeOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_114NonAALatticeOp4nameEv(%"class.(anonymous namespace)::NonAALatticeOp"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_114NonAALatticeOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::NonAALatticeOp"* nocapture readonly, %"class.std::__1::function.198"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.198", %"class.std::__1::function.198"* %1, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)*, void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.198", %"class.std::__1::function.198"* %1, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %class.GrSurfaceProxy* %4, i1 zeroext false) #13
  %8 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 9
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 8
  %10 = icmp eq %class.GrProgramInfo* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %9, i64 0, i32 5
  %13 = load %class.GrPipeline*, %class.GrPipeline** %12, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %13, %"class.std::__1::function.198"* dereferenceable(32) %1) #13
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1, i32 0
  %16 = load %class.GrProcessorSet*, %class.GrProcessorSet** %15, align 8
  %17 = icmp eq %class.GrProcessorSet* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %16, %"class.std::__1::function.198"* dereferenceable(32) %1) #13
  br label %19

19:                                               ; preds = %18, %14, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114NonAALatticeOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = bitcast %class.GrOp* %1 to %"class.(anonymous namespace)::NonAALatticeOp"*
  %6 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 2
  %7 = bitcast %class.GrOp** %6 to %class.GrSurfaceProxyView*
  %8 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %8, align 8
  %10 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %9, i64 0, i32 10, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.GrOp** %6 to %class.GrSurfaceProxy**
  %13 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %12, align 8
  %14 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %13, i64 0, i32 10, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %11, %15
  br i1 %16, label %17, label %106

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %class.GrOp*, %class.GrOp** %6, i64 1
  %21 = bitcast %class.GrOp** %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %106

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 2, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %26, %28
  br i1 %29, label %30, label %106

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 4
  %34 = bitcast %class.GrOp* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %32, %35
  br i1 %36, label %37, label %106

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 5, i32 0
  %39 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %38, align 8
  %40 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 6, i32 2
  %41 = bitcast float* %40 to %class.GrColorSpaceXform**
  %42 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %41, align 8
  %43 = tail call zeroext i1 @_ZN17GrColorSpaceXform6EqualsEPKS_S1_(%class.GrColorSpaceXform* %39, %class.GrColorSpaceXform* %42) #13
  br i1 %43, label %106, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %47 = bitcast %class.GrOp* %46 to %class.GrSimpleMeshDrawOpHelper*
  %48 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %49 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %50 = tail call zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper* %45, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16) %47, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %48, %struct.SkRect* dereferenceable(16) %49, i1 zeroext false) #13
  br i1 %50, label %51, label %106

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %53 = bitcast i8* %52 to %class.SkTArray.186*
  %54 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3
  %55 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 3, i32 1
  %56 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = lshr i64 %57, 1
  %59 = trunc i64 %58 to i32
  %60 = and i32 %59, 2147483647
  %61 = bitcast %class.GrOp* %54 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %62 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %61, align 8
  tail call fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114NonAALatticeOp5PatchELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.186* %53, i32 %60) #13
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %92, label %64

64:                                               ; preds = %51
  %65 = bitcast i8* %52 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %66 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %67 = bitcast i8* %66 to i64*
  %68 = zext i32 %60 to i64
  br label %69

69:                                               ; preds = %69, %64
  %70 = phi i64 [ 0, %64 ], [ %90, %69 ]
  %71 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %65, align 8
  %72 = load i64, i64* %67, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %71, i64 %74
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %75, i64 %70
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %62, i64 %70
  %78 = bitcast %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %76 to i8*
  %79 = bitcast %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 40, i1 false) #13
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %76, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %62, i64 %70, i32 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.60"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkLatticeIter* null, %class.SkLatticeIter** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.60"* %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %76, i64 0, i32 2
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %62, i64 %70, i32 2
  %88 = bitcast %struct.SkRect* %86 to i8*
  %89 = bitcast %struct.SkRect* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 32, i1 false) #13
  %90 = add nuw nsw i64 %70, 1
  %91 = icmp eq i64 %90, %68
  br i1 %91, label %92, label %69

92:                                               ; preds = %69, %51
  %93 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %57, 4294967294
  %97 = add i64 %95, %96
  %98 = and i64 %97, 4294967294
  %99 = and i64 %95, -4294967295
  %100 = or i64 %98, %99
  store i64 %100, i64* %94, align 8
  %101 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %5, i64 0, i32 7
  %102 = load i8, i8* %101, align 4, !range !2
  %103 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 7
  %104 = load i8, i8* %103, align 4, !range !2
  %105 = or i8 %104, %102
  store i8 %105, i8* %103, align 4
  br label %106

106:                                              ; preds = %24, %4, %17, %44, %37, %30, %92
  %107 = phi i32 [ 0, %92 ], [ 2, %24 ], [ 2, %30 ], [ 2, %37 ], [ 2, %44 ], [ 2, %17 ], [ 2, %4 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #13
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NonAALatticeOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::NonAALatticeOp"* nocapture readonly, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrSurfaceProxy*, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 9
  %6 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %7 = icmp eq %class.GrProgramInfo* %6, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 8
  %10 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %9, align 8
  %11 = icmp eq %struct.GrSimpleMesh* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %14 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %13, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %14, %class.GrProgramInfo* nonnull dereferenceable(128) %6, %struct.SkRect* dereferenceable(16) %2) #13
  %15 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %6, i64 0, i32 5
  %16 = load %class.GrPipeline*, %class.GrPipeline** %15, align 8
  %17 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %16, i64 0, i32 5
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 32
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %23 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %22, align 8
  %24 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %23, i64 0, i32 4
  %25 = load %class.GrAppliedClip*, %class.GrAppliedClip** %24, align 8
  %26 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %25, i64 0, i32 0, i32 0, i32 1
  %27 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %13, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %27, %struct.SkIRect* dereferenceable(16) %26) #13
  br label %28

28:                                               ; preds = %12, %21
  %29 = load %class.GrProgramInfo*, %class.GrProgramInfo** %5, align 8
  %30 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %29, i64 0, i32 7
  %31 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %30, align 8
  %32 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %33 = bitcast %class.GrSurfaceProxy** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %29, i64 0, i32 5
  %36 = load %class.GrPipeline*, %class.GrPipeline** %35, align 8
  %37 = bitcast %class.GrSurfaceProxy** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = bitcast %class.GrSurfaceProxy** %4 to i64*
  store i64 %34, i64* %38, align 8
  %39 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %13, align 8
  call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %39, %class.GrGeometryProcessor* dereferenceable(80) %31, %class.GrSurfaceProxy** nonnull %4, %class.GrPipeline* dereferenceable(128) %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  %40 = load %struct.GrSimpleMesh*, %struct.GrSimpleMesh** %9, align 8
  call void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState* %1, %struct.GrSimpleMesh* dereferenceable(48) %40) #13
  br label %41

41:                                               ; preds = %8, %3, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_114NonAALatticeOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::NonAALatticeOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper* %2) #13
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114NonAALatticeOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::NonAALatticeOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.GrProcessorAnalysisColor, align 4
  %6 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %8 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %7, align 8
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %8, i64 0, i32 3, i32 3
  %10 = load float, float* %9, align 4
  %11 = fcmp oeq float %10, 1.000000e+00
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  %16 = select i1 %15, i32 2, i32 0
  br label %17

17:                                               ; preds = %12, %4
  %18 = phi i32 [ 0, %4 ], [ %16, %12 ]
  %19 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #13
  %20 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 0
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1
  %22 = bitcast %struct.SkRGBA4f* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false) #13
  %23 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1
  %24 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** @_ZN21GrUserStencilSettings7kUnusedE, align 8
  %25 = call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper* %23, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, %struct.GrUserStencilSettings* %24, i32 %3, i32 0, %class.GrProcessorAnalysisColor* nonnull %5) #13
  %26 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %7, align 8
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %26, i64 0, i32 3
  %28 = load i32, i32* %20, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = icmp eq %struct.SkRGBA4f* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %36, label %33

33:                                               ; preds = %17
  %34 = bitcast %struct.SkRGBA4f* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %22, i64 16, i1 false) #13
  %35 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %7, align 8
  br label %36

36:                                               ; preds = %17, %33
  %37 = phi %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* [ %26, %17 ], [ %35, %33 ]
  %38 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %37, i64 0, i32 3, i32 0
  %39 = load float, float* %38, align 4
  %40 = fcmp ult float %39, 0.000000e+00
  %41 = fcmp ugt float %39, 1.000000e+00
  %42 = or i1 %40, %41
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %37, i64 0, i32 3, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp ult float %45, 0.000000e+00
  %47 = fcmp ugt float %45, 1.000000e+00
  %48 = or i1 %46, %47
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %37, i64 0, i32 3, i32 2
  %51 = load float, float* %50, align 4
  %52 = fcmp ult float %51, 0.000000e+00
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = fcmp ugt float %51, 1.000000e+00
  %55 = zext i1 %54 to i8
  br label %56

56:                                               ; preds = %36, %43, %49, %53
  %57 = phi i8 [ 1, %49 ], [ 1, %43 ], [ 1, %36 ], [ %55, %53 ]
  %58 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 7
  store i8 %57, i8* %58, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #13
  ret i32 %25
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_114NonAALatticeOp11programInfoEv(%"class.(anonymous namespace)::NonAALatticeOp"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 9
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NonAALatticeOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::NonAALatticeOp"* nocapture, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca %class.GrSwizzle, align 2
  %10 = alloca %class.GrProcessorSet, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 5, i32 0
  %12 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %11, align 8
  %13 = icmp eq %class.GrColorSpaceXform* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %8, %14
  %18 = ptrtoint %class.GrColorSpaceXform* %12 to i64
  %19 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %2, i32 257, i32 8) #13
  %25 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %2, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = ptrtoint i8* %24 to i64
  %29 = sub i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds i8, i8* %24, i64 248
  store i8* %31, i8** %25, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %2, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_19LatticeGP4MakeEPS_RK18GrSurfaceProxyView5sk_spI17GrColorSpaceXformE12SkFilterModebEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESG_, i32 %30) #13
  %32 = bitcast i8* %24 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %32, i32 86) #13
  %33 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_19LatticeGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %24, i64 80
  %35 = getelementptr inbounds i8, i8* %24, i64 96
  %36 = getelementptr inbounds i8, i8* %24, i64 112
  %37 = getelementptr inbounds i8, i8* %24, i64 144
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 64, i1 false) #13
  %38 = bitcast i8* %37 to i64*
  store i64 %18, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %24, i64 152
  %40 = bitcast i8* %39 to %"class.GrGeometryProcessor::TextureSampler"*
  store i8 0, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %24, i64 153
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %24, i64 156
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %24, i64 160
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %24, i64 168
  %47 = bitcast i8* %46 to i32*
  store i32 5, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %24, i64 172
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds i8, i8* %24, i64 232
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %24, i64 240
  %52 = bitcast i8* %51 to %class.GrSwizzle*
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #13
  %53 = getelementptr inbounds i8, i8* %24, i64 242
  store i8 0, i8* %53, align 2
  %54 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %55 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %54, align 8
  %56 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %55, i64 0, i32 5
  %57 = bitcast %class.GrSwizzle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %57) #13
  %58 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %9, i64 0, i32 0
  %59 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 2, i32 0
  %60 = load i16, i16* %59, align 2, !noalias !4
  store i16 %60, i16* %58, align 2, !alias.scope !4
  %61 = zext i32 %20 to i64
  %62 = shl nuw i64 %61, 32
  call void @_ZN19GrGeometryProcessor14TextureSampler5resetE14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"* %40, i64 %62, i32 0, %class.GrBackendFormat* dereferenceable(72) %56, %class.GrSwizzle* nonnull dereferenceable(2) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %57) #13
  %63 = getelementptr inbounds i8, i8* %24, i64 72
  %64 = bitcast i8* %63 to i32*
  store i32 1, i32* %64, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp to i8*), i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.5 to i8*), i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.7 to i8*), i64 16, i1 false) #13
  %65 = select i1 %23, i64 133143986193, i64 133143986179
  %66 = getelementptr inbounds i8, i8* %24, i64 128
  %67 = bitcast i8* %66 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds i8, i8* %24, i64 136
  %69 = bitcast i8* %68 to i64*
  store i64 %65, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %24, i64 24
  %71 = bitcast i8* %70 to i8**
  store i8* %34, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %24, i64 32
  %73 = bitcast i8* %72 to i32*
  store i32 4, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %24, i64 36
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds i8, i8* %24, i64 40
  %77 = bitcast i8* %76 to i64*
  %78 = trunc i64 %65 to i32
  store i64 32, i64* %77, align 8
  store i32 4, i32* %75, align 4
  %79 = add nsw i32 %78, -1
  %80 = lshr exact i32 %79, 1
  %81 = trunc i32 %80 to i16
  %82 = lshr i16 771, %81
  %83 = and i16 %82, 1
  %84 = icmp ne i16 %83, 0
  call void @llvm.assume(i1 %84)
  %85 = zext i32 %80 to i64
  %86 = getelementptr inbounds [10 x i64], [10 x i64]* @switch.table._ZN12_GLOBAL__N_114NonAALatticeOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 %85
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %77, align 8
  %88 = icmp eq i8* %24, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %17
  %90 = bitcast %class.GrProcessorSet* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1, i32 0
  %92 = load %class.GrProcessorSet*, %class.GrProcessorSet** %91, align 8, !noalias !7
  %93 = icmp eq %class.GrProcessorSet* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @_ZN14GrProcessorSetC1EOS_(%class.GrProcessorSet* nonnull %10, %class.GrProcessorSet* nonnull dereferenceable(32) %92) #13
  br label %96

95:                                               ; preds = %89
  call void @_ZN14GrProcessorSet12MakeEmptySetEv(%class.GrProcessorSet* nonnull sret %10) #13
  br label %96

96:                                               ; preds = %94, %95
  %97 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 8
  %99 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** @_ZN21GrUserStencilSettings7kUnusedE, align 8
  %100 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17CreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessorO14GrProcessorSet15GrPrimitiveType18GrXferBarrierFlags8GrLoadOpN10GrPipeline10InputFlagsEPK21GrUserStencilSettings(%class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* nonnull %32, %class.GrProcessorSet* nonnull dereferenceable(32) %10, i8 zeroext 0, i32 %6, i32 %7, i8 zeroext %98, %struct.GrUserStencilSettings* %99) #13
  %101 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 9
  store %class.GrProgramInfo* %100, %class.GrProgramInfo** %101, align 8
  call void @_ZN14GrProcessorSetD1Ev(%class.GrProcessorSet* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  br label %102

102:                                              ; preds = %17, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::NonAALatticeOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #7 align 2 {
  %3 = alloca %"class.GrMeshDrawOp::QuadHelper", align 8
  %4 = alloca <4 x i32>, align 16
  %5 = bitcast <4 x i32>* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 9
  %9 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 8
  %10 = icmp eq %class.GrProgramInfo* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 0
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %12, %"class.GrMeshDrawOp::Target"* %1) #13
  %13 = load %class.GrProgramInfo*, %class.GrProgramInfo** %8, align 8
  %14 = icmp eq %class.GrProgramInfo* %13, null
  br i1 %14, label %416, label %15

15:                                               ; preds = %11, %2
  %16 = phi %class.GrProgramInfo* [ %13, %11 ], [ %9, %2 ]
  %17 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 80
  %18 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 2, i32 0, i32 0, i64 88
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 1
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %416, label %25

25:                                               ; preds = %15
  %26 = bitcast i8* %17 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %27 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %26, align 8
  %28 = zext i32 %23 to i64
  %29 = add nsw i64 %28, -1
  %30 = and i64 %28, 3
  %31 = icmp ult i64 %29, 3
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %28, %30
  br label %54

34:                                               ; preds = %54, %25
  %35 = phi i32 [ undef, %25 ], [ %80, %54 ]
  %36 = phi i64 [ 0, %25 ], [ %81, %54 ]
  %37 = phi i32 [ 0, %25 ], [ %80, %54 ]
  %38 = icmp eq i64 %30, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %34, %39
  %40 = phi i64 [ %48, %39 ], [ %36, %34 ]
  %41 = phi i32 [ %47, %39 ], [ %37, %34 ]
  %42 = phi i64 [ %49, %39 ], [ %30, %34 ]
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %27, i64 %40, i32 1, i32 0, i32 0, i32 0
  %44 = load %class.SkLatticeIter*, %class.SkLatticeIter** %43, align 8
  %45 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %44, i64 0, i32 9
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %46, %41
  %48 = add nuw nsw i64 %40, 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !10

51:                                               ; preds = %39, %34
  %52 = phi i32 [ %35, %34 ], [ %47, %39 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %416, label %84

54:                                               ; preds = %54, %32
  %55 = phi i64 [ 0, %32 ], [ %81, %54 ]
  %56 = phi i32 [ 0, %32 ], [ %80, %54 ]
  %57 = phi i64 [ %33, %32 ], [ %82, %54 ]
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %27, i64 %55, i32 1, i32 0, i32 0, i32 0
  %59 = load %class.SkLatticeIter*, %class.SkLatticeIter** %58, align 8
  %60 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %59, i64 0, i32 9
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, %56
  %63 = or i64 %55, 1
  %64 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %27, i64 %63, i32 1, i32 0, i32 0, i32 0
  %65 = load %class.SkLatticeIter*, %class.SkLatticeIter** %64, align 8
  %66 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %65, i64 0, i32 9
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, %62
  %69 = or i64 %55, 2
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %27, i64 %69, i32 1, i32 0, i32 0, i32 0
  %71 = load %class.SkLatticeIter*, %class.SkLatticeIter** %70, align 8
  %72 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %71, i64 0, i32 9
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, %68
  %75 = or i64 %55, 3
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %27, i64 %75, i32 1, i32 0, i32 0, i32 0
  %77 = load %class.SkLatticeIter*, %class.SkLatticeIter** %76, align 8
  %78 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %77, i64 0, i32 9
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, %74
  %81 = add nuw nsw i64 %55, 4
  %82 = add i64 %57, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %34, label %54

84:                                               ; preds = %51
  %85 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %16, i64 0, i32 7
  %86 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %85, align 8
  %87 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %86, i64 0, i32 3, i32 3
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.GrMeshDrawOp::QuadHelper", %"class.GrMeshDrawOp::QuadHelper"* %3, i64 0, i32 0, i32 1
  %92 = bitcast %"class.GrMeshDrawOp::QuadHelper"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  call void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"* nonnull %3, %"class.GrMeshDrawOp::Target"* %1, i64 %88, i32 %52) #13
  %93 = load i8*, i8** %90, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %123, label %95

95:                                               ; preds = %84
  br i1 %24, label %124, label %96

96:                                               ; preds = %95
  %97 = bitcast i8* %17 to %"struct.(anonymous namespace)::NonAALatticeOp::Patch"**
  %98 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 7
  %99 = bitcast <4 x i32>* %4 to i8*
  %100 = bitcast %struct.SkRect* %6 to i8*
  %101 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %102 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %103 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %104 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 0, i32 0
  %105 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 3, i32 1
  %106 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  %107 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %108 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %109 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %110 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %111 = bitcast [4 x %struct.SkPoint]* %7 to i64*
  %112 = bitcast %struct.SkPoint* %110 to i64*
  %113 = bitcast %struct.SkPoint* %108 to i64*
  %114 = bitcast %struct.SkPoint* %109 to i64*
  %115 = bitcast %struct.SkRect* %6 to i32*
  %116 = bitcast float* %101 to i32*
  %117 = bitcast float* %102 to i32*
  %118 = bitcast float* %103 to i32*
  %119 = zext i32 %23 to i64
  %120 = bitcast <4 x i32>* %4 to i8*
  %121 = bitcast %struct.SkRect* %6 to i8*
  %122 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  br label %129

123:                                              ; preds = %84
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i64 0, i64 0), i32 245, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #13
  br label %415

124:                                              ; preds = %411, %95
  %125 = bitcast %struct.GrSimpleMesh** %91 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.(anonymous namespace)::NonAALatticeOp", %"class.(anonymous namespace)::NonAALatticeOp"* %0, i64 0, i32 8
  %128 = bitcast %struct.GrSimpleMesh** %127 to i64*
  store i64 %126, i64* %128, align 8
  br label %415

129:                                              ; preds = %411, %96
  %130 = phi i64 [ 0, %96 ], [ %413, %411 ]
  %131 = phi i8* [ %93, %96 ], [ %412, %411 ]
  %132 = load %"struct.(anonymous namespace)::NonAALatticeOp::Patch"*, %"struct.(anonymous namespace)::NonAALatticeOp::Patch"** %97, align 8
  %133 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 3
  %134 = load i8, i8* %98, align 4, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %148, label %136

136:                                              ; preds = %129
  %137 = bitcast %struct.SkRGBA4f* %133 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 3, i32 1
  %140 = bitcast float* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 3, i32 2
  %143 = bitcast float* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 3, i32 3
  %146 = bitcast float* %145 to i32*
  %147 = load i32, i32* %146, align 4
  br label %150

148:                                              ; preds = %129
  %149 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %133) #13
  br label %150

150:                                              ; preds = %136, %148
  %151 = phi i32 [ %138, %136 ], [ %149, %148 ]
  %152 = phi i32 [ %141, %136 ], [ -1431655766, %148 ]
  %153 = phi i32 [ %144, %136 ], [ -1431655766, %148 ]
  %154 = phi i32 [ %147, %136 ], [ -1431655766, %148 ]
  %155 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 0
  %156 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = trunc i32 %157 to i8
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %150
  %161 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %155) #13
  %162 = zext i8 %161 to i32
  store i32 %162, i32* %156, align 4
  br label %163

163:                                              ; preds = %150, %160
  %164 = phi i32 [ %162, %160 ], [ %157, %150 ]
  %165 = and i32 %164, 12
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 1, i32 0, i32 0, i32 0
  %169 = load %class.SkLatticeIter*, %class.SkLatticeIter** %168, align 8
  call void @_ZN13SkLatticeIter20mapDstScaleTranslateERK8SkMatrix(%class.SkLatticeIter* %169, %class.SkMatrix* dereferenceable(40) %155) #13
  br label %170

170:                                              ; preds = %167, %163
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %121, i8 -1, i64 16, i1 false)
  %171 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %104, align 8
  %172 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %171, i64 0, i32 6
  %173 = bitcast %struct.SkISize* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = lshr i64 %174, 32
  %176 = insertelement <2 x i64> undef, i64 %174, i32 0
  %177 = insertelement <2 x i64> %176, i64 %175, i32 1
  %178 = trunc <2 x i64> %177 to <2 x i32>
  %179 = sitofp <2 x i32> %178 to <2 x float>
  %180 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %179
  %181 = shufflevector <2 x float> %180, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %182 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets to i8*) acquire, align 8
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %189, !prof !3

184:                                              ; preds = %170
  %185 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets) #13
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %184
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float -5.000000e-01, float -5.000000e-01>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets, i64 0, i32 0), align 16
  %188 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets) #13
  br label %189

189:                                              ; preds = %184, %187, %170
  %190 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets to i8*) acquire, align 8
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %197, !prof !3

192:                                              ; preds = %189
  %193 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets) #13
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %192
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets, i64 0, i32 0), align 16
  %196 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets) #13
  br label %197

197:                                              ; preds = %192, %195, %189
  %198 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls to i8*) acquire, align 8
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %205, !prof !3

200:                                              ; preds = %197
  %201 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls) #13
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %200
  store <4 x float> <float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls, i64 0, i32 0), align 16
  %204 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* bitcast (%"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls) #13
  br label %205

205:                                              ; preds = %200, %203, %197
  %206 = getelementptr inbounds %"struct.(anonymous namespace)::NonAALatticeOp::Patch", %"struct.(anonymous namespace)::NonAALatticeOp::Patch"* %132, i64 %130, i32 1, i32 0, i32 0, i32 0
  %207 = load %class.SkLatticeIter*, %class.SkLatticeIter** %206, align 8
  %208 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* %207, %struct.SkIRect* nonnull %5, %struct.SkRect* nonnull %6, i8* null, i32* null) #13
  br i1 %208, label %209, label %411

209:                                              ; preds = %205, %407
  %210 = phi i8* [ %408, %407 ], [ %131, %205 ]
  %211 = load <4 x i32>, <4 x i32>* %4, align 16
  %212 = sitofp <4 x i32> %211 to <4 x float>
  %213 = load <4 x float>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE14kDomainOffsets, i64 0, i32 0), align 16
  %214 = fadd <4 x float> %213, %212
  %215 = fmul <4 x float> %181, %212
  %216 = fmul <4 x float> %181, %214
  %217 = load i32, i32* %105, align 8
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %227

219:                                              ; preds = %209
  %220 = load <4 x float>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE9kFlipMuls, i64 0, i32 0), align 16
  %221 = fmul <4 x float> %215, %220
  %222 = load <4 x float>, <4 x float>* getelementptr inbounds (%"class.(anonymous namespace)::SkNx", %"class.(anonymous namespace)::SkNx"* @_ZZN12_GLOBAL__N_114NonAALatticeOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE12kFlipOffsets, i64 0, i32 0), align 16
  %223 = fadd <4 x float> %221, %222
  %224 = fmul <4 x float> %216, %220
  %225 = fadd <4 x float> %224, %222
  %226 = shufflevector <4 x float> %225, <4 x float> undef, <4 x i32> <i32 0, i32 3, i32 2, i32 1>
  br label %227

227:                                              ; preds = %219, %209
  %228 = phi <4 x float> [ %226, %219 ], [ %216, %209 ]
  %229 = phi <4 x float> [ %223, %219 ], [ %215, %209 ]
  br i1 %166, label %230, label %326

230:                                              ; preds = %227
  %231 = load i32, i32* %115, align 4
  %232 = load i32, i32* %116, align 4
  %233 = load i32, i32* %117, align 4
  %234 = load i32, i32* %118, align 4
  %235 = bitcast i8* %210 to i32*
  store i32 %231, i32* %235, align 1
  %236 = getelementptr inbounds i8, i8* %210, i64 4
  %237 = bitcast i8* %236 to i32*
  store i32 %232, i32* %237, align 1
  %238 = getelementptr inbounds i8, i8* %210, i64 8
  %239 = bitcast i8* %238 to i32*
  %240 = bitcast <4 x float> %229 to <4 x i32>
  %241 = extractelement <4 x i32> %240, i32 0
  store i32 %241, i32* %239, align 1
  %242 = getelementptr inbounds i8, i8* %210, i64 12
  %243 = bitcast i8* %242 to i32*
  %244 = extractelement <4 x i32> %240, i32 1
  store i32 %244, i32* %243, align 1
  %245 = getelementptr inbounds i8, i8* %210, i64 16
  %246 = bitcast i8* %245 to <4 x float>*
  store <4 x float> %228, <4 x float>* %246, align 1
  %247 = getelementptr inbounds i8, i8* %210, i64 32
  %248 = bitcast i8* %247 to i32*
  store i32 %151, i32* %248, align 1
  %249 = getelementptr inbounds i8, i8* %210, i64 36
  %250 = bitcast i8* %249 to i32*
  br i1 %135, label %258, label %251

251:                                              ; preds = %230
  store i32 %152, i32* %250, align 1
  %252 = getelementptr inbounds i8, i8* %210, i64 40
  %253 = bitcast i8* %252 to i32*
  store i32 %153, i32* %253, align 1
  %254 = getelementptr inbounds i8, i8* %210, i64 44
  %255 = bitcast i8* %254 to i32*
  store i32 %154, i32* %255, align 1
  %256 = getelementptr inbounds i8, i8* %210, i64 48
  %257 = bitcast i8* %256 to i32*
  br label %258

258:                                              ; preds = %251, %230
  %259 = phi i64 [ 36, %230 ], [ 48, %251 ]
  %260 = phi i32* [ %250, %230 ], [ %257, %251 ]
  store i32 %231, i32* %260, align 1
  %261 = getelementptr inbounds i8, i8* %236, i64 %259
  %262 = bitcast i8* %261 to i32*
  store i32 %234, i32* %262, align 1
  %263 = getelementptr inbounds i8, i8* %261, i64 4
  %264 = bitcast i8* %263 to i32*
  store i32 %241, i32* %264, align 1
  %265 = getelementptr inbounds i8, i8* %263, i64 4
  %266 = bitcast i8* %265 to i32*
  %267 = extractelement <4 x i32> %240, i32 3
  store i32 %267, i32* %266, align 1
  %268 = getelementptr inbounds i8, i8* %265, i64 4
  %269 = bitcast i8* %268 to <4 x float>*
  store <4 x float> %228, <4 x float>* %269, align 1
  %270 = getelementptr inbounds i8, i8* %268, i64 16
  %271 = bitcast i8* %270 to i32*
  store i32 %151, i32* %271, align 1
  %272 = getelementptr inbounds i8, i8* %270, i64 4
  %273 = bitcast i8* %272 to i32*
  br i1 %135, label %281, label %274

274:                                              ; preds = %258
  store i32 %152, i32* %273, align 1
  %275 = getelementptr inbounds i8, i8* %272, i64 4
  %276 = bitcast i8* %275 to i32*
  store i32 %153, i32* %276, align 1
  %277 = getelementptr inbounds i8, i8* %275, i64 4
  %278 = bitcast i8* %277 to i32*
  store i32 %154, i32* %278, align 1
  %279 = getelementptr inbounds i8, i8* %277, i64 4
  %280 = bitcast i8* %279 to i32*
  br label %281

281:                                              ; preds = %274, %258
  %282 = phi i8* [ %270, %258 ], [ %277, %274 ]
  %283 = phi i32* [ %273, %258 ], [ %280, %274 ]
  store i32 %233, i32* %283, align 1
  %284 = getelementptr inbounds i8, i8* %282, i64 8
  %285 = bitcast i8* %284 to i32*
  store i32 %232, i32* %285, align 1
  %286 = getelementptr inbounds i8, i8* %282, i64 12
  %287 = bitcast i8* %286 to i32*
  %288 = extractelement <4 x i32> %240, i32 2
  store i32 %288, i32* %287, align 1
  %289 = getelementptr inbounds i8, i8* %282, i64 16
  %290 = bitcast i8* %289 to i32*
  store i32 %244, i32* %290, align 1
  %291 = getelementptr inbounds i8, i8* %282, i64 20
  %292 = bitcast i8* %291 to <4 x float>*
  store <4 x float> %228, <4 x float>* %292, align 1
  %293 = getelementptr inbounds i8, i8* %282, i64 36
  %294 = bitcast i8* %293 to i32*
  store i32 %151, i32* %294, align 1
  %295 = getelementptr inbounds i8, i8* %282, i64 40
  %296 = bitcast i8* %295 to i32*
  br i1 %135, label %304, label %297

297:                                              ; preds = %281
  store i32 %152, i32* %296, align 1
  %298 = getelementptr inbounds i8, i8* %282, i64 44
  %299 = bitcast i8* %298 to i32*
  store i32 %153, i32* %299, align 1
  %300 = getelementptr inbounds i8, i8* %282, i64 48
  %301 = bitcast i8* %300 to i32*
  store i32 %154, i32* %301, align 1
  %302 = getelementptr inbounds i8, i8* %282, i64 52
  %303 = bitcast i8* %302 to i32*
  br label %304

304:                                              ; preds = %297, %281
  %305 = phi i64 [ 40, %281 ], [ 52, %297 ]
  %306 = phi i32* [ %296, %281 ], [ %303, %297 ]
  %307 = getelementptr inbounds i8, i8* %282, i64 4
  store i32 %233, i32* %306, align 1
  %308 = getelementptr inbounds i8, i8* %307, i64 %305
  %309 = bitcast i8* %308 to i32*
  store i32 %234, i32* %309, align 1
  %310 = getelementptr inbounds i8, i8* %308, i64 4
  %311 = bitcast i8* %310 to i32*
  store i32 %288, i32* %311, align 1
  %312 = getelementptr inbounds i8, i8* %310, i64 4
  %313 = bitcast i8* %312 to i32*
  store i32 %267, i32* %313, align 1
  %314 = getelementptr inbounds i8, i8* %312, i64 4
  %315 = bitcast i8* %314 to <4 x float>*
  store <4 x float> %228, <4 x float>* %315, align 1
  %316 = getelementptr inbounds i8, i8* %314, i64 16
  %317 = bitcast i8* %316 to i32*
  store i32 %151, i32* %317, align 1
  %318 = getelementptr inbounds i8, i8* %316, i64 4
  br i1 %135, label %407, label %319

319:                                              ; preds = %304
  %320 = bitcast i8* %318 to i32*
  store i32 %152, i32* %320, align 1
  %321 = getelementptr inbounds i8, i8* %318, i64 4
  %322 = bitcast i8* %321 to i32*
  store i32 %153, i32* %322, align 1
  %323 = getelementptr inbounds i8, i8* %321, i64 4
  %324 = bitcast i8* %323 to i32*
  store i32 %154, i32* %324, align 1
  %325 = getelementptr inbounds i8, i8* %323, i64 4
  br label %407

326:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %122, i8 -1, i64 32, i1 false)
  call void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* nonnull %6, %struct.SkPoint* nonnull %107) #13
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %155, %struct.SkPoint* nonnull %107, %struct.SkPoint* nonnull %107, i32 4) #13
  %327 = extractelement <4 x float> %229, i32 1
  %328 = shufflevector <4 x float> %229, <4 x float> undef, <2 x i32> <i32 0, i32 undef>
  %329 = insertelement <2 x float> %328, float %327, i32 1
  %330 = bitcast i8* %210 to i64*
  %331 = load i64, i64* %111, align 16
  store i64 %331, i64* %330, align 1
  %332 = getelementptr inbounds i8, i8* %210, i64 8
  %333 = bitcast i8* %332 to <2 x float>*
  store <2 x float> %329, <2 x float>* %333, align 1
  %334 = getelementptr inbounds i8, i8* %210, i64 16
  %335 = bitcast i8* %334 to <4 x float>*
  store <4 x float> %228, <4 x float>* %335, align 1
  %336 = getelementptr inbounds i8, i8* %210, i64 32
  %337 = bitcast i8* %336 to i32*
  store i32 %151, i32* %337, align 1
  %338 = getelementptr inbounds i8, i8* %210, i64 36
  br i1 %135, label %346, label %339

339:                                              ; preds = %326
  %340 = bitcast i8* %338 to i32*
  store i32 %152, i32* %340, align 1
  %341 = getelementptr inbounds i8, i8* %210, i64 40
  %342 = bitcast i8* %341 to i32*
  store i32 %153, i32* %342, align 1
  %343 = getelementptr inbounds i8, i8* %210, i64 44
  %344 = bitcast i8* %343 to i32*
  store i32 %154, i32* %344, align 1
  %345 = getelementptr inbounds i8, i8* %210, i64 48
  br label %346

346:                                              ; preds = %326, %339
  %347 = phi i8* [ %338, %326 ], [ %345, %339 ]
  %348 = extractelement <4 x float> %229, i32 3
  %349 = insertelement <2 x float> %328, float %348, i32 1
  %350 = bitcast i8* %347 to i64*
  %351 = load i64, i64* %112, align 8
  store i64 %351, i64* %350, align 1
  %352 = getelementptr inbounds i8, i8* %347, i64 8
  %353 = bitcast i8* %352 to <2 x float>*
  store <2 x float> %349, <2 x float>* %353, align 1
  %354 = getelementptr inbounds i8, i8* %347, i64 16
  %355 = bitcast i8* %354 to <4 x float>*
  store <4 x float> %228, <4 x float>* %355, align 1
  %356 = getelementptr inbounds i8, i8* %347, i64 32
  %357 = bitcast i8* %356 to i32*
  store i32 %151, i32* %357, align 1
  %358 = getelementptr inbounds i8, i8* %347, i64 36
  br i1 %135, label %366, label %359

359:                                              ; preds = %346
  %360 = bitcast i8* %358 to i32*
  store i32 %152, i32* %360, align 1
  %361 = getelementptr inbounds i8, i8* %347, i64 40
  %362 = bitcast i8* %361 to i32*
  store i32 %153, i32* %362, align 1
  %363 = getelementptr inbounds i8, i8* %347, i64 44
  %364 = bitcast i8* %363 to i32*
  store i32 %154, i32* %364, align 1
  %365 = getelementptr inbounds i8, i8* %347, i64 48
  br label %366

366:                                              ; preds = %346, %359
  %367 = phi i8* [ %358, %346 ], [ %365, %359 ]
  %368 = shufflevector <4 x float> %229, <4 x float> undef, <2 x i32> <i32 2, i32 undef>
  %369 = insertelement <2 x float> %368, float %327, i32 1
  %370 = bitcast i8* %367 to i64*
  %371 = load i64, i64* %113, align 8
  store i64 %371, i64* %370, align 1
  %372 = getelementptr inbounds i8, i8* %367, i64 8
  %373 = bitcast i8* %372 to <2 x float>*
  store <2 x float> %369, <2 x float>* %373, align 1
  %374 = getelementptr inbounds i8, i8* %367, i64 16
  %375 = bitcast i8* %374 to <4 x float>*
  store <4 x float> %228, <4 x float>* %375, align 1
  %376 = getelementptr inbounds i8, i8* %367, i64 32
  %377 = bitcast i8* %376 to i32*
  store i32 %151, i32* %377, align 1
  %378 = getelementptr inbounds i8, i8* %367, i64 36
  br i1 %135, label %386, label %379

379:                                              ; preds = %366
  %380 = bitcast i8* %378 to i32*
  store i32 %152, i32* %380, align 1
  %381 = getelementptr inbounds i8, i8* %367, i64 40
  %382 = bitcast i8* %381 to i32*
  store i32 %153, i32* %382, align 1
  %383 = getelementptr inbounds i8, i8* %367, i64 44
  %384 = bitcast i8* %383 to i32*
  store i32 %154, i32* %384, align 1
  %385 = getelementptr inbounds i8, i8* %367, i64 48
  br label %386

386:                                              ; preds = %366, %379
  %387 = phi i8* [ %378, %366 ], [ %385, %379 ]
  %388 = insertelement <2 x float> %368, float %348, i32 1
  %389 = bitcast i8* %387 to i64*
  %390 = load i64, i64* %114, align 16
  store i64 %390, i64* %389, align 1
  %391 = getelementptr inbounds i8, i8* %387, i64 8
  %392 = bitcast i8* %391 to <2 x float>*
  store <2 x float> %388, <2 x float>* %392, align 1
  %393 = getelementptr inbounds i8, i8* %387, i64 16
  %394 = bitcast i8* %393 to <4 x float>*
  store <4 x float> %228, <4 x float>* %394, align 1
  %395 = getelementptr inbounds i8, i8* %387, i64 32
  %396 = bitcast i8* %395 to i32*
  store i32 %151, i32* %396, align 1
  %397 = getelementptr inbounds i8, i8* %387, i64 36
  br i1 %135, label %405, label %398

398:                                              ; preds = %386
  %399 = bitcast i8* %397 to i32*
  store i32 %152, i32* %399, align 1
  %400 = getelementptr inbounds i8, i8* %387, i64 40
  %401 = bitcast i8* %400 to i32*
  store i32 %153, i32* %401, align 1
  %402 = getelementptr inbounds i8, i8* %387, i64 44
  %403 = bitcast i8* %402 to i32*
  store i32 %154, i32* %403, align 1
  %404 = getelementptr inbounds i8, i8* %387, i64 48
  br label %405

405:                                              ; preds = %386, %398
  %406 = phi i8* [ %397, %386 ], [ %404, %398 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #13
  br label %407

407:                                              ; preds = %319, %304, %405
  %408 = phi i8* [ %406, %405 ], [ %318, %304 ], [ %325, %319 ]
  %409 = load %class.SkLatticeIter*, %class.SkLatticeIter** %206, align 8
  %410 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* %409, %struct.SkIRect* nonnull %5, %struct.SkRect* nonnull %6, i8* null, i32* null) #13
  br i1 %410, label %209, label %411

411:                                              ; preds = %407, %205
  %412 = phi i8* [ %131, %205 ], [ %408, %407 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #13
  %413 = add nuw nsw i64 %130, 1
  %414 = icmp eq i64 %413, %119
  br i1 %414, label %124, label %129

415:                                              ; preds = %124, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #13
  br label %416

416:                                              ; preds = %15, %415, %51, %11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIN12_GLOBAL__N_114NonAALatticeOp5PatchELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.186* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.186, %class.SkTArray.186* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = add nsw i32 %7, %1
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %4, 33
  %11 = icmp slt i64 %10, %9
  %12 = mul nsw i64 %9, 3
  %13 = icmp sle i64 %10, %12
  %14 = and i64 %4, 1
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %4, 4294967296
  %19 = icmp eq i64 %18, 0
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i1 [ false, %2 ], [ %19, %17 ]
  %22 = or i1 %11, %21
  br i1 %22, label %23, label %61

23:                                               ; preds = %20
  %24 = add nsw i64 %9, 1
  %25 = ashr i64 %24, 1
  %26 = add nsw i64 %9, 7
  %27 = add nsw i64 %26, %25
  %28 = and i64 %27, -8
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = icmp slt i64 %28, 2147483647
  %32 = select i1 %31, i64 %28, i64 2147483647
  %33 = icmp sgt i64 %32, -2147483647
  %34 = select i1 %33, i64 %32, i64 -2147483647
  %35 = shl i64 %34, 33
  %36 = and i64 %4, 8589934591
  %37 = or i64 %35, %36
  store i64 %37, i64* %3, align 8
  %38 = and i64 %34, 2147483647
  %39 = tail call i8* @_Z15sk_malloc_throwmm(i64 %38, i64 80) #13
  %40 = load i64, i64* %3, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = mul nuw nsw i64 %42, 80
  %46 = bitcast %class.SkTArray.186* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %47, i64 %45, i1 false) #13
  %48 = load i64, i64* %3, align 8
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i64 [ %40, %30 ], [ %48, %44 ]
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  %53 = bitcast %class.SkTArray.186* %0 to i8**
  br i1 %52, label %57, label %54

54:                                               ; preds = %49
  %55 = load i8*, i8** %53, align 8
  tail call void @_Z7sk_freePv(i8* %55) #13
  %56 = load i64, i64* %3, align 8
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i64 [ %56, %54 ], [ %50, %49 ]
  store i8* %39, i8** %53, align 8
  %59 = and i64 %58, -4294967298
  %60 = or i64 %59, 1
  store i64 %60, i64* %3, align 8
  br label %61

61:                                               ; preds = %57, %23, %20
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkLatticeIterD2Ev(%class.SkLatticeIter*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5
  %8 = bitcast %class.SkTArray.66* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_Z7sk_freePv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_Z7sk_freePv(i8* %17) #13
  br label %18

18:                                               ; preds = %10, %15
  %19 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3
  %25 = bitcast %class.SkTArray.64* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #13
  br label %27

27:                                               ; preds = %18, %23
  %28 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2
  %34 = bitcast %class.SkTArray.64* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @_Z7sk_freePv(i8* %35) #13
  br label %36

36:                                               ; preds = %27, %32
  %37 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1
  %43 = bitcast %class.SkTArray.63* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_Z7sk_freePv(i8* %44) #13
  br label %45

45:                                               ; preds = %36, %41
  %46 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = bitcast %class.SkLatticeIter* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_Z7sk_freePv(i8* %52) #13
  br label %53

53:                                               ; preds = %45, %50
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD1Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.198"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.198"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.198"* dereferenceable(32)) local_unnamed_addr #3

declare zeroext i1 @_ZN17GrColorSpaceXform6EqualsEPKS_S1_(%class.GrColorSpaceXform*, %class.GrColorSpaceXform*) local_unnamed_addr #3

declare zeroext i1 @_ZNK24GrSimpleMeshDrawOpHelper12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelper*, %class.GrSimpleMeshDrawOpHelper* dereferenceable(16), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

declare void @_ZN14GrOpFlushState8drawMeshERK12GrSimpleMesh(%class.GrOpFlushState*, %struct.GrSimpleMesh* dereferenceable(48)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #3

declare i32 @_ZNK24GrSimpleMeshDrawOpHelper18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelper*) local_unnamed_addr #3

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, %struct.GrUserStencilSettings*, i32, i32, %class.GrProcessorAnalysisColor*) local_unnamed_addr #3

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17CreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessorO14GrProcessorSet15GrPrimitiveType18GrXferBarrierFlags8GrLoadOpN10GrPipeline10InputFlagsEPK21GrUserStencilSettings(%class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, %class.GrProcessorSet* dereferenceable(32), i8 zeroext, i32, i32, i8 zeroext, %struct.GrUserStencilSettings*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN14GrProcessorSetD1Ev(%class.GrProcessorSet*) unnamed_addr #11

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZN12_GLOBAL__N_19LatticeGP4MakeEPS_RK18GrSurfaceProxyView5sk_spI17GrColorSpaceXformE12SkFilterModebEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESG_(i8*) #4 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -257
  %3 = bitcast i8* %2 to %"class.(anonymous namespace)::LatticeGP"*
  %4 = bitcast i8* %2 to void (%"class.(anonymous namespace)::LatticeGP"*)***
  %5 = load void (%"class.(anonymous namespace)::LatticeGP"*)**, void (%"class.(anonymous namespace)::LatticeGP"*)*** %4, align 8
  %6 = load void (%"class.(anonymous namespace)::LatticeGP"*)*, void (%"class.(anonymous namespace)::LatticeGP"*)** %5, align 8
  tail call void %6(%"class.(anonymous namespace)::LatticeGP"* %3) #13
  ret i8* %2
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #3

declare void @_ZN19GrGeometryProcessor14TextureSampler5resetE14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat* dereferenceable(72), %class.GrSwizzle* dereferenceable(2)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19LatticeGPD2Ev(%"class.(anonymous namespace)::LatticeGP"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_19LatticeGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19LatticeGPD0Ev(%"class.(anonymous namespace)::LatticeGP"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN12_GLOBAL__N_19LatticeGPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %3, align 8
  %5 = icmp eq %class.GrColorSpaceXform* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrColorSpaceXform* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrColorSpaceXform* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::LatticeGP"* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %17) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_19LatticeGP4nameEv(%"class.(anonymous namespace)::LatticeGP"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_19LatticeGP19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%"class.(anonymous namespace)::LatticeGP"* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 5, i32 0
  %5 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %4, align 8
  %6 = tail call i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform* %5)
  %7 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %8 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %8, i64 2
  %10 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, align 8
  tail call void %10(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0)) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull %class.GrGLSLGeometryProcessor* @_ZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCaps(%"class.(anonymous namespace)::LatticeGP"* nocapture readnone, %class.GrShaderCaps* nocapture readnone dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 56) #14
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsE13GLSLProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 28
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %3, i64 32
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %3, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 5, i1 false) #13
  %16 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %16
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK12_GLOBAL__N_19LatticeGP16onTextureSamplerEi(%"class.(anonymous namespace)::LatticeGP"* readnone, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %0, i64 0, i32 6
  ret %"class.GrGeometryProcessor::TextureSampler"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #13
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN17GrColorSpaceXform8XformKeyEPKS_(%class.GrColorSpaceXform*) local_unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.GrColorSpaceXform* %0, null
  br i1 %2, label %133, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = zext i8 %5 to i32
  %7 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 0, i32 2
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 0, i32 4
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 0, i32 8
  %21 = or i32 %16, %20
  %22 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 0, i32 16
  %26 = or i32 %21, %25
  br i1 %9, label %79, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %29, 0.000000e+00
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = fptosi float %29 to i32
  %33 = sitofp i32 %32 to float
  %34 = fcmp oeq float %29, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = add i32 %32, 4
  %37 = icmp ult i32 %36, 3
  br i1 %37, label %73, label %76

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 2
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 3
  %45 = load float, float* %44, align 4
  %46 = fadd float %43, %45
  %47 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 4
  %48 = load float, float* %47, align 4
  %49 = fadd float %46, %48
  %50 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 5
  %51 = load float, float* %50, align 4
  %52 = fadd float %49, %51
  %53 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 1, i32 6
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  %56 = fadd float %29, %55
  %57 = bitcast float %56 to i32
  %58 = and i32 %57, 2139095040
  %59 = icmp eq i32 %58, 2139095040
  br i1 %59, label %72, label %60

60:                                               ; preds = %38
  %61 = fcmp ult float %40, 0.000000e+00
  %62 = fcmp ult float %45, 0.000000e+00
  %63 = or i1 %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = fcmp ult float %48, 0.000000e+00
  %66 = fcmp ult float %29, 0.000000e+00
  %67 = or i1 %66, %65
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = fmul float %40, %48
  %70 = fadd float %42, %69
  %71 = fcmp ult float %70, 0.000000e+00
  br i1 %71, label %72, label %76

72:                                               ; preds = %68, %64, %60, %38
  br label %76

73:                                               ; preds = %35
  %74 = mul i32 %36, -256
  %75 = add i32 %74, 1024
  br label %76

76:                                               ; preds = %35, %73, %68, %72
  %77 = phi i32 [ 0, %72 ], [ 256, %68 ], [ %75, %73 ], [ 0, %35 ]
  %78 = or i32 %77, %26
  br label %79

79:                                               ; preds = %3, %76
  %80 = phi i32 [ %78, %76 ], [ %26, %3 ]
  br i1 %19, label %133, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 0
  %83 = load float, float* %82, align 4
  %84 = fcmp olt float %83, 0.000000e+00
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = fptosi float %83 to i32
  %87 = sitofp i32 %86 to float
  %88 = fcmp oeq float %83, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = add i32 %86, 4
  %91 = icmp ult i32 %90, 3
  br i1 %91, label %127, label %130

92:                                               ; preds = %85, %81
  %93 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 1
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 3
  %99 = load float, float* %98, align 4
  %100 = fadd float %97, %99
  %101 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 4
  %102 = load float, float* %101, align 4
  %103 = fadd float %100, %102
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 5
  %105 = load float, float* %104, align 4
  %106 = fadd float %103, %105
  %107 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %0, i64 0, i32 1, i32 2, i32 6
  %108 = load float, float* %107, align 4
  %109 = fadd float %106, %108
  %110 = fadd float %83, %109
  %111 = bitcast float %110 to i32
  %112 = and i32 %111, 2139095040
  %113 = icmp eq i32 %112, 2139095040
  br i1 %113, label %126, label %114

114:                                              ; preds = %92
  %115 = fcmp ult float %94, 0.000000e+00
  %116 = fcmp ult float %99, 0.000000e+00
  %117 = or i1 %115, %116
  br i1 %117, label %126, label %118

118:                                              ; preds = %114
  %119 = fcmp ult float %102, 0.000000e+00
  %120 = fcmp ult float %83, 0.000000e+00
  %121 = or i1 %120, %119
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = fmul float %94, %102
  %124 = fadd float %96, %123
  %125 = fcmp ult float %124, 0.000000e+00
  br i1 %125, label %126, label %130

126:                                              ; preds = %122, %118, %114, %92
  br label %130

127:                                              ; preds = %89
  %128 = mul i32 %90, -65536
  %129 = add i32 %128, 262144
  br label %130

130:                                              ; preds = %89, %127, %122, %126
  %131 = phi i32 [ 0, %126 ], [ 65536, %122 ], [ %129, %127 ], [ 0, %89 ]
  %132 = or i32 %131, %80
  br label %133

133:                                              ; preds = %130, %79, %1
  %134 = phi i32 [ 0, %1 ], [ %132, %130 ], [ %80, %79 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.228, %class.SkTArray.228* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #13
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.228* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #13
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessorD0Ev(%class.GLSLProcessor*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.228, %class.SkTArray.228* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #13
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #13
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #13
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #13
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #13
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #13
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.228* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #13
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %class.GLSLProcessor* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerS3_RK19GrGeometryProcessor(%class.GLSLProcessor* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrGeometryProcessor* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 3
  %6 = bitcast i64* %5 to %class.GrColorSpaceXform**
  %7 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %6, align 8
  %8 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 1
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 1, i32 0
  %15 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %16 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %16, i64 5
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %17, align 8
  tail call void %18(%class.GrGLSLProgramDataManager* %1, i32 %13, i32 7, float* %14) #13
  br label %19

19:                                               ; preds = %11, %4
  %20 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 2
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 3, i64 0
  %27 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float*)***
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, float*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %28, i64 19
  %30 = load void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %29, align 8
  tail call void %30(%class.GrGLSLProgramDataManager* %1, i32 %25, float* %26) #13
  br label %31

31:                                               ; preds = %23, %19
  %32 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 3, i32 3
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1, i32 2, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %7, i64 0, i32 1, i32 2, i32 0
  %39 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %40 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %40, i64 5
  %42 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %41, align 8
  tail call void %42(%class.GrGLSLProgramDataManager* %1, i32 %37, i32 7, float* %38) #13
  br label %43

43:                                               ; preds = %31, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZNK12_GLOBAL__N_19LatticeGP18createGLSLInstanceERK12GrShaderCapsEN13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS5_8GrGPArgsE(%class.GLSLProcessor*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* nocapture readonly dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.GrShaderVar, align 8
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %7 = bitcast %class.GrGeometryProcessor** %6 to %"class.(anonymous namespace)::LatticeGP"**
  %8 = load %"class.(anonymous namespace)::LatticeGP"*, %"class.(anonymous namespace)::LatticeGP"** %7, align 8
  %9 = getelementptr inbounds %class.GLSLProcessor, %class.GLSLProcessor* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %11 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %10, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 5, i32 0
  %13 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %12, align 8
  tail call void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper* %9, %class.GrGLSLUniformHandler* %11, %class.GrColorSpaceXform* %13, i32 16)
  %14 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %15 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %14, align 8
  %16 = bitcast %"class.(anonymous namespace)::LatticeGP"* %8 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %15, %class.GrGeometryProcessor* dereferenceable(80) %16) #13
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %18 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %17, align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder* %18, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %20) #13
  %21 = bitcast %class.GrShaderVar* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 2
  %23 = getelementptr inbounds %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute"* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !12
  %25 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 2, i32 2
  %26 = load i32, i32* %25, align 4, !noalias !12
  %27 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13, !noalias !12
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %24) #13, !noalias !12
  %28 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 0
  store i32 %26, i32* %28, align 8, !alias.scope !12
  %29 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 1
  store i32 2, i32* %29, align 4, !alias.scope !12
  %30 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 2
  store i32 0, i32* %30, align 8, !alias.scope !12
  %31 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %31, %class.SkString* nonnull dereferenceable(8) %4) #13
  %32 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %32) #13
  %33 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %5, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %33) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13, !noalias !12
  %34 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1
  %35 = bitcast %class.GrShaderVar* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %21, i64 12, i1 false) #13
  %36 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %37 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %36, %class.SkString* dereferenceable(8) %31) #13
  %38 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 4
  %39 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %32) #13
  %40 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 5
  %41 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %40, %class.SkString* dereferenceable(8) %33) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %33) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %32) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %31) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #13
  %42 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %43 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %44 = bitcast %class.GrGLSLFPFragmentBuilder* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr i8, i8* %45, i64 -24
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.GrGLSLFPFragmentBuilder* %43 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 %48
  %51 = getelementptr inbounds i8, i8* %50, i64 160
  %52 = getelementptr inbounds i8, i8* %50, i64 488
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = bitcast i8* %51 to %class.SkString**
  %56 = load %class.SkString*, %class.SkString** %55, align 8
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %56, i64 %57
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %58, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #13
  %59 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %14, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %59, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %22, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 0) #13
  %60 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %61 = bitcast %class.GrGLSLFPFragmentBuilder* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr i8, i8* %62, i64 -24
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %class.GrGLSLFPFragmentBuilder* %60 to i8*
  %67 = getelementptr inbounds i8, i8* %66, i64 %65
  %68 = getelementptr inbounds i8, i8* %67, i64 160
  %69 = getelementptr inbounds i8, i8* %67, i64 488
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = bitcast i8* %68 to %class.SkString**
  %73 = load %class.SkString*, %class.SkString** %72, align 8
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds %class.SkString, %class.SkString* %73, i64 %74
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %75, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #13
  %76 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %14, align 8
  %77 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 3
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %76, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %77, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i32 1) #13
  %78 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %79 = bitcast %class.GrGLSLFPFragmentBuilder* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.GrGLSLFPFragmentBuilder* %78 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = bitcast i8* %85 to %class.GrGLSLShaderBuilder*
  %87 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %88 = load i8*, i8** %87, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %86, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %88)
  %89 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %14, align 8
  %90 = getelementptr inbounds %"class.(anonymous namespace)::LatticeGP", %"class.(anonymous namespace)::LatticeGP"* %8, i64 0, i32 4
  %91 = load i8*, i8** %87, align 8
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %89, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %90, i8* %91, i32 1) #13
  %92 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %93 = bitcast %class.GrGLSLFPFragmentBuilder* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr i8, i8* %94, i64 -24
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.GrGLSLFPFragmentBuilder* %92 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  %100 = bitcast i8* %99 to %class.GrGLSLShaderBuilder*
  %101 = load i8*, i8** %87, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* %101)
  %102 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %103 = bitcast %class.GrGLSLFPFragmentBuilder* %102 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr i8, i8* %104, i64 -24
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.GrGLSLFPFragmentBuilder* %102 to i8*
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  %110 = bitcast i8* %109 to %class.GrGLSLShaderBuilder*
  %111 = load i8*, i8** %87, align 8
  %112 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 9
  %113 = load %class.GrResourceHandle.249*, %class.GrResourceHandle.249** %112, align 8
  %114 = getelementptr inbounds %class.GrResourceHandle.249, %class.GrResourceHandle.249* %113, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  call void @_ZN19GrGLSLShaderBuilder27appendTextureLookupAndBlendEPKc11SkBlendMode16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEES1_P27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %110, i8* %111, i32 13, i32 %115, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0), %class.GrGLSLColorSpaceXformHelper* %9) #13
  %116 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %117 = bitcast %class.GrGLSLFPFragmentBuilder* %116 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr i8, i8* %118, i64 -24
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %class.GrGLSLFPFragmentBuilder* %116 to i8*
  %123 = getelementptr inbounds i8, i8* %122, i64 %121
  %124 = getelementptr inbounds i8, i8* %123, i64 160
  %125 = getelementptr inbounds i8, i8* %123, i64 488
  %126 = bitcast i8* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = bitcast i8* %124 to %class.SkString**
  %129 = load %class.SkString*, %class.SkString** %128, align 8
  %130 = sext i32 %127 to i64
  %131 = getelementptr inbounds %class.SkString, %class.SkString* %129, i64 %130
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %131, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #13
  %132 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %42, align 8
  %133 = bitcast %class.GrGLSLFPFragmentBuilder* %132 to i8**
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr i8, i8* %134, i64 -24
  %136 = bitcast i8* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %class.GrGLSLFPFragmentBuilder* %132 to i8*
  %139 = getelementptr inbounds i8, i8* %138, i64 %137
  %140 = bitcast i8* %139 to %class.GrGLSLShaderBuilder*
  %141 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %142 = load i8*, i8** %141, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %140, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %142)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #13
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #13
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #13
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #13
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #13
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrGLSLColorSpaceXformHelper8emitCodeEP20GrGLSLUniformHandlerPK17GrColorSpaceXformj(%class.GrGLSLColorSpaceXformHelper*, %class.GrGLSLUniformHandler*, %class.GrColorSpaceXform*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %class.GrColorSpaceXform* %2, null
  br i1 %5, label %141, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 1 %8, i64 5, i1 false)
  %9 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %69, label %12

12:                                               ; preds = %6
  %13 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %14 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %14, i64 13
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, align 8
  %17 = tail call i32 %16(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #13
  %18 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %22, label %31

22:                                               ; preds = %12
  %23 = fptosi float %20 to i32
  %24 = sitofp i32 %23 to float
  %25 = fcmp oeq float %20, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = add i32 %23, 4
  %28 = icmp ult i32 %27, 3
  %29 = sub i32 0, %23
  %30 = select i1 %28, i32 %29, i32 0
  br label %66

31:                                               ; preds = %22, %12
  %32 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 2
  %35 = load float, float* %34, align 4
  %36 = fadd float %33, %35
  %37 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 3
  %38 = load float, float* %37, align 4
  %39 = fadd float %36, %38
  %40 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 4
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 5
  %44 = load float, float* %43, align 4
  %45 = fadd float %42, %44
  %46 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 1, i32 6
  %47 = load float, float* %46, align 4
  %48 = fadd float %45, %47
  %49 = fadd float %20, %48
  %50 = bitcast float %49 to i32
  %51 = and i32 %50, 2139095040
  %52 = icmp eq i32 %51, 2139095040
  br i1 %52, label %65, label %53

53:                                               ; preds = %31
  %54 = fcmp ult float %33, 0.000000e+00
  %55 = fcmp ult float %38, 0.000000e+00
  %56 = or i1 %54, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %53
  %58 = fcmp ult float %41, 0.000000e+00
  %59 = fcmp ult float %20, 0.000000e+00
  %60 = or i1 %59, %58
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = fmul float %33, %41
  %63 = fadd float %35, %62
  %64 = fcmp ult float %63, 0.000000e+00
  br i1 %64, label %65, label %66

65:                                               ; preds = %61, %57, %53, %31
  br label %66

66:                                               ; preds = %26, %61, %65
  %67 = phi i32 [ 0, %65 ], [ 1, %61 ], [ %30, %26 ]
  %68 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 4
  store i32 %67, i32* %68, align 4
  br label %69

69:                                               ; preds = %6, %66
  %70 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 2
  %71 = load i8, i8* %70, align 2, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %75 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %74, align 8
  %76 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %75, i64 13
  %77 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %76, align 8
  %78 = tail call i32 %77(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #13
  %79 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 1, i32 0
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %69, %73
  %81 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 3, i32 3
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %141, label %84

84:                                               ; preds = %80
  %85 = bitcast %class.GrGLSLUniformHandler* %1 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %86 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %85, align 8
  %87 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %86, i64 13
  %88 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %87, align 8
  %89 = tail call i32 %88(%class.GrGLSLUniformHandler* %1, %class.GrFragmentProcessor* null, i32 %3, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i1 zeroext true, i32 7, i8** null) #13
  %90 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 2, i32 0
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp olt float %92, 0.000000e+00
  br i1 %93, label %94, label %103

94:                                               ; preds = %84
  %95 = fptosi float %92 to i32
  %96 = sitofp i32 %95 to float
  %97 = fcmp oeq float %92, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = add i32 %95, 4
  %100 = icmp ult i32 %99, 3
  %101 = sub i32 0, %95
  %102 = select i1 %100, i32 %101, i32 0
  br label %138

103:                                              ; preds = %94, %84
  %104 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 1
  %105 = load float, float* %104, align 4
  %106 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 2
  %107 = load float, float* %106, align 4
  %108 = fadd float %105, %107
  %109 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 3
  %110 = load float, float* %109, align 4
  %111 = fadd float %108, %110
  %112 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 4
  %113 = load float, float* %112, align 4
  %114 = fadd float %111, %113
  %115 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 5
  %116 = load float, float* %115, align 4
  %117 = fadd float %114, %116
  %118 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %2, i64 0, i32 1, i32 2, i32 6
  %119 = load float, float* %118, align 4
  %120 = fadd float %117, %119
  %121 = fadd float %92, %120
  %122 = bitcast float %121 to i32
  %123 = and i32 %122, 2139095040
  %124 = icmp eq i32 %123, 2139095040
  br i1 %124, label %137, label %125

125:                                              ; preds = %103
  %126 = fcmp ult float %105, 0.000000e+00
  %127 = fcmp ult float %110, 0.000000e+00
  %128 = or i1 %126, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = fcmp ult float %113, 0.000000e+00
  %131 = fcmp ult float %92, 0.000000e+00
  %132 = or i1 %131, %130
  br i1 %132, label %137, label %133

133:                                              ; preds = %129
  %134 = fmul float %105, %113
  %135 = fadd float %107, %134
  %136 = fcmp ult float %135, 0.000000e+00
  br i1 %136, label %137, label %138

137:                                              ; preds = %133, %129, %125, %103
  br label %138

138:                                              ; preds = %98, %133, %137
  %139 = phi i32 [ 0, %137 ], [ 1, %133 ], [ %102, %98 ]
  %140 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %0, i64 0, i32 5
  store i32 %139, i32* %140, align 4
  br label %141

141:                                              ; preds = %80, %4, %138
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderPNS_8GrGPArgsEPKc(%class.GrGLSLVertexBuilder*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*) local_unnamed_addr #3

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #13
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

declare void @_ZN19GrGLSLShaderBuilder27appendTextureLookupAndBlendEPKc11SkBlendMode16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEES1_P27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i8*, i32, i32, i8*, %class.GrGLSLColorSpaceXformHelper*) local_unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #3

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #13

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #13

declare void @_ZN14GrProcessorSetC1EOS_(%class.GrProcessorSet*, %class.GrProcessorSet* dereferenceable(32)) unnamed_addr #3

declare void @_ZN14GrProcessorSet12MakeEmptySetEv(%class.GrProcessorSet* sret) local_unnamed_addr #3

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #3

declare void @_ZN12GrMeshDrawOp10QuadHelperC1EPNS_6TargetEmi(%"class.GrMeshDrawOp::QuadHelper"*, %"class.GrMeshDrawOp::Target"*, i64, i32) unnamed_addr #3

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

declare void @_ZN13SkLatticeIter20mapDstScaleTranslateERK8SkMatrix(%class.SkLatticeIter*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter*, %struct.SkIRect*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #3

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect*, %struct.SkPoint*) local_unnamed_addr #3

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!6 = distinct !{!6, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN24GrSimpleMeshDrawOpHelper18detachProcessorSetEv: argument 0"}
!9 = distinct !{!9, !"_ZN24GrSimpleMeshDrawOpHelper18detachProcessorSetEv"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!14 = distinct !{!14, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
