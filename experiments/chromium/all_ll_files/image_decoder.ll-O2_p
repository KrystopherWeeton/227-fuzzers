; ModuleID = '../../chrome/browser/image_decoder/image_decoder.cc'
source_filename = "../../chrome/browser/image_decoder/image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ImageDecoder = type { i32, %"class.std::__1::map.175", %"class.base::Lock" }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.ImageDecoder::ImageRequest" = type { i32 (...)**, %class.scoped_refptr, %"class.data_decoder::DataDecoder"* }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.data_decoder::DataDecoder" = type { %"class.base::TimeDelta", %"class.mojo::Remote" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.162" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1, %"class.std::__1::unique_ptr.112", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr, i32 }>
%class.scoped_refptr.1 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.75", %"class.absl::optional.80", %"class.absl::optional.37", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.103", i8, [7 x i8], %class.scoped_refptr, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.7", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.14", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr, %"class.std::__1::unique_ptr.22", %"class.absl::optional", %"struct.std::__1::atomic.33", i8, i8, i8, i8, i32, i32, %"class.absl::optional.37", %"class.std::__1::unique_ptr.42", i8, i64, %class.scoped_refptr.71, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.74" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.21", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.25", %class.scoped_refptr.26, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.27" }
%"class.mojo::ScopedHandleBase.25" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.26 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.27" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.32", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.32" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i8 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.45", i8, i64, %class.scoped_refptr.46, %class.scoped_refptr.67 }
%"class.base::RepeatingCallback.45" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.46 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.56", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.56" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%class.scoped_refptr.67 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.71 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.168", [4 x i8], %"class.base::RepeatingCallback.115", %class.scoped_refptr, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.169", [4 x i8] }>
%"class.base::RefCountedThreadSafe.168" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.115" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.74" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, [7 x i8], %union.anon.84 }
%union.anon.84 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.89 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.89 = type { %"class.std::__1::map.91" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.102"*, i64 }
%"class.std::__1::unique_ptr.102" = type opaque
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.115", %"class.base::OnceCallback.116", %"class.absl::optional.117", %"class.absl::optional.122", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.129", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.137", %"class.std::__1::map.148", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.157", i8, %class.scoped_refptr, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.158" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.116" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.base::TimeDelta" }
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.127" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.127" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.132", %class.scoped_refptr.133 }
%"class.base::RepeatingCallback.132" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.133 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.137" = type { %"class.std::__1::__tree.138" }
%"class.std::__1::__tree.138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::map.148" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.base::OnceCallback.157" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.158" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.data_decoder::mojom::DataDecoderServiceProxy"* }
%"class.data_decoder::mojom::DataDecoderServiceProxy" = type { %"class.data_decoder::mojom::DataDecoderService", %"class.mojo::MessageReceiverWithResponder"* }
%"class.data_decoder::mojom::DataDecoderService" = type { i32 (...)** }
%class.scoped_refptr.174 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::OnceCallback.193" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.196" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.197" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.198" }
%"struct.std::__1::pair.198" = type { i32, %"class.ImageDecoder::ImageRequest"* }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.195 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.194, i32, i32 }
%class.sk_sp.194 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.15" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.195 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.base::internal::BindState.203" = type { %"class.base::internal::BindStateBase", %"class.base::OnceCallback.193", %"class.std::__1::tuple.204" }
%"class.std::__1::tuple.204" = type { %"struct.std::__1::__tuple_impl.205" }
%"struct.std::__1::__tuple_impl.205" = type { %"class.std::__1::__tuple_leaf.206" }
%"class.std::__1::__tuple_leaf.206" = type { %class.SkBitmap }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::tuple.232" = type { %"struct.std::__1::__tuple_impl.233" }
%"struct.std::__1::__tuple_impl.233" = type { %"class.std::__1::__tuple_leaf.234", %"class.std::__1::__tuple_leaf.235", %"class.std::__1::__tuple_leaf.236", %"class.std::__1::__tuple_leaf.237", %"class.std::__1::__tuple_leaf.238", %"class.std::__1::__tuple_leaf.239", %"class.std::__1::__tuple_leaf.240" }
%"class.std::__1::__tuple_leaf.234" = type { %"class.std::__1::vector" }
%"class.std::__1::__tuple_leaf.235" = type { i32 }
%"class.std::__1::__tuple_leaf.236" = type { i8 }
%"class.std::__1::__tuple_leaf.237" = type { %"class.gfx::Size" }
%"class.std::__1::__tuple_leaf.238" = type { %"class.base::OnceCallback.193" }
%"class.std::__1::__tuple_leaf.239" = type { %class.scoped_refptr }
%"class.std::__1::__tuple_leaf.240" = type { %"class.data_decoder::DataDecoder"* }

$_ZN12ImageDecoder12ImageRequest19OnDecodeImageFailedEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES6_EJS8_SB_EEES7_E7RunOnceEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE6CreateIS7_JS5_EEEPS8_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS3_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS3_EEEEEFvS6_iEE7RunOnceEPNS0_13BindStateBaseES6_i = comdat any

$_ZN4base8internal9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEENS3_IFvRK8SkBitmapiEEEiS8_EJS5_SA_iEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEENS2_IFvRK8SkBitmapiEEEiS7_EJS4_S9_iEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__16vectorIhNS3_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS8_11DataDecoderEEJS7_SA_bSC_SK_SN_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__16vectorIhNS2_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS7_11DataDecoderEEJS6_S9_bSB_SJ_SM_SO_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN12ImageDecoder12ImageRequestE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ImageDecoder::ImageRequest"*)* @_ZN12ImageDecoder12ImageRequest19OnDecodeImageFailedEv to i8*), i8* bitcast (void (%"class.ImageDecoder::ImageRequest"*)* @_ZN12ImageDecoder12ImageRequestD2Ev to i8*), i8* bitcast (void (%"class.ImageDecoder::ImageRequest"*)* @_ZN12ImageDecoder12ImageRequestD0Ev to i8*)] }, align 8
@_ZZN12ImageDecoder11GetInstanceEvE13image_decoder = internal unnamed_addr global %class.ImageDecoder* null, align 8
@_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder = internal global i64 0, align 8
@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [21 x i8] c"StartWithOptionsImpl\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"../../chrome/browser/image_decoder/image_decoder.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"RunDecodeCallbackOnTaskRunner\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN12ImageDecoder12ImageRequestD1Ev = hidden unnamed_addr alias void (%"class.ImageDecoder::ImageRequest"*), void (%"class.ImageDecoder::ImageRequest"*)* @_ZN12ImageDecoder12ImageRequestD2Ev
@_ZN12ImageDecoderC1Ev = hidden unnamed_addr alias void (%class.ImageDecoder*), void (%class.ImageDecoder*)* @_ZN12ImageDecoderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder12ImageRequestC2Ev(%"class.ImageDecoder::ImageRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12ImageDecoder12ImageRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call dereferenceable(8) %class.scoped_refptr.174* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #11
  %4 = bitcast %class.scoped_refptr.174* %3 to %"class.base::SequencedTaskRunner"**
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* %5, %"class.base::SequencedTaskRunner"** %6, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 2
  store %"class.data_decoder::DataDecoder"* null, %"class.data_decoder::DataDecoder"** %12, align 8
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.174* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder12ImageRequestC2ERK13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.ImageDecoder::ImageRequest"* nocapture, %class.scoped_refptr* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12ImageDecoder12ImageRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* %5, %"class.base::SequencedTaskRunner"** %6, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 2
  store %"class.data_decoder::DataDecoder"* null, %"class.data_decoder::DataDecoder"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder12ImageRequestC2EPN12data_decoder11DataDecoderE(%"class.ImageDecoder::ImageRequest"* nocapture, %"class.data_decoder::DataDecoder"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12ImageDecoder12ImageRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call dereferenceable(8) %class.scoped_refptr.174* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #11
  %5 = bitcast %class.scoped_refptr.174* %4 to %"class.base::SequencedTaskRunner"**
  %6 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %5, align 8
  %7 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 1, i32 0
  store %"class.base::SequencedTaskRunner"* %6, %"class.base::SequencedTaskRunner"** %7, align 8
  %8 = icmp eq %"class.base::SequencedTaskRunner"* %6, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 2
  store %"class.data_decoder::DataDecoder"* %1, %"class.data_decoder::DataDecoder"** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder12ImageRequestD2Ev(%"class.ImageDecoder::ImageRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12ImageDecoder12ImageRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %16, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 72) #12
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 16
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %13 = bitcast i8* %12 to i8**
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 32
  %15 = bitcast i8* %14 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %15) #11
  store i8* %9, i8** bitcast (%class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  br label %16

16:                                               ; preds = %1, %5, %8
  %17 = load %class.ImageDecoder*, %class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder, align 8
  tail call void @_ZN12ImageDecoder10CancelImplEPNS_12ImageRequestE(%class.ImageDecoder* %17, %"class.ImageDecoder::ImageRequest"* %0) #11
  %18 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %0, i64 0, i32 1, i32 0
  %19 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SequencedTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %19, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #11
  br label %29

29:                                               ; preds = %16, %21, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder6CancelEPNS_12ImageRequestE(%"class.ImageDecoder::ImageRequest"* readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %15, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 72) #12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 16
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 32
  %14 = bitcast i8* %13 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %14) #11
  store i8* %8, i8** bitcast (%class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  br label %15

15:                                               ; preds = %1, %4, %7
  %16 = load %class.ImageDecoder*, %class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder, align 8
  tail call void @_ZN12ImageDecoder10CancelImplEPNS_12ImageRequestE(%class.ImageDecoder* %16, %"class.ImageDecoder::ImageRequest"* %0)
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder12ImageRequestD0Ev(%"class.ImageDecoder::ImageRequest"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.ImageDecoder* @_ZN12ImageDecoder11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %14, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 72) #12
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 16
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 32
  %13 = bitcast i8* %12 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %13) #11
  store i8* %7, i8** bitcast (%class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  br label %14

14:                                               ; preds = %3, %6, %0
  %15 = load %class.ImageDecoder*, %class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder, align 8
  ret %class.ImageDecoder* %15
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder5StartEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.ImageDecoder::ImageRequest"*, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = alloca %"class.gfx::Size", align 4
  %5 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 16
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 16
  %13 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %16, align 4
  call void @_ZN12ImageDecoder16StartWithOptionsEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%"class.ImageDecoder::ImageRequest"* %0, %"class.std::__1::vector"* nonnull %3, i32 0, i1 zeroext false, %"class.gfx::Size"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 16
  %19 = icmp eq i8* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = ptrtoint i8* %18 to i64
  store i64 %23, i64* %22, align 8
  tail call void @_ZdlPv(i8* nonnull %18) #12
  br label %24

24:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder16StartWithOptionsEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%"class.ImageDecoder::ImageRequest"*, %"class.std::__1::vector"* nocapture, i32, i1 zeroext, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 16
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %20, !prof !2

9:                                                ; preds = %5
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 72) #12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 16
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 32
  %19 = bitcast i8* %18 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %19) #11
  store i8* %13, i8** bitcast (%class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12ImageDecoder11GetInstanceEvE13image_decoder) #11
  br label %20

20:                                               ; preds = %5, %9, %12
  %21 = load %class.ImageDecoder*, %class.ImageDecoder** @_ZZN12ImageDecoder11GetInstanceEvE13image_decoder, align 8
  %22 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 16
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  store i64 %27, i64* %29, align 16
  %30 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11
  call void @_ZN12ImageDecoder20StartWithOptionsImplEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%class.ImageDecoder* %21, %"class.ImageDecoder::ImageRequest"* %0, %"class.std::__1::vector"* nonnull %6, i32 undef, i1 zeroext %3, %"class.gfx::Size"* dereferenceable(8) %4)
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 16
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = ptrtoint i8* %32 to i64
  store i64 %37, i64* %36, align 8
  tail call void @_ZdlPv(i8* nonnull %32) #12
  br label %38

38:                                               ; preds = %20, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder5StartEPNS_12ImageRequestERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.ImageDecoder::ImageRequest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.gfx::Size", align 4
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %136, label %21

21:                                               ; preds = %2
  %22 = icmp slt i64 %17, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %17) #12
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 %17
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = bitcast i8** %27 to i64*
  %32 = icmp ult i64 %17, 32
  br i1 %32, label %119, label %33

33:                                               ; preds = %25
  %34 = getelementptr i8, i8* %26, i64 %17
  %35 = icmp ult i8* %26, %18
  %36 = icmp ult i8* %16, %34
  %37 = and i1 %35, %36
  br i1 %37, label %119, label %38

38:                                               ; preds = %33
  %39 = and i64 %17, -32
  %40 = getelementptr i8, i8* %26, i64 %39
  %41 = getelementptr i8, i8* %16, i64 %39
  %42 = add i64 %39, -32
  %43 = lshr exact i64 %42, 5
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp ult i64 %42, 96
  br i1 %46, label %98, label %47

47:                                               ; preds = %38
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %95, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %96, %49 ]
  %52 = getelementptr i8, i8* %26, i64 %50
  %53 = getelementptr i8, i8* %16, i64 %50
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1, !alias.scope !3
  %56 = getelementptr i8, i8* %53, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1, !alias.scope !3
  %59 = bitcast i8* %52 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %59, align 1, !alias.scope !6, !noalias !3
  %60 = getelementptr i8, i8* %52, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %61, align 1, !alias.scope !6, !noalias !3
  %62 = or i64 %50, 32
  %63 = getelementptr i8, i8* %26, i64 %62
  %64 = getelementptr i8, i8* %16, i64 %62
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !3
  %67 = getelementptr i8, i8* %64, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1, !alias.scope !3
  %70 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %70, align 1, !alias.scope !6, !noalias !3
  %71 = getelementptr i8, i8* %63, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %72, align 1, !alias.scope !6, !noalias !3
  %73 = or i64 %50, 64
  %74 = getelementptr i8, i8* %26, i64 %73
  %75 = getelementptr i8, i8* %16, i64 %73
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !3
  %78 = getelementptr i8, i8* %75, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1, !alias.scope !3
  %81 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %81, align 1, !alias.scope !6, !noalias !3
  %82 = getelementptr i8, i8* %74, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %80, <16 x i8>* %83, align 1, !alias.scope !6, !noalias !3
  %84 = or i64 %50, 96
  %85 = getelementptr i8, i8* %26, i64 %84
  %86 = getelementptr i8, i8* %16, i64 %84
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !3
  %89 = getelementptr i8, i8* %86, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !3
  %92 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %92, align 1, !alias.scope !6, !noalias !3
  %93 = getelementptr i8, i8* %85, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %91, <16 x i8>* %94, align 1, !alias.scope !6, !noalias !3
  %95 = add i64 %50, 128
  %96 = add i64 %51, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %49, !llvm.loop !8

98:                                               ; preds = %49, %38
  %99 = phi i64 [ 0, %38 ], [ %95, %49 ]
  %100 = icmp eq i64 %45, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %98, %101
  %102 = phi i64 [ %114, %101 ], [ %99, %98 ]
  %103 = phi i64 [ %115, %101 ], [ %45, %98 ]
  %104 = getelementptr i8, i8* %26, i64 %102
  %105 = getelementptr i8, i8* %16, i64 %102
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !3
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !3
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !6, !noalias !3
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !6, !noalias !3
  %114 = add i64 %102, 32
  %115 = add i64 %103, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %101, !llvm.loop !10

117:                                              ; preds = %101, %98
  %118 = icmp eq i64 %17, %39
  br i1 %118, label %129, label %119

119:                                              ; preds = %117, %33, %25
  %120 = phi i8* [ %26, %33 ], [ %26, %25 ], [ %40, %117 ]
  %121 = phi i8* [ %16, %33 ], [ %16, %25 ], [ %41, %117 ]
  br label %122

122:                                              ; preds = %119, %122
  %123 = phi i8* [ %127, %122 ], [ %120, %119 ]
  %124 = phi i8* [ %126, %122 ], [ %121, %119 ]
  %125 = load i8, i8* %124, align 1
  store i8 %125, i8* %123, align 1
  %126 = getelementptr inbounds i8, i8* %124, i64 1
  %127 = getelementptr inbounds i8, i8* %123, i64 1
  %128 = icmp eq i8* %126, %18
  br i1 %128, label %129, label %122, !llvm.loop !12

129:                                              ; preds = %122, %117
  %130 = phi i8* [ %40, %117 ], [ %127, %122 ]
  %131 = bitcast %"class.std::__1::vector"* %5 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i8** %30 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = ptrtoint i8* %130 to i64
  store i64 %135, i64* %31, align 8
  br label %136

136:                                              ; preds = %2, %129
  %137 = phi i64 [ %134, %129 ], [ 0, %2 ]
  %138 = phi i64 [ %135, %129 ], [ 0, %2 ]
  %139 = phi i64 [ %132, %129 ], [ 0, %2 ]
  %140 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140)
  %141 = bitcast %"class.std::__1::vector"* %3 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %143 = bitcast i8** %142 to i64*
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %145 = bitcast i8** %144 to i64*
  store i64 %138, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %147 = bitcast i8** %146 to i64*
  store i64 %137, i64* %147, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %148 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #11
  %149 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  store i32 0, i32* %149, align 4
  %150 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %150, align 4
  call void @_ZN12ImageDecoder16StartWithOptionsEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%"class.ImageDecoder::ImageRequest"* %0, %"class.std::__1::vector"* nonnull %3, i32 0, i1 zeroext false, %"class.gfx::Size"* nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #11
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %136
  %155 = ptrtoint i8* %152 to i64
  store i64 %155, i64* %145, align 8
  tail call void @_ZdlPv(i8* nonnull %152) #12
  br label %156

156:                                              ; preds = %136, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140)
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = ptrtoint i8* %158 to i64
  store i64 %161, i64* %143, align 8
  tail call void @_ZdlPv(i8* nonnull %158) #12
  br label %162

162:                                              ; preds = %156, %160
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder20StartWithOptionsImplEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%class.ImageDecoder*, %"class.ImageDecoder::ImageRequest"*, %"class.std::__1::vector"* nocapture, i32, i1 zeroext, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback.193", align 8
  %8 = alloca %"class.base::OnceCallback.196", align 8
  %9 = alloca %"class.base::OnceCallback.197", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = zext i1 %4 to i8
  %13 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !13

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #11
  br label %19

19:                                               ; preds = %6, %17
  %20 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1
  %24 = ptrtoint %"class.ImageDecoder::ImageRequest"* %1 to i64
  %25 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %57, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi %"class.std::__1::__tree_node"* [ %56, %53 ], [ %27, %29 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %21, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

43:                                               ; preds = %31
  %44 = icmp slt i32 %35, %21
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45, %37
  %54 = phi %"class.std::__1::__tree_node_base"* [ %39, %37 ], [ %47, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %46, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"* %54 to %"class.std::__1::__tree_node"*
  br label %31

57:                                               ; preds = %19
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  br label %59

59:                                               ; preds = %57, %51, %49, %41
  %60 = phi %"class.std::__1::__tree_end_node"* [ %25, %57 ], [ %42, %41 ], [ %50, %49 ], [ %52, %51 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %38, %41 ], [ %46, %49 ], [ %33, %51 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %91

65:                                               ; preds = %59
  %66 = tail call i8* @_Znwm(i64 48) #12, !noalias !14
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  %68 = bitcast i8* %67 to i32*
  store i32 %21, i32* %68, align 8, !noalias !14
  %69 = getelementptr inbounds i8, i8* %66, i64 40
  %70 = bitcast i8* %69 to i64*
  store i64 %24, i64* %70, align 8, !noalias !14
  %71 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds i8, i8* %66, i64 16
  %73 = bitcast i8* %72 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %23, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %65
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %78 to i64
  %82 = bitcast %"class.std::__1::map.175"* %23 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %84

84:                                               ; preds = %80, %65
  %85 = phi %"class.std::__1::__tree_node_base"* [ %71, %65 ], [ %83, %80 ]
  %86 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %87, %"class.std::__1::__tree_node_base"* %85) #11
  %88 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %59, %84
  %92 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #11
  %93 = bitcast %"class.base::OnceCallback.193"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %7, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.base::OnceCallback.196"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = ptrtoint %class.ImageDecoder* %0 to i64
  %97 = tail call i8* @_Znwm(i64 56) #12, !noalias !17
  %98 = bitcast i8* %97 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %98, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS3_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !17
  %99 = getelementptr inbounds i8, i8* %97, i64 32
  %100 = bitcast i8* %99 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.ImageDecoder*, i32)* @_ZN12ImageDecoder19OnDecodeImageFailedEi to i64), i64 0>, <2 x i64>* %100, align 8, !noalias !17
  %101 = getelementptr inbounds i8, i8* %97, i64 48
  %102 = bitcast i8* %101 to i64*
  store i64 %96, i64* %102, align 8, !noalias !17
  %103 = bitcast %"class.base::OnceCallback.197"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = tail call i8* @_Znwm(i64 56) #12, !noalias !22
  %105 = bitcast i8* %104 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %105, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS3_EEEEEFvS6_iEE7RunOnceEPNS0_13BindStateBaseES6_i to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !22
  %106 = getelementptr inbounds i8, i8* %104, i64 32
  %107 = bitcast i8* %106 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.ImageDecoder*, %class.SkBitmap*, i32)* @_ZN12ImageDecoder22OnDecodeImageSucceededERK8SkBitmapi to i64), i64 0>, <2 x i64>* %107, align 8, !noalias !22
  %108 = getelementptr inbounds i8, i8* %104, i64 48
  %109 = bitcast i8* %108 to i64*
  store i64 %96, i64* %109, align 8, !noalias !22
  %110 = tail call i8* @_Znwm(i64 64) #12, !noalias !27
  %111 = bitcast i8* %110 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %111, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEENS3_IFvRK8SkBitmapiEEEiS8_EJS5_SA_iEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEENS2_IFvRK8SkBitmapiEEEiS7_EJS4_S9_iEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !27
  %112 = getelementptr inbounds i8, i8* %110, i64 32
  %113 = bitcast i8* %112 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.196"*, %"class.base::OnceCallback.197"*, i32, %class.SkBitmap*)* @_ZN12_GLOBAL__N_117OnDecodeImageDoneEN4base12OnceCallbackIFviEEENS1_IFvRK8SkBitmapiEEEiS6_ to i64), i64* %113, align 8, !noalias !27
  %114 = getelementptr inbounds i8, i8* %110, i64 40
  %115 = getelementptr inbounds %"class.base::OnceCallback.196", %"class.base::OnceCallback.196"* %8, i64 0, i32 0, i32 0, i32 0
  %116 = ptrtoint i8* %97 to i64
  %117 = bitcast i8* %114 to i64*
  store i64 %116, i64* %117, align 8, !noalias !27
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8, !noalias !27
  %118 = getelementptr inbounds i8, i8* %110, i64 48
  %119 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %9, i64 0, i32 0, i32 0, i32 0
  %120 = ptrtoint i8* %104 to i64
  %121 = bitcast i8* %118 to i64*
  store i64 %120, i64* %121, align 8, !noalias !27
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %119, align 8, !noalias !27
  %122 = getelementptr inbounds i8, i8* %110, i64 56
  %123 = bitcast i8* %122 to i32*
  store i32 %21, i32* %123, align 4, !noalias !27
  %124 = bitcast %"class.base::OnceCallback.193"* %7 to i8**
  store i8* %110, i8** %124, align 8, !alias.scope !27
  %125 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %126 = getelementptr inbounds %"class.base::OnceCallback.196", %"class.base::OnceCallback.196"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %126) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  %127 = call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #11
  %128 = bitcast %"class.base::SingleThreadTaskRunner"* %127 to %"class.base::TaskRunner"*
  %129 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i32 176) #11
  %130 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %1, i64 0, i32 1, i32 0
  %131 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %130, align 8
  %132 = icmp eq %"class.base::SequencedTaskRunner"* %131, null
  %133 = ptrtoint i8* %110 to i64
  br i1 %132, label %137, label %134

134:                                              ; preds = %91
  %135 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %131, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 1 monotonic
  br label %137

137:                                              ; preds = %134, %91
  %138 = ptrtoint %"class.base::SequencedTaskRunner"* %131 to i64
  %139 = getelementptr inbounds %"class.ImageDecoder::ImageRequest", %"class.ImageDecoder::ImageRequest"* %1, i64 0, i32 2
  %140 = bitcast %"class.data_decoder::DataDecoder"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = call i8* @_Znwm(i64 104) #12, !noalias !32
  %143 = bitcast i8* %142 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %143, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__16vectorIhNS3_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS8_11DataDecoderEEJS7_SA_bSC_SK_SN_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__16vectorIhNS2_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS7_11DataDecoderEEJS6_S9_bSB_SJ_SM_SO_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !32
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast i8* %144 to i64*
  store i64 ptrtoint (void (%"class.std::__1::vector"*, i32, i1, %"class.gfx::Size"*, %"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %"class.data_decoder::DataDecoder"*)* @_ZN12_GLOBAL__N_111DecodeImageENSt3__16vectorIhNS0_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINSC_19SequencedTaskRunnerEEPNS5_11DataDecoderE to i64), i64* %145, align 8, !noalias !32
  %146 = getelementptr inbounds i8, i8* %142, i64 40
  %147 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !noalias !32
  %149 = bitcast i8* %146 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %149, align 8, !noalias !32
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %151 = bitcast i8** %150 to i64*
  %152 = load i64, i64* %151, align 8, !noalias !32
  %153 = getelementptr inbounds i8, i8* %142, i64 56
  %154 = bitcast i8* %153 to i64*
  store i64 %152, i64* %154, align 8, !noalias !32
  %155 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #11, !noalias !32
  %156 = getelementptr inbounds i8, i8* %142, i64 64
  %157 = bitcast i8* %156 to i32*
  store i32 0, i32* %157, align 4, !noalias !32
  %158 = getelementptr inbounds i8, i8* %142, i64 68
  store i8 %12, i8* %158, align 1, !noalias !32
  %159 = getelementptr inbounds i8, i8* %142, i64 72
  %160 = bitcast %"class.gfx::Size"* %5 to i64*
  %161 = bitcast i8* %159 to i64*
  %162 = load i64, i64* %160, align 4, !noalias !32
  store i64 %162, i64* %161, align 4, !noalias !32
  %163 = getelementptr inbounds i8, i8* %142, i64 80
  %164 = bitcast i8* %163 to i64*
  store i64 %133, i64* %164, align 8, !noalias !32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %94, align 8, !noalias !32
  %165 = getelementptr inbounds i8, i8* %142, i64 88
  %166 = bitcast i8* %165 to i64*
  store i64 %138, i64* %166, align 8, !noalias !32
  %167 = getelementptr inbounds i8, i8* %142, i64 96
  %168 = bitcast i8* %167 to i64*
  store i64 %141, i64* %168, align 8, !noalias !32
  %169 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %142, i8** %169, align 8, !alias.scope !32
  %170 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %128, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11) #11
  %171 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %171) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #11
  %172 = icmp eq %"class.base::SingleThreadTaskRunner"* %127, null
  br i1 %172, label %181, label %173

173:                                              ; preds = %137
  %174 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %127, i64 0, i32 0, i32 0, i32 1
  %175 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw sub i32* %175, i32 1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %181

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %174, i64 -2
  %180 = bitcast %"class.base::RefCountedThreadSafe"* %179 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %180) #11
  br label %181

181:                                              ; preds = %137, %173, %178
  %182 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %182) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder16StartWithOptionsEPNS_12ImageRequestERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_10ImageCodecEb(%"class.ImageDecoder::ImageRequest"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.gfx::Size", align 4
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %21 = icmp eq i64 %18, 0
  br i1 %21, label %133, label %22

22:                                               ; preds = %4
  %23 = icmp slt i64 %18, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %25) #13
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %18) #12
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 %18
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = bitcast i8** %28 to i64*
  %33 = icmp ult i64 %18, 32
  br i1 %33, label %120, label %34

34:                                               ; preds = %26
  %35 = getelementptr i8, i8* %27, i64 %18
  %36 = icmp ult i8* %27, %19
  %37 = icmp ult i8* %17, %35
  %38 = and i1 %36, %37
  br i1 %38, label %120, label %39

39:                                               ; preds = %34
  %40 = and i64 %18, -32
  %41 = getelementptr i8, i8* %27, i64 %40
  %42 = getelementptr i8, i8* %17, i64 %40
  %43 = add i64 %40, -32
  %44 = lshr exact i64 %43, 5
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 96
  br i1 %47, label %99, label %48

48:                                               ; preds = %39
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i8, i8* %27, i64 %51
  %54 = getelementptr i8, i8* %17, i64 %51
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1, !alias.scope !37
  %57 = getelementptr i8, i8* %54, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !37
  %60 = bitcast i8* %53 to <16 x i8>*
  store <16 x i8> %56, <16 x i8>* %60, align 1, !alias.scope !40, !noalias !37
  %61 = getelementptr i8, i8* %53, i64 16
  %62 = bitcast i8* %61 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %62, align 1, !alias.scope !40, !noalias !37
  %63 = or i64 %51, 32
  %64 = getelementptr i8, i8* %27, i64 %63
  %65 = getelementptr i8, i8* %17, i64 %63
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1, !alias.scope !37
  %68 = getelementptr i8, i8* %65, i64 16
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !37
  %71 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %67, <16 x i8>* %71, align 1, !alias.scope !40, !noalias !37
  %72 = getelementptr i8, i8* %64, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %73, align 1, !alias.scope !40, !noalias !37
  %74 = or i64 %51, 64
  %75 = getelementptr i8, i8* %27, i64 %74
  %76 = getelementptr i8, i8* %17, i64 %74
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !37
  %79 = getelementptr i8, i8* %76, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !37
  %82 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 1, !alias.scope !40, !noalias !37
  %83 = getelementptr i8, i8* %75, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %84, align 1, !alias.scope !40, !noalias !37
  %85 = or i64 %51, 96
  %86 = getelementptr i8, i8* %27, i64 %85
  %87 = getelementptr i8, i8* %17, i64 %85
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !37
  %90 = getelementptr i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !37
  %93 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %93, align 1, !alias.scope !40, !noalias !37
  %94 = getelementptr i8, i8* %86, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %95, align 1, !alias.scope !40, !noalias !37
  %96 = add i64 %51, 128
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !42

99:                                               ; preds = %50, %39
  %100 = phi i64 [ 0, %39 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i8, i8* %27, i64 %103
  %106 = getelementptr i8, i8* %17, i64 %103
  %107 = bitcast i8* %106 to <16 x i8>*
  %108 = load <16 x i8>, <16 x i8>* %107, align 1, !alias.scope !37
  %109 = getelementptr i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !37
  %112 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %108, <16 x i8>* %112, align 1, !alias.scope !40, !noalias !37
  %113 = getelementptr i8, i8* %105, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %114, align 1, !alias.scope !40, !noalias !37
  %115 = add i64 %103, 32
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !43

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %18, %40
  br i1 %119, label %130, label %120

120:                                              ; preds = %118, %34, %26
  %121 = phi i8* [ %27, %34 ], [ %27, %26 ], [ %41, %118 ]
  %122 = phi i8* [ %17, %34 ], [ %17, %26 ], [ %42, %118 ]
  br label %123

123:                                              ; preds = %120, %123
  %124 = phi i8* [ %128, %123 ], [ %121, %120 ]
  %125 = phi i8* [ %127, %123 ], [ %122, %120 ]
  %126 = load i8, i8* %125, align 1
  store i8 %126, i8* %124, align 1
  %127 = getelementptr inbounds i8, i8* %125, i64 1
  %128 = getelementptr inbounds i8, i8* %124, i64 1
  %129 = icmp eq i8* %127, %19
  br i1 %129, label %130, label %123, !llvm.loop !44

130:                                              ; preds = %123, %118
  %131 = phi i8* [ %41, %118 ], [ %128, %123 ]
  %132 = ptrtoint i8* %131 to i64
  store i64 %132, i64* %32, align 8
  br label %133

133:                                              ; preds = %4, %130
  %134 = bitcast %"class.gfx::Size"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #11
  %135 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 0
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %6, i64 0, i32 1
  store i32 0, i32* %136, align 4
  call void @_ZN12ImageDecoder16StartWithOptionsEPNS_12ImageRequestENSt3__16vectorIhNS2_9allocatorIhEEEENS_10ImageCodecEbRKN3gfx4SizeE(%"class.ImageDecoder::ImageRequest"* %0, %"class.std::__1::vector"* nonnull %5, i32 %2, i1 zeroext %3, %"class.gfx::Size"* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #11
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %133
  %141 = ptrtoint i8* %138 to i64
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %143 = bitcast i8** %142 to i64*
  store i64 %141, i64* %143, align 8
  tail call void @_ZdlPv(i8* nonnull %138) #12
  br label %144

144:                                              ; preds = %133, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoderC2Ev(%class.ImageDecoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117OnDecodeImageDoneEN4base12OnceCallbackIFviEEENS1_IFvRK8SkBitmapiEEEiS6_(%"class.base::OnceCallback.196"* nocapture, %"class.base::OnceCallback.197"* nocapture, i32, %class.SkBitmap* dereferenceable(56)) #0 {
  %5 = alloca %"class.base::OnceCallback.197", align 8
  %6 = alloca %"class.base::OnceCallback.196", align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  %9 = icmp eq %class.SkPixelRef* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %29, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %29, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.base::OnceCallback.197"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.197"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback.197"* %5 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %5, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, i32)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, i32)*, void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, i32)** %27, align 8
  tail call void %28(%"class.base::internal::BindStateBase"* %25, %class.SkBitmap* dereferenceable(56) %3, i32 %2) #11
  br label %40

29:                                               ; preds = %10, %14, %4
  %30 = bitcast %"class.base::OnceCallback.196"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.base::OnceCallback.196", %"class.base::OnceCallback.196"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::OnceCallback.196"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback.196"* %6 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %35 = getelementptr inbounds %"class.base::OnceCallback.196", %"class.base::OnceCallback.196"* %6, i64 0, i32 0
  %36 = inttoptr i64 %33 to %"class.base::internal::BindStateBase"*
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %36, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.base::internal::BindStateBase"*, i32)**
  %39 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %38, align 8
  tail call void %39(%"class.base::internal::BindStateBase"* %36, i32 %2) #11
  br label %40

40:                                               ; preds = %29, %18
  %41 = phi %"class.base::internal::CallbackBase"* [ %35, %29 ], [ %24, %18 ]
  %42 = phi i8* [ %30, %29 ], [ %19, %18 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder19OnDecodeImageFailedEi(%class.ImageDecoder*, i32) #0 align 2 {
  %3 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  %15 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node_base"*
  br i1 %14, label %77, label %16

16:                                               ; preds = %9, %16
  %17 = phi %"class.std::__1::__tree_end_node"* [ %27, %16 ], [ %11, %9 ]
  %18 = phi %"class.std::__1::__tree_node"* [ %28, %16 ], [ %13, %9 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node"* %18 to %"class.std::__1::__tree_node"**
  %26 = select i1 %21, %"class.std::__1::__tree_node"** %23, %"class.std::__1::__tree_node"** %25
  %27 = select i1 %21, %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"* %24
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %27, %11
  br i1 %31, label %77, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, %1
  br i1 %36, label %77, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 5
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.ImageDecoder::ImageRequest"**
  %40 = load %"class.ImageDecoder::ImageRequest"*, %"class.ImageDecoder::ImageRequest"** %39, align 8
  %41 = bitcast %"class.ImageDecoder::ImageRequest"* %40 to void (%"class.ImageDecoder::ImageRequest"*)***
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 1, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %37
  %46 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_end_node"**
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, %46
  br i1 %52, label %69, label %60

53:                                               ; preds = %37, %53
  %54 = phi %"class.std::__1::__tree_node_base"* [ %56, %53 ], [ %43, %37 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %53

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0
  br label %69

60:                                               ; preds = %45, %60
  %61 = phi %"class.std::__1::__tree_end_node"** [ %64, %60 ], [ %48, %45 ]
  %62 = bitcast %"class.std::__1::__tree_end_node"** %61 to %"class.std::__1::__tree_node_base"**
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 2
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, %63
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %58, %45
  %70 = phi %"class.std::__1::__tree_end_node"* [ %59, %58 ], [ %49, %45 ], [ %65, %60 ]
  %71 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %10, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %72, %27
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = ptrtoint %"class.std::__1::__tree_end_node"* %70 to i64
  %76 = bitcast %"class.std::__1::map.175"* %10 to i64*
  store i64 %75, i64* %76, align 8
  br label %79

77:                                               ; preds = %9, %30, %32
  %78 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  br label %89

79:                                               ; preds = %69, %74
  %80 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, -1
  store i64 %82, i64* %80, align 8
  %83 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %15, %"class.std::__1::__tree_node_base"* %83) #11
  %84 = bitcast %"class.std::__1::__tree_end_node"* %27 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  %85 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  %86 = load void (%"class.ImageDecoder::ImageRequest"*)**, void (%"class.ImageDecoder::ImageRequest"*)*** %41, align 8
  %87 = getelementptr inbounds void (%"class.ImageDecoder::ImageRequest"*)*, void (%"class.ImageDecoder::ImageRequest"*)** %86, i64 1
  %88 = load void (%"class.ImageDecoder::ImageRequest"*)*, void (%"class.ImageDecoder::ImageRequest"*)** %87, align 8
  tail call void %88(%"class.ImageDecoder::ImageRequest"* %40) #11
  br label %89

89:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder22OnDecodeImageSucceededERK8SkBitmapi(%class.ImageDecoder*, %class.SkBitmap* dereferenceable(56), i32) #0 align 2 {
  %4 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  %16 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node_base"*
  br i1 %15, label %78, label %17

17:                                               ; preds = %10, %17
  %18 = phi %"class.std::__1::__tree_end_node"* [ %28, %17 ], [ %12, %10 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %29, %17 ], [ %14, %10 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %2
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tree_node_base"** %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %27 = select i1 %22, %"class.std::__1::__tree_node"** %24, %"class.std::__1::__tree_node"** %26
  %28 = select i1 %22, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %25
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %28, %12
  br i1 %32, label %78, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %2
  br i1 %37, label %78, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 5
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.ImageDecoder::ImageRequest"**
  %41 = load %"class.ImageDecoder::ImageRequest"*, %"class.ImageDecoder::ImageRequest"** %40, align 8
  %42 = bitcast %"class.ImageDecoder::ImageRequest"* %41 to void (%"class.ImageDecoder::ImageRequest"*, %class.SkBitmap*)***
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 1, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %38
  %47 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_end_node"**
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %47
  br i1 %53, label %70, label %61

54:                                               ; preds = %38, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %44, %38 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %54

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0
  br label %70

61:                                               ; preds = %46, %61
  %62 = phi %"class.std::__1::__tree_end_node"** [ %65, %61 ], [ %49, %46 ]
  %63 = bitcast %"class.std::__1::__tree_end_node"** %62 to %"class.std::__1::__tree_node_base"**
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 2
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, %64
  br i1 %69, label %70, label %61

70:                                               ; preds = %61, %59, %46
  %71 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %50, %46 ], [ %66, %61 ]
  %72 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %11, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %73, %28
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = ptrtoint %"class.std::__1::__tree_end_node"* %71 to i64
  %77 = bitcast %"class.std::__1::map.175"* %11 to i64*
  store i64 %76, i64* %77, align 8
  br label %80

78:                                               ; preds = %10, %31, %33
  %79 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  br label %89

80:                                               ; preds = %70, %75
  %81 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %16, %"class.std::__1::__tree_node_base"* %84) #11
  %85 = bitcast %"class.std::__1::__tree_end_node"* %28 to i8*
  tail call void @_ZdlPv(i8* %85) #12
  %86 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  %87 = load void (%"class.ImageDecoder::ImageRequest"*, %class.SkBitmap*)**, void (%"class.ImageDecoder::ImageRequest"*, %class.SkBitmap*)*** %42, align 8
  %88 = load void (%"class.ImageDecoder::ImageRequest"*, %class.SkBitmap*)*, void (%"class.ImageDecoder::ImageRequest"*, %class.SkBitmap*)** %87, align 8
  tail call void %88(%"class.ImageDecoder::ImageRequest"* %41, %class.SkBitmap* dereferenceable(56) %1) #11
  br label %89

89:                                               ; preds = %78, %80
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111DecodeImageENSt3__16vectorIhNS0_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINSC_19SequencedTaskRunnerEEPNS5_11DataDecoderE(%"class.std::__1::vector"*, i32, i1 zeroext, %"class.gfx::Size"* dereferenceable(8), %"class.base::OnceCallback.193"* nocapture, %"class.base::SequencedTaskRunner"*, %"class.data_decoder::DataDecoder"*) #0 {
  %8 = alloca %"class.base::OnceCallback.193", align 8
  %9 = alloca %"class.base::OnceCallback.193", align 8
  %10 = ptrtoint %"class.base::SequencedTaskRunner"* %5 to i64
  %11 = icmp eq %"class.data_decoder::DataDecoder"* %6, null
  %12 = tail call i8* @_Znwm(i64 56) #12
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES6_EJS8_SB_EEES7_E7RunOnceEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EE7DestroyEPKNS0_13BindStateBaseE) #11
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %class.SkBitmap*)* @_ZN12_GLOBAL__N_129RunDecodeCallbackOnTaskRunnerEN4base12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS0_19SequencedTaskRunnerEES4_ to i64), i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 40
  %17 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::OnceCallback.193"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %10, i64* %22, align 8
  br i1 %11, label %25, label %23

23:                                               ; preds = %7
  %24 = bitcast %"class.base::OnceCallback.193"* %8 to i8**
  store i8* %12, i8** %24, align 8, !alias.scope !45
  call void @_ZN12data_decoder11DecodeImageEPNS_11DataDecoderERKNSt3__16vectorIhNS2_9allocatorIhEEEENS_5mojom10ImageCodecEbmRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.data_decoder::DataDecoder"* nonnull %6, %"class.std::__1::vector"* dereferenceable(24) %0, i32 %1, i1 zeroext %2, i64 134217728, %"class.gfx::Size"* dereferenceable(8) %3, %"class.base::OnceCallback.193"* nonnull %8) #11
  br label %27

25:                                               ; preds = %7
  %26 = bitcast %"class.base::OnceCallback.193"* %9 to i8**
  store i8* %12, i8** %26, align 8, !alias.scope !50
  call void @_ZN12data_decoder19DecodeImageIsolatedERKNSt3__16vectorIhNS0_9allocatorIhEEEENS_5mojom10ImageCodecEbmRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.std::__1::vector"* dereferenceable(24) %0, i32 %1, i1 zeroext %2, i64 134217728, %"class.gfx::Size"* dereferenceable(8) %3, %"class.base::OnceCallback.193"* nonnull %9) #11
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi %"class.base::OnceCallback.193"* [ %8, %23 ], [ %9, %25 ]
  %29 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %28, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12ImageDecoder10CancelImplEPNS_12ImageRequestE(%class.ImageDecoder*, %"class.ImageDecoder::ImageRequest"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::map.175"* %10 to i64*
  %17 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %class.ImageDecoder, %class.ImageDecoder* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %21

19:                                               ; preds = %119, %9
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  ret void

21:                                               ; preds = %15, %119
  %22 = phi %"class.std::__1::__tree_end_node"* [ %12, %15 ], [ %120, %119 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.ImageDecoder::ImageRequest"**
  %25 = load %"class.ImageDecoder::ImageRequest"*, %"class.ImageDecoder::ImageRequest"** %24, align 8
  %26 = icmp eq %"class.ImageDecoder::ImageRequest"* %25, %1
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %26, label %30, label %94

30:                                               ; preds = %21
  br i1 %29, label %31, label %39

31:                                               ; preds = %30
  %32 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %81, label %46

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::__tree_node_base"* [ %42, %39 ], [ %28, %30 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0
  br label %55

46:                                               ; preds = %31, %46
  %47 = phi %"class.std::__1::__tree_end_node"** [ %50, %46 ], [ %34, %31 ]
  %48 = bitcast %"class.std::__1::__tree_end_node"** %47 to %"class.std::__1::__tree_node_base"**
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %49
  br i1 %54, label %55, label %46

55:                                               ; preds = %46, %44
  %56 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %51, %46 ]
  br i1 %29, label %57, label %65

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_end_node"**
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %62, %63
  br i1 %64, label %81, label %72

65:                                               ; preds = %55, %65
  %66 = phi %"class.std::__1::__tree_node_base"* [ %68, %65 ], [ %28, %55 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %65

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0
  br label %81

72:                                               ; preds = %57, %72
  %73 = phi %"class.std::__1::__tree_end_node"** [ %76, %72 ], [ %59, %57 ]
  %74 = bitcast %"class.std::__1::__tree_end_node"** %73 to %"class.std::__1::__tree_node_base"**
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 2
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %75
  br i1 %80, label %81, label %72

81:                                               ; preds = %72, %31, %70, %57
  %82 = phi %"class.std::__1::__tree_end_node"* [ %56, %70 ], [ %56, %57 ], [ %35, %31 ], [ %56, %72 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %71, %70 ], [ %60, %57 ], [ %35, %31 ], [ %77, %72 ]
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %84, %22
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = ptrtoint %"class.std::__1::__tree_end_node"* %83 to i64
  store i64 %87, i64* %16, align 8
  br label %88

88:                                               ; preds = %81, %86
  %89 = load i64, i64* %17, align 8
  %90 = add i64 %89, -1
  store i64 %90, i64* %17, align 8
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %92) #11
  %93 = bitcast %"class.std::__1::__tree_end_node"* %22 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %119

94:                                               ; preds = %21
  br i1 %29, label %95, label %103

95:                                               ; preds = %94
  %96 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_end_node"**
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %96
  br i1 %102, label %119, label %110

103:                                              ; preds = %94, %103
  %104 = phi %"class.std::__1::__tree_node_base"* [ %106, %103 ], [ %28, %94 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %103

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 0
  br label %119

110:                                              ; preds = %95, %110
  %111 = phi %"class.std::__1::__tree_end_node"** [ %114, %110 ], [ %98, %95 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %111 to %"class.std::__1::__tree_node_base"**
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, %113
  br i1 %118, label %119, label %110

119:                                              ; preds = %110, %108, %95, %88
  %120 = phi %"class.std::__1::__tree_end_node"* [ %82, %88 ], [ %109, %108 ], [ %99, %95 ], [ %115, %110 ]
  %121 = icmp eq %"class.std::__1::__tree_end_node"* %120, %13
  br i1 %121, label %19, label %21
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12ImageDecoder12ImageRequest19OnDecodeImageFailedEv(%"class.ImageDecoder::ImageRequest"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN12data_decoder11DecodeImageEPNS_11DataDecoderERKNSt3__16vectorIhNS2_9allocatorIhEEEENS_5mojom10ImageCodecEbmRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.data_decoder::DataDecoder"*, %"class.std::__1::vector"* dereferenceable(24), i32, i1 zeroext, i64, %"class.gfx::Size"* dereferenceable(8), %"class.base::OnceCallback.193"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_129RunDecodeCallbackOnTaskRunnerEN4base12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS0_19SequencedTaskRunnerEES4_(%"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %class.SkBitmap* dereferenceable(56)) #0 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::SequencedTaskRunner"* %1 to %"class.base::TaskRunner"*
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i32 44) #11
  %8 = call %"struct.base::internal::BindState.203"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE6CreateIS7_JS5_EEEPS8_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback.193"* dereferenceable(8) %0, %class.SkBitmap* dereferenceable(56) %2) #11, !noalias !55
  %9 = getelementptr inbounds %"struct.base::internal::BindState.203", %"struct.base::internal::BindState.203"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %9, %"class.base::internal::BindStateBase"** %10, align 8, !alias.scope !55
  %11 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %6, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #11
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  %13 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe"* %20 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %21) #11
  br label %22

22:                                               ; preds = %3, %14, %19
  ret void
}

declare void @_ZN12data_decoder19DecodeImageIsolatedERKNSt3__16vectorIhNS0_9allocatorIhEEEENS_5mojom10ImageCodecEbmRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.std::__1::vector"* dereferenceable(24), i32, i1 zeroext, i64, %"class.gfx::Size"* dereferenceable(8), %"class.base::OnceCallback.193"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES6_EJS8_SB_EEES7_E7RunOnceEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, %class.SkBitmap* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.193", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %class.SkBitmap*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.193"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %class.SkBitmap*)*, void (%"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %class.SkBitmap*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.193"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %14 = bitcast void ()** %13 to %"class.base::SequencedTaskRunner"**
  %15 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %14, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %14, align 8
  call void %8(%"class.base::OnceCallback.193"* nonnull %3, %"class.base::SequencedTaskRunner"* %15, %class.SkBitmap* dereferenceable(56) %1) #11
  %16 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::SequencedTaskRunner"**
  %6 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #11
  br label %16

16:                                               ; preds = %3, %8, %13
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #11
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState.203"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE6CreateIS7_JS5_EEEPS8_PFvvEOT_DpOT0_(void ()*, %"class.base::OnceCallback.193"* dereferenceable(8), %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_Znwm(i64 96) #12
  %6 = bitcast i8* %5 to %"struct.base::internal::BindState.203"*
  %7 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %7, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.193"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 40
  %14 = bitcast i8* %13 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %14, %class.SkBitmap* dereferenceable(56) %2) #11
  %15 = bitcast i8* %8 to %"class.base::internal::BindStateBase"**
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = icmp eq %"class.base::internal::BindStateBase"* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %21

21:                                               ; preds = %3, %18
  ret %"struct.base::internal::BindState.203"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.193", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.SkBitmap*
  %6 = bitcast %"class.base::OnceCallback.193"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.193"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %2, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)*, void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, %class.SkBitmap* dereferenceable(56) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %5) #11
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #11
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #11
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #11
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #8

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !60
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !60
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !60
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS3_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %class.ImageDecoder*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%class.ImageDecoder*, i32)**
  %22 = load void (%class.ImageDecoder*, i32)*, void (%class.ImageDecoder*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%class.ImageDecoder*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%class.ImageDecoder*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%class.ImageDecoder* %13, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM12ImageDecoderFviEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS3_EEEEEFvS6_iEE7RunOnceEPNS0_13BindStateBaseES6_i(%"class.base::internal::BindStateBase"*, %class.SkBitmap* dereferenceable(56), i32) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %class.ImageDecoder*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%class.ImageDecoder*, %class.SkBitmap*, i32)**
  %23 = load void (%class.ImageDecoder*, %class.SkBitmap*, i32)*, void (%class.ImageDecoder*, %class.SkBitmap*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%class.ImageDecoder*, %class.SkBitmap*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%class.ImageDecoder*, %class.SkBitmap*, i32)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%class.ImageDecoder* %14, %class.SkBitmap* dereferenceable(56) %1, i32 %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEENS3_IFvRK8SkBitmapiEEEiS8_EJS5_SA_iEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %class.SkBitmap* dereferenceable(56)) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.196", align 8
  %4 = alloca %"class.base::OnceCallback.197", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to void (%"class.base::OnceCallback.196"*, %"class.base::OnceCallback.197"*, i32, %class.SkBitmap*)**
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = getelementptr inbounds void ()*, void ()** %7, i64 1
  %9 = getelementptr inbounds void ()*, void ()** %7, i64 2
  %10 = bitcast void ()** %9 to i32*
  %11 = bitcast %"class.base::OnceCallback.196"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = bitcast %"class.base::OnceCallback.197"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = load void (%"class.base::OnceCallback.196"*, %"class.base::OnceCallback.197"*, i32, %class.SkBitmap*)*, void (%"class.base::OnceCallback.196"*, %"class.base::OnceCallback.197"*, i32, %class.SkBitmap*)** %6, align 8
  %14 = bitcast void ()** %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.196"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast void ()** %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback.197"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast void ()** %7 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %20, align 8
  %21 = load i32, i32* %10, align 4
  call void %13(%"class.base::OnceCallback.196"* nonnull %3, %"class.base::OnceCallback.197"* nonnull %4, i32 %21, %class.SkBitmap* dereferenceable(56) %1) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.196", %"class.base::OnceCallback.196"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEENS2_IFvRK8SkBitmapiEEEiS7_EJS4_S9_iEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #11
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__16vectorIhNS3_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS8_11DataDecoderEEJS7_SA_bSC_SK_SN_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector", align 16
  %3 = alloca %"class.base::OnceCallback.193", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::vector"*, i32, i1, %"class.gfx::Size"*, %"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %"class.data_decoder::DataDecoder"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.std::__1::tuple.232"*
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %9 = bitcast void ()** %8 to i32*
  %10 = getelementptr inbounds %"class.std::__1::tuple.232", %"class.std::__1::tuple.232"* %7, i64 0, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds void ()*, void ()** %6, i64 4
  %12 = bitcast void ()** %11 to %"class.gfx::Size"*
  %13 = getelementptr inbounds void ()*, void ()** %6, i64 5
  %14 = getelementptr inbounds void ()*, void ()** %6, i64 7
  %15 = bitcast void ()** %14 to %"class.data_decoder::DataDecoder"**
  %16 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.base::OnceCallback.193"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = load void (%"class.std::__1::vector"*, i32, i1, %"class.gfx::Size"*, %"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %"class.data_decoder::DataDecoder"*)*, void (%"class.std::__1::vector"*, i32, i1, %"class.gfx::Size"*, %"class.base::OnceCallback.193"*, %"class.base::SequencedTaskRunner"*, %"class.data_decoder::DataDecoder"*)** %5, align 8
  %19 = bitcast void ()** %6 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %23 = bitcast void ()** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 16
  %27 = bitcast void ()** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  %28 = load i32, i32* %9, align 4
  %29 = load i8, i8* %10, align 1, !range !60
  %30 = icmp ne i8 %29, 0
  %31 = bitcast void ()** %13 to %"class.base::internal::BindStateBase"**
  %32 = bitcast void ()** %13 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback.193"* %3 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %35 = getelementptr inbounds void ()*, void ()** %6, i64 6
  %36 = bitcast void ()** %35 to %"class.base::SequencedTaskRunner"**
  %37 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %36, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %36, align 8
  %38 = load %"class.data_decoder::DataDecoder"*, %"class.data_decoder::DataDecoder"** %15, align 8
  call void %18(%"class.std::__1::vector"* nonnull %2, i32 %28, i1 zeroext %30, %"class.gfx::Size"* dereferenceable(8) %12, %"class.base::OnceCallback.193"* nonnull %3, %"class.base::SequencedTaskRunner"* %37, %"class.data_decoder::DataDecoder"* %38) #11
  %39 = getelementptr inbounds %"class.base::OnceCallback.193", %"class.base::OnceCallback.193"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #11
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 16
  %42 = icmp eq i8* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = ptrtoint i8* %41 to i64
  store i64 %46, i64* %45, align 8
  call void @_ZdlPv(i8* nonnull %41) #12
  br label %47

47:                                               ; preds = %1, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__16vectorIhNS2_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS7_11DataDecoderEEJS6_S9_bSB_SJ_SM_SO_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::SequencedTaskRunner"**
  %6 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #11
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %18 = bitcast void (%"class.base::internal::BindStateBase"*)** %17 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #11
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_ZdlPv(i8* nonnull %21) #12
  br label %27

27:                                               ; preds = %16, %23
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !60
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !60
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !60
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !60
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !60
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !60
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !60
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !60
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !60
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !60
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !60
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !60
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !60
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIiPN12ImageDecoder12ImageRequestEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIiS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIiPN12ImageDecoder12ImageRequestEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIiS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM12ImageDecoderFviEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM12ImageDecoderFviEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIM12ImageDecoderFviEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIM12ImageDecoderFviEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM12ImageDecoderFvRK8SkBitmapiEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIM12ImageDecoderFvRK8SkBitmapiEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIM12ImageDecoderFvRK8SkBitmapiEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFviEEENS2_IFvRK8SkBitmapiEEEiS7_EJS4_S9_RiEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFviEEENS2_IFvRK8SkBitmapiEEEiS7_EJS4_S9_RiEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFviEEENS1_IFvRK8SkBitmapiEEEiS6_EJS3_S8_RiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFviEEENS1_IFvRK8SkBitmapiEEEiS6_EJS3_S8_RiEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__16vectorIhNS3_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS8_11DataDecoderEEJS7_RSA_RbSE_SJ_SM_SO_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__16vectorIhNS3_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS8_11DataDecoderEEJS7_RSA_RbSE_SJ_SM_SO_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIPFvNSt3__16vectorIhNS1_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS6_11DataDecoderEEJS5_RS8_RbSC_SI_SL_SN_EEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIPFvNSt3__16vectorIhNS1_9allocatorIhEEEEN12data_decoder5mojom10ImageCodecEbRKN3gfx4SizeENS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEEPNS6_11DataDecoderEEJS5_RS8_RbSC_SI_SL_SN_EEENSD_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES4_EJS6_S9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES4_EJS6_S9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES5_EJS7_SA_EEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES4_EJS6_S9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRK8SkBitmapEEE13scoped_refptrINS_19SequencedTaskRunnerEES4_EJS6_S9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRK8SkBitmapEEEJS5_EEEDcOT0_DpOT1_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRK8SkBitmapEEEJS5_EEEDcOT0_DpOT1_"}
!58 = distinct !{!58, !59, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRK8SkBitmapEEEJS4_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!60 = !{i8 0, i8 2}
