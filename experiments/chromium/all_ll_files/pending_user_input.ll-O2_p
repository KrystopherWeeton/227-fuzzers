; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/pending_user_input.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/pending_user_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter" }
%"struct.blink::scheduler::AttributionGroup" = type <{ %"class.blink::WebInputEventAttribution", i8, [7 x i8] }>
%"class.blink::WebInputEventAttribution" = type { i32, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter" = type { i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::WebInputEventAttribution"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES3_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_ = comdat any

$_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN3WTF6VectorIN5blink24WebInputEventAttributionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24WebInputEventAttributionEEEmm = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9scheduler16AttributionGroupENS3_16PendingUserInput7Monitor12EventCounterEEEEEPKcv = private unnamed_addr constant [160 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::scheduler::AttributionGroup, blink::scheduler::PendingUserInput::Monitor::EventCounter>]\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24WebInputEventAttributionEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebInputEventAttribution]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler16PendingUserInput7Monitor9OnEnqueueENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::PendingUserInput::Monitor"*, i32, %"class.blink::WebInputEventAttribution"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::scheduler::AttributionGroup", align 8
  %5 = alloca %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter", align 8
  %6 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %29, label %9

9:                                                ; preds = %3
  %10 = bitcast %"struct.blink::scheduler::AttributionGroup"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %2, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 0, i32 0
  store i32 %7, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 0, i32 1, i32 0
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 1
  store i8 0, i8* %15, align 8
  %16 = bitcast %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0
  %18 = bitcast %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false)
  %19 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES3_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %17, %"struct.blink::scheduler::AttributionGroup"* nonnull dereferenceable(24) %4, %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* nonnull dereferenceable(16) %5) #6
  %20 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  switch i32 %1, label %23 [
    i32 2, label %21
    i32 6, label %21
    i32 29, label %21
    i32 35, label %21
    i32 36, label %21
  ]

21:                                               ; preds = %9, %9, %9, %9, %9
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1, i32 1
  br label %25

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1, i32 0
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i64* [ %22, %21 ], [ %24, %23 ]
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler16PendingUserInput21IsContinuousEventTypeENS_5mojom9EventTypeE(i32) local_unnamed_addr #2 align 2 {
  %2 = add i32 %0, -2
  %3 = icmp ult i32 %2, 35
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = zext i32 %2 to i35
  %6 = lshr i35 -8455716847, %5
  %7 = and i35 %6, 1
  %8 = icmp ne i35 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler16PendingUserInput7Monitor9OnDequeueENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::PendingUserInput::Monitor"*, i32, %"class.blink::WebInputEventAttribution"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::scheduler::AttributionGroup", align 8
  %5 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %112, label %8

8:                                                ; preds = %3
  %9 = bitcast %"struct.blink::scheduler::AttributionGroup"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %2, i64 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 0, i32 0
  store i32 %6, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 0, i32 1, i32 0
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %4, i64 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %15, %"struct.blink::scheduler::AttributionGroup"* nonnull dereferenceable(24) %4) #6
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %16, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1
  switch i32 %1, label %23 [
    i32 2, label %19
    i32 6, label %19
    i32 29, label %19
    i32 35, label %19
    i32 36, label %19
  ]

19:                                               ; preds = %8, %8, %8, %8, %8
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, -1
  store i64 %22, i64* %20, align 8
  br label %29

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter", %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %18, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %23, %19
  %30 = phi i64 [ %28, %23 ], [ %22, %19 ]
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %112

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter", %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %18, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %112

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 0
  %38 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %15, %"struct.blink::scheduler::AttributionGroup"* dereferenceable(24) %37) #6
  %39 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %38, 0
  %40 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 %44
  %46 = icmp eq %"struct.WTF::KeyValuePair"* %45, %39
  br i1 %46, label %112, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 1, i32 0
  %50 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 1
  store i8 1, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  %55 = and i32 %54, 2147483647
  %56 = and i32 %53, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %52, align 8
  %58 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %0, i64 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %58, align 4
  %61 = mul i32 %60, 6
  %62 = load i32, i32* %42, align 8
  %63 = icmp ult i32 %61, %62
  %64 = icmp ugt i32 %62, 8
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %112

66:                                               ; preds = %47
  %67 = lshr i32 %62, 1
  %68 = zext i32 %67 to i64
  %69 = mul nuw nsw i64 %68, 40
  %70 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %69, i8* getelementptr inbounds ([160 x i8], [160 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9scheduler16AttributionGroupENS3_16PendingUserInput7Monitor12EventCounterEEEEEPKcv, i64 0, i64 0)) #6
  %71 = bitcast i8* %70 to %"struct.WTF::KeyValuePair"*
  %72 = icmp eq i32 %67, 0
  br i1 %72, label %110, label %73

73:                                               ; preds = %66
  %74 = and i64 %68, 1
  %75 = icmp eq i32 %67, 1
  br i1 %75, label %99, label %76

76:                                               ; preds = %73
  %77 = sub nsw i64 %68, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %96, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %97, %78 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %79
  %82 = bitcast %"struct.WTF::KeyValuePair"* %81 to i8*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %79, i32 0, i32 0, i32 1, i32 0
  store i64 %50, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %79, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #6
  %88 = or i64 %79, 1
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %88
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i8*
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to i32*
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %88, i32 0, i32 0, i32 1, i32 0
  store i64 %50, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %88, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #6
  %96 = add nuw nsw i64 %79, 2
  %97 = add i64 %80, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %78

99:                                               ; preds = %78, %73
  %100 = phi i64 [ 0, %73 ], [ %96, %78 ]
  %101 = icmp eq i64 %74, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %100
  %104 = bitcast %"struct.WTF::KeyValuePair"* %103 to i8*
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 4
  %107 = bitcast i8* %106 to i32*
  store i32 0, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %100, i32 0, i32 0, i32 1, i32 0
  store i64 %50, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %100, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #6
  br label %110

110:                                              ; preds = %102, %99, %66
  %111 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable"* %15, %"struct.WTF::KeyValuePair"* %71, i32 %67, %"struct.WTF::KeyValuePair"* null) #6
  br label %112

112:                                              ; preds = %29, %32, %36, %47, %110, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9scheduler16PendingUserInput7Monitor4InfoEb(%"class.WTF::Vector"* noalias sret, %"class.blink::scheduler::PendingUserInput::Monitor"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  %8 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::scheduler::PendingUserInput::Monitor", %"class.blink::scheduler::PendingUserInput::Monitor"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  br i1 %10, label %47, label %17

17:                                               ; preds = %3
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %17
  %20 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  br label %21

21:                                               ; preds = %38, %19
  %22 = phi %"struct.WTF::KeyValuePair"* [ %12, %19 ], [ %39, %38 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0, i32 0, i32 1, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %20, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30, %26, %21
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34, %30
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, %16
  br i1 %40, label %47, label %21

41:                                               ; preds = %34, %17
  %42 = phi %"struct.WTF::KeyValuePair"* [ %12, %17 ], [ %22, %34 ]
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %42, %16
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = xor i1 %2, true
  %46 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  br label %48

47:                                               ; preds = %38, %72, %95, %92, %3, %41
  ret void

48:                                               ; preds = %44, %95
  %49 = phi %"struct.WTF::KeyValuePair"* [ %42, %44 ], [ %76, %95 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  %57 = or i1 %56, %45
  br i1 %57, label %72, label %58

58:                                               ; preds = %53, %48
  %59 = load i32, i32* %6, align 4
  %60 = load i32, i32* %5, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %70, label %62, !prof !3

62:                                               ; preds = %58
  %63 = load %"class.blink::WebInputEventAttribution"*, %"class.blink::WebInputEventAttribution"** %4, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %63, i64 %64
  %66 = bitcast %"class.blink::WebInputEventAttribution"* %65 to i8*
  %67 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #6
  %68 = load i32, i32* %6, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %6, align 4
  br label %72

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink24WebInputEventAttributionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"* %0, %"class.blink::WebInputEventAttribution"* dereferenceable(16) %71) #6
  br label %72

72:                                               ; preds = %70, %62, %53
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, %16
  br i1 %74, label %47, label %75

75:                                               ; preds = %72, %92
  %76 = phi %"struct.WTF::KeyValuePair"* [ %93, %92 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 0, i32 1, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %46, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 1
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84, %80, %75
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 1
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88, %84
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 1
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %93, %16
  br i1 %94, label %47, label %75

95:                                               ; preds = %88
  %96 = icmp eq %"struct.WTF::KeyValuePair"* %76, %16
  br i1 %96, label %47, label %48
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES3_S7_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.blink::scheduler::AttributionGroup"* dereferenceable(24), %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1
  %19 = tail call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %18) #6
  %20 = zext i32 %17 to i64
  %21 = tail call i64 @_ZN4base10HashInts64Emm(i64 %20, i64 %19) #6
  %22 = trunc i64 %21 to i32
  %23 = and i32 %14, %22
  %24 = zext i32 %23 to i64
  %25 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %26 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 1
  %28 = xor i32 %22, -1
  %29 = lshr i32 %22, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %70, %10
  %42 = phi i64 [ 0, %10 ], [ %76, %70 ]
  %43 = phi i64 [ %24, %10 ], [ %78, %70 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %74, %70 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 2
  br i1 %48, label %49, label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43, i32 0, i32 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %25, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43, i32 0, i32 1
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %79, label %57

57:                                               ; preds = %41, %49, %53
  %58 = load i32, i32* %16, align 8
  %59 = icmp eq i32 %58, %47
  br i1 %59, label %60, label %70

60:                                               ; preds = %57
  %61 = load i64, i64* %26, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43, i32 0, i32 0, i32 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %61, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = load i8, i8* %27, align 8, !range !2
  %69 = icmp eq i8 %67, %68
  br i1 %69, label %114, label %70

70:                                               ; preds = %57, %60, %65
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %43, i32 0, i32 1
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, %"struct.WTF::KeyValuePair"* %44, %"struct.WTF::KeyValuePair"* %45
  %75 = icmp eq i64 %42, 0
  %76 = select i1 %75, i64 %40, i64 %42
  %77 = add i64 %76, %43
  %78 = and i64 %77, %15
  br label %41

79:                                               ; preds = %53
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %79
  %82 = bitcast %"struct.WTF::KeyValuePair"* %45 to i8*
  br label %96

83:                                               ; preds = %79
  %84 = bitcast %"struct.WTF::KeyValuePair"* %44 to i8*
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %84, i64 4
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 0, i32 1, i32 0
  store i64 %25, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #6
  %90 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, 2147483647
  %93 = and i32 %92, 2147483647
  %94 = and i32 %91, -2147483648
  %95 = or i32 %93, %94
  store i32 %95, i32* %90, align 8
  br label %96

96:                                               ; preds = %81, %83
  %97 = phi i8* [ %82, %81 ], [ %84, %83 ]
  %98 = phi %"struct.WTF::KeyValuePair"* [ %45, %81 ], [ %44, %83 ]
  %99 = bitcast %"struct.blink::scheduler::AttributionGroup"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %99, i64 17, i1 false) #6
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 0, i32 1
  %101 = bitcast %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %100 to i8*
  %102 = bitcast %"struct.blink::scheduler::PendingUserInput::Monitor::EventCounter"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 16, i1 false) #6
  %103 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %96
  %113 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %98)
  br label %114

114:                                              ; preds = %65, %96, %112
  %115 = phi i8 [ 1, %96 ], [ 1, %112 ], [ 0, %65 ]
  %116 = phi %"struct.WTF::KeyValuePair"* [ %98, %96 ], [ %113, %112 ], [ %45, %65 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 40
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([160 x i8], [160 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink9scheduler16AttributionGroupENS3_16PendingUserInput7Monitor12EventCounterEEEEEPKcv, i64 0, i64 0)) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %76, label %38

38:                                               ; preds = %31
  %39 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8, !noalias !4
  %40 = and i64 %33, 1
  %41 = icmp eq i32 %32, 1
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 4
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0, i32 0, i32 1, i32 0
  store i64 %39, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #6
  %54 = or i64 %45, 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8*
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 4
  %59 = bitcast i8* %58 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0, i32 0, i32 1, i32 0
  store i64 %39, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #6
  %62 = add nuw nsw i64 %45, 2
  %63 = add i64 %46, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to i8*
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 4
  %73 = bitcast i8* %72 to i32*
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66, i32 0, i32 0, i32 1, i32 0
  store i64 %39, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #6
  br label %76

76:                                               ; preds = %68, %65, %31
  %77 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #6
  ret %"struct.WTF::KeyValuePair"* %77
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %29

21:                                               ; preds = %4
  %22 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %24 = ptrtoint %"struct.WTF::KeyValuePair"* %23 to i64
  br label %43

25:                                               ; preds = %78
  %26 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %29

29:                                               ; preds = %16, %25
  %30 = phi i64* [ %20, %16 ], [ %26, %25 ]
  %31 = phi i64* [ %18, %16 ], [ %28, %25 ]
  %32 = phi i64 [ %17, %16 ], [ %27, %25 ]
  %33 = phi i64 [ %19, %16 ], [ %79, %25 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %82, %25 ]
  %35 = phi i32 [ 0, %16 ], [ %80, %25 ]
  store atomic i64 %32, i64* %31 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %33, i64* %30, align 8
  store i32 %35, i32* %8, align 8
  %36 = icmp eq i64 %33, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %29
  %38 = inttoptr i64 %33 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #6
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %39

39:                                               ; preds = %29, %37
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, -2147483648
  store i32 %42, i32* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair"* %34

43:                                               ; preds = %21, %78
  %44 = phi i64 [ %24, %21 ], [ %79, %78 ]
  %45 = phi i32 [ %13, %21 ], [ %80, %78 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %23, %21 ], [ %81, %78 ]
  %47 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %82, %78 ]
  %48 = phi i32 [ 0, %21 ], [ %83, %78 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %62

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %49, i32 0, i32 0, i32 1, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %22, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %49, i32 0, i32 1
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %43, %54, %58
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %49, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable"* nonnull %5, %"struct.blink::scheduler::AttributionGroup"* dereferenceable(24) %67) #6
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to i8*
  %71 = bitcast %"struct.WTF::KeyValuePair"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 40, i1 false) #6
  %72 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 %49
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, %3
  %75 = select i1 %74, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %47
  %76 = load i32, i32* %12, align 8
  %77 = ptrtoint %"struct.WTF::KeyValuePair"* %72 to i64
  br label %78

78:                                               ; preds = %62, %58, %66
  %79 = phi i64 [ %44, %62 ], [ %77, %66 ], [ %44, %58 ]
  %80 = phi i32 [ %45, %62 ], [ %76, %66 ], [ %45, %58 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %46, %62 ], [ %72, %66 ], [ %46, %58 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %47, %62 ], [ %75, %66 ], [ %47, %58 ]
  %83 = add i32 %48, 1
  %84 = icmp eq i32 %83, %80
  br i1 %84, label %25, label %43
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable"*, %"struct.blink::scheduler::AttributionGroup"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1
  %12 = tail call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %11) #6
  %13 = zext i32 %10 to i64
  %14 = tail call i64 @_ZN4base10HashInts64Emm(i64 %13, i64 %12) #6
  %15 = trunc i64 %14 to i32
  %16 = and i32 %7, %15
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %19 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 1
  %21 = xor i32 %15, -1
  %22 = lshr i32 %15, 23
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 12
  %25 = xor i32 %24, %23
  %26 = lshr i32 %25, 7
  %27 = xor i32 %26, %25
  %28 = shl i32 %27, 2
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 20
  %31 = xor i32 %30, %29
  %32 = or i32 %31, 1
  %33 = zext i32 %32 to i64
  br label %34

34:                                               ; preds = %68, %2
  %35 = phi i64 [ 0, %2 ], [ %72, %68 ]
  %36 = phi i64 [ 0, %2 ], [ %74, %68 ]
  %37 = phi i64 [ %17, %2 ], [ %76, %68 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37
  %39 = ptrtoint %"struct.WTF::KeyValuePair"* %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %55

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37, i32 0, i32 0, i32 1, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %18, %45
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37, i32 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.WTF::KeyValuePair"* %38 to i64
  %53 = icmp eq i64 %35, 0
  %54 = select i1 %53, i64 %52, i64 %35
  br label %79

55:                                               ; preds = %47, %43, %34
  %56 = load i32, i32* %9, align 8
  %57 = icmp eq i32 %56, %41
  br i1 %57, label %58, label %68

58:                                               ; preds = %55
  %59 = load i64, i64* %19, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37, i32 0, i32 0, i32 1, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37, i32 0, i32 1
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = load i8, i8* %20, align 8, !range !2
  %67 = icmp eq i8 %65, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %63, %58, %55
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %37, i32 0, i32 1
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i64 %35, i64 %39
  %73 = icmp eq i64 %36, 0
  %74 = select i1 %73, i64 %33, i64 %36
  %75 = add i64 %74, %37
  %76 = and i64 %75, %8
  br label %34

77:                                               ; preds = %63
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %38 to i64
  br label %79

79:                                               ; preds = %77, %51
  %80 = phi i64 [ %54, %51 ], [ %78, %77 ]
  %81 = phi i8 [ 0, %51 ], [ 1, %77 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %84
}

declare i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"*) local_unnamed_addr #3

declare i64 @_ZN4base10HashInts64Emm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink9scheduler16AttributionGroupENS_12KeyValuePairIS3_NS2_16PendingUserInput7Monitor12EventCounterEEENS_24KeyValuePairKeyExtractorENS2_20AttributionGroupHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"*, %"struct.blink::scheduler::AttributionGroup"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1
  %14 = tail call i64 @_ZNK2cc9ElementId11GetStableIdEv(%"struct.cc::ElementId"* %13) #6
  %15 = zext i32 %12 to i64
  %16 = tail call i64 @_ZN4base10HashInts64Emm(i64 %15, i64 %14) #6
  %17 = trunc i64 %16 to i32
  %18 = and i32 %9, %17
  %19 = zext i32 %18 to i64
  %20 = load i32, i32* %11, align 8
  %21 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.blink::scheduler::AttributionGroup", %"struct.blink::scheduler::AttributionGroup"* %1, i64 0, i32 1
  %23 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %24 = xor i32 %17, -1
  %25 = lshr i32 %17, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %64, %6
  %38 = phi i64 [ 0, %6 ], [ %66, %64 ]
  %39 = phi i64 [ %19, %6 ], [ %68, %64 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %20, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = load i64, i64* %21, align 8
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %39, i32 0, i32 0, i32 1, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %39, i32 0, i32 1
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = load i8, i8* %22, align 8, !range !2
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %69, label %54

54:                                               ; preds = %49, %44, %37
  %55 = icmp eq i32 %42, 2
  br i1 %55, label %56, label %64

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %39, i32 0, i32 0, i32 1, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %23, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %39, i32 0, i32 1
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %60, %56, %54
  %65 = icmp eq i64 %38, 0
  %66 = select i1 %65, i64 %36, i64 %38
  %67 = add i64 %66, %39
  %68 = and i64 %67, %10
  br label %37

69:                                               ; preds = %60, %49
  %70 = phi %"struct.WTF::KeyValuePair"* [ null, %60 ], [ %40, %49 ]
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %72

72:                                               ; preds = %69, %2
  %73 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %71, %69 ]
  %74 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %70, %69 ]
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %74, null
  %76 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %78
  %80 = select i1 %75, %"struct.WTF::KeyValuePair"* %79, %"struct.WTF::KeyValuePair"* %74
  %81 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %80, 0
  %82 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %81, %"struct.WTF::KeyValuePair"* %79, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %82
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24WebInputEventAttributionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::WebInputEventAttribution"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebInputEventAttribution"*, %"class.blink::WebInputEventAttribution"** %6, align 8
  %8 = icmp ugt %"class.blink::WebInputEventAttribution"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %7, i64 %10
  %12 = icmp ugt %"class.blink::WebInputEventAttribution"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !9

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::WebInputEventAttribution"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24WebInputEventAttributionEEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24WebInputEventAttributionEEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::WebInputEventAttribution"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::WebInputEventAttribution"*, %"class.blink::WebInputEventAttribution"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::WebInputEventAttribution"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::WebInputEventAttribution"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !9

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::WebInputEventAttribution"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::WebInputEventAttribution"* %1 to i64
  %56 = ptrtoint %"class.blink::WebInputEventAttribution"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !9

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::WebInputEventAttribution"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24WebInputEventAttributionEEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24WebInputEventAttributionEEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::WebInputEventAttribution"*, %"class.blink::WebInputEventAttribution"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::WebInputEventAttribution"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::WebInputEventAttribution"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !9

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::WebInputEventAttribution"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::WebInputEventAttribution"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::WebInputEventAttribution"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::WebInputEventAttribution"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::WebInputEventAttribution", %"class.blink::WebInputEventAttribution"* %100, i64 %103
  %105 = bitcast %"class.blink::WebInputEventAttribution"* %104 to i8*
  %106 = bitcast %"class.blink::WebInputEventAttribution"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 16, i1 false) #6
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24WebInputEventAttributionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN3WTF17GenericHashTraitsIN5blink9scheduler16AttributionGroupEE10EmptyValueEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF17GenericHashTraitsIN5blink9scheduler16AttributionGroupEE10EmptyValueEv"}
!7 = distinct !{!7, !8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink9scheduler16AttributionGroupEEENS1_INS3_16PendingUserInput7Monitor12EventCounterEEEE10EmptyValueEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink9scheduler16AttributionGroupEEENS1_INS3_16PendingUserInput7Monitor12EventCounterEEEE10EmptyValueEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
