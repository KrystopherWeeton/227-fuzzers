; ModuleID = '../../third_party/dav1d/libdav1d/src/lr_apply_tmpl.c'
source_filename = "../../third_party/dav1d/libdav1d/src/lr_apply_tmpl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Dav1dFrameContext = type { %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, [7 x %struct.Dav1dThreadPicture], %struct.Dav1dPicture, %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.refmvs_temporal_block*, [7 x %struct.refmvs_temporal_block*], [7 x %struct.Dav1dRef*], %struct.Dav1dRef*, %struct.Dav1dRef*, i8*, i8*, [7 x i32], [7 x [7 x i32]], [7 x i8], %struct.CdfThreadContext, %struct.CdfThreadContext, %struct.Dav1dTileGroup*, i32, i32, [7 x [2 x %struct.ScalableMotionParams]], [2 x i32], [2 x i32], %struct.Dav1dContext*, %struct.Dav1dTileContext*, i32, %struct.Dav1dTileState*, i32, %struct.Dav1dDSPContext*, %struct.anon.38, i32, [3 x i8*], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [3 x [2 x i16]]], [19 x [3 x i8*]], %struct.BlockContext*, i32, %struct.refmvs_frame, [7 x [7 x i8]], i32, %struct.anon.45, %struct.anon.46, %struct.FrameTileThreadData, [8 x i8] }
%struct.Dav1dSequenceHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingPoint], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingParameterInfo] }
%struct.Dav1dSequenceHeaderOperatingPoint = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.Dav1dSequenceHeaderOperatingParameterInfo = type { i32, i32, i32 }
%struct.Dav1dFrameHeader = type { %struct.anon, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dFrameHeaderOperatingPoint], i32, i32, i32, %struct.anon.0, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, %struct.anon.1, %struct.anon.2, %struct.anon.3, %struct.anon.4, i32, %struct.anon.7, %struct.anon.8, %struct.anon.9, i32, i32, i32, i32, [2 x i32], i32, i32, [7 x %struct.Dav1dWarpedMotionParams] }
%struct.anon = type { %struct.Dav1dFilmGrainData, i32, i32 }
%struct.Dav1dFilmGrainData = type { i32, i32, [14 x [2 x i8]], i32, [2 x i32], [2 x [10 x [2 x i8]]], i32, i32, [24 x i8], [2 x [28 x i8]], i64, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32 }
%struct.Dav1dFrameHeaderOperatingPoint = type { i32 }
%struct.anon.0 = type { i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i16], [65 x i16], i32 }
%struct.anon.2 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, i32, i32, i32, %struct.Dav1dSegmentationDataSet, [8 x i32], [8 x i32] }
%struct.Dav1dSegmentationDataSet = type { [8 x %struct.Dav1dSegmentationData], i32, i32 }
%struct.Dav1dSegmentationData = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.4 = type { %struct.anon.5, %struct.anon.6 }
%struct.anon.5 = type { i32, i32 }
%struct.anon.6 = type { i32, i32, i32 }
%struct.anon.7 = type { [2 x i32], i32, i32, i32, i32, %struct.Dav1dLoopfilterModeRefDeltas, i32 }
%struct.Dav1dLoopfilterModeRefDeltas = type { [2 x i32], [8 x i32] }
%struct.anon.8 = type { i32, i32, [8 x i32], [8 x i32] }
%struct.anon.9 = type { [3 x i32], [2 x i32] }
%struct.Dav1dWarpedMotionParams = type { i32, [6 x i32], %union.anon }
%union.anon = type { %struct.anon.10 }
%struct.anon.10 = type { i16, i16, i16, i16 }
%struct.Dav1dPicture = type { %struct.Dav1dSequenceHeader*, %struct.Dav1dFrameHeader*, [3 x i8*], [2 x i64], %struct.Dav1dPictureParameters, %struct.Dav1dDataProps, %struct.Dav1dContentLightLevel*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dITUTT35*, [4 x i64], %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, [4 x i64], %struct.Dav1dRef*, i8* }
%struct.Dav1dPictureParameters = type { i32, i32, i32, i32 }
%struct.Dav1dDataProps = type { i64, i64, i64, i64, %struct.Dav1dUserData }
%struct.Dav1dUserData = type { i8*, %struct.Dav1dRef* }
%struct.Dav1dContentLightLevel = type { i32, i32 }
%struct.Dav1dMasteringDisplay = type { [3 x [2 x i16]], [2 x i16], i32, i32 }
%struct.Dav1dITUTT35 = type { i8, i8, i64, i8* }
%struct.Dav1dThreadPicture = type { %struct.Dav1dPicture, i32, i32, %struct.thread_data*, i32* }
%struct.thread_data = type { i64, %union.pthread_cond_t, %union.pthread_mutex_t, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.11, %union.anon.13, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.11 = type { i64 }
%union.anon.13 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.refmvs_temporal_block = type { %union.mv, i8 }
%union.mv = type { i32 }
%struct.Dav1dRef = type { i8*, i8*, i32, i32, void (i8*, i8*)*, i8* }
%struct.CdfThreadContext = type { %struct.Dav1dRef*, %union.anon.16, %struct.thread_data*, i32* }
%union.anon.16 = type { %struct.CdfContext* }
%struct.CdfContext = type { %struct.CdfModeContext, [5 x [5 x [16 x i16]]], %struct.CdfCoefContext, %struct.CdfMvContext, %struct.CdfMvContext }
%struct.CdfModeContext = type { [4 x [16 x i16]], [2 x [13 x [16 x i16]]], [9 x [16 x i16]], [5 x [4 x [16 x i16]]], [6 x [16 x i16]], [2 x [16 x i16]], [16 x i16], [2 x [13 x [8 x i16]]], [3 x [13 x [8 x i16]]], [8 x i16], [8 x [8 x i16]], [8 x i16], [8 x [8 x i16]], [3 x [8 x i16]], [2 x [7 x [8 x i16]]], [2 x [7 x [5 x [8 x i16]]]], [2 x [8 x [4 x i16]]], [4 x [3 x [4 x i16]]], [22 x [4 x i16]], [4 x i16], [5 x [4 x i16]], [4 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [7 x [2 x i16]], [7 x [2 x i16]], [4 x [2 x i16]], [22 x [2 x i16]], [6 x [2 x i16]], [2 x [2 x i16]], [6 x [2 x i16]], [3 x [2 x i16]], [4 x [2 x i16]], [5 x [2 x i16]], [5 x [2 x i16]], [6 x [2 x i16]], [6 x [2 x i16]], [9 x [2 x i16]], [6 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [2 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [7 x [3 x [2 x i16]]], [3 x [2 x i16]], [3 x [2 x i16]], [3 x [2 x i16]], [22 x [2 x i16]], [7 x [3 x [2 x i16]]], [2 x [2 x i16]], [2 x i16], [8 x i8] }
%struct.CdfCoefContext = type { [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [16 x i16]]], [2 x [16 x i16]], [2 x [16 x i16]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [41 x [4 x i16]]]], [4 x [2 x [21 x [4 x i16]]]], [5 x [2 x [11 x [2 x i16]]]], [5 x [13 x [2 x i16]]], [2 x [3 x [2 x i16]]], [28 x i8] }
%struct.CdfMvContext = type { [2 x %struct.CdfMvComponent], [4 x i16], [24 x i8] }
%struct.CdfMvComponent = type { [16 x i16], [2 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [2 x i16], [10 x [2 x i16]], [2 x i16], [16 x i8] }
%struct.Dav1dTileGroup = type { %struct.Dav1dData, i32, i32 }
%struct.Dav1dData = type { i8*, i64, %struct.Dav1dRef*, %struct.Dav1dDataProps }
%struct.ScalableMotionParams = type { i32, i32 }
%struct.Dav1dContext = type { %struct.Dav1dFrameContext*, i32, %struct.Dav1dPostFilterContext*, i32, %struct.Dav1dTileGroup*, i32, i32, i32, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, %struct.Dav1dRef*, %struct.Dav1dContentLightLevel*, %struct.Dav1dRef*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dRef*, %struct.Dav1dITUTT35*, %struct.Dav1dData, %struct.Dav1dPicture, i32, i32*, %struct.anon.17, %struct.PostFilterThreadData, %struct.Dav1dMemPool*, %struct.Dav1dMemPool*, [8 x %struct.anon.18], %struct.Dav1dMemPool*, [8 x %struct.CdfThreadContext], [3 x %struct.Dav1dDSPContext], %struct.anon.20, %struct.Dav1dPicAllocator, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Dav1dLogger, %struct.Dav1dMemPool* }
%struct.Dav1dPostFilterContext = type { %struct.Dav1dContext*, %struct.thread_data, i32, i32 }
%struct.anon.17 = type { %struct.Dav1dThreadPicture*, i32 }
%struct.PostFilterThreadData = type { %union.pthread_mutex_t, %union.pthread_cond_t, %struct.Dav1dTask*, i32, i32 }
%struct.Dav1dTask = type opaque
%struct.anon.18 = type { %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.Dav1dRef*, [7 x i32] }
%struct.Dav1dDSPContext = type { %struct.Dav1dFilmGrainDSPContext, %struct.Dav1dIntraPredDSPContext, %struct.Dav1dMCDSPContext, %struct.Dav1dInvTxfmDSPContext, %struct.Dav1dLoopFilterDSPContext, %struct.Dav1dCdefDSPContext, %struct.Dav1dLoopRestorationDSPContext }
%struct.Dav1dFilmGrainDSPContext = type { void ([82 x i8]*, %struct.Dav1dFilmGrainData*)*, [3 x void ([82 x i8]*, [82 x i8]*, %struct.Dav1dFilmGrainData*, i64)*], void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i64, i8*, [82 x i8]*, i32, i32)*, [3 x void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i32, i8*, [82 x i8]*, i32, i32, i8*, i64, i32, i32)*] }
%struct.Dav1dIntraPredDSPContext = type { [14 x void (i8*, i64, i8*, i32, i32, i32, i32, i32)*], [3 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [6 x void (i8*, i64, i8*, i32, i32, i16*, i32)*], void (i8*, i64, i16*, i8*, i32, i32)* }
%struct.Dav1dMCDSPContext = type { [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32)*], [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32, i32, i32)*], void (i8*, i64, i16*, i16*, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i8*)*, [3 x void (i8*, i64, i16*, i16*, i32, i32, i8*, i32)*], void (i8*, i64, i8*, i32, i32, i8*)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i64, i16*, i32, i32)*, void (i16*, i64, i8*, i64, i16*, i32, i32)*, void (i64, i64, i64, i64, i64, i64, i8*, i64, i8*, i64)*, void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32)* }
%struct.Dav1dInvTxfmDSPContext = type { [19 x [17 x void (i8*, i64, i16*, i32)*]] }
%struct.Dav1dLoopFilterDSPContext = type { [2 x [2 x void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*]] }
%struct.Av1FilterLUT = type { [64 x i8], [64 x i8], [2 x i64] }
%struct.Dav1dCdefDSPContext = type { i32 (i8*, i64, i32*)*, [3 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*] }
%struct.Dav1dLoopRestorationDSPContext = type { [2 x void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*], [3 x void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*] }
%union.LooprestorationParams = type { %struct.anon.19, [20 x i8] }
%struct.anon.19 = type { i32, i32, i16, i16 }
%struct.anon.20 = type { [2 x %struct.EdgeNode*], [85 x %struct.EdgeBranch], [21 x %struct.EdgeBranch], [256 x %struct.EdgeTip], [64 x %struct.EdgeTip] }
%struct.EdgeNode = type { i32, [2 x i32], [2 x i32] }
%struct.EdgeBranch = type { %struct.EdgeNode, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i32], [4 x i32], [4 x %struct.EdgeNode*] }
%struct.EdgeTip = type { %struct.EdgeNode, [4 x i32] }
%struct.Dav1dPicAllocator = type { i8*, i32 (%struct.Dav1dPicture*, i8*)*, void (%struct.Dav1dPicture*, i8*)* }
%struct.Dav1dLogger = type { i8*, void (i8*, i8*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.Dav1dMemPool = type { %union.pthread_mutex_t, %struct.Dav1dMemPoolBuffer*, i32, i32 }
%struct.Dav1dMemPoolBuffer = type { i8*, %struct.Dav1dMemPoolBuffer* }
%struct.Dav1dTileContext = type { %struct.Dav1dFrameContext*, %struct.Dav1dTileState*, i32, i32, %struct.BlockContext, %struct.BlockContext*, [16 x i8], %union.anon.24, [2 x [32 x [3 x [8 x i16]]]], [2 x [32 x i8]], [1024 x i8], %struct.refmvs_tile, [24 x i8], %union.anon.26, %struct.Dav1dWarpedMotionParams, %struct.Av1Filter*, i8*, i32, %struct.anon.37, [8 x i8] }
%struct.BlockContext = type { [32 x i8], [32 x i8], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [2 x [32 x i8]], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [16 x i8], [32 x i8], [32 x i8] }
%union.anon.24 = type { [1024 x i32] }
%struct.refmvs_tile = type { %struct.refmvs_frame*, [37 x %struct.refmvs_block*], %struct.refmvs_temporal_block*, %struct.anon.25, %struct.anon.25 }
%struct.refmvs_block = type { %union.refmvs_mvpair, %union.refmvs_refpair, i8, i8 }
%union.refmvs_mvpair = type { i64 }
%union.refmvs_refpair = type { i16 }
%struct.anon.25 = type { i32, i32 }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { %union.anon.28, %union.anon.30 }
%union.anon.28 = type { %struct.anon.29 }
%struct.anon.29 = type { [2 x [16384 x i16]], [16384 x i8] }
%union.anon.30 = type { [84160 x i16] }
%struct.Av1Filter = type { [2 x [32 x [3 x [2 x i16]]]], [2 x [32 x [2 x [2 x i16]]]], [4 x i8], [16 x [2 x i16]] }
%struct.anon.37 = type { %struct.thread_data, %struct.FrameTileThreadData*, i32 }
%struct.Dav1dTileState = type { %struct.CdfContext, %struct.MsacContext, %struct.anon.21, i32, %struct.anon.22, %struct.anon.23, [8 x [3 x [2 x i16]]], [3 x [2 x i16]]*, i32, [4 x i8], [8 x [4 x [8 x [2 x i8]]]], [4 x [8 x [2 x i8]]]*, [3 x %struct.Av1RestorationUnit*], [24 x i8] }
%struct.MsacContext = type { i8*, i8*, i64, i32, i32, i32, i32 (%struct.MsacContext*, i16*, i64)* }
%struct.anon.21 = type { i32, i32, i32, i32, i32, i32 }
%struct.anon.22 = type { %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.anon.23 = type { i8*, i16* }
%struct.Av1RestorationUnit = type { i8, [3 x i8], [3 x i8], i8, [2 x i8] }
%struct.anon.38 = type { void (%struct.Dav1dTileContext*, i32, i32, %struct.Av1Block*)*, i32 (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dTileContext*)*, void (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)* }
%struct.Av1Block = type { i8, i8, i8, i8, i8, i8, i8, i8, %union.anon.39 }
%union.anon.39 = type { %struct.anon.41 }
%struct.anon.41 = type { %union.anon.42, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i16 }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { [2 x %union.mv], i8, i8, i8 }
%struct.refmvs_frame = type { %struct.Dav1dFrameHeader*, i32, i32, i32, i32, i32, i32, [7 x i8], [7 x i8], [7 x i8], [3 x i8], [3 x i32], [3 x [7 x i32]], i32, %struct.refmvs_temporal_block*, %struct.refmvs_temporal_block**, %struct.refmvs_temporal_block*, i64, %struct.refmvs_block*, i64, i32, i32 }
%struct.anon.45 = type { %struct.thread_data, i32, i32, %struct.Av1Block*, %struct.CodedBlockInfo*, [3 x [8 x i16]]*, i8*, i16*, i32, i32, i32, i32* }
%struct.CodedBlockInfo = type { [3 x i16], [3 x i8] }
%struct.anon.46 = type { [4 x i8]*, %struct.Av1Filter*, %struct.Av1Restoration*, i32, i32, i32, [2 x i32], i32, i32, [12 x i8], %struct.Av1FilterLUT, i32, [8 x [4 x [8 x [2 x i8]]]], [2 x i8*], i8*, [2 x [3 x i8*]], [3 x i8*], i32, [3 x i8*], [3 x i8*], %struct.Av1Filter*, %struct.Av1Filter*, i32, %struct.anon.47, [8 x i8] }
%struct.Av1Restoration = type { [3 x [4 x %struct.Av1RestorationUnit]] }
%struct.anon.47 = type { %union.pthread_cond_t, %struct.PostFilterThreadData*, %struct.Dav1dTask*, i32, i32, i32, i32 }
%struct.FrameTileThreadData = type { i64, %union.pthread_mutex_t, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32, [2 x i32]*, i32, [2 x i32], [65 x i16], i32 }

@dav1d_sgr_params = external local_unnamed_addr constant [16 x [2 x i16]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_lr_copy_lpf_8bpc(%struct.Dav1dFrameContext* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 26
  %5 = load %struct.Dav1dContext*, %struct.Dav1dContext** %4, align 16
  %6 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, 1
  %9 = zext i1 %8 to i32
  %10 = icmp ne i32 %2, 0
  %11 = zext i1 %10 to i32
  %12 = shl nuw nsw i32 %11, 3
  %13 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 31
  %16 = and i32 %15, -32
  %17 = sext i32 %16 to i64
  %18 = select i1 %8, i32 %2, i32 0
  %19 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %20 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %19, align 8
  %21 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %20, i64 0, i32 30
  %22 = load i32, i32* %21, align 4
  %23 = shl i32 4, %22
  %24 = mul nsw i32 %23, %18
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %25, %17
  %27 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 16, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  %30 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 16, i64 2
  %31 = load i8*, i8** %30, align 16
  %32 = getelementptr inbounds i8, i8* %31, i64 %26
  %33 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 22
  %34 = load i32, i32* %33, align 16
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 0
  %39 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 16, i64 0
  %40 = load i8*, i8** %39, align 16
  %41 = getelementptr inbounds i8, i8* %40, i64 %26
  %42 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 4, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 38
  %45 = load i32, i32* %44, align 8
  %46 = shl i32 %45, 2
  %47 = add nsw i32 %2, 1
  %48 = add nsw i32 %22, 6
  %49 = shl i32 %47, %48
  %50 = add nsw i32 %43, -1
  %51 = icmp slt i32 %49, %50
  %52 = select i1 %51, i32 %49, i32 %50
  %53 = shl i32 %2, %48
  %54 = sub nsw i32 %53, %12
  %55 = load i8*, i8** %1, align 8
  %56 = zext i32 %12 to i64
  %57 = load i64, i64* %38, align 8
  %58 = mul i64 %57, %56
  %59 = sub i64 0, %58
  %60 = getelementptr inbounds i8, i8* %55, i64 %59
  tail call fastcc void @backup_lpf(%struct.Dav1dFrameContext* %0, i8* %41, i64 %17, i8* %60, i64 %57, i32 0, i32 %22, i32 %54, i32 %52, i32 %46, i32 %43, i32 0, i32 %9)
  br label %61

61:                                               ; preds = %3, %37
  %62 = and i32 %34, 6
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %118, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 1
  %68 = zext i1 %67 to i32
  %69 = icmp ne i32 %66, 3
  %70 = zext i1 %69 to i32
  %71 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 4, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, %68
  %74 = ashr i32 %73, %68
  %75 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 38
  %76 = load i32, i32* %75, align 8
  %77 = select i1 %69, i32 1, i32 2
  %78 = shl i32 %76, %77
  %79 = add nsw i32 %2, 1
  %80 = select i1 %67, i32 5, i32 6
  %81 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %19, align 8
  %82 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %81, i64 0, i32 30
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %83, %80
  %85 = shl i32 %79, %84
  %86 = add nsw i32 %74, -1
  %87 = icmp slt i32 %85, %86
  %88 = select i1 %87, i32 %85, i32 %86
  %89 = lshr i32 %12, %68
  %90 = shl i32 %2, %84
  %91 = sub nsw i32 %90, %89
  %92 = and i32 %34, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %103, label %94

94:                                               ; preds = %64
  %95 = getelementptr inbounds i8*, i8** %1, i64 1
  %96 = load i8*, i8** %95, align 8
  %97 = zext i32 %89 to i64
  %98 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = mul i64 %99, %97
  %101 = sub i64 0, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  tail call fastcc void @backup_lpf(%struct.Dav1dFrameContext* %0, i8* %29, i64 %17, i8* %102, i64 %99, i32 %68, i32 %83, i32 %91, i32 %88, i32 %78, i32 %74, i32 %70, i32 %9)
  br label %103

103:                                              ; preds = %64, %94
  %104 = and i32 %34, 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %118, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds i8*, i8** %1, i64 2
  %108 = load i8*, i8** %107, align 8
  %109 = zext i32 %89 to i64
  %110 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 1
  %111 = load i64, i64* %110, align 8
  %112 = mul i64 %111, %109
  %113 = sub i64 0, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  %115 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %19, align 8
  %116 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %115, i64 0, i32 30
  %117 = load i32, i32* %116, align 4
  tail call fastcc void @backup_lpf(%struct.Dav1dFrameContext* %0, i8* %32, i64 %17, i8* %114, i64 %111, i32 %68, i32 %117, i32 %91, i32 %88, i32 %78, i32 %74, i32 %70, i32 %9)
  br label %118

118:                                              ; preds = %106, %103, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @backup_lpf(%struct.Dav1dFrameContext* nocapture readonly, i8*, i64, i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %14 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 3
  %15 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %14, align 8
  %16 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %15, i64 0, i32 24, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %15, i64 0, i32 2, i64 1
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %11
  %23 = ashr i32 %22, %11
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i32 [ %23, %19 ], [ %9, %13 ]
  %26 = icmp ne i32 %7, 0
  %27 = xor i1 %26, true
  %28 = zext i1 %27 to i32
  %29 = shl nuw nsw i32 %28, 3
  %30 = sub nuw nsw i32 64, %29
  %31 = lshr i32 %30, %5
  %32 = add nsw i32 %31, -2
  %33 = sext i32 %32 to i64
  %34 = mul nsw i64 %33, %4
  %35 = getelementptr inbounds i8, i8* %3, i64 %34
  %36 = icmp eq i32 %12, 0
  br i1 %36, label %37, label %66

37:                                               ; preds = %24
  br i1 %26, label %38, label %62

38:                                               ; preds = %37
  %39 = shl i32 4, %6
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %40, %2
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = sext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %42, i64 %43, i1 false)
  %44 = getelementptr inbounds i8, i8* %1, i64 %2
  %45 = add nsw i32 %39, 1
  %46 = sext i32 %45 to i64
  %47 = mul nsw i64 %46, %2
  %48 = getelementptr inbounds i8, i8* %1, i64 %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %48, i64 %43, i1 false)
  %49 = shl nsw i64 %2, 1
  %50 = getelementptr inbounds i8, i8* %1, i64 %49
  %51 = add nsw i32 %39, 2
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %52, %2
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %54, i64 %43, i1 false)
  %55 = mul nsw i64 %2, 3
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  %57 = add nsw i32 %39, 3
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %58, %2
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %60, i64 %43, i1 false)
  %61 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %14, align 8
  br label %62

62:                                               ; preds = %38, %37
  %63 = phi %struct.Dav1dFrameHeader* [ %61, %38 ], [ %15, %37 ]
  %64 = shl nsw i64 %2, 2
  %65 = getelementptr inbounds i8, i8* %1, i64 %64
  br label %66

66:                                               ; preds = %24, %62
  %67 = phi %struct.Dav1dFrameHeader* [ %15, %24 ], [ %63, %62 ]
  %68 = phi i8* [ %1, %24 ], [ %65, %62 ]
  %69 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %67, i64 0, i32 2, i64 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %67, i64 0, i32 2, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %70, %72
  %74 = add nsw i32 %31, %7
  %75 = icmp sgt i32 %74, %8
  br i1 %73, label %87, label %76

76:                                               ; preds = %66
  br i1 %75, label %137, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %79 = sext i32 %11 to i64
  %80 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 24, i64 %79
  %81 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 25, i64 %79
  %82 = lshr i32 64, %5
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %83, %4
  %85 = sub nsw i64 0, %2
  %86 = sext i32 %25 to i64
  br label %95

87:                                               ; preds = %66
  br i1 %75, label %137, label %88

88:                                               ; preds = %87
  %89 = sub nsw i64 0, %2
  %90 = sext i32 %9 to i64
  %91 = lshr i32 64, %5
  %92 = add nsw i32 %91, -4
  %93 = sext i32 %92 to i64
  %94 = mul nsw i64 %93, %4
  br label %118

95:                                               ; preds = %77, %114
  %96 = phi i32 [ %74, %77 ], [ %116, %114 ]
  %97 = phi i8* [ %68, %77 ], [ %115, %114 ]
  %98 = phi i8* [ %35, %77 ], [ %107, %114 ]
  %99 = add nsw i32 %96, 1
  %100 = icmp eq i32 %99, %10
  %101 = select i1 %100, i32 3, i32 4
  %102 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %78, align 8
  %103 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %102, i64 0, i32 2, i32 14
  %104 = load void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32)*, void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32)** %103, align 8
  %105 = load i32, i32* %80, align 4
  %106 = load i32, i32* %81, align 4
  tail call void %104(i8* %97, i64 %2, i8* %98, i64 %4, i32 %25, i32 %101, i32 %9, i32 %105, i32 %106) #2
  %107 = getelementptr inbounds i8, i8* %98, i64 %84
  %108 = zext i32 %101 to i64
  %109 = mul nsw i64 %108, %2
  %110 = getelementptr inbounds i8, i8* %97, i64 %109
  br i1 %100, label %111, label %114

111:                                              ; preds = %95
  %112 = getelementptr inbounds i8, i8* %110, i64 %85
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %112, i64 %86, i1 false)
  %113 = getelementptr inbounds i8, i8* %110, i64 %2
  br label %114

114:                                              ; preds = %111, %95
  %115 = phi i8* [ %113, %111 ], [ %110, %95 ]
  %116 = add nsw i32 %82, %96
  %117 = icmp sgt i32 %116, %8
  br i1 %117, label %137, label %95

118:                                              ; preds = %88, %118
  %119 = phi i32 [ %74, %88 ], [ %135, %118 ]
  %120 = phi i8* [ %68, %88 ], [ %132, %118 ]
  %121 = phi i8* [ %35, %88 ], [ %134, %118 ]
  %122 = add nsw i32 %119, 1
  %123 = icmp eq i32 %122, %10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* align 1 %121, i64 %90, i1 false)
  %124 = getelementptr inbounds i8, i8* %120, i64 %2
  %125 = getelementptr inbounds i8, i8* %121, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* align 1 %125, i64 %90, i1 false)
  %126 = getelementptr inbounds i8, i8* %124, i64 %2
  %127 = getelementptr inbounds i8, i8* %125, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %126, i8* align 1 %127, i64 %90, i1 false)
  %128 = getelementptr inbounds i8, i8* %126, i64 %2
  %129 = getelementptr inbounds i8, i8* %127, i64 %4
  %130 = getelementptr inbounds i8, i8* %128, i64 %89
  %131 = select i1 %123, i8* %130, i8* %129
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %131, i64 %90, i1 false)
  %132 = getelementptr inbounds i8, i8* %128, i64 %2
  %133 = getelementptr inbounds i8, i8* %129, i64 %4
  %134 = getelementptr inbounds i8, i8* %133, i64 %94
  %135 = add nsw i32 %91, %119
  %136 = icmp sgt i32 %135, %8
  br i1 %136, label %137, label %118

137:                                              ; preds = %114, %118, %76, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_lr_sbrow_8bpc(%struct.Dav1dFrameContext* nocapture readonly, i8** nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = icmp ne i32 %2, 0
  %5 = zext i1 %4 to i32
  %6 = shl nuw nsw i32 %5, 3
  %7 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 22
  %8 = load i32, i32* %7, align 16
  %9 = add nsw i32 %2, 1
  %10 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 42
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %9, %11
  %13 = and i32 %8, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 3, i64 0
  %17 = zext i1 %12 to i32
  %18 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %23 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %22, align 8
  %24 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %23, i64 0, i32 30
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 6
  %27 = shl i32 %9, %26
  %28 = shl nuw nsw i32 %17, 3
  %29 = sub nsw i32 %27, %28
  %30 = icmp slt i32 %29, %19
  %31 = select i1 %30, i32 %29, i32 %19
  %32 = shl i32 %2, %26
  %33 = sub nsw i32 %32, %6
  %34 = load i8*, i8** %1, align 8
  %35 = zext i32 %6 to i64
  %36 = load i64, i64* %16, align 8
  %37 = mul i64 %36, %35
  %38 = sub i64 0, %37
  %39 = getelementptr inbounds i8, i8* %34, i64 %38
  tail call fastcc void @lr_sbrow(%struct.Dav1dFrameContext* %0, i8* %39, i32 %33, i32 %21, i32 %19, i32 %31, i32 0)
  br label %40

40:                                               ; preds = %3, %15
  %41 = and i32 %8, 6
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %96, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  %47 = zext i1 %46 to i32
  %48 = icmp ne i32 %45, 3
  %49 = zext i1 %48 to i32
  %50 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %47
  %53 = ashr i32 %52, %47
  %54 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, %49
  %57 = ashr i32 %56, %49
  %58 = select i1 %46, i32 5, i32 6
  %59 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %60 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %59, align 8
  %61 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %60, i64 0, i32 30
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, %58
  %64 = shl i32 %9, %63
  %65 = lshr i32 8, %47
  %66 = select i1 %12, i32 %65, i32 0
  %67 = sub nsw i32 %64, %66
  %68 = icmp slt i32 %67, %53
  %69 = select i1 %68, i32 %67, i32 %53
  %70 = lshr i32 %6, %47
  %71 = shl i32 %2, %63
  %72 = sub nsw i32 %71, %70
  %73 = and i32 %8, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %43
  %76 = getelementptr inbounds i8*, i8** %1, i64 1
  %77 = load i8*, i8** %76, align 8
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 3, i64 1
  %80 = load i64, i64* %79, align 8
  %81 = mul i64 %80, %78
  %82 = sub i64 0, %81
  %83 = getelementptr inbounds i8, i8* %77, i64 %82
  tail call fastcc void @lr_sbrow(%struct.Dav1dFrameContext* %0, i8* %83, i32 %72, i32 %57, i32 %53, i32 %69, i32 1)
  br label %84

84:                                               ; preds = %43, %75
  %85 = and i32 %8, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds i8*, i8** %1, i64 2
  %89 = load i8*, i8** %88, align 8
  %90 = zext i32 %70 to i64
  %91 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 3, i64 1
  %92 = load i64, i64* %91, align 8
  %93 = mul i64 %92, %90
  %94 = sub i64 0, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  tail call fastcc void @lr_sbrow(%struct.Dav1dFrameContext* %0, i8* %95, i32 %72, i32 %57, i32 %53, i32 %69, i32 2)
  br label %96

96:                                               ; preds = %87, %84, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @lr_sbrow(%struct.Dav1dFrameContext* nocapture readonly, i8*, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %8 = alloca [2 x [136 x [4 x i8]]], align 16
  %9 = alloca [2 x %struct.Av1RestorationUnit*], align 16
  %10 = icmp ne i32 %6, 0
  %11 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  %14 = and i1 %10, %13
  %15 = zext i1 %14 to i32
  %16 = icmp ne i32 %12, 3
  %17 = and i1 %10, %16
  %18 = zext i1 %10 to i64
  %19 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 3, i64 %18
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 3
  %22 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %21, align 8
  %23 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %22, i64 0, i32 41, i32 1, i64 %18
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 1, %24
  %26 = ashr i32 %25, 1
  %27 = lshr i32 8, %15
  %28 = icmp eq i32 %2, 0
  %29 = select i1 %28, i32 0, i32 %27
  %30 = add nsw i32 %29, %2
  %31 = select i1 %17, i32 6, i32 7
  %32 = getelementptr inbounds [2 x [136 x [4 x i8]]], [2 x [136 x [4 x i8]]]* %8, i64 0, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1088, i8* nonnull %32) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 1088, i1 false)
  %33 = bitcast [2 x %struct.Av1RestorationUnit*]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #2
  %34 = getelementptr inbounds [2 x %struct.Av1RestorationUnit*], [2 x %struct.Av1RestorationUnit*]* %9, i64 0, i64 0
  %35 = icmp sgt i32 %2, 0
  %36 = select i1 %35, i32 6, i32 2
  %37 = sub i32 0, %25
  %38 = and i32 %30, %37
  %39 = icmp eq i32 %38, 0
  %40 = bitcast [2 x %struct.Av1RestorationUnit*]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -86, i64 16, i1 false)
  br i1 %39, label %46, label %41

41:                                               ; preds = %7
  %42 = add nsw i32 %38, %26
  %43 = icmp sgt i32 %42, %4
  %44 = select i1 %43, i32 %25, i32 0
  %45 = sub nsw i32 %38, %44
  br label %46

46:                                               ; preds = %41, %7
  %47 = phi i32 [ 0, %7 ], [ %45, %41 ]
  %48 = shl i32 %47, %15
  %49 = ashr i32 %48, 7
  %50 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 45
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %49, %51
  %53 = lshr i32 %48, 5
  %54 = and i32 %53, 2
  %55 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 2
  %56 = load %struct.Av1Restoration*, %struct.Av1Restoration** %55, align 16
  %57 = sext i32 %52 to i64
  %58 = sext i32 %6 to i64
  %59 = zext i32 %54 to i64
  %60 = getelementptr inbounds %struct.Av1Restoration, %struct.Av1Restoration* %56, i64 %57, i32 0, i64 %58, i64 %59
  store %struct.Av1RestorationUnit* %60, %struct.Av1RestorationUnit** %34, align 16
  %61 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %60, i64 0, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp ne i8 %62, 0
  %64 = add i32 %25, %26
  %65 = icmp sgt i32 %64, %3
  br i1 %65, label %184, label %66

66:                                               ; preds = %46
  %67 = add nsw i32 %31, -1
  %68 = sext i32 %25 to i64
  %69 = sub nsw i32 %5, %2
  %70 = icmp slt i32 %69, 1
  %71 = sub i32 %5, %2
  %72 = xor i32 %2, -1
  %73 = add i32 %72, %5
  %74 = and i32 %71, 7
  %75 = icmp eq i32 %74, 0
  %76 = icmp ult i32 %73, 7
  br label %77

77:                                               ; preds = %182, %66
  %78 = phi %struct.Av1Restoration* [ %56, %66 ], [ %183, %182 ]
  %79 = phi i8* [ %1, %66 ], [ %176, %182 ]
  %80 = phi i32 [ 0, %66 ], [ %178, %182 ]
  %81 = phi i32 [ 0, %66 ], [ %84, %182 ]
  %82 = phi i1 [ %63, %66 ], [ %98, %182 ]
  %83 = phi i32 [ %36, %66 ], [ %177, %182 ]
  %84 = add nsw i32 %81, %25
  %85 = lshr i32 %84, %67
  %86 = and i32 %85, 1
  %87 = or i32 %86, %54
  %88 = ashr i32 %84, %31
  %89 = add nsw i32 %88, %52
  %90 = sext i32 %89 to i64
  %91 = zext i32 %87 to i64
  %92 = getelementptr inbounds %struct.Av1Restoration, %struct.Av1Restoration* %78, i64 %90, i32 0, i64 %58, i64 %91
  %93 = icmp eq i32 %80, 0
  %94 = zext i1 %93 to i64
  %95 = getelementptr inbounds [2 x %struct.Av1RestorationUnit*], [2 x %struct.Av1RestorationUnit*]* %9, i64 0, i64 %94
  store %struct.Av1RestorationUnit* %92, %struct.Av1RestorationUnit** %95, align 8
  %96 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %92, i64 0, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp ne i8 %97, 0
  %99 = xor i1 %98, true
  %100 = or i1 %70, %99
  br i1 %100, label %169, label %101

101:                                              ; preds = %77
  %102 = getelementptr inbounds i8, i8* %79, i64 -4
  %103 = getelementptr inbounds i8, i8* %102, i64 %68
  %104 = sext i32 %80 to i64
  %105 = getelementptr inbounds [2 x [136 x [4 x i8]]], [2 x [136 x [4 x i8]]]* %8, i64 0, i64 %104, i64 0
  br i1 %75, label %119, label %106

106:                                              ; preds = %101, %106
  %107 = phi i32 [ %114, %106 ], [ %69, %101 ]
  %108 = phi [4 x i8]* [ %115, %106 ], [ %105, %101 ]
  %109 = phi i8* [ %116, %106 ], [ %103, %101 ]
  %110 = phi i32 [ %117, %106 ], [ %74, %101 ]
  %111 = bitcast i8* %109 to i32*
  %112 = bitcast [4 x i8]* %108 to i32*
  %113 = load i32, i32* %111, align 1
  store i32 %113, i32* %112, align 1
  %114 = add nsw i32 %107, -1
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* %108, i64 1
  %116 = getelementptr inbounds i8, i8* %109, i64 %20
  %117 = add i32 %110, -1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %106, !llvm.loop !2

119:                                              ; preds = %106, %101
  %120 = phi i32 [ %69, %101 ], [ %114, %106 ]
  %121 = phi [4 x i8]* [ %105, %101 ], [ %115, %106 ]
  %122 = phi i8* [ %103, %101 ], [ %116, %106 ]
  br i1 %76, label %169, label %123

123:                                              ; preds = %119, %123
  %124 = phi i32 [ %165, %123 ], [ %120, %119 ]
  %125 = phi [4 x i8]* [ %166, %123 ], [ %121, %119 ]
  %126 = phi i8* [ %167, %123 ], [ %122, %119 ]
  %127 = bitcast i8* %126 to i32*
  %128 = bitcast [4 x i8]* %125 to i32*
  %129 = load i32, i32* %127, align 1
  store i32 %129, i32* %128, align 1
  %130 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 1
  %131 = getelementptr inbounds i8, i8* %126, i64 %20
  %132 = bitcast i8* %131 to i32*
  %133 = bitcast [4 x i8]* %130 to i32*
  %134 = load i32, i32* %132, align 1
  store i32 %134, i32* %133, align 1
  %135 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 2
  %136 = getelementptr inbounds i8, i8* %131, i64 %20
  %137 = bitcast i8* %136 to i32*
  %138 = bitcast [4 x i8]* %135 to i32*
  %139 = load i32, i32* %137, align 1
  store i32 %139, i32* %138, align 1
  %140 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 3
  %141 = getelementptr inbounds i8, i8* %136, i64 %20
  %142 = bitcast i8* %141 to i32*
  %143 = bitcast [4 x i8]* %140 to i32*
  %144 = load i32, i32* %142, align 1
  store i32 %144, i32* %143, align 1
  %145 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 4
  %146 = getelementptr inbounds i8, i8* %141, i64 %20
  %147 = bitcast i8* %146 to i32*
  %148 = bitcast [4 x i8]* %145 to i32*
  %149 = load i32, i32* %147, align 1
  store i32 %149, i32* %148, align 1
  %150 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 5
  %151 = getelementptr inbounds i8, i8* %146, i64 %20
  %152 = bitcast i8* %151 to i32*
  %153 = bitcast [4 x i8]* %150 to i32*
  %154 = load i32, i32* %152, align 1
  store i32 %154, i32* %153, align 1
  %155 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 6
  %156 = getelementptr inbounds i8, i8* %151, i64 %20
  %157 = bitcast i8* %156 to i32*
  %158 = bitcast [4 x i8]* %155 to i32*
  %159 = load i32, i32* %157, align 1
  store i32 %159, i32* %158, align 1
  %160 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 7
  %161 = getelementptr inbounds i8, i8* %156, i64 %20
  %162 = bitcast i8* %161 to i32*
  %163 = bitcast [4 x i8]* %160 to i32*
  %164 = load i32, i32* %162, align 1
  store i32 %164, i32* %163, align 1
  %165 = add nsw i32 %124, -8
  %166 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 8
  %167 = getelementptr inbounds i8, i8* %161, i64 %20
  %168 = icmp sgt i32 %165, 0
  br i1 %168, label %123, label %169

169:                                              ; preds = %119, %123, %77
  br i1 %82, label %170, label %175

170:                                              ; preds = %169
  %171 = getelementptr inbounds [2 x [136 x [4 x i8]]], [2 x [136 x [4 x i8]]]* %8, i64 0, i64 %94, i64 0
  %172 = sext i32 %80 to i64
  %173 = getelementptr inbounds [2 x %struct.Av1RestorationUnit*], [2 x %struct.Av1RestorationUnit*]* %9, i64 0, i64 %172
  %174 = load %struct.Av1RestorationUnit*, %struct.Av1RestorationUnit** %173, align 8
  call fastcc void @lr_stripe(%struct.Dav1dFrameContext* %0, i8* %79, [4 x i8]* %171, i32 %81, i32 %2, i32 %6, i32 %25, i32 %5, %struct.Av1RestorationUnit* %174, i32 %83)
  br label %175

175:                                              ; preds = %170, %169
  %176 = getelementptr inbounds i8, i8* %79, i64 %68
  %177 = or i32 %83, 1
  %178 = xor i32 %80, 1
  %179 = add i32 %84, %25
  %180 = add i32 %179, %26
  %181 = icmp sgt i32 %180, %3
  br i1 %181, label %184, label %182

182:                                              ; preds = %175
  %183 = load %struct.Av1Restoration*, %struct.Av1Restoration** %55, align 16
  br label %77

184:                                              ; preds = %175, %46
  %185 = phi i32 [ %36, %46 ], [ %177, %175 ]
  %186 = phi i1 [ %63, %46 ], [ %98, %175 ]
  %187 = phi i32 [ 0, %46 ], [ %84, %175 ]
  %188 = phi i32 [ 0, %46 ], [ %178, %175 ]
  %189 = phi i8* [ %1, %46 ], [ %176, %175 ]
  br i1 %186, label %190, label %199

190:                                              ; preds = %184
  %191 = and i32 %185, -3
  %192 = sub nsw i32 %3, %187
  %193 = icmp eq i32 %188, 0
  %194 = zext i1 %193 to i64
  %195 = getelementptr inbounds [2 x [136 x [4 x i8]]], [2 x [136 x [4 x i8]]]* %8, i64 0, i64 %194, i64 0
  %196 = sext i32 %188 to i64
  %197 = getelementptr inbounds [2 x %struct.Av1RestorationUnit*], [2 x %struct.Av1RestorationUnit*]* %9, i64 0, i64 %196
  %198 = load %struct.Av1RestorationUnit*, %struct.Av1RestorationUnit** %197, align 8
  call fastcc void @lr_stripe(%struct.Dav1dFrameContext* %0, i8* %189, [4 x i8]* %195, i32 %187, i32 %2, i32 %6, i32 %192, i32 %5, %struct.Av1RestorationUnit* %198, i32 %191)
  br label %199

199:                                              ; preds = %190, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #2
  call void @llvm.lifetime.end.p0i8(i64 1088, i8* nonnull %32) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @lr_stripe(%struct.Dav1dFrameContext* nocapture readonly, i8*, [4 x i8]*, i32, i32, i32, i32, i32, %struct.Av1RestorationUnit* nocapture readonly, i32) unnamed_addr #0 {
  %11 = alloca %union.LooprestorationParams, align 16
  %12 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %13 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %12, align 8
  %14 = icmp ne i32 %5, 0
  %15 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  %18 = and i1 %14, %17
  %19 = zext i1 %18 to i32
  %20 = zext i1 %14 to i64
  %21 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 3, i64 %20
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 6, i32 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 31
  %26 = and i32 %25, -32
  %27 = sext i32 %26 to i64
  %28 = icmp ne i32 %4, 0
  %29 = shl i32 8, %19
  %30 = select i1 %28, i32 %29, i32 0
  %31 = add nsw i32 %30, %4
  %32 = select i1 %18, i32 5, i32 6
  %33 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %34 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %33, align 8
  %35 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %34, i64 0, i32 30
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, %32
  %38 = ashr i32 %31, %37
  %39 = sext i32 %5 to i64
  %40 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 16, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 26
  %43 = load %struct.Dav1dContext*, %struct.Dav1dContext** %42, align 16
  %44 = getelementptr inbounds %struct.Dav1dContext, %struct.Dav1dContext* %43, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %45, 1
  %47 = shl i32 4, %36
  %48 = mul nsw i32 %38, %47
  %49 = add nsw i32 %48, -4
  %50 = select i1 %46, i32 %49, i32 0
  %51 = sext i32 %50 to i64
  %52 = mul nsw i64 %51, %27
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = sext i32 %3 to i64
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = xor i1 %28, true
  %57 = zext i1 %56 to i32
  %58 = shl nuw nsw i32 %57, 3
  %59 = sub nuw nsw i32 64, %58
  %60 = lshr i32 %59, %19
  %61 = sub nsw i32 %7, %4
  %62 = icmp slt i32 %60, %61
  %63 = select i1 %62, i32 %60, i32 %61
  %64 = bitcast %union.LooprestorationParams* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #2
  %65 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 0, i32 3
  %68 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 0
  %69 = bitcast %union.LooprestorationParams* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -86, i64 32, i1 false)
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i8 %70, 2
  br i1 %71, label %72, label %124

72:                                               ; preds = %10
  %73 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 16
  %74 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 14
  %75 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 12
  %76 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 10
  %77 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 8
  %78 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 6
  %79 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1, i64 4
  %80 = bitcast %union.LooprestorationParams* %11 to [8 x i16]*
  %81 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 1, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i16
  %84 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 1
  %85 = bitcast [20 x i8]* %84 to i16*
  store i16 %83, i16* %85, align 4
  %86 = bitcast %union.LooprestorationParams* %11 to i16*
  store i16 %83, i16* %86, align 16
  %87 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 1, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i16
  store i16 %89, i16* %67, align 2
  %90 = getelementptr inbounds [8 x i16], [8 x i16]* %80, i64 0, i64 1
  store i16 %89, i16* %90, align 2
  %91 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 1, i64 2
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i16
  store i16 %93, i16* %66, align 8
  %94 = bitcast i32* %65 to i16*
  store i16 %93, i16* %94, align 4
  %95 = add nsw i16 %89, %83
  %96 = add nsw i16 %95, %93
  %97 = shl nsw i16 %96, 1
  %98 = sub nsw i16 0, %97
  %99 = getelementptr inbounds [8 x i16], [8 x i16]* %80, i64 0, i64 3
  store i16 %98, i16* %99, align 2
  %100 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 2, i64 0
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i16
  %103 = bitcast i8* %73 to i16*
  store i16 %102, i16* %103, align 4
  %104 = bitcast i8* %79 to i16*
  store i16 %102, i16* %104, align 4
  %105 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 2, i64 1
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i16
  %108 = bitcast i8* %74 to i16*
  store i16 %107, i16* %108, align 2
  %109 = bitcast i8* %78 to i16*
  store i16 %107, i16* %109, align 2
  %110 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 2, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i16
  %113 = bitcast i8* %75 to i16*
  store i16 %112, i16* %113, align 4
  %114 = bitcast i8* %77 to i16*
  store i16 %112, i16* %114, align 4
  %115 = add nsw i16 %107, %102
  %116 = add nsw i16 %115, %112
  %117 = shl nsw i16 %116, 1
  %118 = sub nsw i16 128, %117
  %119 = bitcast i8* %76 to i16*
  store i16 %118, i16* %119, align 2
  %120 = or i8 %101, %82
  %121 = icmp eq i8 %120, 0
  %122 = zext i1 %121 to i64
  %123 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %13, i64 0, i32 6, i32 0, i64 %122
  br label %153

124:                                              ; preds = %10
  %125 = getelementptr inbounds %union.LooprestorationParams, %union.LooprestorationParams* %11, i64 0, i32 0, i32 0
  %126 = icmp eq i8 %70, 3
  tail call void @llvm.assume(i1 %126)
  %127 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 3
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @dav1d_sgr_params, i64 0, i64 %129, i64 0
  %131 = load i16, i16* %130, align 4
  %132 = zext i16 %131 to i32
  store i32 %132, i32* %125, align 16
  %133 = getelementptr inbounds [16 x [2 x i16]], [16 x [2 x i16]]* @dav1d_sgr_params, i64 0, i64 %129, i64 1
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  store i32 %135, i32* %65, align 4
  %136 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 4, i64 0
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i16
  store i16 %138, i16* %66, align 8
  %139 = getelementptr inbounds %struct.Av1RestorationUnit, %struct.Av1RestorationUnit* %8, i64 0, i32 4, i64 1
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i16
  %142 = sub nsw i16 128, %138
  %143 = sub nsw i16 %142, %141
  store i16 %143, i16* %67, align 2
  %144 = icmp ne i16 %131, 0
  %145 = zext i1 %144 to i32
  %146 = icmp ne i16 %134, 0
  %147 = zext i1 %146 to i32
  %148 = shl nuw nsw i32 %147, 1
  %149 = or i32 %148, %145
  %150 = add nsw i32 %149, -1
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %13, i64 0, i32 6, i32 1, i64 %151
  br label %153

153:                                              ; preds = %124, %72
  %154 = phi void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)** [ %123, %72 ], [ %152, %124 ]
  %155 = load void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*, void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)** %154, align 8
  %156 = add nsw i32 %38, 1
  %157 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 42
  %158 = add nsw i32 %63, %4
  %159 = icmp sgt i32 %158, %7
  br i1 %159, label %190, label %160

160:                                              ; preds = %153
  %161 = lshr i32 64, %19
  %162 = shl nsw i64 %27, 2
  br label %163

163:                                              ; preds = %160, %182
  %164 = phi i32 [ %158, %160 ], [ %188, %182 ]
  %165 = phi i8* [ %1, %160 ], [ %185, %182 ]
  %166 = phi [4 x i8]* [ %2, %160 ], [ %186, %182 ]
  %167 = phi i32 [ %63, %160 ], [ %180, %182 ]
  %168 = phi i8* [ %55, %160 ], [ %187, %182 ]
  %169 = phi i32 [ %9, %160 ], [ %183, %182 ]
  %170 = load i32, i32* %157, align 8
  %171 = icmp ne i32 %156, %170
  %172 = icmp ne i32 %164, %7
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 8, i32 0
  %175 = and i32 %169, -9
  %176 = or i32 %174, %175
  call void %155(i8* %165, i64 %22, [4 x i8]* %166, i8* %168, i64 %27, i32 %6, i32 %167, %union.LooprestorationParams* nonnull %11, i32 %176) #2
  %177 = sext i32 %167 to i64
  %178 = sub nsw i32 %7, %164
  %179 = icmp slt i32 %161, %178
  %180 = select i1 %179, i32 %161, i32 %178
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %190, label %182

182:                                              ; preds = %163
  %183 = or i32 %176, 4
  %184 = mul nsw i64 %22, %177
  %185 = getelementptr inbounds i8, i8* %165, i64 %184
  %186 = getelementptr inbounds [4 x i8], [4 x i8]* %166, i64 %177
  %187 = getelementptr inbounds i8, i8* %168, i64 %162
  %188 = add nsw i32 %180, %164
  %189 = icmp sgt i32 %188, %7
  br i1 %189, label %190, label %163

190:                                              ; preds = %163, %182, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
