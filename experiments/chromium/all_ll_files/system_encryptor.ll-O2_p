; ModuleID = '../../components/autofill/core/browser/webdata/system_encryptor.cc'
source_filename = "../../components/autofill/core/browser/webdata/system_encryptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::SystemEncryptor" = type { %"class.autofill::AutofillTableEncryptor" }
%"class.autofill::AutofillTableEncryptor" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN8autofill22AutofillTableEncryptorD2Ev = comdat any

$_ZN8autofill15SystemEncryptorD0Ev = comdat any

@_ZTVN8autofill15SystemEncryptorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AutofillTableEncryptor"*)* @_ZN8autofill22AutofillTableEncryptorD2Ev to i8*), i8* bitcast (void (%"class.autofill::SystemEncryptor"*)* @_ZN8autofill15SystemEncryptorD0Ev to i8*), i8* bitcast (i1 (%"class.autofill::SystemEncryptor"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*)* @_ZNK8autofill15SystemEncryptor15EncryptString16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS2_IcNS3_IcEENS5_IcEEEE to i8*), i8* bitcast (i1 (%"class.autofill::SystemEncryptor"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string"*)* @_ZNK8autofill15SystemEncryptor15DecryptString16ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS2_IDsNS3_IDsEENS5_IDsEEEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill15SystemEncryptor15EncryptString16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS2_IcNS3_IcEENS5_IcEEEE(%"class.autofill::SystemEncryptor"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.1"*) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN7OSCrypt15EncryptString16ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS1_IcNS2_IcEENS4_IcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string.1"* %2) #3
  ret i1 %4
}

declare zeroext i1 @_ZN7OSCrypt15EncryptString16ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS1_IcNS2_IcEENS4_IcEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.1"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill15SystemEncryptor15DecryptString16ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS2_IDsNS3_IDsEENS5_IDsEEEE(%"class.autofill::SystemEncryptor"* nocapture readnone, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN7OSCrypt15DecryptString16ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS1_IDsNS2_IDsEENS4_IDsEEEE(%"class.std::__1::basic_string.1"* dereferenceable(24) %1, %"class.std::__1::basic_string"* %2) #3
  ret i1 %4
}

declare zeroext i1 @_ZN7OSCrypt15DecryptString16ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS1_IDsNS2_IDsEENS4_IDsEEEE(%"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8autofill22AutofillTableEncryptorD2Ev(%"class.autofill::AutofillTableEncryptor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8autofill15SystemEncryptorD0Ev(%"class.autofill::SystemEncryptor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.autofill::SystemEncryptor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
