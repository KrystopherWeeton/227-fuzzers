; ModuleID = '../../ui/events/gesture_detection/motion_event.cc'
source_filename = "../../ui/events/gesture_detection/motion_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.ui::MotionEventGeneric" = type { %"class.ui::MotionEvent", i32, %"class.base::TimeTicks", i32, i32, i32, i32, %"class.base::StackVector", %"class.std::__1::vector.7" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::PointerProperties, 5>::Source" = type { [300 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*, %"class.std::__1::__compressed_pair.4" }
%"struct.ui::PointerProperties" = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.ui::PointerProperties"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::StackAllocator" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::MotionEvent"* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN2ui11MotionEventD2Ev = comdat any

$_ZN2ui11MotionEventD0Ev = comdat any

@_ZTVN2ui11MotionEventE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::MotionEvent"*)* @_ZN2ui11MotionEventD2Ev to i8*), i8* bitcast (void (%"class.ui::MotionEvent"*)* @_ZN2ui11MotionEventD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent17GetClassificationEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEvent"*)* @_ZNK2ui11MotionEvent14GetHistorySizeEv to i8*), i8* bitcast (i64 (%"class.ui::MotionEvent"*, i64)* @_ZNK2ui11MotionEvent22GetHistoricalEventTimeEm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent23GetHistoricalTouchMajorEmm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent14GetHistoricalXEmm to i8*), i8* bitcast (float (%"class.ui::MotionEvent"*, i64, i64)* @_ZNK2ui11MotionEvent14GetHistoricalYEmm to i8*), i8* bitcast (i32 (%"class.ui::MotionEvent"*, i64)* @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui11MotionEvent14GetHistorySizeEv(%"class.ui::MotionEvent"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui11MotionEvent22GetHistoricalEventTimeEm(%"class.ui::MotionEvent"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK2ui11MotionEvent23GetHistoricalTouchMajorEmm(%"class.ui::MotionEvent"* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK2ui11MotionEvent14GetHistoricalXEmm(%"class.ui::MotionEvent"* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK2ui11MotionEvent14GetHistoricalYEmm(%"class.ui::MotionEvent"* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2ui11MotionEvent17GetClassificationEv(%"class.ui::MotionEvent"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2ui11MotionEvent20FindPointerIndexOfIdEi(%"class.ui::MotionEvent"*, i32) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.ui::MotionEvent"* %0 to i64 (%"class.ui::MotionEvent"*)***
  %4 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %4, i64 5
  %6 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %5, align 8
  %7 = tail call i64 %6(%"class.ui::MotionEvent"* %0) #4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.ui::MotionEvent"* %0 to i32 (%"class.ui::MotionEvent"*, i64)***
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi i64 [ 0, %9 ], [ %19, %18 ]
  %13 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %10, align 8
  %14 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %13, i64 6
  %15 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %14, align 8
  %16 = tail call i32 %15(%"class.ui::MotionEvent"* %0, i64 %12) #4
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = add nuw i64 %12, 1
  %20 = icmp eq i64 %19, %7
  br i1 %20, label %23, label %11

21:                                               ; preds = %11
  %22 = trunc i64 %12 to i32
  br label %23

23:                                               ; preds = %18, %2, %21
  %24 = phi i32 [ %22, %21 ], [ -1, %2 ], [ -1, %18 ]
  ret i32 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2ui11MotionEvent17GetSourceDeviceIdEm(%"class.ui::MotionEvent"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent5CloneEv(%"class.ui::MotionEvent"*) local_unnamed_addr #1 align 2 {
  %2 = tail call %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric10CloneEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8) %0) #4
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %2, i64 0, i32 0
  ret %"class.ui::MotionEvent"* %3
}

declare %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric10CloneEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::MotionEvent"* @_ZNK2ui11MotionEvent6CancelEv(%"class.ui::MotionEvent"*) local_unnamed_addr #1 align 2 {
  %2 = tail call %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric11CancelEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8) %0) #4
  %3 = getelementptr inbounds %"class.ui::MotionEventGeneric", %"class.ui::MotionEventGeneric"* %2, i64 0, i32 0
  ret %"class.ui::MotionEvent"* %3
}

declare %"class.ui::MotionEventGeneric"* @_ZN2ui18MotionEventGeneric11CancelEventERKNS_11MotionEventE(%"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2uilsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11MotionEvent6ActionE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #1 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %1) #4
  ret %"class.std::__1::basic_ostream"* %3
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2uilsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11MotionEvent8ToolTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #1 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %1) #4
  ret %"class.std::__1::basic_ostream"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui11MotionEventD2Ev(%"class.ui::MotionEvent"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui11MotionEventD0Ev(%"class.ui::MotionEvent"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
