; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_drop_shadow.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_drop_shadow.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FEDropShadow" = type { %"class.blink::FilterEffect", float, float, float, float, %"class.blink::Color", float }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.9, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::Color" = type { i32 }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.6", %"class.blink::Member" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.cc::DropShadowPaintFilter" = type { %"class.cc::PaintFilter", float, float, float, float, i32, i32, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.16, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%union.anon.16 = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19", [16 x i8] }
%"class.WTF::VectorBufferBase.19" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.198", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.137", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.140", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.197 }
%class.scoped_refptr.197 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink12FEDropShadowD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

@_ZTVN5blink12FEDropShadowE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD2Ev to i8*), i8* bitcast (void (%"class.blink::FEDropShadow"*)* @_ZN5blink12FEDropShadowD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEDropShadow"*)* @_ZN5blink12FEDropShadow17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEDropShadow"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink12FEDropShadow22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEDropShadow"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FEDropShadow9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink12FEDropShadow17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str = private unnamed_addr constant [14 x i8] c"[feDropShadow\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c" stdDeviation=\22\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"\22 dx=\22\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"\22 dy=\22\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"\22 flood-color=\22\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"\22 flood-opacity=\22\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1

@_ZN5blink12FEDropShadowC1EPNS_6FilterEffffRKNS_5ColorEf = hidden unnamed_addr alias void (%"class.blink::FEDropShadow"*, %"class.blink::Filter"*, float, float, float, float, %"class.blink::Color"*, float), void (%"class.blink::FEDropShadow"*, %"class.blink::Filter"*, float, float, float, float, %"class.blink::Color"*, float)* @_ZN5blink12FEDropShadowC2EPNS_6FilterEffffRKNS_5ColorEf

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FEDropShadowC2EPNS_6FilterEffffRKNS_5ColorEf(%"class.blink::FEDropShadow"*, %"class.blink::Filter"*, float, float, float, float, %"class.blink::Color"* nocapture readonly dereferenceable(4), float) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %9, %"class.blink::Filter"* %1) #6
  %10 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12FEDropShadowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 1
  store float %2, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 2
  store float %3, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 3
  store float %4, float* %13, align 8
  %14 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 4
  store float %5, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 5, i32 0
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 6
  store float %7, float* %18, align 4
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN5blink12FEDropShadow9MapEffectERKNS_9FloatSizeERKNS_10FloatPointERKNS_9FloatRectE(%"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.blink::FloatRect", align 4
  %6 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = load float, float* %7, align 4
  %15 = fadd float %11, %14
  store float %15, float* %7, align 4
  %16 = load float, float* %8, align 4
  %17 = fadd float %13, %16
  store float %17, float* %8, align 4
  %18 = call { <2 x float>, <2 x float> } @_ZN5blink14FEGaussianBlur9MapEffectERKNS_9FloatSizeERKNS_9FloatRectE(%"class.blink::FloatSize"* dereferenceable(8) %0, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #6
  %19 = extractvalue { <2 x float>, <2 x float> } %18, 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 1
  %21 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %19, <2 x float>* %23, align 8
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %20, <2 x float>* %24, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %22, %"class.blink::FloatRect"* dereferenceable(16) %2) #6
  %25 = load <2 x float>, <2 x float>* %23, align 8
  %26 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %25, 0
  %27 = load <2 x float>, <2 x float>* %24, align 8
  %28 = insertvalue { <2 x float>, <2 x float> } %26, <2 x float> %27, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret { <2 x float>, <2 x float> } %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, <2 x float> } @_ZN5blink14FEGaussianBlur9MapEffectERKNS_9FloatSizeERKNS_9FloatRectE(%"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FEDropShadow9MapEffectERKNS_9FloatRectE(%"class.blink::FEDropShadow"* nocapture readonly, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.blink::FloatRect", align 4
  %5 = alloca %"class.blink::FloatSize", align 4
  %6 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Filter"*, %"class.blink::Filter"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 3
  %9 = load float, float* %8, align 8
  %10 = tail call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %7, float %9) #6
  %11 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = tail call float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"* %7, float %12) #6
  %14 = bitcast %"class.blink::FloatSize"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 8
  %19 = tail call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %7, float %18) #6
  %20 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = tail call float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"* %7, float %21) #6
  store float %19, float* %15, align 4
  store float %22, float* %16, align 4
  %23 = bitcast %"class.blink::FloatRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %4, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %4, i64 0, i32 0, i32 1
  %26 = bitcast %"class.blink::FloatRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %26, i64 16, i1 false) #6
  %27 = load float, float* %24, align 4
  %28 = fadd float %10, %27
  store float %28, float* %24, align 4
  %29 = load float, float* %25, align 4
  %30 = fadd float %13, %29
  store float %30, float* %25, align 4
  %31 = call { <2 x float>, <2 x float> } @_ZN5blink14FEGaussianBlur9MapEffectERKNS_9FloatSizeERKNS_9FloatRectE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %5, %"class.blink::FloatRect"* nonnull dereferenceable(16) %4) #6
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 1
  %34 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #6
  %35 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %32, <2 x float>* %36, align 8
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %33, <2 x float>* %37, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %35, %"class.blink::FloatRect"* dereferenceable(16) %1) #6
  %38 = load <2 x float>, <2 x float>* %36, align 8
  %39 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %38, 0
  %40 = load <2 x float>, <2 x float>* %37, align 8
  %41 = insertvalue { <2 x float>, <2 x float> } %39, <2 x float> %40, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  ret { <2 x float>, <2 x float> } %41
}

declare float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"*, float) local_unnamed_addr #1

declare float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FEDropShadow17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEDropShadow"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.absl::optional", align 4
  %7 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 0
  %10 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %9, i32 0) #6
  %11 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 0, i32 6
  %12 = load i32, i32* %11, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %4, %"class.blink::FilterEffect"* %10, i32 %12, i1 zeroext true) #6
  %13 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Filter"*, %"class.blink::Filter"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %14, float %16) #6
  %18 = load %"class.blink::Filter"*, %"class.blink::Filter"** %13, align 8
  %19 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 4
  %20 = load float, float* %19, align 4
  %21 = call float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"* %18, float %20) #6
  %22 = load %"class.blink::Filter"*, %"class.blink::Filter"** %13, align 8
  %23 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 1
  %24 = load float, float* %23, align 8
  %25 = call float @_ZNK5blink6Filter20ApplyHorizontalScaleEf(%"class.blink::Filter"* %22, float %24) #6
  %26 = load %"class.blink::Filter"*, %"class.blink::Filter"** %13, align 8
  %27 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = call float @_ZNK5blink6Filter18ApplyVerticalScaleEf(%"class.blink::Filter"* %26, float %28) #6
  %30 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 5
  %32 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %1, i64 0, i32 6
  %33 = load float, float* %32, align 4
  %34 = call i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"* %31, float %33) #6
  %35 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %34, i32* %35, align 4
  %36 = call i32 @_ZN5blink12FilterEffect39AdaptColorToOperatingInterpolationSpaceERKNS_5ColorE(%"class.blink::FilterEffect"* %9, %"class.blink::Color"* nonnull dereferenceable(4) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #6
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink12FEDropShadow17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %6, %"class.blink::FilterEffect"* %9) #6
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = select i1 %39, %struct.SkRect* null, %struct.SkRect* %40
  %42 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = call i8* @_Znwm(i64 88) #7, !noalias !3
  %44 = bitcast i8* %43 to %"class.cc::DropShadowPaintFilter"*
  %45 = bitcast %class.sk_sp* %4 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !3
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %8, align 8, !noalias !3
  %47 = bitcast %class.sk_sp* %3 to i64*
  store i64 %46, i64* %47, align 8, !noalias !3
  call void @_ZN2cc21DropShadowPaintFilterC1EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::DropShadowPaintFilter"* nonnull %44, float %17, float %21, float %25, float %29, i32 %36, i32 0, %class.sk_sp* nonnull %3, %struct.SkRect* %41) #6, !noalias !3
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %49 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %48, align 8, !noalias !3
  %50 = icmp eq %"class.cc::PaintFilter"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %2
  %52 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel, !noalias !3
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %"class.cc::PaintFilter"* %49 to %class.SkRefCntBase*
  %57 = bitcast %"class.cc::PaintFilter"* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8, !noalias !3
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8, !noalias !3
  call void %60(%class.SkRefCntBase* nonnull %56) #6, !noalias !3
  br label %61

61:                                               ; preds = %55, %51, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %62 = bitcast %class.sk_sp* %0 to i8**
  store i8* %43, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #6
  %63 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %8, align 8
  %64 = icmp eq %"class.cc::PaintFilter"* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %"class.cc::PaintFilter"* %63 to %class.SkRefCntBase*
  %71 = bitcast %"class.cc::PaintFilter"* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #6
  br label %75

75:                                               ; preds = %61, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  ret void
}

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

declare i32 @_ZN5blink12FilterEffect39AdaptColorToOperatingInterpolationSpaceERKNS_5ColorE(%"class.blink::FilterEffect"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #1

declare i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"*, float) local_unnamed_addr #1

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FEDropShadow22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEDropShadow"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #6
  %5 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #6
  %6 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 0
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %6, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #6
  %8 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #6
  %9 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 8
  %11 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %8, float %10) #6
  %12 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6
  %13 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %12, float %14) #6
  %16 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6
  %17 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 3
  %18 = load float, float* %17, align 8
  %19 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %16, float %18) #6
  %20 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #6
  %21 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 4
  %22 = load float, float* %21, align 4
  %23 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %20, float %22) #6
  %24 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #6
  %25 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 5
  %27 = tail call %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"* %26) #6
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"* %24, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %30 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)) #6
  %31 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 6
  %32 = load float, float* %31, align 4
  %33 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %30, float %32) #6
  %34 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #6
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #6
  br label %50

50:                                               ; preds = %3, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  %51 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %6, i32 0) #6
  %52 = add nsw i32 %2, 1
  %53 = bitcast %"class.blink::FilterEffect"* %51 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %54 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %54, i64 6
  %56 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %55, align 8
  %57 = call dereferenceable(48) %"class.WTF::TextStream"* %56(%"class.blink::FilterEffect"* %51, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %52) #6
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsERKNS_6StringE(%"class.WTF::TextStream"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink5Color23NameForLayoutTreeAsTextEv(%"class.blink::Color"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FEDropShadowD0Ev(%"class.blink::FEDropShadow"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEDropShadow", %"class.blink::FEDropShadow"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %2) #6
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2cc21DropShadowPaintFilterC1EffffjNS0_10ShadowModeE5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::DropShadowPaintFilter"*, float, float, float, float, i32, i32, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spIN2cc21DropShadowPaintFilterEJffffjNS1_10ShadowModeE5sk_spINS0_11PaintFilterEEP6SkRectEES3_IT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spIN2cc21DropShadowPaintFilterEJffffjNS1_10ShadowModeE5sk_spINS0_11PaintFilterEEP6SkRectEES3_IT_EDpOT0_"}
