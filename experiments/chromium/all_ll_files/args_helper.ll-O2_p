; ModuleID = '../../third_party/libaom/source/libaom/common/args_helper.c'
source_filename = "../../third_party/libaom/source/libaom/common/args_helper.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.arg = type { i8**, i8*, i8*, i32, %struct.arg_def* }
%struct.arg_def = type { i8*, i8*, i32, i8*, %struct.arg_enum_list* }
%struct.arg_enum_list = type { i8*, i32 }

@.str = private unnamed_addr constant [37 x i8] c"Error: option %s requires argument.\0A\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Error: option %s requires no argument.\0A\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"Option %s: Value %lu out of range for unsigned int\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Option %s: Invalid character '%c'\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"Option %s: Value %ld out of range for signed int\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"Option %s: Expected / at '%c'\0A\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"Option %s: Invalid value '%s'\0A\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"Option %s: List has more than %d entries\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"Option %s: Bad list separator '%c'\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @arg_init(%struct.arg* noalias nocapture sret, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.arg* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  %4 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 0
  store i8** %1, i8*** %4, align 8
  %5 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 3
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  store %struct.arg_def* null, %struct.arg_def** %7, align 8
  %8 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_match_helper(%struct.arg* nocapture, %struct.arg_def*, i8**, i8*) local_unnamed_addr #0 {
  %5 = icmp ne i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i8 0, i8* %3, align 1
  br label %7

7:                                                ; preds = %6, %4
  %8 = load i8*, i8** %2, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %92, label %10

10:                                               ; preds = %7
  %11 = load i8, i8* %8, align 1
  %12 = icmp eq i8 %11, 45
  br i1 %12, label %13, label %92

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %8, i64 1
  %19 = tail call i32 @strcmp(i8* %18, i8* nonnull %15) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %1, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8*, i8** %2, i64 1
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i8* [ %27, %25 ], [ null, %21 ]
  %30 = select i1 %24, i32 1, i32 2
  br label %53

31:                                               ; preds = %17, %13
  %32 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %1, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %92, label %35

35:                                               ; preds = %31
  %36 = tail call i64 @strlen(i8* nonnull %33) #5
  %37 = getelementptr inbounds i8, i8* %8, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 45
  br i1 %39, label %40, label %92

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, i8* %8, i64 2
  %42 = tail call i32 @strncmp(i8* %41, i8* nonnull %33, i64 %36) #5
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %92

44:                                               ; preds = %40
  %45 = add i64 %36, 2
  %46 = getelementptr inbounds i8, i8* %8, i64 %45
  %47 = load i8, i8* %46, align 1
  switch i8 %47, label %92 [
    i8 61, label %48
    i8 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds i8, i8* %41, i64 %36
  %50 = icmp eq i8 %47, 61
  %51 = getelementptr inbounds i8, i8* %49, i64 1
  %52 = select i1 %50, i8* %51, i8* null
  br label %53

53:                                               ; preds = %48, %28
  %54 = phi i8* [ %18, %28 ], [ %41, %48 ]
  %55 = phi i8* [ %29, %28 ], [ %52, %48 ]
  %56 = phi i32 [ %30, %28 ], [ 1, %48 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %92, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %1, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %62, label %71

62:                                               ; preds = %58
  %63 = bitcast %struct.arg* %0 to i8*
  %64 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 0
  store i8** %2, i8*** %64, align 8
  %65 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  store i8* %54, i8** %65, align 8
  %66 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  store i8* %55, i8** %66, align 8
  %67 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 3
  store i32 %56, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %63, i64 28
  %69 = bitcast i8* %68 to i32*
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  store %struct.arg_def* %1, %struct.arg_def** %70, align 8
  br label %92

71:                                               ; preds = %58
  %72 = icmp ne i8* %55, null
  %73 = icmp eq i32 %60, 0
  %74 = or i1 %72, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  br i1 %5, label %76, label %92

76:                                               ; preds = %75
  %77 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 200, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i8* nonnull %54) #6
  br label %92

78:                                               ; preds = %71
  %79 = and i1 %72, %73
  br i1 %79, label %80, label %83

80:                                               ; preds = %78
  br i1 %5, label %81, label %92

81:                                               ; preds = %80
  %82 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 200, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %54) #6
  br label %92

83:                                               ; preds = %78
  %84 = bitcast %struct.arg* %0 to i8*
  %85 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 0
  store i8** %2, i8*** %85, align 8
  %86 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  store i8* %54, i8** %86, align 8
  %87 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  store i8* %55, i8** %87, align 8
  %88 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 3
  store i32 %56, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %84, i64 28
  %90 = bitcast i8* %89 to i32*
  store i32 -1431655766, i32* %90, align 4
  %91 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  store %struct.arg_def* %1, %struct.arg_def** %91, align 8
  br label %92

92:                                               ; preds = %44, %35, %40, %31, %53, %80, %81, %75, %76, %7, %10, %83, %62
  %93 = phi i32 [ 1, %62 ], [ 1, %83 ], [ 0, %10 ], [ 0, %7 ], [ 0, %76 ], [ 0, %75 ], [ 0, %81 ], [ 0, %80 ], [ 0, %53 ], [ 0, %31 ], [ 0, %40 ], [ 0, %35 ], [ 0, %44 ]
  ret i32 %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_parse_uint_helper(%struct.arg* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = call i64 @strtoul(i8* %6, i8** nonnull %3, i32 10) #6
  %8 = icmp ne i8* %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %10

10:                                               ; preds = %9, %2
  %11 = load i8*, i8** %5, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = load i8*, i8** %3, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = icmp ult i64 %7, 4294967296
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = trunc i64 %7 to i32
  br label %35

22:                                               ; preds = %18
  br i1 %8, label %23, label %35

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i8* %25, i64 %7) #6
  br label %35

27:                                               ; preds = %10, %14
  br i1 %8, label %28, label %35

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = load i8*, i8** %3, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %30, i32 %33) #6
  br label %35

35:                                               ; preds = %27, %28, %22, %23, %20
  %36 = phi i32 [ %21, %20 ], [ 0, %23 ], [ 0, %22 ], [ 0, %28 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %36
}

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_parse_int_helper(%struct.arg* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = call i64 @strtol(i8* %6, i8** nonnull %3, i32 10) #6
  %8 = icmp ne i8* %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %10

10:                                               ; preds = %9, %2
  %11 = load i8*, i8** %5, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = load i8*, i8** %3, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = add i64 %7, 2147483648
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = trunc i64 %7 to i32
  br label %36

23:                                               ; preds = %18
  br i1 %8, label %24, label %36

24:                                               ; preds = %23
  %25 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i8* %26, i64 %7) #6
  br label %36

28:                                               ; preds = %10, %14
  br i1 %8, label %29, label %36

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %31, i32 %34) #6
  br label %36

36:                                               ; preds = %28, %29, %23, %24, %21
  %37 = phi i32 [ %22, %21 ], [ 0, %24 ], [ 0, %23 ], [ 0, %29 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %37
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @arg_parse_rational_helper(%struct.arg* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = icmp ne i8* %1, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = call i64 @strtol(i8* %9, i8** nonnull %3, i32 10) #6
  %11 = load i8*, i8** %8, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %7
  %15 = load i8*, i8** %3, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 47
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = add i64 %10, 2147483648
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %15, i64 1
  %23 = call i64 @strtol(i8* %22, i8** nonnull %3, i32 10) #6
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %54, label %40

27:                                               ; preds = %18
  br i1 %5, label %28, label %62

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i8* %30, i64 %10) #6
  br label %62

32:                                               ; preds = %7, %14
  br i1 %5, label %33, label %62

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i8* %35, i32 %38) #6
  br label %62

40:                                               ; preds = %21
  %41 = load i8*, i8** %3, align 8
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %40
  %45 = add i64 %23, 2147483648
  %46 = icmp ult i64 %45, 4294967296
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = shl i64 %23, 32
  br label %62

49:                                               ; preds = %44
  br i1 %5, label %50, label %62

50:                                               ; preds = %49
  %51 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %52 = load i8*, i8** %51, align 8
  %53 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i8* %52, i64 %23) #6
  br label %62

54:                                               ; preds = %21, %40
  br i1 %5, label %55, label %62

55:                                               ; preds = %54
  %56 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = load i8*, i8** %3, align 8
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %57, i32 %60) #6
  br label %62

62:                                               ; preds = %54, %55, %49, %50, %32, %33, %27, %28, %47
  %63 = phi i64 [ %10, %47 ], [ 0, %28 ], [ 0, %27 ], [ 0, %33 ], [ 0, %32 ], [ %10, %50 ], [ %10, %49 ], [ %10, %55 ], [ %10, %54 ]
  %64 = phi i64 [ %48, %47 ], [ 4294967296, %28 ], [ 4294967296, %27 ], [ 4294967296, %33 ], [ 4294967296, %32 ], [ 4294967296, %50 ], [ 4294967296, %49 ], [ 4294967296, %55 ], [ 4294967296, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  %65 = and i64 %63, 4294967295
  %66 = or i64 %64, %65
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_parse_enum_helper(%struct.arg* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = icmp ne i8* %1, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = call i64 @strtol(i8* %9, i8** nonnull %3, i32 10) #6
  %11 = load i8*, i8** %8, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %7
  %15 = load i8*, i8** %3, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %39

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  %20 = load %struct.arg_def*, %struct.arg_def** %19, align 8
  %21 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %20, i64 0, i32 4
  %22 = load %struct.arg_enum_list*, %struct.arg_enum_list** %21, align 8
  %23 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %39, label %30

26:                                               ; preds = %30
  %27 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %36, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %18, %26
  %31 = phi %struct.arg_enum_list* [ %36, %26 ], [ %22, %18 ]
  %32 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = icmp eq i64 %10, %34
  %36 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %31, i64 1
  br i1 %35, label %37, label %26

37:                                               ; preds = %30
  %38 = trunc i64 %10 to i32
  br label %65

39:                                               ; preds = %26, %18, %7, %14
  %40 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  %41 = load %struct.arg_def*, %struct.arg_def** %40, align 8
  %42 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %41, i64 0, i32 4
  %43 = load %struct.arg_enum_list*, %struct.arg_enum_list** %42, align 8
  %44 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %39, %55
  %48 = phi i8* [ %58, %55 ], [ %45, %39 ]
  %49 = phi %struct.arg_enum_list* [ %56, %55 ], [ %43, %39 ]
  %50 = tail call i32 @strcmp(i8* %11, i8* nonnull %48) #5
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %49, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  br label %65

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %49, i64 1
  %57 = getelementptr inbounds %struct.arg_enum_list, %struct.arg_enum_list* %56, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %47

60:                                               ; preds = %55, %39
  br i1 %5, label %61, label %65

61:                                               ; preds = %60
  %62 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %1, i64 200, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i8* %63, i8* %11) #6
  br label %65

65:                                               ; preds = %60, %61, %52, %37
  %66 = phi i32 [ %38, %37 ], [ %54, %52 ], [ 0, %61 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_parse_enum_or_int_helper(%struct.arg* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 4
  %4 = load %struct.arg_def*, %struct.arg_def** %3, align 8
  %5 = getelementptr inbounds %struct.arg_def, %struct.arg_def* %4, i64 0, i32 4
  %6 = load %struct.arg_enum_list*, %struct.arg_enum_list** %5, align 8
  %7 = icmp eq %struct.arg_enum_list* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @arg_parse_enum_helper(%struct.arg* %0, i8* %1)
  br label %12

10:                                               ; preds = %2
  %11 = tail call i32 @arg_parse_int_helper(%struct.arg* %0, i8* %1)
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @arg_parse_list_helper(%struct.arg* nocapture readonly, i32* nocapture, i32, i8*) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %9 = icmp ne i8* %3, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i8 0, i8* %3, align 1
  br label %11

11:                                               ; preds = %10, %4
  %12 = load i8, i8* %7, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %11
  %15 = sext i32 %2 to i64
  br label %16

16:                                               ; preds = %14, %45
  %17 = phi i64 [ 0, %14 ], [ %48, %45 ]
  %18 = phi i8* [ %7, %14 ], [ %46, %45 ]
  %19 = call i64 @strtol(i8* %18, i8** nonnull %5, i32 10) #6
  %20 = add i64 %19, 2147483648
  %21 = icmp ugt i64 %20, 4294967295
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  br i1 %9, label %23, label %54

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i8* %25, i64 %19) #6
  br label %54

27:                                               ; preds = %16
  %28 = icmp slt i64 %17, %15
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  br i1 %9, label %30, label %54

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 200, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i8* %32, i32 %2) #6
  br label %54

34:                                               ; preds = %27
  %35 = load i8*, i8** %5, align 8
  %36 = load i8, i8* %35, align 1
  switch i8 %36, label %39 [
    i8 44, label %37
    i8 0, label %45
  ]

37:                                               ; preds = %34
  %38 = getelementptr inbounds i8, i8* %35, i64 1
  store i8* %38, i8** %5, align 8
  br label %45

39:                                               ; preds = %34
  br i1 %9, label %40, label %54

40:                                               ; preds = %39
  %41 = sext i8 %36 to i32
  %42 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 200, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i8* %43, i32 %41) #6
  br label %54

45:                                               ; preds = %37, %34
  %46 = phi i8* [ %38, %37 ], [ %35, %34 ]
  %47 = trunc i64 %19 to i32
  %48 = add nuw nsw i64 %17, 1
  %49 = getelementptr inbounds i32, i32* %1, i64 %17
  store i32 %47, i32* %49, align 4
  %50 = load i8, i8* %46, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %16

52:                                               ; preds = %45
  %53 = trunc i64 %48 to i32
  br label %54

54:                                               ; preds = %52, %11, %39, %40, %29, %30, %22, %23
  %55 = phi i32 [ 0, %23 ], [ 0, %22 ], [ 0, %30 ], [ 0, %29 ], [ 0, %40 ], [ 0, %39 ], [ 0, %11 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  ret i32 %55
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
