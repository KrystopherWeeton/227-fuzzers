; ModuleID = '../../ui/events/devices/x11/touch_factory_x11.cc'
source_filename = "../../ui/events/devices/x11/touch_factory_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::TouchFactory" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset", %"class.std::__1::map", %"class.std::__1::set", %"class.absl::optional", [4 x i8], %"class.ui::SequentialIDGenerator", %"class.std::__1::map.31", i8, [7 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i16 }
%"class.ui::SequentialIDGenerator" = type { %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.27", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float }
%"class.std::__1::map.31" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ui::DeviceDataManagerX11" = type { %"class.ui::DeviceDataManager", i32, %"class.std::__1::bitset", %"class.std::__1::bitset", %"class.std::__1::vector.72", %"class.std::__1::bitset", %"class.std::__1::unique_ptr.79", [128 x i32], [128 x %"class.std::__1::vector.84"], i8, [128 x %"struct.ui::DeviceDataManagerX11::ScrollInfo"], [128 x %"class.std::__1::vector.91"], [128 x [10 x %"class.std::__1::vector.98"]], %"class.std::__1::map.105", %"class.std::__1::vector.114" }
%"class.ui::DeviceDataManager" = type { %"class.ui::DeviceHotplugEventObserver", %"class.std::__1::vector", %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.51", i8, [7 x i8], %"class.base::ObserverList", i8, i8, %"class.base::flat_map" }
%"class.ui::DeviceHotplugEventObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"*, %"class.std::__1::__compressed_pair.46" }
%"struct.ui::TouchscreenDevice" = type { %"struct.ui::InputDevice.base", %"class.gfx::Size", i32, i8, i8, i64 }
%"struct.ui::InputDevice.base" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.42 }
%union.anon.42 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.ui::TouchscreenDevice"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"*, %"class.std::__1::__compressed_pair.53" }
%"struct.ui::InputDevice" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16, [2 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.ui::InputDevice"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.58", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.60" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.65" }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.67" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i16*, i16*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i16* }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::set.82"* }
%"class.std::__1::set.82" = type opaque
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.ui::DeviceDataManagerX11::ValuatorInfo"*, %"struct.ui::DeviceDataManagerX11::ValuatorInfo"*, %"class.std::__1::__compressed_pair.86" }
%"struct.ui::DeviceDataManagerX11::ValuatorInfo" = type { i32, double, double }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.ui::DeviceDataManagerX11::ValuatorInfo"* }
%"struct.ui::DeviceDataManagerX11::ScrollInfo" = type { %"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo", %"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo" }
%"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo" = type { i32, double, double, i8 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i32*, i32*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i32* }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { double*, double*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { double* }
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { i8*, i8*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i8* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.301", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.315", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map.349", %"class.std::__1::unique_ptr.359", %"class.base::circular_deque", %"class.base::ObserverList.365", %"class.x11::Event"*, %"class.base::circular_deque.369", i32, %"class.absl::optional.380", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.385" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289", %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.x11::Render"* }
%"class.x11::Render" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.x11::Input"* }
%"class.x11::Input" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList.304", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.308" }
%"class.base::ObserverList.304" = type <{ %"class.std::__1::vector.58", %"class.base::LinkedList.305", i64, i32, [4 x i8] }>
%"class.base::LinkedList.305" = type { %"class.base::LinkNode.306" }
%"class.base::LinkNode.306" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.308" = type <{ %"class.std::__1::vector.58", %"class.base::LinkedList.309", i64, i32, [4 x i8] }>
%"class.base::LinkedList.309" = type { %"class.base::LinkNode.310" }
%"class.base::LinkNode.310" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.321", %"class.std::__1::vector.328" }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.323" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.330" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.332" }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map.349" = type { %"class.base::internal::flat_tree.350" }
%"class.base::internal::flat_tree.350" = type { %"class.std::__1::vector.351" }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"struct.std::__1::pair.353"*, %"struct.std::__1::pair.353"*, %"class.std::__1::__compressed_pair.354" }
%"struct.std::__1::pair.353" = type opaque
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.std::__1::pair.353"* }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.365" = type <{ %"class.std::__1::vector.58", %"class.base::LinkedList.366", i64, i32, [4 x i8] }>
%"class.base::LinkedList.366" = type { %"class.base::LinkNode.367" }
%"class.base::LinkNode.367" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.369" = type { %"class.base::internal::VectorBuffer.370", i64, i64 }
%"class.base::internal::VectorBuffer.370" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.372, %"class.std::__1::unique_ptr.374" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.372 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.373", [4 x i8] }>
%"class.base::RefCountedThreadSafe.373" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, %union.anon.384 }
%union.anon.384 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.385" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.500" }
%"struct.std::__1::pair.500" = type { i16, %"struct.ui::TouchFactory::TouchDeviceDetails" }
%"struct.ui::TouchFactory::TouchDeviceDetails" = type { i8, i32 }
%"class.std::__1::__tree_node.516" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.517", [4 x i8] }
%"struct.std::__1::pair.517" = type { i32, i32 }
%"class.ui::DeviceListCacheX11" = type { i8, %"class.std::__1::vector.464", %"class.std::__1::vector.411" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.x11::Input::DeviceInfo"*, %"struct.x11::Input::DeviceInfo"*, %"class.std::__1::__compressed_pair.466" }
%"struct.x11::Input::DeviceInfo" = type { i32, i8, i8, i32 }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.x11::Input::DeviceInfo"* }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"struct.x11::Input::XIDeviceInfo"*, %"struct.x11::Input::XIDeviceInfo"*, %"class.std::__1::__compressed_pair.459" }
%"struct.x11::Input::XIDeviceInfo" = type { i16, i32, i16, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.413" }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { %"struct.x11::Input::DeviceClass"*, %"struct.x11::Input::DeviceClass"*, %"class.std::__1::__compressed_pair.454" }
%"struct.x11::Input::DeviceClass" = type { i16, i16, %"class.absl::optional.415", %"class.absl::optional.427", %"class.absl::optional.439", %"class.absl::optional.444", %"class.absl::optional.449" }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"struct.x11::Input::DeviceClass::Key" }
%"struct.x11::Input::DeviceClass::Key" = type { %"class.std::__1::vector.420" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { i32*, i32*, %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { i32* }
%"class.absl::optional.427" = type { %"class.absl::optional_internal::optional_data.428" }
%"class.absl::optional_internal::optional_data.428" = type { %"class.absl::optional_internal::optional_data_base.429" }
%"class.absl::optional_internal::optional_data_base.429" = type { %"class.absl::optional_internal::optional_data_dtor_base.430" }
%"class.absl::optional_internal::optional_data_dtor_base.430" = type { i8, %union.anon.431 }
%union.anon.431 = type { %"struct.x11::Input::DeviceClass::Button" }
%"struct.x11::Input::DeviceClass::Button" = type { %"class.std::__1::vector.420", %"class.std::__1::vector.432" }
%"class.std::__1::vector.432" = type { %"class.std::__1::__vector_base.433" }
%"class.std::__1::__vector_base.433" = type { i32*, i32*, %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { i32* }
%"class.absl::optional.439" = type { %"class.absl::optional_internal::optional_data.440" }
%"class.absl::optional_internal::optional_data.440" = type { %"class.absl::optional_internal::optional_data_base.441" }
%"class.absl::optional_internal::optional_data_base.441" = type { %"class.absl::optional_internal::optional_data_dtor_base.442" }
%"class.absl::optional_internal::optional_data_dtor_base.442" = type { i8, %union.anon.443 }
%union.anon.443 = type { %"struct.x11::Input::DeviceClass::Valuator" }
%"struct.x11::Input::DeviceClass::Valuator" = type { i16, i32, %"struct.x11::Input::Fp3232", %"struct.x11::Input::Fp3232", %"struct.x11::Input::Fp3232", i32, i32 }
%"struct.x11::Input::Fp3232" = type { i32, i32 }
%"class.absl::optional.444" = type { %"class.absl::optional_internal::optional_data.445" }
%"class.absl::optional_internal::optional_data.445" = type { %"class.absl::optional_internal::optional_data_base.446" }
%"class.absl::optional_internal::optional_data_base.446" = type { %"class.absl::optional_internal::optional_data_dtor_base.447" }
%"class.absl::optional_internal::optional_data_dtor_base.447" = type { i8, %union.anon.448 }
%union.anon.448 = type { %"struct.x11::Input::DeviceClass::Scroll" }
%"struct.x11::Input::DeviceClass::Scroll" = type { i16, i32, i32, %"struct.x11::Input::Fp3232" }
%"class.absl::optional.449" = type { %"class.absl::optional_internal::optional_data.450" }
%"class.absl::optional_internal::optional_data.450" = type { %"class.absl::optional_internal::optional_data_base.451" }
%"class.absl::optional_internal::optional_data_base.451" = type { %"class.absl::optional_internal::optional_data_dtor_base.452" }
%"class.absl::optional_internal::optional_data_dtor_base.452" = type { i8, [3 x i8], %union.anon.453 }
%union.anon.453 = type { %"struct.x11::Input::DeviceClass::Touch" }
%"struct.x11::Input::DeviceClass::Touch" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.x11::Input::DeviceClass"* }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.x11::Input::XIDeviceInfo"* }
%"class.std::__1::__tree_node.518" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.519", [2 x i8] }
%"struct.std::__1::__value_type.519" = type { %"struct.std::__1::pair.520" }
%"struct.std::__1::pair.520" = type { i16, i16 }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"*, %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::pair.388" = type { i32, i32 }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::pair.388"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector.394", %"class.std::__1::map.401", i64 }
%"class.std::__1::vector.394" = type { %"class.std::__1::__vector_base.395" }
%"class.std::__1::__vector_base.395" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.401" = type { %"class.std::__1::__tree.402" }
%"class.std::__1::__tree.402" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.507" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.x11::Input::DeviceEvent" = type { i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.420", %"class.std::__1::vector.420", %"class.std::__1::vector.472" }
%"struct.x11::Input::ModifierInfo" = type { i32, i32, i32, i32 }
%"struct.x11::Input::GroupInfo" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.472" = type { %"class.std::__1::__vector_base.473" }
%"class.std::__1::__vector_base.473" = type { %"struct.x11::Input::Fp3232"*, %"struct.x11::Input::Fp3232"*, %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.x11::Input::Fp3232"* }
%"struct.x11::Input::CrossingEvent" = type { i32, i8, i16, i16, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.420" }
%"struct.x11::Input::EventMask" = type { i16, %"class.std::__1::vector.479" }
%"class.std::__1::vector.479" = type { %"class.std::__1::__vector_base.480" }
%"class.std::__1::__vector_base.480" = type { i32*, i32*, %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { i32* }
%"struct.x11::Input::XISelectEventsRequest" = type { i32, %"class.std::__1::vector.492" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"struct.x11::Input::EventMask"*, %"struct.x11::Input::EventMask"*, %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.x11::Input::EventMask"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }

$_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE21__emplace_unique_implIJRtS9_EEENS1_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEEDpOT_ = comdat any

$_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@_ZN8switches13kTouchDevicesE = external constant [0 x i8], align 1
@_ZN8switches11kPenDevicesE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN2ui12TouchFactoryC1Ev = hidden unnamed_addr alias void (%"class.ui::TouchFactory"*), void (%"class.ui::TouchFactory"*)* @_ZN2ui12TouchFactoryC2Ev
@_ZN2ui12TouchFactoryD1Ev = hidden unnamed_addr alias void (%"class.ui::TouchFactory"*), void (%"class.ui::TouchFactory"*)* @_ZN2ui12TouchFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactoryC2Ev(%"class.ui::TouchFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  %6 = bitcast %"class.ui::TouchFactory"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  tail call void @_ZN2ui21SequentialIDGeneratorC1Ej(%"class.ui::SequentialIDGenerator"* %12, i32 0) #12
  %13 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  store i8 1, i8* %17, align 8
  tail call void @_ZN2ui20DeviceDataManagerX1114CreateInstanceEv() #12
  %18 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #12
  %19 = tail call zeroext i1 @_ZNK2ui20DeviceDataManagerX1118IsXInput2AvailableEv(%"class.ui::DeviceDataManagerX11"* %18) #12
  br i1 %19, label %20, label %22

20:                                               ; preds = %1
  %21 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  tail call void @_ZN2ui12TouchFactory16UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::TouchFactory"* %0, %"class.x11::Connection"* %21)
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

declare void @_ZN2ui21SequentialIDGeneratorC1Ej(%"class.ui::SequentialIDGenerator"*, i32) unnamed_addr #1

declare void @_ZN2ui20DeviceDataManagerX1114CreateInstanceEv() local_unnamed_addr #1

declare %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui20DeviceDataManagerX1118IsXInput2AvailableEv(%"class.ui::DeviceDataManagerX11"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory16UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::TouchFactory"*, %"class.x11::Connection"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = alloca [3 x i8], align 1
  %5 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::bitset"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %8, %"class.std::__1::__tree_node"* %11) #12
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node.516"**
  %19 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %16, %"class.std::__1::__tree_node.516"* %19) #12
  %20 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %15, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %22, align 8
  %23 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #12
  %24 = tail call zeroext i1 @_ZNK2ui20DeviceDataManagerX1118IsXInput2AvailableEv(%"class.ui::DeviceDataManagerX11"* %23) #12
  br i1 %24, label %25, label %321

25:                                               ; preds = %2
  %26 = bitcast %"class.ui::TouchFactory"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %27 = tail call %"class.ui::DeviceListCacheX11"* @_ZN2ui18DeviceListCacheX1111GetInstanceEv() #12
  %28 = tail call dereferenceable(24) %"class.std::__1::vector.411"* @_ZN2ui18DeviceListCacheX1116GetXI2DeviceListEPN3x1110ConnectionE(%"class.ui::DeviceListCacheX11"* %27, %"class.x11::Connection"* %1) #12
  %29 = getelementptr inbounds %"class.std::__1::vector.411", %"class.std::__1::vector.411"* %28, i64 0, i32 0, i32 0
  %30 = load %"struct.x11::Input::XIDeviceInfo"*, %"struct.x11::Input::XIDeviceInfo"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.411", %"class.std::__1::vector.411"* %28, i64 0, i32 0, i32 1
  %32 = load %"struct.x11::Input::XIDeviceInfo"*, %"struct.x11::Input::XIDeviceInfo"** %31, align 8
  %33 = icmp eq %"struct.x11::Input::XIDeviceInfo"* %30, %32
  br i1 %33, label %321, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %38 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::map"* %7 to i64*
  %40 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7
  %41 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node.518"**
  %43 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %40, i64 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::map.31"* %40 to i64*
  %47 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %48 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  br label %49

49:                                               ; preds = %34, %318
  %50 = phi %"struct.x11::Input::XIDeviceInfo"* [ %30, %34 ], [ %319, %318 ]
  %51 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  switch i32 %52, label %318 [
    i32 5, label %53
    i32 1, label %53
    i32 3, label %53
    i32 2, label %312
  ]

53:                                               ; preds = %49, %49, %49
  %54 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 5, i32 0, i32 0
  %55 = load %"struct.x11::Input::DeviceClass"*, %"struct.x11::Input::DeviceClass"** %54, align 8
  %56 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 5, i32 0, i32 1
  %57 = load %"struct.x11::Input::DeviceClass"*, %"struct.x11::Input::DeviceClass"** %56, align 8
  %58 = icmp eq %"struct.x11::Input::DeviceClass"* %55, %57
  br i1 %58, label %64, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 2
  %61 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 0
  br label %81

62:                                               ; preds = %309
  %63 = load i32, i32* %51, align 4
  br label %64

64:                                               ; preds = %62, %53
  %65 = phi i32 [ %63, %62 ], [ %52, %53 ]
  %66 = icmp eq i32 %65, 3
  %67 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 0
  %68 = load i16, i16* %67, align 8
  %69 = zext i16 %68 to i64
  %70 = lshr i64 %69, 6
  %71 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %70
  %72 = and i64 %69, 63
  %73 = shl i64 1, %72
  br i1 %66, label %77, label %74

74:                                               ; preds = %64
  %75 = load i64, i64* %71, align 8
  %76 = or i64 %75, %73
  store i64 %76, i64* %71, align 8
  br label %318

77:                                               ; preds = %64
  %78 = xor i64 %73, -1
  %79 = load i64, i64* %71, align 8
  %80 = and i64 %79, %78
  store i64 %80, i64* %71, align 8
  br label %318

81:                                               ; preds = %59, %309
  %82 = phi %"struct.x11::Input::DeviceClass"* [ %55, %59 ], [ %310, %309 ]
  %83 = getelementptr inbounds %"struct.x11::Input::DeviceClass", %"struct.x11::Input::DeviceClass"* %82, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %309, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.x11::Input::DeviceClass", %"struct.x11::Input::DeviceClass"* %82, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %309

90:                                               ; preds = %86
  %91 = load i32, i32* %51, align 4
  %92 = icmp eq i32 %91, 3
  %93 = select i1 %92, i16* %60, i16* %61
  %94 = load i16, i16* %93, align 8
  %95 = icmp ult i16 %94, 128
  br i1 %95, label %96, label %309

96:                                               ; preds = %90
  %97 = zext i16 %94 to i64
  %98 = lshr i64 %97, 6
  %99 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %98
  %100 = and i64 %97, 63
  %101 = shl i64 1, %100
  %102 = load i64, i64* %99, align 8
  %103 = or i64 %102, %101
  store i64 %103, i64* %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %37)
  %104 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %105 = icmp eq %"class.std::__1::__tree_node"* %104, null
  br i1 %105, label %132, label %106

106:                                              ; preds = %96, %128
  %107 = phi %"class.std::__1::__tree_node"* [ %131, %128 ], [ %104, %96 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %130, %128 ], [ %38, %96 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 1, i32 0, i32 0
  %110 = load i16, i16* %109, align 2
  %111 = icmp ult i16 %94, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 0, i32 0
  br label %132

118:                                              ; preds = %106
  %119 = icmp ult i16 %110, %94
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 0, i32 1
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 0, i32 0
  br label %132

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %107, i64 0, i32 0, i32 0
  br label %132

128:                                              ; preds = %120, %112
  %129 = phi %"class.std::__1::__tree_node_base"* [ %114, %112 ], [ %122, %120 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %113, %112 ], [ %121, %120 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"* %129 to %"class.std::__1::__tree_node"*
  br label %106

132:                                              ; preds = %96, %126, %124, %116
  %133 = phi %"class.std::__1::__tree_end_node"* [ %117, %116 ], [ %125, %124 ], [ %127, %126 ], [ %9, %96 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %113, %116 ], [ %121, %124 ], [ %108, %126 ], [ %14, %96 ]
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node"**
  %136 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node"* %136, null
  br i1 %137, label %138, label %161

138:                                              ; preds = %132
  %139 = tail call i8* @_Znwm(i64 40) #13, !noalias !3
  %140 = getelementptr inbounds i8, i8* %139, i64 28
  %141 = bitcast i8* %140 to i16*
  store i16 %94, i16* %141, align 4, !noalias !3
  %142 = getelementptr inbounds i8, i8* %139, i64 32
  %143 = bitcast i8* %142 to i64*
  store i64 12884901888, i64* %143, align 4, !noalias !3
  %144 = bitcast i8* %139 to %"class.std::__1::__tree_node"*
  %145 = bitcast i8* %139 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds i8, i8* %139, i64 16
  %147 = bitcast i8* %146 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"** %147, align 8
  %148 = bitcast %"class.std::__1::__tree_node_base"** %134 to i8**
  store i8* %139, i8** %148, align 8
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %138
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  store i64 %154, i64* %39, align 8
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  br label %156

156:                                              ; preds = %153, %138
  %157 = phi %"class.std::__1::__tree_node_base"* [ %145, %138 ], [ %155, %153 ]
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %158, %"class.std::__1::__tree_node_base"* %157) #12
  %159 = load i64, i64* %12, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %12, align 8
  br label %161

161:                                              ; preds = %132, %156
  %162 = phi %"class.std::__1::__tree_node"* [ %144, %156 ], [ %136, %132 ]
  %163 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %162, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 1, i8* %163, align 4
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* nonnull align 1 %37, i64 3, i1 false)
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %162, i64 0, i32 1, i32 0, i32 1, i32 1
  store i32 3, i32* %165, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %37)
  %166 = load i32, i32* %51, align 4
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %172, label %168

168:                                              ; preds = %161
  %169 = load i16, i16* %61, align 8
  tail call void @_ZN2ui12TouchFactory19CacheTouchscreenIdsEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"* %0, i16 zeroext %169)
  %170 = load i32, i32* %51, align 4
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %309

172:                                              ; preds = %161, %168
  %173 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %42, align 8
  %174 = icmp eq %"class.std::__1::__tree_node.518"* %173, null
  br i1 %174, label %203, label %175

175:                                              ; preds = %172
  %176 = load i16, i16* %61, align 2
  br label %177

177:                                              ; preds = %199, %175
  %178 = phi %"class.std::__1::__tree_node.518"* [ %202, %199 ], [ %173, %175 ]
  %179 = phi %"class.std::__1::__tree_node_base"** [ %201, %199 ], [ %43, %175 ]
  %180 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 1, i32 0, i32 0
  %181 = load i16, i16* %180, align 2
  %182 = icmp ult i16 %176, %181
  br i1 %182, label %183, label %189

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %184, align 8
  %186 = icmp eq %"class.std::__1::__tree_node_base"* %185, null
  br i1 %186, label %187, label %199

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 0, i32 0
  br label %203

189:                                              ; preds = %177
  %190 = icmp ult i16 %181, %176
  br i1 %190, label %191, label %197

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 0, i32 1
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 0, i32 0
  br label %203

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %178, i64 0, i32 0, i32 0
  br label %203

199:                                              ; preds = %191, %183
  %200 = phi %"class.std::__1::__tree_node_base"* [ %185, %183 ], [ %193, %191 ]
  %201 = phi %"class.std::__1::__tree_node_base"** [ %184, %183 ], [ %192, %191 ]
  %202 = bitcast %"class.std::__1::__tree_node_base"* %200 to %"class.std::__1::__tree_node.518"*
  br label %177

203:                                              ; preds = %172, %197, %195, %187
  %204 = phi %"class.std::__1::__tree_end_node"* [ %188, %187 ], [ %196, %195 ], [ %198, %197 ], [ %41, %172 ]
  %205 = phi %"class.std::__1::__tree_node_base"** [ %184, %187 ], [ %192, %195 ], [ %179, %197 ], [ %44, %172 ]
  %206 = bitcast %"class.std::__1::__tree_node_base"** %205 to %"class.std::__1::__tree_node.518"**
  %207 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node.518"* %207, null
  br i1 %208, label %209, label %233

209:                                              ; preds = %203
  %210 = tail call i8* @_Znwm(i64 32) #13, !noalias !6
  %211 = getelementptr inbounds i8, i8* %210, i64 26
  %212 = bitcast i8* %211 to i16*
  %213 = load i16, i16* %61, align 2, !noalias !6
  store i16 %213, i16* %212, align 2, !noalias !6
  %214 = getelementptr inbounds i8, i8* %210, i64 28
  %215 = bitcast i8* %214 to i16*
  store i16 0, i16* %215, align 2, !noalias !6
  %216 = bitcast i8* %210 to %"class.std::__1::__tree_node.518"*
  %217 = bitcast i8* %210 to %"class.std::__1::__tree_node_base"*
  %218 = getelementptr inbounds i8, i8* %210, i64 16
  %219 = bitcast i8* %218 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %204, %"class.std::__1::__tree_end_node"** %219, align 8
  %220 = bitcast %"class.std::__1::__tree_node_base"** %205 to i8**
  store i8* %210, i8** %220, align 8
  %221 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %222 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %209
  %226 = ptrtoint %"class.std::__1::__tree_node_base"* %223 to i64
  store i64 %226, i64* %46, align 8
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  br label %228

228:                                              ; preds = %225, %209
  %229 = phi %"class.std::__1::__tree_node_base"* [ %217, %209 ], [ %227, %225 ]
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %230, %"class.std::__1::__tree_node_base"* %229) #12
  %231 = load i64, i64* %47, align 8
  %232 = add i64 %231, 1
  store i64 %232, i64* %47, align 8
  br label %233

233:                                              ; preds = %203, %228
  %234 = phi %"class.std::__1::__tree_node.518"* [ %216, %228 ], [ %207, %203 ]
  %235 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %234, i64 0, i32 1, i32 0, i32 1
  store i16 %94, i16* %235, align 2
  %236 = load i16, i16* %61, align 8
  %237 = zext i16 %236 to i64
  %238 = lshr i64 %237, 6
  %239 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %238
  %240 = and i64 %237, 63
  %241 = shl i64 1, %240
  %242 = load i64, i64* %239, align 8
  %243 = or i64 %241, %242
  store i64 %243, i64* %239, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %48)
  %244 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %245 = icmp eq %"class.std::__1::__tree_node"* %244, null
  br i1 %245, label %274, label %246

246:                                              ; preds = %233
  %247 = load i16, i16* %61, align 2
  br label %248

248:                                              ; preds = %270, %246
  %249 = phi %"class.std::__1::__tree_node"* [ %273, %270 ], [ %244, %246 ]
  %250 = phi %"class.std::__1::__tree_node_base"** [ %272, %270 ], [ %38, %246 ]
  %251 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 1, i32 0, i32 0
  %252 = load i16, i16* %251, align 2
  %253 = icmp ult i16 %247, %252
  br i1 %253, label %254, label %260

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %270

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

260:                                              ; preds = %248
  %261 = icmp ult i16 %252, %247
  br i1 %261, label %262, label %268

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 1
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, null
  br i1 %265, label %266, label %270

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

270:                                              ; preds = %262, %254
  %271 = phi %"class.std::__1::__tree_node_base"* [ %256, %254 ], [ %264, %262 ]
  %272 = phi %"class.std::__1::__tree_node_base"** [ %255, %254 ], [ %263, %262 ]
  %273 = bitcast %"class.std::__1::__tree_node_base"* %271 to %"class.std::__1::__tree_node"*
  br label %248

274:                                              ; preds = %233, %268, %266, %258
  %275 = phi %"class.std::__1::__tree_end_node"* [ %259, %258 ], [ %267, %266 ], [ %269, %268 ], [ %9, %233 ]
  %276 = phi %"class.std::__1::__tree_node_base"** [ %255, %258 ], [ %263, %266 ], [ %250, %268 ], [ %14, %233 ]
  %277 = bitcast %"class.std::__1::__tree_node_base"** %276 to %"class.std::__1::__tree_node"**
  %278 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %277, align 8
  %279 = icmp eq %"class.std::__1::__tree_node"* %278, null
  br i1 %279, label %280, label %304

280:                                              ; preds = %274
  %281 = tail call i8* @_Znwm(i64 40) #13, !noalias !9
  %282 = getelementptr inbounds i8, i8* %281, i64 28
  %283 = bitcast i8* %282 to i16*
  %284 = load i16, i16* %61, align 2, !noalias !9
  store i16 %284, i16* %283, align 4, !noalias !9
  %285 = getelementptr inbounds i8, i8* %281, i64 32
  %286 = bitcast i8* %285 to i64*
  store i64 12884901888, i64* %286, align 4, !noalias !9
  %287 = bitcast i8* %281 to %"class.std::__1::__tree_node"*
  %288 = bitcast i8* %281 to %"class.std::__1::__tree_node_base"*
  %289 = getelementptr inbounds i8, i8* %281, i64 16
  %290 = bitcast i8* %289 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %275, %"class.std::__1::__tree_end_node"** %290, align 8
  %291 = bitcast %"class.std::__1::__tree_node_base"** %276 to i8**
  store i8* %281, i8** %291, align 8
  %292 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %293 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %292, i64 0, i32 0
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  %295 = icmp eq %"class.std::__1::__tree_node_base"* %294, null
  br i1 %295, label %299, label %296

296:                                              ; preds = %280
  %297 = ptrtoint %"class.std::__1::__tree_node_base"* %294 to i64
  store i64 %297, i64* %39, align 8
  %298 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  br label %299

299:                                              ; preds = %296, %280
  %300 = phi %"class.std::__1::__tree_node_base"* [ %288, %280 ], [ %298, %296 ]
  %301 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %301, %"class.std::__1::__tree_node_base"* %300) #12
  %302 = load i64, i64* %12, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %12, align 8
  br label %304

304:                                              ; preds = %274, %299
  %305 = phi %"class.std::__1::__tree_node"* [ %287, %299 ], [ %278, %274 ]
  %306 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 0, i8* %306, align 4
  %307 = getelementptr inbounds i8, i8* %306, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %307, i8* nonnull align 1 %48, i64 3, i1 false)
  %308 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 1, i32 0, i32 1, i32 1
  store i32 3, i32* %308, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %48)
  br label %309

309:                                              ; preds = %81, %90, %304, %168, %86
  %310 = getelementptr inbounds %"struct.x11::Input::DeviceClass", %"struct.x11::Input::DeviceClass"* %82, i64 1
  %311 = icmp eq %"struct.x11::Input::DeviceClass"* %310, %57
  br i1 %311, label %62, label %81

312:                                              ; preds = %49
  %313 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 0, i32 0
  %314 = load i16, i16* %313, align 2
  %315 = zext i16 %314 to i32
  %316 = shl nuw i32 %315, 16
  %317 = or i32 %316, 1
  store i32 %317, i32* %36, align 8
  br label %318

318:                                              ; preds = %77, %74, %49, %312
  %319 = getelementptr inbounds %"struct.x11::Input::XIDeviceInfo", %"struct.x11::Input::XIDeviceInfo"* %50, i64 1
  %320 = icmp eq %"struct.x11::Input::XIDeviceInfo"* %319, %32
  br i1 %320, label %321, label %49

321:                                              ; preds = %318, %25, %2
  ret void
}

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactoryD2Ev(%"class.ui::TouchFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.518"**
  %5 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.32"* %2, %"class.std::__1::__tree_node.518"* %5) #12
  %6 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  tail call void @_ZN2ui21SequentialIDGeneratorD1Ev(%"class.ui::SequentialIDGenerator"* %6) #12
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.516"**
  %10 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %7, %"class.std::__1::__tree_node.516"* %10) #12
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node"* %14) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui21SequentialIDGeneratorD1Ev(%"class.ui::SequentialIDGenerator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %29, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #12
  br i1 %4, label %5, label %27

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 208) #13
  %7 = getelementptr inbounds i8, i8* %6, i64 40
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #12
  %9 = bitcast i8* %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 64
  %11 = getelementptr inbounds i8, i8* %6, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #12
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 80
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds i8, i8* %6, i64 88
  %15 = bitcast i8* %14 to %"class.ui::SequentialIDGenerator"*
  tail call void @_ZN2ui21SequentialIDGeneratorC1Ej(%"class.ui::SequentialIDGenerator"* %15, i32 0) #12
  %16 = getelementptr inbounds i8, i8* %6, i64 184
  %17 = getelementptr inbounds i8, i8* %6, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 200
  store i8 1, i8* %19, align 8
  tail call void @_ZN2ui20DeviceDataManagerX1114CreateInstanceEv() #12
  %20 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #12
  %21 = tail call zeroext i1 @_ZNK2ui20DeviceDataManagerX1118IsXInput2AvailableEv(%"class.ui::DeviceDataManagerX11"* %20) #12
  br i1 %21, label %22, label %25

22:                                               ; preds = %5
  %23 = bitcast i8* %6 to %"class.ui::TouchFactory"*
  %24 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  tail call void @_ZN2ui12TouchFactory16UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::TouchFactory"* nonnull %23, %"class.x11::Connection"* %24) #12
  br label %25

25:                                               ; preds = %5, %22
  %26 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %26, void (i8*)* nonnull @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #12
  br label %29

27:                                               ; preds = %3
  %28 = load atomic i64, i64* @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %29

29:                                               ; preds = %0, %25, %27
  %30 = phi i64 [ %1, %0 ], [ %26, %25 ], [ %28, %27 ]
  %31 = inttoptr i64 %30 to %"class.ui::TouchFactory"*
  ret %"class.ui::TouchFactory"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory33SetTouchDeviceListFromCommandLineEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::vector.386", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::vector.386"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %1, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #12
  %7 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kTouchDevicesE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches13kTouchDevicesE, i64 0, i64 0), i64 %9) #12
  call fastcc void @_ZN2ui12_GLOBAL__N_127AddPointerDevicesFromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16EventPointerTypeEPNS1_6vectorINS1_4pairIiSA_EENS5_ISD_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 3, %"class.std::__1::vector.386"* nonnull %1)
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %0, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches11kPenDevicesE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches11kPenDevicesE, i64 0, i64 0), i64 %19) #12
  call fastcc void @_ZN2ui12_GLOBAL__N_127AddPointerDevicesFromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16EventPointerTypeEPNS1_6vectorINS1_4pairIiSA_EENS5_ISD_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 2, %"class.std::__1::vector.386"* nonnull %1)
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %17, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %28 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %5, align 8
  %29 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %6, align 8
  %30 = icmp eq %"struct.std::__1::pair.388"* %28, %29
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = call %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv()
  call void @_ZN2ui12TouchFactory18SetTouchDeviceListERKNSt3__16vectorINS1_4pairIiNS_16EventPointerTypeEEENS1_9allocatorIS5_EEEE(%"class.ui::TouchFactory"* %32, %"class.std::__1::vector.386"* nonnull dereferenceable(24) %1)
  %33 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %5, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi %"struct.std::__1::pair.388"* [ %33, %31 ], [ %28, %27 ]
  %36 = icmp eq %"struct.std::__1::pair.388"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = ptrtoint %"struct.std::__1::pair.388"* %35 to i64
  %39 = bitcast %"struct.std::__1::pair.388"** %6 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"struct.std::__1::pair.388"* %35 to i8*
  call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %34, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ui12_GLOBAL__N_127AddPointerDevicesFromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16EventPointerTypeEPNS1_6vectorINS1_4pairIiSA_EENS5_ISD_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::vector.386"*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.505", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::vector.505"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.505"* nonnull sret %4, i8* %14, i64 %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.505", %"class.std::__1::vector.505"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.505", %"class.std::__1::vector.505"* %4, i64 0, i32 0, i32 1
  %22 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %21, align 8
  %23 = icmp eq %"class.base::BasicStringPiece"* %20, %22
  br i1 %23, label %36, label %24

24:                                               ; preds = %3
  %25 = bitcast i32* %5 to i8*
  %26 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %2, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::pair.388"** %26 to i64*
  %29 = bitcast %"class.std::__1::vector.386"* %2 to i64*
  %30 = bitcast %"struct.std::__1::pair.388"** %27 to i64*
  %31 = zext i32 %1 to i64
  %32 = shl nuw i64 %31, 32
  %33 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %2, i64 0, i32 0, i32 0
  br label %44

34:                                               ; preds = %118
  %35 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %19, align 8
  br label %36

36:                                               ; preds = %34, %3
  %37 = phi %"class.base::BasicStringPiece"* [ %35, %34 ], [ %20, %3 ]
  %38 = icmp eq %"class.base::BasicStringPiece"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = ptrtoint %"class.base::BasicStringPiece"* %37 to i64
  %41 = bitcast %"class.base::BasicStringPiece"** %21 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.base::BasicStringPiece"* %37 to i8*
  call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

44:                                               ; preds = %24, %118
  %45 = phi %"class.base::BasicStringPiece"* [ %20, %24 ], [ %119, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #12
  store i32 -1431655766, i32* %5, align 4
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %47, i64 %49, i32* nonnull %5) #12
  br i1 %50, label %51, label %118

51:                                               ; preds = %44
  %52 = load i32, i32* %5, align 4
  %53 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %26, align 8
  %54 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %27, align 8
  %55 = icmp ult %"struct.std::__1::pair.388"* %53, %54
  %56 = ptrtoint %"struct.std::__1::pair.388"* %54 to i64
  br i1 %55, label %57, label %63

57:                                               ; preds = %51
  %58 = bitcast %"struct.std::__1::pair.388"* %53 to i64*
  %59 = zext i32 %52 to i64
  %60 = or i64 %32, %59
  store i64 %60, i64* %58, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %53, i64 1
  %62 = ptrtoint %"struct.std::__1::pair.388"* %61 to i64
  store i64 %62, i64* %28, align 8
  br label %118

63:                                               ; preds = %51
  %64 = ptrtoint %"struct.std::__1::pair.388"* %53 to i64
  %65 = load i64, i64* %29, align 8
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = bitcast %"class.std::__1::vector.386"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #14
  unreachable

72:                                               ; preds = %63
  %73 = sub i64 %56, %65
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %68
  %79 = select i1 %78, i64 %68, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #14
  unreachable

84:                                               ; preds = %81, %72
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %72 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #13
  %88 = bitcast i8* %87 to %"struct.std::__1::pair.388"*
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"struct.std::__1::pair.388"* [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %91, i64 %67
  %93 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %91, i64 %90
  %94 = ptrtoint %"struct.std::__1::pair.388"* %93 to i64
  %95 = bitcast %"struct.std::__1::pair.388"* %92 to i64*
  %96 = zext i32 %52 to i64
  %97 = or i64 %32, %96
  store i64 %97, i64* %95, align 4
  %98 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %92, i64 1
  %99 = ptrtoint %"struct.std::__1::pair.388"* %98 to i64
  %100 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %33, align 8
  %101 = load i64, i64* %28, align 8
  %102 = ptrtoint %"struct.std::__1::pair.388"* %100 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 3
  %105 = sub nsw i64 0, %104
  %106 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %92, i64 %105
  %107 = ptrtoint %"struct.std::__1::pair.388"* %106 to i64
  %108 = icmp sgt i64 %103, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %89
  %110 = bitcast %"struct.std::__1::pair.388"* %106 to i8*
  %111 = bitcast %"struct.std::__1::pair.388"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 %103, i1 false) #12
  %112 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %33, align 8
  br label %113

113:                                              ; preds = %109, %89
  %114 = phi %"struct.std::__1::pair.388"* [ %100, %89 ], [ %112, %109 ]
  store i64 %107, i64* %29, align 8
  store i64 %99, i64* %28, align 8
  store i64 %94, i64* %30, align 8
  %115 = icmp eq %"struct.std::__1::pair.388"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = bitcast %"struct.std::__1::pair.388"* %114 to i8*
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %116, %113, %57, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #12
  %119 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 1
  %120 = icmp eq %"class.base::BasicStringPiece"* %119, %22
  br i1 %120, label %34, label %44
}

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory18SetTouchDeviceListERKNSt3__16vectorINS1_4pairIiNS_16EventPointerTypeEEENS1_9allocatorIS5_EEEE(%"class.ui::TouchFactory"*, %"class.std::__1::vector.386"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = alloca [3 x i8], align 1
  %5 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::bitset"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %8, %"class.std::__1::__tree_node"* %11) #12
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.386", %"class.std::__1::vector.386"* %1, i64 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair.388"*, %"struct.std::__1::pair.388"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.388"* %16, %18
  br i1 %19, label %33, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %22 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::map"* %7 to i64*
  %24 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.518"**
  %27 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::map.31", %"class.std::__1::map.31"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::map.31"* %24 to i64*
  %31 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  br label %34

33:                                               ; preds = %318, %2
  ret void

34:                                               ; preds = %20, %318
  %35 = phi %"struct.std::__1::pair.388"* [ %16, %20 ], [ %319, %318 ]
  %36 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = trunc i32 %37 to i16
  %39 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %35, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %37 to i64
  %42 = lshr i64 %41, 6
  %43 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %42
  %44 = and i64 %41, 63
  %45 = shl i64 1, %44
  %46 = load i64, i64* %43, align 8
  %47 = or i64 %45, %46
  store i64 %47, i64* %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21)
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %49 = icmp eq %"class.std::__1::__tree_node"* %48, null
  br i1 %49, label %76, label %50

50:                                               ; preds = %34, %72
  %51 = phi %"class.std::__1::__tree_node"* [ %75, %72 ], [ %48, %34 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %22, %34 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1, i32 0, i32 0
  %54 = load i16, i16* %53, align 2
  %55 = icmp ugt i16 %54, %38
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %76

62:                                               ; preds = %50
  %63 = icmp ult i16 %54, %38
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %76

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %76

72:                                               ; preds = %64, %56
  %73 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node"*
  br label %50

76:                                               ; preds = %34, %70, %68, %60
  %77 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %69, %68 ], [ %71, %70 ], [ %9, %34 ]
  %78 = phi %"class.std::__1::__tree_node_base"** [ %57, %60 ], [ %65, %68 ], [ %52, %70 ], [ %14, %34 ]
  %79 = bitcast %"class.std::__1::__tree_node_base"** %78 to %"class.std::__1::__tree_node"**
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node"* %80, null
  br i1 %81, label %82, label %105

82:                                               ; preds = %76
  %83 = tail call i8* @_Znwm(i64 40) #13, !noalias !12
  %84 = getelementptr inbounds i8, i8* %83, i64 28
  %85 = bitcast i8* %84 to i16*
  store i16 %38, i16* %85, align 4, !noalias !12
  %86 = getelementptr inbounds i8, i8* %83, i64 32
  %87 = bitcast i8* %86 to i64*
  store i64 12884901888, i64* %87, align 4, !noalias !12
  %88 = bitcast i8* %83 to %"class.std::__1::__tree_node"*
  %89 = bitcast i8* %83 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %91, align 8
  %92 = bitcast %"class.std::__1::__tree_node_base"** %78 to i8**
  store i8* %83, i8** %92, align 8
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %82
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  store i64 %98, i64* %23, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  br label %100

100:                                              ; preds = %97, %82
  %101 = phi %"class.std::__1::__tree_node_base"* [ %89, %82 ], [ %99, %97 ]
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %101) #12
  %103 = load i64, i64* %12, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %12, align 8
  br label %105

105:                                              ; preds = %76, %100
  %106 = phi %"class.std::__1::__tree_node"* [ %88, %100 ], [ %80, %76 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 0, i8* %107, align 4
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* nonnull align 1 %21, i64 3, i1 false)
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 1, i32 0, i32 1, i32 1
  store i32 %40, i32* %109, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21)
  %110 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %26, align 8
  %111 = icmp eq %"class.std::__1::__tree_node.518"* %110, null
  br i1 %111, label %318, label %112

112:                                              ; preds = %105, %112
  %113 = phi %"class.std::__1::__tree_end_node"* [ %123, %112 ], [ %25, %105 ]
  %114 = phi %"class.std::__1::__tree_node.518"* [ %124, %112 ], [ %110, %105 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load i16, i16* %115, align 2
  %117 = icmp ult i16 %116, %38
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %114, i64 0, i32 0, i32 1
  %119 = bitcast %"class.std::__1::__tree_node_base"** %118 to %"class.std::__1::__tree_node.518"**
  %120 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %114, i64 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::__tree_node.518"* %114 to %"class.std::__1::__tree_node.518"**
  %122 = select i1 %117, %"class.std::__1::__tree_node.518"** %119, %"class.std::__1::__tree_node.518"** %121
  %123 = select i1 %117, %"class.std::__1::__tree_end_node"* %113, %"class.std::__1::__tree_end_node"* %120
  %124 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %122, align 8
  %125 = icmp eq %"class.std::__1::__tree_node.518"* %124, null
  br i1 %125, label %126, label %112

126:                                              ; preds = %112
  %127 = icmp eq %"class.std::__1::__tree_end_node"* %123, %25
  br i1 %127, label %318, label %128

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::__tree_end_node"* %123 to %"class.std::__1::__tree_node.518"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %129, i64 0, i32 1, i32 0, i32 0
  %131 = load i16, i16* %130, align 2
  %132 = icmp ugt i16 %131, %38
  br i1 %132, label %318, label %133

133:                                              ; preds = %128, %149
  %134 = phi %"class.std::__1::__tree_node.518"* [ %152, %149 ], [ %110, %128 ]
  %135 = phi %"class.std::__1::__tree_node_base"** [ %151, %149 ], [ %27, %128 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %134, i64 0, i32 1, i32 0, i32 0
  %137 = load i16, i16* %136, align 2
  %138 = icmp ugt i16 %137, %38
  br i1 %138, label %139, label %143

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %134, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, null
  br i1 %142, label %153, label %149

143:                                              ; preds = %133
  %144 = icmp ult i16 %137, %38
  br i1 %144, label %145, label %153

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %134, i64 0, i32 0, i32 1
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %145, %139
  %150 = phi %"class.std::__1::__tree_node_base"* [ %141, %139 ], [ %147, %145 ]
  %151 = phi %"class.std::__1::__tree_node_base"** [ %140, %139 ], [ %146, %145 ]
  %152 = bitcast %"class.std::__1::__tree_node_base"* %150 to %"class.std::__1::__tree_node.518"*
  br label %133

153:                                              ; preds = %143, %145, %139
  %154 = phi %"class.std::__1::__tree_node_base"** [ %140, %139 ], [ %146, %145 ], [ %135, %143 ]
  %155 = bitcast %"class.std::__1::__tree_node_base"** %154 to %"class.std::__1::__tree_node.518"**
  %156 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node.518"* %156, null
  br i1 %157, label %158, label %182

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %134, i64 0, i32 0, i32 0
  %160 = tail call i8* @_Znwm(i64 32) #13, !noalias !15
  %161 = getelementptr inbounds i8, i8* %160, i64 26
  %162 = bitcast i8* %161 to i16*
  store i16 %38, i16* %162, align 2, !noalias !15
  %163 = getelementptr inbounds i8, i8* %160, i64 28
  %164 = bitcast i8* %163 to i16*
  store i16 0, i16* %164, align 2, !noalias !15
  %165 = bitcast i8* %160 to %"class.std::__1::__tree_node.518"*
  %166 = bitcast i8* %160 to %"class.std::__1::__tree_node_base"*
  %167 = getelementptr inbounds i8, i8* %160, i64 16
  %168 = bitcast i8* %167 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %159, %"class.std::__1::__tree_end_node"** %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %154 to i8**
  store i8* %160, i8** %169, align 8
  %170 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %158
  %175 = ptrtoint %"class.std::__1::__tree_node_base"* %172 to i64
  store i64 %175, i64* %30, align 8
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  br label %177

177:                                              ; preds = %174, %158
  %178 = phi %"class.std::__1::__tree_node_base"* [ %166, %158 ], [ %176, %174 ]
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %179, %"class.std::__1::__tree_node_base"* %178) #12
  %180 = load i64, i64* %31, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %31, align 8
  br label %182

182:                                              ; preds = %153, %177
  %183 = phi %"class.std::__1::__tree_node.518"* [ %165, %177 ], [ %156, %153 ]
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %183, i64 0, i32 1, i32 0, i32 1
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i64
  %187 = lshr i64 %186, 6
  %188 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %187
  %189 = and i64 %186, 63
  %190 = shl i64 1, %189
  %191 = load i64, i64* %188, align 8
  %192 = or i64 %190, %191
  store i64 %192, i64* %188, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %32)
  %193 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %26, align 8
  %194 = icmp eq %"class.std::__1::__tree_node.518"* %193, null
  br i1 %194, label %221, label %195

195:                                              ; preds = %182, %217
  %196 = phi %"class.std::__1::__tree_node.518"* [ %220, %217 ], [ %193, %182 ]
  %197 = phi %"class.std::__1::__tree_node_base"** [ %219, %217 ], [ %27, %182 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 1, i32 0, i32 0
  %199 = load i16, i16* %198, align 2
  %200 = icmp ugt i16 %199, %38
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %217

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 0, i32 0
  br label %221

207:                                              ; preds = %195
  %208 = icmp ult i16 %199, %38
  br i1 %208, label %209, label %215

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 0, i32 1
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 0, i32 0
  br label %221

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %196, i64 0, i32 0, i32 0
  br label %221

217:                                              ; preds = %209, %201
  %218 = phi %"class.std::__1::__tree_node_base"* [ %203, %201 ], [ %211, %209 ]
  %219 = phi %"class.std::__1::__tree_node_base"** [ %202, %201 ], [ %210, %209 ]
  %220 = bitcast %"class.std::__1::__tree_node_base"* %218 to %"class.std::__1::__tree_node.518"*
  br label %195

221:                                              ; preds = %182, %215, %213, %205
  %222 = phi %"class.std::__1::__tree_end_node"* [ %206, %205 ], [ %214, %213 ], [ %216, %215 ], [ %25, %182 ]
  %223 = phi %"class.std::__1::__tree_node_base"** [ %202, %205 ], [ %210, %213 ], [ %197, %215 ], [ %28, %182 ]
  %224 = bitcast %"class.std::__1::__tree_node_base"** %223 to %"class.std::__1::__tree_node.518"**
  %225 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node.518"* %225, null
  br i1 %226, label %227, label %250

227:                                              ; preds = %221
  %228 = tail call i8* @_Znwm(i64 32) #13, !noalias !18
  %229 = getelementptr inbounds i8, i8* %228, i64 26
  %230 = bitcast i8* %229 to i16*
  store i16 %38, i16* %230, align 2, !noalias !18
  %231 = getelementptr inbounds i8, i8* %228, i64 28
  %232 = bitcast i8* %231 to i16*
  store i16 0, i16* %232, align 2, !noalias !18
  %233 = bitcast i8* %228 to %"class.std::__1::__tree_node.518"*
  %234 = bitcast i8* %228 to %"class.std::__1::__tree_node_base"*
  %235 = getelementptr inbounds i8, i8* %228, i64 16
  %236 = bitcast i8* %235 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %222, %"class.std::__1::__tree_end_node"** %236, align 8
  %237 = bitcast %"class.std::__1::__tree_node_base"** %223 to i8**
  store i8* %228, i8** %237, align 8
  %238 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %227
  %243 = ptrtoint %"class.std::__1::__tree_node_base"* %240 to i64
  store i64 %243, i64* %30, align 8
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  br label %245

245:                                              ; preds = %242, %227
  %246 = phi %"class.std::__1::__tree_node_base"* [ %234, %227 ], [ %244, %242 ]
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"* %246) #12
  %248 = load i64, i64* %31, align 8
  %249 = add i64 %248, 1
  store i64 %249, i64* %31, align 8
  br label %250

250:                                              ; preds = %221, %245
  %251 = phi %"class.std::__1::__tree_node.518"* [ %233, %245 ], [ %225, %221 ]
  %252 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %251, i64 0, i32 1, i32 0, i32 1
  %253 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %254 = icmp eq %"class.std::__1::__tree_node"* %253, null
  br i1 %254, label %283, label %255

255:                                              ; preds = %250
  %256 = load i16, i16* %252, align 2
  br label %257

257:                                              ; preds = %279, %255
  %258 = phi %"class.std::__1::__tree_node"* [ %282, %279 ], [ %253, %255 ]
  %259 = phi %"class.std::__1::__tree_node_base"** [ %281, %279 ], [ %22, %255 ]
  %260 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 1, i32 0, i32 0
  %261 = load i16, i16* %260, align 2
  %262 = icmp ult i16 %256, %261
  br i1 %262, label %263, label %269

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %264, align 8
  %266 = icmp eq %"class.std::__1::__tree_node_base"* %265, null
  br i1 %266, label %267, label %279

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 0, i32 0
  br label %283

269:                                              ; preds = %257
  %270 = icmp ult i16 %261, %256
  br i1 %270, label %271, label %277

271:                                              ; preds = %269
  %272 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 0, i32 1
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node_base"* %273, null
  br i1 %274, label %275, label %279

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 0, i32 0
  br label %283

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %258, i64 0, i32 0, i32 0
  br label %283

279:                                              ; preds = %271, %263
  %280 = phi %"class.std::__1::__tree_node_base"* [ %265, %263 ], [ %273, %271 ]
  %281 = phi %"class.std::__1::__tree_node_base"** [ %264, %263 ], [ %272, %271 ]
  %282 = bitcast %"class.std::__1::__tree_node_base"* %280 to %"class.std::__1::__tree_node"*
  br label %257

283:                                              ; preds = %250, %277, %275, %267
  %284 = phi %"class.std::__1::__tree_end_node"* [ %268, %267 ], [ %276, %275 ], [ %278, %277 ], [ %9, %250 ]
  %285 = phi %"class.std::__1::__tree_node_base"** [ %264, %267 ], [ %272, %275 ], [ %259, %277 ], [ %14, %250 ]
  %286 = bitcast %"class.std::__1::__tree_node_base"** %285 to %"class.std::__1::__tree_node"**
  %287 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node"* %287, null
  br i1 %288, label %289, label %313

289:                                              ; preds = %283
  %290 = tail call i8* @_Znwm(i64 40) #13, !noalias !21
  %291 = getelementptr inbounds i8, i8* %290, i64 28
  %292 = bitcast i8* %291 to i16*
  %293 = load i16, i16* %252, align 2, !noalias !21
  store i16 %293, i16* %292, align 4, !noalias !21
  %294 = getelementptr inbounds i8, i8* %290, i64 32
  %295 = bitcast i8* %294 to i64*
  store i64 12884901888, i64* %295, align 4, !noalias !21
  %296 = bitcast i8* %290 to %"class.std::__1::__tree_node"*
  %297 = bitcast i8* %290 to %"class.std::__1::__tree_node_base"*
  %298 = getelementptr inbounds i8, i8* %290, i64 16
  %299 = bitcast i8* %298 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %290, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %284, %"class.std::__1::__tree_end_node"** %299, align 8
  %300 = bitcast %"class.std::__1::__tree_node_base"** %285 to i8**
  store i8* %290, i8** %300, align 8
  %301 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %302 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %301, i64 0, i32 0
  %303 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %302, align 8
  %304 = icmp eq %"class.std::__1::__tree_node_base"* %303, null
  br i1 %304, label %308, label %305

305:                                              ; preds = %289
  %306 = ptrtoint %"class.std::__1::__tree_node_base"* %303 to i64
  store i64 %306, i64* %23, align 8
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %285, align 8
  br label %308

308:                                              ; preds = %305, %289
  %309 = phi %"class.std::__1::__tree_node_base"* [ %297, %289 ], [ %307, %305 ]
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %310, %"class.std::__1::__tree_node_base"* %309) #12
  %311 = load i64, i64* %12, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %12, align 8
  br label %313

313:                                              ; preds = %283, %308
  %314 = phi %"class.std::__1::__tree_node"* [ %296, %308 ], [ %287, %283 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %314, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 0, i8* %315, align 4
  %316 = getelementptr inbounds i8, i8* %315, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %316, i8* nonnull align 1 %32, i64 3, i1 false)
  %317 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %314, i64 0, i32 1, i32 0, i32 1, i32 1
  store i32 %40, i32* %317, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %32)
  br label %318

318:                                              ; preds = %128, %126, %105, %313
  %319 = getelementptr inbounds %"struct.std::__1::pair.388", %"struct.std::__1::pair.388"* %35, i64 1
  %320 = icmp eq %"struct.std::__1::pair.388"* %319, %18
  br i1 %320, label %33, label %34
}

declare %"class.ui::DeviceListCacheX11"* @_ZN2ui18DeviceListCacheX1111GetInstanceEv() local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.411"* @_ZN2ui18DeviceListCacheX1116GetXI2DeviceListEPN3x1110ConnectionE(%"class.ui::DeviceListCacheX11"*, %"class.x11::Connection"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui12TouchFactory13IsValidDeviceEi(%"class.ui::TouchFactory"* nocapture readnone, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp ult i32 %1, 128
  ret i1 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory19CacheTouchscreenIdsEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = tail call zeroext i1 @_ZN2ui17DeviceDataManager11HasInstanceEv() #12
  br i1 %4, label %5, label %82

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #12
  %10 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"* %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #12
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.ui::TouchscreenDevice"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 7
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %81, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 144115188075855871
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #13
  %25 = bitcast i8* %24 to %"struct.ui::TouchscreenDevice"*
  %26 = bitcast %"struct.ui::TouchscreenDevice"** %7 to i8**
  store i8* %24, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %25, i64 %17
  store %"struct.ui::TouchscreenDevice"* %28, %"struct.ui::TouchscreenDevice"** %8, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %30 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %29, align 8
  %31 = load %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"** %11, align 8
  %32 = bitcast %"struct.ui::TouchscreenDevice"** %7 to i64*
  %33 = ptrtoint i8* %24 to i64
  %34 = icmp eq %"struct.ui::TouchscreenDevice"* %30, %31
  br i1 %34, label %43, label %35

35:                                               ; preds = %23, %35
  %36 = phi %"struct.ui::TouchscreenDevice"* [ %39, %35 ], [ %25, %23 ]
  %37 = phi %"struct.ui::TouchscreenDevice"* [ %38, %35 ], [ %30, %23 ]
  tail call void @_ZN2ui17TouchscreenDeviceC1ERKS0_(%"struct.ui::TouchscreenDevice"* %36, %"struct.ui::TouchscreenDevice"* dereferenceable(128) %37) #12
  %38 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %37, i64 1
  %39 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %36, i64 1
  %40 = icmp eq %"struct.ui::TouchscreenDevice"* %38, %31
  br i1 %40, label %41, label %35

41:                                               ; preds = %35
  %42 = ptrtoint %"struct.ui::TouchscreenDevice"* %39 to i64
  br label %43

43:                                               ; preds = %23, %41
  %44 = phi i64 [ %33, %23 ], [ %42, %41 ]
  store i64 %44, i64* %32, align 8
  %45 = inttoptr i64 %44 to %"struct.ui::TouchscreenDevice"*
  %46 = icmp eq %"struct.ui::TouchscreenDevice"* %25, %45
  br i1 %46, label %70, label %47

47:                                               ; preds = %43
  %48 = zext i16 %1 to i32
  br label %49

49:                                               ; preds = %54, %47
  %50 = phi %"struct.ui::TouchscreenDevice"* [ %25, %47 ], [ %55, %54 ]
  %51 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %50, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, %48
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %50, i64 1
  %56 = icmp eq %"struct.ui::TouchscreenDevice"* %55, %45
  br i1 %56, label %70, label %49

57:                                               ; preds = %49
  %58 = icmp eq %"struct.ui::TouchscreenDevice"* %50, %45
  br i1 %58, label %70, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %50, i64 0, i32 0, i32 8
  %61 = load i16, i16* %60, align 8
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %50, i64 0, i32 0, i32 9
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0
  %69 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE21__emplace_unique_implIJRtS9_EEENS1_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEEDpOT_(%"class.std::__1::__tree.4"* %68, i16* dereferenceable(2) %60, i16* dereferenceable(2) %64) #12
  br label %70

70:                                               ; preds = %54, %67, %63, %59, %57, %43
  %71 = icmp eq %"struct.ui::TouchscreenDevice"* %45, %25
  br i1 %71, label %79, label %72

72:                                               ; preds = %70, %72
  %73 = phi %"struct.ui::TouchscreenDevice"* [ %74, %72 ], [ %45, %70 ]
  %74 = getelementptr inbounds %"struct.ui::TouchscreenDevice", %"struct.ui::TouchscreenDevice"* %73, i64 -1
  %75 = bitcast %"struct.ui::TouchscreenDevice"* %74 to void (%"struct.ui::TouchscreenDevice"*)***
  %76 = load void (%"struct.ui::TouchscreenDevice"*)**, void (%"struct.ui::TouchscreenDevice"*)*** %75, align 8
  %77 = load void (%"struct.ui::TouchscreenDevice"*)*, void (%"struct.ui::TouchscreenDevice"*)** %76, align 8
  tail call void %77(%"struct.ui::TouchscreenDevice"* %74) #12
  %78 = icmp eq %"struct.ui::TouchscreenDevice"* %74, %25
  br i1 %78, label %79, label %72

79:                                               ; preds = %72, %70
  %80 = bitcast %"struct.ui::TouchscreenDevice"** %7 to i8**
  store i8* %24, i8** %80, align 8
  tail call void @_ZdlPv(i8* %24) #13
  br label %81

81:                                               ; preds = %5, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  br label %82

82:                                               ; preds = %2, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui12TouchFactory24ShouldProcessDeviceEventERKN3x115Input11DeviceEventE(%"class.ui::TouchFactory"*, %"struct.x11::Input::DeviceEvent"* nocapture readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %117 [
    i32 18, label %8
    i32 19, label %8
    i32 20, label %8
    i32 2, label %107
    i32 3, label %107
  ]

8:                                                ; preds = %2, %2, %2
  %9 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load i16, i16* %10, align 2
  br label %18

18:                                               ; preds = %40, %15
  %19 = phi %"class.std::__1::__tree_node"* [ %43, %40 ], [ %13, %15 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %42, %40 ], [ %16, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %17, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

30:                                               ; preds = %18
  %31 = icmp ult i16 %22, %17
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

40:                                               ; preds = %32, %24
  %41 = phi %"class.std::__1::__tree_node_base"* [ %26, %24 ], [ %34, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %25, %24 ], [ %33, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.std::__1::__tree_node"*
  br label %18

44:                                               ; preds = %8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  br label %46

46:                                               ; preds = %44, %38, %36, %28
  %47 = phi %"class.std::__1::__tree_end_node"* [ %11, %44 ], [ %29, %28 ], [ %37, %36 ], [ %39, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %25, %28 ], [ %33, %36 ], [ %20, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %52, label %80

52:                                               ; preds = %46
  %53 = tail call i8* @_Znwm(i64 40) #13, !noalias !24
  %54 = getelementptr inbounds i8, i8* %53, i64 28
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %10, align 2, !noalias !24
  store i16 %56, i16* %55, align 4, !noalias !24
  %57 = getelementptr inbounds i8, i8* %53, i64 32
  %58 = bitcast i8* %57 to i64*
  store i64 12884901888, i64* %58, align 4, !noalias !24
  %59 = bitcast i8* %53 to %"class.std::__1::__tree_node"*
  %60 = bitcast i8* %53 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %53, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %48 to i8**
  store i8* %53, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %52
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  %71 = bitcast %"class.std::__1::map"* %9 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  br label %73

73:                                               ; preds = %69, %52
  %74 = phi %"class.std::__1::__tree_node_base"* [ %60, %52 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %74) #12
  %77 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %46, %73
  %81 = phi %"class.std::__1::__tree_node"* [ %59, %73 ], [ %50, %46 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %1, i64 0, i32 13
  %87 = load i16, i16* %86, align 8
  %88 = load i16, i16* %10, align 8
  %89 = icmp ne i16 %87, %88
  br label %90

90:                                               ; preds = %80, %85
  %91 = phi i1 [ true, %80 ], [ %89, %85 ]
  br i1 %5, label %105, label %92

92:                                               ; preds = %90
  %93 = load i16, i16* %10, align 8
  %94 = icmp ult i16 %93, 128
  br i1 %94, label %95, label %105

95:                                               ; preds = %92
  %96 = zext i16 %93 to i64
  %97 = lshr i64 %96, 6
  %98 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %97
  %99 = and i64 %96, 63
  %100 = shl i64 1, %99
  %101 = load i64, i64* %98, align 8
  %102 = and i64 %101, %100
  %103 = icmp ne i64 %102, 0
  %104 = and i1 %91, %103
  ret i1 %104

105:                                              ; preds = %107, %90, %111, %117, %128, %92
  %106 = phi i1 [ false, %92 ], [ false, %90 ], [ true, %107 ], [ %116, %111 ], [ false, %117 ], [ true, %128 ]
  ret i1 %106

107:                                              ; preds = %2, %2
  %108 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 2, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %105, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = load i16, i16* %112, align 2
  %114 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %1, i64 0, i32 3
  %115 = load i16, i16* %114, align 8
  %116 = icmp eq i16 %113, %115
  br label %105

117:                                              ; preds = %2
  %118 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %1, i64 0, i32 3
  %119 = load i16, i16* %118, align 8
  %120 = zext i16 %119 to i64
  %121 = lshr i64 %120, 6
  %122 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %121
  %123 = and i64 %120, 63
  %124 = shl i64 1, %123
  %125 = load i64, i64* %122, align 8
  %126 = and i64 %124, %125
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %105, label %128

128:                                              ; preds = %117
  %129 = icmp ult i16 %119, 128
  br i1 %129, label %130, label %105

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %121
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, %124
  %134 = icmp eq i64 %133, 0
  %135 = icmp ne i8 %4, 0
  %136 = or i1 %135, %134
  ret i1 %136
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui12TouchFactory13IsTouchDeviceEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"*, i16 zeroext) local_unnamed_addr #5 align 2 {
  %3 = icmp ult i16 %1, 128
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = zext i16 %1 to i64
  %6 = lshr i64 %5, 6
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %6
  %8 = and i64 %5, 63
  %9 = shl i64 1, %8
  %10 = load i64, i64* %7, align 8
  %11 = and i64 %10, %9
  %12 = icmp ne i64 %11, 0
  br label %13

13:                                               ; preds = %4, %2
  %14 = phi i1 [ false, %2 ], [ %12, %4 ]
  ret i1 %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui12TouchFactory27ShouldProcessEventForDeviceEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"*, i16 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i16 %1 to i64
  %4 = lshr i64 %3, 6
  %5 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %4
  %6 = and i64 %3, 63
  %7 = shl i64 1, %6
  %8 = load i64, i64* %5, align 8
  %9 = and i64 %8, %7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = icmp ult i16 %1, 128
  br i1 %12, label %13, label %22

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %4
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, %7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp ne i8 %20, 0
  br label %22

22:                                               ; preds = %13, %2, %11, %18
  %23 = phi i1 [ false, %2 ], [ %21, %18 ], [ true, %13 ], [ true, %11 ]
  ret i1 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui12TouchFactory26ShouldProcessCrossingEventERKN3x115Input13CrossingEventE(%"class.ui::TouchFactory"* nocapture readonly, %"struct.x11::Input::CrossingEvent"* nocapture readonly dereferenceable(104)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -7
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %29

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %1, i64 0, i32 3
  %9 = load i16, i16* %8, align 8
  %10 = zext i16 %9 to i64
  %11 = lshr i64 %10, 6
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %11
  %13 = and i64 %10, 63
  %14 = shl i64 1, %13
  %15 = load i64, i64* %12, align 8
  %16 = and i64 %14, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %7
  %19 = icmp ult i16 %9, 128
  br i1 %19, label %20, label %29

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %11
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, %14
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp ne i8 %27, 0
  br label %29

29:                                               ; preds = %25, %20, %18, %7, %2
  %30 = phi i1 [ true, %2 ], [ false, %7 ], [ %28, %25 ], [ true, %20 ], [ true, %18 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory18SetupXI2ForXWindowEN3x116WindowE(%"class.ui::TouchFactory"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::Input::EventMask", align 8
  %4 = alloca %"struct.x11::Input::XISelectEventsRequest", align 8
  %5 = alloca [1 x %"struct.x11::Input::EventMask"], align 8
  %6 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %7 = bitcast %"struct.x11::Input::EventMask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = bitcast %"struct.x11::Input::EventMask"* %3 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %3, i64 0, i32 0
  store i16 0, i16* %9, align 8
  %10 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %3, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.479"* %10 to i64*
  %15 = bitcast i32** %11 to i64*
  %16 = tail call i8* @_Znwm(i64 4) #13
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %16, i64 4
  %19 = ptrtoint i8* %18 to i64
  store i32 0, i32* %17, align 4
  %20 = ptrtoint i8* %16 to i64
  store i64 %20, i64* %14, align 8
  store i64 %19, i64* %13, align 8
  store i64 %19, i64* %15, align 8
  %21 = load i8, i8* %16, align 1
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %16, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = or i8 %25, 28
  %27 = getelementptr inbounds i8, i8* %16, i64 1
  %28 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %26, i8* %28, align 1
  %29 = or i8 %23, 15
  store i8 %29, i8* %27, align 1
  %30 = or i8 %21, -14
  store i8 %30, i8* %16, align 1
  %31 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %6, i64 0, i32 1, i32 23, i32 0, i32 0, i32 0
  %32 = load %"class.x11::Input"*, %"class.x11::Input"** %31, align 8
  %33 = bitcast %"struct.x11::Input::XISelectEventsRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"struct.x11::Input::XISelectEventsRequest", %"struct.x11::Input::XISelectEventsRequest"* %4, i64 0, i32 0
  store i32 %1, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.x11::Input::XISelectEventsRequest", %"struct.x11::Input::XISelectEventsRequest"* %4, i64 0, i32 1
  %36 = bitcast [1 x %"struct.x11::Input::EventMask"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #12
  %37 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 0
  %38 = load i16, i16* %9, align 8
  store i16 %38, i16* %37, align 8
  %39 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 1
  %40 = bitcast %"class.std::__1::vector.479"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  %41 = load i64, i64* %13, align 8
  %42 = load i64, i64* %14, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %69, label %46

46:                                               ; preds = %2
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.479"* %39 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #14
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #13
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 1, i32 0, i32 1
  %54 = bitcast i32** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector.479"* %39 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds i32, i32* %52, i64 %44
  %57 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = bitcast i32** %53 to i64*
  %59 = ptrtoint i8* %51 to i64
  %60 = icmp sgt i64 %43, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %50
  %62 = lshr exact i64 %43, 2
  %63 = inttoptr i64 %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %63, i64 %43, i1 false) #12
  %64 = getelementptr inbounds i32, i32* %52, i64 %62
  %65 = ptrtoint i32* %64 to i64
  br label %66

66:                                               ; preds = %61, %50
  %67 = phi i64 [ %65, %61 ], [ %59, %50 ]
  store i64 %67, i64* %58, align 8
  %68 = ptrtoint i8* %51 to i64
  br label %69

69:                                               ; preds = %2, %66
  %70 = phi i8* [ null, %2 ], [ %51, %66 ]
  %71 = phi i64 [ 0, %2 ], [ %68, %66 ]
  %72 = phi i64 [ 0, %2 ], [ %59, %66 ]
  %73 = phi i64 [ 0, %2 ], [ %67, %66 ]
  %74 = tail call i8* @_Znwm(i64 32) #13
  %75 = getelementptr inbounds %"struct.x11::Input::XISelectEventsRequest", %"struct.x11::Input::XISelectEventsRequest"* %4, i64 0, i32 1, i32 0, i32 1
  %76 = bitcast %"struct.x11::Input::EventMask"** %75 to i8**
  store i8* %74, i8** %76, align 8
  %77 = bitcast %"class.std::__1::vector.492"* %35 to i8**
  store i8* %74, i8** %77, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 32
  %79 = getelementptr inbounds %"struct.x11::Input::XISelectEventsRequest", %"struct.x11::Input::XISelectEventsRequest"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"struct.x11::Input::EventMask"** %79 to i8**
  store i8* %78, i8** %80, align 8
  %81 = bitcast %"struct.x11::Input::EventMask"** %75 to i64*
  %82 = bitcast i8* %74 to i16*
  store i16 %38, i16* %82, align 8
  %83 = getelementptr inbounds i8, i8* %74, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #12
  %84 = sub i64 %73, %72
  %85 = ashr exact i64 %84, 2
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %110, label %87

87:                                               ; preds = %69
  %88 = icmp ugt i64 %85, 4611686018427387903
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast i8* %83 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #14
  unreachable

91:                                               ; preds = %87
  %92 = call i8* @_Znwm(i64 %84) #13
  %93 = bitcast i8* %92 to i32*
  %94 = getelementptr inbounds i8, i8* %74, i64 16
  %95 = bitcast i8* %94 to i8**
  store i8* %92, i8** %95, align 8
  %96 = bitcast i8* %83 to i8**
  store i8* %92, i8** %96, align 8
  %97 = getelementptr inbounds i32, i32* %93, i64 %85
  %98 = getelementptr inbounds i8, i8* %74, i64 24
  %99 = bitcast i8* %98 to i32**
  store i32* %97, i32** %99, align 8
  %100 = bitcast i8* %94 to i64*
  %101 = ptrtoint i8* %92 to i64
  %102 = sub i64 %73, %71
  %103 = icmp sgt i64 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %91
  %105 = lshr exact i64 %102, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %92, i8* align 4 %70, i64 %102, i1 false) #12
  %106 = getelementptr inbounds i32, i32* %93, i64 %105
  %107 = ptrtoint i32* %106 to i64
  br label %108

108:                                              ; preds = %104, %91
  %109 = phi i64 [ %107, %104 ], [ %101, %91 ]
  store i64 %109, i64* %100, align 8
  br label %110

110:                                              ; preds = %108, %69
  %111 = getelementptr inbounds i8, i8* %74, i64 32
  %112 = ptrtoint i8* %111 to i64
  store i64 %112, i64* %81, align 8
  %113 = call %"class.x11::Connection::FutureImpl"* @_ZN3x115Input14XISelectEventsERKNS0_21XISelectEventsRequestE(%"class.x11::Input"* %32, %"struct.x11::Input::XISelectEventsRequest"* nonnull dereferenceable(32) %4) #12
  %114 = icmp eq %"class.x11::Connection::FutureImpl"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  %116 = bitcast %"class.x11::Connection::FutureImpl"* %113 to i8*
  call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %110, %115
  %118 = getelementptr inbounds %"class.std::__1::vector.492", %"class.std::__1::vector.492"* %35, i64 0, i32 0, i32 0
  %119 = load %"struct.x11::Input::EventMask"*, %"struct.x11::Input::EventMask"** %118, align 8
  %120 = icmp eq %"struct.x11::Input::EventMask"* %119, null
  br i1 %120, label %142, label %121

121:                                              ; preds = %117
  %122 = bitcast %"struct.x11::Input::EventMask"* %119 to i8*
  %123 = load %"struct.x11::Input::EventMask"*, %"struct.x11::Input::EventMask"** %75, align 8
  %124 = icmp eq %"struct.x11::Input::EventMask"* %123, %119
  br i1 %124, label %140, label %125

125:                                              ; preds = %121, %136
  %126 = phi %"struct.x11::Input::EventMask"* [ %127, %136 ], [ %123, %121 ]
  %127 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %126, i64 -1
  %128 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %126, i64 -1, i32 1, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = ptrtoint i32* %129 to i64
  %133 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %126, i64 -1, i32 1, i32 0, i32 1
  %134 = bitcast i32** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast i32* %129 to i8*
  call void @_ZdlPv(i8* %135) #13
  br label %136

136:                                              ; preds = %131, %125
  %137 = icmp eq %"struct.x11::Input::EventMask"* %127, %119
  br i1 %137, label %138, label %125

138:                                              ; preds = %136
  %139 = load i8*, i8** %77, align 8
  br label %140

140:                                              ; preds = %138, %121
  %141 = phi i8* [ %139, %138 ], [ %122, %121 ]
  store %"struct.x11::Input::EventMask"* %119, %"struct.x11::Input::EventMask"** %75, align 8
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %117, %140
  %143 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 1, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = ptrtoint i32* %144 to i64
  %148 = getelementptr inbounds [1 x %"struct.x11::Input::EventMask"], [1 x %"struct.x11::Input::EventMask"]* %5, i64 0, i64 0, i32 1, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast i32* %144 to i8*
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %142, %146
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #12
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %6) #12
  %152 = getelementptr inbounds %"struct.x11::Input::EventMask", %"struct.x11::Input::EventMask"* %3, i64 0, i32 1, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp eq i32* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = ptrtoint i32* %153 to i64
  store i64 %156, i64* %13, align 8
  %157 = bitcast i32* %153 to i8*
  call void @_ZdlPv(i8* %157) #13
  br label %158

158:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x115Input14XISelectEventsERKNS0_21XISelectEventsRequestE(%"class.x11::Input"*, %"struct.x11::Input::XISelectEventsRequest"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui12TouchFactory18IsMultiTouchDeviceEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"*, i16 zeroext) local_unnamed_addr #5 align 2 {
  %3 = icmp ult i16 %1, 128
  br i1 %3, label %4, label %46

4:                                                ; preds = %2
  %5 = zext i16 %1 to i64
  %6 = lshr i64 %5, 6
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %6
  %8 = and i64 %5, 63
  %9 = shl i64 1, %8
  %10 = load i64, i64* %7, align 8
  %11 = and i64 %10, %9
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"class.std::__1::__tree_end_node"* [ %29, %18 ], [ %14, %13 ]
  %20 = phi %"class.std::__1::__tree_node"* [ %30, %18 ], [ %16, %13 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %22, %1
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__tree_node_base"** %24 to %"class.std::__1::__tree_node"**
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node"**
  %28 = select i1 %23, %"class.std::__1::__tree_node"** %25, %"class.std::__1::__tree_node"** %27
  %29 = select i1 %23, %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"* %26
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %32, label %18

32:                                               ; preds = %18
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %29, %14
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = icmp ugt i16 %37, %1
  br i1 %38, label %39, label %40

39:                                               ; preds = %34, %32, %13
  br label %40

40:                                               ; preds = %34, %39
  %41 = phi %"class.std::__1::__tree_end_node"* [ %14, %39 ], [ %29, %34 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to i8*
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp ne i8 %44, 0
  br label %46

46:                                               ; preds = %4, %40, %2
  %47 = phi i1 [ false, %4 ], [ false, %2 ], [ %45, %40 ]
  ret i1 %47
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui12TouchFactory25GetTouchDevicePointerTypeEN3x115Input8DeviceIdE(%"class.ui::TouchFactory"*, i16 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = icmp ugt i16 %26, %1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23, %21, %2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"*
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi %"class.std::__1::__tree_node"* [ %24, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 1, i32 0, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui12TouchFactory22QuerySlotForTrackingIDEjPi(%"class.ui::TouchFactory"*, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  %5 = tail call zeroext i1 @_ZNK2ui21SequentialIDGenerator17HasGeneratedIDForEj(%"class.ui::SequentialIDGenerator"* %4, i32 %1) #12
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i32 @_ZN2ui21SequentialIDGenerator14GetGeneratedIDEj(%"class.ui::SequentialIDGenerator"* %4, i32 %1) #12
  store i32 %7, i32* %2, align 4
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i1 [ true, %6 ], [ false, %3 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK2ui21SequentialIDGenerator17HasGeneratedIDForEj(%"class.ui::SequentialIDGenerator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui12TouchFactory20GetSlotForTrackingIDEj(%"class.ui::TouchFactory"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  %4 = tail call i32 @_ZN2ui21SequentialIDGenerator14GetGeneratedIDEj(%"class.ui::SequentialIDGenerator"* %3, i32 %1) #12
  ret i32 %4
}

declare i32 @_ZN2ui21SequentialIDGenerator14GetGeneratedIDEj(%"class.ui::SequentialIDGenerator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory11ReleaseSlotEi(%"class.ui::TouchFactory"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  tail call void @_ZN2ui21SequentialIDGenerator9ReleaseIDEj(%"class.ui::SequentialIDGenerator"* %3, i32 %1) #12
  ret void
}

declare void @_ZN2ui21SequentialIDGenerator9ReleaseIDEj(%"class.ui::SequentialIDGenerator"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui12TouchFactory20IsTouchDevicePresentEv(%"class.ui::TouchFactory"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ false, %1 ], [ true, %5 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory12ResetForTestEv(%"class.ui::TouchFactory"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = bitcast %"class.ui::TouchFactory"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %7) #12
  %8 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.516"**
  %15 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %14, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %12, %"class.std::__1::__tree_node.516"* %15) #12
  %16 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %18, align 8
  %19 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 6
  tail call void @_ZN2ui21SequentialIDGenerator12ResetForTestEv(%"class.ui::SequentialIDGenerator"* %19) #12
  %20 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  store i8 1, i8* %20, align 8
  %21 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #12
  tail call void @_ZN2ui17DeviceDataManager22SetTouchscreensEnabledEb(%"class.ui::DeviceDataManager"* %21, i1 zeroext true) #12
  ret void
}

declare void @_ZN2ui21SequentialIDGenerator12ResetForTestEv(%"class.ui::SequentialIDGenerator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory22SetTouchscreensEnabledEb(%"class.ui::TouchFactory"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  store i8 %3, i8* %4, align 8
  %5 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #12
  tail call void @_ZN2ui17DeviceDataManager22SetTouchscreensEnabledEb(%"class.ui::DeviceDataManager"* %5, i1 zeroext %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory21SetTouchDeviceForTestERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.ui::TouchFactory"*, %"class.std::__1::vector.91"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::bitset"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  %6 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node"* %10) #12
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %1, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %1, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %15, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %21 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::map"* %6 to i64*
  br label %26

23:                                               ; preds = %94, %2
  %24 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 8
  store i8 1, i8* %24, align 8
  %25 = tail call %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() #12
  tail call void @_ZN2ui17DeviceDataManager22SetTouchscreensEnabledEb(%"class.ui::DeviceDataManager"* %25, i1 zeroext true) #12
  ret void

26:                                               ; preds = %19, %94
  %27 = phi i32* [ %15, %19 ], [ %99, %94 ]
  %28 = load i32, i32* %27, align 4
  %29 = trunc i32 %28 to i16
  %30 = sext i32 %28 to i64
  %31 = lshr i64 %30, 6
  %32 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 1, i32 0, i32 0, i64 %31
  %33 = and i64 %30, 63
  %34 = shl i64 1, %33
  %35 = load i64, i64* %32, align 8
  %36 = or i64 %34, %35
  store i64 %36, i64* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %20)
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %38 = icmp eq %"class.std::__1::__tree_node"* %37, null
  br i1 %38, label %65, label %39

39:                                               ; preds = %26, %61
  %40 = phi %"class.std::__1::__tree_node"* [ %64, %61 ], [ %37, %26 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %63, %61 ], [ %21, %26 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0
  %43 = load i16, i16* %42, align 2
  %44 = icmp ugt i16 %43, %29
  br i1 %44, label %45, label %51

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %61

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

51:                                               ; preds = %39
  %52 = icmp ult i16 %43, %29
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %65

61:                                               ; preds = %53, %45
  %62 = phi %"class.std::__1::__tree_node_base"* [ %47, %45 ], [ %55, %53 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %46, %45 ], [ %54, %53 ]
  %64 = bitcast %"class.std::__1::__tree_node_base"* %62 to %"class.std::__1::__tree_node"*
  br label %39

65:                                               ; preds = %26, %59, %57, %49
  %66 = phi %"class.std::__1::__tree_end_node"* [ %50, %49 ], [ %58, %57 ], [ %60, %59 ], [ %8, %26 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %46, %49 ], [ %54, %57 ], [ %41, %59 ], [ %13, %26 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"** %67 to %"class.std::__1::__tree_node"**
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node"* %69, null
  br i1 %70, label %71, label %94

71:                                               ; preds = %65
  %72 = tail call i8* @_Znwm(i64 40) #13, !noalias !27
  %73 = getelementptr inbounds i8, i8* %72, i64 28
  %74 = bitcast i8* %73 to i16*
  store i16 %29, i16* %74, align 4, !noalias !27
  %75 = getelementptr inbounds i8, i8* %72, i64 32
  %76 = bitcast i8* %75 to i64*
  store i64 12884901888, i64* %76, align 4, !noalias !27
  %77 = bitcast i8* %72 to %"class.std::__1::__tree_node"*
  %78 = bitcast i8* %72 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds i8, i8* %72, i64 16
  %80 = bitcast i8* %79 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %80, align 8
  %81 = bitcast %"class.std::__1::__tree_node_base"** %67 to i8**
  store i8* %72, i8** %81, align 8
  %82 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %71
  %87 = ptrtoint %"class.std::__1::__tree_node_base"* %84 to i64
  store i64 %87, i64* %22, align 8
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  br label %89

89:                                               ; preds = %86, %71
  %90 = phi %"class.std::__1::__tree_node_base"* [ %78, %71 ], [ %88, %86 ]
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %90) #12
  %92 = load i64, i64* %11, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %11, align 8
  br label %94

94:                                               ; preds = %65, %89
  %95 = phi %"class.std::__1::__tree_node"* [ %77, %89 ], [ %69, %65 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 1, i8* %96, align 4
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* nonnull align 1 %20, i64 3, i1 false)
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %95, i64 0, i32 1, i32 0, i32 1, i32 1
  store i32 3, i32* %98, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %20)
  %99 = getelementptr inbounds i32, i32* %27, i64 1
  %100 = icmp eq i32* %99, %17
  br i1 %100, label %23, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12TouchFactory23SetPointerDeviceForTestERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.ui::TouchFactory"*, %"class.std::__1::vector.91"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::TouchFactory"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #12
  %4 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %1, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %1, i64 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = ptrtoint i32* %5 to i64
  %11 = getelementptr i32, i32* %7, i64 -1
  %12 = ptrtoint i32* %11 to i64
  %13 = sub i64 %12, %10
  %14 = and i64 %13, 4
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %9
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = lshr i64 %18, 6
  %20 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %19
  %21 = and i64 %18, 63
  %22 = shl i64 1, %21
  %23 = load i64, i64* %20, align 8
  %24 = or i64 %22, %23
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds i32, i32* %5, i64 1
  br label %26

26:                                               ; preds = %16, %9
  %27 = phi i32* [ %5, %9 ], [ %25, %16 ]
  %28 = icmp ult i64 %13, 4
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %30, %2
  ret void

30:                                               ; preds = %26, %30
  %31 = phi i32* [ %49, %30 ], [ %27, %26 ]
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = lshr i64 %33, 6
  %35 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %34
  %36 = and i64 %33, 63
  %37 = shl i64 1, %36
  %38 = load i64, i64* %35, align 8
  %39 = or i64 %37, %38
  store i64 %39, i64* %35, align 8
  %40 = getelementptr inbounds i32, i32* %31, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = lshr i64 %42, 6
  %44 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %0, i64 0, i32 0, i32 0, i32 0, i64 %43
  %45 = and i64 %42, 63
  %46 = shl i64 1, %45
  %47 = load i64, i64* %44, align 8
  %48 = or i64 %46, %47
  store i64 %48, i64* %44, align 8
  %49 = getelementptr inbounds i32, i32* %31, i64 2
  %50 = icmp eq i32* %49, %7
  br i1 %50, label %29, label %30
}

declare %"class.ui::DeviceDataManager"* @_ZN2ui17DeviceDataManager11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui17DeviceDataManager22SetTouchscreensEnabledEb(%"class.ui::DeviceDataManager"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui17DeviceDataManager11HasInstanceEv() local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK2ui17DeviceDataManager21GetTouchscreenDevicesEv(%"class.ui::DeviceDataManager"*) local_unnamed_addr #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.505"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"*, %"class.std::__1::__tree_node.516"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.516"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.516"* %1 to %"class.std::__1::__tree_node.516"**
  %6 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %0, %"class.std::__1::__tree_node.516"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.516"**
  %9 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %0, %"class.std::__1::__tree_node.516"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.516"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.32"*, %"class.std::__1::__tree_node.518"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.518"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.518"* %1 to %"class.std::__1::__tree_node.518"**
  %6 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.518"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.518", %"class.std::__1::__tree_node.518"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.518"**
  %9 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.32"* %0, %"class.std::__1::__tree_node.518"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.518"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = inttoptr i64 %2 to %"class.ui::TouchFactory"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 7, i32 0
  %7 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.518"**
  %9 = load %"class.std::__1::__tree_node.518"*, %"class.std::__1::__tree_node.518"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.32"* %6, %"class.std::__1::__tree_node.518"* %9) #12
  %10 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 6
  tail call void @_ZN2ui21SequentialIDGeneratorD1Ev(%"class.ui::SequentialIDGenerator"* %10) #12
  %11 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.516"**
  %14 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.4"* %11, %"class.std::__1::__tree_node.516"* %14) #12
  %15 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.ui::TouchFactory", %"class.ui::TouchFactory"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %15, %"class.std::__1::__tree_node"* %18) #12
  %19 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %1, %5
  store i64 0, i64* @_ZN4base9SingletonIN2ui12TouchFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN2ui17TouchscreenDeviceC1ERKS0_(%"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"* dereferenceable(128)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE21__emplace_unique_implIJRtS9_EEENS1_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEEDpOT_(%"class.std::__1::__tree.4"*, i16* dereferenceable(2), i16* dereferenceable(2)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #13, !noalias !30
  %5 = getelementptr inbounds i8, i8* %4, i64 28
  %6 = bitcast i8* %5 to i32*
  %7 = load i16, i16* %1, align 2, !noalias !30
  %8 = zext i16 %7 to i32
  store i32 %8, i32* %6, align 4, !noalias !30
  %9 = getelementptr inbounds i8, i8* %4, i64 32
  %10 = bitcast i8* %9 to i32*
  %11 = load i16, i16* %2, align 2, !noalias !30
  %12 = zext i16 %11 to i32
  store i32 %12, i32* %10, align 4, !noalias !30
  %13 = getelementptr inbounds %"class.std::__1::__tree.4", %"class.std::__1::__tree.4"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.516"**
  %15 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node.516"* %15, null
  br i1 %16, label %51, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::__tree.4", %"class.std::__1::__tree.4"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %47, %17
  %20 = phi %"class.std::__1::__tree_node.516"* [ %50, %47 ], [ %15, %17 ]
  %21 = phi %"class.std::__1::__tree_node_base"** [ %49, %47 ], [ %18, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %8
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = icmp slt i32 %23, %8
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %12
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %19
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 0, i32 0
  br label %53

37:                                               ; preds = %27
  %38 = icmp slt i32 %29, %12
  br i1 %38, label %39, label %45

39:                                               ; preds = %37, %25
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 0, i32 1
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 0, i32 0
  br label %53

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %20, i64 0, i32 0, i32 0
  br label %53

47:                                               ; preds = %39, %31
  %48 = phi %"class.std::__1::__tree_node_base"* [ %33, %31 ], [ %41, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %32, %31 ], [ %40, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"* %48 to %"class.std::__1::__tree_node.516"*
  br label %19

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 0, i32 0
  br label %53

53:                                               ; preds = %35, %43, %45, %51
  %54 = phi %"class.std::__1::__tree_end_node"* [ %13, %51 ], [ %36, %35 ], [ %44, %43 ], [ %46, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %52, %51 ], [ %32, %35 ], [ %40, %43 ], [ %21, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"** %55 to %"class.std::__1::__tree_node.516"**
  %57 = load %"class.std::__1::__tree_node.516"*, %"class.std::__1::__tree_node.516"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node.516"* %57, null
  br i1 %58, label %59, label %81

59:                                               ; preds = %53
  %60 = bitcast i8* %4 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds i8, i8* %4, i64 16
  %62 = bitcast i8* %61 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %54, %"class.std::__1::__tree_end_node"** %62, align 8
  %63 = bitcast %"class.std::__1::__tree_node_base"** %55 to i8**
  store i8* %4, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree.4", %"class.std::__1::__tree.4"* %0, i64 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %59
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %67 to i64
  %71 = bitcast %"class.std::__1::__tree.4"* %0 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  br label %73

73:                                               ; preds = %69, %59
  %74 = phi %"class.std::__1::__tree_node_base"* [ %60, %59 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree.4", %"class.std::__1::__tree.4"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %74) #12
  %77 = getelementptr inbounds %"class.std::__1::__tree.4", %"class.std::__1::__tree.4"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  %80 = bitcast i8* %4 to %"class.std::__1::__tree_end_node"*
  br label %83

81:                                               ; preds = %53
  %82 = getelementptr inbounds %"class.std::__1::__tree_node.516", %"class.std::__1::__tree_node.516"* %57, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* nonnull %4) #13
  br label %83

83:                                               ; preds = %73, %81
  %84 = phi %"class.std::__1::__tree_end_node"* [ %80, %73 ], [ %82, %81 ]
  %85 = phi i8 [ 1, %73 ], [ 0, %81 ]
  %86 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %84, 0
  %87 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %86, i8 %85, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %87
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdES4_EENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeINS_12__value_typeIN3x115Input8DeviceIdEN2ui12TouchFactory18TouchDeviceDetailsEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRtS9_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISD_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRtS9_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISD_EEEEEEDpOT_"}
