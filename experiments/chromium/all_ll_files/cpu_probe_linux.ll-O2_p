; ModuleID = '../../content/browser/compute_pressure/cpu_probe_linux.cc'
source_filename = "../../content/browser/compute_pressure/cpu_probe_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::ComputePressureSample" = type { double, double }
%"class.content::CpuProbeLinux" = type { %"class.content::CpuProbe", %"class.content::ProcfsStatCpuParser", %"class.std::__1::vector", %"class.std::__1::vector.8", i8*, i64, %"struct.content::ComputePressureSample" }
%"class.content::CpuProbe" = type { i32 (...)** }
%"class.content::ProcfsStatCpuParser" = type { %"class.base::FilePath", %"class.std::__1::vector" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"class.std::__1::__compressed_pair.3" }
%"struct.content::ProcfsStatCpuParser::CoreTimes" = type { [10 x i64] }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.content::ProcfsStatCpuParser::CoreTimes"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.content::SysfsCpufreqCoreParser"* }
%"class.content::SysfsCpufreqCoreParser" = type { %"class.content::SysfsCpufreqCoreParser::SysfsFileReader", %"class.content::SysfsCpufreqCoreParser::SysfsFileReader", %"class.content::SysfsCpufreqCoreParser::SysfsFileReader", %"class.content::SysfsCpufreqCoreParser::FileReader" }
%"class.content::SysfsCpufreqCoreParser::SysfsFileReader" = type { %"class.content::SysfsCpufreqCoreParser::FileReader", %"class.content::SysfsCpufreqCoreParser::FileReader" }
%"class.content::SysfsCpufreqCoreParser::FileReader" = type { %"class.base::FilePath" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::unique_ptr.10"* }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN7content22SysfsCpufreqCoreParserENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

@_ZN7content19ProcfsStatCpuParser15kProcfsStatPathE = external constant [11 x i8], align 1
@_ZN7content22SysfsCpufreqCoreParser13kSysfsCpuPathE = external constant [28 x i8], align 16
@_ZTVN7content13CpuProbeLinuxE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::CpuProbeLinux"*)* @_ZN7content13CpuProbeLinuxD2Ev to i8*), i8* bitcast (void (%"class.content::CpuProbeLinux"*)* @_ZN7content13CpuProbeLinuxD0Ev to i8*), i8* bitcast (void (%"class.content::CpuProbeLinux"*)* @_ZN7content13CpuProbeLinux6UpdateEv to i8*), i8* bitcast ({ double, double } (%"class.content::CpuProbeLinux"*)* @_ZN7content13CpuProbeLinux10LastSampleEv to i8*)] }, align 8
@_ZN7content8CpuProbe17kUnsupportedValueE = external local_unnamed_addr constant %"struct.content::ComputePressureSample", align 8
@_ZN7content13CpuProbeLinux32kUninitializedCpuidBaseFrequencyE = hidden local_unnamed_addr constant i64 -2, align 8

@_ZN7content13CpuProbeLinuxC1EN4base8FilePathEPKcNS1_7PassKeyIS0_EE = hidden unnamed_addr alias void (%"class.content::CpuProbeLinux"*, %"class.base::FilePath"*, i8*), void (%"class.content::CpuProbeLinux"*, %"class.base::FilePath"*, i8*)* @_ZN7content13CpuProbeLinuxC2EN4base8FilePathEPKcNS1_7PassKeyIS0_EE
@_ZN7content13CpuProbeLinuxD1Ev = hidden unnamed_addr alias void (%"class.content::CpuProbeLinux"*), void (%"class.content::CpuProbeLinux"*)* @_ZN7content13CpuProbeLinuxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.content::CpuProbeLinux"* @_ZN7content13CpuProbeLinux6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::FilePath", align 8
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN7content19ProcfsStatCpuParser15kProcfsStatPathE, i64 0, i64 0), i64 10) #10
  %5 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = call i8* @_Znwm(i64 136) #11
  %7 = bitcast i8* %6 to %"class.content::CpuProbeLinux"*
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %2, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #10
  %8 = bitcast %"class.base::FilePath"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = bitcast i8* %6 to %"class.content::CpuProbe"*
  call void @_ZN7content8CpuProbeC2Ev(%"class.content::CpuProbe"* nonnull %9) #10
  %10 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13CpuProbeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to %"class.content::ProcfsStatCpuParser"*
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %1, %"class.base::FilePath"* nonnull dereferenceable(24) %2) #10
  call void @_ZN7content19ProcfsStatCpuParserC1EN4base8FilePathE(%"class.content::ProcfsStatCpuParser"* %12, %"class.base::FilePath"* nonnull %1) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %1) #10
  %13 = getelementptr inbounds i8, i8* %6, i64 56
  %14 = getelementptr inbounds i8, i8* %6, i64 104
  %15 = bitcast i8* %14 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false) #10
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN7content22SysfsCpufreqCoreParser13kSysfsCpuPathE, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 112
  %17 = bitcast i8* %16 to i64*
  store i64 -2, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 bitcast (%"struct.content::ComputePressureSample"* @_ZN7content8CpuProbe17kUnsupportedValueE to i8*), i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.content::CpuProbeLinux"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.content::CpuProbeLinux"* @_ZN7content13CpuProbeLinux16CreateForTestingEN4base8FilePathEPKc(%"class.base::FilePath"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.base::FilePath", align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = tail call i8* @_Znwm(i64 136) #11
  %8 = bitcast i8* %7 to %"class.content::CpuProbeLinux"*
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %4, %"class.base::FilePath"* dereferenceable(24) %0) #10
  %9 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast i8* %7 to %"class.content::CpuProbe"*
  call void @_ZN7content8CpuProbeC2Ev(%"class.content::CpuProbe"* nonnull %10) #10
  %11 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13CpuProbeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  %13 = bitcast i8* %12 to %"class.content::ProcfsStatCpuParser"*
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %3, %"class.base::FilePath"* nonnull dereferenceable(24) %4) #10
  call void @_ZN7content19ProcfsStatCpuParserC1EN4base8FilePathE(%"class.content::ProcfsStatCpuParser"* %13, %"class.base::FilePath"* nonnull %3) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #10
  %14 = getelementptr inbounds i8, i8* %7, i64 56
  %15 = getelementptr inbounds i8, i8* %7, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false) #10
  %16 = bitcast i8* %15 to i64*
  store i64 %5, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 112
  %18 = bitcast i8* %17 to i64*
  store i64 -2, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 bitcast (%"struct.content::ComputePressureSample"* @_ZN7content8CpuProbe17kUnsupportedValueE to i8*), i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  ret %"class.content::CpuProbeLinux"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinuxC2EN4base8FilePathEPKcNS1_7PassKeyIS0_EE(%"class.content::CpuProbeLinux"*, %"class.base::FilePath"*, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::FilePath", align 8
  %5 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 0
  tail call void @_ZN7content8CpuProbeC2Ev(%"class.content::CpuProbe"* %5) #10
  %6 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13CpuProbeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 1
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %4, %"class.base::FilePath"* dereferenceable(24) %1) #10
  call void @_ZN7content19ProcfsStatCpuParserC1EN4base8FilePathE(%"class.content::ProcfsStatCpuParser"* %7, %"class.base::FilePath"* nonnull %4) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #10
  %8 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  store i8* %2, i8** %9, align 8
  %11 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 5
  store i64 -2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6
  %13 = bitcast %"struct.content::ComputePressureSample"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 bitcast (%"struct.content::ComputePressureSample"* @_ZN7content8CpuProbe17kUnsupportedValueE to i8*), i64 16, i1 false)
  ret void
}

declare void @_ZN7content8CpuProbeC2Ev(%"class.content::CpuProbe"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN7content19ProcfsStatCpuParserC1EN4base8FilePathE(%"class.content::ProcfsStatCpuParser"*, %"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinuxD2Ev(%"class.content::CpuProbeLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13CpuProbeLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.10"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.10"* %5 to i8*
  %9 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.10"* %10, %5
  br i1 %11, label %25, label %12

12:                                               ; preds = %7, %20
  %13 = phi %"class.std::__1::unique_ptr.10"* [ %14, %20 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.content::SysfsCpufreqCoreParser"*, %"class.content::SysfsCpufreqCoreParser"** %15, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %15, align 8
  %17 = icmp eq %"class.content::SysfsCpufreqCoreParser"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN7content22SysfsCpufreqCoreParserD1Ev(%"class.content::SysfsCpufreqCoreParser"* nonnull %16) #10
  %19 = bitcast %"class.content::SysfsCpufreqCoreParser"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %12
  %21 = icmp eq %"class.std::__1::unique_ptr.10"* %14, %5
  br i1 %21, label %22, label %12

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.8"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i8* [ %24, %22 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.10"* %5, %"class.std::__1::unique_ptr.10"** %9, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %28, align 8
  %30 = icmp eq %"struct.content::ProcfsStatCpuParser::CoreTimes"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %29 to i64
  %33 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2, i32 0, i32 1
  %34 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %29 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 1
  tail call void @_ZN7content19ProcfsStatCpuParserD1Ev(%"class.content::ProcfsStatCpuParser"* %37) #10
  %38 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 0
  tail call void @_ZN7content8CpuProbeD2Ev(%"class.content::CpuProbe"* %38) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content19ProcfsStatCpuParserD1Ev(%"class.content::ProcfsStatCpuParser"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content8CpuProbeD2Ev(%"class.content::CpuProbe"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinuxD0Ev(%"class.content::CpuProbeLinux"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content13CpuProbeLinuxD2Ev(%"class.content::CpuProbeLinux"* %0) #10
  %2 = bitcast %"class.content::CpuProbeLinux"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinux6UpdateEv(%"class.content::CpuProbeLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZN7content19ProcfsStatCpuParser6UpdateEv(%"class.content::ProcfsStatCpuParser"* %2) #10
  %4 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 1, i32 1
  %5 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %6 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %92, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %13 to i64*
  %15 = bitcast %"class.std::__1::vector"* %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 5
  br label %23

19:                                               ; preds = %74
  %20 = icmp sgt i32 %77, 0
  %21 = icmp sgt i32 %78, 0
  %22 = and i1 %20, %21
  br i1 %22, label %85, label %92

23:                                               ; preds = %11, %74
  %24 = phi i64 [ %9, %11 ], [ %81, %74 ]
  %25 = phi i64 [ 0, %11 ], [ %79, %74 ]
  %26 = phi i32 [ 0, %11 ], [ %78, %74 ]
  %27 = phi i32 [ 0, %11 ], [ %77, %74 ]
  %28 = phi double [ 0.000000e+00, %11 ], [ %76, %74 ]
  %29 = phi double [ 0.000000e+00, %11 ], [ %75, %74 ]
  %30 = inttoptr i64 %24 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  %31 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %30, i64 %25
  %32 = load i64, i64* %14, align 8
  %33 = load i64, i64* %15, align 8
  %34 = sub i64 %32, %33
  %35 = sdiv exact i64 %34, 80
  %36 = icmp eq i64 %35, %25
  br i1 %36, label %37, label %39

37:                                               ; preds = %23
  %38 = trunc i64 %25 to i32
  tail call void @_ZN7content13CpuProbeLinux14InitializeCoreEiRKNS_19ProcfsStatCpuParser9CoreTimesE(%"class.content::CpuProbeLinux"* %0, i32 %38, %"struct.content::ProcfsStatCpuParser::CoreTimes"* dereferenceable(80) %31)
  br label %74

39:                                               ; preds = %23
  %40 = inttoptr i64 %33 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  %41 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %40, i64 %25
  %42 = tail call double @_ZNK7content19ProcfsStatCpuParser9CoreTimes15TimeUtilizationERKS1_(%"struct.content::ProcfsStatCpuParser::CoreTimes"* %31, %"struct.content::ProcfsStatCpuParser::CoreTimes"* dereferenceable(80) %41) #10
  %43 = fcmp ult double %42, 0.000000e+00
  br i1 %43, label %74, label %44

44:                                               ; preds = %39
  %45 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %16, align 8
  %46 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %45, i64 %25
  %47 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %46 to i8*
  %48 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 80, i1 false)
  %49 = fadd double %29, %42
  %50 = add nsw i32 %27, 1
  %51 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %17, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %51, i64 %25, i32 0, i32 0, i32 0
  %53 = load %"class.content::SysfsCpufreqCoreParser"*, %"class.content::SysfsCpufreqCoreParser"** %52, align 8
  %54 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMaxFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %53) #10
  %55 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMinFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %53) #10
  %56 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser20ReadCurrentFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %53) #10
  %57 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser17ReadBaseFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %53) #10
  %58 = icmp eq i64 %57, -1
  br i1 %58, label %59, label %61

59:                                               ; preds = %44
  %60 = load i64, i64* %18, align 8
  br label %61

61:                                               ; preds = %44, %59
  %62 = phi i64 [ %60, %59 ], [ %57, %44 ]
  %63 = sitofp i64 %55 to double
  %64 = sitofp i64 %54 to double
  %65 = sitofp i64 %62 to double
  %66 = sitofp i64 %56 to double
  %67 = tail call double @_ZN7content8CpuProbe9CoreSpeedEdddd(double %63, double %64, double %65, double %66) #10
  %68 = fcmp ult double %67, 0.000000e+00
  %69 = fadd double %28, %67
  %70 = select i1 %68, double %28, double %69
  %71 = xor i1 %68, true
  %72 = zext i1 %71 to i32
  %73 = add nsw i32 %26, %72
  br label %74

74:                                               ; preds = %39, %61, %37
  %75 = phi double [ %29, %37 ], [ %29, %39 ], [ %49, %61 ]
  %76 = phi double [ %28, %37 ], [ %28, %39 ], [ %70, %61 ]
  %77 = phi i32 [ %27, %37 ], [ %27, %39 ], [ %50, %61 ]
  %78 = phi i32 [ %26, %37 ], [ %26, %39 ], [ %73, %61 ]
  %79 = add nuw i64 %25, 1
  %80 = load i64, i64* %6, align 8
  %81 = load i64, i64* %8, align 8
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, 80
  %84 = icmp ult i64 %79, %83
  br i1 %84, label %23, label %19

85:                                               ; preds = %19
  %86 = sitofp i32 %77 to double
  %87 = fdiv double %75, %86
  %88 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6, i32 0
  store double %87, double* %88, align 8
  %89 = sitofp i32 %78 to double
  %90 = fdiv double %76, %89
  %91 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6, i32 1
  store double %90, double* %91, align 8
  br label %95

92:                                               ; preds = %1, %19
  %93 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6
  %94 = bitcast %"struct.content::ComputePressureSample"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 bitcast (%"struct.content::ComputePressureSample"* @_ZN7content8CpuProbe17kUnsupportedValueE to i8*), i64 16, i1 false)
  br label %95

95:                                               ; preds = %92, %85
  ret void
}

declare zeroext i1 @_ZN7content19ProcfsStatCpuParser6UpdateEv(%"class.content::ProcfsStatCpuParser"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinux14InitializeCoreEiRKNS_19ProcfsStatCpuParser9CoreTimesE(%"class.content::CpuProbeLinux"*, i32, %"struct.content::ProcfsStatCpuParser::CoreTimes"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CPU", align 8
  %5 = alloca %"class.std::__1::unique_ptr.10", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %8, label %39

8:                                                ; preds = %3
  %9 = bitcast %"class.base::CPU"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 96, i1 false) #10
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %4) #10
  %10 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %4, i64 0, i32 25
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %4, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = call i64 @_ZN7content27ParseBaseFrequencyFromCpuidEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %18, i64 %22) #10
  %24 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 5
  store i64 %23, i64* %24, align 8
  %25 = load i8, i8* %12, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %8
  %28 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %8
  %30 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %4, i64 0, i32 24
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #10
  br label %39

39:                                               ; preds = %38, %3
  %40 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2, i32 0, i32 1
  %42 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %41, align 8
  %43 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %44 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %43, align 8
  %45 = icmp eq %"struct.content::ProcfsStatCpuParser::CoreTimes"* %42, %44
  %46 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %44 to i64
  br i1 %45, label %53, label %47

47:                                               ; preds = %39
  %48 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %42 to i8*
  %49 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 80, i1 false) #10
  %50 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %42, i64 1
  %51 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %50 to i64
  %52 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %41 to i64*
  store i64 %51, i64* %52, align 8
  br label %107

53:                                               ; preds = %39
  %54 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %42 to i64
  %55 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %41 to i64*
  %56 = bitcast %"class.std::__1::vector"* %40 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = sdiv exact i64 %58, 80
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 230584300921369395
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = bitcast %"class.std::__1::vector"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #12
  unreachable

64:                                               ; preds = %53
  %65 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %43 to i64*
  %66 = sub i64 %46, %57
  %67 = sdiv exact i64 %66, 80
  %68 = icmp ult i64 %67, 115292150460684697
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = shl nsw i64 %67, 1
  %71 = icmp ult i64 %70, %60
  %72 = select i1 %71, i64 %60, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %64
  %75 = phi i64 [ %72, %69 ], [ 230584300921369395, %64 ]
  %76 = mul i64 %75, 80
  %77 = call i8* @_Znwm(i64 %76) #11
  %78 = bitcast i8* %77 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  br label %79

79:                                               ; preds = %74, %69
  %80 = phi i64 [ %75, %74 ], [ 0, %69 ]
  %81 = phi %"struct.content::ProcfsStatCpuParser::CoreTimes"* [ %78, %74 ], [ null, %69 ]
  %82 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %81, i64 %59
  %83 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %81, i64 %80
  %84 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %83 to i64
  %85 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %82 to i8*
  %86 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 80, i1 false) #10
  %87 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %82, i64 1
  %88 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %87 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %90 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %89, align 8
  %91 = load i64, i64* %55, align 8
  %92 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, -80
  %95 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %82, i64 %94
  %96 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %95 to i64
  %97 = icmp sgt i64 %93, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %79
  %99 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %95 to i8*
  %100 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %93, i1 false) #10
  %101 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %89, align 8
  br label %102

102:                                              ; preds = %98, %79
  %103 = phi %"struct.content::ProcfsStatCpuParser::CoreTimes"* [ %90, %79 ], [ %101, %98 ]
  store i64 %96, i64* %56, align 8
  store i64 %88, i64* %55, align 8
  store i64 %84, i64* %65, align 8
  %104 = icmp eq %"struct.content::ProcfsStatCpuParser::CoreTimes"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %103 to i8*
  call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %47, %102, %105
  %108 = bitcast %"class.std::__1::unique_ptr.10"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 4
  %111 = load i8*, i8** %110, align 8
  call void @_ZN7content22SysfsCpufreqCoreParser8CorePathEiPKc(%"class.base::FilePath"* nonnull sret %6, i32 %1, i8* %111) #10
  %112 = call i8* @_Znwm(i64 168) #11
  %113 = bitcast i8* %112 to %"class.content::SysfsCpufreqCoreParser"*
  call void @_ZN7content22SysfsCpufreqCoreParserC1ERKN4base8FilePathE(%"class.content::SysfsCpufreqCoreParser"* nonnull %113, %"class.base::FilePath"* nonnull dereferenceable(24) %6) #10
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %5, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.10"* %5 to i8**
  store i8* %112, i8** %115, align 8
  %116 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3, i32 0, i32 1
  %117 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %116, align 8
  %118 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %119 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %118, align 8
  %120 = icmp ult %"class.std::__1::unique_ptr.10"* %117, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %107
  %122 = ptrtoint i8* %112 to i64
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %114, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.10"* %117 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %117, i64 1
  %125 = ptrtoint %"class.std::__1::unique_ptr.10"* %124 to i64
  %126 = bitcast %"class.std::__1::unique_ptr.10"** %116 to i64*
  store i64 %125, i64* %126, align 8
  br label %129

127:                                              ; preds = %107
  %128 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN7content22SysfsCpufreqCoreParserENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.8"* %128, %"class.std::__1::unique_ptr.10"* nonnull dereferenceable(8) %5) #10
  br label %129

129:                                              ; preds = %121, %127
  %130 = load %"class.content::SysfsCpufreqCoreParser"*, %"class.content::SysfsCpufreqCoreParser"** %114, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %114, align 8
  %131 = icmp eq %"class.content::SysfsCpufreqCoreParser"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  call void @_ZN7content22SysfsCpufreqCoreParserD1Ev(%"class.content::SysfsCpufreqCoreParser"* nonnull %130) #10
  %133 = bitcast %"class.content::SysfsCpufreqCoreParser"* %130 to i8*
  call void @_ZdlPv(i8* %133) #11
  br label %134

134:                                              ; preds = %129, %132
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  ret void
}

declare double @_ZNK7content19ProcfsStatCpuParser9CoreTimes15TimeUtilizationERKS1_(%"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN7content13CpuProbeLinux9CoreSpeedERNS_22SysfsCpufreqCoreParserE(%"class.content::CpuProbeLinux"* nocapture readonly, %"class.content::SysfsCpufreqCoreParser"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMaxFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %1) #10
  %4 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMinFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %1) #10
  %5 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser20ReadCurrentFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %1) #10
  %6 = tail call i64 @_ZN7content22SysfsCpufreqCoreParser17ReadBaseFrequencyEv(%"class.content::SysfsCpufreqCoreParser"* %1) #10
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i64 [ %10, %8 ], [ %6, %2 ]
  %13 = sitofp i64 %4 to double
  %14 = sitofp i64 %3 to double
  %15 = sitofp i64 %12 to double
  %16 = sitofp i64 %5 to double
  %17 = tail call double @_ZN7content8CpuProbe9CoreSpeedEdddd(double %13, double %14, double %15, double %16) #10
  ret double %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { double, double } @_ZN7content13CpuProbeLinux10LastSampleEv(%"class.content::CpuProbeLinux"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6, i32 0
  %3 = load double, double* %2, align 8
  %4 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 6, i32 1
  %5 = load double, double* %4, align 8
  %6 = insertvalue { double, double } undef, double %3, 0
  %7 = insertvalue { double, double } %6, double %5, 1
  ret { double, double } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13CpuProbeLinux10InitializeEv(%"class.content::CpuProbeLinux"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CPU", align 8
  %3 = bitcast %"class.base::CPU"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 96, i1 false)
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %2) #10
  %4 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 25
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = call i64 @_ZN7content27ParseBaseFrequencyFromCpuidEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %12, i64 %16) #10
  %18 = getelementptr inbounds %"class.content::CpuProbeLinux", %"class.content::CpuProbeLinux"* %0, i64 0, i32 5
  store i64 %17, i64* %18, align 8
  %19 = load i8, i8* %6, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %1
  %22 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %21, %1
  %24 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 24
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #10
  ret void
}

declare void @_ZN7content22SysfsCpufreqCoreParser8CorePathEiPKc(%"class.base::FilePath"* sret, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base3CPUC1Ev(%"class.base::CPU"*) unnamed_addr #2

declare i64 @_ZN7content27ParseBaseFrequencyFromCpuidEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMaxFrequencyEv(%"class.content::SysfsCpufreqCoreParser"*) local_unnamed_addr #2

declare i64 @_ZN7content22SysfsCpufreqCoreParser16ReadMinFrequencyEv(%"class.content::SysfsCpufreqCoreParser"*) local_unnamed_addr #2

declare i64 @_ZN7content22SysfsCpufreqCoreParser20ReadCurrentFrequencyEv(%"class.content::SysfsCpufreqCoreParser"*) local_unnamed_addr #2

declare i64 @_ZN7content22SysfsCpufreqCoreParser17ReadBaseFrequencyEv(%"class.content::SysfsCpufreqCoreParser"*) local_unnamed_addr #2

declare double @_ZN7content8CpuProbe9CoreSpeedEdddd(double, double, double, double) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN7content22SysfsCpufreqCoreParserC1ERKN4base8FilePathE(%"class.content::SysfsCpufreqCoreParser"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content22SysfsCpufreqCoreParserD1Ev(%"class.content::SysfsCpufreqCoreParser"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN7content22SysfsCpufreqCoreParserENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.8"*, %"class.std::__1::unique_ptr.10"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.10"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.10"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.10"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.10"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.10"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.10"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.10"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.10"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.10"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.10"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.content::SysfsCpufreqCoreParser"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.10"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.10"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.10"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.10"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.10"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.10"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.10"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.10"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.10"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.10"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.10"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.10"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.10"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.10"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.10"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.10"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.10"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.10"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.10"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.10"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.10"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.10"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.10"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.10"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.10"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.10"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.10"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.10"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.10"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.10"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.10"*
  %138 = icmp eq %"class.std::__1::unique_ptr.10"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.10"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.content::SysfsCpufreqCoreParser"*, %"class.content::SysfsCpufreqCoreParser"** %142, align 8
  store %"class.content::SysfsCpufreqCoreParser"* null, %"class.content::SysfsCpufreqCoreParser"** %142, align 8
  %144 = icmp eq %"class.content::SysfsCpufreqCoreParser"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN7content22SysfsCpufreqCoreParserD1Ev(%"class.content::SysfsCpufreqCoreParser"* nonnull %143) #10
  %146 = bitcast %"class.content::SysfsCpufreqCoreParser"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.10"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
