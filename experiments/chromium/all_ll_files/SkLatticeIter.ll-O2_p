; ModuleID = '../../third_party/skia/src/core/SkLatticeIter.cpp'
source_filename = "../../third_party/skia/src/core/SkLatticeIter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkLatticeIter = type { %class.SkTArray, %class.SkTArray, %class.SkTArray.0, %class.SkTArray.0, %class.SkTArray.1, %class.SkTArray.2, i32, i32, i32, i32 }
%class.SkTArray = type { i32*, i64 }
%class.SkTArray.0 = type { float*, i64 }
%class.SkTArray.1 = type { i8*, i64 }
%class.SkTArray.2 = type { i32*, i64 }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }

$_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayIN8SkCanvas7Lattice8RectTypeELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN8SkTArrayIjLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

@_ZN13SkLatticeIterC1ERKN8SkCanvas7LatticeERK6SkRect = hidden unnamed_addr alias void (%class.SkLatticeIter*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*), void (%class.SkLatticeIter*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*)* @_ZN13SkLatticeIterC2ERKN8SkCanvas7LatticeERK6SkRect
@_ZN13SkLatticeIterC1EiiRK7SkIRectRK6SkRect = hidden unnamed_addr alias void (%class.SkLatticeIter*, i32, i32, %struct.SkIRect*, %struct.SkRect*), void (%class.SkLatticeIter*, i32, i32, %struct.SkIRect*, %struct.SkRect*)* @_ZN13SkLatticeIterC2EiiRK7SkIRectRK6SkRect

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkLatticeIter5ValidEiiRKN8SkCanvas7LatticeE(i32, i32, %"struct.SkCanvas::Lattice"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 5
  %5 = bitcast %struct.SkIRect** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds i8, i8* %6, i64 4
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %6, i64 12
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %14 to i64
  %19 = sext i32 %8 to i64
  %20 = sub nsw i64 %18, %19
  %21 = sext i32 %17 to i64
  %22 = sext i32 %11 to i64
  %23 = sub nsw i64 %21, %22
  %24 = icmp slt i64 %20, 1
  %25 = icmp slt i64 %23, 1
  %26 = or i1 %24, %25
  br i1 %26, label %110, label %27

27:                                               ; preds = %3
  %28 = or i64 %23, %20
  %29 = add nsw i64 %28, 2147483648
  %30 = icmp ugt i64 %29, 4294967295
  br i1 %30, label %110, label %31

31:                                               ; preds = %27
  %32 = icmp slt i32 %0, 1
  %33 = icmp slt i32 %1, 1
  %34 = or i1 %32, %33
  br i1 %34, label %110, label %35

35:                                               ; preds = %31
  %36 = or i32 %1, %0
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %37, 2147483648
  %39 = icmp ugt i64 %38, 4294967295
  %40 = or i32 %11, %8
  %41 = icmp slt i32 %40, 0
  %42 = or i1 %39, %41
  %43 = icmp sgt i32 %14, %0
  %44 = or i1 %43, %42
  %45 = icmp sle i32 %17, %1
  %46 = xor i1 %44, true
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %110

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = icmp eq i32 %50, 1
  br i1 %53, label %54, label %59

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %8, %57
  br label %59

59:                                               ; preds = %52, %54, %48
  %60 = phi i1 [ false, %48 ], [ true, %52 ], [ %58, %54 ]
  %61 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, 1
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = icmp eq i32 %62, 1
  br i1 %65, label %66, label %74

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 1
  %68 = load i32*, i32** %67, align 8
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %11, %69
  br label %71

71:                                               ; preds = %66, %59
  %72 = phi i1 [ false, %59 ], [ %70, %66 ]
  %73 = or i1 %60, %72
  br i1 %73, label %74, label %110

74:                                               ; preds = %64, %71
  %75 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp sgt i32 %50, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %74
  %79 = add nsw i32 %8, -1
  %80 = zext i32 %50 to i64
  br label %83

81:                                               ; preds = %83
  %82 = icmp eq i64 %91, %80
  br i1 %82, label %92, label %83

83:                                               ; preds = %81, %78
  %84 = phi i64 [ 0, %78 ], [ %91, %81 ]
  %85 = phi i32 [ %79, %78 ], [ %87, %81 ]
  %86 = getelementptr inbounds i32, i32* %76, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %85, %87
  %89 = icmp slt i32 %87, %14
  %90 = and i1 %88, %89
  %91 = add nuw nsw i64 %84, 1
  br i1 %90, label %81, label %110

92:                                               ; preds = %81, %74
  %93 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %2, i64 0, i32 1
  %94 = load i32*, i32** %93, align 8
  %95 = icmp sgt i32 %62, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %92
  %97 = add nsw i32 %11, -1
  %98 = zext i32 %62 to i64
  br label %101

99:                                               ; preds = %101
  %100 = icmp eq i64 %109, %98
  br i1 %100, label %110, label %101

101:                                              ; preds = %99, %96
  %102 = phi i64 [ 0, %96 ], [ %109, %99 ]
  %103 = phi i32 [ %97, %96 ], [ %105, %99 ]
  %104 = getelementptr inbounds i32, i32* %94, i64 %102
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %103, %105
  %107 = icmp slt i32 %105, %17
  %108 = and i1 %106, %107
  %109 = add nuw nsw i64 %102, 1
  br i1 %108, label %99, label %110

110:                                              ; preds = %83, %101, %99, %3, %27, %31, %92, %71, %35
  %111 = phi i1 [ false, %35 ], [ false, %71 ], [ true, %92 ], [ false, %31 ], [ false, %27 ], [ false, %3 ], [ false, %101 ], [ true, %99 ], [ false, %83 ]
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkLatticeIterC2ERKN8SkCanvas7LatticeERK6SkRect(%class.SkLatticeIter*, %"struct.SkCanvas::Lattice"* nocapture readonly dereferenceable(48), %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 0
  store i32* null, i32** %6, align 8
  store i64 1, i64* %5, align 8
  %7 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %7, i64 0, i32 0
  store i32* null, i32** %9, align 8
  store i64 1, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %10, i64 0, i32 0
  store float* null, float** %12, align 8
  store i64 1, i64* %11, align 8
  %13 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3
  %14 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 1
  %15 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %13, i64 0, i32 0
  store float* null, float** %15, align 8
  store i64 1, i64* %14, align 8
  %16 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4
  %17 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 1
  %18 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %16, i64 0, i32 0
  store i8* null, i8** %18, align 8
  store i64 1, i64* %17, align 8
  %19 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5
  %20 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5, i32 1
  %21 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %19, i64 0, i32 0
  store i32* null, i32** %21, align 8
  store i64 1, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 5
  %31 = bitcast %struct.SkIRect** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %32, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i8, i8* %32, i64 8
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i8, i8* %32, i64 12
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %25, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %3
  %46 = load i32, i32* %23, align 4
  %47 = icmp eq i32 %34, %46
  %48 = getelementptr inbounds i32, i32* %23, i64 1
  %49 = add nsw i32 %25, -1
  br i1 %47, label %51, label %50

50:                                               ; preds = %45, %3
  br label %51

51:                                               ; preds = %45, %50
  %52 = phi i32 [ %25, %50 ], [ %49, %45 ]
  %53 = phi i1 [ false, %50 ], [ true, %45 ]
  %54 = phi i32* [ %23, %50 ], [ %48, %45 ]
  %55 = icmp sgt i32 %29, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = load i32, i32* %27, align 4
  %58 = icmp eq i32 %37, %57
  %59 = getelementptr inbounds i32, i32* %27, i64 1
  %60 = add nsw i32 %29, -1
  br i1 %58, label %62, label %61

61:                                               ; preds = %56, %51
  br label %62

62:                                               ; preds = %56, %61
  %63 = phi i32 [ %29, %61 ], [ %60, %56 ]
  %64 = phi i1 [ false, %61 ], [ true, %56 ]
  %65 = phi i32* [ %27, %61 ], [ %59, %56 ]
  %66 = icmp eq i32 %52, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = sub nsw i32 %40, %34
  %69 = select i1 %53, i32 %68, i32 0
  br label %122

70:                                               ; preds = %62
  br i1 %53, label %71, label %74

71:                                               ; preds = %70
  %72 = load i32, i32* %54, align 4
  %73 = sub nsw i32 %72, %34
  br label %74

74:                                               ; preds = %71, %70
  %75 = phi i32 [ 1, %71 ], [ 0, %70 ]
  %76 = phi i32 [ %73, %71 ], [ 0, %70 ]
  %77 = icmp slt i32 %75, %52
  br i1 %77, label %78, label %122

78:                                               ; preds = %74
  %79 = zext i32 %75 to i64
  %80 = sext i32 %52 to i64
  %81 = xor i64 %79, -1
  %82 = add nsw i64 %81, %80
  %83 = and i64 %82, 2
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %78
  %86 = getelementptr inbounds i32, i32* %54, i64 %79
  %87 = load i32, i32* %86, align 4
  %88 = add nuw nsw i64 %79, 1
  %89 = icmp slt i64 %88, %80
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds i32, i32* %54, i64 %88
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %90, %85
  %94 = phi i32 [ %92, %90 ], [ %40, %85 ]
  %95 = sub i32 %76, %87
  %96 = add i32 %94, %95
  %97 = or i64 %79, 2
  br label %98

98:                                               ; preds = %93, %78
  %99 = phi i64 [ %79, %78 ], [ %97, %93 ]
  %100 = phi i32 [ %76, %78 ], [ %96, %93 ]
  %101 = phi i32 [ undef, %78 ], [ %96, %93 ]
  %102 = icmp ult i64 %82, 2
  br i1 %102, label %122, label %103

103:                                              ; preds = %98, %472
  %104 = phi i64 [ %476, %472 ], [ %99, %98 ]
  %105 = phi i32 [ %475, %472 ], [ %100, %98 ]
  %106 = getelementptr inbounds i32, i32* %54, i64 %104
  %107 = load i32, i32* %106, align 4
  %108 = add nuw nsw i64 %104, 1
  %109 = icmp slt i64 %108, %80
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = getelementptr inbounds i32, i32* %54, i64 %108
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %103
  %114 = phi i32 [ %112, %110 ], [ %40, %103 ]
  %115 = sub i32 %105, %107
  %116 = add i32 %114, %115
  %117 = add nuw nsw i64 %104, 2
  %118 = getelementptr inbounds i32, i32* %54, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = add nuw nsw i64 %104, 3
  %121 = icmp slt i64 %120, %80
  br i1 %121, label %469, label %472

122:                                              ; preds = %98, %472, %67, %74
  %123 = phi i32 [ %69, %67 ], [ %76, %74 ], [ %101, %98 ], [ %475, %472 ]
  %124 = sub i32 %40, %34
  %125 = sub i32 %124, %123
  %126 = icmp eq i32 %63, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = sub nsw i32 %43, %37
  %129 = select i1 %64, i32 %128, i32 0
  br label %182

130:                                              ; preds = %122
  br i1 %64, label %131, label %134

131:                                              ; preds = %130
  %132 = load i32, i32* %65, align 4
  %133 = sub nsw i32 %132, %37
  br label %134

134:                                              ; preds = %131, %130
  %135 = phi i32 [ 1, %131 ], [ 0, %130 ]
  %136 = phi i32 [ %133, %131 ], [ 0, %130 ]
  %137 = icmp slt i32 %135, %63
  br i1 %137, label %138, label %182

138:                                              ; preds = %134
  %139 = zext i32 %135 to i64
  %140 = sext i32 %63 to i64
  %141 = xor i64 %139, -1
  %142 = add nsw i64 %141, %140
  %143 = and i64 %142, 2
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %158

145:                                              ; preds = %138
  %146 = getelementptr inbounds i32, i32* %65, i64 %139
  %147 = load i32, i32* %146, align 4
  %148 = add nuw nsw i64 %139, 1
  %149 = icmp slt i64 %148, %140
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = getelementptr inbounds i32, i32* %65, i64 %148
  %152 = load i32, i32* %151, align 4
  br label %153

153:                                              ; preds = %150, %145
  %154 = phi i32 [ %152, %150 ], [ %43, %145 ]
  %155 = sub i32 %136, %147
  %156 = add i32 %154, %155
  %157 = or i64 %139, 2
  br label %158

158:                                              ; preds = %153, %138
  %159 = phi i64 [ %139, %138 ], [ %157, %153 ]
  %160 = phi i32 [ %136, %138 ], [ %156, %153 ]
  %161 = phi i32 [ undef, %138 ], [ %156, %153 ]
  %162 = icmp ult i64 %142, 2
  br i1 %162, label %182, label %163

163:                                              ; preds = %158, %463
  %164 = phi i64 [ %467, %463 ], [ %159, %158 ]
  %165 = phi i32 [ %466, %463 ], [ %160, %158 ]
  %166 = getelementptr inbounds i32, i32* %65, i64 %164
  %167 = load i32, i32* %166, align 4
  %168 = add nuw nsw i64 %164, 1
  %169 = icmp slt i64 %168, %140
  br i1 %169, label %170, label %173

170:                                              ; preds = %163
  %171 = getelementptr inbounds i32, i32* %65, i64 %168
  %172 = load i32, i32* %171, align 4
  br label %173

173:                                              ; preds = %170, %163
  %174 = phi i32 [ %172, %170 ], [ %43, %163 ]
  %175 = sub i32 %165, %167
  %176 = add i32 %174, %175
  %177 = add nuw nsw i64 %164, 2
  %178 = getelementptr inbounds i32, i32* %65, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = add nuw nsw i64 %164, 3
  %181 = icmp slt i64 %180, %140
  br i1 %181, label %460, label %463

182:                                              ; preds = %158, %463, %127, %134
  %183 = phi i32 [ %129, %127 ], [ %136, %134 ], [ %161, %158 ], [ %466, %463 ]
  %184 = sub i32 %43, %37
  %185 = sub i32 %184, %183
  %186 = add nsw i32 %52, 2
  store i64 1, i64* %5, align 8
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %4, i32 %186, i32 0) #4
  %187 = load i64, i64* %5, align 8
  %188 = shl i32 %186, 1
  %189 = zext i32 %188 to i64
  %190 = and i64 %187, -8589934591
  %191 = or i64 %190, %189
  store i64 %191, i64* %5, align 8
  %192 = load i64, i64* %11, align 8
  %193 = and i64 %192, -4294967295
  store i64 %193, i64* %11, align 8
  tail call void @_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.0* %10, i32 %186, i32 0) #4
  %194 = load i64, i64* %11, align 8
  %195 = and i64 %194, -8589934591
  %196 = or i64 %195, %189
  store i64 %196, i64* %11, align 8
  %197 = load float*, float** %12, align 8
  %198 = load i32*, i32** %6, align 8
  %199 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %202 = load float, float* %201, align 4
  %203 = fsub float %202, %200
  %204 = sitofp i32 %125 to float
  %205 = fcmp oge float %203, %204
  br i1 %205, label %206, label %210

206:                                              ; preds = %182
  %207 = fsub float %203, %204
  %208 = sitofp i32 %123 to float
  %209 = fdiv float %207, %208
  br label %212

210:                                              ; preds = %182
  %211 = fdiv float %203, %204
  br label %212

212:                                              ; preds = %210, %206
  %213 = phi float [ %209, %206 ], [ %211, %210 ]
  store i32 %34, i32* %198, align 4
  store float %200, float* %197, align 4
  %214 = icmp sgt i32 %52, 0
  br i1 %214, label %215, label %268

215:                                              ; preds = %212
  %216 = zext i32 %52 to i64
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i32, i32* %198, i64 %217
  %219 = getelementptr float, float* %197, i64 %217
  %220 = bitcast float* %219 to i32*
  %221 = icmp ult i32* %198, %220
  %222 = bitcast i32* %218 to float*
  %223 = icmp ult float* %197, %222
  %224 = and i1 %221, %223
  br i1 %224, label %225, label %246

225:                                              ; preds = %215, %225
  %226 = phi i64 [ %230, %225 ], [ 0, %215 ]
  %227 = phi i1 [ %244, %225 ], [ %53, %215 ]
  %228 = getelementptr inbounds i32, i32* %54, i64 %226
  %229 = load i32, i32* %228, align 4
  %230 = add nuw nsw i64 %226, 1
  %231 = getelementptr inbounds i32, i32* %198, i64 %230
  store i32 %229, i32* %231, align 4
  %232 = getelementptr inbounds i32, i32* %198, i64 %226
  %233 = load i32, i32* %232, align 4
  %234 = sub nsw i32 %229, %233
  %235 = sitofp i32 %234 to float
  %236 = fmul float %213, %235
  %237 = select i1 %227, float %236, float %235
  %238 = select i1 %227, float 0.000000e+00, float %236
  %239 = select i1 %205, float %237, float %238
  %240 = getelementptr inbounds float, float* %197, i64 %226
  %241 = load float, float* %240, align 4
  %242 = fadd float %241, %239
  %243 = getelementptr inbounds float, float* %197, i64 %230
  store float %242, float* %243, align 4
  %244 = xor i1 %227, true
  %245 = icmp eq i64 %230, %216
  br i1 %245, label %268, label %225

246:                                              ; preds = %215
  %247 = load i32, i32* %198, align 4
  %248 = load float, float* %197, align 4
  br label %249

249:                                              ; preds = %249, %246
  %250 = phi float [ %248, %246 ], [ %264, %249 ]
  %251 = phi i32 [ %247, %246 ], [ %255, %249 ]
  %252 = phi i64 [ 0, %246 ], [ %256, %249 ]
  %253 = phi i1 [ %53, %246 ], [ %266, %249 ]
  %254 = getelementptr inbounds i32, i32* %54, i64 %252
  %255 = load i32, i32* %254, align 4
  %256 = add nuw nsw i64 %252, 1
  %257 = getelementptr inbounds i32, i32* %198, i64 %256
  store i32 %255, i32* %257, align 4
  %258 = sub nsw i32 %255, %251
  %259 = sitofp i32 %258 to float
  %260 = fmul float %213, %259
  %261 = select i1 %253, float %260, float %259
  %262 = select i1 %253, float 0.000000e+00, float %260
  %263 = select i1 %205, float %261, float %262
  %264 = fadd float %250, %263
  %265 = getelementptr inbounds float, float* %197, i64 %256
  store float %264, float* %265, align 4
  %266 = xor i1 %253, true
  %267 = icmp eq i64 %256, %216
  br i1 %267, label %268, label %249

268:                                              ; preds = %249, %225, %212
  %269 = add nsw i32 %52, 1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i32, i32* %198, i64 %270
  store i32 %40, i32* %271, align 4
  %272 = getelementptr inbounds float, float* %197, i64 %270
  store float %202, float* %272, align 4
  %273 = add nsw i32 %63, 2
  %274 = load i64, i64* %8, align 8
  %275 = and i64 %274, -4294967295
  store i64 %275, i64* %8, align 8
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %7, i32 %273, i32 0) #4
  %276 = load i64, i64* %8, align 8
  %277 = shl i32 %273, 1
  %278 = zext i32 %277 to i64
  %279 = and i64 %276, -8589934591
  %280 = or i64 %279, %278
  store i64 %280, i64* %8, align 8
  %281 = load i64, i64* %14, align 8
  %282 = and i64 %281, -4294967295
  store i64 %282, i64* %14, align 8
  tail call void @_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.0* %13, i32 %273, i32 0) #4
  %283 = load i64, i64* %14, align 8
  %284 = and i64 %283, -8589934591
  %285 = or i64 %284, %278
  store i64 %285, i64* %14, align 8
  %286 = load float*, float** %15, align 8
  %287 = load i32*, i32** %9, align 8
  %288 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %289 = load float, float* %288, align 4
  %290 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %291 = load float, float* %290, align 4
  %292 = fsub float %291, %289
  %293 = sitofp i32 %185 to float
  %294 = fcmp oge float %292, %293
  br i1 %294, label %295, label %299

295:                                              ; preds = %268
  %296 = fsub float %292, %293
  %297 = sitofp i32 %183 to float
  %298 = fdiv float %296, %297
  br label %301

299:                                              ; preds = %268
  %300 = fdiv float %292, %293
  br label %301

301:                                              ; preds = %299, %295
  %302 = phi float [ %298, %295 ], [ %300, %299 ]
  store i32 %37, i32* %287, align 4
  store float %289, float* %286, align 4
  %303 = icmp sgt i32 %63, 0
  br i1 %303, label %304, label %357

304:                                              ; preds = %301
  %305 = zext i32 %63 to i64
  %306 = add nuw nsw i64 %305, 1
  %307 = getelementptr i32, i32* %287, i64 %306
  %308 = getelementptr float, float* %286, i64 %306
  %309 = bitcast float* %308 to i32*
  %310 = icmp ult i32* %287, %309
  %311 = bitcast i32* %307 to float*
  %312 = icmp ult float* %286, %311
  %313 = and i1 %310, %312
  br i1 %313, label %314, label %335

314:                                              ; preds = %304, %314
  %315 = phi i64 [ %319, %314 ], [ 0, %304 ]
  %316 = phi i1 [ %333, %314 ], [ %64, %304 ]
  %317 = getelementptr inbounds i32, i32* %65, i64 %315
  %318 = load i32, i32* %317, align 4
  %319 = add nuw nsw i64 %315, 1
  %320 = getelementptr inbounds i32, i32* %287, i64 %319
  store i32 %318, i32* %320, align 4
  %321 = getelementptr inbounds i32, i32* %287, i64 %315
  %322 = load i32, i32* %321, align 4
  %323 = sub nsw i32 %318, %322
  %324 = sitofp i32 %323 to float
  %325 = fmul float %302, %324
  %326 = select i1 %316, float %325, float %324
  %327 = select i1 %316, float 0.000000e+00, float %325
  %328 = select i1 %294, float %326, float %327
  %329 = getelementptr inbounds float, float* %286, i64 %315
  %330 = load float, float* %329, align 4
  %331 = fadd float %330, %328
  %332 = getelementptr inbounds float, float* %286, i64 %319
  store float %331, float* %332, align 4
  %333 = xor i1 %316, true
  %334 = icmp eq i64 %319, %305
  br i1 %334, label %357, label %314

335:                                              ; preds = %304
  %336 = load i32, i32* %287, align 4
  %337 = load float, float* %286, align 4
  br label %338

338:                                              ; preds = %338, %335
  %339 = phi float [ %337, %335 ], [ %353, %338 ]
  %340 = phi i32 [ %336, %335 ], [ %344, %338 ]
  %341 = phi i64 [ 0, %335 ], [ %345, %338 ]
  %342 = phi i1 [ %64, %335 ], [ %355, %338 ]
  %343 = getelementptr inbounds i32, i32* %65, i64 %341
  %344 = load i32, i32* %343, align 4
  %345 = add nuw nsw i64 %341, 1
  %346 = getelementptr inbounds i32, i32* %287, i64 %345
  store i32 %344, i32* %346, align 4
  %347 = sub nsw i32 %344, %340
  %348 = sitofp i32 %347 to float
  %349 = fmul float %302, %348
  %350 = select i1 %342, float %349, float %348
  %351 = select i1 %342, float 0.000000e+00, float %349
  %352 = select i1 %294, float %350, float %351
  %353 = fadd float %339, %352
  %354 = getelementptr inbounds float, float* %286, i64 %345
  store float %353, float* %354, align 4
  %355 = xor i1 %342, true
  %356 = icmp eq i64 %345, %305
  br i1 %356, label %357, label %338

357:                                              ; preds = %338, %314, %301
  %358 = add i32 %63, 1
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i32, i32* %287, i64 %359
  store i32 %43, i32* %360, align 4
  %361 = getelementptr inbounds float, float* %286, i64 %359
  store float %291, float* %361, align 4
  %362 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 7
  store i32 0, i32* %362, align 4
  %363 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 6
  store i32 0, i32* %363, align 8
  %364 = mul nsw i32 %358, %269
  %365 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 8
  store i32 %364, i32* %365, align 8
  %366 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 9
  store i32 %364, i32* %366, align 4
  %367 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 2
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %459, label %370

370:                                              ; preds = %357
  tail call void @_ZN8SkTArrayIN8SkCanvas7Lattice8RectTypeELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.1* %16, i32 %364, i32 1) #4
  %371 = load i64, i64* %17, align 8
  %372 = lshr i64 %371, 1
  %373 = trunc i64 %372 to i32
  %374 = add i32 %364, %373
  %375 = shl i32 %374, 1
  %376 = zext i32 %375 to i64
  %377 = and i64 %371, -4294967295
  %378 = or i64 %377, %376
  store i64 %378, i64* %17, align 8
  %379 = load i32, i32* %365, align 8
  tail call void @_ZN8SkTArrayIjLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2* %19, i32 %379, i32 1) #4
  %380 = load i64, i64* %20, align 8
  %381 = lshr i64 %380, 1
  %382 = trunc i64 %381 to i32
  %383 = add i32 %379, %382
  %384 = shl i32 %383, 1
  %385 = zext i32 %384 to i64
  %386 = and i64 %380, -4294967295
  %387 = or i64 %386, %385
  store i64 %387, i64* %20, align 8
  %388 = load i8*, i8** %367, align 8
  %389 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %1, i64 0, i32 6
  %390 = load i32*, i32** %389, align 8
  %391 = icmp eq i32 %63, %29
  %392 = icmp eq i32 %52, %25
  %393 = add i32 %25, 1
  %394 = sext i32 %393 to i64
  %395 = icmp slt i32 %63, 0
  br i1 %395, label %407, label %396

396:                                              ; preds = %370
  %397 = getelementptr inbounds i32, i32* %390, i64 %394
  %398 = select i1 %391, i32* %390, i32* %397
  %399 = getelementptr inbounds i8, i8* %388, i64 %394
  %400 = select i1 %391, i8* %388, i8* %399
  %401 = icmp slt i32 %25, 0
  br label %402

402:                                              ; preds = %414, %396
  %403 = phi i32 [ 0, %396 ], [ %418, %414 ]
  %404 = phi i32 [ 0, %396 ], [ %417, %414 ]
  %405 = phi i32* [ %398, %396 ], [ %416, %414 ]
  %406 = phi i8* [ %400, %396 ], [ %415, %414 ]
  br i1 %401, label %414, label %420

407:                                              ; preds = %414, %370
  %408 = load i64, i64* %17, align 8
  %409 = and i64 %408, 4294967294
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %459, label %411

411:                                              ; preds = %407
  %412 = lshr i64 %408, 1
  %413 = and i64 %412, 2147483647
  br label %447

414:                                              ; preds = %441, %402
  %415 = phi i8* [ %406, %402 ], [ %444, %441 ]
  %416 = phi i32* [ %405, %402 ], [ %443, %441 ]
  %417 = phi i32 [ %404, %402 ], [ %442, %441 ]
  %418 = add nuw i32 %403, 1
  %419 = icmp eq i32 %418, %358
  br i1 %419, label %407, label %402

420:                                              ; preds = %402, %441
  %421 = phi i32 [ %445, %441 ], [ 0, %402 ]
  %422 = phi i32 [ %442, %441 ], [ %404, %402 ]
  %423 = phi i32* [ %443, %441 ], [ %405, %402 ]
  %424 = phi i8* [ %444, %441 ], [ %406, %402 ]
  %425 = icmp ne i32 %421, 0
  %426 = or i1 %392, %425
  br i1 %426, label %427, label %441

427:                                              ; preds = %420
  %428 = load i8, i8* %424, align 1
  %429 = load i8*, i8** %18, align 8
  %430 = sext i32 %422 to i64
  %431 = getelementptr inbounds i8, i8* %429, i64 %430
  store i8 %428, i8* %431, align 1
  %432 = load i8, i8* %424, align 1
  %433 = icmp eq i8 %432, 2
  br i1 %433, label %434, label %436

434:                                              ; preds = %427
  %435 = load i32, i32* %423, align 4
  br label %436

436:                                              ; preds = %427, %434
  %437 = phi i32 [ %435, %434 ], [ 0, %427 ]
  %438 = load i32*, i32** %21, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %430
  store i32 %437, i32* %439, align 4
  %440 = add nsw i32 %422, 1
  br label %441

441:                                              ; preds = %420, %436
  %442 = phi i32 [ %440, %436 ], [ %422, %420 ]
  %443 = getelementptr inbounds i32, i32* %423, i64 1
  %444 = getelementptr inbounds i8, i8* %424, i64 1
  %445 = add nuw i32 %421, 1
  %446 = icmp eq i32 %445, %393
  br i1 %446, label %414, label %420

447:                                              ; preds = %411, %456
  %448 = phi i64 [ 0, %411 ], [ %457, %456 ]
  %449 = load i8*, i8** %18, align 8
  %450 = getelementptr inbounds i8, i8* %449, i64 %448
  %451 = load i8, i8* %450, align 1
  %452 = icmp eq i8 %451, 1
  br i1 %452, label %453, label %456

453:                                              ; preds = %447
  %454 = load i32, i32* %366, align 4
  %455 = add nsw i32 %454, -1
  store i32 %455, i32* %366, align 4
  br label %456

456:                                              ; preds = %447, %453
  %457 = add nuw nsw i64 %448, 1
  %458 = icmp ult i64 %457, %413
  br i1 %458, label %447, label %459

459:                                              ; preds = %456, %407, %357
  ret void

460:                                              ; preds = %173
  %461 = getelementptr inbounds i32, i32* %65, i64 %180
  %462 = load i32, i32* %461, align 4
  br label %463

463:                                              ; preds = %460, %173
  %464 = phi i32 [ %462, %460 ], [ %43, %173 ]
  %465 = sub i32 %176, %179
  %466 = add i32 %464, %465
  %467 = add nuw nsw i64 %164, 4
  %468 = icmp slt i64 %467, %140
  br i1 %468, label %163, label %182

469:                                              ; preds = %113
  %470 = getelementptr inbounds i32, i32* %54, i64 %120
  %471 = load i32, i32* %470, align 4
  br label %472

472:                                              ; preds = %469, %113
  %473 = phi i32 [ %471, %469 ], [ %40, %113 ]
  %474 = sub i32 %116, %119
  %475 = add i32 %473, %474
  %476 = add nuw nsw i64 %104, 4
  %477 = icmp slt i64 %476, %80
  br i1 %477, label %103, label %122
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN13SkLatticeIter5ValidEiiRK7SkIRect(i32, i32, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = sub nsw i64 %6, %9
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = sub nsw i64 %13, %16
  %18 = icmp slt i64 %10, 1
  %19 = icmp slt i64 %17, 1
  %20 = or i1 %18, %19
  br i1 %20, label %42, label %21

21:                                               ; preds = %3
  %22 = or i64 %17, %10
  %23 = add nsw i64 %22, 2147483648
  %24 = icmp ugt i64 %23, 4294967295
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = icmp slt i32 %0, 1
  %27 = icmp slt i32 %1, 1
  %28 = or i1 %26, %27
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = or i32 %1, %0
  %31 = sext i32 %30 to i64
  %32 = add nsw i64 %31, 2147483648
  %33 = icmp ugt i64 %32, 4294967295
  %34 = or i32 %15, %8
  %35 = icmp slt i32 %34, 0
  %36 = or i1 %33, %35
  %37 = icmp sgt i32 %5, %0
  %38 = or i1 %37, %36
  %39 = icmp sle i32 %12, %1
  %40 = xor i1 %38, true
  %41 = and i1 %39, %40
  br label %42

42:                                               ; preds = %3, %29, %25, %21
  %43 = phi i1 [ false, %21 ], [ %41, %29 ], [ false, %25 ], [ false, %3 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkLatticeIterC2EiiRK7SkIRectRK6SkRect(%class.SkLatticeIter*, i32, i32, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %9, i64 0, i32 0
  store i32* null, i32** %11, align 8
  store i64 1, i64* %10, align 8
  %12 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 1
  %14 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %12, i64 0, i32 0
  store float* null, float** %14, align 8
  store i64 1, i64* %13, align 8
  %15 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 1
  %17 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %15, i64 0, i32 0
  store float* null, float** %17, align 8
  store i64 1, i64* %16, align 8
  %18 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 1
  %19 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 0
  store i8* null, i8** %19, align 8
  store i64 1, i64* %18, align 8
  %20 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5, i32 1
  %21 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5, i32 0
  store i32* null, i32** %21, align 8
  store i64 1, i64* %20, align 8
  store i64 1, i64* %7, align 8
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %6, i32 4, i32 0) #4
  %22 = load i64, i64* %7, align 8
  %23 = and i64 %22, -8589934591
  %24 = or i64 %23, 8
  store i64 %24, i64* %7, align 8
  %25 = load i64, i64* %10, align 8
  %26 = and i64 %25, -4294967295
  store i64 %26, i64* %10, align 8
  tail call void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %9, i32 4, i32 0) #4
  %27 = load i64, i64* %10, align 8
  %28 = and i64 %27, -8589934591
  %29 = or i64 %28, 8
  store i64 %29, i64* %10, align 8
  %30 = load i64, i64* %13, align 8
  %31 = and i64 %30, -4294967295
  store i64 %31, i64* %13, align 8
  tail call void @_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.0* %12, i32 4, i32 0) #4
  %32 = load i64, i64* %13, align 8
  %33 = and i64 %32, -8589934591
  %34 = or i64 %33, 8
  store i64 %34, i64* %13, align 8
  %35 = load i64, i64* %16, align 8
  %36 = and i64 %35, -4294967295
  store i64 %36, i64* %16, align 8
  tail call void @_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.0* %15, i32 4, i32 0) #4
  %37 = load i64, i64* %16, align 8
  %38 = and i64 %37, -8589934591
  %39 = or i64 %38, 8
  store i64 %39, i64* %16, align 8
  %40 = load i32*, i32** %8, align 8
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = fptosi float %43 to i32
  %45 = load i32*, i32** %8, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 1
  store i32 %44, i32* %46, align 4
  %47 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = fptosi float %49 to i32
  %51 = load i32*, i32** %8, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 2
  store i32 %50, i32* %52, align 4
  %53 = sitofp i32 %1 to float
  %54 = fptosi float %53 to i32
  %55 = load i32*, i32** %8, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 3
  store i32 %54, i32* %56, align 4
  %57 = load i32*, i32** %11, align 8
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sitofp i32 %59 to float
  %61 = fptosi float %60 to i32
  %62 = load i32*, i32** %11, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 1
  store i32 %61, i32* %63, align 4
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = fptosi float %66 to i32
  %68 = load i32*, i32** %11, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 2
  store i32 %67, i32* %69, align 4
  %70 = sitofp i32 %2 to float
  %71 = fptosi float %70 to i32
  %72 = load i32*, i32** %11, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 3
  store i32 %71, i32* %73, align 4
  %74 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %75 = bitcast %struct.SkRect* %4 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = bitcast %class.SkTArray.0* %12 to i32**
  %78 = load i32*, i32** %77, align 8
  store i32 %76, i32* %78, align 4
  %79 = load float, float* %74, align 4
  %80 = load i32, i32* %41, align 4
  %81 = sitofp i32 %80 to float
  %82 = fadd float %79, %81
  %83 = load float*, float** %14, align 8
  %84 = getelementptr inbounds float, float* %83, i64 1
  store float %82, float* %84, align 4
  %85 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %86 = load float, float* %85, align 4
  %87 = load i32, i32* %47, align 4
  %88 = sub nsw i32 %1, %87
  %89 = sitofp i32 %88 to float
  %90 = fsub float %86, %89
  %91 = load float*, float** %14, align 8
  %92 = getelementptr inbounds float, float* %91, i64 2
  store float %90, float* %92, align 4
  %93 = bitcast float* %85 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = load float*, float** %14, align 8
  %96 = getelementptr inbounds float, float* %95, i64 3
  %97 = bitcast float* %96 to i32*
  store i32 %94, i32* %97, align 4
  %98 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = bitcast %class.SkTArray.0* %15 to i32**
  %102 = load i32*, i32** %101, align 8
  store i32 %100, i32* %102, align 4
  %103 = load float, float* %98, align 4
  %104 = load i32, i32* %58, align 4
  %105 = sitofp i32 %104 to float
  %106 = fadd float %103, %105
  %107 = load float*, float** %17, align 8
  %108 = getelementptr inbounds float, float* %107, i64 1
  store float %106, float* %108, align 4
  %109 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %110 = load float, float* %109, align 4
  %111 = load i32, i32* %64, align 4
  %112 = sub nsw i32 %2, %111
  %113 = sitofp i32 %112 to float
  %114 = fsub float %110, %113
  %115 = load float*, float** %17, align 8
  %116 = getelementptr inbounds float, float* %115, i64 2
  store float %114, float* %116, align 4
  %117 = bitcast float* %109 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = load float*, float** %17, align 8
  %120 = getelementptr inbounds float, float* %119, i64 3
  %121 = bitcast float* %120 to i32*
  store i32 %118, i32* %121, align 4
  %122 = load float*, float** %14, align 8
  %123 = getelementptr inbounds float, float* %122, i64 1
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds float, float* %122, i64 2
  %126 = load float, float* %125, align 4
  %127 = fcmp ogt float %124, %126
  br i1 %127, label %128, label %148

128:                                              ; preds = %5
  %129 = load float, float* %122, align 4
  %130 = getelementptr inbounds float, float* %122, i64 3
  %131 = load float, float* %130, align 4
  %132 = fsub float %131, %129
  %133 = load i32, i32* %41, align 4
  %134 = sitofp i32 %133 to float
  %135 = fmul float %132, %134
  %136 = load i32, i32* %47, align 4
  %137 = add i32 %133, %1
  %138 = sub i32 %137, %136
  %139 = sitofp i32 %138 to float
  %140 = fdiv float %135, %139
  %141 = fadd float %129, %140
  store float %141, float* %123, align 4
  %142 = load float*, float** %14, align 8
  %143 = getelementptr inbounds float, float* %142, i64 1
  %144 = bitcast float* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds float, float* %142, i64 2
  %147 = bitcast float* %146 to i32*
  store i32 %145, i32* %147, align 4
  br label %148

148:                                              ; preds = %128, %5
  %149 = load float*, float** %17, align 8
  %150 = getelementptr inbounds float, float* %149, i64 1
  %151 = load float, float* %150, align 4
  %152 = getelementptr inbounds float, float* %149, i64 2
  %153 = load float, float* %152, align 4
  %154 = fcmp ogt float %151, %153
  br i1 %154, label %155, label %175

155:                                              ; preds = %148
  %156 = load float, float* %149, align 4
  %157 = getelementptr inbounds float, float* %149, i64 3
  %158 = load float, float* %157, align 4
  %159 = fsub float %158, %156
  %160 = load i32, i32* %58, align 4
  %161 = sitofp i32 %160 to float
  %162 = fmul float %159, %161
  %163 = load i32, i32* %64, align 4
  %164 = add i32 %160, %2
  %165 = sub i32 %164, %163
  %166 = sitofp i32 %165 to float
  %167 = fdiv float %162, %166
  %168 = fadd float %156, %167
  store float %168, float* %150, align 4
  %169 = load float*, float** %17, align 8
  %170 = getelementptr inbounds float, float* %169, i64 1
  %171 = bitcast float* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds float, float* %169, i64 2
  %174 = bitcast float* %173 to i32*
  store i32 %172, i32* %174, align 4
  br label %175

175:                                              ; preds = %155, %148
  %176 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 6
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 9, i32 9>, <4 x i32>* %177, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* nocapture, %struct.SkIRect* nocapture, %struct.SkRect* nocapture, i8*, i32*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 6
  %7 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 7
  %8 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 8
  %10 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 1
  %11 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 4, i32 0
  %12 = load i32, i32* %6, align 8
  %13 = load i32, i32* %7, align 4
  %14 = load i64, i64* %8, align 8
  %15 = load i32, i32* %9, align 8
  %16 = lshr i64 %14, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  %19 = add nsw i32 %18, -1
  br label %20

20:                                               ; preds = %37, %5
  %21 = phi i32 [ %32, %37 ], [ %13, %5 ]
  %22 = phi i32 [ %33, %37 ], [ %12, %5 ]
  %23 = mul nsw i32 %19, %21
  %24 = add nsw i32 %23, %22
  %25 = icmp eq i32 %24, %15
  br i1 %25, label %108, label %26

26:                                               ; preds = %20
  %27 = add nsw i32 %22, 1
  store i32 %27, i32* %6, align 8
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  store i32 0, i32* %6, align 8
  %30 = add nsw i32 %21, 1
  store i32 %30, i32* %7, align 4
  br label %31

31:                                               ; preds = %29, %26
  %32 = phi i32 [ %30, %29 ], [ %21, %26 ]
  %33 = phi i32 [ 0, %29 ], [ %27, %26 ]
  %34 = load i64, i64* %10, align 8
  %35 = and i64 %34, 4294967294
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = load i8*, i8** %11, align 8
  %39 = sext i32 %24 to i64
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %20, label %43

43:                                               ; preds = %31, %37
  %44 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = sext i32 %22 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 1, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = sext i32 %21 to i64
  %52 = getelementptr inbounds i32, i32* %50, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %27 to i64
  %55 = getelementptr inbounds i32, i32* %45, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %21, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %50, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  store i32 %48, i32* %61, align 4
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  store i32 %53, i32* %62, align 4
  %63 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  store i32 %56, i32* %63, align 4
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  store i32 %60, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 0
  %66 = load float*, float** %65, align 8
  %67 = getelementptr inbounds float, float* %66, i64 %46
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 0
  %71 = load float*, float** %70, align 8
  %72 = getelementptr inbounds float, float* %71, i64 %51
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds float, float* %66, i64 %54
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds float, float* %71, i64 %58
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = bitcast %struct.SkRect* %2 to i32*
  store i32 %69, i32* %81, align 4
  %82 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %83 = bitcast float* %82 to i32*
  store i32 %74, i32* %83, align 4
  %84 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %85 = bitcast float* %84 to i32*
  store i32 %77, i32* %85, align 4
  %86 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %87 = bitcast float* %86 to i32*
  store i32 %80, i32* %87, align 4
  %88 = icmp ne i8* %3, null
  %89 = icmp ne i32* %4, null
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %108

91:                                               ; preds = %43
  %92 = load i64, i64* %10, align 8
  %93 = and i64 %92, 4294967294
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  store i8 0, i8* %3, align 1
  br label %108

96:                                               ; preds = %91
  %97 = load i8*, i8** %11, align 8
  %98 = sext i32 %24 to i64
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 2
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %3, align 1
  br i1 %101, label %103, label %108

103:                                              ; preds = %96
  %104 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 5, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 %98
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %4, align 4
  br label %108

108:                                              ; preds = %20, %96, %95, %103, %43
  %109 = phi i1 [ true, %96 ], [ true, %103 ], [ true, %43 ], [ true, %95 ], [ false, %20 ]
  ret i1 %109
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkLatticeIter20mapDstScaleTranslateERK8SkMatrix(%class.SkLatticeIter* nocapture readonly, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4294967294
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 2, i32 0
  br label %24

13:                                               ; preds = %24, %2
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %0, i64 0, i32 3, i32 0
  br label %37

24:                                               ; preds = %11, %24
  %25 = phi i64 [ 0, %11 ], [ %31, %24 ]
  %26 = load float*, float** %12, align 8
  %27 = getelementptr inbounds float, float* %26, i64 %25
  %28 = load float, float* %27, align 4
  %29 = fmul float %6, %28
  %30 = fadd float %4, %29
  store float %30, float* %27, align 4
  %31 = add nuw nsw i64 %25, 1
  %32 = load i64, i64* %7, align 8
  %33 = lshr i64 %32, 1
  %34 = and i64 %33, 2147483647
  %35 = icmp ult i64 %31, %34
  br i1 %35, label %24, label %13

36:                                               ; preds = %37, %13
  ret void

37:                                               ; preds = %22, %37
  %38 = phi i64 [ 0, %22 ], [ %44, %37 ]
  %39 = load float*, float** %23, align 8
  %40 = getelementptr inbounds float, float* %39, i64 %38
  %41 = load float, float* %40, align 4
  %42 = fmul float %17, %41
  %43 = fadd float %15, %42
  store float %43, float* %40, align 4
  %44 = add nuw nsw i64 %38, 1
  %45 = load i64, i64* %18, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp ult i64 %44, %47
  br i1 %48, label %37, label %36
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIiLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #4
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 2
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32*, i32** %49, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %54, align 4
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #4
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIfLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.0*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #4
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.0, %class.SkTArray.0* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 2
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load float*, float** %49, align 8
  %55 = getelementptr inbounds float, float* %54, i64 %51
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = bitcast i8* %53 to i32*
  store i32 %57, i32* %58, align 4
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.0* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #4
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN8SkCanvas7Lattice8RectTypeELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.1*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #4
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #4
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIjLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #4
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 2
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32*, i32** %49, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %51
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %54, align 4
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.2* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #4
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
