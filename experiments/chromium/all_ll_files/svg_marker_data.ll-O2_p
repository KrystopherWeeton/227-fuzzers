; ModuleID = '../../third_party/blink/renderer/core/layout/svg/svg_marker_data.cc'
source_filename = "../../third_party/blink/renderer/core/layout/svg/svg_marker_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGMarkerDataBuilder" = type { %"class.blink::SVGPathConsumer", %"class.WTF::Vector"*, i32, i32, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.blink::SVGPathConsumer" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::MarkerPosition"*, i32, i32 }
%"struct.blink::MarkerPosition" = type { i32, %"class.blink::FloatPoint", float }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"struct.blink::PathElement" = type { i32, %"class.blink::FloatPoint"* }
%"struct.blink::SVGMarkerDataBuilder::SegmentData" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatPoint" }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { i8*, i32, i32 }
%class.SegmentCollector = type { %"class.blink::SVGPathConsumer", %"class.WTF::Vector.18" }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"struct.blink::PathSegmentData"*, i32, i32 }
%"struct.blink::PathSegmentData" = type <{ i32, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, i8, [2 x i8] }>
%"class.blink::SVGPathByteStreamSource" = type { i8*, i8* }
%"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor" = type { %"class.blink::SVGPathNormalizer.base", [4 x i8] }
%"class.blink::SVGPathNormalizer.base" = type <{ %"class.blink::SVGPathConsumer"*, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i32 }>
%"class.blink::SVGPathNormalizer" = type <{ %"class.blink::SVGPathConsumer"*, %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink15SVGPathConsumerD2Ev = comdat any

$_ZN5blink20SVGMarkerDataBuilderD0Ev = comdat any

$_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15PathSegmentDataEEEmm = comdat any

$_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14MarkerPositionEEEmm = comdat any

@_ZTVN5blink20SVGMarkerDataBuilderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPathConsumer"*)* @_ZN5blink15SVGPathConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGMarkerDataBuilder"*)* @_ZN5blink20SVGMarkerDataBuilderD0Ev to i8*), i8* bitcast (void (%"class.blink::SVGMarkerDataBuilder"*, %"struct.blink::PathSegmentData"*)* @_ZN5blink20SVGMarkerDataBuilder11EmitSegmentERKNS_15PathSegmentDataE to i8*)] }, align 8
@_ZTVZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEE16SegmentCollector = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SegmentCollector*)* @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollectorD2Ev to i8*), i8* bitcast (void (%class.SegmentCollector*)* @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollectorD0Ev to i8*), i8* bitcast (void (%class.SegmentCollector*, %"struct.blink::PathSegmentData"*)* @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollector11EmitSegmentES4_ to i8*)] }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15PathSegmentDataEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PathSegmentData]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14MarkerPositionEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MarkerPosition]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder5BuildERKNS_4PathE(%"class.blink::SVGMarkerDataBuilder"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SVGMarkerDataBuilder"* %0 to i8*
  tail call void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"* %1, i8* %3, void (i8*, %"struct.blink::PathElement"*)* nonnull @_ZN5blink20SVGMarkerDataBuilder21UpdateFromPathElementEPvPKNS_11PathElementE) #10
  %4 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  tail call void @_ZN5blink20SVGMarkerDataBuilder11UpdateAngleEb(%"class.blink::SVGMarkerDataBuilder"* %0, i1 zeroext true) #10
  %10 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = tail call dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %13) #10
  %15 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %14, i64 0, i32 0
  store i32 2, i32* %15, align 4
  br label %16

16:                                               ; preds = %2, %9
  ret void
}

declare void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"*, i8*, void (i8*, %"struct.blink::PathElement"*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder21UpdateFromPathElementEPvPKNS_11PathElementE(i8* nocapture, %"struct.blink::PathElement"* nocapture readonly) #0 align 2 {
  %3 = bitcast i8* %0 to %"class.blink::SVGMarkerDataBuilder"*
  tail call void @_ZN5blink20SVGMarkerDataBuilder21UpdateFromPathElementERKNS_11PathElementE(%"class.blink::SVGMarkerDataBuilder"* %3, %"struct.blink::PathElement"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder5FlushEv(%"class.blink::SVGMarkerDataBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  tail call void @_ZN5blink20SVGMarkerDataBuilder11UpdateAngleEb(%"class.blink::SVGMarkerDataBuilder"* %0, i1 zeroext true)
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = tail call dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %11) #10
  %13 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %12, i64 0, i32 0
  store i32 2, i32* %13, align 4
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder21UpdateFromPathElementERKNS_11PathElementE(%"class.blink::SVGMarkerDataBuilder"* nocapture, %"struct.blink::PathElement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGMarkerDataBuilder::SegmentData", align 8
  %4 = alloca %"struct.blink::MarkerPosition", align 4
  %5 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.blink::SVGMarkerDataBuilder::SegmentData", %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::SVGMarkerDataBuilder::SegmentData", %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %3, i64 0, i32 2
  %8 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -1, i64 24, i1 false)
  call void @_ZNK5blink20SVGMarkerDataBuilder26ExtractPathElementFeaturesERKNS_11PathElementE(%"struct.blink::SVGMarkerDataBuilder::SegmentData"* nonnull sret %3, %"class.blink::SVGMarkerDataBuilder"* %0, %"struct.blink::PathElement"* dereferenceable(16) %1)
  %9 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7
  %10 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %3 to i64*
  %11 = bitcast %"class.blink::FloatSize"* %9 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 8
  %18 = bitcast %"class.blink::FloatSize"* %17 to i64*
  store i64 %12, i64* %18, align 8
  br label %19

19:                                               ; preds = %16, %2
  %20 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %24 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %19
  call void @_ZN5blink20SVGMarkerDataBuilder11UpdateAngleEb(%"class.blink::SVGMarkerDataBuilder"* %0, i1 zeroext %22)
  br label %29

29:                                               ; preds = %28, %19
  %30 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 6
  %31 = bitcast %"class.blink::FloatSize"* %6 to i64*
  %32 = bitcast %"class.blink::FloatSize"* %30 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 4
  %35 = bitcast %"class.blink::FloatPoint"* %7 to i64*
  %36 = bitcast %"class.blink::FloatPoint"* %34 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  br i1 %22, label %38, label %49

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %1, i64 0, i32 1
  %40 = bitcast %"class.blink::FloatPoint"** %39 to i64**
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 5
  %43 = bitcast %"class.blink::FloatPoint"* %42 to i64*
  %44 = load i64, i64* %41, align 4
  store i64 %44, i64* %43, align 8
  %45 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %23, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  br label %57

49:                                               ; preds = %29
  %50 = load i32, i32* %20, align 8
  %51 = icmp eq i32 %50, 4
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 5
  %54 = bitcast %"class.blink::FloatPoint"* %53 to i32*
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 5, i32 1
  %56 = bitcast float* %55 to i32*
  store i32 0, i32* %56, align 4
  br label %57

57:                                               ; preds = %49, %52, %38
  %58 = load i32, i32* %20, align 8
  store i32 %58, i32* %13, align 4
  %59 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %23, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %59, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp ne i32 %61, 0
  %63 = zext i1 %62 to i32
  %64 = bitcast %"struct.blink::MarkerPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %4, i64 0, i32 0
  store i32 %63, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %4, i64 0, i32 1
  %67 = bitcast %"class.blink::FloatPoint"* %66 to i64*
  store i64 %37, i64* %67, align 4
  %68 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %4, i64 0, i32 2
  store float 0.000000e+00, float* %68, align 4
  %69 = load i32, i32* %60, align 4
  %70 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %59, i64 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %81, label %73, !prof !2

73:                                               ; preds = %57
  %74 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %59, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.blink::MarkerPosition"*, %"struct.blink::MarkerPosition"** %74, align 8
  %76 = zext i32 %69 to i64
  %77 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %75, i64 %76
  %78 = bitcast %"struct.blink::MarkerPosition"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %64, i64 16, i1 false) #10
  %79 = load i32, i32* %60, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %60, align 4
  br label %82

81:                                               ; preds = %57
  call void @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %59, %"struct.blink::MarkerPosition"* nonnull dereferenceable(16) %4) #10
  br label %82

82:                                               ; preds = %73, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder5BuildERKNS_17SVGPathByteStreamE(%"class.blink::SVGMarkerDataBuilder"*, %"class.blink::SVGPathByteStream"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SegmentCollector, align 8
  %4 = alloca %"struct.blink::PathSegmentData", align 4
  %5 = alloca %"class.WTF::Vector.18", align 8
  %6 = alloca %"struct.blink::PathSegmentData", align 4
  %7 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %8 = alloca %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", align 8
  %9 = bitcast %"class.blink::SVGPathByteStreamSource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %7, i64 0, i32 1
  %12 = bitcast %"class.blink::SVGPathByteStream"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::SVGPathByteStreamSource"* %7 to i64*
  store i64 %13, i64* %14, align 8
  %15 = inttoptr i64 %13 to i8*
  %16 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  store i8* %19, i8** %11, align 8
  %20 = bitcast %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 2, i32 1
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 4
  %26 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 0
  %27 = bitcast i32* %25 to i64*
  store i64 -6148914691236517206, i64* %27, align 8
  store %"class.blink::SVGPathConsumer"* %26, %"class.blink::SVGPathConsumer"** %21, align 8
  %28 = bitcast float* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 28, i1 false) #10
  %29 = icmp eq i32 %17, 0
  br i1 %29, label %104, label %30

30:                                               ; preds = %2
  %31 = bitcast %"struct.blink::PathSegmentData"* %6 to i8*
  %32 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %6, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %6, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %6, i64 0, i32 4
  %35 = bitcast %"struct.blink::PathSegmentData"* %4 to i8*
  %36 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %4, i64 0, i32 2
  %40 = bitcast %"class.WTF::Vector.18"* %5 to i8*
  %41 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %5, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %5, i64 0, i32 0, i32 0, i32 2
  %44 = bitcast %class.SegmentCollector* %3 to i8*
  %45 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %3, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %3, i64 0, i32 1
  %49 = bitcast %"class.WTF::Vector.18"* %48 to i8*
  %50 = bitcast %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8 to %"class.blink::SVGPathNormalizer"*
  %51 = ptrtoint %class.SegmentCollector* %3 to i64
  %52 = bitcast %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8 to i64*
  %53 = getelementptr inbounds %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor", %"class.blink::(anonymous namespace)::MarkerPathSegmentProcessor"* %8, i64 0, i32 0, i32 2
  %54 = bitcast %"class.WTF::Vector.18"* %48 to i64*
  %55 = bitcast %"class.WTF::Vector.18"* %5 to i64*
  %56 = bitcast %"class.blink::FloatPoint"* %39 to i64*
  %57 = bitcast float* %33 to i8*
  %58 = bitcast i8* %34 to i32*
  br label %59

59:                                               ; preds = %99, %30
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  store i32 -1431655766, i32* %32, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 -1, i64 24, i1 false) #10
  store i32 -1431655766, i32* %58, align 4
  call void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* nonnull sret %6, %"class.blink::SVGPathByteStreamSource"* nonnull %7) #10
  %60 = load i32, i32* %32, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %103, label %62

62:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* nonnull align 4 %31, i64 32, i1 false) #10
  %63 = load i32, i32* %36, align 4
  switch i32 %63, label %99 [
    i32 11, label %64
    i32 10, label %71
  ]

64:                                               ; preds = %62
  store i32 10, i32* %36, align 4
  %65 = load float, float* %23, align 8
  %66 = load float, float* %24, align 4
  %67 = load float, float* %37, align 4
  %68 = fadd float %65, %67
  store float %68, float* %37, align 4
  %69 = load float, float* %38, align 4
  %70 = fadd float %66, %69
  store float %70, float* %38, align 4
  br label %71

71:                                               ; preds = %64, %62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10, !noalias !3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEE16SegmentCollector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10, !noalias !3
  %72 = load i64, i64* %52, align 8, !noalias !3
  store i64 %51, i64* %52, align 8, !noalias !3
  %73 = call zeroext i1 @_ZN5blink17SVGPathNormalizer19DecomposeArcToCubicERKNS_10FloatPointERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* nonnull %50, %"class.blink::FloatPoint"* dereferenceable(8) %53, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %4) #10, !noalias !3
  store i64 0, i64* %55, align 8, !alias.scope !6
  %74 = load i64, i64* %54, align 8, !noalias !6
  store atomic i64 0, i64* %54 monotonic, align 8, !noalias !6
  store atomic i64 %74, i64* %55 monotonic, align 8, !alias.scope !6
  %75 = load i32, i32* %46, align 8, !noalias !6
  store i32 %75, i32* %42, align 8, !alias.scope !6
  store i32 0, i32* %46, align 8, !noalias !6
  %76 = load i32, i32* %47, align 4, !noalias !6
  store i32 %76, i32* %43, align 4, !alias.scope !6
  store i64 %72, i64* %52, align 8, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10, !noalias !3
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = inttoptr i64 %74 to %"struct.blink::PathSegmentData"*
  store i32 4, i32* %36, align 4
  br label %89

80:                                               ; preds = %71
  %81 = add i32 %76, -1
  %82 = call dereferenceable(32) %"struct.blink::PathSegmentData"* @_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.18"* nonnull %5, i32 %81) #10
  %83 = bitcast %"struct.blink::PathSegmentData"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %83, i64 30, i1 false) #10
  %84 = call dereferenceable(32) %"struct.blink::PathSegmentData"* @_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.18"* nonnull %5, i32 0) #10
  %85 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %84, i64 0, i32 2
  %86 = bitcast %"class.blink::FloatPoint"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  store i64 %87, i64* %56, align 4
  %88 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %41, align 8
  br label %89

89:                                               ; preds = %80, %78
  %90 = phi %"struct.blink::PathSegmentData"* [ %88, %80 ], [ %79, %78 ]
  %91 = icmp eq %"struct.blink::PathSegmentData"* %90, null
  %92 = bitcast %"struct.blink::PathSegmentData"* %90 to i8*
  br i1 %91, label %98, label %93, !prof !9

93:                                               ; preds = %89
  %94 = load i32, i32* %43, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96, !prof !2

96:                                               ; preds = %93
  store i32 0, i32* %43, align 4
  br label %97

97:                                               ; preds = %96, %93
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #10
  store %"struct.blink::PathSegmentData"* null, %"struct.blink::PathSegmentData"** %41, align 8
  br label %98

98:                                               ; preds = %97, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #10
  br label %99

99:                                               ; preds = %98, %62
  call void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"* nonnull %50, %"struct.blink::PathSegmentData"* nonnull dereferenceable(32) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  %100 = load i8*, i8** %10, align 8
  %101 = load i8*, i8** %11, align 8
  %102 = icmp ult i8* %100, %101
  br i1 %102, label %59, label %104

103:                                              ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  br label %104

104:                                              ; preds = %99, %2, %103
  %105 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %106 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %105, align 8
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %106, i64 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %104
  call void @_ZN5blink20SVGMarkerDataBuilder11UpdateAngleEb(%"class.blink::SVGMarkerDataBuilder"* %0, i1 zeroext true) #10
  %111 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %105, align 8
  %112 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %111, i64 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, -1
  %115 = call dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %111, i32 %114) #10
  %116 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %115, i64 0, i32 0
  store i32 2, i32* %116, align 4
  br label %117

117:                                              ; preds = %104, %110
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGMarkerDataBuilder"* nocapture, %"struct.blink::PathSegmentData"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::PathElement", align 8
  %4 = alloca [3 x %"class.blink::FloatPoint"], align 16
  %5 = bitcast [3 x %"class.blink::FloatPoint"]* %4 to i8*
  %6 = bitcast %"struct.blink::PathElement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = bitcast %"struct.blink::PathElement"* %3 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %8 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false)
  %9 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %3, i64 0, i32 1
  store %"class.blink::FloatPoint"* %8, %"class.blink::FloatPoint"** %9, align 8
  %10 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast [3 x %"class.blink::FloatPoint"]* %4 to i64*
  switch i32 %11, label %36 [
    i32 1, label %13
    i32 2, label %15
    i32 4, label %20
    i32 6, label %25
  ]

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %3, i64 0, i32 0
  store i32 4, i32* %14, align 8
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %3, i64 0, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %18 = bitcast %"class.blink::FloatPoint"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  store i64 %19, i64* %12, align 16
  br label %36

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %3, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %23 = bitcast %"class.blink::FloatPoint"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  store i64 %24, i64* %12, align 16
  br label %36

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %3, i64 0, i32 0
  store i32 3, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 2
  %28 = bitcast %"class.blink::FloatPoint"* %27 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 4
  %30 = bitcast [3 x %"class.blink::FloatPoint"]* %4 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 16
  %31 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %1, i64 0, i32 1
  %32 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %4, i64 0, i64 2
  %33 = bitcast %"class.blink::FloatPoint"* %31 to i64*
  %34 = bitcast %"class.blink::FloatPoint"* %32 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 16
  br label %36

36:                                               ; preds = %2, %25, %20, %15, %13
  call void @_ZN5blink20SVGMarkerDataBuilder21UpdateFromPathElementERKNS_11PathElementE(%"class.blink::SVGMarkerDataBuilder"* %0, %"struct.blink::PathElement"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink20SVGMarkerDataBuilder12CurrentAngleENS0_9AngleTypeE(%"class.blink::SVGMarkerDataBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatPoint", align 4
  %4 = alloca %"class.blink::FloatPoint", align 4
  %5 = bitcast %"class.blink::FloatPoint"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 6
  %7 = bitcast %"class.blink::FloatSize"* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"class.blink::FloatPoint"* %3 to i32*
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 6, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast float* %10 to i32*
  store i32 %13, i32* %14, align 4
  %15 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %3) #10
  %16 = fmul float %15, 0x404CA5DC00000000
  %17 = fpext float %16 to double
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %18 = bitcast %"class.blink::FloatPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7
  %20 = bitcast %"class.blink::FloatSize"* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"class.blink::FloatPoint"* %4 to i32*
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7, i32 1
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast float* %23 to i32*
  store i32 %26, i32* %27, align 4
  %28 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %4) #10
  %29 = fmul float %28, 0x404CA5DC00000000
  %30 = fpext float %29 to double
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  switch i32 %1, label %41 [
    i32 2, label %42
    i32 0, label %31
    i32 1, label %40
  ]

31:                                               ; preds = %2
  %32 = fsub double %17, %30
  %33 = fcmp ogt double %32, 1.800000e+02
  %34 = fcmp ole double %32, -1.800000e+02
  %35 = or i1 %33, %34
  %36 = fadd double %17, 3.600000e+02
  %37 = select i1 %35, double %36, double %17
  %38 = fadd double %37, %30
  %39 = fmul double %38, 5.000000e-01
  br label %42

40:                                               ; preds = %2
  br label %42

41:                                               ; preds = %2
  unreachable

42:                                               ; preds = %2, %40, %31
  %43 = phi double [ %17, %40 ], [ %39, %31 ], [ %30, %2 ]
  ret double %43
}

declare float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink20SVGMarkerDataBuilder18DetermineAngleTypeEb(%"class.blink::SVGMarkerDataBuilder"* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 4
  %6 = or i1 %5, %1
  %7 = xor i1 %5, true
  %8 = zext i1 %7 to i32
  %9 = icmp eq i32 %4, 0
  %10 = select i1 %9, i32 2, i32 0
  %11 = select i1 %6, i32 %8, i32 %10
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder11UpdateAngleEb(%"class.blink::SVGMarkerDataBuilder"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatPoint", align 4
  %4 = alloca %"class.blink::FloatPoint", align 4
  %5 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 8
  %10 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7
  %11 = bitcast %"class.blink::FloatSize"* %9 to i64*
  %12 = bitcast %"class.blink::FloatSize"* %10 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 8
  br label %14

14:                                               ; preds = %8, %2
  %15 = or i1 %7, %1
  %16 = xor i1 %7, true
  %17 = zext i1 %16 to i32
  %18 = icmp eq i32 %6, 0
  %19 = select i1 %18, i32 2, i32 0
  %20 = select i1 %15, i32 %17, i32 %19
  %21 = bitcast %"class.blink::FloatPoint"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 6
  %23 = bitcast %"class.blink::FloatSize"* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.blink::FloatPoint"* %3 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 6, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast float* %26 to i32*
  store i32 %29, i32* %30, align 4
  %31 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %3) #10
  %32 = fmul float %31, 0x404CA5DC00000000
  %33 = fpext float %32 to double
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  %34 = bitcast %"class.blink::FloatPoint"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7
  %36 = bitcast %"class.blink::FloatSize"* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.blink::FloatPoint"* %4 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %4, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 7, i32 1
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast float* %39 to i32*
  store i32 %42, i32* %43, align 4
  %44 = call float @_ZNK5blink10FloatPoint17SlopeAngleRadiansEv(%"class.blink::FloatPoint"* nonnull %4) #10
  %45 = fmul float %44, 0x404CA5DC00000000
  %46 = fpext float %45 to double
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  switch i32 %20, label %57 [
    i32 2, label %58
    i32 0, label %47
    i32 1, label %56
  ]

47:                                               ; preds = %14
  %48 = fsub double %33, %46
  %49 = fcmp ogt double %48, 1.800000e+02
  %50 = fcmp ole double %48, -1.800000e+02
  %51 = or i1 %49, %50
  %52 = fadd double %33, 3.600000e+02
  %53 = select i1 %51, double %52, double %33
  %54 = fadd double %53, %46
  %55 = fmul double %54, 5.000000e-01
  br label %58

56:                                               ; preds = %14
  br label %58

57:                                               ; preds = %14
  unreachable

58:                                               ; preds = %14, %47, %56
  %59 = phi double [ %33, %56 ], [ %55, %47 ], [ %46, %14 ]
  %60 = fcmp ult double %59, 0x47EFFFFFE0000000
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = fcmp ole double %59, 0xC7EFFFFFE0000000
  %63 = select i1 %62, double 0xC7EFFFFFE0000000, double %59
  %64 = fptrunc double %63 to float
  br label %65

65:                                               ; preds = %58, %61
  %66 = phi float [ %64, %61 ], [ 0x47EFFFFFE0000000, %58 ]
  %67 = load i32, i32* %5, align 4
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %71 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = call dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %71, i32 %73) #10
  %75 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %74, i64 0, i32 2
  store float %66, float* %75, align 4
  br label %76

76:                                               ; preds = %69, %65
  %77 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %0, i64 0, i32 1
  %78 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %78, i64 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, -1
  %82 = call dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %78, i32 %81) #10
  %83 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %82, i64 0, i32 2
  store float %66, float* %83, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20SVGMarkerDataBuilder19ComputeQuadTangentsERNS0_11SegmentDataERKNS_10FloatPointES5_S5_(%"struct.blink::SVGMarkerDataBuilder::SegmentData"* nocapture dereferenceable(24), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %5 = bitcast %"class.blink::FloatPoint"* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = bitcast %"class.blink::FloatPoint"* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fsub <2 x float> %6, %8
  %10 = extractelement <2 x float> %9, i32 0
  %11 = extractelement <2 x float> %9, i32 1
  %12 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %9, <2 x float>* %12, align 4
  %13 = bitcast %"class.blink::FloatPoint"* %3 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = bitcast %"class.blink::FloatPoint"* %2 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = fsub <2 x float> %14, %16
  %18 = extractelement <2 x float> %17, i32 0
  %19 = extractelement <2 x float> %17, i32 1
  %20 = getelementptr inbounds %"struct.blink::SVGMarkerDataBuilder::SegmentData", %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0, i64 0, i32 1
  %21 = bitcast %"class.blink::FloatSize"* %20 to <2 x float>*
  store <2 x float> %17, <2 x float>* %21, align 4
  %22 = fcmp ogt float %10, 0xBE80000000000000
  %23 = fcmp olt float %10, 0x3E80000000000000
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %4
  %26 = fcmp ogt float %11, 0xBE80000000000000
  %27 = fcmp olt float %11, 0x3E80000000000000
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %17, <2 x float>* %30, align 4
  br label %41

31:                                               ; preds = %4, %25
  %32 = fcmp ogt float %18, 0xBE80000000000000
  %33 = fcmp olt float %18, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = fcmp ogt float %19, 0xBE80000000000000
  %37 = fcmp olt float %19, 0x3E80000000000000
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"class.blink::FloatSize"* %20 to <2 x float>*
  store <2 x float> %9, <2 x float>* %40, align 4
  br label %41

41:                                               ; preds = %31, %35, %39, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20SVGMarkerDataBuilder26ExtractPathElementFeaturesERKNS_11PathElementE(%"struct.blink::SVGMarkerDataBuilder::SegmentData"* noalias sret, %"class.blink::SVGMarkerDataBuilder"* nocapture readonly, %"struct.blink::PathElement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.blink::SVGMarkerDataBuilder::SegmentData", %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.blink::SVGMarkerDataBuilder::SegmentData", %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0, i64 0, i32 2
  %6 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %2, i64 0, i32 1
  %8 = load %"class.blink::FloatPoint"*, %"class.blink::FloatPoint"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %167 [
    i32 3, label %11
    i32 2, label %95
    i32 0, label %136
    i32 1, label %136
    i32 4, label %151
  ]

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 2
  %13 = bitcast %"class.blink::FloatPoint"* %12 to i64*
  %14 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %1, i64 0, i32 4, i32 0
  %17 = bitcast %"class.blink::FloatPoint"* %8 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = bitcast float* %16 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = fsub <2 x float> %18, %20
  %22 = extractelement <2 x float> %21, i32 0
  %23 = extractelement <2 x float> %21, i32 1
  %24 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %21, <2 x float>* %24, align 4
  %25 = trunc i64 %15 to i32
  %26 = bitcast i32 %25 to float
  %27 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 1, i32 0
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 2, i32 1
  %31 = load float, float* %30, align 4
  %32 = insertelement <2 x float> undef, float %26, i32 0
  %33 = insertelement <2 x float> %32, float %31, i32 1
  %34 = fsub <2 x float> %33, %29
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  %37 = bitcast %"class.blink::FloatSize"* %4 to <2 x float>*
  store <2 x float> %34, <2 x float>* %37, align 4
  %38 = fcmp ogt float %22, 0xBE80000000000000
  %39 = fcmp olt float %22, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %66

41:                                               ; preds = %11
  %42 = fcmp ogt float %23, 0xBE80000000000000
  %43 = fcmp olt float %23, 0x3E80000000000000
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %66

45:                                               ; preds = %41
  %46 = fsub <2 x float> %29, %18
  %47 = extractelement <2 x float> %46, i32 0
  %48 = extractelement <2 x float> %46, i32 1
  store <2 x float> %46, <2 x float>* %24, align 4
  store <2 x float> %34, <2 x float>* %37, align 4
  %49 = fcmp ogt float %47, 0xBE80000000000000
  %50 = fcmp olt float %47, 0x3E80000000000000
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %45
  %53 = fcmp ogt float %48, 0xBE80000000000000
  %54 = fcmp olt float %48, 0x3E80000000000000
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  store <2 x float> %34, <2 x float>* %24, align 4
  br label %167

57:                                               ; preds = %52, %45
  %58 = fcmp ogt float %35, 0xBE80000000000000
  %59 = fcmp olt float %35, 0x3E80000000000000
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %167

61:                                               ; preds = %57
  %62 = fcmp ogt float %36, 0xBE80000000000000
  %63 = fcmp olt float %36, 0x3E80000000000000
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %167

65:                                               ; preds = %61
  store <2 x float> %46, <2 x float>* %37, align 4
  br label %167

66:                                               ; preds = %11, %41
  %67 = fcmp ogt float %35, 0xBE80000000000000
  %68 = fcmp olt float %35, 0x3E80000000000000
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %167

70:                                               ; preds = %66
  %71 = fcmp ogt float %36, 0xBE80000000000000
  %72 = fcmp olt float %36, 0x3E80000000000000
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %167

74:                                               ; preds = %70
  store <2 x float> %21, <2 x float>* %24, align 4
  %75 = fsub <2 x float> %29, %18
  %76 = extractelement <2 x float> %75, i32 0
  %77 = extractelement <2 x float> %75, i32 1
  store <2 x float> %75, <2 x float>* %37, align 4
  %78 = fcmp ogt float %22, 0xBE80000000000000
  %79 = fcmp olt float %22, 0x3E80000000000000
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %74
  %82 = fcmp ogt float %23, 0xBE80000000000000
  %83 = fcmp olt float %23, 0x3E80000000000000
  %84 = and i1 %82, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store <2 x float> %75, <2 x float>* %24, align 4
  br label %167

86:                                               ; preds = %81, %74
  %87 = fcmp ogt float %76, 0xBE80000000000000
  %88 = fcmp olt float %76, 0x3E80000000000000
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %167

90:                                               ; preds = %86
  %91 = fcmp ogt float %77, 0xBE80000000000000
  %92 = fcmp olt float %77, 0x3E80000000000000
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %167

94:                                               ; preds = %90
  store <2 x float> %21, <2 x float>* %37, align 4
  br label %167

95:                                               ; preds = %3
  %96 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 1
  %97 = bitcast %"class.blink::FloatPoint"* %96 to i64*
  %98 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %1, i64 0, i32 4, i32 0
  %101 = bitcast %"class.blink::FloatPoint"* %8 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = bitcast float* %100 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = fsub <2 x float> %102, %104
  %106 = extractelement <2 x float> %105, i32 0
  %107 = extractelement <2 x float> %105, i32 1
  %108 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %105, <2 x float>* %108, align 4
  %109 = trunc i64 %99 to i32
  %110 = bitcast i32 %109 to float
  %111 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 1, i32 1
  %112 = load float, float* %111, align 4
  %113 = insertelement <2 x float> undef, float %110, i32 0
  %114 = insertelement <2 x float> %113, float %112, i32 1
  %115 = fsub <2 x float> %114, %102
  %116 = extractelement <2 x float> %115, i32 0
  %117 = extractelement <2 x float> %115, i32 1
  %118 = bitcast %"class.blink::FloatSize"* %4 to <2 x float>*
  store <2 x float> %115, <2 x float>* %118, align 4
  %119 = fcmp ogt float %106, 0xBE80000000000000
  %120 = fcmp olt float %106, 0x3E80000000000000
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %127

122:                                              ; preds = %95
  %123 = fcmp ogt float %107, 0xBE80000000000000
  %124 = fcmp olt float %107, 0x3E80000000000000
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %127

126:                                              ; preds = %122
  store <2 x float> %115, <2 x float>* %108, align 4
  br label %167

127:                                              ; preds = %122, %95
  %128 = fcmp ogt float %116, 0xBE80000000000000
  %129 = fcmp olt float %116, 0x3E80000000000000
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %167

131:                                              ; preds = %127
  %132 = fcmp ogt float %117, 0xBE80000000000000
  %133 = fcmp olt float %117, 0x3E80000000000000
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %167

135:                                              ; preds = %131
  store <2 x float> %105, <2 x float>* %118, align 4
  br label %167

136:                                              ; preds = %3, %3
  %137 = bitcast %"class.blink::FloatPoint"* %8 to i64*
  %138 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %139 = load i64, i64* %137, align 4
  store i64 %139, i64* %138, align 4
  %140 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %1, i64 0, i32 4, i32 0
  %141 = lshr i64 %139, 32
  %142 = insertelement <2 x i64> undef, i64 %139, i32 0
  %143 = insertelement <2 x i64> %142, i64 %141, i32 1
  %144 = trunc <2 x i64> %143 to <2 x i32>
  %145 = bitcast <2 x i32> %144 to <2 x float>
  %146 = bitcast float* %140 to <2 x float>*
  %147 = load <2 x float>, <2 x float>* %146, align 4
  %148 = fsub <2 x float> %145, %147
  %149 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %148, <2 x float>* %149, align 4
  %150 = bitcast %"class.blink::FloatSize"* %4 to <2 x float>*
  store <2 x float> %148, <2 x float>* %150, align 4
  br label %167

151:                                              ; preds = %3
  %152 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %1, i64 0, i32 5
  %153 = bitcast %"class.blink::FloatPoint"* %152 to i64*
  %154 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %155 = load i64, i64* %153, align 4
  store i64 %155, i64* %154, align 4
  %156 = getelementptr inbounds %"class.blink::SVGMarkerDataBuilder", %"class.blink::SVGMarkerDataBuilder"* %1, i64 0, i32 4, i32 0
  %157 = lshr i64 %155, 32
  %158 = insertelement <2 x i64> undef, i64 %155, i32 0
  %159 = insertelement <2 x i64> %158, i64 %157, i32 1
  %160 = trunc <2 x i64> %159 to <2 x i32>
  %161 = bitcast <2 x i32> %160 to <2 x float>
  %162 = bitcast float* %156 to <2 x float>*
  %163 = load <2 x float>, <2 x float>* %162, align 4
  %164 = fsub <2 x float> %161, %163
  %165 = bitcast %"struct.blink::SVGMarkerDataBuilder::SegmentData"* %0 to <2 x float>*
  store <2 x float> %164, <2 x float>* %165, align 4
  %166 = bitcast %"class.blink::FloatSize"* %4 to <2 x float>*
  store <2 x float> %164, <2 x float>* %166, align 4
  br label %167

167:                                              ; preds = %66, %70, %135, %131, %127, %126, %94, %90, %86, %85, %65, %61, %57, %56, %3, %151, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15SVGPathConsumerD2Ev(%"class.blink::SVGPathConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20SVGMarkerDataBuilderD0Ev(%"class.blink::SVGMarkerDataBuilder"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::SVGMarkerDataBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink23SVGPathByteStreamSource12ParseSegmentEv(%"struct.blink::PathSegmentData"* sret, %"class.blink::SVGPathByteStreamSource"*) local_unnamed_addr #1

declare void @_ZN5blink17SVGPathNormalizer11EmitSegmentERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"*, %"struct.blink::PathSegmentData"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17SVGPathNormalizer19DecomposeArcToCubicERKNS_10FloatPointERKNS_15PathSegmentDataE(%"class.blink::SVGPathNormalizer"*, %"class.blink::FloatPoint"* dereferenceable(8), %"struct.blink::PathSegmentData"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollectorD2Ev(%class.SegmentCollector* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEE16SegmentCollector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %3, align 8
  %5 = icmp eq %"struct.blink::PathSegmentData"* %4, null
  %6 = bitcast %"struct.blink::PathSegmentData"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store %"struct.blink::PathSegmentData"* null, %"struct.blink::PathSegmentData"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollectorD0Ev(%class.SegmentCollector*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEE16SegmentCollector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %3, align 8
  %5 = icmp eq %"struct.blink::PathSegmentData"* %4, null
  %6 = bitcast %"struct.blink::PathSegmentData"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  br label %13

13:                                               ; preds = %1, %12
  %14 = bitcast %class.SegmentCollector* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollector11EmitSegmentES4_(%class.SegmentCollector*, %"struct.blink::PathSegmentData"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SegmentCollector, %class.SegmentCollector* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %18, label %9, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %11, i64 %12
  %14 = bitcast %"struct.blink::PathSegmentData"* %13 to i8*
  %15 = bitcast %"struct.blink::PathSegmentData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 32, i1 false) #10
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %4, align 4
  br label %19

18:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.18"* %3, %"struct.blink::PathSegmentData"* dereferenceable(32) %1) #10
  br label %19

19:                                               ; preds = %9, %18
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.18"*, %"struct.blink::PathSegmentData"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %6, align 8
  %8 = icmp ugt %"struct.blink::PathSegmentData"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::PathSegmentData"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !9

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::PathSegmentData"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15PathSegmentDataEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15PathSegmentDataEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::PathSegmentData"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::PathSegmentData"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::PathSegmentData"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !9

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.18"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::PathSegmentData"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::PathSegmentData"* %1 to i64
  %56 = ptrtoint %"struct.blink::PathSegmentData"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !9

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::PathSegmentData"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15PathSegmentDataEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15PathSegmentDataEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::PathSegmentData"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::PathSegmentData"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !9

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.18"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::PathSegmentData"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::PathSegmentData"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::PathSegmentData"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::PathSegmentData"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %100, i64 %103
  %105 = bitcast %"struct.blink::PathSegmentData"* %104 to i8*
  %106 = bitcast %"struct.blink::PathSegmentData"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 32, i1 false) #10
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15PathSegmentDataEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::PathSegmentData"* @_ZN3WTF6VectorIN5blink15PathSegmentDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.18"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PathSegmentData"*, %"struct.blink::PathSegmentData"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PathSegmentData", %"struct.blink::PathSegmentData"* %24, i64 %25
  ret %"struct.blink::PathSegmentData"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::MarkerPosition"* @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::MarkerPosition"*, %"struct.blink::MarkerPosition"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %24, i64 %25
  ret %"struct.blink::MarkerPosition"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14MarkerPositionELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::MarkerPosition"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::MarkerPosition"*, %"struct.blink::MarkerPosition"** %6, align 8
  %8 = icmp ugt %"struct.blink::MarkerPosition"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::MarkerPosition"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !9

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::MarkerPosition"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14MarkerPositionEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14MarkerPositionEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::MarkerPosition"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::MarkerPosition"*, %"struct.blink::MarkerPosition"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::MarkerPosition"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::MarkerPosition"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !9

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::MarkerPosition"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::MarkerPosition"* %1 to i64
  %56 = ptrtoint %"struct.blink::MarkerPosition"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !9

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::MarkerPosition"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14MarkerPositionEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14MarkerPositionEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::MarkerPosition"*, %"struct.blink::MarkerPosition"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::MarkerPosition"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::MarkerPosition"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !9

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::MarkerPosition"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::MarkerPosition"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::MarkerPosition"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::MarkerPosition"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::MarkerPosition", %"struct.blink::MarkerPosition"* %100, i64 %103
  %105 = bitcast %"struct.blink::MarkerPosition"* %104 to i8*
  %106 = bitcast %"struct.blink::MarkerPosition"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #10
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14MarkerPositionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataE"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollector14ReturnSegmentsEv: argument 0"}
!8 = distinct !{!8, !"_ZZN5blink12_GLOBAL__N_126MarkerPathSegmentProcessor12DecomposeArcERKNS_15PathSegmentDataEEN16SegmentCollector14ReturnSegmentsEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
