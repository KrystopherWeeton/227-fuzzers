; ModuleID = '../../third_party/skia/src/fonts/SkRemotableFontMgr.cpp'
source_filename = "../../third_party/skia/src/fonts/SkRemotableFontMgr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkRemotableFontIdentitySet = type { %class.SkRefCnt.base, i32, %class.SkAutoTArray }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.SkFontIdentity* }
%struct.SkFontIdentity = type { i32, i32, %class.SkFontStyle }
%class.SkFontStyle = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN26SkRemotableFontIdentitySetD2Ev = comdat any

$_ZN26SkRemotableFontIdentitySetD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTV26SkRemotableFontIdentitySet = comdat any

@_ZTV26SkRemotableFontIdentitySet = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRemotableFontIdentitySet*)* @_ZN26SkRemotableFontIdentitySetD2Ev to i8*), i8* bitcast (void (%class.SkRemotableFontIdentitySet*)* @_ZN26SkRemotableFontIdentitySetD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE5empty = internal unnamed_addr global %class.SkRemotableFontIdentitySet* null, align 8

@_ZN26SkRemotableFontIdentitySetC1EiPP14SkFontIdentity = hidden unnamed_addr alias void (%class.SkRemotableFontIdentitySet*, i32, %struct.SkFontIdentity**), void (%class.SkRemotableFontIdentitySet*, i32, %struct.SkFontIdentity**)* @_ZN26SkRemotableFontIdentitySetC2EiPP14SkFontIdentity

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SkRemotableFontIdentitySetC2EiPP14SkFontIdentity(%class.SkRemotableFontIdentitySet* nocapture, i32, %struct.SkFontIdentity** nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26SkRemotableFontIdentitySet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 2
  %8 = bitcast %class.SkAutoTArray* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %3
  %11 = sext i32 %1 to i64
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %11, i64 12) #6
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call i8* @_Znam(i64 %15) #7
  %17 = bitcast i8* %16 to %struct.SkFontIdentity*
  %18 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %17, i64 %11
  br label %19

19:                                               ; preds = %19, %10
  %20 = phi %struct.SkFontIdentity* [ %17, %10 ], [ %22, %19 ]
  %21 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %20, i64 0, i32 2, i32 0
  store i32 328080, i32* %21, align 4
  %22 = getelementptr inbounds %struct.SkFontIdentity, %struct.SkFontIdentity* %20, i64 1
  %23 = icmp eq %struct.SkFontIdentity* %22, %18
  br i1 %23, label %24, label %19

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %struct.SkFontIdentity*, %struct.SkFontIdentity** %25, align 8
  %27 = bitcast %class.SkAutoTArray* %7 to i8**
  store i8* %16, i8** %27, align 8
  %28 = icmp eq %struct.SkFontIdentity* %26, null
  %29 = ptrtoint i8* %16 to i64
  br i1 %28, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %struct.SkFontIdentity* %26 to i8*
  tail call void @_ZdaPv(i8* %31) #7
  %32 = load i64, i64* %8, align 8
  br label %33

33:                                               ; preds = %3, %24, %30
  %34 = phi i64 [ 0, %3 ], [ %29, %24 ], [ %32, %30 ]
  %35 = bitcast %struct.SkFontIdentity** %2 to i64*
  store i64 %34, i64* %35, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %class.SkRemotableFontIdentitySet* @_ZN26SkRemotableFontIdentitySet8NewEmptyEv() local_unnamed_addr #1 align 2 {
  %1 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %1, label %2 [
    i8 2, label %18
    i8 0, label %3
  ]

2:                                                ; preds = %3, %0
  br label %15

3:                                                ; preds = %0
  %4 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %5 = extractvalue { i8, i1 } %4, 1
  br i1 %5, label %6, label %2

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #7
  %8 = getelementptr inbounds i8, i8* %7, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26SkRemotableFontIdentitySet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  store i8* %7, i8** bitcast (%class.SkRemotableFontIdentitySet** @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE5empty to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %18

15:                                               ; preds = %2, %15
  %16 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %18, label %15

18:                                               ; preds = %15, %0, %6
  %19 = load %class.SkRemotableFontIdentitySet*, %class.SkRemotableFontIdentitySet** @_ZZN26SkRemotableFontIdentitySet8NewEmptyEvE5empty, align 8
  %20 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  ret %class.SkRemotableFontIdentitySet* %19
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkRemotableFontIdentitySetD2Ev(%class.SkRemotableFontIdentitySet*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26SkRemotableFontIdentitySet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.SkFontIdentity*, %struct.SkFontIdentity** %3, align 8
  store %struct.SkFontIdentity* null, %struct.SkFontIdentity** %3, align 8
  %5 = icmp eq %struct.SkFontIdentity* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.SkFontIdentity* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkRemotableFontIdentitySetD0Ev(%class.SkRemotableFontIdentitySet*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV26SkRemotableFontIdentitySet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRemotableFontIdentitySet, %class.SkRemotableFontIdentitySet* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.SkFontIdentity*, %struct.SkFontIdentity** %3, align 8
  store %struct.SkFontIdentity* null, %struct.SkFontIdentity** %3, align 8
  %5 = icmp eq %struct.SkFontIdentity* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.SkFontIdentity* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %class.SkRemotableFontIdentitySet* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #6
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
