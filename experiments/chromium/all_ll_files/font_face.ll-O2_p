; ModuleID = '../../third_party/blink/renderer/core/css/font_face.cc'
source_filename = "../../third_party/blink/renderer/core/css/font_face.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon.2836 = type { float }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.207", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.147", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.67" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.141", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i64 }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { float }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.150", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.159" }
%"class.WTF::Vector.159" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.188" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.99"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.327" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.34", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.468" }
%"struct.std::__1::atomic.468" = type { %"struct.std::__1::__atomic_base.469" }
%"struct.std::__1::__atomic_base.469" = type { %"struct.std::__1::__atomic_base.470" }
%"struct.std::__1::__atomic_base.470" = type { %"struct.std::__1::__cxx_atomic_impl.471" }
%"struct.std::__1::__cxx_atomic_impl.471" = type { %"struct.std::__1::__cxx_atomic_base_impl.472" }
%"struct.std::__1::__cxx_atomic_base_impl.472" = type { i32 }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.274", %"class.blink::HeapVector.318" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type <{ %"class.blink::ExecutionContextClient", i32, [4 x i8], %"class.blink::Member.10", %"class.blink::Member.4", %"class.blink::HeapVector", %"class.blink::HeapVector.267", i8, i8, [6 x i8] }>
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::FontFace"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.14"*, i32, i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.23", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.259", %"class.blink::SelfKeepAlive.263" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.18" }
%"class.blink::WeakMember.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.22"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.22" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.27, %"class.blink::Member.211", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.27 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.215", %"class.blink::HeapHashMap.224", %"class.std::__1::unique_ptr.234", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.246", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.249" }
%"class.blink::HeapHashMap.215" = type { %"class.WTF::HashMap.218" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.221" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.224" = type { %"class.WTF::HashMap.227" }
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.230" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.231" }
%"class.blink::TraceWrapperV8Reference.231" = type { %"class.v8::TracedReference.232" }
%"class.v8::TracedReference.232" = type { %"class.v8::BasicTracedReference.233" }
%"class.v8::BasicTracedReference.233" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.237" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.246" = type { %"class.v8::Persistent.247" }
%"class.v8::Persistent.247" = type { %"class.v8::PersistentBase.248" }
%"class.v8::PersistentBase.248" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.249" = type { %"class.WTF::HashMap.252" }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.256" }
%"class.blink::Persistent.256" = type { %"class.blink::PersistentBase.257" }
%"class.blink::PersistentBase.257" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.23", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.259", %class.scoped_refptr.262 }
%class.scoped_refptr.262 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.259" = type { %"class.v8::TracedReference.260" }
%"class.v8::TracedReference.260" = type { %"class.v8::BasicTracedReference.261" }
%"class.v8::BasicTracedReference.261" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.263" = type { %"class.blink::Persistent.264" }
%"class.blink::Persistent.264" = type { %"class.blink::PersistentBase.265" }
%"class.blink::PersistentBase.265" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.267" = type { %"class.WTF::Vector.270" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.blink::ScriptPromise"*, i32, i32 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.23", %"class.blink::ScriptValue" }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr.278, %"class.blink::HeapHashSet.286", %"class.blink::HeapDeque", %"class.blink::Member.10" }
%class.scoped_refptr.278 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.279", %"class.WTF::Vector.281" }
%"class.WTF::RefCounted.279" = type { %"class.base::RefCounted.280" }
%"class.base::RefCounted.280" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::HeapHashSet.286" = type { %"class.WTF::HashSet.289" }
%"class.WTF::HashSet.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"class.blink::Member.292"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.292" = type { %"class.blink::MemberBase.2841" }
%"class.blink::MemberBase.2841" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.2849", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.2844", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.2844" = type { %"class.WTF::HashTable.2845" }
%"class.WTF::HashTable.2845" = type <{ %"struct.WTF::KeyValuePair.2848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2848" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.2849" = type { %"class.blink::MemberBase.2850" }
%"class.blink::MemberBase.2850" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet.2853", %"class.blink::HeapListHashSet.2853" }
%"class.blink::HeapListHashSet.2853" = type { %"class.WTF::ListHashSet.base.2863", [7 x i8] }
%"class.WTF::ListHashSet.base.2863" = type <{ %"class.WTF::HashTable.2858", %"class.blink::Member.2860", %"class.blink::Member.2860", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2858" = type <{ %"class.blink::Member.2860"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2860" = type { %"class.blink::MemberBase.2861" }
%"class.blink::MemberBase.2861" = type { %"class.blink::HeapListHashSetNode.2862"* }
%"class.blink::HeapListHashSetNode.2862" = type { %"class.blink::Member.10", %"class.blink::Member.2860", %"class.blink::Member.2860" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.295" }
%"class.WTF::Deque.295" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.blink::Member.299"*, i32, i32 }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap.303", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.308", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"struct.WTF::KeyValuePair.312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.312" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.313", i32, i32 }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapVector.318" = type { %"class.WTF::Vector.321" }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.blink::Member.324"*, i32, i32 }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::FontFace::LoadFontCallback"* }
%"class.blink::FontFace::LoadFontCallback" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.392", i32, i8, [3 x i8], %"class.blink::HeapVector.394", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.414", %"class.blink::Member.555", %"class.blink::Member.557", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.339" }
%"class.blink::Supplementable.339" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.340" }
%"class.blink::HeapHashMap.340" = type { %"class.WTF::HashMap.343" }
%"class.WTF::HashMap.343" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"struct.WTF::KeyValuePair.346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.346" = type { i8*, %"class.blink::Member.2837" }
%"class.blink::Member.2837" = type { %"class.blink::MemberBase.2838" }
%"class.blink::MemberBase.2838" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2839" }
%"class.blink::Member.2839" = type { %"class.blink::MemberBase.2840" }
%"class.blink::MemberBase.2840" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.347, %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.381", %"class.std::__1::unique_ptr.381", %"class.blink::Member.387", i32, [4 x i8], %"class.WTF::HashSet.388", i32, i32 }
%class.scoped_refptr.347 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.348", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.350 }
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.350 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.368", %"class.std::__1::map.377"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.356 }
%union.anon.356 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.360", %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::map.368" = type { %"class.std::__1::__tree.369" }
%"class.std::__1::__tree.369" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.370", %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::map.377" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase" }
%"class.WTF::HashSet.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.394" = type { %"class.WTF::Vector.397" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::Member.400"*, i32, i32 }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.407", i32, i32 }
%"class.blink::HeapHashMap.407" = type { %"class.WTF::HashMap.410" }
%"class.WTF::HashMap.410" = type { %"class.WTF::HashTable.411" }
%"class.WTF::HashTable.411" = type <{ %"struct.WTF::KeyValuePair.413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.413" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.417" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.420" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.mojo::StructPtr.423"*, i32, i32 }
%"class.mojo::StructPtr.423" = type { %"class.std::__1::unique_ptr.424" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.427", %"class.WTF::HashMap.434", %"class.WTF::HashMap.439", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.444", i32, %"class.mojo::StructPtr.449", %"class.WTF::Vector.444" }
%"class.mojo::StructPtr.427" = type { %"class.std::__1::unique_ptr.428" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type opaque
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.443" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.449" = type { %"class.std::__1::unique_ptr.450" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.444", i8, i8, [6 x i8] }>
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.546" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.464", i32 }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.473", %"class.absl::optional.478", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.499", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.521", %"class.std::__1::map.532", i64, %"class.base::OnceCallback.492", %"class.base::OnceCallback.541", i8, %class.scoped_refptr.483, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.542" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.467 }
%class.scoped_refptr.467 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.468" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.492" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.483, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.486", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.486" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.487" }
%"struct.std::__1::atomic.487" = type { %"struct.std::__1::__atomic_base.488" }
%"struct.std::__1::__atomic_base.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.497 }
%class.scoped_refptr.497 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.569", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.483, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.569" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.502", %class.scoped_refptr.503 }
%"class.base::RepeatingCallback.502" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.503 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.504", [4 x i8] }>
%"class.base::RefCountedThreadSafe.504" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.508", %"class.std::__1::unique_ptr.514", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.520" }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.520" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.521" = type { %"class.std::__1::__tree.522" }
%"class.std::__1::__tree.522" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::map.532" = type { %"class.std::__1::__tree.533" }
%"class.std::__1::__tree.533" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.534", %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.base::OnceCallback.492" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.541" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.483 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.484" }>
%"class.base::RefCountedThreadSafe.484" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.492" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.542" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.405", i8, [7 x i8], %"class.WTF::Vector.420", %"class.blink::HeapVector.561", i8, [7 x i8], %"class.WTF::HashSet.388", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.561" = type { %"class.WTF::Vector.564" }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { %"class.blink::Member.567"*, i32, i32 }
%"class.blink::Member.567" = type opaque
%"class.blink::FontFaceDescriptors" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.572", %"class.blink::NotShared", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared" = type { %"class.blink::Member.574" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.576" }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.580", i8* }
%"class.WTF::StringAppend.580" = type { i8*, %"class.WTF::String" }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.859", %"class.blink::ThreadState::PrefinalizerRegistration.867", %"class.blink::Member.868", %"class.blink::Member.591", %"class.blink::Member.870", i8, %"class.blink::Member.872", %"class.blink::Member.874", %"class.blink::Member.876", %"class.blink::Member.876", %"class.blink::Member.876", %"class.blink::Member.876", %"class.blink::Member.876", %"class.blink::Member.876", %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::Member.882", %"class.blink::Member.884", %"class.blink::Member.888", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.444", %"class.blink::Member.890", %class.scoped_refptr.892, %"class.blink::HeapHashSet.954", %"class.blink::Member.961", %"class.blink::HeapHashMap.974", %"class.std::__1::unique_ptr.981", %"class.blink::Member.993", %"class.blink::Member.1012", %"class.blink::Member.1014", %"class.blink::Member.1016", %"class.WTF::Vector.1019", %"class.util::TokenType.757", %"class.WTF::HashSet.1024", %"class.WTF::Deque.1028" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", %"class.blink::Member.752", i8, %"class.WTF::Vector.754" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.739" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.727" }
%"class.blink::HeapVector.727" = type { %"class.WTF::Vector.730" }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase.732", [32 x i8] }
%"class.WTF::VectorBufferBase.732" = type { %"struct.std::__1::pair.733"*, i32, i32 }
%"struct.std::__1::pair.733" = type { %"class.WTF::AtomicString", %"class.blink::Member.734" }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::HeapVector.736"* }
%"class.blink::HeapVector.736" = type opaque
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.WTF::Vector.742"* }
%"class.WTF::Vector.742" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2007", %"class.blink::Member.2009", %"class.blink::Member.2011", i8, i32, i8, i32, %"class.blink::Member.2013", %"class.blink::Member.748", %"class.blink::FrameLifecycle", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.997", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2023", i8, %"class.base::UnguessableToken", %"class.absl::optional.2025", %"class.absl::optional.1850", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.746", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2037", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2045", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2053", %"class.blink::FrameLoader", %"class.blink::Member.2070", %"class.blink::Member.608", %"class.blink::Member.2072", %"class.blink::Member.2074", %"class.blink::Member.2076", %"class.blink::Member.2078", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2080", %class.scoped_refptr.2082, %"class.blink::Member.2083", %"class.blink::Member.2085", %"class.blink::Member.2087", %"class.blink::Member.2089", %"class.blink::Member.2091", %"class.blink::Member.2093", %"class.blink::Member.2095", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2097", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2100", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2121", %"class.std::__1::unique_ptr.2122", %"class.absl::optional.1850", i32, [4 x i8], %"class.std::__1::unique_ptr.2128", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2136", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2141", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2146", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2149", %"class.blink::Member.2151", %"class.blink::Member.2153", %"class.blink::Member.2155", %"class.mojo::StructPtr.2158", %"class.blink::Member.2166", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2168", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2037" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2038" }
%"class.blink::HeapHashMap.2038" = type { %"class.WTF::HashMap.2041" }
%"class.WTF::HashMap.2041" = type { %"class.WTF::HashTable.2042" }
%"class.WTF::HashTable.2042" = type <{ %"struct.WTF::KeyValuePair.2044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2044" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.984", %"class.base::WeakPtrFactory.989" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.988" = type opaque
%"class.base::WeakPtrFactory.989" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2051" }
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2913", i64, %"class.std::__1::map.2914", i8*, i64, %"class.base::WeakPtrFactory.2923" }
%"class.base::RepeatingCallback.2913" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2914" = type { %"class.std::__1::__tree.2915" }
%"class.std::__1::__tree.2915" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2916", %"class.std::__1::__compressed_pair.2920" }
%"class.std::__1::__compressed_pair.2916" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.2920" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.base::WeakPtrFactory.2923" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2053" = type { %"class.WTF::HashSet.2056" }
%"class.WTF::HashSet.2056" = type { %"class.WTF::HashTable.2057" }
%"class.WTF::HashTable.2057" = type <{ %"class.blink::WeakMember.2059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2059" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.997", %"class.blink::Member.2060", %"class.blink::Member.2062", %"class.std::__1::unique_ptr.2064", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1982" }
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2062" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1041" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1982" = type { %"class.WTF::HashTable.1983" }
%"class.WTF::HashTable.1983" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2175", %"class.blink::Member.997", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2180", i8, i32, %"class.blink::Color", %"class.absl::optional.2182", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2187", %"class.blink::Member.2189", %"class.blink::Member.2189", %"class.std::__1::unique_ptr.2192", i32, [4 x i8], %"class.WTF::HashSet.2195", %"class.blink::Member.2202", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2204", %"class.blink::HeapHashSet.2211", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2219", i8, %"class.blink::Member.2225", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2227", %"class.blink::HeapLinkedHashSet.2241", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2255", i8, %"class.std::__1::unique_ptr.2261", %"class.std::__1::unique_ptr.2378", %"class.WTF::Vector.2384", i32, %class.scoped_refptr.2389, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2390", %"class.blink::Member.2392", %"class.blink::Member.2394", %"class.blink::HeapHashSet.2396", %"class.blink::HeapHashSet.2403", %"class.std::__1::unique_ptr.2410", %"class.std::__1::unique_ptr.2416", %"class.WTF::Vector.718" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2175" = type { %"class.WTF::HashTable.2176" }
%"class.WTF::HashTable.2176" = type <{ %class.scoped_refptr.2179*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2179 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2180" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2181", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1062, %"class.base::WeakPtrFactory.1063" }
%class.scoped_refptr.1062 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1063" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2181" = type { %"class.blink::MemberBase.2071" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2182" = type { %"class.absl::optional_internal::optional_data.2183" }
%"class.absl::optional_internal::optional_data.2183" = type { %"class.absl::optional_internal::optional_data_base.2184" }
%"class.absl::optional_internal::optional_data_base.2184" = type { %"class.absl::optional_internal::optional_data_dtor_base.2185" }
%"class.absl::optional_internal::optional_data_dtor_base.2185" = type { i8, %union.anon.2186 }
%union.anon.2186 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2189" = type { %"class.blink::MemberBase.2190" }
%"class.blink::MemberBase.2190" = type { %"class.blink::HeapHashSet.2191"* }
%"class.blink::HeapHashSet.2191" = type opaque
%"class.std::__1::unique_ptr.2192" = type { %"class.std::__1::__compressed_pair.2193" }
%"class.std::__1::__compressed_pair.2193" = type { %"struct.std::__1::__compressed_pair_elem.2194" }
%"struct.std::__1::__compressed_pair_elem.2194" = type { %"class.WTF::HashSet.2195"* }
%"class.WTF::HashSet.2195" = type { %"class.WTF::HashTable.2196" }
%"class.WTF::HashTable.2196" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2204" = type { %"class.WTF::HashSet.2207" }
%"class.WTF::HashSet.2207" = type { %"class.WTF::HashTable.2208" }
%"class.WTF::HashTable.2208" = type <{ %"class.blink::Member.2210"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2210" = type opaque
%"class.blink::HeapHashSet.2211" = type { %"class.WTF::HashSet.2214" }
%"class.WTF::HashSet.2214" = type { %"class.WTF::HashTable.2215" }
%"class.WTF::HashTable.2215" = type <{ %"class.blink::Member.2217"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2445", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2456", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.608" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2447", %"class.blink::Member.2448", %"class.blink::Member.2450", %"class.blink::Member.2452", %"class.blink::Member.2454", %"class.WTF::Vector.718", i16, %class.scoped_refptr.1062 }
%"class.blink::ThreadState::PrefinalizerRegistration.2447" = type { i8 }
%"class.blink::Member.2448" = type { %"class.blink::MemberBase.2449" }
%"class.blink::MemberBase.2449" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2450" = type { %"class.blink::MemberBase.2451" }
%"class.blink::MemberBase.2451" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2456" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2457", { i64, i64 } }
%"class.blink::WeakMember.2457" = type { %"class.blink::MemberBase.2218" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2219" = type { %"class.std::__1::__compressed_pair.2220" }
%"class.std::__1::__compressed_pair.2220" = type { %"struct.std::__1::__compressed_pair_elem.2221" }
%"struct.std::__1::__compressed_pair_elem.2221" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2227" = type { %"class.WTF::LinkedHashSet.2230" }
%"class.WTF::LinkedHashSet.2230" = type { %"class.WTF::HashMap.2231", %"class.WTF::VectorBackedLinkedList.2235" }
%"class.WTF::HashMap.2231" = type { %"class.WTF::HashTable.2232" }
%"class.WTF::HashTable.2232" = type <{ %"struct.WTF::KeyValuePair.2234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2234" = type opaque
%"class.WTF::VectorBackedLinkedList.2235" = type { %"class.WTF::Vector.2236", i32, i32 }
%"class.WTF::Vector.2236" = type { %"class.WTF::VectorBuffer.2237" }
%"class.WTF::VectorBuffer.2237" = type { %"class.WTF::VectorBufferBase.2238" }
%"class.WTF::VectorBufferBase.2238" = type { %"class.WTF::VectorBackedLinkedListNode.2239"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2239" = type opaque
%"class.blink::HeapLinkedHashSet.2241" = type { %"class.WTF::LinkedHashSet.2244" }
%"class.WTF::LinkedHashSet.2244" = type { %"class.WTF::HashMap.2245", %"class.WTF::VectorBackedLinkedList.2249" }
%"class.WTF::HashMap.2245" = type { %"class.WTF::HashTable.2246" }
%"class.WTF::HashTable.2246" = type <{ %"struct.WTF::KeyValuePair.2248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2248" = type opaque
%"class.WTF::VectorBackedLinkedList.2249" = type { %"class.WTF::Vector.2250", i32, i32 }
%"class.WTF::Vector.2250" = type { %"class.WTF::VectorBuffer.2251" }
%"class.WTF::VectorBuffer.2251" = type { %"class.WTF::VectorBufferBase.2252" }
%"class.WTF::VectorBufferBase.2252" = type { %"class.WTF::VectorBackedLinkedListNode.2253"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2253" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2255" = type { %"class.std::__1::__compressed_pair.2256" }
%"class.std::__1::__compressed_pair.2256" = type { %"struct.std::__1::__compressed_pair_elem.2257" }
%"struct.std::__1::__compressed_pair_elem.2257" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2261" = type { %"class.std::__1::__compressed_pair.2262" }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2264, %class.scoped_refptr.2264, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2355", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2360", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2264 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2265", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2272" }
%"class.WTF::RefCounted.2265" = type { %"class.base::RefCounted.2266" }
%"class.base::RefCounted.2266" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2267", i32, [4 x i8] }>
%"class.WTF::Vector.2267" = type { %"class.WTF::VectorBuffer.2268" }
%"class.WTF::VectorBuffer.2268" = type { %"class.WTF::VectorBufferBase.2269" }
%"class.WTF::VectorBufferBase.2269" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2272" = type { %"class.WTF::VectorBuffer.2273" }
%"class.WTF::VectorBuffer.2273" = type { %"class.WTF::VectorBufferBase.2274" }
%"class.WTF::VectorBufferBase.2274" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2278", %"class.std::__1::unique_ptr.2327", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2275, %class.scoped_refptr.2276, %class.scoped_refptr.2277 }
%class.scoped_refptr.2275 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2291", i8, i8, %class.scoped_refptr.2275, i32, i32 }
%"class.WTF::RefCounted.2291" = type { %"class.base::RefCounted.2292" }
%"class.base::RefCounted.2292" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2276 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2440" }
%"class.blink::PaintPropertyNode.2440" = type { %"class.WTF::RefCounted.2441", i8, i8, %class.scoped_refptr.2276, i32, i32 }
%"class.WTF::RefCounted.2441" = type { %"class.base::RefCounted.2442" }
%"class.base::RefCounted.2442" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2277 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2437" }
%"class.blink::PaintPropertyNode.2437" = type { %"class.WTF::RefCounted.2438", i8, i8, %class.scoped_refptr.2277, i32, i32 }
%"class.WTF::RefCounted.2438" = type { %"class.base::RefCounted.2439" }
%"class.base::RefCounted.2439" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2278" = type { %"class.std::__1::__compressed_pair.2279" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.2280" }
%"struct.std::__1::__compressed_pair_elem.2280" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2281", %"class.WTF::Vector.2286", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2281" = type { %"class.WTF::VectorBuffer.2282" }
%"class.WTF::VectorBuffer.2282" = type { %"class.WTF::VectorBufferBase.2283" }
%"class.WTF::VectorBufferBase.2283" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2286" = type { %"class.WTF::VectorBuffer.2287" }
%"class.WTF::VectorBuffer.2287" = type { %"class.WTF::VectorBufferBase.2288" }
%"class.WTF::VectorBufferBase.2288" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2306" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2299, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2300", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2293" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.2293" = type { %"class.std::__1::__compressed_pair.2294" }
%"class.std::__1::__compressed_pair.2294" = type { %"struct.std::__1::__compressed_pair_elem.2295" }
%"struct.std::__1::__compressed_pair_elem.2295" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2299 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2422", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2422" = type { %"class.WTF::RefCounted.2423", i8, i8, %class.scoped_refptr.2299, i32, i32 }
%"class.WTF::RefCounted.2423" = type { %"class.base::RefCounted.2424" }
%"class.base::RefCounted.2424" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2425" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2425" = type { %"class.absl::optional_internal::optional_data.2426" }
%"class.absl::optional_internal::optional_data.2426" = type { %"class.absl::optional_internal::optional_data_base.2427" }
%"class.absl::optional_internal::optional_data_base.2427" = type { %"class.absl::optional_internal::optional_data_dtor_base.2428" }
%"class.absl::optional_internal::optional_data_dtor_base.2428" = type { i8, %union.anon.2429 }
%union.anon.2429 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2430", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2430" = type { %"class.std::__1::__vector_base.2431" }
%"class.std::__1::__vector_base.2431" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2432" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2432" = type { %"struct.std::__1::__compressed_pair_elem.2433" }
%"struct.std::__1::__compressed_pair_elem.2433" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2300" = type { %"class.std::__1::__compressed_pair.2301" }
%"class.std::__1::__compressed_pair.2301" = type { %"struct.std::__1::__compressed_pair_elem.2302" }
%"struct.std::__1::__compressed_pair_elem.2302" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2309", %"class.std::__1::unique_ptr.2315", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2309" = type { %"class.std::__1::__compressed_pair.2310" }
%"class.std::__1::__compressed_pair.2310" = type { %"struct.std::__1::__compressed_pair_elem.2311" }
%"struct.std::__1::__compressed_pair_elem.2311" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2315" = type { %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2327" = type { %"class.std::__1::__compressed_pair.2328" }
%"class.std::__1::__compressed_pair.2328" = type { %"struct.std::__1::__compressed_pair_elem.2329" }
%"struct.std::__1::__compressed_pair_elem.2329" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2330", %"class.absl::optional.2330" }
%"class.absl::optional.2330" = type { %"class.absl::optional_internal::optional_data.2331" }
%"class.absl::optional_internal::optional_data.2331" = type { %"class.absl::optional_internal::optional_data_base.2332" }
%"class.absl::optional_internal::optional_data_base.2332" = type { %"class.absl::optional_internal::optional_data_dtor_base.2333" }
%"class.absl::optional_internal::optional_data_dtor_base.2333" = type { i8, [3 x i8], %union.anon.2334 }
%union.anon.2334 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2272"*, %"class.absl::optional.2340", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2340" = type { %"class.absl::optional_internal::optional_data.2341" }
%"class.absl::optional_internal::optional_data.2341" = type { %"class.absl::optional_internal::optional_data_base.2342" }
%"class.absl::optional_internal::optional_data_base.2342" = type { %"class.absl::optional_internal::optional_data_dtor_base.2343" }
%"class.absl::optional_internal::optional_data_dtor_base.2343" = type { i8, %union.anon.2344 }
%union.anon.2344 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2345", %"class.WTF::Vector.2350" }
%"class.WTF::Vector.2345" = type { %"class.WTF::VectorBuffer.2346" }
%"class.WTF::VectorBuffer.2346" = type { %"class.WTF::VectorBufferBase.2347", [128 x i8] }
%"class.WTF::VectorBufferBase.2347" = type { i32*, i32, i32 }
%"class.WTF::Vector.2350" = type { %"class.WTF::VectorBuffer.2351" }
%"class.WTF::VectorBuffer.2351" = type { %"class.WTF::VectorBufferBase.2352", [128 x i8] }
%"class.WTF::VectorBufferBase.2352" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2355" = type { %"class.WTF::VectorBuffer.2356" }
%"class.WTF::VectorBuffer.2356" = type { %"class.WTF::VectorBufferBase.2357" }
%"class.WTF::VectorBufferBase.2357" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2360" = type { %"class.WTF::HashTable.2361" }
%"class.WTF::HashTable.2361" = type <{ %"struct.WTF::KeyValuePair.2364"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2364" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2365", %"class.WTF::Vector.2370" }
%"class.WTF::HashMap.2365" = type { %"class.WTF::HashTable.2366" }
%"class.WTF::HashTable.2366" = type <{ %"struct.WTF::KeyValuePair.2369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2369" = type opaque
%"class.WTF::Vector.2370" = type { %"class.WTF::VectorBuffer.2371" }
%"class.WTF::VectorBuffer.2371" = type { %"class.WTF::VectorBufferBase.2372" }
%"class.WTF::VectorBufferBase.2372" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2378" = type { %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2384" = type { %"class.WTF::VectorBuffer.2385" }
%"class.WTF::VectorBuffer.2385" = type { %"class.WTF::VectorBufferBase.2386" }
%"class.WTF::VectorBufferBase.2386" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2389 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2396" = type { %"class.WTF::HashSet.2399" }
%"class.WTF::HashSet.2399" = type { %"class.WTF::HashTable.2400" }
%"class.WTF::HashTable.2400" = type <{ %"class.blink::WeakMember.2402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2402" = type opaque
%"class.blink::HeapHashSet.2403" = type { %"class.WTF::HashSet.2406" }
%"class.WTF::HashSet.2406" = type { %"class.WTF::HashTable.2407" }
%"class.WTF::HashTable.2407" = type <{ %"class.blink::WeakMember.2409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2409" = type opaque
%"class.std::__1::unique_ptr.2410" = type { %"class.std::__1::__compressed_pair.2411" }
%"class.std::__1::__compressed_pair.2411" = type { %"struct.std::__1::__compressed_pair_elem.2412" }
%"struct.std::__1::__compressed_pair_elem.2412" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1863" }
%"class.base::time_internal::TimeBase.1863" = type { i64 }
%"class.std::__1::unique_ptr.2416" = type { %"class.std::__1::__compressed_pair.2417" }
%"class.std::__1::__compressed_pair.2417" = type { %"struct.std::__1::__compressed_pair_elem.2418" }
%"struct.std::__1::__compressed_pair_elem.2418" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1876", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1876" = type { %"class.absl::optional_internal::optional_data.1877" }
%"class.absl::optional_internal::optional_data.1877" = type { %"class.absl::optional_internal::optional_data_base.1878" }
%"class.absl::optional_internal::optional_data_base.1878" = type { %"class.absl::optional_internal::optional_data_dtor_base.1879" }
%"class.absl::optional_internal::optional_data_dtor_base.1879" = type { i8, %union.anon.1880 }
%union.anon.1880 = type { %"class.base::Time" }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { %"class.base::OnceCallback.492"*, i32, i32 }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.613" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.581", %"class.blink::Member.581" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.581", %"class.blink::Member.583", %"class.blink::Member.581", %"class.blink::Member.581", %"class.blink::Member.585" }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::Member.583", %"class.blink::Member.593", %"class.blink::Member.593", %"class.blink::Member.638", %"class.blink::Member.640", %"class.blink::Member.642", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.647", %"class.blink::HeapVector.649" }
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.597" }
%"class.blink::HeapHashMap.597" = type { %"class.WTF::HashMap.600" }
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type { %"class.WTF::AtomicString", %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.608", i32, %"class.blink::HeapVector.631" }
%"class.blink::HeapVector.631" = type { %"class.WTF::Vector.634" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %"class.blink::Member.608"*, i32, i32 }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.644" }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::HeapHashMap.646"* }
%"class.blink::HeapHashMap.646" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.649" = type { %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::Member.655"*, i32, i32 }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.657", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.659, %"class.WTF::Vector.678", %"class.WTF::Vector.678", %"class.blink::Member.581", %"class.blink::Member.683", %"class.blink::HeapHashSet.687", %"class.blink::Member.591", %"class.WTF::HashSet.694", %"class.WTF::TextPosition", %"class.blink::Member.698", %"class.blink::HeapVector.700", %"class.blink::Member.707" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.659 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.660", %"class.WTF::Vector.662" }
%"class.WTF::RefCounted.660" = type { %"class.base::RefCounted.661" }
%"class.base::RefCounted.661" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %"class.std::__1::unique_ptr.665"*, i32, i32 }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.668", %"class.WTF::String" }
%"class.WTF::Vector.668" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.678" = type { %"class.WTF::VectorBuffer.679" }
%"class.WTF::VectorBuffer.679" = type { %"class.WTF::VectorBufferBase.680" }
%"class.WTF::VectorBufferBase.680" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.685" }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.687" = type { %"class.WTF::HashSet.690" }
%"class.WTF::HashSet.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"class.blink::WeakMember.693"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.693" = type { %"class.blink::MemberBase.584" }
%"class.WTF::HashSet.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.659, %"class.blink::Member.655", %"class.blink::Member.683" }
%"class.blink::HeapVector.700" = type { %"class.WTF::Vector.703" }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.blink::Member.683"*, i32, i32 }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.610 }
%class.scoped_refptr.610 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.611", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.611" = type { %"class.base::RefCounted.612" }
%"class.base::RefCounted.612" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.617", %"class.blink::Member.619", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.617" = type { %"class.WTF::SingleThreadedBitField.618" }
%"class.WTF::SingleThreadedBitField.618" = type { i32 }
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.623 }
%class.scoped_refptr.623 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.624", %"class.WTF::AtomicString", %"class.WTF::Vector.626" }
%"class.WTF::RefCounted.624" = type { %"class.base::RefCounted.625" }
%"class.base::RefCounted.625" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.626" = type { %"class.WTF::VectorBuffer.627" }
%"class.WTF::VectorBuffer.627" = type { %"class.WTF::VectorBufferBase.628", [32 x i8] }
%"class.WTF::VectorBufferBase.628" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.2082 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2097" = type { %"class.blink::Member.2098" }
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2926" }
%"class.mojo::Remote.2926" = type { %"class.mojo::internal::InterfacePtrState.2927" }
%"class.mojo::internal::InterfacePtrState.2927" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2928" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.759, %"class.std::__1::unique_ptr.464", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.483, i32 }>
%class.scoped_refptr.759 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.483, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.817", %"class.absl::optional.822", %"class.absl::optional.776", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.842", i8, [7 x i8], %class.scoped_refptr.483, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.504" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.492", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.483, %"class.std::__1::unique_ptr.760", %"class.absl::optional.770", %"struct.std::__1::atomic.207", i8, i8, i8, i8, i32, i32, %"class.absl::optional.776", %"class.std::__1::unique_ptr.781", i8, i64, %class.scoped_refptr.814, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.816" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.483, i8, %"class.mojo::ScopedHandleBase.763", %class.scoped_refptr.764, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.765", i8*, %"class.base::WeakPtrFactory.766" }
%"class.mojo::ScopedHandleBase.763" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.764 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.765" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.766" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.770" = type { %"class.absl::optional_internal::optional_data.771" }
%"class.absl::optional_internal::optional_data.771" = type { %"class.absl::optional_internal::optional_data_base.772" }
%"class.absl::optional_internal::optional_data_base.772" = type { %"class.absl::optional_internal::optional_data_dtor_base.773" }
%"class.absl::optional_internal::optional_data_dtor_base.773" = type { i8, %union.anon.774 }
%union.anon.774 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.775", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.775" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.784", i8, i64, %class.scoped_refptr.785, %class.scoped_refptr.810 }
%"class.base::RepeatingCallback.784" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.785 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.786", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.788", %"class.std::__1::map.799", i8, [7 x i8] }>
%"class.base::RefCounted.786" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.787 }
%class.scoped_refptr.787 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.788" = type { %"class.std::__1::__tree.789" }
%"class.std::__1::__tree.789" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.790", %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::map.799" = type { %"class.std::__1::__tree.800" }
%"class.std::__1::__tree.800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%class.scoped_refptr.810 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.814 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.815 }
%class.scoped_refptr.815 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.816" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.817" = type { %"class.absl::optional_internal::optional_data.818" }
%"class.absl::optional_internal::optional_data.818" = type { %"class.absl::optional_internal::optional_data_base.819" }
%"class.absl::optional_internal::optional_data_base.819" = type { %"class.absl::optional_internal::optional_data_dtor_base.820" }
%"class.absl::optional_internal::optional_data_dtor_base.820" = type { i8, %union.anon.821 }
%union.anon.821 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.822" = type { %"class.absl::optional_internal::optional_data.823" }
%"class.absl::optional_internal::optional_data.823" = type { %"class.absl::optional_internal::optional_data_base.824" }
%"class.absl::optional_internal::optional_data_base.824" = type { %"class.absl::optional_internal::optional_data_dtor_base.825" }
%"class.absl::optional_internal::optional_data_dtor_base.825" = type { i8, [7 x i8], %union.anon.826 }
%union.anon.826 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.776" = type { %"class.absl::optional_internal::optional_data.777" }
%"class.absl::optional_internal::optional_data.777" = type { %"class.absl::optional_internal::optional_data_base.778" }
%"class.absl::optional_internal::optional_data_base.778" = type { %"class.absl::optional_internal::optional_data_dtor_base.779" }
%"class.absl::optional_internal::optional_data_dtor_base.779" = type { i8, %union.anon.780 }
%union.anon.780 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.827 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.827 = type { %"class.std::__1::map.830" }
%"class.std::__1::map.830" = type { %"class.std::__1::__tree.831" }
%"class.std::__1::__tree.831" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.841"*, i64 }
%"class.std::__1::unique_ptr.841" = type opaque
%"class.std::__1::map.842" = type { %"class.std::__1::__tree.843" }
%"class.std::__1::__tree.843" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.844", %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2928" = type { %"class.std::__1::__compressed_pair.2929" }
%"class.std::__1::__compressed_pair.2929" = type { %"struct.std::__1::__compressed_pair_elem.2930" }
%"struct.std::__1::__compressed_pair_elem.2930" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2100" = type { %"class.std::__1::__compressed_pair.2101" }
%"class.std::__1::__compressed_pair.2101" = type { %"struct.std::__1::__compressed_pair_elem.2102" }
%"struct.std::__1::__compressed_pair_elem.2102" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2103, %"class.blink::WebVector.2104", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2103 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type opaque
%"class.blink::WebVector.2104" = type { %"class.std::__1::vector.2105" }
%"class.std::__1::vector.2105" = type { %"class.std::__1::__vector_base.2106" }
%"class.std::__1::__vector_base.2106" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2112, i8, [7 x i8] }>
%class.scoped_refptr.2112 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2113", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2114" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2114" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2121" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2122" = type { %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2128" = type { %"class.std::__1::__compressed_pair.2129" }
%"class.std::__1::__compressed_pair.2129" = type { %"struct.std::__1::__compressed_pair_elem.2130" }
%"struct.std::__1::__compressed_pair_elem.2130" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2134" }
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2936" }
%"class.mojo::AssociatedRemote.2936" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2937" }
%"class.mojo::internal::AssociatedInterfacePtrState.2937" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2938" }
%"class.std::__1::unique_ptr.2938" = type { %"class.std::__1::__compressed_pair.2939" }
%"class.std::__1::__compressed_pair.2939" = type { %"struct.std::__1::__compressed_pair_elem.2940" }
%"struct.std::__1::__compressed_pair_elem.2940" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2136" = type { %"class.blink::Member.2137" }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2946" }
%"class.mojo::AssociatedRemote.2946" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2947" }
%"class.mojo::internal::AssociatedInterfacePtrState.2947" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2948" }
%"class.std::__1::unique_ptr.2948" = type { %"class.std::__1::__compressed_pair.2949" }
%"class.std::__1::__compressed_pair.2949" = type { %"struct.std::__1::__compressed_pair_elem.2950" }
%"struct.std::__1::__compressed_pair_elem.2950" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2139" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2956", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2956" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2957" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.464" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2141" = type { %"class.blink::Member.2142" }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2960", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver.2961" }
%"class.blink::ThreadState::PrefinalizerRegistration.2960" = type { i8 }
%"class.mojo::AssociatedReceiver.2961" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2962" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2962" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2144" }
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2965", %"class.blink::Member.997", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2965" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.759, %"class.std::__1::unique_ptr.464", %"class.base::WeakPtrFactory.2966" }
%"class.base::WeakPtrFactory.2966" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2146" = type { %"class.blink::Member.2147" }
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2969", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver.2970" }
%"class.blink::ThreadState::PrefinalizerRegistration.2969" = type { i8 }
%"class.mojo::AssociatedReceiver.2970" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2971" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2971" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::HeapHashMap.2157"* }
%"class.blink::HeapHashMap.2157" = type opaque
%"class.mojo::StructPtr.2158" = type { %"class.std::__1::unique_ptr.2159" }
%"class.std::__1::unique_ptr.2159" = type { %"class.std::__1::__compressed_pair.2160" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.2161" }
%"struct.std::__1::__compressed_pair_elem.2161" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2162", %"class.mojo::InlinedStructPtr.1770" }
%"class.mojo::InlinedStructPtr.2162" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1770" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2168" = type { %"class.absl::optional_internal::optional_data.2169" }
%"class.absl::optional_internal::optional_data.2169" = type { %"class.absl::optional_internal::optional_data_base.2170" }
%"class.absl::optional_internal::optional_data_base.2170" = type { %"class.absl::optional_internal::optional_data_dtor_base.2171" }
%"class.absl::optional_internal::optional_data_dtor_base.2171" = type { i8, %union.anon.2172 }
%union.anon.2172 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.746", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2015" }
%"class.std::__1::vector.2015" = type { %"class.std::__1::__vector_base.2016" }
%"class.std::__1::__vector_base.2016" = type { %"struct.std::__1::pair.2017"*, %"struct.std::__1::pair.2017"*, %"class.std::__1::__compressed_pair.2018" }
%"struct.std::__1::pair.2017" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2018" = type { %"struct.std::__1::__compressed_pair_elem.2019" }
%"struct.std::__1::__compressed_pair_elem.2019" = type { %"struct.std::__1::pair.2017"* }
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2025" = type { %"class.absl::optional_internal::optional_data.2026" }
%"class.absl::optional_internal::optional_data.2026" = type { %"class.absl::optional_internal::optional_data_base.2027" }
%"class.absl::optional_internal::optional_data_base.2027" = type { %"class.absl::optional_internal::optional_data_dtor_base.2028" }
%"class.absl::optional_internal::optional_data_dtor_base.2028" = type { i8, %union.anon.2029 }
%union.anon.2029 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1850" = type { %"class.absl::optional_internal::optional_data.1851" }
%"class.absl::optional_internal::optional_data.1851" = type { %"class.absl::optional_internal::optional_data_base.1852" }
%"class.absl::optional_internal::optional_data_base.1852" = type { %"class.absl::optional_internal::optional_data_dtor_base.1853" }
%"class.absl::optional_internal::optional_data_dtor_base.1853" = type { i8, %union.anon.1854 }
%union.anon.1854 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2030" }
%"class.blink::HeapHashSet.2030" = type { %"class.WTF::HashSet.2033" }
%"class.WTF::HashSet.2033" = type { %"class.WTF::HashTable.2034" }
%"class.WTF::HashTable.2034" = type <{ %"class.blink::WeakMember.2036"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2036" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.754" = type { %"class.WTF::VectorBuffer.755" }
%"class.WTF::VectorBuffer.755" = type { %"class.WTF::VectorBufferBase.756" }
%"class.WTF::VectorBufferBase.756" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.757", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.851" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.392", i32, i8, [3 x i8], %"class.blink::HeapVector.394", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.414", %"class.blink::Member.555", %"class.blink::Member.557", i8 }>
%"class.blink::Supplementable.859" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.860" }
%"class.blink::HeapHashMap.860" = type { %"class.WTF::HashMap.863" }
%"class.WTF::HashMap.863" = type { %"class.WTF::HashTable.864" }
%"class.WTF::HashTable.864" = type <{ %"struct.WTF::KeyValuePair.866"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.866" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.867" = type { i8 }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.710", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.718", %"class.WTF::Vector.718", i8, i32, %"class.blink::Member.723", %"class.blink::Member.387", %"class.blink::Member.1033", %"class.blink::Member.1035", %"class.blink::Member.1037", %"class.blink::Member.1039", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1047", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1053", %"class.blink::Member.1055", %"class.blink::Member.655", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1057", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.631", %"class.blink::Member.608", %"class.blink::Member.1008", %"class.blink::Member.608", %"class.blink::Member.608", %"class.blink::Member.608", %"class.blink::UserActionElementSet", %"class.blink::Member.1072", double, double, i64, i64, %"class.blink::HeapHashSet.1074", %"class.blink::HeapHashSet.1081", i16, i8, %"class.blink::Member.1088", %"class.blink::Member.1090", %"class.blink::Member.1490", %"class.blink::Member.1492", %"class.blink::TextLinkColors", %"class.blink::Member.1494", i8, [7 x i8], %"class.blink::HeapHashMap.1496", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.608", %"class.WTF::Vector.1503", %"class.blink::Member.1508", %"class.blink::Member.1510", i8, %"class.blink::Member.608", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1512", %"class.blink::HeapVector.1514", %"class.std::__1::unique_ptr.1522", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1528", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1541", %"class.WTF::Vector.1543", i8, i8, %"class.std::__1::unique_ptr.1548", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.631", %"class.blink::HeapVector.1554", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1562", i8, i32, %"class.blink::Member.1564", %"class.blink::Member.1566", %"class.blink::Member.1568", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1570", %"class.WTF::HashMap.1572", %"class.blink::Member.1577", %"class.blink::Member.1579", %"class.blink::Member.1581", %"class.blink::Member.1583", %"class.blink::Member.591", %"class.blink::Member.591", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1585", i8, i32, %"class.blink::Member.1592", %"class.blink::Member.1594", i32, %"class.blink::Member.1596", %"class.blink::Member.1598", %"class.blink::Member.1600", %"class.std::__1::unique_ptr.1602", i64, %"class.std::__1::unique_ptr.1608", i32, i32, %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.blink::Member.1623", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1625", %"class.WTF::Vector.1019", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1627", %"class.blink::Member.1634", %"class.std::__1::unique_ptr.1636", %"class.blink::Member.1642", i8, i8, %"class.WTF::String", %"class.blink::Member.1644", i8, [7 x i8], %"class.blink::HeapHashMap.1646", %"class.blink::HeapObserverSet.1653", %"class.blink::Member.1661", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1663", i32, i8, i8, %"class.blink::WeakMember.1665", %"class.blink::Member.1666" }
%"class.blink::Supplementable.710" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.711" }
%"class.blink::HeapHashMap.711" = type { %"class.WTF::HashMap.714" }
%"class.WTF::HashMap.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1698", %"class.blink::Member.1699", %"class.blink::Member.1701", %"class.blink::Member.1705", %class.scoped_refptr.1062, %class.scoped_refptr.1062, %"class.blink::Member.1707", %"class.blink::Member.1709", %"class.blink::Member.1715", %"class.blink::Member.1719", %"class.blink::Member.1771", %"class.blink::HeapHashMap.1773", %"class.blink::HeapHashSet.1780", %"class.blink::HeapHashSet.1780", %"class.blink::HeapHashMap.1941", %"class.blink::HeapVector.1948", %"class.blink::Member.1956", %"class.blink::HeapTaskRunnerTimer.1958", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1960", %"class.WTF::Vector.1967", %"class.blink::HeapHashSet.1973", %"class.blink::HeapHashSet.1973", %"class.std::__1::unique_ptr.1979", %"class.base::WeakPtr.1764", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1991", i8, i8, %"class.base::WeakPtrFactory.1993" }
%"class.blink::ThreadState::PrefinalizerRegistration.1698" = type { i8 }
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1713" }
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1723", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1725", %"class.WTF::HashSet.1730", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1734", %"class.std::__1::map.1741", %"class.std::__1::map.1752", %"class.std::__1::unique_ptr.1761", %"class.blink::Member.1709", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1768", %"class.mojo::InlinedStructPtr.1770", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1723" = type { %"class.blink::MemberBase.1724" }
%"class.blink::MemberBase.1724" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1725" = type { %"class.WTF::HashTable.1726" }
%"class.WTF::HashTable.1726" = type <{ %"struct.WTF::KeyValuePair.1729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1729" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1734" = type { %"class.WTF::HashMap.1737" }
%"class.WTF::HashMap.1737" = type { %"class.WTF::HashTable.1738" }
%"class.WTF::HashTable.1738" = type <{ %"struct.WTF::KeyValuePair.1740"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1740" = type opaque
%"class.std::__1::map.1741" = type { %"class.std::__1::__tree.1742" }
%"class.std::__1::__tree.1742" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1743", %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::map.1752" = type { %"class.std::__1::__tree.1753" }
%"class.std::__1::__tree.1753" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1754", %"class.std::__1::__compressed_pair.1758" }
%"class.std::__1::__compressed_pair.1754" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.1758" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1764", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1773" = type { %"class.WTF::HashMap.1776" }
%"class.WTF::HashMap.1776" = type { %"class.WTF::HashTable.1777" }
%"class.WTF::HashTable.1777" = type <{ %"struct.WTF::KeyValuePair.1779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1779" = type opaque
%"class.blink::HeapHashSet.1780" = type { %"class.WTF::HashSet.1783" }
%"class.WTF::HashSet.1783" = type { %"class.WTF::HashTable.1784" }
%"class.WTF::HashTable.1784" = type <{ %"class.blink::WeakMember.1786"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1790", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1810", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1899", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1916", %"class.blink::ResourceResponse", %class.scoped_refptr.1918, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1790" = type { %"class.absl::optional_internal::optional_data.1791" }
%"class.absl::optional_internal::optional_data.1791" = type { %"class.absl::optional_internal::optional_data_base.1792" }
%"class.absl::optional_internal::optional_data_base.1792" = type { %"class.absl::optional_internal::optional_data_dtor_base.1793" }
%"class.absl::optional_internal::optional_data_dtor_base.1793" = type { i8, %union.anon.1794 }
%union.anon.1794 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1795", i8, %"class.absl::optional.1800", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1795" = type { %"class.absl::optional_internal::optional_data.1796" }
%"class.absl::optional_internal::optional_data.1796" = type { %"class.absl::optional_internal::optional_data_base.1797" }
%"class.absl::optional_internal::optional_data_base.1797" = type { %"class.absl::optional_internal::optional_data_dtor_base.1798" }
%"class.absl::optional_internal::optional_data_dtor_base.1798" = type { i8, [7 x i8], %union.anon.1799 }
%union.anon.1799 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1800" = type { %"class.absl::optional_internal::optional_data.1801" }
%"class.absl::optional_internal::optional_data.1801" = type { %"class.absl::optional_internal::optional_data_base.1802" }
%"class.absl::optional_internal::optional_data_base.1802" = type { %"class.absl::optional_internal::optional_data_dtor_base.1803" }
%"class.absl::optional_internal::optional_data_dtor_base.1803" = type { i8, %union.anon.1804 }
%union.anon.1804 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1805", %"class.WTF::Vector.444" }
%"class.WTF::Vector.1805" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807" }
%"class.WTF::VectorBufferBase.1807" = type { i32*, i32, i32 }
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1895" }
%"class.WTF::HashMap.1895" = type { %"class.WTF::HashTable.1896" }
%"class.WTF::HashTable.1896" = type <{ %"struct.WTF::KeyValuePair.1898"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1898" = type <{ %"class.blink::WeakMember.2880", i32, [4 x i8] }>
%"class.blink::WeakMember.2880" = type { %"class.blink::MemberBase.2881" }
%"class.blink::MemberBase.2881" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2486", [7 x i8], %"class.blink::Member.1954", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2486" = type { i8 }
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1787" }
%"class.blink::HeapHashSet.1899" = type { %"class.WTF::HashSet.1902" }
%"class.WTF::HashSet.1902" = type { %"class.WTF::HashTable.1903" }
%"class.WTF::HashTable.1903" = type <{ %"class.blink::WeakMember.1905"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1905" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1906", %"class.WTF::String", %"class.WTF::HashSet.1907", i8, i8, %class.scoped_refptr.262, %class.scoped_refptr.1912, %class.scoped_refptr.1914 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1906" = type { i8 }
%"class.WTF::HashSet.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"struct.std::__1::pair.1911"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1911" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1912 = type { %"class.base::RefCountedData.1913"* }
%"class.base::RefCountedData.1913" = type opaque
%class.scoped_refptr.1914 = type { %"class.base::RefCountedData.1915"* }
%"class.base::RefCountedData.1915" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.350, %class.scoped_refptr.350, %class.scoped_refptr.350, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1818, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1830", %"class.absl::optional.1835", %"class.absl::optional.1845", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1850", %"class.absl::optional.1845", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1845", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1850", %"class.absl::optional.1855", i8, %class.scoped_refptr.1861 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1813" }
%"class.WTF::HashMap.1813" = type { %"class.WTF::HashTable.1814" }
%"class.WTF::HashTable.1814" = type <{ %"struct.WTF::KeyValuePair.1817"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1817" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1818 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1819", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1828, i8, %"class.url::Origin" }
%"class.base::RefCounted.1819" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1820" }
%"class.std::__1::vector.1820" = type { %"class.std::__1::__vector_base.1821" }
%"class.std::__1::__vector_base.1821" = type { %"class.std::__1::unique_ptr.1822"*, %"class.std::__1::unique_ptr.1822"*, %"class.std::__1::__compressed_pair.1823" }
%"class.std::__1::unique_ptr.1822" = type { %"class.std::__1::__compressed_pair.2866" }
%"class.std::__1::__compressed_pair.2866" = type { %"struct.std::__1::__compressed_pair_elem.2867" }
%"struct.std::__1::__compressed_pair_elem.2867" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"class.std::__1::unique_ptr.1822"* }
%class.scoped_refptr.1828 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1829", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1829" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1835" = type { %"class.absl::optional_internal::optional_data.1836" }
%"class.absl::optional_internal::optional_data.1836" = type { %"class.absl::optional_internal::optional_data_base.1837" }
%"class.absl::optional_internal::optional_data_base.1837" = type { %"class.absl::optional_internal::optional_data_dtor_base.1838" }
%"class.absl::optional_internal::optional_data_dtor_base.1838" = type { i8, %union.anon.1839 }
%union.anon.1839 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1840", %"class.WTF::Vector.444", %"class.WTF::String" }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %class.scoped_refptr.350*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.473", %"class.absl::optional.473" }
%"class.absl::optional.1845" = type { %"class.absl::optional_internal::optional_data.1846" }
%"class.absl::optional_internal::optional_data.1846" = type { %"class.absl::optional_internal::optional_data_base.1847" }
%"class.absl::optional_internal::optional_data_base.1847" = type { %"class.absl::optional_internal::optional_data_dtor_base.1848" }
%"class.absl::optional_internal::optional_data_dtor_base.1848" = type { i8, %union.anon.1849 }
%union.anon.1849 = type { %"class.WTF::String" }
%"class.absl::optional.1855" = type { %"class.absl::optional_internal::optional_data.1856" }
%"class.absl::optional_internal::optional_data.1856" = type { %"class.absl::optional_internal::optional_data_base.1857" }
%"class.absl::optional_internal::optional_data_base.1857" = type { %"class.absl::optional_internal::optional_data_dtor_base.1858" }
%"class.absl::optional_internal::optional_data_dtor_base.1858" = type { i8, %union.anon.1859 }
%union.anon.1859 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1860" }
%"class.mojo::PendingRemote.1860" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1861 = type { %"class.base::RefCountedData.1862"* }
%"class.base::RefCountedData.1862" = type { %"class.base::RefCountedThreadSafe.2871", %"class.base::internal::flat_tree.2872" }
%"class.base::RefCountedThreadSafe.2871" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2872" = type { %"class.std::__1::vector.2873" }
%"class.std::__1::vector.2873" = type { %"class.std::__1::__vector_base.2874" }
%"class.std::__1::__vector_base.2874" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2875" }
%"class.std::__1::__compressed_pair.2875" = type { %"struct.std::__1::__compressed_pair_elem.2876" }
%"struct.std::__1::__compressed_pair_elem.2876" = type { i32* }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1864", %class.scoped_refptr.1874, %class.scoped_refptr.1875, %"struct.blink::CacheControlHeader", %"class.absl::optional.473", %"class.absl::optional.1876", %"class.absl::optional.1876", %"class.absl::optional.1876", i64, %"class.blink::KURL", %"class.WTF::Vector.1881", %"class.WTF::String", %"class.WTF::Vector.444", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1850", %"class.WTF::Vector.444", %"class.blink::KURL", %"class.absl::optional.1886" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1864" = type { %"class.absl::optional_internal::optional_data.1865" }
%"class.absl::optional_internal::optional_data.1865" = type { %"class.absl::optional_internal::optional_data_base.1866" }
%"class.absl::optional_internal::optional_data_base.1866" = type { %"class.absl::optional_internal::optional_data_dtor_base.1867" }
%"class.absl::optional_internal::optional_data_dtor_base.1867" = type { i8, %union.anon.1868 }
%union.anon.1868 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.444", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1258", %"class.WTF::Vector.1869" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.628" }
%"class.WTF::Vector.1869" = type { %"class.WTF::VectorBuffer.1870" }
%"class.WTF::VectorBuffer.1870" = type { %"class.WTF::VectorBufferBase.1871" }
%"class.WTF::VectorBufferBase.1871" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1874 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1875 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883" }
%"class.WTF::VectorBufferBase.1883" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1886" = type { %"class.absl::optional_internal::optional_data.1887" }
%"class.absl::optional_internal::optional_data.1887" = type { %"class.absl::optional_internal::optional_data_base.1888" }
%"class.absl::optional_internal::optional_data_base.1888" = type { %"class.absl::optional_internal::optional_data_dtor_base.1889" }
%"class.absl::optional_internal::optional_data_dtor_base.1889" = type { i8, %union.anon.1890 }
%union.anon.1890 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1918 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1919", i64, %"class.WTF::Vector.1921", %"class.WTF::Vector.1926" }
%"class.WTF::RefCounted.1919" = type { %"class.base::RefCounted.1920" }
%"class.base::RefCounted.1920" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1921" = type { %"class.WTF::VectorBuffer.1922" }
%"class.WTF::VectorBuffer.1922" = type { %"class.WTF::VectorBufferBase.1923" }
%"class.WTF::VectorBufferBase.1923" = type { i8*, i32, i32 }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %"class.std::__1::unique_ptr.1929"*, i32, i32 }
%"class.std::__1::unique_ptr.1929" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1932" }
%"class.std::__1::__tree.1932" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1933", %"class.std::__1::__compressed_pair.1937" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.1937" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.blink::HeapHashMap.1941" = type { %"class.WTF::HashMap.1944" }
%"class.WTF::HashMap.1944" = type { %"class.WTF::HashTable.1945" }
%"class.WTF::HashTable.1945" = type <{ %"struct.WTF::KeyValuePair.1947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1947" = type opaque
%"class.blink::HeapVector.1948" = type { %"class.WTF::Vector.1951" }
%"class.WTF::Vector.1951" = type { %"class.WTF::VectorBuffer.1952" }
%"class.WTF::VectorBuffer.1952" = type { %"class.WTF::VectorBufferBase.1953" }
%"class.WTF::VectorBufferBase.1953" = type { %"class.blink::Member.1954"*, i32, i32 }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1958" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1959", { i64, i64 } }
%"class.blink::WeakMember.1959" = type { %"class.blink::MemberBase.1034" }
%"class.blink::HeapHashMap.1960" = type { %"class.WTF::HashMap.1963" }
%"class.WTF::HashMap.1963" = type { %"class.WTF::HashTable.1964" }
%"class.WTF::HashTable.1964" = type <{ %"struct.WTF::KeyValuePair.1966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1966" = type opaque
%"class.WTF::Vector.1967" = type { %"class.WTF::VectorBuffer.1968" }
%"class.WTF::VectorBuffer.1968" = type { %"class.WTF::VectorBufferBase.1969" }
%"class.WTF::VectorBufferBase.1969" = type { %class.scoped_refptr.1970*, i32, i32 }
%class.scoped_refptr.1970 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1973" = type { %"class.WTF::HashSet.1976" }
%"class.WTF::HashSet.1976" = type { %"class.WTF::HashTable.1977" }
%"class.WTF::HashTable.1977" = type <{ %"class.blink::Member.1916"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"class.WTF::HashSet.1982"* }
%"class.base::WeakPtr.1764" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1989" }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1993" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1057" = type { %"class.WTF::VectorBuffer.1058" }
%"class.WTF::VectorBuffer.1058" = type { %"class.WTF::VectorBufferBase.1059" }
%"class.WTF::VectorBufferBase.1059" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.262 }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.591", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.581", %"class.blink::Member.581", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1065" }
%"class.blink::HeapHashMap.1065" = type { %"class.WTF::HashMap.1068" }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::HeapHashSet.1081" = type { %"class.WTF::HashSet.1084" }
%"class.WTF::HashSet.1084" = type { %"class.WTF::HashTable.1085" }
%"class.WTF::HashTable.1085" = type <{ %"class.blink::WeakMember.1087"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1087" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.591", i32, i32, i32, %"class.blink::Member.655", %"class.blink::Member.1094", %"class.blink::Member.1121", %"class.blink::HeapHashMap.1123", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1130", %"class.blink::HeapHashSet.1130", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1136", %"class.blink::Member.1159", %"class.blink::Member.1189", %"class.blink::Member.1191", %"class.blink::Member.1197", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1359", %"class.blink::Member.1365", %"class.blink::HeapHashMap.1430", %"class.blink::HeapHashMap.1437", %"class.std::__1::unique_ptr.1444", i32, %"class.blink::HeapVector.1450", %"class.blink::HeapVector.1450", %"class.blink::HeapVector.1106", %"class.blink::HeapHashSet.1458", %"class.blink::HeapHashMap.1465", %"class.blink::Member.1472", %"class.blink::HeapHashMap.1474", %class.scoped_refptr.1481, %class.scoped_refptr.1482, %"class.blink::Member", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1483", %"class.blink::Member.608" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.583", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1098", %"class.blink::HeapVector.1106", i8 }>
%"class.blink::HeapVector.1098" = type { %"class.WTF::Vector.1101" }
%"class.WTF::Vector.1101" = type { %"class.WTF::VectorBuffer.1102" }
%"class.WTF::VectorBuffer.1102" = type { %"class.WTF::VectorBufferBase.1103" }
%"class.WTF::VectorBufferBase.1103" = type { %"class.blink::Member.1104"*, i32, i32 }
%"class.blink::Member.1104" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1117", %"class.blink::Member.1119", %"class.blink::Member.1119", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1117" = type <{ %"class.blink::Member.1119"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.581", %"class.blink::Member.1119", %"class.blink::Member.1119" }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1123" = type { %"class.WTF::HashMap.1126" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1129" = type opaque
%"class.blink::HeapHashSet.1130" = type { %"class.WTF::HashSet.1133" }
%"class.WTF::HashSet.1133" = type { %"class.WTF::HashTable.1134" }
%"class.WTF::HashTable.1134" = type <{ %"class.blink::Member.583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1140", %"class.blink::Member.1151" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.608", %"class.blink::HeapHashMap.1144" }
%"class.blink::HeapHashMap.1144" = type { %"class.WTF::HashMap.1147" }
%"class.WTF::HashMap.1147" = type { %"class.WTF::HashTable.1148" }
%"class.WTF::HashTable.1148" = type <{ %"struct.WTF::KeyValuePair.1150"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1150" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1155", %"class.blink::Member.1157" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1681", %"class.blink::Member.1151", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1681" = type { %"class.WTF::Vector.1684" }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686" }
%"class.WTF::VectorBufferBase.1686" = type { %"class.blink::Member.1157"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1688, i32, %"class.absl::optional.1689", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.468" }>
%class.sk_sp.1688 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1689" = type { %"class.absl::optional_internal::optional_data.1690" }
%"class.absl::optional_internal::optional_data.1690" = type { %"class.absl::optional_internal::optional_data_base.1691" }
%"class.absl::optional_internal::optional_data_base.1691" = type { %"class.absl::optional_internal::optional_data_dtor_base.1692" }
%"class.absl::optional_internal::optional_data_dtor_base.1692" = type { i8, %union.anon.1693 }
%union.anon.1693 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.591", %class.scoped_refptr.1170, %"class.blink::SelectorFilter", %"class.blink::Member.1121", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1163" }
%"class.blink::HeapHashMap.1163" = type { %"class.WTF::HashMap.1166" }
%"class.WTF::HashMap.1166" = type { %"class.WTF::HashTable.1167" }
%"class.WTF::HashTable.1167" = type <{ %"struct.WTF::KeyValuePair.1169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1169" = type opaque
%class.scoped_refptr.1170 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1171", %"class.std::__1::unique_ptr.1183" }
%"class.blink::HeapVector.1171" = type { %"class.WTF::Vector.1174" }
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.608", %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179", [16 x i8] }
%"class.WTF::VectorBufferBase.1179" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1195", i8, [7 x i8] }>
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1219", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1201", %"class.WTF::HashMap.1201", %"class.WTF::HashMap.1201", %"class.WTF::HashMap.1206", %class.scoped_refptr.1211, %class.scoped_refptr.1218, %class.scoped_refptr.1217, %"class.WTF::Vector.678", %"class.WTF::Vector.678", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"struct.WTF::KeyValuePair.1205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1205" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2893 }
%class.scoped_refptr.2893 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1212", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1214", %"union.blink::InvalidationSet::Backing.1215", %"union.blink::InvalidationSet::Backing.1216", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1214" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1215" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1216" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1206" = type { %"class.WTF::HashTable.1207" }
%"class.WTF::HashTable.1207" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type opaque
%class.scoped_refptr.1211 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1217, %class.scoped_refptr.1217 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1212", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1214", %"union.blink::InvalidationSet::Backing.1215", %"union.blink::InvalidationSet::Backing.1216", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1218 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1217 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1223", %"class.blink::HeapHashMap.1223", %"class.blink::HeapHashMap.1223", %"class.blink::HeapHashMap.1223", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::HeapVector.1230", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1270", %"class.blink::HeapVector.1278", %"class.blink::HeapVector.1286", %"class.blink::HeapVector.1303", %"class.blink::HeapVector.1311", %"class.blink::HeapVector.1319", %"class.blink::HeapVector.1328", %"class.WTF::Vector.1335", i32, %"class.blink::Member.1341" }
%"class.blink::HeapHashMap.1223" = type { %"class.WTF::HashMap.1226" }
%"class.WTF::HashMap.1226" = type { %"class.WTF::HashTable.1227" }
%"class.WTF::HashTable.1227" = type <{ %"struct.WTF::KeyValuePair.1229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1229" = type { %"class.WTF::AtomicString", %"class.blink::Member.2903" }
%"class.blink::Member.2903" = type { %"class.blink::MemberBase.2904" }
%"class.blink::MemberBase.2904" = type { %"class.blink::HeapVector.1230"* }
%"class.blink::HeapVector.1230" = type { %"class.WTF::Vector.1233" }
%"class.WTF::Vector.1233" = type { %"class.WTF::VectorBuffer.1234" }
%"class.WTF::VectorBuffer.1234" = type { %"class.WTF::VectorBufferBase.1235" }
%"class.WTF::VectorBufferBase.1235" = type { %"class.blink::Member.1236"*, i32, i32 }
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1240", i64, [4 x i32] }
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.619", %"class.blink::Member.1265" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1270" = type { %"class.WTF::Vector.1273" }
%"class.WTF::Vector.1273" = type { %"class.WTF::VectorBuffer.1274" }
%"class.WTF::VectorBuffer.1274" = type { %"class.WTF::VectorBufferBase.1275" }
%"class.WTF::VectorBufferBase.1275" = type { %"class.blink::Member.1276"*, i32, i32 }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.619", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1278" = type { %"class.WTF::Vector.1281" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { %"class.blink::Member.1284"*, i32, i32 }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.2900" }
%"class.blink::MemberBase.2900" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.619" }
%"class.blink::HeapVector.1286" = type { %"class.WTF::Vector.1289" }
%"class.WTF::Vector.1289" = type { %"class.WTF::VectorBuffer.1290" }
%"class.WTF::VectorBuffer.1290" = type { %"class.WTF::VectorBufferBase.1291" }
%"class.WTF::VectorBufferBase.1291" = type { %"class.blink::Member.1292"*, i32, i32 }
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1294", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1294" = type { %"class.WTF::Vector.1297" }
%"class.WTF::Vector.1297" = type { %"class.WTF::VectorBuffer.1298" }
%"class.WTF::VectorBuffer.1298" = type { %"class.WTF::VectorBufferBase.1299" }
%"class.WTF::VectorBufferBase.1299" = type { %"class.blink::Member.1300"*, i32, i32 }
%"class.blink::Member.1300" = type opaque
%"class.blink::HeapVector.1303" = type { %"class.WTF::Vector.1306" }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { %"class.blink::Member.1309"*, i32, i32 }
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.619" }
%"class.blink::HeapVector.1311" = type { %"class.WTF::Vector.1314" }
%"class.WTF::Vector.1314" = type { %"class.WTF::VectorBuffer.1315" }
%"class.WTF::VectorBuffer.1315" = type { %"class.WTF::VectorBufferBase.1316" }
%"class.WTF::VectorBufferBase.1316" = type { %"class.blink::Member.1317"*, i32, i32 }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.2902" }
%"class.blink::MemberBase.2902" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::HeapVector.1319" = type { %"class.WTF::Vector.1322" }
%"class.WTF::Vector.1322" = type { %"class.WTF::VectorBuffer.1323" }
%"class.WTF::VectorBuffer.1323" = type { %"class.WTF::VectorBufferBase.1324" }
%"class.WTF::VectorBufferBase.1324" = type { %"class.blink::Member.1325"*, i32, i32 }
%"class.blink::Member.1325" = type { %"class.blink::MemberBase.1326" }
%"class.blink::MemberBase.1326" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::HeapVector.1328" = type { %"class.WTF::Vector.1331" }
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1240", i32, i32 }
%"class.WTF::Vector.1335" = type { %"class.WTF::VectorBuffer.1336" }
%"class.WTF::VectorBuffer.1336" = type { %"class.WTF::VectorBufferBase.1337" }
%"class.WTF::VectorBufferBase.1337" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1338, i8, [7 x i8] }>
%class.scoped_refptr.1338 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1345", %"class.blink::HeapHashMap.1345", %"class.blink::HeapHashMap.1345", %"class.blink::HeapHashMap.1345" }
%"class.blink::HeapHashMap.1345" = type { %"class.WTF::HashMap.1348" }
%"class.WTF::HashMap.1348" = type { %"class.WTF::HashTable.1349" }
%"class.WTF::HashTable.1349" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1352" }
%"class.blink::HeapHashMap.1352" = type { %"class.WTF::HashMap.1355" }
%"class.WTF::HashMap.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"struct.WTF::KeyValuePair.1358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1358" = type { %"class.blink::Member.589", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2894", %"class.WTF::Vector.2894" }
%"class.WTF::Vector.2894" = type { %"class.WTF::VectorBuffer.2895" }
%"class.WTF::VectorBuffer.2895" = type { %"class.WTF::VectorBufferBase.2896" }
%"class.WTF::VectorBufferBase.2896" = type { %class.scoped_refptr.2893*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.581", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1359" = type { %"class.WTF::HashSet.1362" }
%"class.WTF::HashSet.1362" = type { %"class.WTF::HashTable.1363" }
%"class.WTF::HashTable.1363" = type <{ %"class.blink::Member.608"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1371", %"class.blink::Member.1373", %"class.blink::HeapHashSet.1411", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.1369" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1377", %"class.blink::HeapHashMap.1384", %"class.blink::HeapHashMap.1391", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1377" = type { %"class.WTF::HashMap.1380" }
%"class.WTF::HashMap.1380" = type { %"class.WTF::HashTable.1381" }
%"class.WTF::HashTable.1381" = type <{ %"struct.WTF::KeyValuePair.1383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1383" = type opaque
%"class.blink::HeapHashMap.1384" = type { %"class.WTF::HashMap.1387" }
%"class.WTF::HashMap.1387" = type { %"class.WTF::HashTable.1388" }
%"class.WTF::HashTable.1388" = type <{ %"struct.WTF::KeyValuePair.1390"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1390" = type opaque
%"class.blink::HeapHashMap.1391" = type { %"class.WTF::HashMap.1394" }
%"class.WTF::HashMap.1394" = type { %"class.WTF::HashTable.1395" }
%"class.WTF::HashTable.1395" = type <{ %"struct.WTF::KeyValuePair.1397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1397" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet.1400" }
%"class.WTF::LinkedHashSet.1400" = type { %"class.WTF::HashMap.1401", %"class.WTF::VectorBackedLinkedList.1405" }
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.WTF::VectorBackedLinkedList.1405" = type { %"class.WTF::Vector.1406", i32, i32 }
%"class.WTF::Vector.1406" = type { %"class.WTF::VectorBuffer.1407" }
%"class.WTF::VectorBuffer.1407" = type { %"class.WTF::VectorBufferBase.1408" }
%"class.WTF::VectorBufferBase.1408" = type { %"class.WTF::VectorBackedLinkedListNode.1409"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1409" = type opaque
%"class.blink::HeapHashSet.1411" = type { %"class.WTF::HashSet.1414" }
%"class.WTF::HashSet.1414" = type { %"class.WTF::HashTable.1415" }
%"class.WTF::HashTable.1415" = type <{ %"class.blink::WeakMember.1417"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1417" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.WTF::HashMap.1418", %"class.std::__1::unique_ptr.1423" }
%"class.WTF::HashMap.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"struct.WTF::KeyValuePair.1422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1422" = type opaque
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.WTF::Vector.1426"* }
%"class.WTF::Vector.1426" = type opaque
%"class.blink::HeapHashMap.1430" = type { %"class.WTF::HashMap.1433" }
%"class.WTF::HashMap.1433" = type { %"class.WTF::HashTable.1434" }
%"class.WTF::HashTable.1434" = type <{ %"struct.WTF::KeyValuePair.1436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1436" = type opaque
%"class.blink::HeapHashMap.1437" = type { %"class.WTF::HashMap.1440" }
%"class.WTF::HashMap.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.std::__1::unique_ptr.1444" = type { %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1450" = type { %"class.WTF::Vector.1453" }
%"class.WTF::Vector.1453" = type { %"class.WTF::VectorBuffer.1454" }
%"class.WTF::VectorBuffer.1454" = type { %"class.WTF::VectorBufferBase.1455" }
%"class.WTF::VectorBufferBase.1455" = type { %"struct.std::__1::pair.1456"*, i32, i32 }
%"struct.std::__1::pair.1456" = type opaque
%"class.blink::HeapVector.1106" = type { %"class.WTF::Vector.1109" }
%"class.WTF::Vector.1109" = type { %"class.WTF::VectorBuffer.1110" }
%"class.WTF::VectorBuffer.1110" = type { %"class.WTF::VectorBufferBase.1111" }
%"class.WTF::VectorBufferBase.1111" = type { %"struct.std::__1::pair.1112"*, i32, i32 }
%"struct.std::__1::pair.1112" = type opaque
%"class.blink::HeapHashSet.1458" = type { %"class.WTF::HashSet.1461" }
%"class.WTF::HashSet.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"class.blink::WeakMember.1464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1464" = type { %"class.blink::MemberBase.656" }
%"class.blink::HeapHashMap.1465" = type { %"class.WTF::HashMap.1468" }
%"class.WTF::HashMap.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"struct.WTF::KeyValuePair.1471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1471" = type { %"class.WTF::AtomicString", %"class.blink::Member.1292" }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1474" = type { %"class.WTF::HashMap.1477" }
%"class.WTF::HashMap.1477" = type { %"class.WTF::HashTable.1478" }
%"class.WTF::HashTable.1478" = type <{ %"struct.WTF::KeyValuePair.1480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1480" = type opaque
%class.scoped_refptr.1481 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1482 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::HeapHashSet.1483" = type { %"class.WTF::HashSet.1486" }
%"class.WTF::HashSet.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"class.blink::Member.1489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1489" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.583", %"class.blink::HeapVector.649" }
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1496" = type { %"class.WTF::HashMap.1499" }
%"class.WTF::HashMap.1499" = type { %"class.WTF::HashTable.1500" }
%"class.WTF::HashTable.1500" = type <{ %"struct.WTF::KeyValuePair.1502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1502" = type opaque
%"class.WTF::Vector.1503" = type { %"class.WTF::VectorBuffer.1504" }
%"class.WTF::VectorBuffer.1504" = type { %"class.WTF::VectorBufferBase.1505" }
%"class.WTF::VectorBufferBase.1505" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1514" = type { %"class.WTF::Vector.1517" }
%"class.WTF::Vector.1517" = type { %"class.WTF::VectorBuffer.1518" }
%"class.WTF::VectorBuffer.1518" = type { %"class.WTF::VectorBufferBase.1519" }
%"class.WTF::VectorBufferBase.1519" = type { %"class.blink::Member.1520"*, i32, i32 }
%"class.blink::Member.1520" = type opaque
%"class.std::__1::unique_ptr.1522" = type { %"class.std::__1::__compressed_pair.1523" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1528" = type { %"class.WTF::HashSet.1531" }
%"class.WTF::HashSet.1531" = type { %"class.WTF::HashTable.1532" }
%"class.WTF::HashTable.1532" = type <{ %"class.blink::WeakMember.1534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1534" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1535", i32, [4 x i8] }>
%"class.WTF::Vector.1535" = type { %"class.WTF::VectorBuffer.1536" }
%"class.WTF::VectorBuffer.1536" = type { %"class.WTF::VectorBufferBase.1537" }
%"class.WTF::VectorBufferBase.1537" = type { %"struct.std::__1::pair.1538"*, i32, i32 }
%"struct.std::__1::pair.1538" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1543" = type { %"class.WTF::VectorBuffer.1544" }
%"class.WTF::VectorBuffer.1544" = type { %"class.WTF::VectorBufferBase.1545" }
%"class.WTF::VectorBufferBase.1545" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1554" = type { %"class.WTF::Vector.1557" }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559" }
%"class.WTF::VectorBufferBase.1559" = type { %"class.blink::Member.1560"*, i32, i32 }
%"class.blink::Member.1560" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.591" }
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1572" = type { %"class.WTF::HashTable.1573" }
%"class.WTF::HashTable.1573" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1064", { i64, i64 } }
%"class.blink::WeakMember.1064" = type { %"class.blink::MemberBase.592" }
%"class.blink::HeapHashSet.1585" = type { %"class.WTF::HashSet.1588" }
%"class.WTF::HashSet.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"class.blink::Member.1591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1591" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1602" = type { %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.694", %"class.WTF::HashSet.694", %"class.WTF::HashSet.694", %"class.WTF::HashSet.694", %"class.WTF::HashSet.694", %"class.WTF::HashSet.694", i32, [4 x i8], %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", %"class.WTF::HashMap.1611", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1611" = type { %"class.WTF::HashTable.1612" }
%"class.WTF::HashTable.1612" = type <{ %"struct.WTF::KeyValuePair.1615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1615" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1627" = type { %"class.WTF::HashMap.1630" }
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1633"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1633" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1646" = type { %"class.WTF::HashMap.1649" }
%"class.WTF::HashMap.1649" = type { %"class.WTF::HashTable.1650" }
%"class.WTF::HashTable.1650" = type <{ %"struct.WTF::KeyValuePair.1652"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1652" = type opaque
%"class.blink::HeapObserverSet.1653" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1654" }
%"class.blink::HeapHashSet.1654" = type { %"class.WTF::HashSet.1657" }
%"class.WTF::HashSet.1657" = type { %"class.WTF::HashTable.1658" }
%"class.WTF::HashTable.1658" = type <{ %"class.blink::WeakMember.1660"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1660" = type opaque
%"class.blink::Member.1661" = type { %"class.blink::MemberBase.1662" }
%"class.blink::MemberBase.1662" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.591", %"class.blink::HeapHashSet.1670", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1677", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1670" = type { %"class.WTF::HashSet.1673" }
%"class.WTF::HashSet.1673" = type { %"class.WTF::HashTable.1674" }
%"class.WTF::HashTable.1674" = type <{ %"class.blink::Member.1676"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1676" = type opaque
%"class.blink::HeapTaskRunnerTimer.1677" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1678", { i64, i64 } }
%"class.blink::WeakMember.1678" = type { %"class.blink::MemberBase.1664" }
%"class.blink::WeakMember.1665" = type { %"class.blink::MemberBase.582" }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.892 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.894", i64, %"class.WTF::Vector.898", %"class.WTF::Vector.903", %"class.WTF::Vector.909", %"class.WTF::Vector.927", %class.scoped_refptr.347, %"class.WTF::HashMap.933", %"class.WTF::Vector.938", %"class.WTF::Vector.898", %"class.WTF::Vector.944", %"class.WTF::HashMap.949", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.893" }
%"class.base::RefCountedThreadSafe.893" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { i8* }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905", [8 x i8] }
%"class.WTF::VectorBufferBase.905" = type { %class.scoped_refptr.906*, i32, i32 }
%class.scoped_refptr.906 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911" }
%"class.WTF::VectorBufferBase.911" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.913", %"class.std::__1::unique_ptr.919" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.912 }
%class.scoped_refptr.912 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.930", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.930" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.937" = type opaque
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %"class.mojo::ScopedHandleBase.941"*, i32, i32 }
%"class.mojo::ScopedHandleBase.941" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900", [16 x i8] }
%"class.WTF::VectorBufferBase.900" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"struct.WTF::KeyValuePair.953"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.953" = type { i8**, %"class.std::__1::unique_ptr.2905" }
%"class.std::__1::unique_ptr.2905" = type { %"class.std::__1::__compressed_pair.2906" }
%"class.std::__1::__compressed_pair.2906" = type { %"struct.std::__1::__compressed_pair_elem.2907" }
%"struct.std::__1::__compressed_pair_elem.2907" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.954" = type { %"class.WTF::HashSet.957" }
%"class.WTF::HashSet.957" = type { %"class.WTF::HashTable.958" }
%"class.WTF::HashTable.958" = type <{ %"class.blink::WeakMember.960"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.960" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.968", %"class.blink::Member.968", %"class.blink::Member.970", %"class.blink::Member.972", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.963" }
%"class.absl::optional.963" = type { %"class.absl::optional_internal::optional_data.964" }
%"class.absl::optional_internal::optional_data.964" = type { %"class.absl::optional_internal::optional_data_base.965" }
%"class.absl::optional_internal::optional_data_base.965" = type { %"class.absl::optional_internal::optional_data_dtor_base.966" }
%"class.absl::optional_internal::optional_data_dtor_base.966" = type { i8, %union.anon.967 }
%union.anon.967 = type { i64 }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::Event"* }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.974" = type { %"class.WTF::HashMap.977" }
%"class.WTF::HashMap.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"struct.WTF::KeyValuePair.980"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.980" = type opaque
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.997", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1008", %"class.blink::Member.1010", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.999", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1001", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.581", i32, i32 }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.723", %"class.blink::Member.2001", %"class.blink::Member.2003" }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.723", %"class.blink::HeapMojoRemote.1996" }
%"class.blink::HeapMojoRemote.1996" = type { %"class.blink::Member.1997" }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::HeapHashMap.1018"* }
%"class.blink::HeapHashMap.1018" = type opaque
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { i8*, i32, i32 }
%"class.util::TokenType.757" = type { %"class.base::StrongAlias.758" }
%"class.base::StrongAlias.758" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1028" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032" }
%"class.WTF::VectorBufferBase.1032" = type { i64*, i32, i32 }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.262, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.2974", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.2974" = type { %"class.blink::MemberBase.2975" }
%"class.blink::MemberBase.2975" = type { %"class.blink::Document"* }
%"class.WTF::Vector.2467" = type { %"class.WTF::VectorBuffer.2468" }
%"class.WTF::VectorBuffer.2468" = type { %"class.WTF::VectorBufferBase.2469", [32 x i8] }
%"class.WTF::VectorBufferBase.2469" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::OffscreenFontSelector" = type { %"class.blink::FontSelector", %"class.blink::GenericFontFamilySettings", %"class.blink::Member.1373", %"class.blink::Member.2567" }
%"class.blink::Member.2567" = type { %"class.blink::MemberBase.2568" }
%"class.blink::MemberBase.2568" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.2522", %"class.blink::Supplementable.2523", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.2538", %"class.blink::Member.2544", %"class.blink::Member.2546", %"class.blink::Member.2556", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2558", i32, %"class.blink::Member.2565", %"class.std::__1::unique_ptr.1608", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2588", %"class.absl::optional.2592", i32, %"class.std::__1::unique_ptr.1602", %"class.std::__1::unique_ptr.2598", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.2502", %"class.blink::Member.1033", %"class.blink::HeapHashSet.2508", %class.scoped_refptr.2514, %"class.blink::Member.2516", %"class.blink::Member.2518", i32, %"class.WTF::Vector.420", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.884" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.2487" }
%"class.blink::PersistentBase.2487" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.2490" }
%"class.blink::Supplementable.2490" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2491" }
%"class.blink::HeapHashMap.2491" = type { %"class.WTF::HashMap.2494" }
%"class.WTF::HashMap.2494" = type { %"class.WTF::HashTable.2495" }
%"class.WTF::HashTable.2495" = type <{ %"struct.WTF::KeyValuePair.2497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2497" = type { i8*, %"class.blink::Member.2882" }
%"class.blink::Member.2882" = type { %"class.blink::MemberBase.2883" }
%"class.blink::MemberBase.2883" = type { %"class.blink::Supplement.2884"* }
%"class.blink::Supplement.2884" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2885" }
%"class.blink::Member.2885" = type { %"class.blink::MemberBase.2886" }
%"class.blink::MemberBase.2886" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2498" }
%"struct.std::__1::atomic.2498" = type { %"struct.std::__1::__atomic_base.2499" }
%"struct.std::__1::__atomic_base.2499" = type { %"struct.std::__1::__cxx_atomic_impl.2500" }
%"struct.std::__1::__cxx_atomic_impl.2500" = type { %"struct.std::__1::__cxx_atomic_base_impl.2501" }
%"struct.std::__1::__cxx_atomic_base_impl.2501" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2502" = type { %"class.std::__1::__compressed_pair.2503" }
%"class.std::__1::__compressed_pair.2503" = type { %"struct.std::__1::__compressed_pair_elem.2504" }
%"struct.std::__1::__compressed_pair_elem.2504" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.2508" = type { %"class.WTF::HashSet.2511" }
%"class.WTF::HashSet.2511" = type { %"class.WTF::HashTable.2512" }
%"class.WTF::HashTable.2512" = type <{ %"class.blink::WeakMember.1959"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2514 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.2515", [4 x i8] }>
%"class.base::RefCounted.2515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2516" = type { %"class.blink::MemberBase.2517" }
%"class.blink::MemberBase.2517" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.2518" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2520", i32, [4 x i8] }>
%"class.std::__1::bitset.2520" = type { %"class.std::__1::__bitset.2521" }
%"class.std::__1::__bitset.2521" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable.2522" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.2523" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2524" }
%"class.blink::HeapHashMap.2524" = type { %"class.WTF::HashMap.2527" }
%"class.WTF::HashMap.2527" = type { %"class.WTF::HashTable.2528" }
%"class.WTF::HashTable.2528" = type <{ %"struct.WTF::KeyValuePair.2530"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2530" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2531", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2531" = type { %"class.std::__1::__vector_base.2532" }
%"class.std::__1::__vector_base.2532" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2533" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2533" = type { %"struct.std::__1::__compressed_pair_elem.2534" }
%"struct.std::__1::__compressed_pair_elem.2534" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2538" = type { %"class.std::__1::__compressed_pair.2539" }
%"class.std::__1::__compressed_pair.2539" = type { %"struct.std::__1::__compressed_pair_elem.2540" }
%"struct.std::__1::__compressed_pair_elem.2540" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::Member.2544" = type { %"class.blink::MemberBase.2545" }
%"class.blink::MemberBase.2545" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2546" = type { %"class.blink::MemberBase.2547" }
%"class.blink::MemberBase.2547" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2548" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember", %"class.WTF::Vector.444", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.2548" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2549" }
%"class.blink::HeapHashMap.2549" = type { %"class.WTF::HashMap.2552" }
%"class.WTF::HashMap.2552" = type { %"class.WTF::HashTable.2553" }
%"class.WTF::HashTable.2553" = type <{ %"struct.WTF::KeyValuePair.2555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2555" = type { i8*, %"class.blink::Member.2888" }
%"class.blink::Member.2888" = type { %"class.blink::MemberBase.2889" }
%"class.blink::MemberBase.2889" = type { %"class.blink::Supplement.2890"* }
%"class.blink::Supplement.2890" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2891" }
%"class.blink::Member.2891" = type { %"class.blink::MemberBase.2892" }
%"class.blink::MemberBase.2892" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2556" = type { %"class.blink::MemberBase.2557" }
%"class.blink::MemberBase.2557" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.2558" = type { %"class.WTF::HashMap.2561" }
%"class.WTF::HashMap.2561" = type { %"class.WTF::HashTable.2562" }
%"class.WTF::HashTable.2562" = type <{ %"struct.WTF::KeyValuePair.2564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2564" = type opaque
%"class.blink::Member.2565" = type { %"class.blink::MemberBase.2566" }
%"class.blink::MemberBase.2566" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2569", %"class.std::__1::map.2577" }
%"class.mojo::Remote.2569" = type { %"class.mojo::internal::InterfacePtrState.2570" }
%"class.mojo::internal::InterfacePtrState.2570" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2571" }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2577" = type { %"class.std::__1::__tree.2578" }
%"class.std::__1::__tree.2578" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2579", %"class.std::__1::__compressed_pair.2583" }
%"class.std::__1::__compressed_pair.2579" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"class.std::__1::__compressed_pair.2583" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.blink::Member.2588" = type { %"class.blink::MemberBase.2589" }
%"class.blink::MemberBase.2589" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1907", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1906", [6 x i8] }>
%"class.absl::optional.2592" = type { %"class.absl::optional_internal::optional_data.2593" }
%"class.absl::optional_internal::optional_data.2593" = type { %"class.absl::optional_internal::optional_data_base.2594" }
%"class.absl::optional_internal::optional_data_base.2594" = type { %"class.absl::optional_internal::optional_data_dtor_base.2595" }
%"class.absl::optional_internal::optional_data_dtor_base.2595" = type { i8, [7 x i8], %union.anon.2596 }
%union.anon.2596 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2597", i8, [7 x i8] }>
%"struct.std::__1::pair.2597" = type { i64, i64 }
%"class.std::__1::unique_ptr.2598" = type { %"class.std::__1::__compressed_pair.2599" }
%"class.std::__1::__compressed_pair.2599" = type { %"struct.std::__1::__compressed_pair_elem.2600" }
%"struct.std::__1::__compressed_pair_elem.2600" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.2601", %"class.mojo::ScopedHandleBase.2795", %"class.mojo::StructPtr.2796", %"class.std::__1::vector.2804", %"class.std::__1::vector.2811" }
%"class.mojo::StructPtr.2601" = type { %"class.std::__1::unique_ptr.2602" }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2605, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2620", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.2636", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2642", %"class.std::__1::vector.2649", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1886", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2684", %"class.absl::optional.2781", %"class.absl::optional.1850", %"class.std::__1::vector.2649", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2605 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2606", %"class.std::__1::vector.2607", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2606" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2607" = type { %"class.std::__1::__vector_base.2608" }
%"class.std::__1::__vector_base.2608" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2609" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.2620" = type { %"class.std::__1::unique_ptr.2621" }
%"class.std::__1::unique_ptr.2621" = type { %"class.std::__1::__compressed_pair.2622" }
%"class.std::__1::__compressed_pair.2622" = type { %"struct.std::__1::__compressed_pair_elem.2623" }
%"struct.std::__1::__compressed_pair_elem.2623" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2624", %"class.std::__1::vector.2624", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2624" = type { %"class.std::__1::__vector_base.2625" }
%"class.std::__1::__vector_base.2625" = type { %"class.mojo::InlinedStructPtr.2626"*, %"class.mojo::InlinedStructPtr.2626"*, %"class.std::__1::__compressed_pair.2628" }
%"class.mojo::InlinedStructPtr.2626" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2628" = type { %"struct.std::__1::__compressed_pair_elem.2629" }
%"struct.std::__1::__compressed_pair_elem.2629" = type { %"class.mojo::InlinedStructPtr.2626"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.2636" = type { %"class.std::__1::__vector_base.2637" }
%"class.std::__1::__vector_base.2637" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.2638" }
%"class.std::__1::__compressed_pair.2638" = type { %"struct.std::__1::__compressed_pair_elem.2616" }
%"struct.std::__1::__compressed_pair_elem.2616" = type { %class.GURL* }
%"class.absl::optional.2642" = type { %"class.absl::optional_internal::optional_data.2643" }
%"class.absl::optional_internal::optional_data.2643" = type { %"class.absl::optional_internal::optional_data_base.2644" }
%"class.absl::optional_internal::optional_data_base.2644" = type { %"class.absl::optional_internal::optional_data_dtor_base.2645" }
%"class.absl::optional_internal::optional_data_dtor_base.2645" = type { i8, [7 x i8], %union.anon.2646 }
%union.anon.2646 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.2647, %class.scoped_refptr.2647, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2667", %"class.std::__1::basic_string", %"class.std::__1::vector.2675", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.2647 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.2648", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.2656", %"class.std::__1::vector.2660" }
%"class.base::RefCountedThreadSafe.2648" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2649", %"class.std::__1::vector.2649", %"class.std::__1::vector.2649", %"class.std::__1::vector.2649" }
%"class.std::__1::unique_ptr.2656" = type { %"class.std::__1::__compressed_pair.2657" }
%"class.std::__1::__compressed_pair.2657" = type { %"struct.std::__1::__compressed_pair_elem.2658" }
%"struct.std::__1::__compressed_pair_elem.2658" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.2660" = type { %"class.std::__1::__vector_base.2661" }
%"class.std::__1::__vector_base.2661" = type { %"class.std::__1::unique_ptr.2656"*, %"class.std::__1::unique_ptr.2656"*, %"class.std::__1::__compressed_pair.2662" }
%"class.std::__1::__compressed_pair.2662" = type { %"struct.std::__1::__compressed_pair_elem.2663" }
%"struct.std::__1::__compressed_pair_elem.2663" = type { %"class.std::__1::unique_ptr.2656"* }
%"class.std::__1::vector.2667" = type { %"class.std::__1::__vector_base.2668" }
%"class.std::__1::__vector_base.2668" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2670" }
%"class.net::HashValue" = type { i32, %union.anon.2669 }
%union.anon.2669 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2670" = type { %"struct.std::__1::__compressed_pair_elem.2671" }
%"struct.std::__1::__compressed_pair_elem.2671" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2675" = type { %"class.std::__1::__vector_base.2676" }
%"class.std::__1::__vector_base.2676" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2679" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2677, i32, [4 x i8] }>
%class.scoped_refptr.2677 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2678", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2678" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2679" = type { %"struct.std::__1::__compressed_pair_elem.2680" }
%"struct.std::__1::__compressed_pair_elem.2680" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.2684" = type { %"class.std::__1::unique_ptr.2685" }
%"class.std::__1::unique_ptr.2685" = type { %"class.std::__1::__compressed_pair.2686" }
%"class.std::__1::__compressed_pair.2686" = type { %"struct.std::__1::__compressed_pair_elem.2687" }
%"struct.std::__1::__compressed_pair_elem.2687" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.2688", %"class.mojo::StructPtr.2738", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2745", %"class.base::TimeDelta", %"class.absl::optional.2745", i32, [4 x i8], %"class.std::__1::vector.2757", %"class.mojo::StructPtr.2771", i8, [7 x i8] }>
%"class.std::__1::vector.2688" = type { %"class.std::__1::__vector_base.2689" }
%"class.std::__1::__vector_base.2689" = type { %"class.mojo::StructPtr.2690"*, %"class.mojo::StructPtr.2690"*, %"class.std::__1::__compressed_pair.2733" }
%"class.mojo::StructPtr.2690" = type { %"class.std::__1::unique_ptr.2691" }
%"class.std::__1::unique_ptr.2691" = type { %"class.std::__1::__compressed_pair.2692" }
%"class.std::__1::__compressed_pair.2692" = type { %"struct.std::__1::__compressed_pair_elem.2693" }
%"struct.std::__1::__compressed_pair_elem.2693" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2694", %"class.base::flat_map.2701", %"class.base::flat_map.2711", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2721", i8, %"class.std::__1::vector.2649", i32, %"class.mojo::StructPtr.2723", %"class.std::__1::vector.2649" }
%"class.mojo::StructPtr.2694" = type { %"class.std::__1::unique_ptr.2695" }
%"class.std::__1::unique_ptr.2695" = type { %"class.std::__1::__compressed_pair.2696" }
%"class.std::__1::__compressed_pair.2696" = type { %"struct.std::__1::__compressed_pair_elem.2697" }
%"struct.std::__1::__compressed_pair_elem.2697" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.2701" = type { %"class.base::internal::flat_tree.2702" }
%"class.base::internal::flat_tree.2702" = type { %"class.std::__1::vector.2703" }
%"class.std::__1::vector.2703" = type { %"class.std::__1::__vector_base.2704" }
%"class.std::__1::__vector_base.2704" = type { %"struct.std::__1::pair.2705"*, %"struct.std::__1::pair.2705"*, %"class.std::__1::__compressed_pair.2706" }
%"struct.std::__1::pair.2705" = type opaque
%"class.std::__1::__compressed_pair.2706" = type { %"struct.std::__1::__compressed_pair_elem.2707" }
%"struct.std::__1::__compressed_pair_elem.2707" = type { %"struct.std::__1::pair.2705"* }
%"class.base::flat_map.2711" = type { %"class.base::internal::flat_tree.2712" }
%"class.base::internal::flat_tree.2712" = type { %"class.std::__1::vector.2713" }
%"class.std::__1::vector.2713" = type { %"class.std::__1::__vector_base.2714" }
%"class.std::__1::__vector_base.2714" = type { %"struct.std::__1::pair.2715"*, %"struct.std::__1::pair.2715"*, %"class.std::__1::__compressed_pair.2716" }
%"struct.std::__1::pair.2715" = type opaque
%"class.std::__1::__compressed_pair.2716" = type { %"struct.std::__1::__compressed_pair_elem.2717" }
%"struct.std::__1::__compressed_pair_elem.2717" = type { %"struct.std::__1::pair.2715"* }
%"class.mojo::InlinedStructPtr.2721" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.2723" = type { %"class.std::__1::unique_ptr.2724" }
%"class.std::__1::unique_ptr.2724" = type { %"class.std::__1::__compressed_pair.2725" }
%"class.std::__1::__compressed_pair.2725" = type { %"struct.std::__1::__compressed_pair_elem.2726" }
%"struct.std::__1::__compressed_pair_elem.2726" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.2649", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2733" = type { %"struct.std::__1::__compressed_pair_elem.2734" }
%"struct.std::__1::__compressed_pair_elem.2734" = type { %"class.mojo::StructPtr.2690"* }
%"class.mojo::StructPtr.2738" = type { %"class.std::__1::unique_ptr.2739" }
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.2025", i32, %"class.absl::optional.2025" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.2025", i32, %"class.absl::optional.2025" }
%"class.absl::optional.2745" = type { %"class.absl::optional_internal::optional_data.2746" }
%"class.absl::optional_internal::optional_data.2746" = type { %"class.absl::optional_internal::optional_data_base.2747" }
%"class.absl::optional_internal::optional_data_base.2747" = type { %"class.absl::optional_internal::optional_data_dtor_base.2748" }
%"class.absl::optional_internal::optional_data_dtor_base.2748" = type { i8, %union.anon.2749 }
%union.anon.2749 = type { %"class.std::__1::vector.2750" }
%"class.std::__1::vector.2750" = type { %"class.std::__1::__vector_base.2751" }
%"class.std::__1::__vector_base.2751" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2752" }
%"class.std::__1::__compressed_pair.2752" = type { %"struct.std::__1::__compressed_pair_elem.2753" }
%"struct.std::__1::__compressed_pair_elem.2753" = type { i32* }
%"class.std::__1::vector.2757" = type { %"class.std::__1::__vector_base.2758" }
%"class.std::__1::__vector_base.2758" = type { %"class.mojo::StructPtr.2759"*, %"class.mojo::StructPtr.2759"*, %"class.std::__1::__compressed_pair.2766" }
%"class.mojo::StructPtr.2759" = type { %"class.std::__1::unique_ptr.2760" }
%"class.std::__1::unique_ptr.2760" = type { %"class.std::__1::__compressed_pair.2761" }
%"class.std::__1::__compressed_pair.2761" = type { %"struct.std::__1::__compressed_pair_elem.2762" }
%"struct.std::__1::__compressed_pair_elem.2762" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.2025" }
%"class.std::__1::__compressed_pair.2766" = type { %"struct.std::__1::__compressed_pair_elem.2767" }
%"struct.std::__1::__compressed_pair_elem.2767" = type { %"class.mojo::StructPtr.2759"* }
%"class.mojo::StructPtr.2771" = type { %"class.std::__1::unique_ptr.2772" }
%"class.std::__1::unique_ptr.2772" = type { %"class.std::__1::__compressed_pair.2773" }
%"class.std::__1::__compressed_pair.2773" = type { %"struct.std::__1::__compressed_pair_elem.2774" }
%"struct.std::__1::__compressed_pair_elem.2774" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.2649"* }
%"class.absl::optional.2781" = type { %"class.absl::optional_internal::optional_data.2782" }
%"class.absl::optional_internal::optional_data.2782" = type { %"class.absl::optional_internal::optional_data_base.2783" }
%"class.absl::optional_internal::optional_data_base.2783" = type { %"class.absl::optional_internal::optional_data_dtor_base.2784" }
%"class.absl::optional_internal::optional_data_dtor_base.2784" = type { i8, %union.anon.2785 }
%union.anon.2785 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.2786" }
%"class.std::__1::unique_ptr.2786" = type { %"class.std::__1::__compressed_pair.2787" }
%"class.std::__1::__compressed_pair.2787" = type { %"struct.std::__1::__compressed_pair_elem.2788" }
%"struct.std::__1::__compressed_pair_elem.2788" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.2649", %"class.absl::optional.2025", %"class.std::__1::vector.2649", %"class.std::__1::vector.2649" }
%"class.std::__1::vector.2649" = type { %"class.std::__1::__vector_base.2650" }
%"class.std::__1::__vector_base.2650" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2651" }
%"class.std::__1::__compressed_pair.2651" = type { %"struct.std::__1::__compressed_pair_elem.2652" }
%"struct.std::__1::__compressed_pair_elem.2652" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2614" }
%"class.std::__1::unique_ptr.2614" = type { %"class.std::__1::__compressed_pair.2615" }
%"class.std::__1::__compressed_pair.2615" = type { %"struct.std::__1::__compressed_pair_elem.2616" }
%"class.mojo::ScopedHandleBase.2795" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.2796" = type { %"class.std::__1::unique_ptr.2797" }
%"class.std::__1::unique_ptr.2797" = type { %"class.std::__1::__compressed_pair.2798" }
%"class.std::__1::__compressed_pair.2798" = type { %"struct.std::__1::__compressed_pair_elem.2799" }
%"struct.std::__1::__compressed_pair_elem.2799" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.2800", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.2800" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.2804" = type { %"class.std::__1::__vector_base.2805" }
%"class.std::__1::__vector_base.2805" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.2806" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.2806" = type { %"struct.std::__1::__compressed_pair_elem.2807" }
%"struct.std::__1::__compressed_pair_elem.2807" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.2811" = type { %"class.std::__1::__vector_base.2812" }
%"class.std::__1::__vector_base.2812" = type { %"class.mojo::StructPtr.2601"*, %"class.mojo::StructPtr.2601"*, %"class.std::__1::__compressed_pair.2813" }
%"class.std::__1::__compressed_pair.2813" = type { %"struct.std::__1::__compressed_pair_elem.2814" }
%"struct.std::__1::__compressed_pair_elem.2814" = type { %"class.mojo::StructPtr.2601"* }
%"class.blink::CSSFontFaceSrcValue" = type { %"class.blink::CSSValue", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"struct.blink::Referrer", i8, %class.scoped_refptr.262, i32, i8, %"class.blink::Member.2482" }
%"class.blink::Member.2482" = type { %"class.blink::MemberBase.2483" }
%"class.blink::MemberBase.2483" = type { %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"* }
%"class.blink::CSSFontFaceSrcValue::FontResourceHelper" = type { %"class.blink::FontResourceClient.base", [7 x i8] }
%"class.blink::FontResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2486", [7 x i8], %"class.blink::Member.1954", i8 }>
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2476" }
%"class.std::__1::unique_ptr.2476" = type { %"class.std::__1::__compressed_pair.2477" }
%"class.std::__1::__compressed_pair.2477" = type { %"struct.std::__1::__compressed_pair_elem.2478" }
%"struct.std::__1::__compressed_pair_elem.2478" = type { %"class.blink::Settings"* }
%"class.blink::RemoteFontFaceSource" = type <{ %"class.blink::CSSFontFaceSource", %"class.blink::FontResourceClient.base", %"class.blink::ThreadState::PrefinalizerRegistration.2821", [6 x i8], %"class.blink::Member.274", %"class.blink::Member.2822", %class.scoped_refptr.2824, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.blink::RemoteFontFaceSource::FontLoadHistograms", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2821" = type { i8 }
%"class.blink::Member.2822" = type { %"class.blink::MemberBase.2823" }
%"class.blink::MemberBase.2823" = type { %"class.blink::FontSelector"* }
%class.scoped_refptr.2824 = type { %"class.blink::FontCustomPlatformData"* }
%"class.blink::FontCustomPlatformData" = type opaque
%"class.blink::RemoteFontFaceSource::FontLoadHistograms" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i32 }
%"class.blink::FontResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::FontResource" = type { %"class.blink::Resource", %class.scoped_refptr.2824, %"class.WTF::String", i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapHashSet.2825" }
%"class.blink::HeapHashSet.2825" = type { %"class.WTF::HashSet.2828" }
%"class.WTF::HashSet.2828" = type { %"class.WTF::HashTable.2829" }
%"class.WTF::HashTable.2829" = type <{ %"class.blink::WeakMember.2831"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2831" = type opaque
%"class.blink::LocalFontFaceSource" = type <{ %"class.blink::CSSFontFaceSource", %"class.blink::GarbageCollectedMixin", %"class.blink::Member.274", %"class.blink::Member.2822", %"class.WTF::AtomicString", %"class.blink::LocalFontFaceSource::LocalFontHistograms", [7 x i8] }>
%"class.blink::LocalFontFaceSource::LocalFontHistograms" = type { i8 }
%"class.blink::BinaryDataFontFaceSource" = type { %"class.blink::CSSFontFaceSource", %class.scoped_refptr.2824 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.2464" }
%"class.blink::HeapVector.2464" = type { %"class.WTF::Vector.2467" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.259" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::StringTypeAdapter.3051" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::Persistent.2458" = type { %"class.blink::PersistentBase.2459" }
%"class.blink::PersistentBase.2459" = type { %"class.blink::ScriptPromiseProperty"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.2460" = type { %"class.blink::PersistentBase.2461" }
%"class.blink::PersistentBase.2461" = type { %"class.blink::FontFace"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.2462" = type { %"class.blink::PersistentBase.2463" }
%"class.blink::PersistentBase.2463" = type { %"class.blink::DOMException"*, %"class.blink::PersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.484", [4 x i8] }>
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.3082" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2458" }
%"class.std::__1::__tuple_leaf.3082" = type { %"class.blink::Persistent.2460" }
%"struct.std::__1::__tuple_impl.3094" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.3095" }
%"class.std::__1::__tuple_leaf.3095" = type { %"class.blink::Persistent.2462" }
%"struct.base::internal::BindState.3097" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.3098" }
%"class.std::__1::tuple.3098" = type { %"struct.std::__1::__tuple_impl.3099" }
%"struct.std::__1::__tuple_impl.3099" = type { %"class.std::__1::__tuple_leaf.3100" }
%"class.std::__1::__tuple_leaf.3100" = type { %"class.blink::Persistent.2460" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.222" }
%"class.v8::Local.222" = type { %"class.v8::Context"* }
%"class.blink::cssvalue::CSSUnicodeRangeValue" = type { %"class.blink::CSSValue", i32, i32 }
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional.2832", %"class.absl::optional.2832", %"class.absl::optional.2832" }
%"class.absl::optional.2832" = type { %"class.absl::optional_internal::optional_data.2833" }
%"class.absl::optional_internal::optional_data.2833" = type { %"class.absl::optional_internal::optional_data_base.2834" }
%"class.absl::optional_internal::optional_data_base.2834" = type { %"class.absl::optional_internal::optional_data_dtor_base.2835" }
%"class.absl::optional_internal::optional_data_dtor_base.2835" = type { i8, %union.anon.2836 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.3052" = type { %"class.WTF::StringTypeAdapter.3053" }
%"class.WTF::StringTypeAdapter.3053" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.3073" = type { i8 }
%"class.blink::HeapVectorBacking.3122" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2978", %"class.blink::FreeList", %"class.WTF::Vector.2983" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2977" }
%"struct.std::__1::array.2977" = type { [256 x i8] }
%"class.WTF::Vector.2978" = type { %"class.WTF::VectorBuffer.2979" }
%"class.WTF::VectorBuffer.2979" = type { %"class.WTF::VectorBufferBase.2980" }
%"class.WTF::VectorBufferBase.2980" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.2983" = type { %"class.WTF::VectorBuffer.2984" }
%"class.WTF::VectorBuffer.2984" = type { %"class.WTF::VectorBufferBase.2985" }
%"class.WTF::VectorBufferBase.2985" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7ResolveIPS2_EEvT_ = comdat any

$_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE6RejectIPS4_EEvT_ = comdat any

$_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7PromiseERNS_15DOMWrapperWorldE = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink8FontFace18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_8FontFaceEED0Ev = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink12UnicodeRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12UnicodeRangeEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11CSSFontFaceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11CSSFontFaceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11CSSFontFaceEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS6_EJNS3_10PersistentISA_EENSE_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS5_EJNS2_10PersistentIS9_EENSD_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_8FontFaceEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMExceptionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS8_EJNS3_10PersistentISA_EENSE_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS7_EJNS2_10PersistentIS9_EENSD_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_12DOMExceptionEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink8FontFaceEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21ScriptPromiseResolverEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEvPT_ = comdat any

$_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_13ScriptPromiseEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFace16LoadFontCallbackEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17CSSFontFaceSourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17CSSFontFaceSourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17CSSFontFaceSourceEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_8FontFaceEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [23 x i8] c"The source provided ('\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"') could not be parsed as a value list.\00", align 1
@_ZTVN5blink8FontFaceE = hidden unnamed_addr constant { [11 x i8*], [7 x i8*], [3 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::FontFace"*)* @_ZN5blink8FontFaceD2Ev to i8*), i8* bitcast (void (%"class.blink::FontFace"*)* @_ZN5blink8FontFaceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::FontFace"*)* @_ZNK5blink8FontFace18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)* @_ZNK5blink8FontFace5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::FontFace"*)* @_ZNK5blink8FontFace18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)], [7 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink8FontFace5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FontFace"*)* @_ZThn16_N5blink8FontFaceD1Ev to i8*), i8* bitcast (void (%"class.blink::FontFace"*)* @_ZThn16_N5blink8FontFaceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE26DispatchHasPendingActivityEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)* @_ZThn24_NK5blink8FontFace5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"U+0-10FFFF\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"100%\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"Failed to set '\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"' as a property value.\00", align 1
@_ZN5blink17font_family_names12kWebkitSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names16kWebkitSansSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names14kWebkitCursiveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names14kWebkitFantasyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names16kWebkitMonospaceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.8 = private unnamed_addr constant [9 x i8] c"unloaded\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"loaded\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.12 = private unnamed_addr constant [14 x i8] c"SetLoadStatus\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/core/css/font_face.cc\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"Invalid font data in ArrayBuffer.\00", align 1
@__const._ZNK5blink8FontFace22GetFontMetricsOverrideEv.result = private unnamed_addr constant { { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } } } { { { { { i8, [3 x i8], %union.anon.2836 } } } } { { { { i8, [3 x i8], %union.anon.2836 } } } { { { i8, [3 x i8], %union.anon.2836 } } { { i8, [3 x i8], %union.anon.2836 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.2836 { float 0xFFFFFFFFE0000000 } } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } } { { { { i8, [3 x i8], %union.anon.2836 } } } { { { i8, [3 x i8], %union.anon.2836 } } { { i8, [3 x i8], %union.anon.2836 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.2836 { float 0xFFFFFFFFE0000000 } } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } } { { { { i8, [3 x i8], %union.anon.2836 } } } { { { i8, [3 x i8], %union.anon.2836 } } { { i8, [3 x i8], %union.anon.2836 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.2836 { float 0xFFFFFFFFE0000000 } } } } } }, align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_8FontFaceEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_8FontFaceEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase37is_css_font_face_size_adjust_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue = internal global i64 0, align 8
@_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue = internal global i64 0, align 8
@_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue = internal global i64 0, align 8
@_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue = internal global i64 0, align 8
@_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue = internal global i64 0, align 8
@.str.18 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 2
@_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal global i64 0, align 8
@.str.20 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.22 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12UnicodeRangeEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::UnicodeRange]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11CSSFontFaceEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSFontFace]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11CSSFontFaceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11CSSFontFaceEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink8FontFace18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.26 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/bindings/core/v8/script_promise_property.h\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"!ScriptForbiddenScope::IsScriptForbidden()\00", align 1
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.28 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEEEPKcv = private unnamed_addr constant [145 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseProperty<blink::Member<blink::FontFace>, blink::Member<blink::DOMException> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEEE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::Visitor"*)* @_ZNK5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.31 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.33 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21ScriptPromiseResolverEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ScriptPromiseResolver>, WTF::VectorTraits<blink::Member<blink::ScriptPromiseResolver> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13ScriptPromiseENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [136 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptPromise, WTF::VectorTraits<blink::ScriptPromise> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8FontFace16LoadFontCallbackEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [193 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::FontFace::LoadFontCallback>, WTF::VectorTraits<blink::Member<blink::FontFace::LoadFontCallback> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSFontFaceSourceEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSFontFaceSource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17CSSFontFaceSourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17CSSFontFaceSourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink8FontFaceC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*), void (%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*)* @_ZN5blink8FontFaceC2EPNS_16ExecutionContextE
@_ZN5blink8FontFaceC1EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE = hidden unnamed_addr alias void (%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"*, %"class.blink::FontFaceDescriptors"*), void (%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"*, %"class.blink::FontFaceDescriptors"*)* @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE
@_ZN5blink8FontFaceD1Ev = hidden unnamed_addr alias void (%"class.blink::FontFace"*), void (%"class.blink::FontFace"*)* @_ZN5blink8FontFaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_43V8UnionArrayBufferOrArrayBufferViewOrStringEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString"*, %"class.blink::FontFaceDescriptors"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %40 [
    i32 0, label %7
    i32 1, label %11
    i32 2, label %37
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString"* %2, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %8, align 8
  %10 = tail call %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringEPNS_14DOMArrayBufferEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::DOMArrayBuffer"* %9, %"class.blink::FontFaceDescriptors"* %3)
  br label %40

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %12, align 8, !noalias !2
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #13
  %15 = bitcast i8* %14 to %"class.blink::FontFace"*
  tail call void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE(%"class.blink::FontFace"* %15, %"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontFaceDescriptors"* %3) #13
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds i8, i8* %14, i64 16
  %21 = bitcast i8* %20 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %21) #13
  %22 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %13, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %23, i64 0, i32 2
  %25 = load i8, i8* %24, align 8, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %13, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %11, %27
  %31 = phi i8* [ %29, %27 ], [ null, %11 ]
  %32 = bitcast %"class.blink::DOMArrayBufferView"* %13 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %33 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %33, i64 10
  %35 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %34, align 8
  %36 = tail call i64 %35(%"class.blink::DOMArrayBufferView"* %13) #13
  tail call void @_ZN5blink8FontFace15InitCSSFontFaceEPKhm(%"class.blink::FontFace"* %15, i8* %31, i64 %36) #13
  br label %40

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrString"* %2, i64 0, i32 4
  %39 = tail call %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS3_6StringEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %38, %"class.blink::FontFaceDescriptors"* %3)
  br label %40

40:                                               ; preds = %4, %37, %30, %7
  %41 = phi %"class.blink::FontFace"* [ %39, %37 ], [ %15, %30 ], [ %10, %7 ], [ null, %4 ]
  ret %"class.blink::FontFace"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringEPNS_14DOMArrayBufferEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.blink::FontFaceDescriptors"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #13
  %6 = bitcast i8* %5 to %"class.blink::FontFace"*
  tail call void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE(%"class.blink::FontFace"* %6, %"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontFaceDescriptors"* %3) #13
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %12) #13
  %13 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %13, align 8
  %15 = icmp eq %"class.v8::BackingStore"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %14) #13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %13, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %18) #13
  br label %22

22:                                               ; preds = %4, %16, %20
  %23 = phi i8* [ %17, %20 ], [ %17, %16 ], [ null, %4 ]
  %24 = phi i64 [ %21, %20 ], [ 0, %16 ], [ 0, %4 ]
  tail call void @_ZN5blink8FontFace15InitCSSFontFaceEPKhm(%"class.blink::FontFace"* %6, i8* %23, i64 %24)
  ret %"class.blink::FontFace"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringEPNS_18DOMArrayBufferViewEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::DOMArrayBufferView"*, %"class.blink::FontFaceDescriptors"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #13
  %6 = bitcast i8* %5 to %"class.blink::FontFace"*
  tail call void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE(%"class.blink::FontFace"* %6, %"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontFaceDescriptors"* %3) #13
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %12) #13
  %13 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %2, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %2, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %4, %18
  %22 = phi i8* [ %20, %18 ], [ null, %4 ]
  %23 = bitcast %"class.blink::DOMArrayBufferView"* %2 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %24 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %24, i64 10
  %26 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %25, align 8
  %27 = tail call i64 %26(%"class.blink::DOMArrayBufferView"* %2) #13
  tail call void @_ZN5blink8FontFace15InitCSSFontFaceEPKhm(%"class.blink::FontFace"* %6, i8* %22, i64 %27)
  ret %"class.blink::FontFace"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS3_6StringEPKNS_19FontFaceDescriptorsE(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::FontFaceDescriptors"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #13
  %9 = bitcast i8* %8 to %"class.blink::FontFace"*
  tail call void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE(%"class.blink::FontFace"* %9, %"class.blink::ExecutionContext"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::FontFaceDescriptors"* %3) #13
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %15) #13
  %16 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %19 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, i64 1
  %21 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::ExecutionContext"* nonnull %0) #13
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %25 = bitcast i32* %24 to %"class.blink::LocalDOMWindow"*
  %26 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %25) #13
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %28 = bitcast i8* %27 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %28, %"class.blink::Document"* dereferenceable(2848) %26) #13
  br label %32

29:                                               ; preds = %17, %4
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %31 = bitcast i8* %30 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"* %31, %"class.blink::ExecutionContext"* dereferenceable(376) %0) #13
  br label %32

32:                                               ; preds = %23, %29
  %33 = phi i8* [ %27, %23 ], [ %30, %29 ]
  %34 = phi %"class.blink::CSSParserContext"* [ %28, %23 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %33, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = tail call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERKN3WTF6StringERKNS_16CSSParserContextE(i32 31, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::CSSParserContext"* dereferenceable(176) %34) #13
  %40 = icmp eq %"class.blink::CSSValue"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %39, i64 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp ugt i8 %43, 51
  br i1 %44, label %195, label %45

45:                                               ; preds = %32, %41
  %46 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #13
  store i32 12, i32* %6, align 4
  %47 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %126, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !6

65:                                               ; preds = %58
  tail call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %66, %51
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = load atomic i32, i32* %52 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %68
  %74 = zext i32 %69 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #13
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !6

80:                                               ; preds = %73
  tail call void @llvm.trap() #13
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %56, align 4
  br label %83

83:                                               ; preds = %81, %68
  %84 = phi i32 [ %82, %81 ], [ %69, %68 ]
  %85 = load atomic i32, i32* %52 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = add i32 %84, -1
  store i32 %89, i32* %56, align 4
  br label %90

90:                                               ; preds = %88, %83
  %91 = phi i32 [ %89, %88 ], [ %84, %83 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %94

94:                                               ; preds = %90, %93
  %95 = load atomic i32, i32* %52 monotonic, align 4, !noalias !7
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = load i32, i32* %56, align 4
  br i1 %97, label %99, label %109

99:                                               ; preds = %94
  %100 = zext i32 %98 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #13
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !6

106:                                              ; preds = %99
  tail call void @llvm.trap() #13, !noalias !7
  unreachable

107:                                              ; preds = %99
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %56, align 4, !noalias !7
  br label %109

109:                                              ; preds = %94, %107
  %110 = phi i32 [ %108, %107 ], [ %98, %94 ]
  %111 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([23 x i8]* @.str to i64), i64* %111, align 8, !alias.scope !7
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %112, align 8, !alias.scope !7
  %113 = load atomic i32, i32* %52 monotonic, align 4, !noalias !7
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %130

116:                                              ; preds = %109
  %117 = zext i32 %110 to i33
  %118 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #13
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !6

123:                                              ; preds = %116
  tail call void @llvm.trap() #13, !noalias !7
  unreachable

124:                                              ; preds = %116
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %56, align 4, !noalias !7
  br label %130

126:                                              ; preds = %45
  %127 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([23 x i8]* @.str to i64), i64* %127, align 8, !alias.scope !7
  %128 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %128, align 8, !alias.scope !7
  %129 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8** %129, align 8, !alias.scope !7
  br label %142

130:                                              ; preds = %124, %109
  %131 = phi i32 [ %125, %124 ], [ %110, %109 ]
  %132 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8** %132, align 8, !alias.scope !7
  %133 = load atomic i32, i32* %52 monotonic, align 4, !noalias !7
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %130
  %137 = add i32 %131, -1
  store i32 %137, i32* %56, align 4, !noalias !7
  br label %138

138:                                              ; preds = %136, %130
  %139 = phi i32 [ %137, %136 ], [ %131, %130 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13, !noalias !7
  br label %142

142:                                              ; preds = %126, %138, %141
  %143 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %6, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %7) #13
  %144 = getelementptr inbounds i8, i8* %8, i64 160
  %145 = bitcast i8* %144 to %"class.blink::DOMException"**
  %146 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %145, align 8
  %147 = icmp eq %"class.blink::DOMException"* %146, null
  br i1 %147, label %148, label %163

148:                                              ; preds = %142
  %149 = icmp eq %"class.blink::DOMException"* %143, null
  %150 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #13
  br i1 %149, label %151, label %153

151:                                              ; preds = %148
  store i32 19, i32* %5, align 4
  %152 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5) #13
  br label %153

153:                                              ; preds = %151, %148
  %154 = phi %"class.blink::DOMException"* [ %152, %151 ], [ %143, %148 ]
  %155 = ptrtoint %"class.blink::DOMException"* %154 to i64
  %156 = bitcast i8* %144 to i64*
  store atomic i64 %155, i64* %156 monotonic, align 8
  %157 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::DOMException"* %154 to i8*
  %161 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %160) #13
  br label %162

162:                                              ; preds = %159, %153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #13
  br label %163

163:                                              ; preds = %142, %162
  call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %9, i32 3) #13
  %164 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #13
  br label %180

180:                                              ; preds = %163, %176, %179
  br i1 %50, label %194, label %181

181:                                              ; preds = %180
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %194

194:                                              ; preds = %180, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #13
  br label %195

195:                                              ; preds = %194, %41
  call void @_ZN5blink8FontFace15InitCSSFontFaceEPNS_16ExecutionContextERKNS_8CSSValueE(%"class.blink::FontFace"* %9, %"class.blink::ExecutionContext"* %0, %"class.blink::CSSValue"* dereferenceable(3) %39)
  ret %"class.blink::FontFace"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace8SetErrorEPNS_12DOMExceptionE(%"class.blink::FontFace"*, %"class.blink::DOMException"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18
  %5 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %5, align 8
  %7 = icmp eq %"class.blink::DOMException"* %6, null
  br i1 %7, label %8, label %23

8:                                                ; preds = %2
  %9 = icmp eq %"class.blink::DOMException"* %1, null
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  br i1 %9, label %11, label %13

11:                                               ; preds = %8
  store i32 19, i32* %3, align 4
  %12 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3) #13
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi %"class.blink::DOMException"* [ %12, %11 ], [ %1, %8 ]
  %15 = ptrtoint %"class.blink::DOMException"* %14 to i64
  %16 = bitcast %"class.blink::Member.4"* %4 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::DOMException"* %14 to i8*
  %21 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  br label %22

22:                                               ; preds = %13, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  br label %23

23:                                               ; preds = %2, %22
  call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %0, i32 3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace15InitCSSFontFaceEPNS_16ExecutionContextERKNS_8CSSValueE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = tail call fastcc %"class.blink::CSSFontFace"* @_ZN5blink12_GLOBAL__N_117CreateCSSFontFaceEPNS_8FontFaceEPKNS_8CSSValueE(%"class.blink::FontFace"* %0, %"class.blink::CSSValue"* %5)
  %7 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20
  %8 = ptrtoint %"class.blink::CSSFontFace"* %6 to i64
  %9 = bitcast %"class.blink::Member.274"* %7 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::CSSFontFace"* %6 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #13
  br label %15

15:                                               ; preds = %3, %12
  %16 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18, i32 0, i32 0
  %17 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %16, align 8
  %18 = icmp eq %"class.blink::DOMException"* %17, null
  br i1 %18, label %19, label %126

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %126

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %26 = bitcast i8* %25 to %"class.WTF::Vector.2467"*
  %27 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %28 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %29 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %30 = icmp eq i32* %29, null
  %31 = bitcast i32* %29 to %"class.blink::LocalDOMWindow"*
  %32 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 22
  %33 = icmp eq %"class.blink::DOMTimerCoordinator"* %32, null
  %34 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %32, i64 68, i32 1
  %35 = bitcast i32* %34 to %"class.blink::OffscreenFontSelector"**
  %36 = getelementptr inbounds %"class.blink::Member.274", %"class.blink::Member.274"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds i32, i32* %29, i64 18
  %38 = bitcast i32* %37 to %"class.blink::LocalFrame"**
  %39 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 11, i32 0, i32 0
  br label %40

40:                                               ; preds = %123, %24
  %41 = phi i32 [ 0, %24 ], [ %124, %123 ]
  %42 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %26, i32 %41) #13
  %43 = bitcast %"class.blink::Member"* %42 to %"class.blink::CSSFontFaceSrcValue"**
  %44 = load %"class.blink::CSSFontFaceSrcValue"*, %"class.blink::CSSFontFaceSrcValue"** %43, align 8
  br i1 %27, label %69, label %45

45:                                               ; preds = %40
  %46 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %28, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %46, i64 1
  %48 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::ExecutionContext"* nonnull %1) #13
  %50 = xor i1 %49, true
  %51 = or i1 %30, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %31) #13
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 59, i32 0, i32 0
  %55 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %55, i64 0, i32 37, i32 0, i32 0
  %57 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %57, i64 0, i32 0
  br label %69

59:                                               ; preds = %45
  %60 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %28, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %60, i64 3
  %62 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::ExecutionContext"* nonnull %1) #13
  %64 = xor i1 %63, true
  %65 = or i1 %33, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = load %"class.blink::OffscreenFontSelector"*, %"class.blink::OffscreenFontSelector"** %35, align 8
  %68 = getelementptr inbounds %"class.blink::OffscreenFontSelector", %"class.blink::OffscreenFontSelector"* %67, i64 0, i32 0
  br label %69

69:                                               ; preds = %59, %40, %66, %52
  %70 = phi %"class.blink::FontSelector"* [ %68, %66 ], [ %58, %52 ], [ null, %59 ], [ null, %40 ]
  %71 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %44, i64 0, i32 5
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %112

74:                                               ; preds = %69
  br i1 %27, label %123, label %75

75:                                               ; preds = %74
  %76 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %28, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %76, i64 1
  %78 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::ExecutionContext"* nonnull %1) #13
  br i1 %79, label %80, label %93

80:                                               ; preds = %75
  %81 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %38, align 8
  %82 = icmp eq %"class.blink::LocalFrame"* %81, null
  br i1 %82, label %123, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %81, i64 0, i32 0
  %85 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %84) #13
  %86 = icmp eq %"class.blink::Settings"* %85, null
  br i1 %86, label %123, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %85, i64 0, i32 71
  %89 = bitcast [14 x i8]* %88 to i112*
  %90 = load i112, i112* %89, align 8
  %91 = trunc i112 %90 to i32
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %123

93:                                               ; preds = %75, %87
  %94 = tail call zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue17IsSupportedFormatEv(%"class.blink::CSSFontFaceSrcValue"* %44) #13
  br i1 %94, label %95, label %123

95:                                               ; preds = %93
  %96 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %39, align 8
  %97 = tail call i32 @_ZN5blink21CSSValueToFontDisplayEPKNS_8CSSValueE(%"class.blink::CSSValue"* %96) #13
  %98 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSFontFaceSourceEEEPhm(i64 192) #13
  %99 = bitcast i8* %98 to %"class.blink::RemoteFontFaceSource"*
  %100 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %36, align 8
  tail call void @_ZN5blink20RemoteFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorENS_11FontDisplayE(%"class.blink::RemoteFontFaceSource"* %99, %"class.blink::CSSFontFace"* %100, %"class.blink::FontSelector"* %70, i32 %97) #13
  %101 = getelementptr inbounds i8, i8* %98, i64 -4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = or i16 %103, 1
  store atomic i16 %104, i16* %102 release, align 2
  %105 = icmp eq i8* %98, null
  %106 = getelementptr inbounds i8, i8* %98, i64 80
  %107 = bitcast i8* %106 to %"class.blink::FontResourceClient"*
  %108 = select i1 %105, %"class.blink::FontResourceClient"* null, %"class.blink::FontResourceClient"* %107
  %109 = tail call dereferenceable(2792) %"class.blink::FontResource"* @_ZNK5blink19CSSFontFaceSrcValue5FetchEPNS_16ExecutionContextEPNS_18FontResourceClientE(%"class.blink::CSSFontFaceSrcValue"* %44, %"class.blink::ExecutionContext"* nonnull %1, %"class.blink::FontResourceClient"* %108) #13
  %110 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %36, align 8
  %111 = bitcast i8* %98 to %"class.blink::CSSFontFaceSource"*
  tail call void @_ZN5blink11CSSFontFace9AddSourceEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* %110, %"class.blink::CSSFontFaceSource"* %111) #13
  br label %123

112:                                              ; preds = %69
  %113 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %36, align 8
  %114 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %44, i64 0, i32 1
  %115 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSFontFaceSourceEEEPhm(i64 120) #13
  %116 = bitcast i8* %115 to %"class.blink::LocalFontFaceSource"*
  %117 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %36, align 8
  tail call void @_ZN5blink19LocalFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorERKN3WTF6StringE(%"class.blink::LocalFontFaceSource"* %116, %"class.blink::CSSFontFace"* %117, %"class.blink::FontSelector"* %70, %"class.WTF::String"* dereferenceable(8) %114) #13
  %118 = getelementptr inbounds i8, i8* %115, i64 -4
  %119 = bitcast i8* %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = or i16 %120, 1
  store atomic i16 %121, i16* %119 release, align 2
  %122 = bitcast i8* %115 to %"class.blink::CSSFontFaceSource"*
  tail call void @_ZN5blink11CSSFontFace9AddSourceEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* %113, %"class.blink::CSSFontFaceSource"* %122) #13
  br label %123

123:                                              ; preds = %74, %80, %83, %87, %93, %95, %112
  %124 = add nuw nsw i32 %41, 1
  %125 = icmp eq i32 %124, %22
  br i1 %125, label %126, label %40

126:                                              ; preds = %123, %19, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace15InitCSSFontFaceEPKhm(%"class.blink::FontFace"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %6, align 8
  %8 = tail call fastcc %"class.blink::CSSFontFace"* @_ZN5blink12_GLOBAL__N_117CreateCSSFontFaceEPNS_8FontFaceEPKNS_8CSSValueE(%"class.blink::FontFace"* %0, %"class.blink::CSSValue"* %7)
  %9 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20
  %10 = ptrtoint %"class.blink::CSSFontFace"* %8 to i64
  %11 = bitcast %"class.blink::Member.274"* %9 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::CSSFontFace"* %8 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #13
  br label %17

17:                                               ; preds = %3, %14
  %18 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18, i32 0, i32 0
  %19 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %18, align 8
  %20 = icmp eq %"class.blink::DOMException"* %19, null
  br i1 %20, label %21, label %72

21:                                               ; preds = %17
  %22 = tail call noalias i8* @malloc(i64 48) #13
  %23 = bitcast i8* %22 to %"class.WTF::SharedBuffer"*
  %24 = icmp ult i64 %2, 4294967296
  br i1 %24, label %26, label %25, !prof !10

25:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %21
  %27 = trunc i64 %2 to i32
  tail call void @_ZN3WTF12SharedBufferC1EPKhj(%"class.WTF::SharedBuffer"* %23, i8* %1, i32 %27) #13
  %28 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 4
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSFontFaceSourceEEEPhm(i64 88) #13
  %30 = bitcast i8* %29 to %"class.blink::BinaryDataFontFaceSource"*
  %31 = getelementptr inbounds %"class.blink::Member.274", %"class.blink::Member.274"* %9, i64 0, i32 0, i32 0
  %32 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %31, align 8
  tail call void @_ZN5blink24BinaryDataFontFaceSourceC1EPNS_11CSSFontFaceEPN3WTF12SharedBufferERNS3_6StringE(%"class.blink::BinaryDataFontFaceSource"* %30, %"class.blink::CSSFontFace"* %32, %"class.WTF::SharedBuffer"* %23, %"class.WTF::String"* dereferenceable(8) %28) #13
  %33 = getelementptr inbounds i8, i8* %29, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = tail call zeroext i1 @_ZNK5blink24BinaryDataFontFaceSource7IsValidEv(%"class.blink::BinaryDataFontFaceSource"* %30) #13
  br i1 %37, label %38, label %39

38:                                               ; preds = %26
  tail call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %0, i32 2)
  br label %62

39:                                               ; preds = %26
  %40 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #13
  store i32 12, i32* %5, align 4
  %41 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, [34 x i8]* nonnull dereferenceable(34) @.str.14) #13
  %42 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18
  %43 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %43, align 8
  %45 = icmp eq %"class.blink::DOMException"* %44, null
  br i1 %45, label %46, label %61

46:                                               ; preds = %39
  %47 = icmp eq %"class.blink::DOMException"* %41, null
  %48 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #13
  br i1 %47, label %49, label %51

49:                                               ; preds = %46
  store i32 19, i32* %4, align 4
  %50 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4) #13
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi %"class.blink::DOMException"* [ %50, %49 ], [ %41, %46 ]
  %53 = ptrtoint %"class.blink::DOMException"* %52 to i64
  %54 = bitcast %"class.blink::Member.4"* %42 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.blink::DOMException"* %52 to i8*
  %59 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #13
  br label %60

60:                                               ; preds = %57, %51
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #13
  br label %61

61:                                               ; preds = %39, %60
  call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %0, i32 3) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #13
  br label %62

62:                                               ; preds = %61, %38
  %63 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %31, align 8
  %64 = bitcast i8* %29 to %"class.blink::CSSFontFaceSource"*
  call void @_ZN5blink11CSSFontFace9AddSourceEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* %63, %"class.blink::CSSFontFaceSource"* %64) #13
  %65 = icmp eq i8* %22, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = bitcast i8* %22 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %67) #13
  %68 = bitcast i8* %22 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %23) #13
  call void @free(i8* nonnull %22) #13
  br label %72

72:                                               ; preds = %17, %71, %66, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_8DocumentEPKNS_17StyleRuleFontFaceE(%"class.blink::Document"*, %"class.blink::StyleRuleFontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 6) #13
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %231, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %231 [
    i8 29, label %10
    i8 2, label %10
  ]

10:                                               ; preds = %7, %7
  %11 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 31) #13
  %12 = icmp eq %"class.blink::CSSValue"* %11, null
  br i1 %12, label %231, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %11, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp ugt i8 %15, 51
  br i1 %16, label %17, label %231

17:                                               ; preds = %13
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %0) #13
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 200) #13
  %20 = bitcast i8* %19 to %"class.blink::FontFace"*
  %21 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = bitcast i8* %22 to i64**
  store i64* null, i64** %23, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 16
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_8FontFaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 24
  %27 = bitcast i8* %26 to %"class.blink::ExecutionContextClient"*
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %27, %"class.blink::ExecutionContext"* %18) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %28 = bitcast i8* %24 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %28, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 40
  %30 = getelementptr inbounds i8, i8* %19, i64 160
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 116, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false) #13
  %31 = getelementptr inbounds i8, i8* %19, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast i8* %24 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %35) #13
  %36 = tail call zeroext i1 @_ZN5blink8FontFace14SetFamilyValueERKNS_8CSSValueE(%"class.blink::FontFace"* %20, %"class.blink::CSSValue"* nonnull dereferenceable(3) %5)
  br i1 %36, label %37, label %231

37:                                               ; preds = %17
  %38 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 9) #13
  %39 = getelementptr inbounds i8, i8* %19, i64 56
  %40 = ptrtoint %"class.blink::CSSValue"* %38 to i64
  %41 = bitcast i8* %39 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 0
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #13
  br label %47

47:                                               ; preds = %44, %37
  %48 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 11) #13
  %49 = getelementptr inbounds i8, i8* %19, i64 64
  %50 = ptrtoint %"class.blink::CSSValue"* %48 to i64
  %51 = bitcast i8* %49 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %48, i64 0, i32 0
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #13
  br label %57

57:                                               ; preds = %54, %47
  %58 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 8) #13
  %59 = getelementptr inbounds i8, i8* %19, i64 72
  %60 = ptrtoint %"class.blink::CSSValue"* %58 to i64
  %61 = bitcast i8* %59 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %58, i64 0, i32 0
  %66 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #13
  br label %67

67:                                               ; preds = %64, %57
  %68 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 38) #13
  %69 = icmp eq %"class.blink::CSSValue"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %68, i64 0, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp ugt i8 %72, 51
  br i1 %73, label %74, label %231

74:                                               ; preds = %70, %67
  %75 = getelementptr inbounds i8, i8* %19, i64 80
  %76 = ptrtoint %"class.blink::CSSValue"* %68 to i64
  %77 = bitcast i8* %75 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %68, i64 0, i32 0
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #13
  br label %83

83:                                               ; preds = %74, %80
  %84 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 10) #13
  %85 = getelementptr inbounds i8, i8* %19, i64 88
  %86 = ptrtoint %"class.blink::CSSValue"* %84 to i64
  %87 = bitcast i8* %85 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %84, i64 0, i32 0
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #13
  br label %93

93:                                               ; preds = %90, %83
  %94 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 7) #13
  %95 = getelementptr inbounds i8, i8* %19, i64 96
  %96 = ptrtoint %"class.blink::CSSValue"* %94 to i64
  %97 = bitcast i8* %95 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %94, i64 0, i32 0
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %100, %93
  %104 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 5) #13
  %105 = getelementptr inbounds i8, i8* %19, i64 104
  %106 = ptrtoint %"class.blink::CSSValue"* %104 to i64
  %107 = bitcast i8* %105 to i64*
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %104, i64 0, i32 0
  %112 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #13
  br label %113

113:                                              ; preds = %110, %103
  %114 = getelementptr inbounds i8, i8* %19, i64 176
  %115 = bitcast i8* %114 to %"class.blink::CSSFontFace"**
  %116 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %115, align 8
  %117 = icmp eq %"class.blink::CSSFontFace"* %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = bitcast i8* %105 to %"class.blink::CSSValue"**
  %120 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %119, align 8
  %121 = tail call i32 @_ZN5blink21CSSValueToFontDisplayEPKNS_8CSSValueE(%"class.blink::CSSValue"* %120) #13
  tail call void @_ZN5blink11CSSFontFace10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFace"* nonnull %116, i32 %121) #13
  br label %122

122:                                              ; preds = %118, %113
  %123 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 2) #13
  %124 = icmp eq %"class.blink::CSSValue"* %123, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %123, i64 0, i32 2
  %127 = load i8, i8* %126, align 1
  %128 = icmp eq i8 %127, 2
  br i1 %128, label %130, label %129

129:                                              ; preds = %125, %122
  br label %130

130:                                              ; preds = %129, %125
  %131 = phi %"class.blink::CSSValue"* [ %123, %129 ], [ null, %125 ]
  %132 = getelementptr inbounds i8, i8* %19, i64 112
  %133 = ptrtoint %"class.blink::CSSValue"* %131 to i64
  %134 = bitcast i8* %132 to i64*
  store atomic i64 %133, i64* %134 monotonic, align 8
  %135 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %131, i64 0, i32 0
  %139 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %138) #13
  br label %140

140:                                              ; preds = %137, %130
  %141 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 3) #13
  %142 = icmp eq %"class.blink::CSSValue"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %141, i64 0, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 2
  br i1 %146, label %148, label %147

147:                                              ; preds = %143, %140
  br label %148

148:                                              ; preds = %147, %143
  %149 = phi %"class.blink::CSSValue"* [ %141, %147 ], [ null, %143 ]
  %150 = getelementptr inbounds i8, i8* %19, i64 120
  %151 = ptrtoint %"class.blink::CSSValue"* %149 to i64
  %152 = bitcast i8* %150 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %149, i64 0, i32 0
  %157 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %156) #13
  br label %158

158:                                              ; preds = %155, %148
  %159 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 16) #13
  %160 = icmp eq %"class.blink::CSSValue"* %159, null
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %159, i64 0, i32 2
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 2
  br i1 %164, label %166, label %165

165:                                              ; preds = %161, %158
  br label %166

166:                                              ; preds = %165, %161
  %167 = phi %"class.blink::CSSValue"* [ %159, %165 ], [ null, %161 ]
  %168 = getelementptr inbounds i8, i8* %19, i64 128
  %169 = ptrtoint %"class.blink::CSSValue"* %167 to i64
  %170 = bitcast i8* %168 to i64*
  store atomic i64 %169, i64* %170 monotonic, align 8
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %167, i64 0, i32 0
  %175 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %174) #13
  br label %176

176:                                              ; preds = %173, %166
  %177 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %4, i32 28) #13
  %178 = icmp eq %"class.blink::CSSValue"* %177, null
  br i1 %178, label %188, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.blink::CSSValue"* %177 to %"class.blink::CSSPrimitiveValue"*
  %181 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %180) #13
  %182 = fcmp ult double %181, 0x47EFFFFFE0000000
  br i1 %182, label %183, label %188

183:                                              ; preds = %179
  %184 = fcmp ole double %181, 0xC7EFFFFFE0000000
  %185 = select i1 %184, double 0xC7EFFFFFE0000000, double %181
  %186 = fptrunc double %185 to float
  %187 = fcmp oeq float %186, 1.000000e+02
  br i1 %187, label %189, label %188

188:                                              ; preds = %183, %179, %176
  br label %189

189:                                              ; preds = %188, %183
  %190 = phi %"class.blink::CSSValue"* [ %177, %188 ], [ null, %183 ]
  %191 = getelementptr inbounds i8, i8* %19, i64 144
  %192 = ptrtoint %"class.blink::CSSValue"* %190 to i64
  %193 = bitcast i8* %191 to i64*
  store atomic i64 %192, i64* %193 monotonic, align 8
  %194 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %190, i64 0, i32 0
  %198 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %197) #13
  br label %199

199:                                              ; preds = %196, %189
  %200 = tail call { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* %20)
  %201 = extractvalue { i64, i48 } %200, 0
  %202 = extractvalue { i64, i48 } %200, 1
  %203 = trunc i64 %201 to i16
  %204 = lshr i64 %201, 16
  %205 = trunc i64 %204 to i16
  %206 = lshr i64 %201, 32
  %207 = trunc i64 %206 to i16
  %208 = lshr i64 %201, 48
  %209 = trunc i64 %208 to i16
  %210 = icmp sgt i16 %203, %205
  %211 = icmp sgt i16 %207, %209
  %212 = or i1 %210, %211
  br i1 %212, label %231, label %213

213:                                              ; preds = %199
  %214 = lshr i48 %202, 16
  %215 = trunc i48 %214 to i16
  %216 = trunc i48 %202 to i16
  %217 = icmp sle i16 %216, %215
  %218 = and i48 %202, 1095216660480
  %219 = icmp eq i48 %218, 0
  %220 = and i1 %219, %217
  br i1 %220, label %221, label %231

221:                                              ; preds = %213
  %222 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %231, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %0) #13
  tail call void @_ZN5blink8FontFace15InitCSSFontFaceEPNS_16ExecutionContextERKNS_8CSSValueE(%"class.blink::FontFace"* %20, %"class.blink::ExecutionContext"* %230, %"class.blink::CSSValue"* nonnull dereferenceable(3) %11)
  br label %231

231:                                              ; preds = %213, %7, %221, %199, %17, %70, %10, %13, %225, %229, %2
  %232 = phi %"class.blink::FontFace"* [ null, %2 ], [ null, %10 ], [ null, %13 ], [ %20, %229 ], [ null, %225 ], [ null, %70 ], [ null, %17 ], [ null, %213 ], [ null, %199 ], [ null, %221 ], [ null, %7 ]
  ret %"class.blink::FontFace"* %232
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8FontFace14SetFamilyValueERKNS_8CSSValueE(%"class.blink::FontFace"* nocapture, %"class.blink::CSSValue"* readonly dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ne i8 %4, 29
  %6 = icmp eq %"class.blink::CSSValue"* %1, null
  %7 = or i1 %6, %5
  br i1 %7, label %68, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3
  br label %219

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !6

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %15, %30
  %33 = load atomic i32, i32* %16 acquire, align 4
  %34 = and i32 %33, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %32
  %37 = load atomic i32, i32* %16 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #13
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !6

49:                                               ; preds = %40
  tail call void @llvm.trap() #13
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %32
  %53 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %11) #13
  br label %54

54:                                               ; preds = %36, %50, %52
  %55 = phi %"class.WTF::StringImpl"* [ %11, %50 ], [ %11, %36 ], [ %53, %52 ]
  %56 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %57 = load atomic i32, i32* %16 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %54
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi i32 [ %63, %62 ], [ %61, %54 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %197

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #13
  br label %197

68:                                               ; preds = %2
  %69 = icmp ne i8 %4, 2
  %70 = or i1 %6, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3
  br label %219

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 1, i32 1
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  switch i32 %76, label %255 [
    i32 79, label %77
    i32 80, label %101
    i32 81, label %125
    i32 82, label %149
    i32 83, label %173
  ]

77:                                               ; preds = %73
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names12kWebkitSerifE, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !6

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %77, %82, %97
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  br label %197

101:                                              ; preds = %73
  %102 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitSansSerifE, align 8
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #13
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !6

120:                                              ; preds = %111
  tail call void @llvm.trap() #13
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %101, %106, %121
  %124 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  br label %197

125:                                              ; preds = %73
  %126 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names14kWebkitCursiveE, align 8
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #13
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !6

144:                                              ; preds = %135
  tail call void @llvm.trap() #13
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %125, %130, %145
  %148 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  br label %197

149:                                              ; preds = %73
  %150 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names14kWebkitFantasyE, align 8
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %171, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #13
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !6

168:                                              ; preds = %159
  tail call void @llvm.trap() #13
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  br label %171

171:                                              ; preds = %149, %154, %169
  %172 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  br label %197

173:                                              ; preds = %73
  %174 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %175 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i33
  %187 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #13
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !6

192:                                              ; preds = %183
  tail call void @llvm.trap() #13
  unreachable

193:                                              ; preds = %183
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %184, align 4
  br label %195

195:                                              ; preds = %173, %178, %193
  %196 = ptrtoint %"class.WTF::StringImpl"* %176 to i64
  br label %197

197:                                              ; preds = %195, %171, %147, %123, %99, %67, %64
  %198 = phi i64 [ %56, %67 ], [ %56, %64 ], [ %100, %99 ], [ %124, %123 ], [ %148, %147 ], [ %172, %171 ], [ %196, %195 ]
  %199 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3
  %200 = inttoptr i64 %198 to %"class.WTF::StringImpl"*
  %201 = icmp eq i64 %198, 0
  br i1 %201, label %219, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = zext i32 %209 to i33
  %211 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %210, i33 1) #13
  %212 = extractvalue { i33, i1 } %211, 1
  %213 = extractvalue { i33, i1 } %211, 0
  %214 = icmp slt i33 %213, 0
  %215 = or i1 %212, %214
  br i1 %215, label %216, label %217, !prof !6

216:                                              ; preds = %207
  tail call void @llvm.trap() #13
  unreachable

217:                                              ; preds = %207
  %218 = trunc i33 %213 to i32
  store i32 %218, i32* %208, align 4
  br label %219

219:                                              ; preds = %13, %71, %217, %202, %197
  %220 = phi %"class.WTF::AtomicString"* [ %72, %71 ], [ %199, %217 ], [ %199, %202 ], [ %199, %197 ], [ %14, %13 ]
  %221 = phi i64 [ 0, %71 ], [ %198, %217 ], [ %198, %202 ], [ 0, %197 ], [ 0, %13 ]
  %222 = bitcast %"class.WTF::AtomicString"* %220 to i64*
  %223 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  store i64 %221, i64* %222, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #13
  br label %239

239:                                              ; preds = %238, %235, %219
  %240 = inttoptr i64 %221 to %"class.WTF::StringImpl"*
  %241 = icmp eq i64 %221, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #13
  br label %255

255:                                              ; preds = %73, %239, %251, %254
  %256 = phi i1 [ true, %239 ], [ true, %251 ], [ true, %254 ], [ false, %73 ]
  ret i1 %256
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8FontFace20SetPropertyFromStyleERKNS_19CSSPropertyValueSetENS_18AtRuleDescriptorIDE(%"class.blink::FontFace"* nocapture, %"class.blink::CSSPropertyValueSet"* dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_18AtRuleDescriptorIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %1, i32 %2) #13
  %5 = tail call zeroext i1 @_ZN5blink8FontFace16SetPropertyValueEPKNS_8CSSValueENS_18AtRuleDescriptorIDE(%"class.blink::FontFace"* %0, %"class.blink::CSSValue"* %4, i32 %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i48 } @_ZNK5blink8FontFace28GetFontSelectionCapabilitiesEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !11

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #13
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !11

12:                                               ; preds = %8
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  store i16 400, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalWidthValueEvE18s_normalWidthValue) #13
  br label %16

16:                                               ; preds = %8, %12, %15
  %17 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalWidthValueEvE18s_normalWidthValue to i16*), align 2
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24, !prof !11

20:                                               ; preds = %16
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %24

24:                                               ; preds = %16, %20, %23
  %25 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %26 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32, !prof !11

28:                                               ; preds = %24
  %29 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %32

32:                                               ; preds = %24, %28, %31
  %33 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %34 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40, !prof !11

36:                                               ; preds = %32
  %37 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  br label %40

40:                                               ; preds = %32, %36, %39
  %41 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %42 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48, !prof !11

44:                                               ; preds = %40
  %45 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  br label %48

48:                                               ; preds = %40, %44, %47
  %49 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %50 = zext i16 %49 to i32
  %51 = shl nuw i32 %50, 16
  %52 = zext i16 %41 to i32
  %53 = or i32 %51, %52
  %54 = zext i32 %53 to i48
  %55 = or i48 %54, -94557999988736
  %56 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 7, i32 0, i32 0
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8
  %58 = icmp eq %"class.blink::CSSValue"* %57, null
  br i1 %58, label %342, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %57, i64 0, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 2
  br i1 %62, label %63, label %203

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %57, i64 1, i32 1
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  switch i32 %66, label %342 [
    i32 60, label %67
    i32 61, label %84
    i32 62, label %101
    i32 63, label %118
    i32 64, label %135
    i32 65, label %152
    i32 66, label %169
    i32 67, label %186
  ]

67:                                               ; preds = %63
  %68 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %74, !prof !11

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #13
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #13
  br label %74

74:                                               ; preds = %67, %70, %73
  %75 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  %76 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i8*) acquire, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82, !prof !11

78:                                               ; preds = %74
  %79 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #13
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  store i16 200, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue) #13
  br label %82

82:                                               ; preds = %74, %78, %81
  %83 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24UltraCondensedWidthValueEvE26s_ultraCondensedWidthValue to i16*), align 2
  br label %342

84:                                               ; preds = %63
  %85 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %91, !prof !11

87:                                               ; preds = %84
  %88 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #13
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #13
  br label %91

91:                                               ; preds = %84, %87, %90
  %92 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  %93 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i8*) acquire, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %99, !prof !11

95:                                               ; preds = %91
  %96 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #13
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  store i16 250, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue) #13
  br label %99

99:                                               ; preds = %91, %95, %98
  %100 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL24ExtraCondensedWidthValueEvE26s_extraCondensedWidthValue to i16*), align 2
  br label %342

101:                                              ; preds = %63
  %102 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %108, !prof !11

104:                                              ; preds = %101
  %105 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %104
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #13
  br label %108

108:                                              ; preds = %101, %104, %107
  %109 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  %110 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i8*) acquire, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116, !prof !11

112:                                              ; preds = %108
  %113 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #13
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  store i16 300, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue) #13
  br label %116

116:                                              ; preds = %108, %112, %115
  %117 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19CondensedWidthValueEvE21s_condensedWidthValue to i16*), align 2
  br label %342

118:                                              ; preds = %63
  %119 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %125, !prof !11

121:                                              ; preds = %118
  %122 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #13
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #13
  br label %125

125:                                              ; preds = %118, %121, %124
  %126 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  %127 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i8*) acquire, align 8
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %133, !prof !11

129:                                              ; preds = %125
  %130 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #13
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  store i16 350, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue) #13
  br label %133

133:                                              ; preds = %125, %129, %132
  %134 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23SemiCondensedWidthValueEvE25s_semiCondensedWidthValue to i16*), align 2
  br label %342

135:                                              ; preds = %63
  %136 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %142, !prof !11

138:                                              ; preds = %135
  %139 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #13
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %138
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #13
  br label %142

142:                                              ; preds = %135, %138, %141
  %143 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  %144 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i8*) acquire, align 8
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %150, !prof !11

146:                                              ; preds = %142
  %147 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #13
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %146
  store i16 450, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue) #13
  br label %150

150:                                              ; preds = %142, %146, %149
  %151 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22SemiExpandedWidthValueEvE24s_semiExpandedWidthValue to i16*), align 2
  br label %342

152:                                              ; preds = %63
  %153 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %159, !prof !11

155:                                              ; preds = %152
  %156 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #13
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %155
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #13
  br label %159

159:                                              ; preds = %152, %155, %158
  %160 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  %161 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i8*) acquire, align 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %167, !prof !11

163:                                              ; preds = %159
  %164 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #13
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %167, label %166

166:                                              ; preds = %163
  store i16 500, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue) #13
  br label %167

167:                                              ; preds = %159, %163, %166
  %168 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL18ExpandedWidthValueEvE20s_expandedWidthValue to i16*), align 2
  br label %342

169:                                              ; preds = %63
  %170 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %176, !prof !11

172:                                              ; preds = %169
  %173 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #13
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #13
  br label %176

176:                                              ; preds = %169, %172, %175
  %177 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  %178 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i8*) acquire, align 8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %184, !prof !11

180:                                              ; preds = %176
  %181 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #13
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  store i16 600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue) #13
  br label %184

184:                                              ; preds = %176, %180, %183
  %185 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23ExtraExpandedWidthValueEvE25s_extraExpandedWidthValue to i16*), align 2
  br label %342

186:                                              ; preds = %63
  %187 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %193, !prof !11

189:                                              ; preds = %186
  %190 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #13
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #13
  br label %193

193:                                              ; preds = %186, %189, %192
  %194 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  %195 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i8*) acquire, align 8
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %201, !prof !11

197:                                              ; preds = %193
  %198 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #13
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store i16 800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue) #13
  br label %201

201:                                              ; preds = %193, %197, %200
  %202 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL23UltraExpandedWidthValueEvE25s_ultraExpandedWidthValue to i16*), align 2
  br label %342

203:                                              ; preds = %59
  %204 = icmp ult i8 %61, 52
  br i1 %204, label %321, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %57, i64 6, i32 2
  %207 = bitcast i8* %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 2
  br i1 %209, label %210, label %766

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %57, i64 2, i32 2
  %212 = bitcast i8* %211 to %"class.WTF::Vector.2467"*
  %213 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %212, i32 0) #13
  %214 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %214, align 8
  %216 = icmp eq %"class.blink::CSSValue"* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %215, i64 0, i32 2
  %219 = load i8, i8* %218, align 1
  %220 = icmp ult i8 %219, 2
  %221 = bitcast %"class.blink::CSSValue"* %215 to %"class.blink::CSSPrimitiveValue"*
  %222 = select i1 %220, %"class.blink::CSSPrimitiveValue"* %221, %"class.blink::CSSPrimitiveValue"* null
  br label %223

223:                                              ; preds = %210, %217
  %224 = phi %"class.blink::CSSPrimitiveValue"* [ %222, %217 ], [ null, %210 ]
  %225 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %212, i32 1) #13
  %226 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %225, i64 0, i32 0, i32 0
  %227 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %226, align 8
  %228 = icmp eq %"class.blink::CSSValue"* %227, null
  br i1 %228, label %766, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %227, i64 0, i32 2
  %231 = load i8, i8* %230, align 1
  %232 = icmp ult i8 %231, 2
  %233 = bitcast %"class.blink::CSSValue"* %227 to %"class.blink::CSSPrimitiveValue"*
  %234 = select i1 %232, %"class.blink::CSSPrimitiveValue"* %233, %"class.blink::CSSPrimitiveValue"* null
  %235 = icmp ne %"class.blink::CSSPrimitiveValue"* %224, null
  %236 = and i1 %235, %232
  br i1 %236, label %237, label %766

237:                                              ; preds = %229
  %238 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %224) #13
  br i1 %238, label %239, label %766

239:                                              ; preds = %237
  %240 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %234) #13
  br i1 %240, label %241, label %766

241:                                              ; preds = %239
  %242 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %224) #13
  %243 = fcmp ult double %242, 0x47EFFFFFE0000000
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = fcmp ole double %242, 0xC7EFFFFFE0000000
  %246 = select i1 %245, double 0xC7EFFFFFE0000000, double %242
  %247 = fptrunc double %246 to float
  br label %248

248:                                              ; preds = %241, %244
  %249 = phi float [ %247, %244 ], [ 0x47EFFFFFE0000000, %241 ]
  %250 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %234) #13
  %251 = fcmp ult double %250, 0x47EFFFFFE0000000
  br i1 %251, label %252, label %256

252:                                              ; preds = %248
  %253 = fcmp ole double %250, 0xC7EFFFFFE0000000
  %254 = select i1 %253, double 0xC7EFFFFFE0000000, double %250
  %255 = fptrunc double %254 to float
  br label %256

256:                                              ; preds = %248, %252
  %257 = phi float [ %255, %252 ], [ 0x47EFFFFFE0000000, %248 ]
  %258 = fcmp olt float %249, %257
  br i1 %258, label %259, label %290

259:                                              ; preds = %256
  %260 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %224) #13
  %261 = fcmp ult double %260, 0x47EFFFFFE0000000
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = fcmp ole double %260, 0xC7EFFFFFE0000000
  %264 = select i1 %263, double 0xC7EFFFFFE0000000, double %260
  %265 = fptrunc double %264 to float
  br label %266

266:                                              ; preds = %259, %262
  %267 = phi float [ %265, %262 ], [ 0x47EFFFFFE0000000, %259 ]
  %268 = fmul float %267, 4.000000e+00
  %269 = fcmp ult float %268, 3.276700e+04
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = fcmp ugt float %268, -3.276800e+04
  br i1 %271, label %272, label %274

272:                                              ; preds = %270
  %273 = fptosi float %268 to i16
  br label %274

274:                                              ; preds = %266, %270, %272
  %275 = phi i16 [ %273, %272 ], [ 32767, %266 ], [ -32768, %270 ]
  %276 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %234) #13
  %277 = fcmp ult double %276, 0x47EFFFFFE0000000
  br i1 %277, label %278, label %282

278:                                              ; preds = %274
  %279 = fcmp ole double %276, 0xC7EFFFFFE0000000
  %280 = select i1 %279, double 0xC7EFFFFFE0000000, double %276
  %281 = fptrunc double %280 to float
  br label %282

282:                                              ; preds = %274, %278
  %283 = phi float [ %281, %278 ], [ 0x47EFFFFFE0000000, %274 ]
  %284 = fmul float %283, 4.000000e+00
  %285 = fcmp ult float %284, 3.276700e+04
  br i1 %285, label %286, label %342

286:                                              ; preds = %282
  %287 = fcmp ugt float %284, -3.276800e+04
  br i1 %287, label %288, label %342

288:                                              ; preds = %286
  %289 = fptosi float %284 to i16
  br label %342

290:                                              ; preds = %256
  %291 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %234) #13
  %292 = fcmp ult double %291, 0x47EFFFFFE0000000
  br i1 %292, label %293, label %297

293:                                              ; preds = %290
  %294 = fcmp ole double %291, 0xC7EFFFFFE0000000
  %295 = select i1 %294, double 0xC7EFFFFFE0000000, double %291
  %296 = fptrunc double %295 to float
  br label %297

297:                                              ; preds = %290, %293
  %298 = phi float [ %296, %293 ], [ 0x47EFFFFFE0000000, %290 ]
  %299 = fmul float %298, 4.000000e+00
  %300 = fcmp ult float %299, 3.276700e+04
  br i1 %300, label %301, label %305

301:                                              ; preds = %297
  %302 = fcmp ugt float %299, -3.276800e+04
  br i1 %302, label %303, label %305

303:                                              ; preds = %301
  %304 = fptosi float %299 to i16
  br label %305

305:                                              ; preds = %297, %301, %303
  %306 = phi i16 [ %304, %303 ], [ 32767, %297 ], [ -32768, %301 ]
  %307 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %224) #13
  %308 = fcmp ult double %307, 0x47EFFFFFE0000000
  br i1 %308, label %309, label %313

309:                                              ; preds = %305
  %310 = fcmp ole double %307, 0xC7EFFFFFE0000000
  %311 = select i1 %310, double 0xC7EFFFFFE0000000, double %307
  %312 = fptrunc double %311 to float
  br label %313

313:                                              ; preds = %305, %309
  %314 = phi float [ %312, %309 ], [ 0x47EFFFFFE0000000, %305 ]
  %315 = fmul float %314, 4.000000e+00
  %316 = fcmp ult float %315, 3.276700e+04
  br i1 %316, label %317, label %342

317:                                              ; preds = %313
  %318 = fcmp ugt float %315, -3.276800e+04
  br i1 %318, label %319, label %342

319:                                              ; preds = %317
  %320 = fptosi float %315 to i16
  br label %342

321:                                              ; preds = %203
  %322 = icmp ugt i8 %61, 1
  br i1 %322, label %766, label %323

323:                                              ; preds = %321
  %324 = bitcast %"class.blink::CSSValue"* %57 to %"class.blink::CSSPrimitiveValue"*
  %325 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %324) #13
  %326 = fcmp ult double %325, 0x47EFFFFFE0000000
  br i1 %326, label %327, label %331

327:                                              ; preds = %323
  %328 = fcmp ole double %325, 0xC7EFFFFFE0000000
  %329 = select i1 %328, double 0xC7EFFFFFE0000000, double %325
  %330 = fptrunc double %329 to float
  br label %331

331:                                              ; preds = %323, %327
  %332 = phi float [ %330, %327 ], [ 0x47EFFFFFE0000000, %323 ]
  %333 = fmul float %332, 4.000000e+00
  %334 = fcmp ult float %333, 3.276700e+04
  br i1 %334, label %335, label %342

335:                                              ; preds = %331
  %336 = fcmp ole float %333, -3.276800e+04
  %337 = select i1 %336, float -3.276800e+04, float %333
  %338 = fptosi float %337 to i16
  %339 = fcmp ugt float %333, -3.276800e+04
  br i1 %339, label %340, label %342

340:                                              ; preds = %335
  %341 = fptosi float %333 to i16
  br label %342

342:                                              ; preds = %48, %340, %335, %331, %319, %317, %313, %288, %286, %282, %63, %201, %184, %167, %150, %133, %116, %99, %82
  %343 = phi i16 [ %9, %48 ], [ %75, %82 ], [ %92, %99 ], [ %109, %116 ], [ %126, %133 ], [ %143, %150 ], [ %160, %167 ], [ %177, %184 ], [ %194, %201 ], [ %9, %63 ], [ %306, %319 ], [ %306, %317 ], [ %306, %313 ], [ %275, %288 ], [ %275, %286 ], [ %275, %282 ], [ 32767, %331 ], [ %338, %335 ], [ %338, %340 ]
  %344 = phi i16 [ %17, %48 ], [ %83, %82 ], [ %100, %99 ], [ %117, %116 ], [ %134, %133 ], [ %151, %150 ], [ %168, %167 ], [ %185, %184 ], [ %202, %201 ], [ %17, %63 ], [ %320, %319 ], [ -32768, %317 ], [ 32767, %313 ], [ %289, %288 ], [ -32768, %286 ], [ 32767, %282 ], [ 32767, %331 ], [ -32768, %335 ], [ %341, %340 ]
  %345 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 5, i32 0, i32 0
  %346 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %345, align 8
  %347 = icmp eq %"class.blink::CSSValue"* %346, null
  br i1 %347, label %561, label %348

348:                                              ; preds = %342
  %349 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %346, i64 0, i32 2
  %350 = load i8, i8* %349, align 1
  switch i8 %350, label %766 [
    i8 2, label %351
    i8 30, label %406
  ]

351:                                              ; preds = %348
  %352 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %346, i64 1, i32 1
  %353 = bitcast i8* %352 to i32*
  %354 = load i32, i32* %353, align 4
  switch i32 %354, label %561 [
    i32 56, label %355
    i32 23, label %372
    i32 22, label %389
  ]

355:                                              ; preds = %351
  %356 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %358, label %362, !prof !11

358:                                              ; preds = %355
  %359 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %362

362:                                              ; preds = %355, %358, %361
  %363 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  %364 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %366, label %370, !prof !11

366:                                              ; preds = %362
  %367 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %370, label %369

369:                                              ; preds = %366
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %370

370:                                              ; preds = %362, %366, %369
  %371 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  br label %561

372:                                              ; preds = %351
  %373 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %374 = icmp eq i8 %373, 0
  br i1 %374, label %375, label %379, !prof !11

375:                                              ; preds = %372
  %376 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %379, label %378

378:                                              ; preds = %375
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %379

379:                                              ; preds = %372, %375, %378
  %380 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %381 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %383, label %387, !prof !11

383:                                              ; preds = %379
  %384 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %387, label %386

386:                                              ; preds = %383
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %387

387:                                              ; preds = %379, %383, %386
  %388 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %561

389:                                              ; preds = %351
  %390 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %392, label %396, !prof !11

392:                                              ; preds = %389
  %393 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %396, label %395

395:                                              ; preds = %392
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %396

396:                                              ; preds = %389, %392, %395
  %397 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %398 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %400, label %404, !prof !11

400:                                              ; preds = %396
  %401 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %404, label %403

403:                                              ; preds = %400
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %404

404:                                              ; preds = %396, %400, %403
  %405 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %561

406:                                              ; preds = %348
  %407 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %346, i64 2, i32 2
  %408 = bitcast i8* %407 to %"class.blink::CSSIdentifierValue"**
  %409 = load %"class.blink::CSSIdentifierValue"*, %"class.blink::CSSIdentifierValue"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %409, i64 0, i32 0, i32 2
  %411 = load i8, i8* %410, align 1
  %412 = icmp eq i8 %411, 2
  br i1 %412, label %413, label %561

413:                                              ; preds = %406
  %414 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %346, i64 5, i32 1
  %415 = bitcast i8* %414 to %"class.blink::CSSValueList"**
  %416 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %415, align 8
  %417 = icmp eq %"class.blink::CSSValueList"* %416, null
  br i1 %417, label %418, label %453

418:                                              ; preds = %413
  %419 = getelementptr inbounds %"class.blink::CSSIdentifierValue", %"class.blink::CSSIdentifierValue"* %409, i64 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %420, 56
  br i1 %421, label %422, label %436

422:                                              ; preds = %418
  %423 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %425, label %429, !prof !11

425:                                              ; preds = %422
  %426 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %429, label %428

428:                                              ; preds = %425
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %429

429:                                              ; preds = %422, %425, %428
  %430 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i8*) acquire, align 8
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %432, label %436, !prof !11

432:                                              ; preds = %429
  %433 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %436, label %435

435:                                              ; preds = %432
  store i16 0, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16NormalSlopeValueEvE18s_normalSlopeValue) #13
  br label %436

436:                                              ; preds = %435, %432, %429, %418
  %437 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %443, !prof !11

439:                                              ; preds = %436
  %440 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %443, label %442

442:                                              ; preds = %439
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %443

443:                                              ; preds = %436, %439, %442
  %444 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %445 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %447, label %451, !prof !11

447:                                              ; preds = %443
  %448 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %451, label %450

450:                                              ; preds = %447
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #13
  br label %451

451:                                              ; preds = %443, %447, %450
  %452 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  br label %561

453:                                              ; preds = %413
  %454 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %416, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = icmp eq i32 %455, 1
  %457 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %416, i64 0, i32 1, i32 0
  %458 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %457, i32 0) #13
  %459 = bitcast %"class.blink::Member"* %458 to %"class.blink::CSSPrimitiveValue"**
  %460 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %459, align 8
  br i1 %456, label %461, label %476

461:                                              ; preds = %453
  %462 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %460) #13
  %463 = fcmp ult double %462, 0x47EFFFFFE0000000
  br i1 %463, label %464, label %468

464:                                              ; preds = %461
  %465 = fcmp ole double %462, 0xC7EFFFFFE0000000
  %466 = select i1 %465, double 0xC7EFFFFFE0000000, double %462
  %467 = fptrunc double %466 to float
  br label %468

468:                                              ; preds = %461, %464
  %469 = phi float [ %467, %464 ], [ 0x47EFFFFFE0000000, %461 ]
  %470 = fmul float %469, 4.000000e+00
  %471 = fcmp ult float %470, 3.276700e+04
  br i1 %471, label %472, label %561

472:                                              ; preds = %468
  %473 = fcmp ugt float %470, -3.276800e+04
  br i1 %473, label %474, label %561

474:                                              ; preds = %472
  %475 = fptosi float %470 to i16
  br label %561

476:                                              ; preds = %453
  %477 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %415, align 8
  %478 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %477, i64 0, i32 1, i32 0
  %479 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %478, i32 1) #13
  %480 = bitcast %"class.blink::Member"* %479 to %"class.blink::CSSPrimitiveValue"**
  %481 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %480, align 8
  %482 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %460) #13
  %483 = fcmp ult double %482, 0x47EFFFFFE0000000
  br i1 %483, label %484, label %488

484:                                              ; preds = %476
  %485 = fcmp ole double %482, 0xC7EFFFFFE0000000
  %486 = select i1 %485, double 0xC7EFFFFFE0000000, double %482
  %487 = fptrunc double %486 to float
  br label %488

488:                                              ; preds = %476, %484
  %489 = phi float [ %487, %484 ], [ 0x47EFFFFFE0000000, %476 ]
  %490 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %481) #13
  %491 = fcmp ult double %490, 0x47EFFFFFE0000000
  br i1 %491, label %492, label %496

492:                                              ; preds = %488
  %493 = fcmp ole double %490, 0xC7EFFFFFE0000000
  %494 = select i1 %493, double 0xC7EFFFFFE0000000, double %490
  %495 = fptrunc double %494 to float
  br label %496

496:                                              ; preds = %488, %492
  %497 = phi float [ %495, %492 ], [ 0x47EFFFFFE0000000, %488 ]
  %498 = fcmp olt float %489, %497
  br i1 %498, label %499, label %530

499:                                              ; preds = %496
  %500 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %460) #13
  %501 = fcmp ult double %500, 0x47EFFFFFE0000000
  br i1 %501, label %502, label %506

502:                                              ; preds = %499
  %503 = fcmp ole double %500, 0xC7EFFFFFE0000000
  %504 = select i1 %503, double 0xC7EFFFFFE0000000, double %500
  %505 = fptrunc double %504 to float
  br label %506

506:                                              ; preds = %499, %502
  %507 = phi float [ %505, %502 ], [ 0x47EFFFFFE0000000, %499 ]
  %508 = fmul float %507, 4.000000e+00
  %509 = fcmp ult float %508, 3.276700e+04
  br i1 %509, label %510, label %514

510:                                              ; preds = %506
  %511 = fcmp ugt float %508, -3.276800e+04
  br i1 %511, label %512, label %514

512:                                              ; preds = %510
  %513 = fptosi float %508 to i16
  br label %514

514:                                              ; preds = %506, %510, %512
  %515 = phi i16 [ %513, %512 ], [ 32767, %506 ], [ -32768, %510 ]
  %516 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %481) #13
  %517 = fcmp ult double %516, 0x47EFFFFFE0000000
  br i1 %517, label %518, label %522

518:                                              ; preds = %514
  %519 = fcmp ole double %516, 0xC7EFFFFFE0000000
  %520 = select i1 %519, double 0xC7EFFFFFE0000000, double %516
  %521 = fptrunc double %520 to float
  br label %522

522:                                              ; preds = %514, %518
  %523 = phi float [ %521, %518 ], [ 0x47EFFFFFE0000000, %514 ]
  %524 = fmul float %523, 4.000000e+00
  %525 = fcmp ult float %524, 3.276700e+04
  br i1 %525, label %526, label %561

526:                                              ; preds = %522
  %527 = fcmp ugt float %524, -3.276800e+04
  br i1 %527, label %528, label %561

528:                                              ; preds = %526
  %529 = fptosi float %524 to i16
  br label %561

530:                                              ; preds = %496
  %531 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %481) #13
  %532 = fcmp ult double %531, 0x47EFFFFFE0000000
  br i1 %532, label %533, label %537

533:                                              ; preds = %530
  %534 = fcmp ole double %531, 0xC7EFFFFFE0000000
  %535 = select i1 %534, double 0xC7EFFFFFE0000000, double %531
  %536 = fptrunc double %535 to float
  br label %537

537:                                              ; preds = %530, %533
  %538 = phi float [ %536, %533 ], [ 0x47EFFFFFE0000000, %530 ]
  %539 = fmul float %538, 4.000000e+00
  %540 = fcmp ult float %539, 3.276700e+04
  br i1 %540, label %541, label %545

541:                                              ; preds = %537
  %542 = fcmp ugt float %539, -3.276800e+04
  br i1 %542, label %543, label %545

543:                                              ; preds = %541
  %544 = fptosi float %539 to i16
  br label %545

545:                                              ; preds = %537, %541, %543
  %546 = phi i16 [ %544, %543 ], [ 32767, %537 ], [ -32768, %541 ]
  %547 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %460) #13
  %548 = fcmp ult double %547, 0x47EFFFFFE0000000
  br i1 %548, label %549, label %553

549:                                              ; preds = %545
  %550 = fcmp ole double %547, 0xC7EFFFFFE0000000
  %551 = select i1 %550, double 0xC7EFFFFFE0000000, double %547
  %552 = fptrunc double %551 to float
  br label %553

553:                                              ; preds = %545, %549
  %554 = phi float [ %552, %549 ], [ 0x47EFFFFFE0000000, %545 ]
  %555 = fmul float %554, 4.000000e+00
  %556 = fcmp ult float %555, 3.276700e+04
  br i1 %556, label %557, label %561

557:                                              ; preds = %553
  %558 = fcmp ugt float %555, -3.276800e+04
  br i1 %558, label %559, label %561

559:                                              ; preds = %557
  %560 = fptosi float %555 to i16
  br label %561

561:                                              ; preds = %342, %559, %557, %553, %528, %526, %522, %474, %472, %468, %406, %451, %351, %404, %387, %370
  %562 = phi i16 [ %25, %342 ], [ %363, %370 ], [ %380, %387 ], [ %397, %404 ], [ %25, %351 ], [ %546, %559 ], [ %546, %557 ], [ %546, %553 ], [ %515, %528 ], [ %515, %526 ], [ %515, %522 ], [ -32768, %472 ], [ 32767, %468 ], [ %475, %474 ], [ %444, %451 ], [ %25, %406 ]
  %563 = phi i16 [ %33, %342 ], [ %371, %370 ], [ %388, %387 ], [ %405, %404 ], [ %33, %351 ], [ %560, %559 ], [ -32768, %557 ], [ 32767, %553 ], [ %529, %528 ], [ -32768, %526 ], [ 32767, %522 ], [ -32768, %472 ], [ 32767, %468 ], [ %475, %474 ], [ %452, %451 ], [ %33, %406 ]
  %564 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 6, i32 0, i32 0
  %565 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %564, align 8
  %566 = icmp eq %"class.blink::CSSValue"* %565, null
  br i1 %566, label %758, label %567

567:                                              ; preds = %561
  %568 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %565, i64 0, i32 2
  %569 = load i8, i8* %568, align 1
  %570 = icmp eq i8 %569, 2
  br i1 %570, label %571, label %609

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %565, i64 1, i32 1
  %573 = bitcast i8* %572 to i32*
  %574 = load i32, i32* %573, align 4
  switch i32 %574, label %758 [
    i32 57, label %592
    i32 56, label %575
  ]

575:                                              ; preds = %571
  %576 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %578, label %582, !prof !11

578:                                              ; preds = %575
  %579 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %582, label %581

581:                                              ; preds = %578
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  br label %582

582:                                              ; preds = %575, %578, %581
  %583 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  %584 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i8*) acquire, align 8
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %586, label %590, !prof !11

586:                                              ; preds = %582
  %587 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %590, label %589

589:                                              ; preds = %586
  store i16 1600, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL17NormalWeightValueEvE19s_normalWeightValue) #13
  br label %590

590:                                              ; preds = %582, %586, %589
  %591 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL17NormalWeightValueEvE19s_normalWeightValue to i16*), align 2
  br label %758

592:                                              ; preds = %571
  %593 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %595, label %599, !prof !11

595:                                              ; preds = %592
  %596 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #13
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %599, label %598

598:                                              ; preds = %595
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #13
  br label %599

599:                                              ; preds = %592, %595, %598
  %600 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  %601 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %603, label %607, !prof !11

603:                                              ; preds = %599
  %604 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #13
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %607, label %606

606:                                              ; preds = %603
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #13
  br label %607

607:                                              ; preds = %599, %603, %606
  %608 = load i16, i16* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  br label %758

609:                                              ; preds = %567
  %610 = icmp ult i8 %569, 52
  br i1 %610, label %735, label %611

611:                                              ; preds = %609
  %612 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %565, i64 6, i32 2
  %613 = bitcast i8* %612 to i32*
  %614 = load i32, i32* %613, align 4
  %615 = icmp eq i32 %614, 2
  br i1 %615, label %616, label %766

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %565, i64 2, i32 2
  %618 = bitcast i8* %617 to %"class.WTF::Vector.2467"*
  %619 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %618, i32 0) #13
  %620 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %619, i64 0, i32 0, i32 0
  %621 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %620, align 8
  %622 = icmp eq %"class.blink::CSSValue"* %621, null
  br i1 %622, label %629, label %623

623:                                              ; preds = %616
  %624 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %621, i64 0, i32 2
  %625 = load i8, i8* %624, align 1
  %626 = icmp ult i8 %625, 2
  %627 = bitcast %"class.blink::CSSValue"* %621 to %"class.blink::CSSPrimitiveValue"*
  %628 = select i1 %626, %"class.blink::CSSPrimitiveValue"* %627, %"class.blink::CSSPrimitiveValue"* null
  br label %629

629:                                              ; preds = %616, %623
  %630 = phi %"class.blink::CSSPrimitiveValue"* [ %628, %623 ], [ null, %616 ]
  %631 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %618, i32 1) #13
  %632 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %631, i64 0, i32 0, i32 0
  %633 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %632, align 8
  %634 = icmp eq %"class.blink::CSSValue"* %633, null
  br i1 %634, label %766, label %635

635:                                              ; preds = %629
  %636 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %633, i64 0, i32 2
  %637 = load i8, i8* %636, align 1
  %638 = icmp ult i8 %637, 2
  %639 = bitcast %"class.blink::CSSValue"* %633 to %"class.blink::CSSPrimitiveValue"*
  %640 = select i1 %638, %"class.blink::CSSPrimitiveValue"* %639, %"class.blink::CSSPrimitiveValue"* null
  %641 = icmp ne %"class.blink::CSSPrimitiveValue"* %630, null
  %642 = and i1 %641, %638
  br i1 %642, label %643, label %766

643:                                              ; preds = %635
  %644 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %630) #13
  br i1 %644, label %645, label %766

645:                                              ; preds = %643
  %646 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"* nonnull %640) #13
  br i1 %646, label %647, label %766

647:                                              ; preds = %645
  %648 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %630) #13
  %649 = fcmp ult double %648, 0x47EFFFFFE0000000
  br i1 %649, label %650, label %655

650:                                              ; preds = %647
  %651 = fcmp ole double %648, 0xC7EFFFFFE0000000
  %652 = select i1 %651, double 0xC7EFFFFFE0000000, double %648
  %653 = fptrunc double %652 to float
  %654 = fcmp olt float %653, 1.000000e+00
  br i1 %654, label %766, label %655

655:                                              ; preds = %647, %650
  %656 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %640) #13
  %657 = fcmp ult double %656, 0x47EFFFFFE0000000
  br i1 %657, label %658, label %766

658:                                              ; preds = %655
  %659 = fcmp ole double %656, 0xC7EFFFFFE0000000
  %660 = select i1 %659, double 0xC7EFFFFFE0000000, double %656
  %661 = fptrunc double %660 to float
  %662 = fcmp ogt float %661, 1.000000e+03
  br i1 %662, label %766, label %663

663:                                              ; preds = %658
  %664 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %630) #13
  %665 = fcmp ult double %664, 0x47EFFFFFE0000000
  br i1 %665, label %666, label %670

666:                                              ; preds = %663
  %667 = fcmp ole double %664, 0xC7EFFFFFE0000000
  %668 = select i1 %667, double 0xC7EFFFFFE0000000, double %664
  %669 = fptrunc double %668 to float
  br label %670

670:                                              ; preds = %663, %666
  %671 = phi float [ %669, %666 ], [ 0x47EFFFFFE0000000, %663 ]
  %672 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %640) #13
  %673 = fcmp ult double %672, 0x47EFFFFFE0000000
  br i1 %673, label %674, label %678

674:                                              ; preds = %670
  %675 = fcmp ole double %672, 0xC7EFFFFFE0000000
  %676 = select i1 %675, double 0xC7EFFFFFE0000000, double %672
  %677 = fptrunc double %676 to float
  br label %678

678:                                              ; preds = %670, %674
  %679 = phi float [ %677, %674 ], [ 0x47EFFFFFE0000000, %670 ]
  %680 = fcmp olt float %671, %679
  br i1 %680, label %681, label %708

681:                                              ; preds = %678
  %682 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %630) #13
  %683 = fcmp ult double %682, 0x47EFFFFFE0000000
  br i1 %683, label %684, label %694

684:                                              ; preds = %681
  %685 = fcmp ole double %682, 0xC7EFFFFFE0000000
  %686 = select i1 %685, double 0xC7EFFFFFE0000000, double %682
  %687 = fptrunc double %686 to float
  %688 = fmul float %687, 4.000000e+00
  %689 = fcmp ult float %688, 3.276700e+04
  br i1 %689, label %690, label %694

690:                                              ; preds = %684
  %691 = fcmp ugt float %688, -3.276800e+04
  br i1 %691, label %692, label %694

692:                                              ; preds = %690
  %693 = fptosi float %688 to i16
  br label %694

694:                                              ; preds = %681, %684, %690, %692
  %695 = phi i16 [ %693, %692 ], [ 32767, %684 ], [ -32768, %690 ], [ 32767, %681 ]
  %696 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %640) #13
  %697 = fcmp ult double %696, 0x47EFFFFFE0000000
  br i1 %697, label %698, label %758

698:                                              ; preds = %694
  %699 = fcmp ole double %696, 0xC7EFFFFFE0000000
  %700 = select i1 %699, double 0xC7EFFFFFE0000000, double %696
  %701 = fptrunc double %700 to float
  %702 = fmul float %701, 4.000000e+00
  %703 = fcmp ult float %702, 3.276700e+04
  br i1 %703, label %704, label %758

704:                                              ; preds = %698
  %705 = fcmp ugt float %702, -3.276800e+04
  br i1 %705, label %706, label %758

706:                                              ; preds = %704
  %707 = fptosi float %702 to i16
  br label %758

708:                                              ; preds = %678
  %709 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %640) #13
  %710 = fcmp ult double %709, 0x47EFFFFFE0000000
  br i1 %710, label %711, label %721

711:                                              ; preds = %708
  %712 = fcmp ole double %709, 0xC7EFFFFFE0000000
  %713 = select i1 %712, double 0xC7EFFFFFE0000000, double %709
  %714 = fptrunc double %713 to float
  %715 = fmul float %714, 4.000000e+00
  %716 = fcmp ult float %715, 3.276700e+04
  br i1 %716, label %717, label %721

717:                                              ; preds = %711
  %718 = fcmp ugt float %715, -3.276800e+04
  br i1 %718, label %719, label %721

719:                                              ; preds = %717
  %720 = fptosi float %715 to i16
  br label %721

721:                                              ; preds = %708, %711, %717, %719
  %722 = phi i16 [ %720, %719 ], [ 32767, %711 ], [ -32768, %717 ], [ 32767, %708 ]
  %723 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %630) #13
  %724 = fcmp ult double %723, 0x47EFFFFFE0000000
  br i1 %724, label %725, label %758

725:                                              ; preds = %721
  %726 = fcmp ole double %723, 0xC7EFFFFFE0000000
  %727 = select i1 %726, double 0xC7EFFFFFE0000000, double %723
  %728 = fptrunc double %727 to float
  %729 = fmul float %728, 4.000000e+00
  %730 = fcmp ult float %729, 3.276700e+04
  br i1 %730, label %731, label %758

731:                                              ; preds = %725
  %732 = fcmp ugt float %729, -3.276800e+04
  br i1 %732, label %733, label %758

733:                                              ; preds = %731
  %734 = fptosi float %729 to i16
  br label %758

735:                                              ; preds = %609
  %736 = icmp ugt i8 %569, 1
  br i1 %736, label %766, label %737

737:                                              ; preds = %735
  %738 = bitcast %"class.blink::CSSValue"* %565 to %"class.blink::CSSPrimitiveValue"*
  %739 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %738) #13
  %740 = fcmp ult double %739, 0x47EFFFFFE0000000
  br i1 %740, label %741, label %766

741:                                              ; preds = %737
  %742 = fcmp ole double %739, 0xC7EFFFFFE0000000
  %743 = select i1 %742, double 0xC7EFFFFFE0000000, double %739
  %744 = fptrunc double %743 to float
  %745 = fcmp olt float %744, 1.000000e+00
  %746 = fcmp ogt float %744, 1.000000e+03
  %747 = or i1 %745, %746
  br i1 %747, label %766, label %748

748:                                              ; preds = %741
  %749 = fmul float %744, 4.000000e+00
  %750 = fcmp ult float %749, 3.276700e+04
  br i1 %750, label %751, label %758

751:                                              ; preds = %748
  %752 = fcmp ole float %749, -3.276800e+04
  %753 = select i1 %752, float -3.276800e+04, float %749
  %754 = fptosi float %753 to i16
  %755 = fcmp ugt float %749, -3.276800e+04
  br i1 %755, label %756, label %758

756:                                              ; preds = %751
  %757 = fptosi float %749 to i16
  br label %758

758:                                              ; preds = %721, %694, %561, %756, %751, %748, %733, %731, %725, %706, %704, %698, %571, %607, %590
  %759 = phi i16 [ %41, %561 ], [ %600, %607 ], [ %583, %590 ], [ %41, %571 ], [ %722, %733 ], [ %722, %731 ], [ %722, %725 ], [ %695, %706 ], [ %695, %704 ], [ %695, %698 ], [ 32767, %748 ], [ %754, %751 ], [ %754, %756 ], [ %695, %694 ], [ %722, %721 ]
  %760 = phi i16 [ %49, %561 ], [ %608, %607 ], [ %591, %590 ], [ %49, %571 ], [ %734, %733 ], [ -32768, %731 ], [ 32767, %725 ], [ %707, %706 ], [ -32768, %704 ], [ 32767, %698 ], [ 32767, %748 ], [ -32768, %751 ], [ %757, %756 ], [ 32767, %694 ], [ 32767, %721 ]
  %761 = zext i16 %759 to i48
  %762 = zext i16 %760 to i48
  %763 = shl nuw nsw i48 %762, 16
  %764 = or i48 %763, %761
  %765 = or i48 %764, -94557999988736
  br label %766

766:                                              ; preds = %348, %741, %737, %735, %643, %645, %650, %658, %655, %635, %629, %611, %321, %237, %239, %229, %223, %205, %758
  %767 = phi i48 [ %765, %758 ], [ %55, %205 ], [ %55, %223 ], [ %55, %229 ], [ %55, %239 ], [ %55, %237 ], [ %55, %321 ], [ %55, %611 ], [ %55, %629 ], [ %55, %635 ], [ %55, %655 ], [ %55, %658 ], [ %55, %650 ], [ %55, %645 ], [ %55, %643 ], [ %55, %735 ], [ %55, %737 ], [ %55, %741 ], [ %55, %348 ]
  %768 = phi i16 [ %343, %758 ], [ %9, %205 ], [ %9, %223 ], [ %9, %229 ], [ %9, %239 ], [ %9, %237 ], [ %9, %321 ], [ %9, %611 ], [ %9, %629 ], [ %9, %635 ], [ %9, %655 ], [ %9, %658 ], [ %9, %650 ], [ %9, %645 ], [ %9, %643 ], [ %9, %735 ], [ %9, %737 ], [ %9, %741 ], [ %9, %348 ]
  %769 = phi i16 [ %344, %758 ], [ %17, %205 ], [ %17, %223 ], [ %17, %229 ], [ %17, %239 ], [ %17, %237 ], [ %17, %321 ], [ %17, %611 ], [ %17, %629 ], [ %17, %635 ], [ %17, %655 ], [ %17, %658 ], [ %17, %650 ], [ %17, %645 ], [ %17, %643 ], [ %17, %735 ], [ %17, %737 ], [ %17, %741 ], [ %17, %348 ]
  %770 = phi i16 [ %562, %758 ], [ %25, %205 ], [ %25, %223 ], [ %25, %229 ], [ %25, %239 ], [ %25, %237 ], [ %25, %321 ], [ %25, %611 ], [ %25, %629 ], [ %25, %635 ], [ %25, %655 ], [ %25, %658 ], [ %25, %650 ], [ %25, %645 ], [ %25, %643 ], [ %25, %735 ], [ %25, %737 ], [ %25, %741 ], [ %25, %348 ]
  %771 = phi i16 [ %563, %758 ], [ %33, %205 ], [ %33, %223 ], [ %33, %229 ], [ %33, %239 ], [ %33, %237 ], [ %33, %321 ], [ %33, %611 ], [ %33, %629 ], [ %33, %635 ], [ %33, %655 ], [ %33, %658 ], [ %33, %650 ], [ %33, %645 ], [ %33, %643 ], [ %33, %735 ], [ %33, %737 ], [ %33, %741 ], [ %33, %348 ]
  %772 = zext i16 %771 to i64
  %773 = shl nuw i64 %772, 48
  %774 = zext i16 %770 to i64
  %775 = shl nuw nsw i64 %774, 32
  %776 = zext i16 %769 to i64
  %777 = shl nuw nsw i64 %776, 16
  %778 = zext i16 %768 to i64
  %779 = or i64 %777, %778
  %780 = or i64 %779, %775
  %781 = or i64 %780, %773
  %782 = insertvalue { i64, i48 } undef, i64 %781, 0
  %783 = insertvalue { i64, i48 } %782, i48 %767, 1
  ret { i64, i48 } %783
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_8FontFaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %6, %"class.blink::ExecutionContext"* %1) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = bitcast i32 (...)*** %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 116, i1 false)
  %11 = bitcast %"class.blink::DOMException"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false)
  ret void
}

declare void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFaceC2EPNS_16ExecutionContextERKN3WTF12AtomicStringEPKNS_19FontFaceDescriptorsE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::FontFaceDescriptors"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_8FontFaceEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %8, %"class.blink::ExecutionContext"* %1) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = bitcast i32 (...)*** %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !6

28:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %4, %14, %29
  %32 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 4, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 8
  %35 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 108, i1 false)
  %36 = bitcast %"class.blink::DOMException"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 40, i1 false)
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %34, i32 9, %"class.blink::ExceptionState"* null)
  %37 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 11
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %37, i32 11, %"class.blink::ExceptionState"* null)
  %38 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 7
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %38, i32 8, %"class.blink::ExceptionState"* null)
  %39 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 9
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %39, i32 38, %"class.blink::ExceptionState"* null)
  %40 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 10
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %40, i32 10, %"class.blink::ExceptionState"* null)
  %41 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 4
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %41, i32 7, %"class.blink::ExceptionState"* null)
  %42 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 3
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %42, i32 5, %"class.blink::ExceptionState"* null)
  %43 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 1
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %43, i32 2, %"class.blink::ExceptionState"* null)
  %44 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 2
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %44, i32 3, %"class.blink::ExceptionState"* null)
  %45 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 5
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %45, i32 16, %"class.blink::ExceptionState"* null)
  %46 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_css_font_face_size_adjust_enabled_E, align 1, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.blink::FontFaceDescriptors", %"class.blink::FontFaceDescriptors"* %3, i64 0, i32 6
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %49, i32 28, %"class.blink::ExceptionState"* null)
  br label %50

50:                                               ; preds = %31, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::ExceptionState"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %13 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, i64 1
  %15 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ExecutionContext"* nonnull %1) #13
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %19 = bitcast i32* %18 to %"class.blink::LocalDOMWindow"*
  %20 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %19) #13
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %22 = bitcast i8* %21 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %22, %"class.blink::Document"* dereferenceable(2848) %20) #13
  br label %26

23:                                               ; preds = %11, %5
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #13
  %25 = bitcast i8* %24 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"* %25, %"class.blink::ExecutionContext"* dereferenceable(376) %1) #13
  br label %26

26:                                               ; preds = %17, %23
  %27 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %28 = phi %"class.blink::CSSParserContext"* [ %22, %17 ], [ %25, %23 ]
  %29 = getelementptr inbounds i8, i8* %27, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = tail call %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERKN3WTF6StringERKNS_16CSSParserContextE(i32 %3, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::CSSParserContext"* dereferenceable(176) %28) #13
  %34 = icmp eq %"class.blink::CSSValue"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  %36 = tail call zeroext i1 @_ZN5blink8FontFace16SetPropertyValueEPKNS_8CSSValueENS_18AtRuleDescriptorIDE(%"class.blink::FontFace"* %0, %"class.blink::CSSValue"* nonnull %33, i32 %3)
  br i1 %36, label %235, label %37

37:                                               ; preds = %26, %35
  %38 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %39, align 8
  %40 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %119, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %61

51:                                               ; preds = %44
  %52 = zext i32 %50 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #13
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !6

58:                                               ; preds = %51
  tail call void @llvm.trap() #13
  unreachable

59:                                               ; preds = %51
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %49, align 4
  br label %61

61:                                               ; preds = %59, %44
  %62 = phi i32 [ %60, %59 ], [ %50, %44 ]
  %63 = load atomic i32, i32* %45 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %61
  %67 = zext i32 %62 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #13
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !6

73:                                               ; preds = %66
  tail call void @llvm.trap() #13
  unreachable

74:                                               ; preds = %66
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %49, align 4
  br label %76

76:                                               ; preds = %74, %61
  %77 = phi i32 [ %75, %74 ], [ %62, %61 ]
  %78 = load atomic i32, i32* %45 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = add i32 %77, -1
  store i32 %82, i32* %49, align 4
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi i32 [ %82, %81 ], [ %77, %76 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %87

87:                                               ; preds = %83, %86
  %88 = load atomic i32, i32* %45 monotonic, align 4, !noalias !12
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = load i32, i32* %49, align 4
  br i1 %90, label %92, label %102

92:                                               ; preds = %87
  %93 = zext i32 %91 to i33
  %94 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #13
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !6

99:                                               ; preds = %92
  tail call void @llvm.trap() #13, !noalias !12
  unreachable

100:                                              ; preds = %92
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %49, align 4, !noalias !12
  br label %102

102:                                              ; preds = %87, %100
  %103 = phi i32 [ %101, %100 ], [ %91, %87 ]
  %104 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.6 to i64), i64* %104, align 8, !alias.scope !12
  %105 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %105, align 8, !alias.scope !12
  %106 = load atomic i32, i32* %45 monotonic, align 4, !noalias !12
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %102
  %110 = zext i32 %103 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #13
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !6

116:                                              ; preds = %109
  tail call void @llvm.trap() #13, !noalias !12
  unreachable

117:                                              ; preds = %109
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %49, align 4, !noalias !12
  br label %123

119:                                              ; preds = %37
  %120 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([16 x i8]* @.str.6 to i64), i64* %120, align 8, !alias.scope !12
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8, !alias.scope !12
  %122 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8** %122, align 8, !alias.scope !12
  br label %135

123:                                              ; preds = %117, %102
  %124 = phi i32 [ %118, %117 ], [ %103, %102 ]
  %125 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8** %125, align 8, !alias.scope !12
  %126 = load atomic i32, i32* %45 monotonic, align 4, !noalias !12
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %123
  %130 = add i32 %124, -1
  store i32 %130, i32* %49, align 4, !noalias !12
  br label %131

131:                                              ; preds = %129, %123
  %132 = phi i32 [ %130, %129 ], [ %124, %123 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13, !noalias !12
  br label %135

135:                                              ; preds = %119, %131, %134
  %136 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %39, align 8
  %137 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #13
  br label %153

153:                                              ; preds = %135, %149, %152
  br i1 %43, label %167, label %154

154:                                              ; preds = %153
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %167

167:                                              ; preds = %153, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  %168 = icmp eq %"class.blink::ExceptionState"* %4, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %167
  %170 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %171 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %170, align 8
  %172 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %171, align 8
  call void %172(%"class.blink::ExceptionState"* nonnull %4, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %8) #13
  br label %218

173:                                              ; preds = %167
  %174 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #13
  %175 = bitcast i8* %174 to %"class.blink::DOMException"*
  %176 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #13
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %175, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #13
  br label %193

193:                                              ; preds = %173, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #13
  %194 = getelementptr inbounds i8, i8* %174, i64 -4
  %195 = bitcast i8* %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = or i16 %196, 1
  store atomic i16 %197, i16* %195 release, align 2
  %198 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18
  %199 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %199, align 8
  %201 = icmp eq %"class.blink::DOMException"* %200, null
  br i1 %201, label %202, label %217

202:                                              ; preds = %193
  %203 = icmp eq i8* %174, null
  %204 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %204) #13
  br i1 %203, label %205, label %207

205:                                              ; preds = %202
  store i32 19, i32* %6, align 4
  %206 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %6) #13
  br label %207

207:                                              ; preds = %205, %202
  %208 = phi %"class.blink::DOMException"* [ %206, %205 ], [ %175, %202 ]
  %209 = ptrtoint %"class.blink::DOMException"* %208 to i64
  %210 = bitcast %"class.blink::Member.4"* %198 to i64*
  store atomic i64 %209, i64* %210 monotonic, align 8
  %211 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %207
  %214 = bitcast %"class.blink::DOMException"* %208 to i8*
  %215 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %214) #13
  br label %216

216:                                              ; preds = %213, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %204) #13
  br label %217

217:                                              ; preds = %193, %216
  call void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"* %0, i32 3) #13
  br label %218

218:                                              ; preds = %217, %169
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #13
  br label %234

234:                                              ; preds = %218, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %235

235:                                              ; preds = %35, %234
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFaceD2Ev(%"class.blink::FontFace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %21, %34, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink8FontFaceD1Ev(%"class.blink::FontFace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 -1, i32 21
  %3 = bitcast %"class.blink::HeapVector.318"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 1
  %5 = bitcast %"class.blink::HeapVector.318"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 3
  %7 = bitcast %"class.blink::HeapVector.318"* %6 to %"class.WTF::StringImpl"**
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %22, %19, %1
  %24 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 2, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i32* %24 to %"class.WTF::StringImpl"**
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %23, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFaceD0Ev(%"class.blink::FontFace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #13
  br label %21

21:                                               ; preds = %20, %17, %1
  %22 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %21, %34, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink8FontFaceD0Ev(%"class.blink::FontFace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 -1, i32 21
  %3 = bitcast %"class.blink::HeapVector.318"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 1
  %5 = bitcast %"class.blink::HeapVector.318"* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [7 x i8*], [3 x i8*] }, { [11 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink8FontFaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 3
  %7 = bitcast %"class.blink::HeapVector.318"* %6 to %"class.WTF::StringImpl"**
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %22, %19, %1
  %24 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 2, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i32* %24 to %"class.WTF::StringImpl"**
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %23, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace5styleEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace6weightEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7stretchEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace12unicodeRangeEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7variantEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace15featureSettingsEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7displayEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace14ascentOverrideEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace15descentOverrideEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace15lineGapOverrideEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 14, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace10sizeAdjustEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 16, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %4) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"class.WTF::StringImpl"* [ %11, %9 ], [ %7, %6 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace8setStyleEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 9, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace9setWeightEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 11, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace10setStretchEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 8, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace15setUnicodeRangeEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 38, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace10setVariantEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 10, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace18setFeatureSettingsEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 7, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace10setDisplayEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 5, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace17setAscentOverrideEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 2, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace18setDescentOverrideEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 3, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace18setLineGapOverrideEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 16, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace13setSizeAdjustEPNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::FontFace"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink8FontFace21SetPropertyFromStringEPKNS_16ExecutionContextERKN3WTF6StringENS_18AtRuleDescriptorIDEPNS_14ExceptionStateE(%"class.blink::FontFace"* %0, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 28, %"class.blink::ExceptionState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8FontFace16SetPropertyValueEPKNS_8CSSValueENS_18AtRuleDescriptorIDE(%"class.blink::FontFace"* nocapture, %"class.blink::CSSValue"*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %2, label %154 [
    i32 9, label %4
    i32 11, label %13
    i32 8, label %22
    i32 38, label %31
    i32 10, label %46
    i32 7, label %55
    i32 5, label %64
    i32 2, label %81
    i32 3, label %98
    i32 16, label %115
    i32 28, label %132
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 5
  %6 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %154, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %154

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 6
  %15 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %16 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %154, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  br label %154

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 7
  %24 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %25 = bitcast %"class.blink::Member"* %23 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %154, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #13
  br label %154

31:                                               ; preds = %3
  %32 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp ugt i8 %35, 51
  br i1 %36, label %37, label %154

37:                                               ; preds = %31, %33
  %38 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 8
  %39 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %40 = bitcast %"class.blink::Member"* %38 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %154, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #13
  br label %154

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 9
  %48 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %49 = bitcast %"class.blink::Member"* %47 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %154, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #13
  br label %154

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 10
  %57 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %58 = bitcast %"class.blink::Member"* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %154, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #13
  br label %154

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 11
  %66 = ptrtoint %"class.blink::CSSValue"* %1 to i64
  %67 = bitcast %"class.blink::Member"* %65 to i64*
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #13
  br label %73

73:                                               ; preds = %64, %70
  %74 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20, i32 0, i32 0
  %75 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %74, align 8
  %76 = icmp eq %"class.blink::CSSFontFace"* %75, null
  br i1 %76, label %154, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %65, i64 0, i32 0, i32 0
  %79 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %78, align 8
  %80 = tail call i32 @_ZN5blink21CSSValueToFontDisplayEPKNS_8CSSValueE(%"class.blink::CSSValue"* %79) #13
  tail call void @_ZN5blink11CSSFontFace10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFace"* nonnull %75, i32 %80) #13
  br label %154

81:                                               ; preds = %3
  %82 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 2
  br i1 %86, label %88, label %87

87:                                               ; preds = %83, %81
  br label %88

88:                                               ; preds = %83, %87
  %89 = phi %"class.blink::CSSValue"* [ %1, %87 ], [ null, %83 ]
  %90 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 12
  %91 = ptrtoint %"class.blink::CSSValue"* %89 to i64
  %92 = bitcast %"class.blink::Member"* %90 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %154, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %89, i64 0, i32 0
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #13
  br label %154

98:                                               ; preds = %3
  %99 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 2
  br i1 %103, label %105, label %104

104:                                              ; preds = %100, %98
  br label %105

105:                                              ; preds = %100, %104
  %106 = phi %"class.blink::CSSValue"* [ %1, %104 ], [ null, %100 ]
  %107 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 13
  %108 = ptrtoint %"class.blink::CSSValue"* %106 to i64
  %109 = bitcast %"class.blink::Member"* %107 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %154, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %106, i64 0, i32 0
  %114 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %113) #13
  br label %154

115:                                              ; preds = %3
  %116 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 0, i32 2
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 2
  br i1 %120, label %122, label %121

121:                                              ; preds = %117, %115
  br label %122

122:                                              ; preds = %117, %121
  %123 = phi %"class.blink::CSSValue"* [ %1, %121 ], [ null, %117 ]
  %124 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 14
  %125 = ptrtoint %"class.blink::CSSValue"* %123 to i64
  %126 = bitcast %"class.blink::Member"* %124 to i64*
  store atomic i64 %125, i64* %126 monotonic, align 8
  %127 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %154, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %123, i64 0, i32 0
  %131 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %130) #13
  br label %154

132:                                              ; preds = %3
  %133 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %133, label %143, label %134

134:                                              ; preds = %132
  %135 = bitcast %"class.blink::CSSValue"* %1 to %"class.blink::CSSPrimitiveValue"*
  %136 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %135) #13
  %137 = fcmp ult double %136, 0x47EFFFFFE0000000
  br i1 %137, label %138, label %143

138:                                              ; preds = %134
  %139 = fcmp ole double %136, 0xC7EFFFFFE0000000
  %140 = select i1 %139, double 0xC7EFFFFFE0000000, double %136
  %141 = fptrunc double %140 to float
  %142 = fcmp oeq float %141, 1.000000e+02
  br i1 %142, label %144, label %143

143:                                              ; preds = %138, %134, %132
  br label %144

144:                                              ; preds = %138, %143
  %145 = phi %"class.blink::CSSValue"* [ %1, %143 ], [ null, %138 ]
  %146 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 16
  %147 = ptrtoint %"class.blink::CSSValue"* %145 to i64
  %148 = bitcast %"class.blink::Member"* %146 to i64*
  store atomic i64 %147, i64* %148 monotonic, align 8
  %149 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %145, i64 0, i32 0
  %153 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %152) #13
  br label %154

154:                                              ; preds = %73, %151, %144, %129, %122, %112, %105, %95, %88, %61, %55, %52, %46, %43, %37, %28, %22, %19, %13, %10, %4, %77, %3, %33
  %155 = phi i1 [ false, %33 ], [ false, %3 ], [ true, %73 ], [ true, %77 ], [ true, %4 ], [ true, %10 ], [ true, %13 ], [ true, %19 ], [ true, %22 ], [ true, %28 ], [ true, %37 ], [ true, %43 ], [ true, %46 ], [ true, %52 ], [ true, %55 ], [ true, %61 ], [ true, %88 ], [ true, %95 ], [ true, %105 ], [ true, %112 ], [ true, %122 ], [ true, %129 ], [ true, %144 ], [ true, %151 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #13
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %3, i8* %8) #13
  %9 = bitcast %"class.WTF::StringTypeAdapter.3051"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %2, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #13
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #13
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !6

41:                                               ; preds = %34
  call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #13
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #13
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !6

77:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink11CSSFontFace10SetDisplayENS_11FontDisplayE(%"class.blink::CSSFontFace"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink21CSSValueToFontDisplayEPKNS_8CSSValueE(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FontFace6statusEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %9 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #13
  br label %32

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7) #13
  br label %32

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #13
  br label %32

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5) #13
  br label %32

9:                                                ; preds = %1
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !6

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %9, %8, %7, %6, %5
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  ret %"class.WTF::StringImpl"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace13SetLoadStatusENS0_14LoadStatusTypeE(%"class.blink::FontFace"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.492", align 8
  %5 = alloca %"class.blink::Persistent.2458", align 8
  %6 = alloca %"class.blink::Persistent.2460", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.492", align 8
  %9 = alloca %"class.blink::Persistent.2458", align 8
  %10 = alloca %"class.blink::Persistent.2462", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.base::OnceCallback.492", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to { i64, i64 }*
  %15 = alloca %"class.blink::Persistent.2460", align 8
  %16 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %17) #13
  %19 = icmp eq %"class.blink::ExecutionContext"* %18, null
  br i1 %19, label %377, label %20

20:                                               ; preds = %2
  %21 = load i32, i32* %16, align 8
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %377

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 19, i32 0, i32 0
  %26 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %25, align 8
  %27 = icmp eq %"class.blink::ScriptPromiseProperty"* %26, null
  br i1 %27, label %298, label %28

28:                                               ; preds = %24
  %29 = icmp eq i32 %21, 2
  %30 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %17) #13
  %31 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %30, i64 0, i32 1
  %32 = bitcast %"class.blink::MojoBindingContext"* %31 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %33 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %32, align 8
  %34 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %33, i64 6
  %35 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %34, align 8
  %36 = tail call %"class.base::SingleThreadTaskRunner"* %35(%"class.blink::MojoBindingContext"* %31, i8 zeroext 1) #13
  %37 = bitcast %"class.base::SingleThreadTaskRunner"* %36 to %"class.base::TaskRunner"*
  br i1 %29, label %38, label %167

38:                                               ; preds = %28
  %39 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 524) #13
  %40 = bitcast %"class.blink::Persistent.2458"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %5, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %5, i64 0, i32 0, i32 0
  store %"class.blink::ScriptPromiseProperty"* %41, %"class.blink::ScriptPromiseProperty"** %43, align 8, !alias.scope !15
  %44 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8, !alias.scope !15
  %45 = ptrtoint %"class.blink::ScriptPromiseProperty"* %41 to i64
  switch i64 %45, label %46 [
    i64 0, label %72
    i64 -1, label %72
  ]

46:                                               ; preds = %38
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !15
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13, !noalias !15
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !6

51:                                               ; preds = %46
  %52 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8, !noalias !15
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8, !noalias !15
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8, !noalias !15
  %61 = icmp eq %"class.blink::PersistentNode"* %60, null
  br i1 %61, label %62, label %65, !prof !6

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %63) #13
  %64 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi %"class.blink::PersistentNode"* [ %64, %62 ], [ %60, %53 ]
  %67 = bitcast %"class.blink::PersistentNode"* %66 to i64*
  %68 = load i64, i64* %67, align 8, !noalias !15
  %69 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  store i64 %68, i64* %69, align 8, !noalias !15
  %70 = bitcast %"class.blink::PersistentNode"* %66 to %"class.blink::PersistentBase.2459"**
  store %"class.blink::PersistentBase.2459"* %42, %"class.blink::PersistentBase.2459"** %70, align 8, !noalias !15
  %71 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %66, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv, void (%"class.blink::Visitor"*, i8*)** %71, align 8
  store %"class.blink::PersistentNode"* %66, %"class.blink::PersistentNode"** %44, align 8, !alias.scope !15
  br label %72

72:                                               ; preds = %38, %38, %65
  %73 = bitcast %"class.blink::Persistent.2460"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #13
  %74 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %6, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %6, i64 0, i32 0, i32 0
  store %"class.blink::FontFace"* %0, %"class.blink::FontFace"** %75, align 8, !alias.scope !18
  %76 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %76, align 8, !alias.scope !18
  %77 = ptrtoint %"class.blink::FontFace"* %0 to i64
  switch i64 %77, label %78 [
    i64 0, label %104
    i64 -1, label %104
  ]

78:                                               ; preds = %72
  %79 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !18
  %80 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %79, i64 0, i32 1
  %81 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %80) #13, !noalias !18
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %85, !prof !6

83:                                               ; preds = %78
  %84 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %80, i8* %84) #13
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i8* [ %84, %83 ], [ %81, %78 ]
  %87 = bitcast i8* %86 to %"class.blink::ThreadState"**
  %88 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %87, align 8, !noalias !18
  %89 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %89, align 8, !noalias !18
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8, !noalias !18
  %93 = icmp eq %"class.blink::PersistentNode"* %92, null
  br i1 %93, label %94, label %97, !prof !6

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %95) #13
  %96 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  br label %97

97:                                               ; preds = %94, %85
  %98 = phi %"class.blink::PersistentNode"* [ %96, %94 ], [ %92, %85 ]
  %99 = bitcast %"class.blink::PersistentNode"* %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !18
  %101 = bitcast %"class.blink::PersistentRegion"* %90 to i64*
  store i64 %100, i64* %101, align 8, !noalias !18
  %102 = bitcast %"class.blink::PersistentNode"* %98 to %"class.blink::PersistentBase.2461"**
  store %"class.blink::PersistentBase.2461"* %74, %"class.blink::PersistentBase.2461"** %102, align 8, !noalias !18
  %103 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %98, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %103, align 8
  store %"class.blink::PersistentNode"* %98, %"class.blink::PersistentNode"** %76, align 8, !alias.scope !18
  br label %104

104:                                              ; preds = %72, %72, %97
  %105 = call i8* @_Znwm(i64 80) #14, !noalias !21
  %106 = bitcast i8* %105 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %106, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS6_EJNS3_10PersistentISA_EENSE_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS5_EJNS2_10PersistentIS9_EENSD_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !21
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)* @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7ResolveIPS2_EEvT_ to i64), i64 0>, <2 x i64>* %108, align 8, !noalias !21
  %109 = getelementptr inbounds i8, i8* %105, i64 48
  %110 = bitcast i8* %109 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %110, %"class.blink::Persistent.2458"* nonnull dereferenceable(16) %5, %"class.blink::Persistent.2460"* nonnull dereferenceable(16) %6) #13, !noalias !21
  %111 = bitcast %"class.base::OnceCallback.492"* %4 to i8**
  store i8* %105, i8** %111, align 8, !alias.scope !21
  %112 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %37, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.492"* nonnull %4) #13
  %113 = getelementptr inbounds %"class.base::OnceCallback.492", %"class.base::OnceCallback.492"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %113) #13
  %114 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %76, align 8
  %115 = icmp eq %"class.blink::PersistentNode"* %114, null
  br i1 %115, label %135, label %116

116:                                              ; preds = %104
  %117 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %118 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %117, i64 0, i32 1
  %119 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %118) #13
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %123, !prof !6

121:                                              ; preds = %116
  %122 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %118, i8* %122) #13
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i8* [ %122, %121 ], [ %119, %116 ]
  %125 = bitcast i8* %124 to %"class.blink::ThreadState"**
  %126 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %127, align 8
  %129 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %76, align 8
  %130 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %128, i64 0, i32 0, i32 0
  %131 = bitcast %"class.blink::PersistentRegion"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.blink::PersistentNode"* %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %129, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %134, align 8
  store %"class.blink::PersistentNode"* %129, %"class.blink::PersistentNode"** %130, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %76, align 8
  br label %135

135:                                              ; preds = %104, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #13
  %136 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %137 = icmp eq %"class.blink::PersistentNode"* %136, null
  br i1 %137, label %157, label %138

138:                                              ; preds = %135
  %139 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %140 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %139, i64 0, i32 1
  %141 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %140) #13
  %142 = icmp eq i8* %141, null
  br i1 %142, label %143, label %145, !prof !6

143:                                              ; preds = %138
  %144 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %140, i8* %144) #13
  br label %145

145:                                              ; preds = %143, %138
  %146 = phi i8* [ %144, %143 ], [ %141, %138 ]
  %147 = bitcast i8* %146 to %"class.blink::ThreadState"**
  %148 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %149, align 8
  %151 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %150, i64 0, i32 0, i32 0
  %153 = bitcast %"class.blink::PersistentRegion"* %150 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.blink::PersistentNode"* %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %151, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %156, align 8
  store %"class.blink::PersistentNode"* %151, %"class.blink::PersistentNode"** %152, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8
  br label %157

157:                                              ; preds = %135, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #13
  %158 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %158, label %298, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw sub i32* %161, i32 1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %298

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %160, i64 -2
  %166 = bitcast %"class.base::RefCountedThreadSafe.484"* %165 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %166) #13
  br label %298

167:                                              ; preds = %28
  %168 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 531) #13
  %169 = bitcast %"class.blink::Persistent.2458"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #13
  %170 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %25, align 8
  %171 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %9, i64 0, i32 0
  %172 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %9, i64 0, i32 0, i32 0
  store %"class.blink::ScriptPromiseProperty"* %170, %"class.blink::ScriptPromiseProperty"** %172, align 8, !alias.scope !28
  %173 = getelementptr inbounds %"class.blink::Persistent.2458", %"class.blink::Persistent.2458"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %173, align 8, !alias.scope !28
  %174 = ptrtoint %"class.blink::ScriptPromiseProperty"* %170 to i64
  switch i64 %174, label %175 [
    i64 0, label %201
    i64 -1, label %201
  ]

175:                                              ; preds = %167
  %176 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !28
  %177 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %176, i64 0, i32 1
  %178 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %177) #13, !noalias !28
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %182, !prof !6

180:                                              ; preds = %175
  %181 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %177, i8* %181) #13
  br label %182

182:                                              ; preds = %180, %175
  %183 = phi i8* [ %181, %180 ], [ %178, %175 ]
  %184 = bitcast i8* %183 to %"class.blink::ThreadState"**
  %185 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %184, align 8, !noalias !28
  %186 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %187 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %186, align 8, !noalias !28
  %188 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %188, align 8, !noalias !28
  %190 = icmp eq %"class.blink::PersistentNode"* %189, null
  br i1 %190, label %191, label %194, !prof !6

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %187, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %192) #13
  %193 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %188, align 8
  br label %194

194:                                              ; preds = %191, %182
  %195 = phi %"class.blink::PersistentNode"* [ %193, %191 ], [ %189, %182 ]
  %196 = bitcast %"class.blink::PersistentNode"* %195 to i64*
  %197 = load i64, i64* %196, align 8, !noalias !28
  %198 = bitcast %"class.blink::PersistentRegion"* %187 to i64*
  store i64 %197, i64* %198, align 8, !noalias !28
  %199 = bitcast %"class.blink::PersistentNode"* %195 to %"class.blink::PersistentBase.2459"**
  store %"class.blink::PersistentBase.2459"* %171, %"class.blink::PersistentBase.2459"** %199, align 8, !noalias !28
  %200 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %195, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv, void (%"class.blink::Visitor"*, i8*)** %200, align 8
  store %"class.blink::PersistentNode"* %195, %"class.blink::PersistentNode"** %173, align 8, !alias.scope !28
  br label %201

201:                                              ; preds = %167, %167, %194
  %202 = bitcast %"class.blink::Persistent.2462"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #13
  %203 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18, i32 0, i32 0
  %204 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::Persistent.2462", %"class.blink::Persistent.2462"* %10, i64 0, i32 0
  %206 = getelementptr inbounds %"class.blink::Persistent.2462", %"class.blink::Persistent.2462"* %10, i64 0, i32 0, i32 0
  store %"class.blink::DOMException"* %204, %"class.blink::DOMException"** %206, align 8, !alias.scope !31
  %207 = getelementptr inbounds %"class.blink::Persistent.2462", %"class.blink::Persistent.2462"* %10, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %207, align 8, !alias.scope !31
  %208 = ptrtoint %"class.blink::DOMException"* %204 to i64
  switch i64 %208, label %209 [
    i64 0, label %235
    i64 -1, label %235
  ]

209:                                              ; preds = %201
  %210 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !31
  %211 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %210, i64 0, i32 1
  %212 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %211) #13, !noalias !31
  %213 = icmp eq i8* %212, null
  br i1 %213, label %214, label %216, !prof !6

214:                                              ; preds = %209
  %215 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %211, i8* %215) #13
  br label %216

216:                                              ; preds = %214, %209
  %217 = phi i8* [ %215, %214 ], [ %212, %209 ]
  %218 = bitcast i8* %217 to %"class.blink::ThreadState"**
  %219 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %218, align 8, !noalias !31
  %220 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %219, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %220, align 8, !noalias !31
  %222 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %221, i64 0, i32 0, i32 0
  %223 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %222, align 8, !noalias !31
  %224 = icmp eq %"class.blink::PersistentNode"* %223, null
  br i1 %224, label %225, label %228, !prof !6

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %221, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %226) #13
  %227 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %222, align 8
  br label %228

228:                                              ; preds = %225, %216
  %229 = phi %"class.blink::PersistentNode"* [ %227, %225 ], [ %223, %216 ]
  %230 = bitcast %"class.blink::PersistentNode"* %229 to i64*
  %231 = load i64, i64* %230, align 8, !noalias !31
  %232 = bitcast %"class.blink::PersistentRegion"* %221 to i64*
  store i64 %231, i64* %232, align 8, !noalias !31
  %233 = bitcast %"class.blink::PersistentNode"* %229 to %"class.blink::PersistentBase.2463"**
  store %"class.blink::PersistentBase.2463"* %205, %"class.blink::PersistentBase.2463"** %233, align 8, !noalias !31
  %234 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %229, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMExceptionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %234, align 8
  store %"class.blink::PersistentNode"* %229, %"class.blink::PersistentNode"** %207, align 8, !alias.scope !31
  br label %235

235:                                              ; preds = %201, %201, %228
  %236 = call i8* @_Znwm(i64 80) #14, !noalias !34
  %237 = bitcast i8* %236 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %237, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS8_EJNS3_10PersistentISA_EENSE_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS7_EJNS2_10PersistentIS9_EENSD_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !34
  %238 = getelementptr inbounds i8, i8* %236, i64 32
  %239 = bitcast i8* %238 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)* @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE6RejectIPS4_EEvT_ to i64), i64 0>, <2 x i64>* %239, align 8, !noalias !34
  %240 = getelementptr inbounds i8, i8* %236, i64 48
  %241 = bitcast i8* %240 to %"struct.std::__1::__tuple_impl.3094"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.3094"* %241, %"class.blink::Persistent.2458"* nonnull dereferenceable(16) %9, %"class.blink::Persistent.2462"* nonnull dereferenceable(16) %10) #13, !noalias !34
  %242 = bitcast %"class.base::OnceCallback.492"* %8 to i8**
  store i8* %236, i8** %242, align 8, !alias.scope !34
  %243 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %37, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.492"* nonnull %8) #13
  %244 = getelementptr inbounds %"class.base::OnceCallback.492", %"class.base::OnceCallback.492"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %244) #13
  %245 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %207, align 8
  %246 = icmp eq %"class.blink::PersistentNode"* %245, null
  br i1 %246, label %266, label %247

247:                                              ; preds = %235
  %248 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %249 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %248, i64 0, i32 1
  %250 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %249) #13
  %251 = icmp eq i8* %250, null
  br i1 %251, label %252, label %254, !prof !6

252:                                              ; preds = %247
  %253 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %249, i8* %253) #13
  br label %254

254:                                              ; preds = %252, %247
  %255 = phi i8* [ %253, %252 ], [ %250, %247 ]
  %256 = bitcast i8* %255 to %"class.blink::ThreadState"**
  %257 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %258, align 8
  %260 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %207, align 8
  %261 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %259, i64 0, i32 0, i32 0
  %262 = bitcast %"class.blink::PersistentRegion"* %259 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.blink::PersistentNode"* %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %260, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %265, align 8
  store %"class.blink::PersistentNode"* %260, %"class.blink::PersistentNode"** %261, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %207, align 8
  br label %266

266:                                              ; preds = %235, %254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #13
  %267 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %173, align 8
  %268 = icmp eq %"class.blink::PersistentNode"* %267, null
  br i1 %268, label %288, label %269

269:                                              ; preds = %266
  %270 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %271 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %270, i64 0, i32 1
  %272 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %271) #13
  %273 = icmp eq i8* %272, null
  br i1 %273, label %274, label %276, !prof !6

274:                                              ; preds = %269
  %275 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %271, i8* %275) #13
  br label %276

276:                                              ; preds = %274, %269
  %277 = phi i8* [ %275, %274 ], [ %272, %269 ]
  %278 = bitcast i8* %277 to %"class.blink::ThreadState"**
  %279 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %279, i64 0, i32 3, i32 0, i32 0, i32 0
  %281 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %280, align 8
  %282 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %173, align 8
  %283 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %281, i64 0, i32 0, i32 0
  %284 = bitcast %"class.blink::PersistentRegion"* %281 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.blink::PersistentNode"* %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %282, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %287, align 8
  store %"class.blink::PersistentNode"* %282, %"class.blink::PersistentNode"** %283, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %173, align 8
  br label %288

288:                                              ; preds = %266, %276
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #13
  %289 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %289, label %298, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %292 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = atomicrmw sub i32* %292, i32 1 acq_rel
  %294 = icmp eq i32 %293, 1
  br i1 %294, label %295, label %298

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %291, i64 -2
  %297 = bitcast %"class.base::RefCountedThreadSafe.484"* %296 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %297) #13
  br label %298

298:                                              ; preds = %24, %295, %290, %288, %164, %159, %157
  %299 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %17) #13
  %300 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %299, i64 0, i32 1
  %301 = bitcast %"class.blink::MojoBindingContext"* %300 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %302 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %301, align 8
  %303 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %302, i64 6
  %304 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %303, align 8
  %305 = call %"class.base::SingleThreadTaskRunner"* %304(%"class.blink::MojoBindingContext"* %300, i8 zeroext 1) #13
  %306 = bitcast %"class.base::SingleThreadTaskRunner"* %305 to %"class.base::TaskRunner"*
  %307 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %307) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 540) #13
  %308 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %308) #13
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::FontFace"*)* @_ZN5blink8FontFace12RunCallbacksEv to i64), i64 0>, <2 x i64>* %13, align 16
  %309 = bitcast %"class.blink::Persistent.2460"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %309) #13
  %310 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %15, i64 0, i32 0
  %311 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %15, i64 0, i32 0, i32 0
  store %"class.blink::FontFace"* %0, %"class.blink::FontFace"** %311, align 8, !alias.scope !41
  %312 = getelementptr inbounds %"class.blink::Persistent.2460", %"class.blink::Persistent.2460"* %15, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %312, align 8, !alias.scope !41
  %313 = ptrtoint %"class.blink::FontFace"* %0 to i64
  switch i64 %313, label %314 [
    i64 0, label %340
    i64 -1, label %340
  ]

314:                                              ; preds = %298
  %315 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !41
  %316 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %315, i64 0, i32 1
  %317 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %316) #13, !noalias !41
  %318 = icmp eq i8* %317, null
  br i1 %318, label %319, label %321, !prof !6

319:                                              ; preds = %314
  %320 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %316, i8* %320) #13
  br label %321

321:                                              ; preds = %319, %314
  %322 = phi i8* [ %320, %319 ], [ %317, %314 ]
  %323 = bitcast i8* %322 to %"class.blink::ThreadState"**
  %324 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %323, align 8, !noalias !41
  %325 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %324, i64 0, i32 3, i32 0, i32 0, i32 0
  %326 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %325, align 8, !noalias !41
  %327 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %326, i64 0, i32 0, i32 0
  %328 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %327, align 8, !noalias !41
  %329 = icmp eq %"class.blink::PersistentNode"* %328, null
  br i1 %329, label %330, label %333, !prof !6

330:                                              ; preds = %321
  %331 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %326, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %331) #13
  %332 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %327, align 8
  br label %333

333:                                              ; preds = %330, %321
  %334 = phi %"class.blink::PersistentNode"* [ %332, %330 ], [ %328, %321 ]
  %335 = bitcast %"class.blink::PersistentNode"* %334 to i64*
  %336 = load i64, i64* %335, align 8, !noalias !41
  %337 = bitcast %"class.blink::PersistentRegion"* %326 to i64*
  store i64 %336, i64* %337, align 8, !noalias !41
  %338 = bitcast %"class.blink::PersistentNode"* %334 to %"class.blink::PersistentBase.2461"**
  store %"class.blink::PersistentBase.2461"* %310, %"class.blink::PersistentBase.2461"** %338, align 8, !noalias !41
  %339 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %334, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %339, align 8
  store %"class.blink::PersistentNode"* %334, %"class.blink::PersistentNode"** %312, align 8, !alias.scope !41
  br label %340

340:                                              ; preds = %298, %298, %333
  %341 = call i8* @_Znwm(i64 64) #14, !noalias !44
  %342 = bitcast i8* %341 to %"struct.base::internal::BindState.3097"*
  call void @_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.3097"* nonnull %342, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink8FontFaceEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %14, %"class.blink::Persistent.2460"* nonnull dereferenceable(16) %15) #13, !noalias !44
  %343 = bitcast %"class.base::OnceCallback.492"* %12 to i8**
  store i8* %341, i8** %343, align 8, !alias.scope !44
  %344 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %306, %"class.base::Location"* nonnull dereferenceable(32) %11, %"class.base::OnceCallback.492"* nonnull %12) #13
  %345 = getelementptr inbounds %"class.base::OnceCallback.492", %"class.base::OnceCallback.492"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %345) #13
  %346 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %312, align 8
  %347 = icmp eq %"class.blink::PersistentNode"* %346, null
  br i1 %347, label %367, label %348

348:                                              ; preds = %340
  %349 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %350 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %349, i64 0, i32 1
  %351 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %350) #13
  %352 = icmp eq i8* %351, null
  br i1 %352, label %353, label %355, !prof !6

353:                                              ; preds = %348
  %354 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %350, i8* %354) #13
  br label %355

355:                                              ; preds = %353, %348
  %356 = phi i8* [ %354, %353 ], [ %351, %348 ]
  %357 = bitcast i8* %356 to %"class.blink::ThreadState"**
  %358 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %358, i64 0, i32 3, i32 0, i32 0, i32 0
  %360 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %359, align 8
  %361 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %312, align 8
  %362 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %360, i64 0, i32 0, i32 0
  %363 = bitcast %"class.blink::PersistentRegion"* %360 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"class.blink::PersistentNode"* %361 to i64*
  store i64 %364, i64* %365, align 8
  %366 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %361, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %366, align 8
  store %"class.blink::PersistentNode"* %361, %"class.blink::PersistentNode"** %362, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %312, align 8
  br label %367

367:                                              ; preds = %340, %355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %309) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %308) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %307) #13
  %368 = icmp eq %"class.base::SingleThreadTaskRunner"* %305, null
  br i1 %368, label %377, label %369

369:                                              ; preds = %367
  %370 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %305, i64 0, i32 0, i32 0, i32 1
  %371 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = atomicrmw sub i32* %371, i32 1 acq_rel
  %373 = icmp eq i32 %372, 1
  br i1 %373, label %374, label %377

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.base::RefCountedThreadSafe.484", %"class.base::RefCountedThreadSafe.484"* %370, i64 -2
  %376 = bitcast %"class.base::RefCountedThreadSafe.484"* %375 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %376) #13
  br label %377

377:                                              ; preds = %374, %369, %367, %20, %2
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.492"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7ResolveIPS2_EEvT_(%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*) #0 comdat align 2 {
  %3 = alloca %"class.blink::Member.10", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %4 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br i1 %11, label %14, label %12, !prof !10

12:                                               ; preds = %2
  %13 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32* [ %13, %12 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %2 ]
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.26, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 0
  %23 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %22) #13
  %24 = icmp eq %"class.blink::ExecutionContext"* %23, null
  br i1 %24, label %69, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 1
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 3
  %28 = ptrtoint %"class.blink::FontFace"* %1 to i64
  %29 = bitcast %"class.blink::Member.10"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.blink::FontFace"* %1 to i8*
  %34 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #13
  br label %35

35:                                               ; preds = %25, %32
  %36 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0
  %37 = bitcast %"class.WTF::Vector"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  store atomic i64 0, i64* %37 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  store i32 0, i32* %40, align 4
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %35
  %45 = inttoptr i64 %38 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #13
  br label %47

47:                                               ; preds = %44, %35
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.WTF::Vector"* %36 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #13
  br label %54

54:                                               ; preds = %47, %50
  %55 = inttoptr i64 %38 to %"class.blink::Member.14"*
  %56 = zext i32 %41 to i64
  %57 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %55, i64 %56
  %58 = icmp eq i32 %41, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.blink::Member.10"* %3 to i8*
  %61 = bitcast %"class.blink::Member.10"* %3 to i64*
  br label %62

62:                                               ; preds = %59, %62
  %63 = phi %"class.blink::Member.14"* [ %55, %59 ], [ %67, %62 ]
  %64 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %64, align 8
  %66 = load i64, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  store i64 %66, i64* %61, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_8FontFaceEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %65, %"class.blink::Member.10"* nonnull %3, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %67 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %63, i64 1
  %68 = icmp eq %"class.blink::Member.14"* %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %54, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE6RejectIPS4_EEvT_(%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*) #0 comdat align 2 {
  %3 = alloca %"class.blink::Member.4", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %4 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br i1 %11, label %14, label %12, !prof !10

12:                                               ; preds = %2
  %13 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32* [ %13, %12 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %2 ]
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.26, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 0
  %23 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %22) #13
  %24 = icmp eq %"class.blink::ExecutionContext"* %23, null
  br i1 %24, label %69, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 1
  store i32 2, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 4
  %28 = ptrtoint %"class.blink::DOMException"* %1 to i64
  %29 = bitcast %"class.blink::Member.4"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.blink::DOMException"* %1 to i8*
  %34 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #13
  br label %35

35:                                               ; preds = %25, %32
  %36 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0
  %37 = bitcast %"class.WTF::Vector"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  store atomic i64 0, i64* %37 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  store i32 0, i32* %40, align 4
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %35
  %45 = inttoptr i64 %38 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #13
  br label %47

47:                                               ; preds = %44, %35
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.WTF::Vector"* %36 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #13
  br label %54

54:                                               ; preds = %47, %50
  %55 = inttoptr i64 %38 to %"class.blink::Member.14"*
  %56 = zext i32 %41 to i64
  %57 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %55, i64 %56
  %58 = icmp eq i32 %41, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.blink::Member.4"* %3 to i8*
  %61 = bitcast %"class.blink::Member.4"* %3 to i64*
  br label %62

62:                                               ; preds = %59, %62
  %63 = phi %"class.blink::Member.14"* [ %55, %59 ], [ %67, %62 ]
  %64 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %64, align 8
  %66 = load i64, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  store i64 %66, i64* %61, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_12DOMExceptionEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %65, %"class.blink::Member.4"* nonnull %3, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %67 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %63, i64 1
  %68 = icmp eq %"class.blink::Member.14"* %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %54, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace12RunCallbacksEv(%"class.blink::FontFace"*) #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.318", align 8
  %3 = bitcast %"class.blink::HeapVector.318"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.318", %"class.blink::HeapVector.318"* %2, i64 0, i32 0
  %8 = bitcast %"class.blink::HeapVector.318"* %2 to i64*
  %9 = bitcast %"class.WTF::Vector.321"* %6 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 %10, i64* %8 monotonic, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 0, i32* %11, align 4
  store i32 %12, i32* %4, align 8
  %13 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 0, i32* %13, align 4
  store i32 %14, i32* %5, align 4
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = inttoptr i64 %10 to i8*
  br i1 %16, label %20, label %18

18:                                               ; preds = %1
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #13
  br label %20

20:                                               ; preds = %18, %1
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #13
  br label %25

25:                                               ; preds = %20, %23
  %26 = icmp eq i32 %14, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  br label %30

29:                                               ; preds = %45, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void

30:                                               ; preds = %27, %45
  %31 = phi i32 [ 0, %27 ], [ %46, %45 ]
  %32 = load i32, i32* %28, align 8
  %33 = icmp eq i32 %32, 2
  %34 = call dereferenceable(8) %"class.blink::Member.324"* @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.321"* nonnull %7, i32 %31) #13
  %35 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace::LoadFontCallback"** %35, align 8
  %37 = bitcast %"class.blink::FontFace::LoadFontCallback"* %36 to void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)***
  %38 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)**, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*** %37, align 8
  br i1 %33, label %39, label %42

39:                                               ; preds = %30
  %40 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %38, i64 3
  %41 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %40, align 8
  call void %41(%"class.blink::FontFace::LoadFontCallback"* %36, %"class.blink::FontFace"* %0) #13
  br label %45

42:                                               ; preds = %30
  %43 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %38, i64 4
  %44 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %43, align 8
  call void %44(%"class.blink::FontFace::LoadFontCallback"* %36, %"class.blink::FontFace"* %0) #13
  br label %45

45:                                               ; preds = %39, %42
  %46 = add nuw i32 %31, 1
  %47 = load i32, i32* %5, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %30, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace17FontStatusPromiseEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::FontFace"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 19
  %5 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %5, align 8
  %7 = icmp eq %"class.blink::ScriptPromiseProperty"* %6, null
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #13
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEEEEPhm(i64 80) #13
  %11 = bitcast i8* %10 to %"class.blink::ExecutionContextClient"*
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %11, %"class.blink::ExecutionContext"* %9) #13
  %12 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 50, i1 false) #13
  %16 = getelementptr inbounds i8, i8* %10, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = ptrtoint i8* %10 to i64
  %21 = bitcast %"class.blink::Member.6"* %4 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #13
  br label %26

26:                                               ; preds = %8, %24
  %27 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 17
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %35 [
    i32 2, label %29
    i32 3, label %31
  ]

29:                                               ; preds = %26
  %30 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %5, align 8
  tail call void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7ResolveIPS2_EEvT_(%"class.blink::ScriptPromiseProperty"* %30, %"class.blink::FontFace"* %1)
  br label %35

31:                                               ; preds = %26
  %32 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %5, align 8
  %33 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 18, i32 0, i32 0
  %34 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %33, align 8
  tail call void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE6RejectIPS4_EEvT_(%"class.blink::ScriptPromiseProperty"* %32, %"class.blink::DOMException"* %34)
  br label %35

35:                                               ; preds = %3, %26, %29, %31
  %36 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %5, align 8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 2, i32 0
  %38 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %37, align 8
  tail call void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7PromiseERNS_15DOMWrapperWorldE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromiseProperty"* %36, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %38)
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE7PromiseERNS_15DOMWrapperWorldE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Member.4", align 8
  %5 = alloca %"class.blink::Member.10", align 8
  %6 = alloca %"class.v8::HandleScope", align 8
  %7 = alloca %"class.blink::ScriptState::Scope", align 8
  %8 = alloca %"class.blink::ScriptPromiseResolver"*, align 8
  %9 = alloca %"class.blink::ScriptPromise", align 8
  %10 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 0
  %11 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %10) #13
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  br label %152

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  %17 = bitcast %"class.v8::HandleScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %10) #13
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 5
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %6, %"class.v8::Isolate"* %20) #13
  %21 = call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %10) #13
  %22 = call %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"* %21, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %2) #13
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  br label %151

26:                                               ; preds = %15
  %27 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* nonnull %22)
  %28 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 6, i32 0
  %29 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %26, %41
  %37 = phi %"class.blink::ScriptPromise"* [ %42, %41 ], [ %30, %26 ]
  %38 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %38, align 8
  %40 = icmp eq %"class.blink::ScriptState"* %39, %27
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %37, i64 1
  %43 = icmp eq %"class.blink::ScriptPromise"* %42, %34
  br i1 %43, label %45, label %36

44:                                               ; preds = %36
  call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %0, %"class.blink::ScriptPromise"* dereferenceable(32) %37) #13
  br label %151

45:                                               ; preds = %41, %26
  %46 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %27, i64 0, i32 0
  %50 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false)
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %48, %"class.v8::Isolate"* %51) #13
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.v8::Context"*, %"class.v8::Context"** %52, align 8
  %54 = icmp eq %"class.v8::Context"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %45
  %56 = bitcast %"class.blink::ScriptState"* %27 to %"class.v8::internal::Isolate"**
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %56, align 8
  %58 = bitcast %"class.v8::Context"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %57, i64 %59) #13
  %61 = bitcast i64* %60 to %"class.v8::Context"*
  br label %62

62:                                               ; preds = %45, %55
  %63 = phi %"class.v8::Context"* [ %61, %55 ], [ null, %45 ]
  store %"class.v8::Context"* %63, %"class.v8::Context"** %47, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %63) #13
  %64 = bitcast %"class.blink::ScriptPromiseResolver"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  store %"class.blink::ScriptPromiseResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::ScriptPromiseResolver"*), %"class.blink::ScriptPromiseResolver"** %8, align 8
  %65 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #13
  %66 = bitcast i8* %65 to %"class.blink::ScriptPromiseResolver"*
  call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %66, %"class.blink::ScriptState"* %27) #13
  %67 = getelementptr inbounds i8, i8* %65, i64 -4
  %68 = bitcast i8* %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = or i16 %69, 1
  store atomic i16 %70, i16* %68 release, align 2
  %71 = bitcast %"class.blink::ScriptPromiseResolver"** %8 to i8**
  store i8* %65, i8** %71, align 8
  %72 = bitcast %"class.blink::ScriptPromise"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %9, i64 0, i32 1, i32 1, i32 1, i32 0
  %74 = getelementptr inbounds i8, i8* %65, i64 48
  %75 = bitcast i8* %74 to %"class.blink::ScriptPromise::InternalResolver"*
  %76 = bitcast %"class.blink::ScriptPromise"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* nonnull sret %9, %"class.blink::ScriptPromise::InternalResolver"* %75) #13
  %77 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 8
  %78 = load i8, i8* %77, align 1, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %62
  call void @_ZN5blink13ScriptPromise13MarkAsHandledEv(%"class.blink::ScriptPromise"* nonnull %9) #13
  br label %81

81:                                               ; preds = %62, %80
  %82 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %127 [
    i32 0, label %84
    i32 1, label %108
    i32 2, label %120
  ]

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 5, i32 0
  %86 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %107, label %91, !prof !6

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %85, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %92, align 8
  %94 = zext i32 %87 to i64
  %95 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %93, i64 %94
  %96 = bitcast %"class.blink::ScriptPromiseResolver"** %8 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::Member.14"* %95 to i64*
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %91
  %102 = inttoptr i64 %97 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #13
  br label %104

104:                                              ; preds = %101, %91
  %105 = load i32, i32* %86, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %86, align 4
  br label %127

107:                                              ; preds = %84
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %85, %"class.blink::ScriptPromiseResolver"** nonnull dereferenceable(8) %8) #13
  br label %127

108:                                              ; preds = %81
  %109 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 7
  %110 = load i8, i8* %109, align 8, !range !5
  %111 = icmp eq i8 %110, 0
  %112 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %8, align 8
  br i1 %111, label %114, label %113

113:                                              ; preds = %108
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %112, i32 1) #13
  br label %127

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 3
  %116 = bitcast %"class.blink::Member.10"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::Member.10"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  %119 = bitcast %"class.blink::Member.10"* %5 to i64*
  store i64 %117, i64* %119, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_8FontFaceEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %112, %"class.blink::Member.10"* nonnull %5, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  br label %127

120:                                              ; preds = %81
  %121 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %8, align 8
  %122 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 4
  %123 = bitcast %"class.blink::Member.4"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125)
  %126 = bitcast %"class.blink::Member.4"* %4 to i64*
  store i64 %124, i64* %126, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_12DOMExceptionEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %121, %"class.blink::Member.4"* nonnull %4, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125)
  br label %127

127:                                              ; preds = %107, %104, %113, %114, %81, %120
  %128 = load i32, i32* %31, align 4
  %129 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %138, label %132, !prof !6

132:                                              ; preds = %127
  %133 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %29, align 8
  %134 = zext i32 %128 to i64
  %135 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %133, i64 %134
  call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %135, %"class.blink::ScriptPromise"* nonnull dereferenceable(32) %9) #13
  call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::ScriptPromise"* %135) #13
  %136 = load i32, i32* %31, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %31, align 4
  br label %139

138:                                              ; preds = %127
  call void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.270"* %28, %"class.blink::ScriptPromise"* nonnull dereferenceable(32) %9) #13
  br label %139

139:                                              ; preds = %132, %138
  call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %0, %"class.blink::ScriptPromise"* nonnull dereferenceable(32) %9) #13
  %140 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %73, align 8
  %141 = icmp eq %"class.blink::DOMWrapperWorld"* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %140, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %143) #13
  %144 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %140, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %142
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %140) #13
  %148 = bitcast %"class.blink::DOMWrapperWorld"* %140 to i8*
  call void @free(i8* %148) #13
  br label %149

149:                                              ; preds = %139, %142, %147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %150 = load %"class.v8::Context"*, %"class.v8::Context"** %47, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %150) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #13
  br label %151

151:                                              ; preds = %149, %44, %24
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  br label %152

152:                                              ; preds = %151, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace4loadEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::FontFace"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 20, i32 0, i32 0
  %9 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %8, align 8
  tail call void @_ZN5blink11CSSFontFace4LoadEv(%"class.blink::CSSFontFace"* %9) #13
  br label %10

10:                                               ; preds = %7, %3
  %11 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 2
  %12 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #13
  %13 = icmp eq %"class.blink::LocalDOMWindow"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #13
  %16 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %15) #13
  %17 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %16, i64 0, i32 187, i32 0, i32 0
  %18 = load %"class.blink::FontPreloadManager"*, %"class.blink::FontPreloadManager"** %17, align 8
  tail call void @_ZN5blink18FontPreloadManager28ImperativeFontLoadingStartedEPNS_8FontFaceE(%"class.blink::FontPreloadManager"* %18, %"class.blink::FontFace"* %1) #13
  br label %19

19:                                               ; preds = %10, %14
  tail call void @_ZN5blink8FontFace17FontStatusPromiseEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::FontFace"* %1, %"class.blink::ScriptState"* %2)
  ret void
}

declare void @_ZN5blink11CSSFontFace4LoadEv(%"class.blink::CSSFontFace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace22DidBeginImperativeLoadEv(%"class.blink::FontFace"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #13
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #13
  %7 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %6) #13
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 187, i32 0, i32 0
  %9 = load %"class.blink::FontPreloadManager"*, %"class.blink::FontPreloadManager"** %8, align 8
  tail call void @_ZN5blink18FontPreloadManager28ImperativeFontLoadingStartedEPNS_8FontFaceE(%"class.blink::FontPreloadManager"* %9, %"class.blink::FontFace"* %0) #13
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace16LoadWithCallbackEPNS0_16LoadFontCallbackE(%"class.blink::FontFace"*, %"class.blink::FontFace::LoadFontCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontFace::LoadFontCallback"*, align 8
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20, i32 0, i32 0
  %9 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %8, align 8
  tail call void @_ZN5blink11CSSFontFace4LoadEv(%"class.blink::CSSFontFace"* %9) #13
  %10 = load i32, i32* %4, align 8
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ %10, %7 ], [ %5, %2 ]
  %13 = bitcast %"class.blink::FontFace::LoadFontCallback"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  store %"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace::LoadFontCallback"** %3, align 8
  %14 = ptrtoint %"class.blink::FontFace::LoadFontCallback"* %1 to i64
  switch i32 %12, label %25 [
    i32 2, label %15
    i32 3, label %20
  ]

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)***
  %17 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)**, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %17, i64 3
  %19 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %18, align 8
  tail call void %19(%"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace"* %0) #13
  br label %47

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)***
  %22 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)**, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %22, i64 4
  %24 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %23, align 8
  tail call void %24(%"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace"* %0) #13
  br label %47

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0
  %27 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %46, label %32, !prof !6

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %26, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %33, align 8
  %35 = zext i32 %28 to i64
  %36 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %34, i64 %35
  %37 = bitcast %"class.blink::Member.324"* %36 to i64*
  store atomic i64 %14, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to i8*
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #13
  br label %43

43:                                               ; preds = %40, %32
  %44 = load i32, i32* %27, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %27, align 4
  br label %47

46:                                               ; preds = %25
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.321"* %26, %"class.blink::FontFace::LoadFontCallback"** nonnull dereferenceable(8) %3) #13
  br label %47

47:                                               ; preds = %15, %20, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FontFace11AddCallbackEPNS0_16LoadFontCallbackE(%"class.blink::FontFace"*, %"class.blink::FontFace::LoadFontCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontFace::LoadFontCallback"*, align 8
  store %"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace::LoadFontCallback"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  %6 = ptrtoint %"class.blink::FontFace::LoadFontCallback"* %1 to i64
  switch i32 %5, label %17 [
    i32 2, label %7
    i32 3, label %12
  ]

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)***
  %9 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)**, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %9, i64 3
  %11 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %10, align 8
  tail call void %11(%"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace"* %0) #13
  br label %39

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)***
  %14 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)**, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %14, i64 4
  %16 = load void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)*, void (%"class.blink::FontFace::LoadFontCallback"*, %"class.blink::FontFace"*)** %15, align 8
  tail call void %16(%"class.blink::FontFace::LoadFontCallback"* %1, %"class.blink::FontFace"* %0) #13
  br label %39

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0
  %19 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %38, label %24, !prof !6

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %18, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %25, align 8
  %27 = zext i32 %20 to i64
  %28 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %26, i64 %27
  %29 = bitcast %"class.blink::Member.324"* %28 to i64*
  store atomic i64 %6, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::FontFace::LoadFontCallback"* %1 to i8*
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #13
  br label %35

35:                                               ; preds = %32, %24
  %36 = load i32, i32* %19, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %19, align 4
  br label %39

38:                                               ; preds = %17
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.321"* %18, %"class.blink::FontFace::LoadFontCallback"** nonnull dereferenceable(8) %3) #13
  br label %39

39:                                               ; preds = %38, %35, %12, %7
  ret void
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsNumberEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink8FontFace30ApproximateBlankCharacterCountEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20, i32 0, i32 0
  %7 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %6, align 8
  %8 = tail call i64 @_ZNK5blink11CSSFontFace30ApproximateBlankCharacterCountEv(%"class.blink::CSSFontFace"* %7) #13
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i64 [ %8, %5 ], [ 0, %1 ]
  ret i64 %10
}

declare i64 @_ZNK5blink11CSSFontFace30ApproximateBlankCharacterCountEv(%"class.blink::CSSFontFace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ContextAllowsDownloadEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %5 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %5, i64 1
  %7 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ExecutionContext"* nonnull %0) #13
  br i1 %8, label %9, label %27

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds i32, i32* %10, i64 18
  %14 = bitcast i32* %13 to %"class.blink::LocalFrame"**
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = icmp eq %"class.blink::LocalFrame"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 0
  %19 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %18) #13
  %20 = icmp eq %"class.blink::Settings"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %19, i64 0, i32 71
  %23 = bitcast [14 x i8]* %22 to i112*
  %24 = load i112, i112* %23, align 8
  %25 = trunc i112 %24 to i32
  %26 = icmp slt i32 %25, 0
  br label %27

27:                                               ; preds = %1, %12, %21, %17, %3, %9
  %28 = phi i1 [ true, %9 ], [ true, %3 ], [ %26, %21 ], [ false, %17 ], [ false, %12 ], [ false, %1 ]
  ret i1 %28
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSFontFace"* @_ZN5blink12_GLOBAL__N_117CreateCSSFontFaceEPNS_8FontFaceEPKNS_8CSSValueE(%"class.blink::FontFace"*, %"class.blink::CSSValue"*) unnamed_addr #0 {
  %3 = alloca %"class.WTF::Vector.281", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::UnicodeRange"*
  %6 = ptrtoint %"class.blink::FontFace"* %0 to i64
  %7 = bitcast %"class.WTF::Vector.281"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #13
  %11 = icmp eq %"class.blink::CSSValue"* %1, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 6, i32 2
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %1, i64 2, i32 2
  %19 = bitcast i8* %18 to %"class.WTF::Vector.2467"*
  %20 = bitcast i64* %4 to i8*
  %21 = bitcast i64* %4 to i32*
  %22 = getelementptr inbounds %"struct.blink::UnicodeRange", %"struct.blink::UnicodeRange"* %5, i64 0, i32 1
  br label %23

23:                                               ; preds = %44, %17
  %24 = phi i32 [ 0, %17 ], [ %45, %44 ]
  %25 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"* %19, i32 %24) #13
  %26 = bitcast %"class.blink::Member"* %25 to %"class.blink::cssvalue::CSSUnicodeRangeValue"**
  %27 = load %"class.blink::cssvalue::CSSUnicodeRangeValue"*, %"class.blink::cssvalue::CSSUnicodeRangeValue"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %28 = getelementptr inbounds %"class.blink::cssvalue::CSSUnicodeRangeValue", %"class.blink::cssvalue::CSSUnicodeRangeValue"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::cssvalue::CSSUnicodeRangeValue", %"class.blink::cssvalue::CSSUnicodeRangeValue"* %27, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %29, i32* %21, align 8
  store i32 %31, i32* %22, align 4
  %32 = load i32, i32* %10, align 4
  %33 = load i32, i32* %9, align 8
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %43, label %35, !prof !6

35:                                               ; preds = %23
  %36 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %8, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"struct.blink::UnicodeRange", %"struct.blink::UnicodeRange"* %36, i64 %37
  %39 = bitcast %"struct.blink::UnicodeRange"* %38 to i64*
  %40 = load i64, i64* %4, align 8
  store i64 %40, i64* %39, align 4
  %41 = load i32, i32* %10, align 4
  %42 = add i32 %41, 1
  store i32 %42, i32* %10, align 4
  br label %44

43:                                               ; preds = %23
  call void @_ZN3WTF6VectorIN5blink12UnicodeRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.281"* nonnull %3, %"struct.blink::UnicodeRange"* nonnull dereferenceable(8) %5) #13
  br label %44

44:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %45 = add nuw i32 %24, 1
  %46 = icmp eq i32 %45, %15
  br i1 %46, label %47, label %23

47:                                               ; preds = %44, %12, %2
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11CSSFontFaceEEEPhm(i64 64) #13
  %49 = bitcast i8* %48 to %"class.blink::CSSFontFace"*
  %50 = call noalias i8* @malloc(i64 24) #13
  %51 = bitcast i8* %50 to %"class.blink::UnicodeRangeSet"*
  call void @_ZN5blink15UnicodeRangeSetC1ERKN3WTF6VectorINS_12UnicodeRangeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::UnicodeRangeSet"* %51, %"class.WTF::Vector.281"* nonnull dereferenceable(16) %3) #13
  %52 = bitcast i8* %48 to i8**
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 20, i1 false) #13
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #13
  %55 = getelementptr inbounds i8, i8* %48, i64 56
  %56 = bitcast i8* %55 to i64*
  store i64 %6, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %48, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %8, align 8
  %62 = icmp eq %"struct.blink::UnicodeRange"* %61, null
  %63 = bitcast %"struct.blink::UnicodeRange"* %61 to i8*
  br i1 %62, label %69, label %64, !prof !10

64:                                               ; preds = %47
  %65 = load i32, i32* %10, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !6

67:                                               ; preds = %64
  store i32 0, i32* %10, align 4
  br label %68

68:                                               ; preds = %67, %64
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #13
  store %"struct.blink::UnicodeRange"* null, %"struct.blink::UnicodeRange"** %8, align 8
  br label %69

69:                                               ; preds = %47, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret %"class.blink::CSSFontFace"* %49
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue17IsSupportedFormatEv(%"class.blink::CSSFontFaceSrcValue"*) local_unnamed_addr #2

declare dereferenceable(2792) %"class.blink::FontResource"* @_ZNK5blink19CSSFontFaceSrcValue5FetchEPNS_16ExecutionContextEPNS_18FontResourceClientE(%"class.blink::CSSFontFaceSrcValue"*, %"class.blink::ExecutionContext"*, %"class.blink::FontResourceClient"*) local_unnamed_addr #2

declare void @_ZN5blink11CSSFontFace9AddSourceEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSFontFaceSource"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink24BinaryDataFontFaceSource7IsValidEv(%"class.blink::BinaryDataFontFaceSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8FontFace5TraceEPNS_7VisitorE(%"class.blink::FontFace"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 6
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 7
  %28 = bitcast %"class.blink::Member"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSValue"*
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %32, i64 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %26, %31
  %39 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 8
  %40 = bitcast %"class.blink::Member"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %50

50:                                               ; preds = %38, %43
  %51 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 9
  %52 = bitcast %"class.blink::Member"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = inttoptr i64 %53 to %"class.blink::CSSValue"*
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %56, i64 0, i32 0
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %62

62:                                               ; preds = %50, %55
  %63 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 10
  %64 = bitcast %"class.blink::Member"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to %"class.blink::CSSValue"*
  %69 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %68, i64 0, i32 0
  %70 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, i64 5
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %1, i8* %69, i8* %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %74

74:                                               ; preds = %62, %67
  %75 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 11
  %76 = bitcast %"class.blink::Member"* %75 to i64*
  %77 = load atomic i64, i64* %76 monotonic, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = inttoptr i64 %77 to %"class.blink::CSSValue"*
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %80, i64 0, i32 0
  %82 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, i64 5
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %84, align 8
  tail call void %85(%"class.blink::Visitor"* %1, i8* %81, i8* %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %86

86:                                               ; preds = %74, %79
  %87 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 12
  %88 = bitcast %"class.blink::Member"* %87 to i64*
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = inttoptr i64 %89 to %"class.blink::CSSValue"*
  %93 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %92, i64 0, i32 0
  %94 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %1, i8* %93, i8* %93, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %98

98:                                               ; preds = %86, %91
  %99 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 13
  %100 = bitcast %"class.blink::Member"* %99 to i64*
  %101 = load atomic i64, i64* %100 monotonic, align 8
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %98
  %104 = inttoptr i64 %101 to %"class.blink::CSSValue"*
  %105 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %104, i64 0, i32 0
  %106 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %107 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, i64 5
  %109 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, align 8
  tail call void %109(%"class.blink::Visitor"* %1, i8* %105, i8* %105, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %110

110:                                              ; preds = %98, %103
  %111 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 14
  %112 = bitcast %"class.blink::Member"* %111 to i64*
  %113 = load atomic i64, i64* %112 monotonic, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %110
  %116 = inttoptr i64 %113 to %"class.blink::CSSValue"*
  %117 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %116, i64 0, i32 0
  %118 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %119 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %119, i64 5
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %120, align 8
  tail call void %121(%"class.blink::Visitor"* %1, i8* %117, i8* %117, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %122

122:                                              ; preds = %110, %115
  %123 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 15
  %124 = bitcast %"class.blink::Member"* %123 to i64*
  %125 = load atomic i64, i64* %124 monotonic, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %122
  %128 = inttoptr i64 %125 to %"class.blink::CSSValue"*
  %129 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %128, i64 0, i32 0
  %130 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  tail call void %133(%"class.blink::Visitor"* %1, i8* %129, i8* %129, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %134

134:                                              ; preds = %122, %127
  %135 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 16
  %136 = bitcast %"class.blink::Member"* %135 to i64*
  %137 = load atomic i64, i64* %136 monotonic, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %146, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %137 to %"class.blink::CSSValue"*
  %141 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %140, i64 0, i32 0
  %142 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %143 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %143, i64 5
  %145 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %144, align 8
  tail call void %145(%"class.blink::Visitor"* %1, i8* %141, i8* %141, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #13
  br label %146

146:                                              ; preds = %134, %139
  %147 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 18
  %148 = bitcast %"class.blink::Member.4"* %147 to i64*
  %149 = load atomic i64, i64* %148 monotonic, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = inttoptr i64 %149 to i8*
  %153 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %154, i64 5
  %156 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %155, align 8
  tail call void %156(%"class.blink::Visitor"* %1, i8* nonnull %152, i8* nonnull %152, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv) #13
  br label %157

157:                                              ; preds = %146, %151
  %158 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 19
  %159 = bitcast %"class.blink::Member.6"* %158 to i64*
  %160 = load atomic i64, i64* %159 monotonic, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = inttoptr i64 %160 to i8*
  %164 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %165 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %165, i64 5
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %166, align 8
  tail call void %167(%"class.blink::Visitor"* %1, i8* nonnull %163, i8* nonnull %163, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %168

168:                                              ; preds = %157, %162
  %169 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20
  %170 = bitcast %"class.blink::Member.274"* %169 to i64*
  %171 = load atomic i64, i64* %170 monotonic, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %168
  %174 = inttoptr i64 %171 to i8*
  %175 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %176 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %176, i64 5
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %177, align 8
  tail call void %178(%"class.blink::Visitor"* %1, i8* nonnull %174, i8* nonnull %174, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv) #13
  br label %179

179:                                              ; preds = %168, %173
  %180 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 21
  %181 = bitcast %"class.blink::HeapVector.318"* %180 to i64*
  %182 = load atomic i64, i64* %181 monotonic, align 8
  %183 = icmp eq i64 %182, 0
  %184 = bitcast %"class.blink::HeapVector.318"* %180 to i8**
  %185 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %186 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %186, i64 11
  %188 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %187, align 8
  tail call void %188(%"class.blink::Visitor"* %1, i8** %184) #13
  br i1 %183, label %195, label %189

189:                                              ; preds = %179
  %190 = inttoptr i64 %182 to i8*
  %191 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %192 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %192, i64 5
  %194 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %193, align 8
  tail call void %194(%"class.blink::Visitor"* %1, i8* nonnull %190, i8* nonnull %190, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %195

195:                                              ; preds = %179, %189
  %196 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %196, %"class.blink::Visitor"* %1) #13
  %197 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %197, %"class.blink::Visitor"* %1) #13
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink8FontFace5TraceEPNS_7VisitorE(%"class.blink::FontFace"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 -1, i32 21
  %4 = bitcast %"class.blink::HeapVector.318"* %3 to %"class.blink::FontFace"*
  tail call void @_ZNK5blink8FontFace5TraceEPNS_7VisitorE(%"class.blink::FontFace"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_NK5blink8FontFace5TraceEPNS_7VisitorE(%"class.blink::FontFace"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 -1, i32 20
  %4 = bitcast %"class.blink::Member.274"* %3 to %"class.blink::FontFace"*
  tail call void @_ZNK5blink8FontFace5TraceEPNS_7VisitorE(%"class.blink::FontFace"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8FontFace12HadBlankTextEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %3, i64 0, i32 2, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %3, i64 0, i32 2, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.299"*, %"class.blink::Member.299"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"class.blink::Member.299", %"class.blink::Member.299"* %11, i64 %12, i32 0, i32 0
  %14 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %13, align 8
  %15 = bitcast %"class.blink::CSSFontFaceSource"* %14 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %16 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %16, i64 14
  %18 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::CSSFontFaceSource"* %14) #13
  br label %20

20:                                               ; preds = %1, %9
  %21 = phi i1 [ false, %1 ], [ %19, %9 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8FontFace18HasPendingActivityEv(%"class.blink::FontFace"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 2
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %6) #13
  %8 = icmp ne %"class.blink::ExecutionContext"* %7, null
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink8FontFace14GetFontDisplayEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %4 = tail call i32 @_ZN5blink21CSSValueToFontDisplayEPKNS_8CSSValueE(%"class.blink::CSSValue"* %3) #13
  ret i32 %4
}

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

declare void @_ZN5blink18FontPreloadManager28ImperativeFontLoadingStartedEPNS_8FontFaceE(%"class.blink::FontPreloadManager"*, %"class.blink::FontFace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8FontFace22GetFontMetricsOverrideEv(%"struct.blink::FontMetricsOverride"* noalias nocapture sret, %"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } } }, { { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } }, { { { { i8, [3 x i8], %union.anon.2836 } } } } }* @__const._ZNK5blink8FontFace22GetFontMetricsOverrideEv.result, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 24, i1 false)
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %6, align 8
  %8 = icmp eq %"class.blink::CSSValue"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSValue"* %7 to %"class.blink::CSSPrimitiveValue"*
  %11 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %10) #13
  %12 = fcmp ult double %11, 0x47EFFFFFE0000000
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = fcmp ole double %11, 0xC7EFFFFFE0000000
  %15 = select i1 %14, double 0xC7EFFFFFE0000000, double %11
  %16 = fptrunc double %15 to float
  br label %17

17:                                               ; preds = %9, %13
  %18 = phi float [ %16, %13 ], [ 0x47EFFFFFE0000000, %9 ]
  %19 = fdiv float %18, 1.000000e+02
  %20 = bitcast float %19 to i32
  %21 = bitcast %"struct.blink::FontMetricsOverride"* %0 to i64*
  %22 = zext i32 %20 to i64
  %23 = shl nuw i64 %22, 32
  %24 = or i64 %23, 1
  store i64 %24, i64* %21, align 4
  br label %25

25:                                               ; preds = %2, %17
  %26 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 13, i32 0, i32 0
  %27 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %26, align 8
  %28 = icmp eq %"class.blink::CSSValue"* %27, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::CSSValue"* %27 to %"class.blink::CSSPrimitiveValue"*
  %31 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %30) #13
  %32 = fcmp ult double %31, 0x47EFFFFFE0000000
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = fcmp ole double %31, 0xC7EFFFFFE0000000
  %35 = select i1 %34, double 0xC7EFFFFFE0000000, double %31
  %36 = fptrunc double %35 to float
  br label %37

37:                                               ; preds = %29, %33
  %38 = phi float [ %36, %33 ], [ 0x47EFFFFFE0000000, %29 ]
  %39 = fdiv float %38, 1.000000e+02
  %40 = bitcast float %39 to i32
  %41 = bitcast i8* %4 to i64*
  %42 = zext i32 %40 to i64
  %43 = shl nuw i64 %42, 32
  %44 = or i64 %43, 1
  store i64 %44, i64* %41, align 4
  br label %45

45:                                               ; preds = %25, %37
  %46 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 14, i32 0, i32 0
  %47 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %46, align 8
  %48 = icmp eq %"class.blink::CSSValue"* %47, null
  br i1 %48, label %65, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::CSSValue"* %47 to %"class.blink::CSSPrimitiveValue"*
  %51 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %50) #13
  %52 = fcmp ult double %51, 0x47EFFFFFE0000000
  br i1 %52, label %53, label %57

53:                                               ; preds = %49
  %54 = fcmp ole double %51, 0xC7EFFFFFE0000000
  %55 = select i1 %54, double 0xC7EFFFFFE0000000, double %51
  %56 = fptrunc double %55 to float
  br label %57

57:                                               ; preds = %49, %53
  %58 = phi float [ %56, %53 ], [ 0x47EFFFFFE0000000, %49 ]
  %59 = fdiv float %58, 1.000000e+02
  %60 = bitcast float %59 to i32
  %61 = bitcast i8* %5 to i64*
  %62 = zext i32 %60 to i64
  %63 = shl nuw i64 %62, 32
  %64 = or i64 %63, 1
  store i64 %64, i64* %61, align 4
  br label %65

65:                                               ; preds = %45, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink8FontFace13GetSizeAdjustEv(%"class.blink::FontFace"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %0, i64 0, i32 16, i32 0, i32 0
  %3 = bitcast %"class.blink::CSSValue"** %2 to %"class.blink::CSSPrimitiveValue"**
  %4 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %3, align 8
  %5 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* %4) #13
  %6 = fcmp ult double %5, 0x47EFFFFFE0000000
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = fcmp ole double %5, 0xC7EFFFFFE0000000
  %9 = select i1 %8, double 0xC7EFFFFFE0000000, double %5
  %10 = fptrunc double %9 to float
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi float [ %10, %7 ], [ 0x47EFFFFFE0000000, %1 ]
  %13 = fdiv float %12, 1.000000e+02
  ret float %13
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8FontFace18GetWrapperTypeInfoEv(%"class.blink::FontFace"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8FontFace18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContextClient"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %3) #13
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #13
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8FontFaceEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 17
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %8 = bitcast %"class.blink::ActiveScriptWrappable"* %7 to %"class.blink::ExecutionContextClient"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %8) #13
  %10 = icmp ne %"class.blink::ExecutionContext"* %9, null
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i1 [ false, %1 ], [ %10, %6 ]
  ret i1 %12
}

declare %"class.blink::CSSValue"* @_ZN5blink22AtRuleDescriptorParser23ParseFontFaceDescriptorENS_18AtRuleDescriptorIDERKN3WTF6StringERKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !6

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #13
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #13
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink16CSSParserContextC1ERKNS_16ExecutionContextE(%"class.blink::CSSParserContext"*, %"class.blink::ExecutionContext"* dereferenceable(376)) unnamed_addr #2

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_8FontFaceEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2467"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2467", %"class.WTF::Vector.2467"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2467", %"class.WTF::Vector.2467"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12UnicodeRangeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.281"*, %"struct.blink::UnicodeRange"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %6, align 8
  %8 = icmp ugt %"struct.blink::UnicodeRange"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::UnicodeRange", %"struct.blink::UnicodeRange"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::UnicodeRange"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !10

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::UnicodeRange"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12UnicodeRangeEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12UnicodeRangeEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.281"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::UnicodeRange"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::UnicodeRange"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::UnicodeRange"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !10

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.281"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.281"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::UnicodeRange"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::UnicodeRange"* %1 to i64
  %56 = ptrtoint %"struct.blink::UnicodeRange"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.281", %"class.WTF::Vector.281"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !10

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::UnicodeRange"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12UnicodeRangeEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12UnicodeRangeEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.281"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::UnicodeRange"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::UnicodeRange"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !10

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.281"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.281"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::UnicodeRange"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::UnicodeRange"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::UnicodeRange", %"struct.blink::UnicodeRange"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::UnicodeRange"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::UnicodeRange"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::UnicodeRange", %"struct.blink::UnicodeRange"* %100, i64 %103
  %105 = bitcast %"struct.blink::UnicodeRange"* %101 to i64*
  %106 = bitcast %"struct.blink::UnicodeRange"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12UnicodeRangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.22, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11CSSFontFaceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11CSSFontFaceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11CSSFontFaceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFace"*
  tail call void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11CSSFontFaceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::UnicodeRangeSet"**
  %3 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %2, align 8
  %4 = icmp eq %"class.blink::UnicodeRangeSet"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.280", %"class.base::RefCounted.280"* %6, i64 2
  %13 = bitcast %"class.base::RefCounted.280"* %12 to %"struct.blink::UnicodeRange"**
  %14 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %13, align 8
  %15 = icmp eq %"struct.blink::UnicodeRange"* %14, null
  %16 = bitcast %"struct.blink::UnicodeRange"* %14 to i8*
  br i1 %15, label %23, label %17, !prof !10

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCounted.280", %"class.base::RefCounted.280"* %6, i64 5, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !6

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  br label %23

23:                                               ; preds = %22, %11
  %24 = bitcast %"class.blink::UnicodeRangeSet"* %3 to i8*
  tail call void @free(i8* %24) #13
  br label %25

25:                                               ; preds = %1, %5, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11CSSFontFaceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink15UnicodeRangeSetC1ERKN3WTF6VectorINS_12UnicodeRangeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::UnicodeRangeSet"*, %"class.WTF::Vector.281"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #13
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* %1)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #13
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  %45 = getelementptr inbounds i8, i8* %5, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3051"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3051", %"class.WTF::StringTypeAdapter.3051"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3051"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %4, i8* %14) #13
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.580"* %9) #13
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.580"* %9) #13
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3052", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3051"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3051"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.3051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3051", %"class.WTF::StringTypeAdapter.3051"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %3, i8* %14) #13
  %15 = bitcast %"class.WTF::StringTypeAdapter.3052"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3052"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3051"* nonnull %3, i8* %1) #13
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3053"* nonnull %34, i8* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.580"* %6) #13
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3051"* nonnull %5, i8* %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3052", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3051"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3051"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %5, i8* %10) #13
  %11 = bitcast %"class.WTF::StringTypeAdapter.3051"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3051", %"class.WTF::StringTypeAdapter.3051"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %3, i8* %14) #13
  %15 = bitcast %"class.WTF::StringTypeAdapter.3052"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3052"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3051"* nonnull %3, i16* %1) #13
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3052", %"class.WTF::StringTypeAdapter.3052"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3053"* nonnull %34, i16* %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.580"* %6) #13
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3051"* nonnull %5, i16* %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.580"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3051", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3051"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3051", %"class.WTF::StringTypeAdapter.3051"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.580", %"class.WTF::StringAppend.580"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3051"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3051"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend.580", %"class.WTF::StringAppend.580"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3051"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3053"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3051"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3053"*, i16*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ScriptPromiseProperty"**
  %5 = load %"class.blink::ScriptPromiseProperty"*, %"class.blink::ScriptPromiseProperty"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::ScriptPromiseProperty"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ScriptPromiseProperty"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseProperty"*
  tail call void @_ZNK5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE5TraceEPNS_7VisitorE(%"class.blink::ScriptPromiseProperty"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS1_INS_12DOMExceptionEEEE5TraceEPNS_7VisitorE(%"class.blink::ScriptPromiseProperty"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.10"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.4"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::HeapVector"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  %29 = bitcast %"class.blink::HeapVector"* %25 to i8**
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %31 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, i64 11
  %33 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8** %29) #13
  br i1 %28, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %24, %34
  %41 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 6
  %42 = bitcast %"class.blink::HeapVector.267"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  %45 = bitcast %"class.blink::HeapVector.267"* %41 to i8**
  %46 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %46, i64 11
  %48 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %1, i8** %45) #13
  br i1 %44, label %55, label %49

49:                                               ; preds = %40
  %50 = inttoptr i64 %43 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %55

55:                                               ; preds = %40, %49
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseProperty", %"class.blink::ScriptPromiseProperty"* %0, i64 0, i32 0
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %56, %"class.blink::Visitor"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontFace"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontFace"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontFace"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.14"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.14"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptPromise"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !6

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 5
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %73, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %30, i64 %56
  %58 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %30, i64 %56, i32 1, i32 1, i32 0
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*** %53, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)** %59, i64 7
  %61 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8) %58) #13
  %62 = bitcast %"class.blink::ScriptPromise"* %57 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %63 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #13
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp eq i64 %71, %50
  br i1 %72, label %73, label %55

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::FontFace"**
  %5 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::FontFace"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::FontFace"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FontFaceEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS6_EJNS3_10PersistentISA_EENSE_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ScriptPromiseProperty"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)**
  %21 = load void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)*, void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::FontFace"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::FontFace"**
  %28 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %27, align 8
  tail call void %25(%"class.blink::ScriptPromiseProperty"* %12, %"class.blink::FontFace"* %28) #13
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS5_EJNS2_10PersistentIS9_EENSD_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !6

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #13
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !6

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #13
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS7_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.blink::Persistent.2458"* dereferenceable(16), %"class.blink::Persistent.2460"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.2458"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !6

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #13
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !6

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #13
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.2459"**
  store %"class.blink::PersistentBase.2459"* %4, %"class.blink::PersistentBase.2459"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.3082", %"class.std::__1::__tuple_leaf.3082"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Persistent.2460"* %2 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::__tuple_leaf.3082"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  switch i64 %39, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #13
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !6

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #13
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !6

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #13
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.2461"**
  store %"class.blink::PersistentBase.2461"* %37, %"class.blink::PersistentBase.2461"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %41, align 8
  br label %68

68:                                               ; preds = %35, %35, %61
  ret void
}

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_8FontFaceEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::Member.10"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %136

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %136, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %136, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %136, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %136

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #13
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #13
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #13
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %1, i64 0, i32 0, i32 0
  %58 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %58, i64 0, i32 0
  %60 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %61 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.v8::Context"*, %"class.v8::Context"** %61, align 8
  %63 = icmp eq %"class.v8::Context"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %47
  %65 = bitcast %"class.blink::ScriptState"* %60 to %"class.v8::internal::Isolate"**
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = bitcast %"class.v8::Context"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %68) #13
  %70 = bitcast i64* %69 to %"class.v8::Context"*
  br label %71

71:                                               ; preds = %47, %64
  %72 = phi %"class.v8::Context"* [ %70, %64 ], [ null, %47 ]
  %73 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %72) #13
  %74 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %75 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %75, align 8
  %77 = icmp eq %"class.blink::FontFace"* %58, null
  br i1 %77, label %78, label %81, !prof !6

78:                                               ; preds = %71
  %79 = ptrtoint %"class.v8::Isolate"* %76 to i64
  %80 = add i64 %79, 176
  br label %97

81:                                               ; preds = %71
  %82 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %59, %"class.v8::Isolate"* %76) #13
  %83 = ptrtoint %"class.v8::Object"* %82 to i64
  %84 = icmp eq %"class.v8::Object"* %82, null
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %73) #13
  %87 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %86) #13
  %88 = bitcast %"class.blink::FontFace"* %58 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %89, i64 7
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %90, align 8
  %92 = call %"class.v8::Value"* %91(%"class.blink::ScriptWrappable"* nonnull %59, %"class.blink::ScriptState"* %87) #13
  %93 = icmp eq %"class.v8::Value"* %92, null
  br i1 %93, label %94, label %95, !prof !6

94:                                               ; preds = %85
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %95

95:                                               ; preds = %94, %85
  %96 = ptrtoint %"class.v8::Value"* %92 to i64
  br label %97

97:                                               ; preds = %78, %81, %95
  %98 = phi i64 [ %80, %78 ], [ %96, %95 ], [ %83, %81 ]
  %99 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.259", %"class.blink::TraceWrapperV8Reference.259"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %100) #13
  %103 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %56 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  br label %104

104:                                              ; preds = %102, %97
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %98 to i64*
  %108 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %109 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %56 to i64*
  %110 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %108, i64* nonnull %107, i64* %109, i1 zeroext false) #13
  %111 = ptrtoint i64* %110 to i64
  store atomic i64 %111, i64* %109 monotonic, align 8
  br label %112

112:                                              ; preds = %104, %106
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8) %56) #13
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %113 = icmp eq i32* %49, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  store i32 %50, i32* %49, align 4
  br label %115

115:                                              ; preds = %112, %114
  %116 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %117 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %116) #13
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

119:                                              ; preds = %115
  %120 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  %121 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %122 = ptrtoint i64* %4 to i64
  %123 = sub i64 %121, %122
  %124 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %125 = icmp ult i64 %123, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  br i1 %125, label %128, label %126, !prof !10

126:                                              ; preds = %119
  %127 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  br label %128

128:                                              ; preds = %119, %126
  %129 = phi i32* [ %127, %126 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %119 ]
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

133:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

134:                                              ; preds = %133, %132, %118
  %135 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %135) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  br label %136

136:                                              ; preds = %24, %16, %10, %20, %3, %134
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #13
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #13
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #13
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #13
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.32"* %47, %"class.blink::ScriptWrappable"* %0) #13
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #13
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.32"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.32", %"class.WTF::HashTable.32"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.32", %"class.WTF::HashTable.32"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMExceptionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DOMException"**
  %5 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::DOMException"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DOMException"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS8_EJNS3_10PersistentISA_EENSE_IS8_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ScriptPromiseProperty"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)**
  %21 = load void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)*, void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ScriptPromiseProperty"*, %"class.blink::DOMException"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::DOMException"**
  %28 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %27, align 8
  tail call void %25(%"class.blink::ScriptPromiseProperty"* %12, %"class.blink::DOMException"* %28) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21ScriptPromisePropertyINS2_6MemberINS2_8FontFaceEEENS4_INS2_12DOMExceptionEEEEEFvPS7_EJNS2_10PersistentIS9_EENSD_IS7_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl.3094"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEED2Ev(%"struct.std::__1::__tuple_impl.3094"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEED2Ev(%"struct.std::__1::__tuple_impl.3094"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !6

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #13
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !6

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #13
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS6_INS3_12DOMExceptionEEEEEEENS4_IS9_EEEEC2IJLm0ELm1EEJSC_SD_EJEJEJSC_SD_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSH_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.3094"*, %"class.blink::Persistent.2458"* dereferenceable(16), %"class.blink::Persistent.2462"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.2458"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl.3094"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !6

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #13
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !6

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #13
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.2459"**
  store %"class.blink::PersistentBase.2459"* %4, %"class.blink::PersistentBase.2459"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSB_15TracePersistentEPNS_7VisitorEEEE10TrampolineESD_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.3095", %"class.std::__1::__tuple_leaf.3095"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Persistent.2462"* %2 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::__tuple_leaf.3095"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__tuple_impl.3094", %"struct.std::__1::__tuple_impl.3094"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  switch i64 %39, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #13
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !6

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #13
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !6

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #13
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.2463"**
  store %"class.blink::PersistentBase.2463"* %37, %"class.blink::PersistentBase.2463"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12DOMExceptionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %41, align 8
  br label %68

68:                                               ; preds = %35, %35, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_12DOMExceptionEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::Member.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %136

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %136, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %136, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %136, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %136

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #13
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #13
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #13
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::Member.4", %"class.blink::Member.4"* %1, i64 0, i32 0, i32 0
  %58 = load %"class.blink::DOMException"*, %"class.blink::DOMException"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %58, i64 0, i32 0
  %60 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %61 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.v8::Context"*, %"class.v8::Context"** %61, align 8
  %63 = icmp eq %"class.v8::Context"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %47
  %65 = bitcast %"class.blink::ScriptState"* %60 to %"class.v8::internal::Isolate"**
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = bitcast %"class.v8::Context"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %68) #13
  %70 = bitcast i64* %69 to %"class.v8::Context"*
  br label %71

71:                                               ; preds = %47, %64
  %72 = phi %"class.v8::Context"* [ %70, %64 ], [ null, %47 ]
  %73 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %72) #13
  %74 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %75 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %75, align 8
  %77 = icmp eq %"class.blink::DOMException"* %58, null
  br i1 %77, label %78, label %81, !prof !6

78:                                               ; preds = %71
  %79 = ptrtoint %"class.v8::Isolate"* %76 to i64
  %80 = add i64 %79, 176
  br label %97

81:                                               ; preds = %71
  %82 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %59, %"class.v8::Isolate"* %76) #13
  %83 = ptrtoint %"class.v8::Object"* %82 to i64
  %84 = icmp eq %"class.v8::Object"* %82, null
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %73) #13
  %87 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %86) #13
  %88 = bitcast %"class.blink::DOMException"* %58 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %89, i64 7
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %90, align 8
  %92 = call %"class.v8::Value"* %91(%"class.blink::ScriptWrappable"* nonnull %59, %"class.blink::ScriptState"* %87) #13
  %93 = icmp eq %"class.v8::Value"* %92, null
  br i1 %93, label %94, label %95, !prof !6

94:                                               ; preds = %85
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %95

95:                                               ; preds = %94, %85
  %96 = ptrtoint %"class.v8::Value"* %92 to i64
  br label %97

97:                                               ; preds = %78, %81, %95
  %98 = phi i64 [ %80, %78 ], [ %96, %95 ], [ %83, %81 ]
  %99 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.259", %"class.blink::TraceWrapperV8Reference.259"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %100) #13
  %103 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %56 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  br label %104

104:                                              ; preds = %102, %97
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %98 to i64*
  %108 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %109 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %56 to i64*
  %110 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %108, i64* nonnull %107, i64* %109, i1 zeroext false) #13
  %111 = ptrtoint i64* %110 to i64
  store atomic i64 %111, i64* %109 monotonic, align 8
  br label %112

112:                                              ; preds = %104, %106
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8) %56) #13
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  %113 = icmp eq i32* %49, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  store i32 %50, i32* %49, align 4
  br label %115

115:                                              ; preds = %112, %114
  %116 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #13
  %117 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %116) #13
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

119:                                              ; preds = %115
  %120 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  %121 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %122 = ptrtoint i64* %4 to i64
  %123 = sub i64 %121, %122
  %124 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %125 = icmp ult i64 %123, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  br i1 %125, label %128, label %126, !prof !10

126:                                              ; preds = %119
  %127 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  br label %128

128:                                              ; preds = %119, %126
  %129 = phi i32* [ %127, %126 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %119 ]
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

133:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %134

134:                                              ; preds = %133, %132, %118
  %135 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %135) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  br label %136

136:                                              ; preds = %24, %16, %10, %20, %3, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink8FontFaceEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::FontFace"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::FontFace"*)**
  %21 = load void (%"class.blink::FontFace"*)*, void (%"class.blink::FontFace"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::FontFace"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::FontFace"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::FontFace"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.3097"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2460"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.3097", %"struct.base::internal::BindState.3097"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.3097", %"struct.base::internal::BindState.3097"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.3097", %"struct.base::internal::BindState.3097"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple.3098", %"class.std::__1::tuple.3098"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.2460"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple.3098"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.3097", %"struct.base::internal::BindState.3097"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !6

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !6

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #13
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2461"**
  store %"class.blink::PersistentBase.2461"* %11, %"class.blink::PersistentBase.2461"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_8FontFaceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink8FontFaceEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !6

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.324"* @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %24, i64 %25
  ret %"class.blink::Member.324"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEEEEPS1_DpOT_(i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #13
  %5 = bitcast i8* %4 to %"class.blink::DOMException"*
  %6 = load i32, i32* %0, align 4
  %7 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %5, i32 %6, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #13
  br label %26

26:                                               ; preds = %1, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #13
  br label %42

42:                                               ; preds = %26, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %43 = getelementptr inbounds i8, i8* %4, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  ret %"class.blink::DOMException"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS3_INS_12DOMExceptionEEEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare %"class.v8::Context"* @_ZN5blink11ToV8ContextEPNS_16ExecutionContextERNS_15DOMWrapperWorldE(%"class.blink::ExecutionContext"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink13ScriptPromise13MarkAsHandledEv(%"class.blink::ScriptPromise"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptPromiseResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptPromiseResolver"*)***
  %4 = load void (%"class.blink::ScriptPromiseResolver"*)**, void (%"class.blink::ScriptPromiseResolver"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise::InternalResolver"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::ScriptPromiseResolver"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.14", %"class.blink::Member.14"* %16, i64 %18
  %20 = bitcast %"class.blink::ScriptPromiseResolver"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.14"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %8, align 8
  %10 = icmp eq %"class.blink::Member.14"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21ScriptPromiseResolverEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %8, align 8
  %26 = icmp eq %"class.blink::Member.14"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.14"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21ScriptPromiseResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21ScriptPromiseResolverEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.14"*, %"class.blink::Member.14"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.14"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.14"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21ScriptPromiseResolverEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.31, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.33, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21ScriptPromiseResolverEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21ScriptPromiseResolverEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %111

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %111, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %16, align 8
  %18 = icmp eq %"class.blink::V8PerContextData"* %17, null
  br i1 %18, label %111, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %21 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #13
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %111, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #13
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 13
  %26 = load i8, i8* %25, align 4, !range !5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %111

28:                                               ; preds = %23
  store i32 %1, i32* %6, align 8
  %29 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %31 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %33 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %33, %"class.v8::Isolate"* %35) #13
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::ScriptState"* %32 to %"class.v8::internal::Isolate"**
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = bitcast %"class.v8::Context"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %43) #13
  %45 = bitcast i64* %44 to %"class.v8::Context"*
  br label %46

46:                                               ; preds = %28, %39
  %47 = phi %"class.v8::Context"* [ %45, %39 ], [ null, %28 ]
  store %"class.v8::Context"* %47, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %47) #13
  %48 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  %49 = load i32, i32* %48, align 4
  store i32 0, i32* %48, align 4
  %50 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %51 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %50, i64 0, i32 0
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %53 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %54 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %52, i32 1) #13
  %55 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %56 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %57 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.v8::Context"*, %"class.v8::Context"** %57, align 8
  %59 = icmp eq %"class.v8::Context"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %46
  %61 = bitcast %"class.blink::ScriptState"* %56 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = bitcast %"class.v8::Context"* %58 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %62, i64 %64) #13
  %66 = bitcast i64* %65 to %"class.v8::Context"*
  br label %67

67:                                               ; preds = %46, %60
  %68 = phi %"class.v8::Context"* [ %66, %60 ], [ null, %46 ]
  %69 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %68) #13
  %70 = bitcast %"class.blink::ScriptState"** %10 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.259", %"class.blink::TraceWrapperV8Reference.259"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %75) #13
  %78 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %55 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %77, %67
  %80 = icmp eq i64 %73, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %73 to i64*
  %83 = bitcast %"class.v8::Isolate"* %52 to %"class.v8::internal::Isolate"*
  %84 = bitcast %"class.blink::TraceWrapperV8Reference.259"* %55 to i64*
  %85 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %83, i64* nonnull %82, i64* %84, i1 zeroext false) #13
  %86 = ptrtoint i64* %85 to i64
  store atomic i64 %86, i64* %84 monotonic, align 8
  br label %87

87:                                               ; preds = %79, %81
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8) %55) #13
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  %88 = icmp eq i32* %48, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  store i32 %49, i32* %48, align 4
  br label %90

90:                                               ; preds = %87, %89
  %91 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #13
  %92 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %91) #13
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %109

94:                                               ; preds = %90
  %95 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  %96 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %97 = ptrtoint i64* %3 to i64
  %98 = sub i64 %96, %97
  %99 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %100 = icmp ult i64 %98, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  br i1 %100, label %103, label %101, !prof !10

101:                                              ; preds = %94
  %102 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #13
  br label %103

103:                                              ; preds = %94, %101
  %104 = phi i32* [ %102, %101 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %94 ]
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %109

108:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #13
  br label %109

109:                                              ; preds = %108, %107, %93
  %110 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %110) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #13
  br label %111

111:                                              ; preds = %23, %15, %9, %19, %2, %109
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.270"*, %"class.blink::ScriptPromise"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %6, align 8
  %8 = icmp ugt %"class.blink::ScriptPromise"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %7, i64 %10
  %12 = icmp ugt %"class.blink::ScriptPromise"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.270"* %0, i32 %22) #13
  %23 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::ScriptPromise"* %1 to i64
  %26 = ptrtoint %"class.blink::ScriptPromise"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 5
  %29 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.270"* %0, i32 %37) #13
  %38 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::ScriptPromise"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::ScriptPromise"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %41, i64 %44
  tail call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %45, %"class.blink::ScriptPromise"* dereferenceable(32) %42) #13
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::ScriptPromise"* %45) #13
  %46 = load i32, i32* %3, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::ScriptPromise"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %42, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !6

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %0, i64 0, i32 1, i32 1, i32 0
  %26 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)***
  %27 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)** %27, i64 7
  %29 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.259"*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %24, %"class.blink::TraceWrapperV8Reference.259"* dereferenceable(8) %25) #13
  %30 = bitcast %"class.blink::ScriptPromise"* %0 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %18
  %34 = inttoptr i64 %31 to i8*
  %35 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %24, i8* nonnull %34, i8* %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #13
  br label %39

39:                                               ; preds = %18, %33
  %40 = load i64, i64* %19, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %19, align 8
  br label %42

42:                                               ; preds = %1, %11, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.270"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptPromise"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13ScriptPromiseEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 5
  %15 = tail call %"class.blink::HeapVectorBacking.3073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3073"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3073", %"class.blink::HeapVectorBacking.3073"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %8, align 8
  %26 = icmp eq %"class.blink::ScriptPromise"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::ScriptPromise"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 5
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.270"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13ScriptPromiseELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.270"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %34

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %4, %27
  %15 = phi %"class.blink::ScriptPromise"* [ %29, %27 ], [ %6, %4 ]
  %16 = phi %"class.blink::ScriptPromise"* [ %28, %27 ], [ null, %4 ]
  tail call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %16, %"class.blink::ScriptPromise"* dereferenceable(32) %15) #13
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEvPT_(%"class.blink::ScriptPromise"* %16) #13
  %17 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %15, i64 0, i32 1, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #13
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %18) #13
  %26 = bitcast %"class.blink::DOMWrapperWorld"* %18 to i8*
  tail call void @free(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %20, %14
  %28 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %16, i64 1
  %29 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %15, i64 1
  %30 = icmp eq %"class.blink::ScriptPromise"* %29, %10
  br i1 %30, label %31, label %14

31:                                               ; preds = %27, %4
  %32 = bitcast %"class.blink::ScriptPromise"* %6 to i8*
  %33 = shl nuw nsw i64 %9, 5
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %32, i64 %33) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %32) #13
  br label %88

34:                                               ; preds = %2
  %35 = zext i32 %1 to i64
  %36 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13ScriptPromiseEEEmm(i64 %35) #13
  %37 = lshr i64 %36, 5
  %38 = tail call %"class.blink::HeapVectorBacking.3073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %37) #13
  %39 = ptrtoint %"class.blink::HeapVectorBacking.3073"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %41, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %34
  %48 = bitcast %"class.blink::ScriptPromise"* %41 to i8*
  %49 = bitcast %"class.WTF::Vector.270"* %0 to i8**
  br label %75

50:                                               ; preds = %34
  %51 = bitcast %"class.blink::HeapVectorBacking.3073"* %38 to %"class.blink::ScriptPromise"*
  br label %52

52:                                               ; preds = %50, %65
  %53 = phi %"class.blink::ScriptPromise"* [ %67, %65 ], [ %41, %50 ]
  %54 = phi %"class.blink::ScriptPromise"* [ %66, %65 ], [ %51, %50 ]
  tail call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %54, %"class.blink::ScriptPromise"* dereferenceable(32) %53) #13
  %55 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %53, i64 0, i32 1, i32 1, i32 1, i32 0
  %56 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %55, align 8
  %57 = icmp eq %"class.blink::DOMWrapperWorld"* %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %56, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #13
  %60 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %56) #13
  %64 = bitcast %"class.blink::DOMWrapperWorld"* %56 to i8*
  tail call void @free(i8* %64) #13
  br label %65

65:                                               ; preds = %63, %58, %52
  %66 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %54, i64 1
  %67 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %53, i64 1
  %68 = icmp eq %"class.blink::ScriptPromise"* %67, %45
  br i1 %68, label %69, label %52

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::Vector.270"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %42, align 4
  %73 = zext i32 %72 to i64
  %74 = shl nuw nsw i64 %73, 5
  br label %75

75:                                               ; preds = %47, %69
  %76 = phi i8** [ %49, %47 ], [ %70, %69 ]
  %77 = phi i64 [ 0, %47 ], [ %74, %69 ]
  %78 = phi i8* [ %48, %47 ], [ %71, %69 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %78, i64 %77) #13
  %79 = load i8*, i8** %76, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %79) #13
  %80 = bitcast %"class.WTF::Vector.270"* %0 to i64*
  store atomic i64 %39, i64* %80 monotonic, align 8
  %81 = trunc i64 %37 to i32
  %82 = getelementptr inbounds %"class.WTF::Vector.270", %"class.WTF::Vector.270"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %81, i32* %82, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"class.blink::HeapVectorBacking.3073", %"class.blink::HeapVectorBacking.3073"* %38, i64 0, i32 0
  %87 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %86) #13
  br label %88

88:                                               ; preds = %85, %75, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13ScriptPromiseEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 4194304
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 4194304) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.31, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3073"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.33, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.3073"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.3073"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13ScriptPromiseENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !6

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 5
  %22 = bitcast i8* %0 to %"class.blink::ScriptPromise"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %41, label %24

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %22, i64 %25, i32 1, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #13
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #13
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13ScriptPromiseEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.321"*, %"class.blink::FontFace::LoadFontCallback"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.321"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %16, i64 %18
  %20 = bitcast %"class.blink::FontFace::LoadFontCallback"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.324"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %8, align 8
  %10 = icmp eq %"class.blink::Member.324"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFace16LoadFontCallbackEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.3122"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3122"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.321"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3122", %"class.blink::HeapVectorBacking.3122"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %8, align 8
  %26 = icmp eq %"class.blink::Member.324"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.324"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.321"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8FontFace16LoadFontCallbackEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.321"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.321"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFace16LoadFontCallbackEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3122"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3122"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.324"*, %"class.blink::Member.324"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.3122"* %17, null
  %23 = icmp ne %"class.blink::Member.324"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.324"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.321"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.3122", %"class.blink::HeapVectorBacking.3122"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.321"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.321"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.321", %"class.WTF::Vector.321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.3122", %"class.blink::HeapVectorBacking.3122"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8FontFace16LoadFontCallbackEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.31, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3122"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.33, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.3122"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.3122"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8FontFace16LoadFontCallbackEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.324"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.324", %"class.blink::Member.324"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.324"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #13, !range !51
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #13
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8FontFace16LoadFontCallbackEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

declare void @_ZN5blink20RemoteFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorENS_11FontDisplayE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17CSSFontFaceSourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17CSSFontFaceSourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17CSSFontFaceSourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CSSFontFaceSourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFaceSource"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)** %5, i64 16
  %7 = load void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontFaceSource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSFontFaceSource"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17CSSFontFaceSourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSFontFaceSource"*
  %3 = bitcast i8* %0 to void (%"class.blink::CSSFontFaceSource"*)***
  %4 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %3, align 8
  %5 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %4, align 8
  tail call void %5(%"class.blink::CSSFontFaceSource"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17CSSFontFaceSourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink19LocalFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorERKN3WTF6StringE(%"class.blink::LocalFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF12SharedBufferC1EPKhj(%"class.WTF::SharedBuffer"*, i8*, i32) unnamed_addr #2

declare void @_ZN5blink24BinaryDataFontFaceSourceC1EPNS_11CSSFontFaceEPN3WTF12SharedBufferERNS3_6StringE(%"class.blink::BinaryDataFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.WTF::SharedBuffer"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_(i32* dereferenceable(4), [34 x i8]* dereferenceable(34)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #13
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds [34 x i8], [34 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [34 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #15
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #13
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink43V8UnionArrayBufferOrArrayBufferViewOrString20GetAsArrayBufferViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink43V8UnionArrayBufferOrArrayBufferViewOrString20GetAsArrayBufferViewEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!"branch_weights", i32 1, i32 1048575}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEEENS_10PersistentIT_EEPS9_: argument 0"}
!17 = distinct !{!17, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEEENS_10PersistentIT_EEPS9_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink22WrapPersistentInternalINS_8FontFaceEEENS_10PersistentIT_EEPS3_: argument 0"}
!20 = distinct !{!20, !"_ZN5blink22WrapPersistentInternalINS_8FontFaceEEENS_10PersistentIT_EEPS3_"}
!21 = !{!22, !24, !26}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS6_EJNS3_10PersistentISA_EENSE_IS6_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS6_EJNS3_10PersistentISA_EENSE_IS6_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS4_EJNS1_10PersistentIS8_EENSC_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS4_EJNS1_10PersistentIS8_EENSC_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!26 = distinct !{!26, !27, !"_ZN3WTF4BindIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS4_EJNS1_10PersistentIS8_EENSC_IS4_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF4BindIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS4_EJNS1_10PersistentIS8_EENSC_IS4_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEEENS_10PersistentIT_EEPS9_: argument 0"}
!30 = distinct !{!30, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromisePropertyINS_6MemberINS_8FontFaceEEENS2_INS_12DOMExceptionEEEEEEENS_10PersistentIT_EEPS9_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN5blink22WrapPersistentInternalINS_12DOMExceptionEEENS_10PersistentIT_EEPS3_: argument 0"}
!33 = distinct !{!33, !"_ZN5blink22WrapPersistentInternalINS_12DOMExceptionEEENS_10PersistentIT_EEPS3_"}
!34 = !{!35, !37, !39}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS8_EJNS3_10PersistentISA_EENSE_IS8_EEEEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21ScriptPromisePropertyINS3_6MemberINS3_8FontFaceEEENS5_INS3_12DOMExceptionEEEEEFvPS8_EJNS3_10PersistentISA_EENSE_IS8_EEEEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base8BindOnceIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS6_EJNS1_10PersistentIS8_EENSC_IS6_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8BindOnceIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS6_EJNS1_10PersistentIS8_EENSC_IS6_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!39 = distinct !{!39, !40, !"_ZN3WTF4BindIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS6_EJNS1_10PersistentIS8_EENSC_IS6_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF4BindIMN5blink21ScriptPromisePropertyINS1_6MemberINS1_8FontFaceEEENS3_INS1_12DOMExceptionEEEEEFvPS6_EJNS1_10PersistentIS8_EENSC_IS6_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN5blink22WrapPersistentInternalINS_8FontFaceEEENS_10PersistentIT_EEPS3_: argument 0"}
!43 = distinct !{!43, !"_ZN5blink22WrapPersistentInternalINS_8FontFaceEEENS_10PersistentIT_EEPS3_"}
!44 = !{!45, !47, !49}
!45 = distinct !{!45, !46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink8FontFaceEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink8FontFaceEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!47 = distinct !{!47, !48, !"_ZN4base8BindOnceIMN5blink8FontFaceEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8BindOnceIMN5blink8FontFaceEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!49 = distinct !{!49, !50, !"_ZN3WTF4BindIMN5blink8FontFaceEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF4BindIMN5blink8FontFaceEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!51 = !{i32 24, i32 33}
