; ModuleID = '../../third_party/blink/renderer/core/css/invalidation/style_invalidator.cc'
source_filename = "../../third_party/blink/renderer/core/css/invalidation/style_invalidator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.50", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.50" = type { %"class.base::RefCounted.51" }
%"class.base::RefCounted.51" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::StyleInvalidator" = type <{ %"class.blink::HeapHashMap"*, %"class.WTF::Vector.19", %"class.WTF::Vector.24", %"class.blink::InvalidationFlags", [7 x i8] }>
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21", [128 x i8] }
%"class.WTF::VectorBufferBase.21" = type { %"class.blink::InvalidationSet"**, i32, i32 }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.14", %"union.blink::InvalidationSet::Backing.15", %"union.blink::InvalidationSet::Backing.16", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.14" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.15" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.16" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.blink::NthSiblingInvalidationSet"**, i32, i32 }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.27, %class.scoped_refptr.27 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.14", %"union.blink::InvalidationSet::Backing.15", %"union.blink::InvalidationSet::Backing.16", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.27 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::Member", %"class.blink::NodeInvalidationSets" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.30", %"class.blink::Member.4", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::Member.74", %"class.blink::Member.76", %"class.blink::Member.78", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.83", %"class.blink::HeapVector.85" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.129", %"class.WTF::Vector.129", i8, i32, %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.153", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.159", %"class.blink::Member.161", %"class.blink::Member.91", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.164", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.47", %"class.blink::Member.374", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::UserActionElementSet", %"class.blink::Member.383", double, double, i64, i64, %"class.blink::HeapHashSet.385", %"class.blink::HeapHashSet.392", i16, i8, %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::TextLinkColors", %"class.blink::Member.407", i8, [7 x i8], %"class.blink::HeapHashMap.409", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.47", %"class.WTF::Vector.416", %"class.blink::Member.421", %"class.blink::Member.423", i8, %"class.blink::Member.47", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.425", %"class.blink::HeapVector.427", %"class.std::__1::unique_ptr.435", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.441", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.454", %"class.WTF::Vector.456", i8, i8, %"class.std::__1::unique_ptr.461", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.467", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.475", i8, i32, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.483", %"class.WTF::HashMap.485", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.30", %"class.blink::Member.30", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.498", i8, i32, %"class.blink::Member.505", %"class.blink::Member.507", i32, %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::Member.513", %"class.std::__1::unique_ptr.515", i64, %"class.std::__1::unique_ptr.521", i32, i32, %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.538", %"class.WTF::Vector.540", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.545", %"class.blink::Member.552", %"class.std::__1::unique_ptr.554", %"class.blink::Member.560", i8, i8, %"class.WTF::String", %"class.blink::Member.562", i8, [7 x i8], %"class.blink::HeapHashMap.564", %"class.blink::HeapObserverSet", %"class.blink::Member.578", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.580", i32, i8, i8, %"class.blink::WeakMember.582", %"class.blink::Member.583" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.122" }
%"class.blink::HeapHashMap.122" = type { %"class.WTF::HashMap.125" }
%"class.WTF::HashMap.125" = type { %"class.WTF::HashTable.126" }
%"class.WTF::HashTable.126" = type <{ %"struct.WTF::KeyValuePair.128"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.128" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.133" }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i32 }
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.601", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.642", i32, i8, [3 x i8], %"class.blink::HeapVector.644", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.663", %"class.blink::Member.669", %"class.blink::Member.671", i8, [7 x i8] }>
%"class.blink::Supplementable.601" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.602" }
%"class.blink::HeapHashMap.602" = type { %"class.WTF::HashMap.605" }
%"class.WTF::HashMap.605" = type { %"class.WTF::HashTable.606" }
%"class.WTF::HashTable.606" = type <{ %"struct.WTF::KeyValuePair.608"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.608" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.617" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.609" }
%"class.blink::HeapObserverSet.609" = type { i32, [4 x i8], %"class.blink::HeapHashSet.610" }
%"class.blink::HeapHashSet.610" = type { %"class.WTF::HashSet.613" }
%"class.WTF::HashSet.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ %"class.blink::WeakMember.616"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.616" = type opaque
%"class.blink::Supplementable.617" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.618" }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.624" = type { i8*, %"class.blink::Member.1149" }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1151" }
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.625, %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.632", %"class.blink::Member.142", i32, [4 x i8], %"class.WTF::HashSet.638", i32, i32 }
%class.scoped_refptr.625 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.656", i32, i32 }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.93", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.95, %"class.WTF::Vector.96", %"class.WTF::Vector.96", %"class.blink::Member.2", %"class.blink::Member.101", %"class.blink::HeapHashSet", %"class.blink::Member.30", %"class.WTF::HashSet", %"class.WTF::TextPosition", %"class.blink::Member.110", %"class.blink::HeapVector.112", %"class.blink::Member.119" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.95 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.103" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.107" }
%"class.WTF::HashSet.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.112" = type { %"class.WTF::Vector.115" }
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"class.blink::Member.101"*, i32, i32 }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.163 }
%class.scoped_refptr.163 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.167 }
%class.scoped_refptr.167 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.168", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.168" = type { %"class.base::RefCounted.169" }
%"class.base::RefCounted.169" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.172" }
%"class.blink::HeapHashMap.172" = type { %"class.WTF::HashMap.175" }
%"class.WTF::HashMap.175" = type { %"class.WTF::HashTable.176" }
%"class.WTF::HashTable.176" = type <{ %"struct.WTF::KeyValuePair.178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.178" = type { %"class.blink::WeakMember.179", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.181", i32, [4 x i8], %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.317", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.358", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.297", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i64 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.217" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.277", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.291", [4 x i8] }>
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279", %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { i64 }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { float }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.300", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.309" }
%"class.WTF::Vector.309" = type { %"class.WTF::VectorBuffer.310" }
%"class.WTF::VectorBuffer.310" = type { %"class.WTF::VectorBufferBase.311" }
%"class.WTF::VectorBufferBase.311" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.339" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.242"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.249"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.358" = type { %"struct.std::__1::__atomic_base.359" }
%"struct.std::__1::__atomic_base.359" = type { %"struct.std::__1::__cxx_atomic_impl.360" }
%"struct.std::__1::__cxx_atomic_impl.360" = type { %"struct.std::__1::__cxx_atomic_base_impl.361" }
%"struct.std::__1::__cxx_atomic_base_impl.361" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.376" }
%"class.blink::HeapHashMap.376" = type { %"class.WTF::HashMap.379" }
%"class.WTF::HashMap.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"struct.WTF::KeyValuePair.382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.382" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.385" = type { %"class.WTF::HashSet.388" }
%"class.WTF::HashSet.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"class.blink::WeakMember.391"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.391" = type opaque
%"class.blink::HeapHashSet.392" = type { %"class.WTF::HashSet.395" }
%"class.WTF::HashSet.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"class.blink::WeakMember.398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.398" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.85" }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.409" = type { %"class.WTF::HashMap.412" }
%"class.WTF::HashMap.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"struct.WTF::KeyValuePair.415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.415" = type opaque
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.52" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.56", %"class.blink::Member.58", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.56" = type { %"class.WTF::SingleThreadedBitField.57" }
%"class.WTF::SingleThreadedBitField.57" = type { i32 }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.60 }
%class.scoped_refptr.60 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.61", %"class.WTF::AtomicString", %"class.WTF::Vector.63" }
%"class.WTF::RefCounted.61" = type { %"class.base::RefCounted.62" }
%"class.base::RefCounted.62" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65", [32 x i8] }
%"class.WTF::VectorBufferBase.65" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.427" = type { %"class.WTF::Vector.430" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::Member.433"*, i32, i32 }
%"class.blink::Member.433" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.441" = type { %"class.WTF::HashSet.444" }
%"class.WTF::HashSet.444" = type { %"class.WTF::HashTable.445" }
%"class.WTF::HashTable.445" = type <{ %"class.blink::WeakMember.447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.447" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.448", i32, [4 x i8] }>
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"struct.std::__1::pair.451"*, i32, i32 }
%"struct.std::__1::pair.451" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.70" }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.blink::Member.47"*, i32, i32 }
%"class.blink::HeapVector.467" = type { %"class.WTF::Vector.470" }
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::Member.473"*, i32, i32 }
%"class.blink::Member.473" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.30" }
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.373", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.364, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.364 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.365" }>
%"class.base::RefCountedThreadSafe.365" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.366 }
%class.scoped_refptr.366 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.367", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.368" }
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i8 }
%"class.blink::WeakMember.373" = type { %"class.blink::MemberBase.31" }
%"class.blink::HeapHashSet.498" = type { %"class.WTF::HashSet.501" }
%"class.WTF::HashSet.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"class.blink::Member.504"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.504" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, [4 x i8], %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", %"class.WTF::HashMap.524", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.528" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.545" = type { %"class.WTF::HashMap.548" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.564" = type { %"class.WTF::HashMap.567" }
%"class.WTF::HashMap.567" = type { %"class.WTF::HashTable.568" }
%"class.WTF::HashTable.568" = type <{ %"struct.WTF::KeyValuePair.570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.570" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.571" }
%"class.blink::HeapHashSet.571" = type { %"class.WTF::HashSet.574" }
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"class.blink::WeakMember.577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.577" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.30", %"class.blink::HeapHashSet.587", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.594", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.587" = type { %"class.WTF::HashSet.590" }
%"class.WTF::HashSet.590" = type { %"class.WTF::HashTable.591" }
%"class.WTF::HashTable.591" = type <{ %"class.blink::Member.593"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.593" = type opaque
%"class.blink::HeapTaskRunnerTimer.594" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.595", { i64, i64 } }
%"class.blink::WeakMember.595" = type { %"class.blink::MemberBase.581" }
%"class.blink::WeakMember.582" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.36" }
%"class.blink::HeapHashMap.36" = type { %"class.WTF::HashMap.39" }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type { %"class.WTF::AtomicString", %"class.blink::Member.43" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.47", i32, %"class.blink::HeapVector" }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.80" }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapHashMap.82"* }
%"class.blink::HeapHashMap.82" = type opaque
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.91"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::InvalidationSet"* }
%"class.blink::StyleInvalidator::SiblingData" = type <{ %"class.WTF::Vector.673", i32, [4 x i8] }>
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675", [256 x i8] }
%"class.WTF::VectorBufferBase.675" = type { %"struct.blink::StyleInvalidator::SiblingData::Entry"*, i32, i32 }
%"struct.blink::StyleInvalidator::SiblingData::Entry" = type <{ %"class.blink::SiblingInvalidationSet"*, i32, [4 x i8] }>
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1196" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1183", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.1183" = type { %"class.std::__1::__vector_base.1184" }
%"class.std::__1::__vector_base.1184" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1185", i64, i64 }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%class.anon.1182 = type { %"class.blink::Element"* }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.685", %"class.blink::HeapVector.685", i8, %"class.blink::HeapLinkedHashSet" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::HeapVector.685" = type { %"class.WTF::Vector.688" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"class.blink::Member.2"*, i32, i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.694", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.698", i32, i32 }
%"class.WTF::Vector.698" = type { %"class.WTF::VectorBuffer.699" }
%"class.WTF::VectorBuffer.699" = type { %"class.WTF::VectorBufferBase.700" }
%"class.WTF::VectorBufferBase.700" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1208", %"class.blink::Member.1363", %"class.blink::Member.1365", %"class.blink::Member.1384", %"class.blink::Member.1386" }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1175 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1175, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1211" }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1214", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1220", %"class.std::__1::unique_ptr.1343", i8, %"class.absl::optional.1349", %class.scoped_refptr.1325, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1354" }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1223, %class.scoped_refptr.1223, %class.scoped_refptr.1223, %class.scoped_refptr.1223, %class.scoped_refptr.1223, %class.scoped_refptr.1223, %class.scoped_refptr.1258, %class.scoped_refptr.1274, %class.scoped_refptr.1275, %class.scoped_refptr.1275, %class.scoped_refptr.1275, %class.scoped_refptr.1275, %class.scoped_refptr.1275, %class.scoped_refptr.1275, %class.scoped_refptr.1315, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1316, %class.scoped_refptr.1339 }
%class.scoped_refptr.1223 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1240" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1224", i8, i8, %class.scoped_refptr.1226, i32, i32 }
%"class.WTF::RefCounted.1224" = type { %"class.base::RefCounted.1225" }
%"class.base::RefCounted.1225" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1226 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1233, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1234", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1227" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1233 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1259", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1259" = type { %"class.WTF::RefCounted.1260", i8, i8, %class.scoped_refptr.1233, i32, i32 }
%"class.WTF::RefCounted.1260" = type { %"class.base::RefCounted.1261" }
%"class.base::RefCounted.1261" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1262" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1262" = type { %"class.absl::optional_internal::optional_data.1263" }
%"class.absl::optional_internal::optional_data.1263" = type { %"class.absl::optional_internal::optional_data_base.1264" }
%"class.absl::optional_internal::optional_data_base.1264" = type { %"class.absl::optional_internal::optional_data_dtor_base.1265" }
%"class.absl::optional_internal::optional_data_dtor_base.1265" = type { i8, %union.anon.1266 }
%union.anon.1266 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1267", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1267" = type { %"class.std::__1::__vector_base.1268" }
%"class.std::__1::__vector_base.1268" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1269" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1234" = type { %"class.std::__1::__compressed_pair.1235" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1240" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1243", %"class.std::__1::unique_ptr.1249", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1258 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1274 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1275 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1276" }
%"class.blink::PaintPropertyNode.1276" = type { %"class.WTF::RefCounted.1277", i8, i8, %class.scoped_refptr.1279, i32, i32 }
%"class.WTF::RefCounted.1277" = type { %"class.base::RefCounted.1278" }
%"class.base::RefCounted.1278" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1279 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1226, %class.scoped_refptr.1280, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1302", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1280 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1317" }
%"class.blink::PaintPropertyNode.1317" = type { %"class.WTF::RefCounted.1318", i8, i8, %class.scoped_refptr.1280, i32, i32 }
%"class.WTF::RefCounted.1318" = type { %"class.base::RefCounted.1319" }
%"class.base::RefCounted.1319" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1281" }
%"class.std::__1::vector.1281" = type { %"class.std::__1::__vector_base.1282" }
%"class.std::__1::__vector_base.1282" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1297" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1283, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1290", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1283 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1284, i32, %"class.absl::optional.1285", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.133" }>
%class.sk_sp.1284 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1290" = type { %"class.std::__1::__vector_base.1291" }
%"class.std::__1::__vector_base.1291" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1292" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1308" }
%"class.std::__1::vector.1308" = type { %"class.std::__1::__vector_base.1309" }
%"class.std::__1::__vector_base.1309" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { i32* }
%class.scoped_refptr.1315 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1316 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1328" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1226, %"class.absl::optional.1320", %class.scoped_refptr.1325, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1320" = type { %"class.absl::optional_internal::optional_data.1321" }
%"class.absl::optional_internal::optional_data.1321" = type { %"class.absl::optional_internal::optional_data_base.1322" }
%"class.absl::optional_internal::optional_data_base.1322" = type { %"class.absl::optional_internal::optional_data_dtor_base.1323" }
%"class.absl::optional_internal::optional_data_dtor_base.1323" = type { i8, [3 x i8], %union.anon.1324 }
%union.anon.1324 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1331", i32, [4 x i8] }>
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1339 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1226, %class.scoped_refptr.1280, %class.scoped_refptr.1279 }
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, %union.anon.1353 }
%union.anon.1353 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1325 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1326", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1068, i32, %"struct.std::__1::atomic.368", %"struct.std::__1::atomic.368", i8, i8 }>
%class.sk_sp.1068 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1069, %class.SkTDArray.1070, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.133" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1069 = type { i8*, i32, i32 }
%class.SkTDArray.1070 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1071 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.133", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.368" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1071 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.358", [3 x i8] }
%"class.WTF::RefCounted.1326" = type { %"class.base::RefCounted.1327" }
%"class.base::RefCounted.1327" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1175 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1130", %"class.std::__1::unique_ptr.1132" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.762", %"class.blink::DataRef.842", %"class.blink::DataRef.846", %"class.blink::DataRef.1046", %"class.blink::DataRef.1113", %"class.blink::DataRef.1117", %"class.blink::DataRef.1121", %"class.blink::DataRef.1125", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.703", %"class.blink::DataRef.705", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.703" = type { %"class.base::RefCounted.704" }
%"class.base::RefCounted.704" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.705" = type { %class.scoped_refptr.706 }
%class.scoped_refptr.706 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.707", %"class.blink::Font" }
%"class.WTF::RefCounted.707" = type { %"class.base::RefCounted.708" }
%"class.base::RefCounted.708" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.735 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.710, %class.scoped_refptr.718, %class.scoped_refptr.728, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.734 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.709 }
%class.scoped_refptr.709 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1147", [4 x i8] }>
%"class.WTF::RefCounted.1147" = type { %"class.base::RefCounted.1148" }
%"class.base::RefCounted.1148" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.710 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.716", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.711" }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713" }
%"class.WTF::VectorBufferBase.713" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.718 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.719", %"class.WTF::RefCounted.726", [4 x i8] }>
%"class.blink::FontSettings.719" = type { %"class.WTF::Vector.720" }
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.blink::FontTagValuePair.723"*, i32, i32 }
%"class.blink::FontTagValuePair.723" = type { i32, float }
%"class.WTF::RefCounted.726" = type { %"class.base::RefCounted.727" }
%"class.base::RefCounted.727" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.728 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.729", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.731, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.731 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.732", [4 x i8] }>
%"class.WTF::RefCounted.732" = type { %"class.base::RefCounted.733" }
%"class.base::RefCounted.733" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.734 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.735 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.736", %"class.WTF::Vector.738", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.736" = type { %"class.base::RefCounted.737" }
%"class.base::RefCounted.737" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.739" }
%"class.WTF::VectorBuffer.739" = type { %"class.WTF::VectorBufferBase.740", [8 x i8] }
%"class.WTF::VectorBufferBase.740" = type { %class.scoped_refptr.741*, i32, i32 }
%class.scoped_refptr.741 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.742", [4 x i8] }>
%"class.WTF::RefCounted.742" = type { %"class.base::RefCounted.743" }
%"class.base::RefCounted.743" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.748", %class.scoped_refptr.755, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.742" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.746 }
%union.anon.746 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.747, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.133" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.747 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.751, %class.scoped_refptr.751 }
%class.scoped_refptr.751 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.755 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.756", [4 x i8] }>
%"class.WTF::RefCounted.756" = type { %"class.base::RefCounted.757" }
%"class.base::RefCounted.757" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.758" }
%"class.blink::PersistentBase.758" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.759" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.759" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.760 }
%class.scoped_refptr.760 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.761, i8, i8, i8, i8 }>
%union.anon.761 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.762" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.764", [4 x i8], %"class.blink::DataRef.766", %"class.blink::DataRef.807", %"class.WTF::Vector.811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.815, %class.scoped_refptr.824, %"class.blink::Persistent.832", %"class.blink::Persistent.834", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.764" = type { %"class.base::RefCounted.765" }
%"class.base::RefCounted.765" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.766" = type { %class.scoped_refptr.767 }
%class.scoped_refptr.767 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.768", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.770, %class.scoped_refptr.777, %"class.blink::Persistent.794", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.768" = type { %"class.base::RefCounted.769" }
%"class.base::RefCounted.769" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.770 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.771", %"class.WTF::Vector.772" }
%"class.base::RefCountedThreadSafe.771" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.772" = type { %"class.WTF::VectorBuffer.773" }
%"class.WTF::VectorBuffer.773" = type { %"class.WTF::VectorBufferBase.774" }
%"class.WTF::VectorBufferBase.774" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.777 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.778", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.778" = type { %"class.base::RefCounted.779" }
%"class.base::RefCounted.779" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.780", %"class.blink::Persistent.785" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.784" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1163 }
%class.scoped_refptr.1163 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1164", %"class.WTF::Vector.1029", %"class.WTF::Vector.1166", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1164" = type { %"class.base::RefCounted.1165" }
%"class.base::RefCounted.1165" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1029" = type { %"class.WTF::VectorBuffer.1030" }
%"class.WTF::VectorBuffer.1030" = type { %"class.WTF::VectorBufferBase.1031" }
%"class.WTF::VectorBufferBase.1031" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1166" = type { %"class.WTF::VectorBuffer.1167" }
%"class.WTF::VectorBuffer.1167" = type { %"class.WTF::VectorBufferBase.1168" }
%"class.WTF::VectorBufferBase.1168" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1169 }
%union.anon.1169 = type { double }
%"class.blink::Persistent.785" = type { %"class.blink::PersistentBase.786" }
%"class.blink::PersistentBase.786" = type { %"class.blink::HeapHashMap.787"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.787" = type { %"class.WTF::HashMap.790" }
%"class.WTF::HashMap.790" = type { %"class.WTF::HashTable.791" }
%"class.WTF::HashTable.791" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type opaque
%"class.blink::Persistent.794" = type { %"class.blink::PersistentBase.795" }
%"class.blink::PersistentBase.795" = type { %"class.blink::HeapVector.796"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.796" = type { %"class.WTF::Vector.799" }
%"class.WTF::Vector.799" = type { %"class.WTF::VectorBuffer.800" }
%"class.WTF::VectorBuffer.800" = type { %"class.WTF::VectorBufferBase.801" }
%"class.WTF::VectorBufferBase.801" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.802", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.807" = type { %class.scoped_refptr.808 }
%class.scoped_refptr.808 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.809", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.811" = type { %"class.WTF::VectorBuffer.812" }
%"class.WTF::VectorBuffer.812" = type { %"class.WTF::VectorBufferBase.65" }
%class.scoped_refptr.815 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.816", %"class.WTF::Vector.818" }
%"class.WTF::RefCounted.816" = type { %"class.base::RefCounted.817" }
%"class.base::RefCounted.817" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.818" = type { %"class.WTF::VectorBuffer.819" }
%"class.WTF::VectorBuffer.819" = type { %"class.WTF::VectorBufferBase.820" }
%"class.WTF::VectorBufferBase.820" = type { %"struct.std::__1::pair.821"*, i32, i32 }
%"struct.std::__1::pair.821" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.824 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.825", [4 x i8], %"class.WTF::Vector.827" }
%"class.WTF::RefCounted.825" = type { %"class.base::RefCounted.826" }
%"class.base::RefCounted.826" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.827" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.829", [28 x i8] }>
%"class.WTF::VectorBufferBase.829" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.832" = type { %"class.blink::PersistentBase.833" }
%"class.blink::PersistentBase.833" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.834" = type { %"class.blink::PersistentBase.835" }
%"class.blink::PersistentBase.835" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.838", %"class.blink::Member.840" }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.842" = type { %class.scoped_refptr.843 }
%class.scoped_refptr.843 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.844", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.844" = type { %"class.base::RefCounted.845" }
%"class.base::RefCounted.845" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.846" = type { %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.848", [4 x i8], %"class.blink::DataRef.850", %"class.blink::DataRef.916", %"class.blink::TransformOperations", %class.scoped_refptr.824, %"class.blink::Persistent.1040", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.850" = type { %class.scoped_refptr.851 }
%class.scoped_refptr.851 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.852", [4 x i8], %"class.blink::DataRef.854", %"class.blink::Persistent.892", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.854" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.856", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.874, %class.scoped_refptr.877, %class.scoped_refptr.880, %class.scoped_refptr.883, %class.scoped_refptr.884, %class.scoped_refptr.885, %"class.blink::Persistent.892", %"class.blink::Persistent.907", %"class.absl::optional.911", %"class.absl::optional.911", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.858", %"class.std::__1::unique_ptr.863" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.866", %"class.WTF::Vector.858", i32, i32 }
%"class.WTF::Vector.866" = type { %"class.WTF::VectorBuffer.867" }
%"class.WTF::VectorBuffer.867" = type { %"class.WTF::VectorBufferBase.868" }
%"class.WTF::VectorBufferBase.868" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.874 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.875", [4 x i8] }>
%"class.WTF::RefCounted.875" = type { %"class.base::RefCounted.876" }
%"class.base::RefCounted.876" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.877 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.878", [4 x i8] }>
%"class.WTF::RefCounted.878" = type { %"class.base::RefCounted.879" }
%"class.base::RefCounted.879" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.880 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.881" }>
%"class.WTF::RefCounted.881" = type { %"class.base::RefCounted.882" }
%"class.base::RefCounted.882" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.883 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.884 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.885 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.886", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.886" = type { %"class.base::RefCounted.887" }
%"class.base::RefCounted.887" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.888" }
%"class.blink::DataRef.888" = type { %class.scoped_refptr.889 }
%class.scoped_refptr.889 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.832", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.890" }
%"class.WTF::RefCounted.890" = type { %"class.base::RefCounted.891" }
%"class.base::RefCounted.891" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.907" = type { %"class.blink::PersistentBase.908" }
%"class.blink::PersistentBase.908" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.877, %"class.blink::Member.802", i32, [4 x i8] }>
%"class.absl::optional.911" = type { %"class.absl::optional_internal::optional_data.912" }
%"class.absl::optional_internal::optional_data.912" = type { %"class.absl::optional_internal::optional_data_base.913" }
%"class.absl::optional_internal::optional_data_base.913" = type { %"class.absl::optional_internal::optional_data_dtor_base.914" }
%"class.absl::optional_internal::optional_data_dtor_base.914" = type { i8, [3 x i8], %union.anon.915 }
%union.anon.915 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.892" = type { %"class.blink::PersistentBase.893" }
%"class.blink::PersistentBase.893" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.896" }
%"class.blink::HeapVector.896" = type { %"class.WTF::Vector.899" }
%"class.WTF::Vector.899" = type { %"class.WTF::VectorBuffer.900" }
%"class.WTF::VectorBuffer.900" = type { %"class.WTF::VectorBufferBase.901" }
%"class.WTF::VectorBufferBase.901" = type { %"class.blink::Member.902"*, i32, i32 }
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.916" = type { %class.scoped_refptr.917 }
%class.scoped_refptr.917 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.918", %"class.blink::DataRef.920", %"class.blink::DataRef.924", %"class.blink::DataRef.933", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.952", %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.1001", %"class.std::__1::unique_ptr.1012", %"class.std::__1::unique_ptr.1023", %"class.WTF::Vector.1029", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.918" = type { %"class.base::RefCounted.919" }
%"class.base::RefCounted.919" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.920" = type { %class.scoped_refptr.921 }
%class.scoped_refptr.921 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.922", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.922" = type { %"class.base::RefCounted.923" }
%"class.base::RefCounted.923" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.924" = type { %class.scoped_refptr.925 }
%class.scoped_refptr.925 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.926", [4 x i8], %"class.WTF::Vector.928", i8, [7 x i8] }>
%"class.WTF::RefCounted.926" = type { %"class.base::RefCounted.927" }
%"class.base::RefCounted.927" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { i32*, i32, i32 }
%"class.blink::DataRef.933" = type { %class.scoped_refptr.934 }
%class.scoped_refptr.934 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.935", [4 x i8], %"class.WTF::HashMap.937", %"class.WTF::HashMap.937", %"class.WTF::HashMap.937", %"class.WTF::HashMap.937", %"class.WTF::HashMap.937", %"class.WTF::HashMap.937", %"class.WTF::HashMap.942", %"class.WTF::HashMap.942", %"class.WTF::HashMap.942", %"class.WTF::HashMap.942", %"class.WTF::HashMap.947", %"class.WTF::Vector.858", %"class.WTF::Vector.858", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"struct.WTF::KeyValuePair.941"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.941" = type { %"class.WTF::String", %"class.WTF::Vector.1153" }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { i64*, i32, i32 }
%"class.WTF::HashMap.942" = type { %"class.WTF::HashTable.943" }
%"class.WTF::HashTable.943" = type <{ %"struct.WTF::KeyValuePair.946"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.946" = type { i64, %"class.WTF::Vector.1029" }
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.951" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1158", %"class.absl::optional.1158", %"class.absl::optional.1158" }
%"class.absl::optional.1158" = type { %"class.absl::optional_internal::optional_data.1159" }
%"class.absl::optional_internal::optional_data.1159" = type { %"class.absl::optional_internal::optional_data_base.1160" }
%"class.absl::optional_internal::optional_data_base.1160" = type { %"class.absl::optional_internal::optional_data_dtor_base.1161" }
%"class.absl::optional_internal::optional_data_dtor_base.1161" = type { i8, %union.anon.1162 }
%union.anon.1162 = type { i32 }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.811", %"class.WTF::Vector.978", %"class.WTF::Vector.966", %"class.WTF::Vector.983", %"class.WTF::Vector.988", %"class.WTF::Vector.993" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.966", %"class.WTF::Vector.966", %"class.WTF::Vector.971" }
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase.973" }
%"class.WTF::VectorBufferBase.973" = type { %class.scoped_refptr.974*, i32, i32 }
%class.scoped_refptr.974 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.975" }
%"class.base::RefCountedThreadSafe.975" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { double*, i32, i32 }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { i32*, i32, i32 }
%"class.WTF::Vector.988" = type { %"class.WTF::VectorBuffer.989" }
%"class.WTF::VectorBuffer.989" = type { %"class.WTF::VectorBufferBase.990" }
%"class.WTF::VectorBufferBase.990" = type { i32*, i32, i32 }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1004" }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1015" }
%"class.WTF::Vector.1015" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { %"class.blink::Persistent.832"*, i32, i32 }
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.832", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1034" }
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %class.scoped_refptr.1037*, i32, i32 }
%class.scoped_refptr.1037 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.881", [4 x i8] }>
%"class.blink::Persistent.1040" = type { %"class.blink::PersistentBase.1041" }
%"class.blink::PersistentBase.1041" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1044" }
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1046" = type { %class.scoped_refptr.1047 }
%class.scoped_refptr.1047 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1048", [4 x i8], %"class.blink::DataRef.1050", %"class.blink::DataRef.1054", %"class.blink::DataRef.1075", %"class.blink::DataRef.1093", %"class.blink::DataRef.1105", %"class.blink::DataRef.1109", %class.scoped_refptr.1079, i32, [4 x i8] }>
%"class.WTF::RefCounted.1048" = type { %"class.base::RefCounted.1049" }
%"class.base::RefCounted.1049" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1050" = type { %class.scoped_refptr.1051 }
%class.scoped_refptr.1051 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1052", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1052" = type { %"class.base::RefCounted.1053" }
%"class.base::RefCounted.1053" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1054" = type { %class.scoped_refptr.1055 }
%class.scoped_refptr.1055 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1056", %class.scoped_refptr.1058, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1056" = type { %"class.base::RefCounted.1057" }
%"class.base::RefCounted.1057" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1058 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1065", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.878" }>
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1075" = type { %class.scoped_refptr.1076 }
%class.scoped_refptr.1076 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1077", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1077" = type { %"class.base::RefCounted.1078" }
%"class.base::RefCounted.1078" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1079, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1093" = type { %class.scoped_refptr.1094 }
%class.scoped_refptr.1094 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1095", [4 x i8], %class.scoped_refptr.1097, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1095" = type { %"class.base::RefCounted.1096" }
%"class.base::RefCounted.1096" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1097 = type { %"class.base::RefCountedData.1098"* }
%"class.base::RefCountedData.1098" = type { %"class.base::RefCountedThreadSafe.1099", %"class.WTF::Vector.1100" }
%"class.base::RefCountedThreadSafe.1099" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1105" = type { %class.scoped_refptr.1106 }
%class.scoped_refptr.1106 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1107", %class.scoped_refptr.1079, %class.scoped_refptr.1079, %class.scoped_refptr.1079 }
%"class.WTF::RefCounted.1107" = type { %"class.base::RefCounted.1108" }
%"class.base::RefCounted.1108" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1109" = type { %class.scoped_refptr.1110 }
%class.scoped_refptr.1110 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1111", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1111" = type { %"class.base::RefCounted.1112" }
%"class.base::RefCounted.1112" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1079 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1080", %"class.blink::Persistent.1082", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1080" = type { %"class.base::RefCounted.1081" }
%"class.base::RefCounted.1081" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1082" = type { %"class.blink::PersistentBase.1083" }
%"class.blink::PersistentBase.1083" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.47", %"class.blink::HeapHashMap.1086" }
%"class.blink::HeapHashMap.1086" = type { %"class.WTF::HashMap.1089" }
%"class.WTF::HashMap.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"struct.WTF::KeyValuePair.1092"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1092" = type opaque
%"class.blink::DataRef.1113" = type { %class.scoped_refptr.1114 }
%class.scoped_refptr.1114 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1115", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1115" = type { %"class.base::RefCounted.1116" }
%"class.base::RefCounted.1116" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1117" = type { %class.scoped_refptr.1118 }
%class.scoped_refptr.1118 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1119", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1119" = type { %"class.base::RefCounted.1120" }
%"class.base::RefCounted.1120" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1121" = type { %class.scoped_refptr.1122 }
%class.scoped_refptr.1122 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1123", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1123" = type { %"class.base::RefCounted.1124" }
%"class.base::RefCounted.1124" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1125" = type { %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1127", %class.scoped_refptr.1129 }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1129 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1145", %"class.blink::StyleVariables", %class.scoped_refptr.1129 }
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1130" = type { %"class.base::RefCounted.1131" }
%"class.base::RefCounted.1131" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1135" }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.WTF::Vector.1138"* }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174", [32 x i8] }
%"class.WTF::VectorBufferBase.1174" = type { %class.scoped_refptr.1175*, i32, i32 }
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1369", %"class.blink::HeapHashSet.1378" }
%"class.blink::HeapVector.1369" = type { %"class.WTF::Vector.1372" }
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1374" }
%"class.WTF::VectorBufferBase.1374" = type { %"class.blink::Member.1375"*, i32, i32 }
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1378" = type { %"class.WTF::HashSet.1381" }
%"class.WTF::HashSet.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"class.blink::Member.1375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::HeapHashSet.1388"* }
%"class.blink::HeapHashSet.1388" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.403", %"class.blink::Member.683", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF12VectorBufferIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIPKN5blink25NthSiblingInvalidationSetELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink25NthSiblingInvalidationSetEEEmm = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZNK5blink16StyleInvalidator30MatchesCurrentInvalidationSetsERNS1_7ElementEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink20NodeInvalidationSetsD2Ev = comdat any

$_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink15InvalidationSetEEEmm = comdat any

$_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16StyleInvalidator11SiblingData5EntryEEEmm = comdat any

$_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

@.str = private unnamed_addr constant [59 x i8] c"disabled-by-default-devtools.timeline.invalidationTracking\00", align 1
@_ZN5blinkL35g_style_invalidator_tracing_enabledE = internal unnamed_addr global i8* null, align 8
@_ZN5blink19style_change_reason17kStyleInvalidatorE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/css/invalidation/style_invalidator.cc\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"invalidation_set->IsAlive()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [37 x i8] c"StyleInvalidatorInvalidationTracking\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink25NthSiblingInvalidationSetEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::NthSiblingInvalidationSet *]\00", align 1
@_ZN5blink44inspector_style_invalidator_invalidate_event23kInvalidateCustomPseudoE = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink15InvalidationSetEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::InvalidationSet *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16StyleInvalidator11SiblingData5EntryEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleInvalidator::SiblingData::Entry]\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink16StyleInvalidatorC1ERNS_11HeapHashMapINS_6MemberINS_13ContainerNodeEEENS_20NodeInvalidationSetsEN3WTF10MemberHashIS3_EENS6_10HashTraitsIS4_EENS9_IS5_EEEE = hidden unnamed_addr alias void (%"class.blink::StyleInvalidator"*, %"class.blink::HeapHashMap"*), void (%"class.blink::StyleInvalidator"*, %"class.blink::HeapHashMap"*)* @_ZN5blink16StyleInvalidatorC2ERNS_11HeapHashMapINS_6MemberINS_13ContainerNodeEEENS_20NodeInvalidationSetsEN3WTF10MemberHashIS3_EENS6_10HashTraitsIS4_EENS9_IS5_EEEE
@_ZN5blink16StyleInvalidatorD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleInvalidator"*), void (%"class.blink::StyleInvalidator"*)* @_ZN5blink16StyleInvalidatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator10InvalidateERNS_8DocumentEPNS_7ElementE(%"class.blink::StyleInvalidator"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleInvalidator::SiblingData", align 8
  %5 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 264, i1 false)
  %7 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %8 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 8192
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16, !prof !2

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0
  call void @_ZN5blink16StyleInvalidator36PushInvalidationSetsForContainerNodeERNS_13ContainerNodeERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %17, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  %18 = load i32, i32* %12, align 8
  %19 = and i32 %18, -8193
  store i32 %19, i32* %12, align 8
  br label %20

20:                                               ; preds = %3, %16
  %21 = icmp eq %"class.blink::Element"* %2, null
  br i1 %21, label %62, label %22

22:                                               ; preds = %20
  call void @_ZN5blink16StyleInvalidator10InvalidateERNS_7ElementERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %2, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  %23 = load i32, i32* %10, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %32, %25
  %28 = phi %"class.blink::Node"* [ %26, %25 ], [ %30, %32 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %27

37:                                               ; preds = %45, %32
  %38 = phi %"class.blink::Node"* [ %30, %32 ], [ %43, %45 ]
  %39 = bitcast %"class.blink::Node"* %38 to %"class.blink::Element"*
  call void @_ZN5blink16StyleInvalidator10InvalidateERNS_7ElementERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %39, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  br label %40

40:                                               ; preds = %45, %37
  %41 = phi %"class.blink::Node"* [ %38, %37 ], [ %43, %45 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %37, label %40

50:                                               ; preds = %27, %40, %22
  %51 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %50, %52
  %53 = phi %"class.blink::Node"* [ %60, %52 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -4097
  store i32 %56, i32* %54, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.blink::Node"** %57 to %"class.blink::ContainerNode"**
  %59 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %59, i64 0, i32 0
  %61 = icmp eq %"class.blink::ContainerNode"* %59, null
  br i1 %61, label %62, label %52

62:                                               ; preds = %52, %20
  %63 = load i32, i32* %12, align 8
  %64 = and i32 %63, -4097
  store i32 %64, i32* %12, align 8
  %65 = bitcast %"class.blink::StyleInvalidator"* %0 to %"class.WTF::HashMap"**
  %66 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %66, i64 0, i32 0, i32 0
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %67, align 8
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %91, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %66, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = zext i32 %72 to i64
  br label %76

76:                                               ; preds = %84, %74
  %77 = phi i64 [ 0, %74 ], [ %85, %84 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %77
  %79 = bitcast %"struct.WTF::KeyValuePair"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  switch i64 %80, label %81 [
    i64 -1, label %84
    i64 0, label %84
  ]

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %77, i32 1
  call void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"* %82) #10
  store atomic i64 -1, i64* %79 monotonic, align 8
  %83 = bitcast %"class.blink::NodeInvalidationSets"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %83, i8 0, i64 32, i1 false) #10
  br label %84

84:                                               ; preds = %81, %76, %76
  %85 = add nuw nsw i64 %77, 1
  %86 = icmp eq i64 %85, %75
  br i1 %86, label %87, label %76

87:                                               ; preds = %84, %70
  %88 = bitcast %"struct.WTF::KeyValuePair"* %68 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %88) #10
  %89 = bitcast %"class.WTF::HashMap"* %66 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store i32 0, i32* %71, align 8
  %90 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %66, i64 0, i32 0, i32 2
  store i32 0, i32* %90, align 4
  br label %91

91:                                               ; preds = %62, %87
  %92 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2
  %93 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %105, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  store i32 0, i32* %97, align 4
  br label %101

101:                                              ; preds = %100, %96
  %102 = bitcast %"class.WTF::Vector.24"* %92 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast %"class.WTF::Vector.24"* %92 to i64*
  store atomic i64 0, i64* %104 monotonic, align 8
  store i32 0, i32* %93, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #10
  br label %105

105:                                              ; preds = %91, %101
  %106 = load i32, i32* %10, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %105
  store i32 0, i32* %10, align 4
  br label %109

109:                                              ; preds = %108, %105
  %110 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %110, align 8
  %112 = bitcast i8* %7 to %"struct.blink::StyleInvalidator::SiblingData::Entry"*
  %113 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %111, %112
  br i1 %113, label %116, label %114, !prof !2

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"* nonnull %115, %"struct.blink::StyleInvalidator::SiblingData::Entry"* %111) #10
  br label %116

116:                                              ; preds = %109, %114
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %5) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator36PushInvalidationSetsForContainerNodeERNS_13ContainerNodeERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::StyleInvalidator::SiblingData"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::StyleInvalidator::SiblingData::Entry", align 8
  %5 = alloca %"class.blink::NthSiblingInvalidationSet"*, align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.base::trace_event::TraceArguments", align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = bitcast %"class.blink::StyleInvalidator"* %0 to %"class.WTF::HashMap"**
  %13 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %13, i64 0, i32 0
  %15 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %14, %"class.blink::ContainerNode"* %1) #10
  %16 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %15, 0
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %18 = load %class.scoped_refptr*, %class.scoped_refptr** %17, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %3
  %25 = bitcast %"class.logging::CheckError"* %10 to i8*
  %26 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 1
  %27 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %4 to i8*
  %28 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %4 to %"class.blink::InvalidationSet"**
  %29 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2
  %35 = bitcast %"class.blink::NthSiblingInvalidationSet"** %5 to i8*
  %36 = bitcast %"class.blink::NthSiblingInvalidationSet"** %5 to %"class.blink::InvalidationSet"**
  %37 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %34, i64 0, i32 0, i32 0, i32 0
  br label %45

40:                                               ; preds = %99, %3
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 98304
  %44 = icmp eq i32 %43, 65536
  br i1 %44, label %202, label %102

45:                                               ; preds = %24, %99
  %46 = phi %class.scoped_refptr* [ %18, %24 ], [ %100, %99 ]
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 0, i32 0
  %48 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %48, i64 0, i32 8
  %50 = load i8, i8* %49, align 2
  %51 = and i8 %50, 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 194, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #10
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %55 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %55, i64 0, i32 8
  %57 = load i8, i8* %56, align 2
  br label %58

58:                                               ; preds = %45, %53
  %59 = phi i8 [ %50, %45 ], [ %57, %53 ]
  %60 = phi %"class.blink::InvalidationSet"* [ %48, %45 ], [ %55, %53 ]
  %61 = and i8 %59, 3
  %62 = icmp eq i8 %61, 2
  br i1 %62, label %63, label %77

63:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  store %"class.blink::InvalidationSet"* %60, %"class.blink::InvalidationSet"** %36, align 8
  %64 = load i32, i32* %37, align 4
  %65 = load i32, i32* %38, align 8
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %75, label %67, !prof !3

67:                                               ; preds = %63
  %68 = ptrtoint %"class.blink::InvalidationSet"* %60 to i64
  %69 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %39, align 8
  %70 = zext i32 %64 to i64
  %71 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %69, i64 %70
  %72 = bitcast %"class.blink::NthSiblingInvalidationSet"** %71 to i64*
  store i64 %68, i64* %72, align 8
  %73 = load i32, i32* %37, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %37, align 4
  br label %76

75:                                               ; preds = %63
  call void @_ZN3WTF6VectorIPKN5blink25NthSiblingInvalidationSetELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.24"* %34, %"class.blink::NthSiblingInvalidationSet"** nonnull dereferenceable(8) %5) #10
  br label %76

76:                                               ; preds = %67, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %99

77:                                               ; preds = %58
  %78 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %60, i64 0, i32 9, i64 1
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = load i32, i32* %26, align 8
  %84 = add i32 %83, %80
  br label %85

85:                                               ; preds = %82, %77
  %86 = phi i32 [ %84, %82 ], [ -1, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10
  store %"class.blink::InvalidationSet"* %60, %"class.blink::InvalidationSet"** %28, align 8
  store i32 %86, i32* %29, align 8
  %87 = load i32, i32* %30, align 4
  %88 = load i32, i32* %31, align 8
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %97, label %90, !prof !3

90:                                               ; preds = %85
  %91 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %32, align 8
  %92 = zext i32 %87 to i64
  %93 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %91, i64 %92
  %94 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %27, i64 16, i1 false) #10
  %95 = load i32, i32* %30, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %30, align 4
  br label %98

97:                                               ; preds = %85
  call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.673"* %33, %"struct.blink::StyleInvalidator::SiblingData::Entry"* nonnull dereferenceable(16) %4) #10
  br label %98

98:                                               ; preds = %90, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10
  br label %99

99:                                               ; preds = %98, %76
  %100 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 1
  %101 = icmp eq %class.scoped_refptr* %100, %22
  br i1 %101, label %40, label %45

102:                                              ; preds = %40
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %202, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %103, i64 0, i32 0, i32 0, i32 0
  %109 = load %class.scoped_refptr*, %class.scoped_refptr** %108, align 8
  %110 = zext i32 %105 to i64
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %109, i64 %110
  %112 = bitcast %"class.logging::CheckError"* %11 to i8*
  br label %117

113:                                              ; preds = %128
  %114 = load i8*, i8** @_ZN5blinkL35g_style_invalidator_tracing_enabledE, align 8
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %202, label %132, !prof !2

117:                                              ; preds = %107, %128
  %118 = phi %class.scoped_refptr* [ %109, %107 ], [ %130, %128 ]
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %118, i64 0, i32 0
  %120 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %120, i64 0, i32 8
  %122 = load i8, i8* %121, align 2
  %123 = and i8 %122, 8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #10
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #10
  %127 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %119, align 8
  br label %128

128:                                              ; preds = %117, %125
  %129 = phi %"class.blink::InvalidationSet"* [ %120, %117 ], [ %127, %125 ]
  call void @_ZN5blink16StyleInvalidator19PushInvalidationSetERKNS_15InvalidationSetE(%"class.blink::StyleInvalidator"* %0, %"class.blink::InvalidationSet"* dereferenceable(48) %129)
  %130 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %118, i64 1
  %131 = icmp eq %class.scoped_refptr* %130, %111
  br i1 %131, label %113, label %117

132:                                              ; preds = %113
  %133 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %134 = and i8 %133, 25
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %202, label %136, !prof !2

136:                                              ; preds = %132
  %137 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %138 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #10
  %139 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %140 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %141, align 8
  %142 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 1, i64 0
  store i8 9, i8* %142, align 1
  %143 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 3, i64 0
  %145 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #10
  %146 = call i8* @_Znwm(i64 192) #11
  %147 = bitcast i8* %146 to %"class.protozero::ScatteredHeapBuffer"*
  call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %147, i64 4096, i64 4096) #10
  %148 = getelementptr inbounds i8, i8* %146, i64 80
  %149 = bitcast i8* %148 to %"class.protozero::ScatteredStreamWriter"*
  %150 = bitcast i8* %146 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %149, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %150) #10
  %151 = getelementptr inbounds i8, i8* %146, i64 120
  %152 = getelementptr inbounds i8, i8* %146, i64 168
  %153 = bitcast i8* %152 to %"class.protozero::MessageArena"*
  call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %153) #10
  %154 = bitcast i8* %151 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %154, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %153) #10
  %155 = getelementptr inbounds i8, i8* %146, i64 24
  %156 = bitcast i8* %155 to i8**
  store i8* %148, i8** %156, align 8
  %157 = bitcast i8* %152 to %"class.std::__1::list"*
  call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %157, i64 1) #10
  %158 = bitcast i8* %152 to %"struct.std::__1::__list_node"**
  %159 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %159, i64 0, i32 1, i32 1
  store i32 0, i32* %160, align 8
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %154, %"class.protozero::ScatteredStreamWriter"* %149, %"class.protozero::MessageArena"* %153) #10
  %161 = bitcast %"union.base::trace_event::TraceValue"* %144 to i8**
  store i8* %146, i8** %161, align 8
  %162 = bitcast i8* %151 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::protos::pbzero::DebugAnnotation"* %162) #10
  %163 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %163, i8* nonnull align 8 %145, i64 16, i1 false) #10
  call void @_ZN5blink44inspector_style_invalidator_invalidate_event16InvalidationListEN8perfetto11TracedValueERNS_13ContainerNodeERKN3WTF6VectorI13scoped_refptrINS_15InvalidationSetEELj0ENS5_18PartitionAllocatorEEE(%"class.perfetto::TracedValue"* nonnull %6, %"class.blink::ContainerNode"* dereferenceable(80) %1, %"class.WTF::Vector"* dereferenceable(16) %103) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #10
  %164 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %137, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* nonnull %8, i32 8) #10
  %165 = load i8, i8* %141, align 8
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %201, label %167

167:                                              ; preds = %136, %196
  %168 = phi i64 [ %197, %196 ], [ 0, %136 ]
  %169 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 1, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 8
  br i1 %171, label %172, label %183

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 3, i64 %168
  %174 = bitcast %"union.base::trace_event::TraceValue"* %173 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %175 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %174, align 8
  %176 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %175, null
  br i1 %176, label %196, label %177

177:                                              ; preds = %172
  %178 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %175 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %179 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %179, i64 1
  %181 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %180, align 8
  call void %181(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %175) #10
  %182 = load i8, i8* %169, align 1
  br label %183

183:                                              ; preds = %177, %167
  %184 = phi i8 [ %170, %167 ], [ %182, %177 ]
  %185 = icmp eq i8 %184, 9
  br i1 %185, label %186, label %196

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %8, i64 0, i32 3, i64 %168
  %188 = bitcast %"union.base::trace_event::TraceValue"* %187 to %"class.protozero::HeapBuffered"**
  %189 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %188, align 8
  %190 = icmp eq %"class.protozero::HeapBuffered"* %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %189, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %192) #10
  %193 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %189, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %193) #10
  %194 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %189, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %194) #10
  %195 = bitcast %"class.protozero::HeapBuffered"* %189 to i8*
  call void @_ZdlPv(i8* %195) #11
  br label %196

196:                                              ; preds = %191, %186, %183, %172
  %197 = add nuw nsw i64 %168, 1
  %198 = load i8, i8* %141, align 8
  %199 = zext i8 %198 to i64
  %200 = icmp ult i64 %197, %199
  br i1 %200, label %167, label %201

201:                                              ; preds = %196, %136
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #10
  br label %202

202:                                              ; preds = %102, %113, %132, %201, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator10InvalidateERNS_7ElementERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::StyleInvalidator::SiblingData"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %class.anon.1182, align 8
  %6 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %7 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %153

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 98304
  %21 = icmp eq i32 %20, 65536
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = or i8 %13, 2
  store i8 %23, i8* %12, align 1
  br label %123

24:                                               ; preds = %16
  %25 = and i8 %13, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Element"* %1 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %29 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %29, i64 110
  %31 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %30, align 8
  %32 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %31(%"class.blink::Element"* %1) #10
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %27
  %40 = load i32, i32* %10, align 4
  br label %57

41:                                               ; preds = %27
  %42 = load i8*, i8** @_ZN5blinkL35g_style_invalidator_tracing_enabledE, align 8
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %71, label %45, !prof !2

45:                                               ; preds = %41
  %46 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %47 = and i8 %46, 25
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %71, label %49, !prof !2

49:                                               ; preds = %45
  %50 = bitcast %class.anon.1182* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  %51 = getelementptr inbounds %class.anon.1182, %class.anon.1182* %5, i64 0, i32 0
  store %"class.blink::Element"* %1, %"class.blink::Element"** %51, align 8
  %52 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %53 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %55 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %55, i64* %54, align 8
  %56 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZNK5blink16StyleInvalidator30MatchesCurrentInvalidationSetsERNS1_7ElementEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 %52, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %class.anon.1182* nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  br label %71

57:                                               ; preds = %39, %24
  %58 = phi i32 [ %40, %39 ], [ %11, %24 ]
  %59 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %59, align 8
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %60, i64 %61
  %63 = icmp eq i32 %58, 0
  br i1 %63, label %71, label %66

64:                                               ; preds = %66
  %65 = icmp eq %"class.blink::InvalidationSet"** %70, %62
  br i1 %65, label %71, label %66

66:                                               ; preds = %57, %64
  %67 = phi %"class.blink::InvalidationSet"** [ %70, %64 ], [ %60, %57 ]
  %68 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %67, align 8
  %69 = tail call zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"* %68, %"class.blink::Element"* dereferenceable(104) %1) #10
  %70 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %67, i64 1
  br i1 %69, label %71, label %64

71:                                               ; preds = %66, %64, %57, %49, %45, %41
  %72 = phi i1 [ true, %41 ], [ true, %45 ], [ true, %49 ], [ false, %57 ], [ false, %64 ], [ true, %66 ]
  %73 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %78, label %76, !prof !2

76:                                               ; preds = %71
  %77 = call zeroext i1 @_ZN5blink16StyleInvalidator11SiblingData28MatchCurrentInvalidationSetsERNS_7ElementERS0_(%"class.blink::StyleInvalidator::SiblingData"* %2, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::StyleInvalidator"* dereferenceable(176) %0) #10
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i1 [ false, %71 ], [ %77, %76 ]
  %80 = or i1 %72, %79
  br i1 %80, label %81, label %123

81:                                               ; preds = %78
  %82 = bitcast %"class.blink::StyleChangeReasonForTracing"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #10
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #10
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %92
  call void @llvm.trap() #10
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %81, %87, %102
  %105 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"** %106, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %17, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %6) #10
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #10
  br label %122

122:                                              ; preds = %104, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #10
  br label %123

123:                                              ; preds = %78, %122, %22
  %124 = load i32, i32* %18, align 8
  %125 = and i32 %124, 8192
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %129, label %127, !prof !2

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  call void @_ZN5blink16StyleInvalidator36PushInvalidationSetsForContainerNodeERNS_13ContainerNodeERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %128, %"class.blink::StyleInvalidator::SiblingData"* dereferenceable(280) %2)
  br label %129

129:                                              ; preds = %123, %127
  %130 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %131 = icmp eq %"class.blink::Element"* %1, null
  br i1 %131, label %153, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %18, align 8
  %134 = and i32 %133, 48
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %153

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %130, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %140 = bitcast %"class.blink::Member.2"* %139 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %143, %145
  %147 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLSlotElement"*
  br i1 %146, label %148, label %153

148:                                              ; preds = %136
  %149 = load i8, i8* %12, align 1
  %150 = and i8 %149, 16
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %148
  call void @_ZNK5blink16StyleInvalidator33InvalidateSlotDistributedElementsERNS_15HTMLSlotElementE(%"class.blink::StyleInvalidator"* %0, %"class.blink::HTMLSlotElement"* nonnull dereferenceable(192) %147)
  br label %153

153:                                              ; preds = %148, %136, %3, %129, %132, %152
  %154 = load i8, i8* %12, align 1
  %155 = and i8 %154, 2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %199

157:                                              ; preds = %153
  %158 = load i32, i32* %10, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %199, label %164

164:                                              ; preds = %160, %157
  %165 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 12
  %168 = icmp eq i32 %167, 0
  %169 = and i32 %166, 1
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %168, label %172, label %183

172:                                              ; preds = %164
  br i1 %170, label %179, label %173

173:                                              ; preds = %172
  %174 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRareData"**
  %175 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %175, i64 0, i32 1, i32 0, i32 0
  %177 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %177, i64 0, i32 2, i32 0
  br label %195

179:                                              ; preds = %172
  %180 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRenderingData"**
  %181 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %181, i64 0, i32 2, i32 0
  br label %195

183:                                              ; preds = %164
  %184 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRareData"**
  %185 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %185, i64 0, i32 1, i32 0, i32 0
  %187 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRenderingData"**
  %188 = select i1 %170, %"class.blink::NodeRenderingData"** %187, %"class.blink::NodeRenderingData"** %186
  %189 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %189, i64 0, i32 1
  %191 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %190, align 8
  %192 = icmp eq %"class.blink::LayoutObject"* %191, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %191, i64 0, i32 5, i32 0
  br label %195

195:                                              ; preds = %173, %179, %193
  %196 = phi %"class.blink::ComputedStyle"** [ %194, %193 ], [ %178, %173 ], [ %182, %179 ]
  %197 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %196, align 8
  %198 = icmp eq %"class.blink::ComputedStyle"* %197, null
  br i1 %198, label %199, label %204

199:                                              ; preds = %160, %153, %183, %195
  %200 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 4096
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %205, label %204

204:                                              ; preds = %199, %195
  call void @_ZN5blink16StyleInvalidator18InvalidateChildrenERNS_7ElementE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* dereferenceable(104) %1)
  br label %207

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %206, align 4
  br label %207

207:                                              ; preds = %205, %204
  %208 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = and i32 %209, -12289
  store i32 %210, i32* %208, align 8
  store i32 %11, i32* %10, align 4
  store i8 %13, i8* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidatorC2ERNS_11HeapHashMapINS_6MemberINS_13ContainerNodeEEENS_20NodeInvalidationSetsEN3WTF10MemberHashIS3_EENS6_10HashTraitsIS4_EENS9_IS5_EEEE(%"class.blink::StyleInvalidator"*, %"class.blink::HeapHashMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 0
  store %"class.blink::HeapHashMap"* %1, %"class.blink::HeapHashMap"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %6 = bitcast %"class.WTF::Vector.19"* %4 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 16, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2
  %10 = bitcast %"class.WTF::Vector.24"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, -64
  store i8 %13, i8* %11, align 1
  %14 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0)) #10
  store i8* %14, i8** @_ZN5blinkL35g_style_invalidator_tracing_enabledE, align 8
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidatorD2Ev(%"class.blink::StyleInvalidator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %2, align 8
  %4 = icmp eq %"class.blink::NthSiblingInvalidationSet"** %3, null
  %5 = bitcast %"class.blink::NthSiblingInvalidationSet"** %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #10
  store %"class.blink::NthSiblingInvalidationSet"** null, %"class.blink::NthSiblingInvalidationSet"*** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %12
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %12
  %19 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %22 = bitcast i8* %21 to %"class.blink::InvalidationSet"**
  %23 = icmp eq %"class.blink::InvalidationSet"** %20, %22
  br i1 %23, label %26, label %24, !prof !2

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %13, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.20"* %25, %"class.blink::InvalidationSet"** %20) #10
  br label %26

26:                                               ; preds = %18, %24
  store %"class.blink::InvalidationSet"** null, %"class.blink::InvalidationSet"*** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator19PushInvalidationSetERKNS_15InvalidationSetE(%"class.blink::StyleInvalidator"*, %"class.blink::InvalidationSet"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::InvalidationSet"*, align 8
  %4 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %1, i64 0, i32 6, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = or i8 %10, 1
  store i8 %11, i8* %9, align 1
  %12 = load i8, i8* %4, align 1
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i8 [ %5, %2 ], [ %12, %8 ]
  %15 = and i8 %14, 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = or i8 %19, 4
  store i8 %20, i8* %18, align 1
  %21 = load i8, i8* %4, align 1
  br label %22

22:                                               ; preds = %13, %17
  %23 = phi i8 [ %14, %13 ], [ %21, %17 ]
  %24 = and i8 %23, 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = or i8 %28, 8
  store i8 %29, i8* %27, align 1
  %30 = load i8, i8* %4, align 1
  br label %31

31:                                               ; preds = %22, %26
  %32 = phi i8 [ %23, %22 ], [ %30, %26 ]
  %33 = and i8 %32, 16
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = or i8 %37, 16
  store i8 %38, i8* %36, align 1
  %39 = load i8, i8* %4, align 1
  br label %40

40:                                               ; preds = %31, %35
  %41 = phi i8 [ %32, %31 ], [ %39, %35 ]
  %42 = and i8 %41, 32
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = or i8 %46, 32
  store i8 %47, i8* %45, align 1
  br label %48

48:                                               ; preds = %40, %44
  %49 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1
  %50 = bitcast %"class.blink::InvalidationSet"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  store %"class.blink::InvalidationSet"* %1, %"class.blink::InvalidationSet"** %3, align 8
  %51 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %65, label %56, !prof !3

56:                                               ; preds = %48
  %57 = ptrtoint %"class.blink::InvalidationSet"* %1 to i64
  %58 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %49, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %58, align 8
  %60 = zext i32 %52 to i64
  %61 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %59, i64 %60
  %62 = bitcast %"class.blink::InvalidationSet"** %61 to i64*
  store i64 %57, i64* %62, align 8
  %63 = load i32, i32* %51, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %51, align 4
  br label %66

65:                                               ; preds = %48
  call void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.19"* %49, %"class.blink::InvalidationSet"** nonnull dereferenceable(8) %3) #10
  br label %66

66:                                               ; preds = %56, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16StyleInvalidator39MatchesCurrentInvalidationSetsAsSlottedERNS_7ElementE(%"class.blink::StyleInvalidator"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %2, %19
  %11 = phi %"class.blink::InvalidationSet"** [ %20, %19 ], [ %4, %2 ]
  %12 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %12, i64 0, i32 6, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 16
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = tail call zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"* %12, %"class.blink::Element"* dereferenceable(104) %1) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %11, i64 1
  %21 = icmp eq %"class.blink::InvalidationSet"** %20, %8
  br i1 %21, label %22, label %10

22:                                               ; preds = %17, %19, %2
  %23 = phi i1 [ false, %2 ], [ false, %19 ], [ true, %17 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16StyleInvalidator37MatchesCurrentInvalidationSetsAsPartsERNS_7ElementE(%"class.blink::StyleInvalidator"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %2, %19
  %11 = phi %"class.blink::InvalidationSet"** [ %20, %19 ], [ %4, %2 ]
  %12 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %12, i64 0, i32 6, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 32
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = tail call zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"* %12, %"class.blink::Element"* dereferenceable(104) %1) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %11, i64 1
  %21 = icmp eq %"class.blink::InvalidationSet"** %20, %8
  br i1 %21, label %22, label %10

22:                                               ; preds = %17, %19, %2
  %23 = phi i1 [ false, %2 ], [ false, %19 ], [ true, %17 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator11SiblingData19PushInvalidationSetERKNS_22SiblingInvalidationSetE(%"class.blink::StyleInvalidator::SiblingData"*, %"class.blink::SiblingInvalidationSet"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::StyleInvalidator::SiblingData::Entry", align 8
  %4 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, %5
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i32 [ %10, %7 ], [ -1, %2 ]
  %13 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 0
  store %"class.blink::SiblingInvalidationSet"* %1, %"class.blink::SiblingInvalidationSet"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 1
  store i32 %12, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %29, label %21, !prof !3

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %22, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %23, i64 %24
  %26 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %13, i64 16, i1 false) #10
  %27 = load i32, i32* %16, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %16, align 4
  br label %31

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.673"* %30, %"struct.blink::StyleInvalidator::SiblingData::Entry"* nonnull dereferenceable(16) %3) #10
  br label %31

31:                                               ; preds = %21, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16StyleInvalidator11SiblingData28MatchCurrentInvalidationSetsERNS_7ElementERS0_(%"class.blink::StyleInvalidator::SiblingData"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::StyleInvalidator"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %105, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %9, %101
  %18 = phi i32 [ 0, %9 ], [ %40, %101 ]
  %19 = phi i8 [ 0, %9 ], [ %102, %101 ]
  br label %20

20:                                               ; preds = %17, %26
  %21 = load i32, i32* %10, align 8
  %22 = call dereferenceable(16) %"struct.blink::StyleInvalidator::SiblingData::Entry"* @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.673"* %5, i32 %18) #10
  %23 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %21, %24
  br i1 %25, label %26, label %36

26:                                               ; preds = %20
  %27 = load i32, i32* %6, align 4
  %28 = add i32 %27, -1
  %29 = call dereferenceable(16) %"struct.blink::StyleInvalidator::SiblingData::Entry"* @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.673"* %5, i32 %28) #10
  %30 = call dereferenceable(16) %"struct.blink::StyleInvalidator::SiblingData::Entry"* @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.673"* %5, i32 %18) #10
  %31 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %30 to i8*
  %32 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = load i32, i32* %6, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %6, align 4
  %35 = icmp ult i32 %18, %34
  br i1 %35, label %20, label %105

36:                                               ; preds = %20
  %37 = call dereferenceable(16) %"struct.blink::StyleInvalidator::SiblingData::Entry"* @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.673"* %5, i32 %18) #10
  %38 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %37, i64 0, i32 0
  %39 = load %"class.blink::SiblingInvalidationSet"*, %"class.blink::SiblingInvalidationSet"** %38, align 8
  %40 = add nuw i32 %18, 1
  %41 = bitcast %"class.blink::SiblingInvalidationSet"* %39 to %"class.blink::InvalidationSet"*
  %42 = call zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"* %41, %"class.blink::Element"* dereferenceable(104) %1) #10
  br i1 %42, label %43, label %101

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %39, i64 0, i32 0, i32 8
  %45 = load i8, i8* %44, align 2
  %46 = and i8 %45, 4
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i8 %19, i8 1
  %49 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %39, i64 0, i32 2, i32 0
  %50 = load %"class.blink::DescendantInvalidationSet"*, %"class.blink::DescendantInvalidationSet"** %49, align 8
  %51 = icmp eq %"class.blink::DescendantInvalidationSet"* %50, null
  br i1 %51, label %101, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.blink::DescendantInvalidationSet"* %50 to %"class.blink::InvalidationSet"*
  %54 = getelementptr inbounds %"class.blink::DescendantInvalidationSet", %"class.blink::DescendantInvalidationSet"* %50, i64 0, i32 0, i32 6, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %94, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #10
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %66
  call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %58, %61, %76
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %15, align 8
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %11, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #10
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %109, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %109

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %109

94:                                               ; preds = %52
  %95 = call zeroext i1 @_ZNK5blink15InvalidationSet16HasEmptyBackingsEv(%"class.blink::InvalidationSet"* nonnull %53) #10
  br i1 %95, label %96, label %100

96:                                               ; preds = %94
  %97 = load i8, i8* %54, align 1
  %98 = and i8 %97, 57
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %94, %96
  call void @_ZN5blink16StyleInvalidator19PushInvalidationSetERKNS_15InvalidationSetE(%"class.blink::StyleInvalidator"* %2, %"class.blink::InvalidationSet"* nonnull dereferenceable(48) %53)
  br label %101

101:                                              ; preds = %36, %96, %100, %43
  %102 = phi i8 [ %48, %43 ], [ %48, %100 ], [ %48, %96 ], [ %19, %36 ]
  %103 = load i32, i32* %6, align 4
  %104 = icmp ult i32 %40, %103
  br i1 %104, label %17, label %105

105:                                              ; preds = %101, %26, %3
  %106 = phi i8 [ 0, %3 ], [ %19, %26 ], [ %102, %101 ]
  %107 = and i8 %106, 1
  %108 = icmp ne i8 %107, 0
  br label %110

109:                                              ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br label %110

110:                                              ; preds = %109, %105
  %111 = phi i1 [ %108, %105 ], [ true, %109 ]
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator28InvalidateShadowRootChildrenERNS_7ElementE(%"class.blink::StyleInvalidator"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::StyleInvalidator::SiblingData::Entry", align 8
  %4 = alloca %"class.blink::StyleInvalidator::SiblingData", align 8
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* %1) #10
  %6 = icmp eq %"class.blink::ShadowRoot"* %5, null
  br i1 %6, label %116, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 3, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12288
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %116, label %17

17:                                               ; preds = %12, %7
  %18 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 264, i1 false)
  %22 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %23 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = and i8 %9, 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 8192
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34, !prof !2

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 0, i32 0
  call void @_ZN5blink16StyleInvalidator36PushInvalidationSetsForContainerNodeERNS_13ContainerNodeERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %35, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  br label %36

36:                                               ; preds = %29, %17, %34
  %37 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %38, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %74, label %44

44:                                               ; preds = %36
  %45 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3 to i8*
  %46 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0
  br label %50

50:                                               ; preds = %71, %44
  %51 = phi %"class.blink::NthSiblingInvalidationSet"** [ %38, %44 ], [ %72, %71 ]
  %52 = bitcast %"class.blink::NthSiblingInvalidationSet"** %51 to %"class.blink::SiblingInvalidationSet"**
  %53 = load %"class.blink::SiblingInvalidationSet"*, %"class.blink::SiblingInvalidationSet"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -1
  %57 = load i32, i32* %26, align 8
  %58 = add i32 %57, %55
  %59 = select i1 %56, i32 -1, i32 %58
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #10
  store %"class.blink::SiblingInvalidationSet"* %53, %"class.blink::SiblingInvalidationSet"** %46, align 8
  store i32 %59, i32* %47, align 8
  %60 = load i32, i32* %25, align 4
  %61 = load i32, i32* %24, align 8
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %70, label %63, !prof !3

63:                                               ; preds = %50
  %64 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %48, align 8
  %65 = zext i32 %60 to i64
  %66 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %64, i64 %65
  %67 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %45, i64 16, i1 false) #10
  %68 = load i32, i32* %25, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %25, align 4
  br label %71

70:                                               ; preds = %50
  call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.673"* nonnull %49, %"struct.blink::StyleInvalidator::SiblingData::Entry"* nonnull dereferenceable(16) %3) #10
  br label %71

71:                                               ; preds = %70, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #10
  %72 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %51, i64 1
  %73 = icmp eq %"class.blink::NthSiblingInvalidationSet"** %72, %42
  br i1 %73, label %74, label %50

74:                                               ; preds = %71, %36
  store i32 0, i32* %39, align 4
  %75 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %75, align 8
  %77 = icmp eq %"class.blink::Node"* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %74, %84
  %79 = phi %"class.blink::Node"* [ %86, %84 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 12
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %103, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 0, i32 5, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %88, label %78

88:                                               ; preds = %84, %106, %74
  %89 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, -12289
  store i32 %91, i32* %89, align 8
  %92 = load i32, i32* %25, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %88
  store i32 0, i32* %25, align 4
  br label %95

95:                                               ; preds = %94, %88
  %96 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %96, align 8
  %98 = bitcast i8* %22 to %"struct.blink::StyleInvalidator::SiblingData::Entry"*
  %99 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %97, %98
  br i1 %99, label %102, label %100, !prof !2

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"* nonnull %101, %"struct.blink::StyleInvalidator::SiblingData::Entry"* %97) #10
  br label %102

102:                                              ; preds = %95, %100
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %20) #10
  store i32 %19, i32* %18, align 4
  store i8 %9, i8* %8, align 8
  br label %116

103:                                              ; preds = %111, %78
  %104 = phi %"class.blink::Node"* [ %79, %78 ], [ %109, %111 ]
  %105 = bitcast %"class.blink::Node"* %104 to %"class.blink::Element"*
  call void @_ZN5blink16StyleInvalidator10InvalidateERNS_7ElementERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %105, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  br label %106

106:                                              ; preds = %111, %103
  %107 = phi %"class.blink::Node"* [ %104, %103 ], [ %109, %111 ]
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 5, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %88, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 12
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %103, label %106

116:                                              ; preds = %12, %102, %2
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16StyleInvalidator18InvalidateChildrenERNS_7ElementE(%"class.blink::StyleInvalidator"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::StyleInvalidator::SiblingData::Entry", align 8
  %4 = alloca %"class.blink::StyleInvalidator::SiblingData", align 8
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* %1) #10
  %6 = icmp eq %"class.blink::ShadowRoot"* %5, null
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %2
  tail call void @_ZN5blink16StyleInvalidator28InvalidateShadowRootChildrenERNS_7ElementE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* dereferenceable(104) %1)
  br label %8

8:                                                ; preds = %2, %7
  %9 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::StyleInvalidator::SiblingData"* %4 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 1
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %56, label %22

22:                                               ; preds = %8
  %23 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3 to i8*
  %24 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %3, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0
  br label %28

28:                                               ; preds = %52, %22
  %29 = phi i32 [ 16, %22 ], [ %55, %52 ]
  %30 = phi i32 [ 0, %22 ], [ %54, %52 ]
  %31 = phi i32 [ 0, %22 ], [ %53, %52 ]
  %32 = phi %"class.blink::NthSiblingInvalidationSet"** [ %16, %22 ], [ %50, %52 ]
  %33 = bitcast %"class.blink::NthSiblingInvalidationSet"** %32 to %"class.blink::SiblingInvalidationSet"**
  %34 = load %"class.blink::SiblingInvalidationSet"*, %"class.blink::SiblingInvalidationSet"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SiblingInvalidationSet", %"class.blink::SiblingInvalidationSet"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, -1
  %38 = add i32 %31, %36
  %39 = select i1 %37, i32 -1, i32 %38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  store %"class.blink::SiblingInvalidationSet"* %34, %"class.blink::SiblingInvalidationSet"** %24, align 8
  store i32 %39, i32* %25, align 8
  %40 = icmp eq i32 %30, %29
  br i1 %40, label %48, label %41, !prof !3

41:                                               ; preds = %28
  %42 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %26, align 8
  %43 = zext i32 %30 to i64
  %44 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %42, i64 %43
  %45 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %23, i64 16, i1 false) #10
  %46 = load i32, i32* %13, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %13, align 4
  br label %49

48:                                               ; preds = %28
  call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.673"* nonnull %27, %"struct.blink::StyleInvalidator::SiblingData::Entry"* nonnull dereferenceable(16) %3) #10
  br label %49

49:                                               ; preds = %48, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %50 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %32, i64 1
  %51 = icmp eq %"class.blink::NthSiblingInvalidationSet"** %50, %20
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %14, align 8
  %54 = load i32, i32* %13, align 4
  %55 = load i32, i32* %12, align 8
  br label %28

56:                                               ; preds = %49, %8
  store i32 0, i32* %17, align 4
  %57 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56, %66
  %61 = phi %"class.blink::Node"* [ %68, %66 ], [ %58, %56 ]
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 12
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %60

70:                                               ; preds = %66, %85, %56
  %71 = load i32, i32* %13, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %70
  store i32 0, i32* %13, align 4
  br label %74

74:                                               ; preds = %73, %70
  %75 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %75, align 8
  %77 = bitcast i8* %10 to %"struct.blink::StyleInvalidator::SiblingData::Entry"*
  %78 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %76, %77
  br i1 %78, label %81, label %79, !prof !2

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::StyleInvalidator::SiblingData", %"class.blink::StyleInvalidator::SiblingData"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"* nonnull %80, %"struct.blink::StyleInvalidator::SiblingData::Entry"* %76) #10
  br label %81

81:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #10
  ret void

82:                                               ; preds = %90, %60
  %83 = phi %"class.blink::Node"* [ %61, %60 ], [ %88, %90 ]
  %84 = bitcast %"class.blink::Node"* %83 to %"class.blink::Element"*
  call void @_ZN5blink16StyleInvalidator10InvalidateERNS_7ElementERNS0_11SiblingDataE(%"class.blink::StyleInvalidator"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %84, %"class.blink::StyleInvalidator::SiblingData"* nonnull dereferenceable(280) %4)
  br label %85

85:                                               ; preds = %90, %82
  %86 = phi %"class.blink::Node"* [ %83, %82 ], [ %88, %90 ]
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 0, i32 5, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %70, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %88, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 12
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %82, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16StyleInvalidator33InvalidateSlotDistributedElementsERNS_15HTMLSlotElementE(%"class.blink::StyleInvalidator"* nocapture readonly, %"class.blink::HTMLSlotElement"* dereferenceable(192)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.685", align 8
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = bitcast %"class.blink::HeapVector.685"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  call void @_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv(%"class.blink::HeapVector.685"* nonnull sret %3, %"class.blink::HTMLSlotElement"* %1) #10
  %6 = getelementptr inbounds %"class.blink::HeapVector.685", %"class.blink::HeapVector.685"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector.685", %"class.blink::HeapVector.685"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::StyleInvalidator", %"class.blink::StyleInvalidator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %16 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %92, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void

22:                                               ; preds = %13, %92
  %23 = phi %"class.blink::Member.2"* [ %7, %13 ], [ %93, %92 ]
  %24 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 98304
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq %"class.blink::Node"* %25, null
  %31 = or i1 %30, %29
  br i1 %31, label %92, label %32

32:                                               ; preds = %22
  %33 = and i32 %27, 12
  %34 = icmp eq i32 %33, 0
  %35 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  br i1 %34, label %36, label %92

36:                                               ; preds = %32
  %37 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %14, align 8
  %38 = load i32, i32* %15, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %92, label %42

42:                                               ; preds = %36, %51
  %43 = phi %"class.blink::InvalidationSet"** [ %52, %51 ], [ %37, %36 ]
  %44 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %44, i64 0, i32 6, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 16
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  %50 = call zeroext i1 @_ZNK5blink15InvalidationSet18InvalidatesElementERNS_7ElementE(%"class.blink::InvalidationSet"* %44, %"class.blink::Element"* dereferenceable(104) %35) #10
  br i1 %50, label %54, label %51

51:                                               ; preds = %49, %42
  %52 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %43, i64 1
  %53 = icmp eq %"class.blink::InvalidationSet"** %52, %40
  br i1 %53, label %92, label %42

54:                                               ; preds = %49
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #10
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  call void @llvm.trap() #10
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %54, %58, %73
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleInvalidatorE, i64 0, i64 0), i8** %19, align 8
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %20, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %55, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #10
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %92

92:                                               ; preds = %51, %32, %36, %91, %22
  %93 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %23, i64 1
  %94 = icmp eq %"class.blink::Member.2"* %93, %11
  br i1 %94, label %21, label %22
}

declare void @_ZN5blink15HTMLSlotElement22FlattenedAssignedNodesEv(%"class.blink::HeapVector.685"* sret, %"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.20"*, %"class.blink::InvalidationSet"**) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::InvalidationSet"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15InvalidationSet16HasEmptyBackingsEv(%"class.blink::InvalidationSet"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink25NthSiblingInvalidationSetELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.24"*, %"class.blink::NthSiblingInvalidationSet"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %6, align 8
  %8 = icmp ugt %"class.blink::NthSiblingInvalidationSet"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %7, i64 %10
  %12 = icmp ugt %"class.blink::NthSiblingInvalidationSet"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::NthSiblingInvalidationSet"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink25NthSiblingInvalidationSetEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink25NthSiblingInvalidationSetEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::NthSiblingInvalidationSet"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::NthSiblingInvalidationSet"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::NthSiblingInvalidationSet"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.24"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::NthSiblingInvalidationSet"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::NthSiblingInvalidationSet"** %1 to i64
  %56 = ptrtoint %"class.blink::NthSiblingInvalidationSet"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.24", %"class.WTF::Vector.24"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::NthSiblingInvalidationSet"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink25NthSiblingInvalidationSetEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink25NthSiblingInvalidationSetEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::NthSiblingInvalidationSet"**, %"class.blink::NthSiblingInvalidationSet"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::NthSiblingInvalidationSet"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::NthSiblingInvalidationSet"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.24"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.24"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::NthSiblingInvalidationSet"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::NthSiblingInvalidationSet"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::NthSiblingInvalidationSet"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::NthSiblingInvalidationSet"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::NthSiblingInvalidationSet"*, %"class.blink::NthSiblingInvalidationSet"** %100, i64 %103
  %105 = bitcast %"class.blink::NthSiblingInvalidationSet"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::NthSiblingInvalidationSet"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink25NthSiblingInvalidationSetEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZNK5blink16StyleInvalidator30MatchesCurrentInvalidationSetsERNS1_7ElementEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.1182* dereferenceable(8)) local_unnamed_addr #7 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = tail call i8* @_Znwm(i64 192) #11
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #10
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #10
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #10
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #10
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #10
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #10
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #10
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #10
  %38 = getelementptr inbounds %class.anon.1182, %class.anon.1182* %10, i64 0, i32 0
  %39 = load %"class.blink::Element"*, %"class.blink::Element"** %38, align 8
  call void @_ZN5blink44inspector_style_invalidator_invalidate_event4DataEN8perfetto11TracedValueERNS_7ElementEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::Element"* dereferenceable(104) %39, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink44inspector_style_invalidator_invalidate_event23kInvalidateCustomPseudoE, i64 0, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  %40 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #10
  %41 = load i8, i8* %15, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %77, label %43

43:                                               ; preds = %11, %72
  %44 = phi i64 [ %73, %72 ], [ 0, %11 ]
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 8
  br i1 %47, label %48, label %59

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %44
  %50 = bitcast %"union.base::trace_event::TraceValue"* %49 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %51 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %50, align 8
  %52 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %51, null
  br i1 %52, label %72, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %51 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %55 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %55, i64 1
  %57 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %56, align 8
  call void %57(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %51) #10
  %58 = load i8, i8* %45, align 1
  br label %59

59:                                               ; preds = %53, %43
  %60 = phi i8 [ %46, %43 ], [ %58, %53 ]
  %61 = icmp eq i8 %60, 9
  br i1 %61, label %62, label %72

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %44
  %64 = bitcast %"union.base::trace_event::TraceValue"* %63 to %"class.protozero::HeapBuffered"**
  %65 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %64, align 8
  %66 = icmp eq %"class.protozero::HeapBuffered"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %65, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %68) #10
  %69 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %65, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %69) #10
  %70 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %65, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %70) #10
  %71 = bitcast %"class.protozero::HeapBuffered"* %65 to i8*
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %67, %62, %59, %48
  %73 = add nuw nsw i64 %44, 1
  %74 = load i8, i8* %15, align 8
  %75 = zext i8 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %43, label %77

77:                                               ; preds = %72, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  ret i64 %40
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !4

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !6

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !7

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #11
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #11, !noalias !8
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !8
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #11
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink44inspector_style_invalidator_invalidate_event4DataEN8perfetto11TracedValueERNS_7ElementEPKc(%"class.perfetto::TracedValue"*, %"class.blink::Element"* dereferenceable(104), i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NodeInvalidationSetsD2Ev(%"class.blink::NodeInvalidationSets"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %5 = icmp eq %class.scoped_refptr* %4, null
  br i1 %5, label %33, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 %12
  br label %14

14:                                               ; preds = %25, %11
  %15 = phi %class.scoped_refptr* [ %26, %25 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %16, align 8
  %18 = icmp eq %"class.blink::InvalidationSet"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #10
  %21 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %17) #10
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 1
  %27 = icmp eq %class.scoped_refptr* %26, %13
  br i1 %27, label %28, label %14

28:                                               ; preds = %25
  store i32 0, i32* %8, align 4
  %29 = bitcast %"class.WTF::Vector"* %2 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %6
  %32 = phi i8* [ %30, %28 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #10
  store %class.scoped_refptr* null, %class.scoped_refptr** %3, align 8
  br label %33

33:                                               ; preds = %1, %31
  %34 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.scoped_refptr*, %class.scoped_refptr** %34, align 8
  %36 = icmp eq %class.scoped_refptr* %35, null
  br i1 %36, label %64, label %37, !prof !2

37:                                               ; preds = %33
  %38 = bitcast %class.scoped_refptr* %35 to i8*
  %39 = getelementptr inbounds %"class.blink::NodeInvalidationSets", %"class.blink::NodeInvalidationSets"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %62, label %42, !prof !3

42:                                               ; preds = %37
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 %43
  br label %45

45:                                               ; preds = %56, %42
  %46 = phi %class.scoped_refptr* [ %57, %56 ], [ %35, %42 ]
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 0, i32 0
  %48 = load %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %47, align 8
  %49 = icmp eq %"class.blink::InvalidationSet"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #10
  %52 = getelementptr inbounds %"class.blink::InvalidationSet", %"class.blink::InvalidationSet"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"* nonnull %48) #10
  br label %56

56:                                               ; preds = %55, %50, %45
  %57 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 1
  %58 = icmp eq %class.scoped_refptr* %57, %44
  br i1 %58, label %59, label %45

59:                                               ; preds = %56
  store i32 0, i32* %39, align 4
  %60 = bitcast %"class.blink::NodeInvalidationSets"* %0 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %37
  %63 = phi i8* [ %61, %59 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #10
  store %class.scoped_refptr* null, %class.scoped_refptr** %34, align 8
  br label %64

64:                                               ; preds = %33, %62
  ret void
}

declare void @_ZN5blink22InvalidationSetDeleter8DestructEPKNS_15InvalidationSetE(%"class.blink::InvalidationSet"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.19"*, %"class.blink::InvalidationSet"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %6, align 8
  %8 = icmp ugt %"class.blink::InvalidationSet"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %7, i64 %10
  %12 = icmp ugt %"class.blink::InvalidationSet"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"* %0, i32 %5) #10
  %14 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::InvalidationSet"** %1 to i64
  %17 = ptrtoint %"class.blink::InvalidationSet"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"* %0, i32 %5) #10
  %20 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::InvalidationSet"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::InvalidationSet"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::InvalidationSet"*, %"class.blink::InvalidationSet"** %23, i64 %26
  %28 = bitcast %"class.blink::InvalidationSet"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::InvalidationSet"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %31, align 8
  %33 = icmp eq %"class.blink::InvalidationSet"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink15InvalidationSetEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink15InvalidationSetEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 16, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.19"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %5, align 8
  %7 = icmp eq %"class.blink::InvalidationSet"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::InvalidationSet"**
  %10 = icmp eq %"class.blink::InvalidationSet"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::InvalidationSet"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.20"* %19, %"class.blink::InvalidationSet"** nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink15InvalidationSetEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink15InvalidationSetEEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::InvalidationSet"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::InvalidationSet"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #10
  %46 = load %"class.blink::InvalidationSet"**, %"class.blink::InvalidationSet"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::InvalidationSet"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::InvalidationSet"**
  %51 = icmp eq %"class.blink::InvalidationSet"** %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink15InvalidationSetELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.20"* %53, %"class.blink::InvalidationSet"** %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink15InvalidationSetEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.673"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %6, align 8
  %8 = icmp ugt %"struct.blink::StyleInvalidator::SiblingData::Entry"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::StyleInvalidator::SiblingData::Entry"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.673"* %0, i32 %5) #10
  %14 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::StyleInvalidator::SiblingData::Entry"* %1 to i64
  %17 = ptrtoint %"struct.blink::StyleInvalidator::SiblingData::Entry"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 4
  tail call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.673"* %0, i32 %5) #10
  %20 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::StyleInvalidator::SiblingData::Entry"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::StyleInvalidator::SiblingData::Entry"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %23, i64 %26
  %28 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %27 to i8*
  %29 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #10
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.673"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %31, align 8
  %33 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16StyleInvalidator11SiblingData5EntryEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16StyleInvalidator11SiblingData5EntryEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 16, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.673"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.673"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %5, align 8
  %7 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::StyleInvalidator::SiblingData::Entry"*
  %10 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"* %19, %"struct.blink::StyleInvalidator::SiblingData::Entry"* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16StyleInvalidator11SiblingData5EntryEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16StyleInvalidator11SiblingData5EntryEEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::StyleInvalidator::SiblingData::Entry"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::StyleInvalidator::SiblingData::Entry"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #10
  %46 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::StyleInvalidator::SiblingData::Entry"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::StyleInvalidator::SiblingData::Entry"*
  %51 = icmp eq %"struct.blink::StyleInvalidator::SiblingData::Entry"* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.674"* %53, %"struct.blink::StyleInvalidator::SiblingData::Entry"* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.673"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16StyleInvalidator11SiblingData5EntryEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::StyleInvalidator::SiblingData::Entry"* @_ZN3WTF6VectorIN5blink16StyleInvalidator11SiblingData5EntryELj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.673"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.673", %"class.WTF::Vector.673"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::StyleInvalidator::SiblingData::Entry"*, %"struct.blink::StyleInvalidator::SiblingData::Entry"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::StyleInvalidator::SiblingData::Entry", %"struct.blink::StyleInvalidator::SiblingData::Entry"* %24, i64 %25
  ret %"struct.blink::StyleInvalidator::SiblingData::Entry"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13ContainerNodeEEENS_12KeyValuePairIS4_NS1_20NodeInvalidationSetsEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::ContainerNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ContainerNode"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %34, align 8
  %36 = icmp eq %"class.blink::ContainerNode"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %54, align 8
  %56 = icmp eq %"class.blink::ContainerNode"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %63, align 8
  %65 = icmp eq %"class.blink::ContainerNode"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN5blink44inspector_style_invalidator_invalidate_event16InvalidationListEN8perfetto11TracedValueERNS_13ContainerNodeERKN3WTF6VectorI13scoped_refptrINS_15InvalidationSetEELj0ENS5_18PartitionAllocatorEEE(%"class.perfetto::TracedValue"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
