; ModuleID = '../../components/background_task_scheduler/task_info.cc'
source_filename = "../../components/background_task_scheduler/task_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.background_task::PeriodicInfo" = type <{ i64, i64, i8, [7 x i8] }>
%"struct.background_task::OneOffInfo" = type <{ i64, i64, i8, [7 x i8] }>
%"struct.background_task::ExactInfo" = type { i64 }
%"struct.background_task::TaskInfo" = type { i32, i32, i8, i8, i8, %"class.std::__1::basic_string", %"class.absl::optional", %"class.absl::optional.2", %"class.absl::optional.7" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.1 }
%union.anon.1 = type { %"struct.background_task::PeriodicInfo" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, [7 x i8], %union.anon.6 }
%union.anon.6 = type { %"struct.background_task::OneOffInfo" }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"struct.background_task::ExactInfo" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN15background_task12PeriodicInfoC1Ev = hidden unnamed_addr alias void (%"struct.background_task::PeriodicInfo"*), void (%"struct.background_task::PeriodicInfo"*)* @_ZN15background_task12PeriodicInfoC2Ev
@_ZN15background_task12PeriodicInfoD1Ev = hidden unnamed_addr alias void (%"struct.background_task::PeriodicInfo"*), void (%"struct.background_task::PeriodicInfo"*)* @_ZN15background_task12PeriodicInfoD2Ev
@_ZN15background_task10OneOffInfoC1Ev = hidden unnamed_addr alias void (%"struct.background_task::OneOffInfo"*), void (%"struct.background_task::OneOffInfo"*)* @_ZN15background_task10OneOffInfoC2Ev
@_ZN15background_task10OneOffInfoD1Ev = hidden unnamed_addr alias void (%"struct.background_task::OneOffInfo"*), void (%"struct.background_task::OneOffInfo"*)* @_ZN15background_task10OneOffInfoD2Ev
@_ZN15background_task9ExactInfoC1Ev = hidden unnamed_addr alias void (%"struct.background_task::ExactInfo"*), void (%"struct.background_task::ExactInfo"*)* @_ZN15background_task9ExactInfoC2Ev
@_ZN15background_task9ExactInfoD1Ev = hidden unnamed_addr alias void (%"struct.background_task::ExactInfo"*), void (%"struct.background_task::ExactInfo"*)* @_ZN15background_task9ExactInfoD2Ev
@_ZN15background_task8TaskInfoC1EiRKNS_12PeriodicInfoE = hidden unnamed_addr alias void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::PeriodicInfo"*), void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::PeriodicInfo"*)* @_ZN15background_task8TaskInfoC2EiRKNS_12PeriodicInfoE
@_ZN15background_task8TaskInfoC1EiRKNS_10OneOffInfoE = hidden unnamed_addr alias void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::OneOffInfo"*), void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::OneOffInfo"*)* @_ZN15background_task8TaskInfoC2EiRKNS_10OneOffInfoE
@_ZN15background_task8TaskInfoC1EiRKNS_9ExactInfoE = hidden unnamed_addr alias void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::ExactInfo"*), void (%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::ExactInfo"*)* @_ZN15background_task8TaskInfoC2EiRKNS_9ExactInfoE
@_ZN15background_task8TaskInfoD1Ev = hidden unnamed_addr alias void (%"struct.background_task::TaskInfo"*), void (%"struct.background_task::TaskInfo"*)* @_ZN15background_task8TaskInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15background_task12PeriodicInfoC2Ev(%"struct.background_task::PeriodicInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.background_task::PeriodicInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15background_task12PeriodicInfoD2Ev(%"struct.background_task::PeriodicInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15background_task10OneOffInfoC2Ev(%"struct.background_task::OneOffInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.background_task::OneOffInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15background_task10OneOffInfoD2Ev(%"struct.background_task::OneOffInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15background_task9ExactInfoC2Ev(%"struct.background_task::ExactInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.background_task::ExactInfo", %"struct.background_task::ExactInfo"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15background_task9ExactInfoD2Ev(%"struct.background_task::ExactInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15background_task8TaskInfoC2EiRKNS_12PeriodicInfoE(%"struct.background_task::TaskInfo"* nocapture, i32, %"struct.background_task::PeriodicInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 7, i1 false)
  store i8 1, i8* %8, align 8
  %10 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0
  %11 = bitcast %"struct.background_task::PeriodicInfo"* %10 to i8*
  %12 = bitcast %"struct.background_task::PeriodicInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #5
  %13 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %union.anon.6* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15background_task8TaskInfoC2EiRKNS_10OneOffInfoE(%"struct.background_task::TaskInfo"* nocapture, i32, %"struct.background_task::OneOffInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %union.anon.1* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #5
  %9 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 7, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false)
  store i8 1, i8* %9, align 8
  %12 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = bitcast %"struct.background_task::OneOffInfo"* %12 to i8*
  %14 = bitcast %"struct.background_task::OneOffInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #5
  %15 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15background_task8TaskInfoC2EiRKNS_9ExactInfoE(%"struct.background_task::TaskInfo"* nocapture, i32, %"struct.background_task::ExactInfo"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %union.anon.6* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #5
  %10 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 7, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  %13 = bitcast %union.anon.1* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  store i8 1, i8* %10, align 8
  %14 = getelementptr inbounds %"struct.background_task::ExactInfo", %"struct.background_task::ExactInfo"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15background_task8TaskInfoD2Ev(%"struct.background_task::TaskInfo"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i8 0, i8* %7, align 8
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store i8 0, i8* %12, align 8
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %0, i64 0, i32 5
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #6
  br label %25

25:                                               ; preds = %16, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
