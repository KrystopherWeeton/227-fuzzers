; ModuleID = '../../base/third_party/libevent/evdns.c'
source_filename = "../../base/third_party/libevent/evdns.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.nameserver = type { i32, i32, i16, i32, i32, %struct.event, %struct.nameserver*, %struct.nameserver*, %struct.event, i8, i8, i8 }
%struct.event = type { %struct.anon, %struct.anon.0, %struct.anon.1, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon = type { %struct.event*, %struct.event** }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.event_base = type opaque
%struct.timeval = type { i64, i64 }
%struct.request = type { i8*, i32, i32, i32, i32, i8*, void (i32, i8, i32, i32, i8*, i8*)*, %struct.nameserver*, i32, %struct.search_state*, i8*, i32, %struct.request*, %struct.request*, %struct.event, i16, i8, i8 }
%struct.search_state = type { i32, i32, i32, %struct.search_domain* }
%struct.search_domain = type { i32, %struct.search_domain* }
%struct.timespec = type { i64, i64 }
%struct.evdns_server_port = type { i32, i32, i8, i8, void (%struct.evdns_server_request*, i8*)*, i8*, %struct.event, %struct.server_request* }
%struct.server_request = type { %struct.server_request*, %struct.server_request*, i16, %struct.evdns_server_port*, %struct.sockaddr_storage, i32, i32, i32, i32, %struct.server_reply_item*, %struct.server_reply_item*, %struct.server_reply_item*, i8*, i64, %struct.evdns_server_request }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.server_reply_item = type { %struct.server_reply_item*, i8*, i32, i32, i8, i16, i8* }
%struct.evdns_server_request = type { i32, i32, %struct.evdns_server_question** }
%struct.evdns_server_question = type { i32, i32, [1 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.in_addr = type { i32 }
%struct.dnslabel_table = type { i32, [128 x %struct.dnslabel_entry] }
%struct.dnslabel_entry = type { i8*, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.reply = type { i32, i32, %union.anon.2 }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, [32 x %struct.in6_addr] }

@evdns_log_fn = internal unnamed_addr global void (i32, i8*)* null, align 8
@trans_id_function = internal unnamed_addr global i16 ()* @default_transaction_id_fn, align 8
@.str = private unnamed_addr constant [25 x i8] c"%d.%d.%d.%d.in-addr.arpa\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"Error from libevent when adding event for DNS server\00", align 1
@server_head = internal unnamed_addr global %struct.nameserver* null, align 8
@req_head = internal global %struct.request* null, align 8
@global_good_nameservers = internal unnamed_addr global i32 0, align 4
@global_requests_waiting = internal unnamed_addr global i32 0, align 4
@req_waiting_head = internal global %struct.request* null, align 8
@global_requests_inflight = internal unnamed_addr global i32 0, align 4
@.str.2 = private unnamed_addr constant [25 x i8] c"Resolve requested for %s\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Resolve requested for %s (reverse)\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ip6.arpa\00", align 1
@global_search_state = internal unnamed_addr global %struct.search_state* null, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"ndots:\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"Setting ndots to %d\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"timeout:\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"Setting timeout to %d\00", align 1
@global_timeout = internal global %struct.timeval { i64 5, i64 0 }, align 8
@.str.10 = private unnamed_addr constant [14 x i8] c"max-timeouts:\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"Setting maximum allowed timeouts to %d\00", align 1
@global_max_nameserver_timeout = internal unnamed_addr global i32 3, align 4
@.str.12 = private unnamed_addr constant [14 x i8] c"max-inflight:\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"Setting maximum inflight requests to %d\00", align 1
@global_max_requests_inflight = internal unnamed_addr global i32 64, align 4
@.str.14 = private unnamed_addr constant [10 x i8] c"attempts:\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"Setting retries to %d\00", align 1
@global_max_retransmits = internal unnamed_addr global i32 3, align 4
@.str.16 = private unnamed_addr constant [28 x i8] c"Parsing resolv.conf file %s\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"/etc/resolv.conf\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"no error\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"misformatted query\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"server failed\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"name does not exist\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"query not implemented\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"refused\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"reply truncated or ill-formed\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"request timed out\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"dns subsystem shut down\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"[Unknown error code]\00", align 1
@default_transaction_id_fn.clkid = internal unnamed_addr global i32 -1, align 4
@.str.30 = private unnamed_addr constant [14 x i8] c"clock_gettime\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"Error %s (%d) while reading request.\00", align 1
@_evdns_log.buf = internal global [512 x i8] zeroinitializer, align 16
@.str.32 = private unnamed_addr constant [55 x i8] c"Error %s (%d) while writing response to port; dropping\00", align 1
@.str.33 = private unnamed_addr constant [54 x i8] c"Error from libevent when adding event for DNS server.\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"Setting timeout for request %lx\00", align 1
@.str.35 = private unnamed_addr constant [54 x i8] c"Error from libevent when adding timer for request %lx\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"Nameserver %s has failed: %s\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"All nameservers have failed\00", align 1
@global_nameserver_timeouts = internal constant [5 x %struct.timeval] [%struct.timeval { i64 10, i64 0 }, %struct.timeval { i64 60, i64 0 }, %struct.timeval { i64 300, i64 0 }, %struct.timeval { i64 900, i64 0 }, %struct.timeval { i64 3600, i64 0 }], align 16
@.str.38 = private unnamed_addr constant [51 x i8] c"Error from libevent when adding timer event for %s\00", align 1
@debug_ntoa.buf = internal global [32 x i8] zeroinitializer, align 16
@.str.39 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.40 = private unnamed_addr constant [45 x i8] c"Error from libevent when adding event for %s\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c"Address mismatch on received DNS packet.\00", align 1
@reply_handle.error_codes = internal unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@.str.42 = private unnamed_addr constant [21 x i8] c"Bad response %d (%s)\00", align 1
@.str.43 = private unnamed_addr constant [75 x i8] c"Got a SERVERFAILED from nameserver %s; will allow the request to time out.\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"Nameserver %s is back up\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"Search: trying raw query %s\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"Search: now trying %s (%d)\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"fcntl(%d, F_SETFD)\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"Added nameserver %s\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"Unable to add nameserver %s: error %d\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"Sending probe to %s\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"www.google.com\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"Request %lx timed out\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"request timed out.\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"nameserver\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"domain\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.59 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"Removing timeout for request %lx\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evdns_set_log_fn(void (i32, i8*)*) local_unnamed_addr #0 {
  store void (i32, i8*)* %0, void (i32, i8*)** @evdns_log_fn, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @evdns_set_transaction_id_fn(i16 ()*) local_unnamed_addr #0 {
  %2 = icmp eq i16 ()* %0, null
  %3 = select i1 %2, i16 ()* @default_transaction_id_fn, i16 ()* %0
  store i16 ()* %3, i16 ()** @trans_id_function, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i16 @default_transaction_id_fn() #1 {
  %1 = alloca %struct.timespec, align 8
  %2 = bitcast %struct.timespec* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #12
  %3 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i64 0, i32 1
  %4 = bitcast %struct.timespec* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  %5 = load i32, i32* @default_transaction_id_fn.clkid, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %13

7:                                                ; preds = %0
  store i32 0, i32* @default_transaction_id_fn.clkid, align 4
  %8 = call i32 @clock_gettime(i32 1, %struct.timespec* nonnull %1) #12
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = load i32, i32* @default_transaction_id_fn.clkid, align 4
  br label %13

12:                                               ; preds = %7
  store i32 1, i32* @default_transaction_id_fn.clkid, align 4
  br label %13

13:                                               ; preds = %10, %12, %0
  %14 = phi i32 [ %11, %10 ], [ 1, %12 ], [ %5, %0 ]
  %15 = call i32 @clock_gettime(i32 %14, %struct.timespec* nonnull %1) #12
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0)) #12
  br label %18

18:                                               ; preds = %17, %13
  %19 = load i64, i64* %3, align 8
  %20 = trunc i64 %19 to i16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #12
  ret i16 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evdns_server_port* @evdns_add_server_port(i32, i32, void (%struct.evdns_server_request*, i8*)*, i8*) local_unnamed_addr #1 {
  %5 = tail call noalias i8* @malloc(i64 168) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %struct.evdns_server_port*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 160, i1 false)
  %9 = bitcast i8* %5 to i32*
  store i32 %0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 4
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %5, i64 16
  %15 = bitcast i8* %14 to void (%struct.evdns_server_request*, i8*)**
  store void (%struct.evdns_server_request*, i8*)* %2, void (%struct.evdns_server_request*, i8*)** %15, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 24
  %17 = bitcast i8* %16 to i8**
  store i8* %3, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 160
  %19 = bitcast i8* %18 to %struct.server_request**
  store %struct.server_request* null, %struct.server_request** %19, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 32
  %21 = bitcast i8* %20 to %struct.event*
  tail call void @event_set(%struct.event* %21, i32 %0, i16 signext 18, void (i32, i16, i8*)* nonnull @server_port_ready_callback, i8* nonnull %5) #12
  %22 = tail call i32 @event_add(%struct.event* %21, %struct.timeval* null) #12
  br label %23

23:                                               ; preds = %4, %7
  %24 = phi %struct.evdns_server_port* [ %8, %7 ], [ null, %4 ]
  ret %struct.evdns_server_port* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @server_port_ready_callback(i32, i16 signext, i8*) #1 {
  %4 = alloca [256 x i8], align 16
  %5 = alloca [1500 x i8], align 16
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = sext i16 %1 to i32
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast i8* %2 to %struct.evdns_server_port*
  %13 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 0, i8* %13, align 8
  tail call fastcc void @server_port_flush(%struct.evdns_server_port* %12)
  br label %14

14:                                               ; preds = %3, %11
  %15 = and i32 %8, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %232, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1500, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 1500, i1 false) #12
  %19 = bitcast %struct.sockaddr_storage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 128, i1 false) #12
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  store i32 128, i32* %7, align 4
  %21 = bitcast i8* %2 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  %24 = call i64 @recvfrom(i32 %22, i8* nonnull %18, i64 1500, i32 0, %struct.sockaddr* nonnull %23, i32* nonnull %7) #12
  %25 = trunc i64 %24 to i32
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  %29 = bitcast [1500 x i8]* %5 to i16*
  %30 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 2
  %31 = bitcast i8* %30 to i16*
  %32 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 4
  %33 = bitcast i8* %32 to i16*
  %34 = getelementptr inbounds i8, i8* %2, i64 4
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds i8, i8* %2, i64 16
  %37 = bitcast i8* %36 to void (%struct.evdns_server_request*, i8*)**
  %38 = getelementptr inbounds i8, i8* %2, i64 24
  %39 = bitcast i8* %38 to i8**
  br label %46

40:                                               ; preds = %226, %17
  %41 = tail call i32* @__errno_location() #16
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 11
  br i1 %43, label %231, label %44

44:                                               ; preds = %40
  %45 = call i8* @strerror(i32 %42) #12
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0), i8* %45, i32 %42) #12
  br label %231

46:                                               ; preds = %226, %27
  %47 = phi i32 [ %25, %27 ], [ %229, %226 ]
  %48 = load i32, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %28) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 256, i1 false) #12
  %49 = icmp slt i32 %47, 2
  br i1 %49, label %226, label %50

50:                                               ; preds = %46
  %51 = load i16, i16* %29, align 16
  %52 = call i16 @llvm.bswap.i16(i16 %51) #12
  %53 = icmp slt i32 %47, 4
  br i1 %53, label %226, label %54

54:                                               ; preds = %50
  %55 = load i16, i16* %31, align 2
  %56 = call i16 @llvm.bswap.i16(i16 %55) #12
  %57 = icmp slt i32 %47, 6
  br i1 %57, label %226, label %58

58:                                               ; preds = %54
  %59 = load i16, i16* %33, align 4
  %60 = call i16 @llvm.bswap.i16(i16 %59) #12
  %61 = icmp slt i32 %47, 12
  %62 = icmp slt i16 %56, 0
  %63 = or i1 %61, %62
  br i1 %63, label %226, label %64

64:                                               ; preds = %58
  %65 = call noalias i8* @malloc(i64 232) #12
  %66 = icmp eq i8* %65, null
  br i1 %66, label %226, label %67

67:                                               ; preds = %64
  %68 = and i16 %56, 272
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 216, i1 false) #12
  %69 = getelementptr inbounds i8, i8* %65, i64 16
  %70 = bitcast i8* %69 to i16*
  store i16 %52, i16* %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 32
  %72 = zext i32 %48 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %19, i64 %72, i1 false) #12
  %73 = getelementptr inbounds i8, i8* %65, i64 160
  %74 = bitcast i8* %73 to i32*
  store i32 %48, i32* %74, align 8
  %75 = zext i16 %68 to i32
  %76 = getelementptr inbounds i8, i8* %65, i64 216
  %77 = bitcast i8* %76 to %struct.evdns_server_request*
  %78 = bitcast i8* %76 to i32*
  store i32 %75, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %65, i64 220
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 4
  %81 = zext i16 %60 to i64
  %82 = shl nuw nsw i64 %81, 3
  %83 = call noalias i8* @malloc(i64 %82) #12
  %84 = getelementptr inbounds i8, i8* %65, i64 224
  %85 = bitcast i8* %84 to %struct.evdns_server_question***
  %86 = bitcast i8* %84 to i8**
  store i8* %83, i8** %86, align 8
  %87 = icmp eq i8* %83, null
  %88 = bitcast i8* %83 to %struct.evdns_server_question**
  br i1 %87, label %205, label %89

89:                                               ; preds = %67
  %90 = zext i16 %60 to i32
  %91 = icmp eq i16 %59, 0
  br i1 %91, label %196, label %92

92:                                               ; preds = %89, %178
  %93 = phi i32 [ %194, %178 ], [ 0, %89 ]
  %94 = phi i32 [ %165, %178 ], [ 12, %89 ]
  %95 = icmp slt i32 %94, %47
  br i1 %95, label %96, label %203

96:                                               ; preds = %92, %146
  %97 = phi i64 [ %150, %146 ], [ 0, %92 ]
  %98 = phi i32 [ %149, %146 ], [ 0, %92 ]
  %99 = phi i32 [ %148, %146 ], [ %94, %92 ]
  %100 = phi i32 [ %147, %146 ], [ -1, %92 ]
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %97
  %102 = add nsw i32 %99, 1
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %152, label %107

107:                                              ; preds = %96
  %108 = zext i8 %105 to i32
  %109 = and i32 %108, 192
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %107
  %112 = icmp slt i32 %102, %47
  br i1 %112, label %113, label %203

113:                                              ; preds = %111
  %114 = sext i32 %102 to i64
  %115 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = shl nuw nsw i32 %108, 8
  %118 = and i32 %117, 16128
  %119 = zext i8 %116 to i32
  %120 = or i32 %118, %119
  %121 = icmp slt i32 %120, %47
  br i1 %121, label %122, label %203

122:                                              ; preds = %113
  %123 = icmp slt i32 %100, 0
  %124 = add nsw i32 %99, 2
  %125 = select i1 %123, i32 %124, i32 %100
  %126 = add nsw i32 %98, 1
  %127 = icmp slt i32 %98, %47
  br i1 %127, label %146, label %203

128:                                              ; preds = %107
  %129 = icmp ugt i8 %105, 63
  br i1 %129, label %203, label %130

130:                                              ; preds = %128
  %131 = icmp eq i64 %97, 0
  br i1 %131, label %136, label %132

132:                                              ; preds = %130
  %133 = add nsw i64 %97, 1
  %134 = icmp slt i64 %133, 256
  br i1 %134, label %135, label %203

135:                                              ; preds = %132
  store i8 46, i8* %101, align 1
  br label %136

136:                                              ; preds = %135, %130
  %137 = phi i64 [ %133, %135 ], [ 0, %130 ]
  %138 = zext i8 %105 to i64
  %139 = add nsw i64 %137, %138
  %140 = icmp slt i64 %139, 256
  br i1 %140, label %141, label %203

141:                                              ; preds = %136
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %137
  %143 = sext i32 %102 to i64
  %144 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* align 1 %144, i64 %138, i1 false) #12
  %145 = add nsw i32 %102, %108
  br label %146

146:                                              ; preds = %141, %122
  %147 = phi i32 [ %100, %141 ], [ %125, %122 ]
  %148 = phi i32 [ %145, %141 ], [ %120, %122 ]
  %149 = phi i32 [ %98, %141 ], [ %126, %122 ]
  %150 = phi i64 [ %139, %141 ], [ %97, %122 ]
  %151 = icmp slt i32 %148, %47
  br i1 %151, label %96, label %203

152:                                              ; preds = %96
  %153 = icmp slt i64 %97, 256
  br i1 %153, label %154, label %203

154:                                              ; preds = %152
  store i8 0, i8* %101, align 1
  %155 = icmp slt i32 %100, 0
  %156 = select i1 %155, i32 %102, i32 %100
  %157 = add nsw i32 %156, 2
  %158 = icmp sgt i32 %157, %47
  br i1 %158, label %203, label %159

159:                                              ; preds = %154
  %160 = sext i32 %156 to i64
  %161 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %160
  %162 = bitcast i8* %161 to i16*
  %163 = load i16, i16* %162, align 1
  %164 = call i16 @llvm.bswap.i16(i16 %163) #12
  %165 = add nsw i32 %156, 4
  %166 = icmp sgt i32 %165, %47
  br i1 %166, label %203, label %167

167:                                              ; preds = %159
  %168 = sext i32 %157 to i64
  %169 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %168
  %170 = bitcast i8* %169 to i16*
  %171 = load i16, i16* %170, align 1
  %172 = call i64 @strlen(i8* nonnull %28) #17
  %173 = shl i64 %172, 32
  %174 = ashr exact i64 %173, 32
  %175 = add nsw i64 %174, 12
  %176 = call noalias i8* @malloc(i64 %175) #12
  %177 = icmp eq i8* %176, null
  br i1 %177, label %203, label %178

178:                                              ; preds = %167
  %179 = call i16 @llvm.bswap.i16(i16 %171) #12
  %180 = zext i16 %164 to i32
  %181 = bitcast i8* %176 to i32*
  store i32 %180, i32* %181, align 4
  %182 = zext i16 %179 to i32
  %183 = getelementptr inbounds i8, i8* %176, i64 4
  %184 = bitcast i8* %183 to i32*
  store i32 %182, i32* %184, align 4
  %185 = getelementptr inbounds i8, i8* %176, i64 8
  %186 = add i64 %173, 4294967296
  %187 = ashr exact i64 %186, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* nonnull align 16 %28, i64 %187, i1 false) #12
  %188 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %85, align 8
  %189 = load i32, i32* %80, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %80, align 4
  %191 = sext i32 %189 to i64
  %192 = getelementptr inbounds %struct.evdns_server_question*, %struct.evdns_server_question** %188, i64 %191
  %193 = bitcast %struct.evdns_server_question** %192 to i8**
  store i8* %176, i8** %193, align 8
  %194 = add nuw nsw i32 %93, 1
  %195 = icmp ult i32 %194, %90
  br i1 %195, label %92, label %196

196:                                              ; preds = %178, %89
  %197 = getelementptr inbounds i8, i8* %65, i64 24
  %198 = bitcast i8* %197 to i8**
  store i8* %2, i8** %198, align 8
  %199 = load i32, i32* %35, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %35, align 4
  %201 = load void (%struct.evdns_server_request*, i8*)*, void (%struct.evdns_server_request*, i8*)** %37, align 8
  %202 = load i8*, i8** %39, align 8
  call void %201(%struct.evdns_server_request* %77, i8* %202) #12
  br label %226

203:                                              ; preds = %167, %159, %154, %152, %92, %146, %136, %132, %128, %122, %113, %111
  %204 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %85, align 8
  br label %205

205:                                              ; preds = %203, %67
  %206 = phi %struct.evdns_server_question** [ %204, %203 ], [ %88, %67 ]
  %207 = icmp eq %struct.evdns_server_question** %206, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %205
  %209 = load i32, i32* %80, align 4
  %210 = icmp sgt i32 %209, 0
  br i1 %210, label %211, label %222

211:                                              ; preds = %208, %211
  %212 = phi i64 [ %217, %211 ], [ 0, %208 ]
  %213 = phi %struct.evdns_server_question** [ %221, %211 ], [ %206, %208 ]
  %214 = getelementptr inbounds %struct.evdns_server_question*, %struct.evdns_server_question** %213, i64 %212
  %215 = bitcast %struct.evdns_server_question** %214 to i8**
  %216 = load i8*, i8** %215, align 8
  call void @free(i8* %216) #12
  %217 = add nuw nsw i64 %212, 1
  %218 = load i32, i32* %80, align 4
  %219 = sext i32 %218 to i64
  %220 = icmp slt i64 %217, %219
  %221 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %85, align 8
  br i1 %220, label %211, label %222

222:                                              ; preds = %211, %208
  %223 = phi %struct.evdns_server_question** [ %206, %208 ], [ %221, %211 ]
  %224 = bitcast %struct.evdns_server_question** %223 to i8*
  call void @free(i8* %224) #12
  br label %225

225:                                              ; preds = %222, %205
  call void @free(i8* %65) #12
  br label %226

226:                                              ; preds = %225, %196, %64, %58, %54, %50, %46
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %28) #12
  store i32 128, i32* %7, align 4
  %227 = load i32, i32* %21, align 8
  %228 = call i64 @recvfrom(i32 %227, i8* nonnull %18, i64 1500, i32 0, %struct.sockaddr* nonnull %23, i32* nonnull %7) #12
  %229 = trunc i64 %228 to i32
  %230 = icmp slt i32 %229, 0
  br i1 %230, label %40, label %46

231:                                              ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %18) #12
  br label %232

232:                                              ; preds = %14, %231
  ret void
}

declare i32 @event_add(%struct.event*, %struct.timeval*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @evdns_close_server_port(%struct.evdns_server_port*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = tail call i32 @close(i32 %8) #12
  store i32 -1, i32* %7, align 8
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 6
  %14 = tail call i32 @event_del(%struct.event* %13) #12
  br label %15

15:                                               ; preds = %12, %1
  %16 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 3
  store i8 1, i8* %16, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_add_reply(%struct.evdns_server_request* nocapture, i32, i8* nocapture readonly, i32, i32, i32, i32, i32, i8* readonly) local_unnamed_addr #1 {
  %10 = getelementptr inbounds %struct.evdns_server_request, %struct.evdns_server_request* %0, i64 -14, i32 2
  %11 = bitcast %struct.evdns_server_question*** %10 to %struct.server_request*
  %12 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %10, i64 25
  %13 = bitcast %struct.evdns_server_question*** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %80

16:                                               ; preds = %9
  switch i32 %1, label %80 [
    i32 0, label %17
    i32 1, label %20
    i32 2, label %24
  ]

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %10, i64 22
  %19 = getelementptr inbounds %struct.server_request, %struct.server_request* %11, i64 0, i32 6
  br label %27

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %10, i64 23
  %22 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %10, i64 21
  %23 = bitcast %struct.evdns_server_question*** %22 to i32*
  br label %27

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %10, i64 24
  %26 = getelementptr inbounds %struct.server_request, %struct.server_request* %11, i64 0, i32 8
  br label %27

27:                                               ; preds = %24, %20, %17
  %28 = phi %struct.evdns_server_question*** [ %25, %24 ], [ %21, %20 ], [ %18, %17 ]
  %29 = phi i32* [ %26, %24 ], [ %23, %20 ], [ %19, %17 ]
  %30 = bitcast %struct.evdns_server_question*** %28 to %struct.server_reply_item**
  br label %31

31:                                               ; preds = %31, %27
  %32 = phi %struct.server_reply_item** [ %30, %27 ], [ %35, %31 ]
  %33 = load %struct.server_reply_item*, %struct.server_reply_item** %32, align 8
  %34 = icmp eq %struct.server_reply_item* %33, null
  %35 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %33, i64 0, i32 0
  br i1 %34, label %36, label %31

36:                                               ; preds = %31
  %37 = tail call noalias i8* @malloc(i64 40) #12
  %38 = icmp eq i8* %37, null
  br i1 %38, label %80, label %39

39:                                               ; preds = %36
  %40 = bitcast i8* %37 to %struct.server_reply_item**
  store %struct.server_reply_item* null, %struct.server_reply_item** %40, align 8
  %41 = tail call noalias i8* @strdup(i8* %2) #12
  %42 = getelementptr inbounds i8, i8* %37, i64 8
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = icmp eq i8* %41, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  tail call void @free(i8* nonnull %37) #12
  br label %80

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %37, i64 16
  %48 = bitcast i8* %47 to i32*
  %49 = and i32 %3, 65535
  %50 = shl i32 %4, 16
  %51 = or i32 %50, %49
  store i32 %51, i32* %48, align 8
  %52 = getelementptr inbounds i8, i8* %37, i64 20
  %53 = bitcast i8* %52 to i32*
  store i32 %5, i32* %53, align 4
  %54 = icmp ne i32 %7, 0
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds i8, i8* %37, i64 24
  store i8 %55, i8* %56, align 8
  %57 = getelementptr inbounds i8, i8* %37, i64 26
  %58 = bitcast i8* %57 to i16*
  store i16 0, i16* %58, align 2
  %59 = getelementptr inbounds i8, i8* %37, i64 32
  %60 = bitcast i8* %59 to i8**
  store i8* null, i8** %60, align 8
  %61 = icmp eq i8* %8, null
  br i1 %61, label %76, label %62

62:                                               ; preds = %46
  br i1 %54, label %63, label %69

63:                                               ; preds = %62
  %64 = tail call noalias i8* @strdup(i8* nonnull %8) #12
  store i8* %64, i8** %60, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8*, i8** %43, align 8
  tail call void @free(i8* %67) #12
  tail call void @free(i8* nonnull %37) #12
  br label %80

68:                                               ; preds = %63
  store i16 -1, i16* %58, align 2
  br label %76

69:                                               ; preds = %62
  %70 = sext i32 %6 to i64
  %71 = tail call noalias i8* @malloc(i64 %70) #12
  store i8* %71, i8** %60, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  tail call void @free(i8* nonnull %41) #12
  tail call void @free(i8* nonnull %37) #12
  br label %80

74:                                               ; preds = %69
  %75 = trunc i32 %6 to i16
  store i16 %75, i16* %58, align 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* nonnull align 1 %8, i64 %70, i1 false)
  br label %76

76:                                               ; preds = %46, %68, %74
  %77 = bitcast %struct.server_reply_item** %32 to i8**
  store i8* %37, i8** %77, align 8
  %78 = load i32, i32* %29, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %29, align 4
  br label %80

80:                                               ; preds = %36, %16, %9, %76, %73, %66, %45
  %81 = phi i32 [ 0, %76 ], [ -1, %66 ], [ -1, %73 ], [ -1, %45 ], [ -1, %9 ], [ -1, %16 ], [ -1, %36 ]
  ret i32 %81
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_add_a_reply(%struct.evdns_server_request* nocapture, i8* nocapture readonly, i32, i8* readonly, i32) local_unnamed_addr #1 {
  %6 = shl nsw i32 %2, 2
  %7 = tail call i32 @evdns_server_request_add_reply(%struct.evdns_server_request* %0, i32 0, i8* %1, i32 1, i32 1, i32 %4, i32 %6, i32 0, i8* %3)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_add_aaaa_reply(%struct.evdns_server_request* nocapture, i8* nocapture readonly, i32, i8* readonly, i32) local_unnamed_addr #1 {
  %6 = shl nsw i32 %2, 4
  %7 = tail call i32 @evdns_server_request_add_reply(%struct.evdns_server_request* %0, i32 0, i8* %1, i32 28, i32 1, i32 %4, i32 %6, i32 0, i8* %3)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_add_ptr_reply(%struct.evdns_server_request* nocapture, %struct.in_addr* readonly, i8* nocapture readonly, i8* readonly, i32) local_unnamed_addr #1 {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = icmp eq %struct.in_addr* %1, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 32, i1 false)
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #12
  %13 = and i32 %12, 255
  %14 = lshr i32 %12, 8
  %15 = and i32 %14, 255
  %16 = lshr i32 %12, 16
  %17 = and i32 %16, 255
  %18 = lshr i32 %12, 24
  %19 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %7, i64 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 %13, i32 %15, i32 %17, i32 %18) #12
  br label %20

20:                                               ; preds = %5, %9
  %21 = phi i8* [ %7, %9 ], [ %2, %5 ]
  %22 = call i32 @evdns_server_request_add_reply(%struct.evdns_server_request* %0, i32 0, i8* %21, i32 12, i32 1, i32 %4, i32 -1, i32 1, i8* %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret i32 %22
}

declare i32 @evutil_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_add_cname_reply(%struct.evdns_server_request* nocapture, i8* nocapture readonly, i8* readonly, i32) local_unnamed_addr #1 {
  %5 = tail call i32 @evdns_server_request_add_reply(%struct.evdns_server_request* %0, i32 0, i8* %1, i32 5, i32 1, i32 %3, i32 -1, i32 1, i8* %2)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_respond(%struct.evdns_server_request*, i32) local_unnamed_addr #1 {
  %3 = alloca [1500 x i8], align 16
  %4 = alloca %struct.dnslabel_table, align 8
  %5 = getelementptr inbounds %struct.evdns_server_request, %struct.evdns_server_request* %0, i64 -14, i32 2
  %6 = bitcast %struct.evdns_server_question*** %5 to %struct.server_request*
  %7 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 3
  %8 = bitcast %struct.evdns_server_question*** %7 to %struct.evdns_server_port**
  %9 = load %struct.evdns_server_port*, %struct.evdns_server_port** %8, align 8
  %10 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 25
  %11 = bitcast %struct.evdns_server_question*** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %241

14:                                               ; preds = %2
  %15 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1500, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 1500, i1 false) #12
  %16 = bitcast %struct.dnslabel_table* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2056, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 2056, i1 false) #12
  %17 = icmp ugt i32 %1, 15
  br i1 %17, label %237, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 27
  %20 = bitcast %struct.evdns_server_question*** %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = or i32 %21, %1
  %23 = trunc i32 %22 to i16
  %24 = or i16 %23, -32768
  %25 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %4, i64 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 2
  %27 = bitcast %struct.evdns_server_question*** %26 to i16*
  %28 = load i16, i16* %27, align 8
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #12
  %30 = bitcast [1500 x i8]* %3 to i16*
  store i16 %29, i16* %30, align 16
  %31 = tail call i16 @llvm.bswap.i16(i16 %24) #12
  %32 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 2
  %33 = bitcast i8* %32 to i16*
  store i16 %31, i16* %33, align 2
  %34 = getelementptr inbounds %struct.server_request, %struct.server_request* %6, i64 0, i32 14, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i16
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #12
  %38 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 4
  %39 = bitcast i8* %38 to i16*
  store i16 %37, i16* %39, align 4
  %40 = getelementptr inbounds %struct.server_request, %struct.server_request* %6, i64 0, i32 6
  %41 = load i32, i32* %40, align 4
  %42 = trunc i32 %41 to i16
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #12
  %44 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 6
  %45 = bitcast i8* %44 to i16*
  store i16 %43, i16* %45, align 2
  %46 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 21
  %47 = bitcast %struct.evdns_server_question*** %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = trunc i32 %48 to i16
  %50 = tail call i16 @llvm.bswap.i16(i16 %49) #12
  %51 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 8
  %52 = bitcast i8* %51 to i16*
  store i16 %50, i16* %52, align 8
  %53 = getelementptr inbounds %struct.server_request, %struct.server_request* %6, i64 0, i32 8
  %54 = load i32, i32* %53, align 4
  %55 = trunc i32 %54 to i16
  %56 = tail call i16 @llvm.bswap.i16(i16 %55) #12
  %57 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 10
  %58 = bitcast i8* %57 to i16*
  store i16 %56, i16* %58, align 2
  %59 = icmp sgt i32 %35, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %18
  %61 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 28
  %62 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %61, align 8
  br label %68

63:                                               ; preds = %105, %18
  %64 = phi i64 [ 12, %18 ], [ %103, %105 ]
  %65 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 23
  %66 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 22
  %67 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 24
  br label %116

68:                                               ; preds = %105, %60
  %69 = phi %struct.evdns_server_question** [ %62, %60 ], [ %94, %105 ]
  %70 = phi i64 [ 0, %60 ], [ %112, %105 ]
  %71 = phi i64 [ 12, %60 ], [ %103, %105 ]
  %72 = getelementptr inbounds %struct.evdns_server_question*, %struct.evdns_server_question** %69, i64 %70
  %73 = load %struct.evdns_server_question*, %struct.evdns_server_question** %72, align 8
  %74 = getelementptr inbounds %struct.evdns_server_question, %struct.evdns_server_question* %73, i64 0, i32 2, i64 0
  %75 = call i64 @strlen(i8* %74) #17
  %76 = trunc i64 %75 to i32
  %77 = call fastcc i64 @dnsname_to_labels(i8* nonnull %15, i64 1500, i64 %71, i8* %74, i32 %76, %struct.dnslabel_table* nonnull %4) #12
  %78 = icmp slt i64 %77, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %68
  %80 = load i32, i32* %25, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %238

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %86, %82 ], [ 0, %79 ]
  %84 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %4, i64 0, i32 1, i64 %83, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @free(i8* %85) #12
  %86 = add nuw nsw i64 %83, 1
  %87 = load i32, i32* %25, align 8
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %82, label %238

90:                                               ; preds = %68
  %91 = add nuw nsw i64 %77, 2
  %92 = icmp sgt i64 %91, 1500
  br i1 %92, label %204, label %93

93:                                               ; preds = %90
  %94 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %61, align 8
  %95 = getelementptr inbounds %struct.evdns_server_question*, %struct.evdns_server_question** %94, i64 %70
  %96 = load %struct.evdns_server_question*, %struct.evdns_server_question** %95, align 8
  %97 = getelementptr inbounds %struct.evdns_server_question, %struct.evdns_server_question* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = trunc i32 %98 to i16
  %100 = call i16 @llvm.bswap.i16(i16 %99) #12
  %101 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %77
  %102 = bitcast i8* %101 to i16*
  store i16 %100, i16* %102, align 1
  %103 = add nuw nsw i64 %77, 4
  %104 = icmp sgt i64 %103, 1500
  br i1 %104, label %204, label %105

105:                                              ; preds = %93
  %106 = getelementptr inbounds %struct.evdns_server_question, %struct.evdns_server_question* %96, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = trunc i32 %107 to i16
  %109 = call i16 @llvm.bswap.i16(i16 %108) #12
  %110 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %91
  %111 = bitcast i8* %110 to i16*
  store i16 %109, i16* %111, align 1
  %112 = add nuw nsw i64 %70, 1
  %113 = load i32, i32* %34, align 4
  %114 = sext i32 %113 to i64
  %115 = icmp slt i64 %112, %114
  br i1 %115, label %68, label %63

116:                                              ; preds = %198, %63
  %117 = phi i32 [ 0, %63 ], [ %200, %198 ]
  %118 = phi i64 [ %64, %63 ], [ %199, %198 ]
  switch i32 %117, label %120 [
    i32 0, label %121
    i32 1, label %119
  ]

119:                                              ; preds = %116
  br label %121

120:                                              ; preds = %116
  br label %121

121:                                              ; preds = %120, %119, %116
  %122 = phi %struct.evdns_server_question*** [ %65, %119 ], [ %67, %120 ], [ %66, %116 ]
  %123 = bitcast %struct.evdns_server_question*** %122 to %struct.server_reply_item**
  %124 = load %struct.server_reply_item*, %struct.server_reply_item** %123, align 8
  %125 = icmp eq %struct.server_reply_item* %124, null
  br i1 %125, label %198, label %126

126:                                              ; preds = %121, %193
  %127 = phi %struct.server_reply_item* [ %196, %193 ], [ %124, %121 ]
  %128 = phi i64 [ %194, %193 ], [ %118, %121 ]
  %129 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 1
  %130 = load i8*, i8** %129, align 8
  %131 = call i64 @strlen(i8* %130) #17
  %132 = trunc i64 %131 to i32
  %133 = call fastcc i64 @dnsname_to_labels(i8* nonnull %15, i64 1500, i64 %128, i8* %130, i32 %132, %struct.dnslabel_table* nonnull %4) #12
  %134 = icmp slt i64 %133, 0
  br i1 %134, label %204, label %135

135:                                              ; preds = %126
  %136 = add nuw nsw i64 %133, 2
  %137 = icmp sgt i64 %136, 1500
  br i1 %137, label %204, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = trunc i32 %140 to i16
  %142 = call i16 @llvm.bswap.i16(i16 %141) #12
  %143 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %133
  %144 = bitcast i8* %143 to i16*
  store i16 %142, i16* %144, align 1
  %145 = add nuw nsw i64 %133, 4
  %146 = icmp sgt i64 %145, 1500
  br i1 %146, label %204, label %147

147:                                              ; preds = %138
  %148 = lshr i32 %140, 16
  %149 = trunc i32 %148 to i16
  %150 = call i16 @llvm.bswap.i16(i16 %149) #12
  %151 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %136
  %152 = bitcast i8* %151 to i16*
  store i16 %150, i16* %152, align 1
  %153 = add nuw nsw i64 %133, 8
  %154 = icmp sgt i64 %153, 1500
  br i1 %154, label %204, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = call i32 @llvm.bswap.i32(i32 %157) #12
  %159 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %145
  %160 = bitcast i8* %159 to i32*
  store i32 %158, i32* %160, align 1
  %161 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 4
  %162 = load i8, i8* %161, align 8
  %163 = icmp eq i8 %162, 0
  %164 = add nuw nsw i64 %133, 10
  br i1 %163, label %178, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 6
  %167 = load i8*, i8** %166, align 8
  %168 = call i64 @strlen(i8* %167) #17
  %169 = trunc i64 %168 to i32
  %170 = call fastcc i64 @dnsname_to_labels(i8* nonnull %15, i64 1500, i64 %164, i8* %167, i32 %169, %struct.dnslabel_table* nonnull %4) #12
  %171 = icmp slt i64 %170, 0
  br i1 %171, label %204, label %172

172:                                              ; preds = %165
  %173 = sub nsw i64 %170, %164
  %174 = trunc i64 %173 to i16
  %175 = call i16 @llvm.bswap.i16(i16 %174) #12
  %176 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %153
  %177 = bitcast i8* %176 to i16*
  store i16 %175, i16* %177, align 1
  br label %193

178:                                              ; preds = %155
  %179 = icmp sgt i64 %164, 1500
  br i1 %179, label %204, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 5
  %182 = load i16, i16* %181, align 2
  %183 = call i16 @llvm.bswap.i16(i16 %182) #12
  %184 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %153
  %185 = bitcast i8* %184 to i16*
  store i16 %183, i16* %185, align 1
  %186 = zext i16 %182 to i64
  %187 = add nuw nsw i64 %164, %186
  %188 = icmp sgt i64 %187, 1500
  br i1 %188, label %204, label %189

189:                                              ; preds = %180
  %190 = getelementptr inbounds [1500 x i8], [1500 x i8]* %3, i64 0, i64 %164
  %191 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 6
  %192 = load i8*, i8** %191, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* align 1 %192, i64 %186, i1 false) #12
  br label %193

193:                                              ; preds = %189, %172
  %194 = phi i64 [ %187, %189 ], [ %170, %172 ]
  %195 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %127, i64 0, i32 0
  %196 = load %struct.server_reply_item*, %struct.server_reply_item** %195, align 8
  %197 = icmp eq %struct.server_reply_item* %196, null
  br i1 %197, label %198, label %126

198:                                              ; preds = %193, %121
  %199 = phi i64 [ %118, %121 ], [ %194, %193 ]
  %200 = add nuw nsw i32 %117, 1
  %201 = icmp eq i32 %200, 3
  br i1 %201, label %202, label %116

202:                                              ; preds = %198
  %203 = icmp sgt i64 %199, 512
  br i1 %203, label %204, label %207

204:                                              ; preds = %93, %90, %180, %178, %165, %147, %138, %135, %126, %202
  %205 = load i8, i8* %32, align 2
  %206 = or i8 %205, 2
  store i8 %206, i8* %32, align 2
  br label %207

207:                                              ; preds = %204, %202
  %208 = phi i64 [ 512, %204 ], [ %199, %202 ]
  %209 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 26
  %210 = bitcast %struct.evdns_server_question*** %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = call noalias i8* @malloc(i64 %208) #12
  store i8* %211, i8** %11, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %213, label %225

213:                                              ; preds = %207
  call fastcc void @server_request_free_answers(%struct.server_request* %6) #12
  %214 = load i32, i32* %25, align 8
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %216, label %224

216:                                              ; preds = %213, %216
  %217 = phi i64 [ %220, %216 ], [ 0, %213 ]
  %218 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %4, i64 0, i32 1, i64 %217, i32 0
  %219 = load i8*, i8** %218, align 8
  call void @free(i8* %219) #12
  %220 = add nuw nsw i64 %217, 1
  %221 = load i32, i32* %25, align 8
  %222 = sext i32 %221 to i64
  %223 = icmp slt i64 %220, %222
  br i1 %223, label %216, label %224

224:                                              ; preds = %216, %213
  store i32 0, i32* %25, align 8
  br label %237

225:                                              ; preds = %207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %211, i8* nonnull align 16 %15, i64 %208, i1 false) #12
  call fastcc void @server_request_free_answers(%struct.server_request* %6) #12
  %226 = load i32, i32* %25, align 8
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %228, label %236

228:                                              ; preds = %225, %228
  %229 = phi i64 [ %232, %228 ], [ 0, %225 ]
  %230 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %4, i64 0, i32 1, i64 %229, i32 0
  %231 = load i8*, i8** %230, align 8
  call void @free(i8* %231) #12
  %232 = add nuw nsw i64 %229, 1
  %233 = load i32, i32* %25, align 8
  %234 = sext i32 %233 to i64
  %235 = icmp slt i64 %232, %234
  br i1 %235, label %228, label %236

236:                                              ; preds = %228, %225
  call void @llvm.lifetime.end.p0i8(i64 2056, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %15) #12
  br label %241

237:                                              ; preds = %224, %14
  call void @llvm.lifetime.end.p0i8(i64 2056, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %15) #12
  br label %301

238:                                              ; preds = %82, %79
  %239 = trunc i64 %77 to i32
  call void @llvm.lifetime.end.p0i8(i64 2056, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %15) #12
  %240 = icmp slt i32 %239, 0
  br i1 %240, label %301, label %241

241:                                              ; preds = %236, %2, %238
  %242 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = load i8*, i8** %11, align 8
  %245 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 26
  %246 = bitcast %struct.evdns_server_question*** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 4
  %249 = bitcast %struct.evdns_server_question*** %248 to %struct.sockaddr*
  %250 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 20
  %251 = bitcast %struct.evdns_server_question*** %250 to i32*
  %252 = load i32, i32* %251, align 8
  %253 = call i64 @sendto(i32 %243, i8* %244, i64 %247, i32 0, %struct.sockaddr* %249, i32 %252) #12
  %254 = trunc i64 %253 to i32
  %255 = icmp slt i32 %254, 0
  br i1 %255, label %256, label %293

256:                                              ; preds = %241
  %257 = tail call i32* @__errno_location() #16
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 11
  br i1 %259, label %260, label %301

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 7
  %262 = load %struct.server_request*, %struct.server_request** %261, align 8
  %263 = icmp eq %struct.server_request* %262, null
  br i1 %263, label %276, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %struct.server_request, %struct.server_request* %262, i64 0, i32 1
  %266 = bitcast %struct.server_request** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 1
  %269 = bitcast %struct.evdns_server_question*** %268 to i64*
  store i64 %267, i64* %269, align 8
  %270 = load %struct.server_request*, %struct.server_request** %261, align 8
  %271 = bitcast %struct.evdns_server_question*** %5 to %struct.server_request**
  store %struct.server_request* %270, %struct.server_request** %271, align 8
  %272 = getelementptr inbounds %struct.server_request, %struct.server_request* %270, i64 0, i32 1
  %273 = bitcast %struct.server_request** %272 to %struct.evdns_server_question****
  store %struct.evdns_server_question*** %5, %struct.evdns_server_question**** %273, align 8
  %274 = bitcast %struct.evdns_server_question*** %268 to %struct.evdns_server_question*****
  %275 = load %struct.evdns_server_question****, %struct.evdns_server_question***** %274, align 8
  store %struct.evdns_server_question*** %5, %struct.evdns_server_question**** %275, align 8
  br label %301

276:                                              ; preds = %260
  %277 = bitcast %struct.evdns_server_question*** %5 to %struct.evdns_server_question****
  store %struct.evdns_server_question*** %5, %struct.evdns_server_question**** %277, align 8
  %278 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %5, i64 1
  %279 = bitcast %struct.evdns_server_question*** %278 to %struct.evdns_server_question****
  store %struct.evdns_server_question*** %5, %struct.evdns_server_question**** %279, align 8
  %280 = bitcast %struct.server_request** %261 to %struct.evdns_server_question****
  store %struct.evdns_server_question*** %5, %struct.evdns_server_question**** %280, align 8
  %281 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 2
  store i8 1, i8* %281, align 8
  %282 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 6
  %283 = call i32 @event_del(%struct.event* %282) #12
  %284 = load i32, i32* %242, align 8
  %285 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 3
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %286, 0
  %288 = select i1 %287, i16 22, i16 20
  %289 = bitcast %struct.evdns_server_port* %9 to i8*
  call void @event_set(%struct.event* %282, i32 %284, i16 signext %288, void (i32, i16, i8*)* nonnull @server_port_ready_callback, i8* %289) #12
  %290 = call i32 @event_add(%struct.event* %282, %struct.timeval* null) #12
  %291 = icmp slt i32 %290, 0
  br i1 %291, label %292, label %301

292:                                              ; preds = %276
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0))
  br label %301

293:                                              ; preds = %241
  %294 = call fastcc i32 @server_request_free(%struct.server_request* %6)
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %301

296:                                              ; preds = %293
  %297 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %9, i64 0, i32 7
  %298 = load %struct.server_request*, %struct.server_request** %297, align 8
  %299 = icmp eq %struct.server_request* %298, null
  br i1 %299, label %301, label %300

300:                                              ; preds = %296
  call fastcc void @server_port_flush(%struct.evdns_server_port* %9)
  br label %301

301:                                              ; preds = %237, %300, %296, %293, %256, %276, %292, %264, %238
  %302 = phi i32 [ %239, %238 ], [ -1, %256 ], [ 1, %276 ], [ 1, %292 ], [ 1, %264 ], [ 0, %293 ], [ 0, %296 ], [ 0, %300 ], [ -1, %237 ]
  ret i32 %302
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare i32 @event_del(%struct.event*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_evdns_log(i32, i8*, ...) unnamed_addr #1 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 24, i1 false)
  %6 = load void (i32, i8*)*, void (i32, i8*)** @evdns_log_fn, align 8
  %7 = icmp eq void (i32, i8*)* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %4)
  %10 = call i32 @evutil_vsnprintf(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_evdns_log.buf, i64 0, i64 0), i64 512, i8* %1, %struct.__va_list_tag* nonnull %9) #12
  store i8 0, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_evdns_log.buf, i64 0, i64 511), align 1
  %11 = load void (i32, i8*)*, void (i32, i8*)** @evdns_log_fn, align 8
  call void %11(i32 %0, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_evdns_log.buf, i64 0, i64 0)) #12
  call void @llvm.va_end(i8* nonnull %4)
  br label %12

12:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @server_request_free(%struct.server_request*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 14, i32 2
  %3 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %2, align 8
  %4 = icmp eq %struct.evdns_server_question** %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 14, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %5, %9
  %10 = phi i64 [ %15, %9 ], [ 0, %5 ]
  %11 = phi %struct.evdns_server_question** [ %19, %9 ], [ %3, %5 ]
  %12 = getelementptr inbounds %struct.evdns_server_question*, %struct.evdns_server_question** %11, i64 %10
  %13 = bitcast %struct.evdns_server_question** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @free(i8* %14) #12
  %15 = add nuw nsw i64 %10, 1
  %16 = load i32, i32* %6, align 4
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %15, %17
  %19 = load %struct.evdns_server_question**, %struct.evdns_server_question*** %2, align 8
  br i1 %18, label %9, label %20

20:                                               ; preds = %9, %5
  %21 = phi %struct.evdns_server_question** [ %3, %5 ], [ %19, %9 ]
  %22 = bitcast %struct.evdns_server_question** %21 to i8*
  tail call void @free(i8* %22) #12
  br label %23

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 3
  %25 = load %struct.evdns_server_port*, %struct.evdns_server_port** %24, align 8
  %26 = icmp eq %struct.evdns_server_port* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %25, i64 0, i32 7
  %29 = load %struct.server_request*, %struct.server_request** %28, align 8
  %30 = icmp eq %struct.server_request* %29, %0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = bitcast %struct.server_request* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %struct.server_request** %28 to i64*
  store i64 %33, i64* %34, align 8
  br label %35

35:                                               ; preds = %31, %27
  %36 = load %struct.evdns_server_port*, %struct.evdns_server_port** %24, align 8
  %37 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %37, align 4
  br label %40

40:                                               ; preds = %23, %35
  %41 = phi i32 [ %39, %35 ], [ 1, %23 ]
  %42 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 12
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  tail call void @free(i8* nonnull %43) #12
  br label %46

46:                                               ; preds = %40, %45
  tail call fastcc void @server_request_free_answers(%struct.server_request* %0)
  %47 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 0
  %48 = load %struct.server_request*, %struct.server_request** %47, align 8
  %49 = icmp eq %struct.server_request* %48, null
  %50 = icmp eq %struct.server_request* %48, %0
  %51 = or i1 %49, %50
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 1
  %54 = bitcast %struct.server_request** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.server_request, %struct.server_request* %48, i64 0, i32 1
  %57 = bitcast %struct.server_request** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast %struct.server_request* %0 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.server_request** %53 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %59, i64* %61, align 8
  br label %62

62:                                               ; preds = %46, %52
  %63 = icmp eq i32 %41, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %62
  %65 = load %struct.evdns_server_port*, %struct.evdns_server_port** %24, align 8
  %66 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = tail call i32 @close(i32 %67) #12
  store i32 -1, i32* %66, align 8
  br label %71

71:                                               ; preds = %64, %69
  %72 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %65, i64 0, i32 6
  %73 = tail call i32 @event_del(%struct.event* %72) #12
  br label %74

74:                                               ; preds = %62, %71
  %75 = phi i32 [ 1, %71 ], [ 0, %62 ]
  %76 = bitcast %struct.server_request* %0 to i8*
  tail call void @free(i8* %76) #12
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @server_port_flush(%struct.evdns_server_port*) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 7
  %3 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 0
  br label %4

4:                                                ; preds = %26, %1
  %5 = load %struct.server_request*, %struct.server_request** %2, align 8
  %6 = icmp eq %struct.server_request* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = load i32, i32* %3, align 8
  %9 = getelementptr inbounds %struct.server_request, %struct.server_request* %5, i64 0, i32 12
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.server_request, %struct.server_request* %5, i64 0, i32 13
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.server_request, %struct.server_request* %5, i64 0, i32 4
  %14 = bitcast %struct.sockaddr_storage* %13 to %struct.sockaddr*
  %15 = getelementptr inbounds %struct.server_request, %struct.server_request* %5, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = tail call i64 @sendto(i32 %8, i8* %10, i64 %12, i32 0, %struct.sockaddr* %14, i32 %16) #12
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = tail call i32* @__errno_location() #16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 11
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = tail call i8* @strerror(i32 %22) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0), i8* %25, i32 %22)
  br label %26

26:                                               ; preds = %24, %7
  %27 = tail call fastcc i32 @server_request_free(%struct.server_request* nonnull %5)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %4, label %37

29:                                               ; preds = %4
  %30 = getelementptr inbounds %struct.evdns_server_port, %struct.evdns_server_port* %0, i64 0, i32 6
  %31 = tail call i32 @event_del(%struct.event* %30) #12
  %32 = load i32, i32* %3, align 8
  %33 = bitcast %struct.evdns_server_port* %0 to i8*
  tail call void @event_set(%struct.event* %30, i32 %32, i16 signext 18, void (i32, i16, i8*)* nonnull @server_port_ready_callback, i8* %33) #12
  %34 = tail call i32 @event_add(%struct.event* %30, %struct.timeval* null) #12
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0))
  br label %37

37:                                               ; preds = %20, %26, %36, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_drop(%struct.evdns_server_request*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.evdns_server_request, %struct.evdns_server_request* %0, i64 -14, i32 2
  %3 = bitcast %struct.evdns_server_question*** %2 to %struct.server_request*
  %4 = tail call fastcc i32 @server_request_free(%struct.server_request* %3)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_server_request_get_requesting_addr(%struct.evdns_server_request* nocapture readonly, %struct.sockaddr* nocapture, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.evdns_server_request, %struct.evdns_server_request* %0, i64 -14, i32 2
  %5 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %4, i64 20
  %6 = bitcast %struct.evdns_server_question*** %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %2
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.sockaddr* %1 to i8*
  %11 = getelementptr inbounds %struct.evdns_server_question**, %struct.evdns_server_question*** %4, i64 4
  %12 = bitcast %struct.evdns_server_question*** %11 to i8*
  %13 = zext i32 %7 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %10, i8* align 8 %12, i64 %13, i1 false)
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i32 [ %14, %9 ], [ -1, %3 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @evdns_count_nameservers() local_unnamed_addr #7 {
  %1 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %2 = icmp eq %struct.nameserver* %1, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %0, %3
  %4 = phi %struct.nameserver* [ %8, %3 ], [ %1, %0 ]
  %5 = phi i32 [ %6, %3 ], [ 0, %0 ]
  %6 = add nuw nsw i32 %5, 1
  %7 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %4, i64 0, i32 6
  %8 = load %struct.nameserver*, %struct.nameserver** %7, align 8
  %9 = icmp eq %struct.nameserver* %8, %1
  br i1 %9, label %10, label %3

10:                                               ; preds = %3, %0
  %11 = phi i32 [ 0, %0 ], [ %6, %3 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_clear_nameservers_and_suspend() local_unnamed_addr #1 {
  %1 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %2 = load %struct.request*, %struct.request** @req_head, align 8
  %3 = icmp eq %struct.nameserver* %1, null
  br i1 %3, label %61, label %4

4:                                                ; preds = %0, %23
  %5 = phi %struct.nameserver* [ %7, %23 ], [ %1, %0 ]
  %6 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %5, i64 0, i32 6
  %7 = load %struct.nameserver*, %struct.nameserver** %6, align 8
  %8 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %5, i64 0, i32 5
  %9 = tail call i32 @event_del(%struct.event* %8) #12
  %10 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %5, i64 0, i32 8, i32 14
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %5, i64 0, i32 8
  %16 = tail call i32 @event_del(%struct.event* %15) #12
  br label %17

17:                                               ; preds = %14, %4
  %18 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %5, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = tail call i32 @close(i32 %19) #12
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %struct.nameserver* %5 to i8*
  tail call void @free(i8* %24) #12
  %25 = icmp eq %struct.nameserver* %7, %1
  br i1 %25, label %26, label %4

26:                                               ; preds = %23
  store %struct.nameserver* null, %struct.nameserver** @server_head, align 8
  store i32 0, i32* @global_good_nameservers, align 4
  br label %27

27:                                               ; preds = %53, %26
  %28 = phi %struct.request* [ %2, %26 ], [ %32, %53 ]
  %29 = icmp eq %struct.request* %28, null
  br i1 %29, label %60, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 12
  %32 = load %struct.request*, %struct.request** %31, align 8
  %33 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 2
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 3
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 7
  store %struct.nameserver* null, %struct.nameserver** %35, align 8
  %36 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 14
  %37 = tail call i32 @event_del(%struct.event* %36) #12
  %38 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 15
  store i16 0, i16* %38, align 8
  %39 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 17
  store i8 0, i8* %39, align 1
  %40 = load i32, i32* @global_requests_waiting, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* @global_requests_waiting, align 4
  %42 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %43 = icmp eq %struct.request* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %30
  store %struct.request* %28, %struct.request** @req_waiting_head, align 8
  %45 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 13
  store %struct.request* %28, %struct.request** %45, align 8
  br label %53

46:                                               ; preds = %30
  %47 = ptrtoint %struct.request* %42 to i64
  %48 = getelementptr inbounds %struct.request, %struct.request* %42, i64 0, i32 13
  %49 = load %struct.request*, %struct.request** %48, align 8
  %50 = getelementptr inbounds %struct.request, %struct.request* %28, i64 0, i32 13
  store %struct.request* %49, %struct.request** %50, align 8
  %51 = getelementptr inbounds %struct.request, %struct.request* %49, i64 0, i32 12
  store %struct.request* %28, %struct.request** %51, align 8
  %52 = bitcast %struct.request** %31 to i64*
  store i64 %47, i64* %52, align 8
  br label %53

53:                                               ; preds = %44, %46
  %54 = phi %struct.request** [ %31, %44 ], [ %48, %46 ]
  %55 = phi %struct.request* [ %28, %44 ], [ %42, %46 ]
  store %struct.request* %28, %struct.request** %54, align 8
  %56 = getelementptr inbounds %struct.request, %struct.request* %55, i64 0, i32 13
  %57 = bitcast %struct.request** %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* bitcast (%struct.request** @req_waiting_head to i64*), align 8
  %59 = icmp eq %struct.request* %32, %2
  br i1 %59, label %60, label %27

60:                                               ; preds = %53, %27
  store %struct.request* null, %struct.request** @req_head, align 8
  store i32 0, i32* @global_requests_inflight, align 4
  br label %61

61:                                               ; preds = %0, %60
  ret i32 0
}

declare i32 @close(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resume() local_unnamed_addr #1 {
  tail call fastcc void @evdns_requests_pump_waiting_queue()
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evdns_requests_pump_waiting_queue() unnamed_addr #1 {
  %1 = load i32, i32* @global_requests_inflight, align 4
  %2 = load i32, i32* @global_max_requests_inflight, align 4
  %3 = icmp slt i32 %1, %2
  %4 = load i32, i32* @global_requests_waiting, align 4
  %5 = icmp ne i32 %4, 0
  %6 = and i1 %3, %5
  br i1 %6, label %7, label %113

7:                                                ; preds = %0, %106
  %8 = phi i32 [ %110, %106 ], [ %4, %0 ]
  %9 = phi i32 [ %107, %106 ], [ %1, %0 ]
  %10 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %11 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 12
  %12 = load %struct.request*, %struct.request** %11, align 8
  %13 = icmp eq %struct.request* %12, %10
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  store %struct.request* null, %struct.request** @req_waiting_head, align 8
  br label %27

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 13
  %17 = bitcast %struct.request** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 13
  %20 = bitcast %struct.request** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %struct.request** %11 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = load %struct.request*, %struct.request** %16, align 8
  %24 = getelementptr inbounds %struct.request, %struct.request* %23, i64 0, i32 12
  %25 = bitcast %struct.request** %24 to i64*
  store i64 %22, i64* %25, align 8
  %26 = load i64, i64* %21, align 8
  store i64 %26, i64* bitcast (%struct.request** @req_waiting_head to i64*), align 8
  br label %27

27:                                               ; preds = %15, %14
  %28 = add nsw i32 %8, -1
  store i32 %28, i32* @global_requests_waiting, align 4
  %29 = add nsw i32 %9, 1
  store i32 %29, i32* @global_requests_inflight, align 4
  %30 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %31 = icmp eq %struct.nameserver* %30, null
  br i1 %31, label %54, label %32

32:                                               ; preds = %27
  %33 = load i32, i32* @global_good_nameservers, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %30, i64 0, i32 6
  %37 = load %struct.nameserver*, %struct.nameserver** %36, align 8
  store %struct.nameserver* %37, %struct.nameserver** @server_head, align 8
  br label %54

38:                                               ; preds = %32, %47
  %39 = phi %struct.nameserver* [ %48, %47 ], [ %30, %32 ]
  %40 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %39, i64 0, i32 9
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %39, i64 0, i32 6
  br i1 %42, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %struct.nameserver** %43 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %54

47:                                               ; preds = %38
  %48 = load %struct.nameserver*, %struct.nameserver** %43, align 8
  store %struct.nameserver* %48, %struct.nameserver** @server_head, align 8
  %49 = icmp eq %struct.nameserver* %48, %30
  br i1 %49, label %50, label %38

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %30, i64 0, i32 6
  %52 = bitcast %struct.nameserver** %51 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %54

54:                                               ; preds = %27, %35, %44, %50
  %55 = phi %struct.nameserver* [ %39, %44 ], [ %30, %50 ], [ %37, %35 ], [ null, %27 ]
  %56 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 7
  store %struct.nameserver* %55, %struct.nameserver** %56, align 8
  br label %57

57:                                               ; preds = %61, %54
  %58 = load i16 ()*, i16 ()** @trans_id_function, align 8
  %59 = tail call zeroext i16 %58() #12
  %60 = icmp eq i16 %59, -1
  br i1 %60, label %61, label %62

61:                                               ; preds = %57, %74
  br label %57

62:                                               ; preds = %57
  %63 = load %struct.request*, %struct.request** @req_head, align 8
  %64 = icmp eq %struct.request* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %62, %70
  %66 = phi %struct.request* [ %72, %70 ], [ %63, %62 ]
  %67 = getelementptr inbounds %struct.request, %struct.request* %66, i64 0, i32 15
  %68 = load i16, i16* %67, align 8
  %69 = icmp eq i16 %68, %59
  br i1 %69, label %74, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.request, %struct.request* %66, i64 0, i32 12
  %72 = load %struct.request*, %struct.request** %71, align 8
  %73 = icmp eq %struct.request* %72, %63
  br i1 %73, label %76, label %65

74:                                               ; preds = %65
  %75 = icmp eq %struct.request* %66, null
  br i1 %75, label %76, label %61

76:                                               ; preds = %62, %74, %70
  %77 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 15
  store i16 %59, i16* %77, align 8
  %78 = tail call i16 @llvm.bswap.i16(i16 %59) #12
  %79 = bitcast %struct.request* %10 to i16**
  %80 = load i16*, i16** %79, align 8
  store i16 %78, i16* %80, align 2
  %81 = load %struct.request*, %struct.request** @req_head, align 8
  %82 = icmp eq %struct.request* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  store %struct.request* %10, %struct.request** @req_head, align 8
  %84 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 13
  store %struct.request* %10, %struct.request** %84, align 8
  br label %92

85:                                               ; preds = %76
  %86 = ptrtoint %struct.request* %81 to i64
  %87 = getelementptr inbounds %struct.request, %struct.request* %81, i64 0, i32 13
  %88 = load %struct.request*, %struct.request** %87, align 8
  %89 = getelementptr inbounds %struct.request, %struct.request* %10, i64 0, i32 13
  store %struct.request* %88, %struct.request** %89, align 8
  %90 = getelementptr inbounds %struct.request, %struct.request* %88, i64 0, i32 12
  store %struct.request* %10, %struct.request** %90, align 8
  %91 = bitcast %struct.request** %11 to i64*
  store i64 %86, i64* %91, align 8
  br label %92

92:                                               ; preds = %83, %85
  %93 = phi %struct.request** [ %11, %83 ], [ %87, %85 ]
  store %struct.request* %10, %struct.request** %93, align 8
  tail call fastcc void @evdns_request_transmit(%struct.request* %10)
  %94 = load %struct.request*, %struct.request** @req_head, align 8
  %95 = icmp eq %struct.request* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %92, %102
  %97 = phi %struct.request* [ %104, %102 ], [ %94, %92 ]
  %98 = getelementptr inbounds %struct.request, %struct.request* %97, i64 0, i32 17
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %96
  tail call fastcc void @evdns_request_transmit(%struct.request* %97) #12
  br label %102

102:                                              ; preds = %101, %96
  %103 = getelementptr inbounds %struct.request, %struct.request* %97, i64 0, i32 12
  %104 = load %struct.request*, %struct.request** %103, align 8
  %105 = icmp eq %struct.request* %104, %94
  br i1 %105, label %106, label %96

106:                                              ; preds = %102, %92
  %107 = load i32, i32* @global_requests_inflight, align 4
  %108 = load i32, i32* @global_max_requests_inflight, align 4
  %109 = icmp slt i32 %107, %108
  %110 = load i32, i32* @global_requests_waiting, align 4
  %111 = icmp ne i32 %110, 0
  %112 = and i1 %109, %111
  br i1 %112, label %7, label %113

113:                                              ; preds = %106, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_nameserver_add(i64) local_unnamed_addr #1 {
  %2 = tail call fastcc i32 @_evdns_nameserver_add_impl(i64 %0, i32 53)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_evdns_nameserver_add_impl(i64, i32) unnamed_addr #1 {
  %3 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %4 = icmp eq %struct.nameserver* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %2, %11
  %6 = phi %struct.nameserver* [ %13, %11 ], [ %3, %2 ]
  %7 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = icmp eq i64 %9, %0
  br i1 %10, label %97, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %6, i64 0, i32 6
  %13 = load %struct.nameserver*, %struct.nameserver** %12, align 8
  %14 = icmp eq %struct.nameserver* %13, %3
  br i1 %14, label %15, label %5

15:                                               ; preds = %11, %2
  %16 = tail call noalias i8* @malloc(i64 304) #12
  %17 = icmp eq i8* %16, null
  br i1 %17, label %97, label %18

18:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 304, i1 false)
  %19 = getelementptr inbounds i8, i8* %16, i64 168
  %20 = bitcast i8* %19 to %struct.event*
  tail call void @event_set(%struct.event* %20, i32 -1, i16 signext 0, void (i32, i16, i8*)* nonnull @nameserver_prod_callback, i8* nonnull %16) #12
  %21 = tail call i32 @socket(i32 2, i32 2, i32 0) #12
  %22 = bitcast i8* %16 to i32*
  store i32 %21, i32* %22, align 8
  %23 = icmp slt i32 %21, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = trunc i64 %0 to i32
  br label %86

26:                                               ; preds = %18
  %27 = tail call i32 (i32, i32, ...) @fcntl(i32 %21, i32 2, i32 1) #12
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = load i32, i32* %22, align 8
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i64 0, i64 0), i32 %30) #12
  br label %31

31:                                               ; preds = %29, %26
  %32 = load i32, i32* %22, align 8
  %33 = tail call i32 @evutil_make_socket_nonblocking(i32 %32) #12
  %34 = trunc i64 %0 to i32
  %35 = getelementptr inbounds i8, i8* %16, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 4
  %37 = trunc i32 %1 to i16
  %38 = tail call i16 @llvm.bswap.i16(i16 %37) #12
  %39 = getelementptr inbounds i8, i8* %16, i64 8
  %40 = bitcast i8* %39 to i16*
  store i16 %38, i16* %40, align 8
  %41 = getelementptr inbounds i8, i8* %16, i64 296
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds i8, i8* %16, i64 24
  %43 = bitcast i8* %42 to %struct.event*
  %44 = load i32, i32* %22, align 8
  tail call void @event_set(%struct.event* %43, i32 %44, i16 signext 18, void (i32, i16, i8*)* nonnull @nameserver_ready_callback, i8* nonnull %16) #12
  %45 = tail call i32 @event_add(%struct.event* %43, %struct.timeval* null) #12
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %31
  %48 = load i32, i32* %22, align 8
  %49 = tail call i32 @close(i32 %48) #12
  br label %86

50:                                               ; preds = %31
  %51 = tail call i32 @llvm.bswap.i32(i32 %34) #12
  %52 = lshr i32 %51, 24
  %53 = lshr i32 %51, 16
  %54 = and i32 %53, 255
  %55 = lshr i32 %51, 8
  %56 = and i32 %55, 255
  %57 = and i32 %51, 255
  %58 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %52, i32 %54, i32 %56, i32 %57) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0))
  %59 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %60 = icmp eq %struct.nameserver* %59, null
  br i1 %60, label %61, label %66

61:                                               ; preds = %50
  %62 = getelementptr inbounds i8, i8* %16, i64 160
  %63 = bitcast i8* %62 to i8**
  store i8* %16, i8** %63, align 8
  %64 = getelementptr inbounds i8, i8* %16, i64 152
  %65 = bitcast i8* %64 to i8**
  store i8* %16, i8** %65, align 8
  br label %81

66:                                               ; preds = %50
  %67 = ptrtoint %struct.nameserver* %59 to i64
  %68 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %59, i64 0, i32 6
  %69 = bitcast %struct.nameserver** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds i8, i8* %16, i64 152
  %72 = bitcast i8* %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %16, i64 160
  %74 = bitcast i8* %73 to i64*
  store i64 %67, i64* %74, align 8
  %75 = bitcast %struct.nameserver** %68 to i8**
  store i8* %16, i8** %75, align 8
  %76 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %59, i64 0, i32 7
  %77 = load %struct.nameserver*, %struct.nameserver** %76, align 8
  %78 = icmp eq %struct.nameserver* %77, %59
  br i1 %78, label %79, label %83

79:                                               ; preds = %66
  %80 = bitcast %struct.nameserver** %76 to i8**
  br label %81

81:                                               ; preds = %61, %79
  %82 = phi i8** [ %80, %79 ], [ bitcast (%struct.nameserver** @server_head to i8**), %61 ]
  store i8* %16, i8** %82, align 8
  br label %83

83:                                               ; preds = %81, %66
  %84 = load i32, i32* @global_good_nameservers, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* @global_good_nameservers, align 4
  br label %97

86:                                               ; preds = %24, %47
  %87 = phi i32 [ %25, %24 ], [ %34, %47 ]
  %88 = phi i32 [ 1, %24 ], [ 2, %47 ]
  tail call void @free(i8* nonnull %16) #12
  %89 = tail call i32 @llvm.bswap.i32(i32 %87) #12
  %90 = lshr i32 %89, 24
  %91 = lshr i32 %89, 16
  %92 = and i32 %91, 255
  %93 = lshr i32 %89, 8
  %94 = and i32 %93, 255
  %95 = and i32 %89, 255
  %96 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %90, i32 %92, i32 %94, i32 %95) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i32 %88)
  br label %97

97:                                               ; preds = %5, %15, %86, %83
  %98 = phi i32 [ %88, %86 ], [ 0, %83 ], [ -1, %15 ], [ 3, %5 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_nameserver_ip_add(i8*) local_unnamed_addr #1 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.in_addr, align 4
  %4 = alloca [20 x i8], align 16
  %5 = bitcast %struct.in_addr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i64 0, i32 0
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 20, i1 false)
  %8 = tail call i8* @strchr(i8* %0, i32 58) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  %12 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %13 = call i64 @strtol(i8* %11, i8** nonnull %2, i32 10) #12
  %14 = load i8*, i8** %2, align 8
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  %17 = trunc i64 %13 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %18 = icmp ugt i32 %17, 65535
  %19 = or i1 %18, %16
  br i1 %19, label %36, label %20

20:                                               ; preds = %10
  %21 = ptrtoint i8* %8 to i64
  %22 = ptrtoint i8* %0 to i64
  %23 = sub i64 %21, %22
  %24 = icmp sgt i64 %23, 19
  br i1 %24, label %36, label %25

25:                                               ; preds = %20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %7, i8* align 1 %0, i64 %23, i1 false)
  %26 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 %23
  store i8 0, i8* %26, align 1
  br label %27

27:                                               ; preds = %1, %25
  %28 = phi i32 [ %17, %25 ], [ 53, %1 ]
  %29 = phi i8* [ %7, %25 ], [ %0, %1 ]
  %30 = call i32 @inet_aton(i8* %29, %struct.in_addr* nonnull %3) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4
  %34 = zext i32 %33 to i64
  %35 = call fastcc i32 @_evdns_nameserver_add_impl(i64 %34, i32 %28)
  br label %36

36:                                               ; preds = %27, %20, %10, %32
  %37 = phi i32 [ %35, %32 ], [ 4, %10 ], [ 4, %20 ], [ 4, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i32 %37
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @inet_aton(i8*, %struct.in_addr*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resolve_ipv4(i8*, i32, void (i32, i8, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #1 {
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %0)
  %5 = and i32 %1, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %4
  %8 = tail call fastcc %struct.request* @request_new(i32 1, i8* %0, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  %9 = icmp eq %struct.request* %8, null
  br i1 %9, label %52, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 7
  %12 = load %struct.nameserver*, %struct.nameserver** %11, align 8
  %13 = icmp eq %struct.nameserver* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = load %struct.request*, %struct.request** @req_head, align 8
  %16 = icmp eq %struct.request* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  store %struct.request* %8, %struct.request** @req_head, align 8
  %18 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %8, %struct.request** %18, align 8
  %19 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  br label %28

20:                                               ; preds = %14
  %21 = ptrtoint %struct.request* %15 to i64
  %22 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  %23 = load %struct.request*, %struct.request** %22, align 8
  %24 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %23, %struct.request** %24, align 8
  %25 = getelementptr inbounds %struct.request, %struct.request* %23, i64 0, i32 12
  store %struct.request* %8, %struct.request** %25, align 8
  %26 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  %27 = bitcast %struct.request** %26 to i64*
  store i64 %21, i64* %27, align 8
  br label %28

28:                                               ; preds = %20, %17
  %29 = phi %struct.request** [ %22, %20 ], [ %19, %17 ]
  store %struct.request* %8, %struct.request** %29, align 8
  %30 = load i32, i32* @global_requests_inflight, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* @global_requests_inflight, align 4
  tail call fastcc void @evdns_request_transmit(%struct.request* nonnull %8) #12
  br label %52

32:                                               ; preds = %10
  %33 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %34 = icmp eq %struct.request* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  store %struct.request* %8, %struct.request** @req_waiting_head, align 8
  %36 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %8, %struct.request** %36, align 8
  %37 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  br label %46

38:                                               ; preds = %32
  %39 = ptrtoint %struct.request* %33 to i64
  %40 = getelementptr inbounds %struct.request, %struct.request* %33, i64 0, i32 13
  %41 = load %struct.request*, %struct.request** %40, align 8
  %42 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %41, %struct.request** %42, align 8
  %43 = getelementptr inbounds %struct.request, %struct.request* %41, i64 0, i32 12
  store %struct.request* %8, %struct.request** %43, align 8
  %44 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  %45 = bitcast %struct.request** %44 to i64*
  store i64 %39, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %35
  %47 = phi %struct.request** [ %40, %38 ], [ %37, %35 ]
  store %struct.request* %8, %struct.request** %47, align 8
  %48 = load i32, i32* @global_requests_waiting, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* @global_requests_waiting, align 4
  br label %52

50:                                               ; preds = %4
  %51 = tail call fastcc i32 @search_request_new(i32 1, i8* %0, i32 %1, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  br label %52

52:                                               ; preds = %46, %28, %7, %50
  %53 = phi i32 [ %51, %50 ], [ 1, %7 ], [ 0, %28 ], [ 0, %46 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.request* @request_new(i32, i8*, void (i32, i8, i32, i32, i8*, i8*)*, i8*) unnamed_addr #1 {
  %5 = load i32, i32* @global_requests_inflight, align 4
  %6 = load i32, i32* @global_max_requests_inflight, align 4
  %7 = icmp slt i32 %5, %6
  %8 = tail call i64 @strlen(i8* %1) #17
  %9 = trunc i64 %8 to i32
  br i1 %7, label %10, label %29

10:                                               ; preds = %4, %14
  %11 = load i16 ()*, i16 ()** @trans_id_function, align 8
  %12 = tail call zeroext i16 %11() #12
  %13 = icmp eq i16 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %27
  br label %10

15:                                               ; preds = %10
  %16 = load %struct.request*, %struct.request** @req_head, align 8
  %17 = icmp eq %struct.request* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15, %23
  %19 = phi %struct.request* [ %25, %23 ], [ %16, %15 ]
  %20 = getelementptr inbounds %struct.request, %struct.request* %19, i64 0, i32 15
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, %12
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.request, %struct.request* %19, i64 0, i32 12
  %25 = load %struct.request*, %struct.request** %24, align 8
  %26 = icmp eq %struct.request* %25, %16
  br i1 %26, label %29, label %18

27:                                               ; preds = %18
  %28 = icmp eq %struct.request* %19, null
  br i1 %28, label %29, label %14

29:                                               ; preds = %27, %15, %23, %4
  %30 = phi i16 [ -1, %4 ], [ %12, %23 ], [ %12, %15 ], [ %12, %27 ]
  %31 = shl i64 %8, 32
  %32 = add i64 %31, 438086664192
  %33 = ashr exact i64 %32, 32
  %34 = add nsw i64 %33, 232
  %35 = tail call noalias i8* @malloc(i64 %34) #12
  %36 = bitcast i8* %35 to %struct.request*
  %37 = icmp eq i8* %35, null
  br i1 %37, label %187, label %38

38:                                               ; preds = %29
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 232, i1 false)
  %39 = getelementptr inbounds i8, i8* %35, i64 96
  %40 = bitcast i8* %39 to %struct.event*
  tail call void @event_set(%struct.event* %40, i32 -1, i16 signext 0, void (i32, i16, i8*)* nonnull @evdns_request_timeout_callback, i8* nonnull %35) #12
  %41 = getelementptr inbounds i8, i8* %35, i64 232
  %42 = bitcast i8* %35 to i8**
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %35, i64 226
  store i8 1, i8* %43, align 2
  %44 = trunc i32 %0 to i16
  %45 = icmp slt i64 %32, 8589934592
  br i1 %45, label %186, label %46

46:                                               ; preds = %38
  %47 = tail call i16 @llvm.bswap.i16(i16 %30) #12
  %48 = bitcast i8* %41 to i16*
  store i16 %47, i16* %48, align 1
  %49 = icmp slt i64 %32, 17179869184
  br i1 %49, label %186, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %35, i64 234
  %52 = bitcast i8* %51 to i16*
  store i16 1, i16* %52, align 1
  %53 = icmp slt i64 %32, 25769803776
  br i1 %53, label %186, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %35, i64 236
  %56 = bitcast i8* %55 to i16*
  store i16 256, i16* %56, align 1
  %57 = icmp slt i64 %32, 34359738368
  br i1 %57, label %186, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %35, i64 238
  %60 = bitcast i8* %59 to i16*
  store i16 0, i16* %60, align 1
  %61 = icmp slt i64 %32, 42949672960
  br i1 %61, label %186, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %35, i64 240
  %64 = bitcast i8* %63 to i16*
  store i16 0, i16* %64, align 1
  %65 = icmp slt i64 %32, 51539607552
  br i1 %65, label %186, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds i8, i8* %35, i64 242
  %68 = bitcast i8* %67 to i16*
  store i16 0, i16* %68, align 1
  %69 = ashr exact i64 %31, 32
  %70 = getelementptr inbounds i8, i8* %1, i64 %69
  %71 = icmp sgt i32 %9, 255
  br i1 %71, label %186, label %72

72:                                               ; preds = %66
  %73 = tail call i8* @strchr(i8* %1, i32 46) #17
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %94

75:                                               ; preds = %108, %72
  %76 = phi i8* [ %1, %72 ], [ %113, %108 ]
  %77 = phi i64 [ 12, %72 ], [ %112, %108 ]
  %78 = ptrtoint i8* %70 to i64
  %79 = ptrtoint i8* %76 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp ugt i32 %81, 63
  br i1 %82, label %186, label %83

83:                                               ; preds = %75
  %84 = and i64 %80, 4294967295
  %85 = add i64 %77, 1
  %86 = add i64 %84, %85
  %87 = icmp ugt i64 %86, %33
  br i1 %87, label %186, label %88

88:                                               ; preds = %83
  %89 = trunc i64 %80 to i8
  %90 = getelementptr inbounds i8, i8* %41, i64 %77
  store i8 %89, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %41, i64 %85
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %76, i64 %80, i1 false) #12
  %92 = add nsw i64 %85, %80
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %121, label %116

94:                                               ; preds = %72, %108
  %95 = phi i8* [ %114, %108 ], [ %73, %72 ]
  %96 = phi i64 [ %112, %108 ], [ 12, %72 ]
  %97 = phi i8* [ %113, %108 ], [ %1, %72 ]
  %98 = ptrtoint i8* %95 to i64
  %99 = ptrtoint i8* %97 to i64
  %100 = sub i64 %98, %99
  %101 = trunc i64 %100 to i32
  %102 = icmp ugt i32 %101, 63
  br i1 %102, label %186, label %103

103:                                              ; preds = %94
  %104 = and i64 %100, 4294967295
  %105 = add i64 %96, 1
  %106 = add i64 %104, %105
  %107 = icmp ugt i64 %106, %33
  br i1 %107, label %186, label %108

108:                                              ; preds = %103
  %109 = trunc i64 %100 to i8
  %110 = getelementptr inbounds i8, i8* %41, i64 %96
  store i8 %109, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %41, i64 %105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* align 1 %97, i64 %100, i1 false) #12
  %112 = add nsw i64 %100, %105
  %113 = getelementptr inbounds i8, i8* %95, i64 1
  %114 = tail call i8* @strchr(i8* %113, i32 46) #17
  %115 = icmp eq i8* %114, null
  br i1 %115, label %75, label %94

116:                                              ; preds = %88
  %117 = add i64 %80, %77
  %118 = getelementptr inbounds i8, i8* %41, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %116, %88
  %122 = add nsw i64 %92, 1
  %123 = getelementptr inbounds i8, i8* %41, i64 %92
  store i8 0, i8* %123, align 1
  br label %124

124:                                              ; preds = %121, %116
  %125 = phi i64 [ %122, %121 ], [ %92, %116 ]
  %126 = icmp slt i64 %125, 0
  br i1 %126, label %139, label %127

127:                                              ; preds = %124
  %128 = add nuw nsw i64 %125, 2
  %129 = icmp sgt i64 %128, %33
  br i1 %129, label %186, label %130

130:                                              ; preds = %127
  %131 = tail call i16 @llvm.bswap.i16(i16 %44) #12
  %132 = getelementptr inbounds i8, i8* %41, i64 %125
  %133 = bitcast i8* %132 to i16*
  store i16 %131, i16* %133, align 1
  %134 = add nuw nsw i64 %125, 4
  %135 = icmp sgt i64 %134, %33
  br i1 %135, label %186, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds i8, i8* %41, i64 %128
  %138 = bitcast i8* %137 to i16*
  store i16 256, i16* %138, align 1
  br label %139

139:                                              ; preds = %124, %136
  %140 = phi i64 [ %134, %136 ], [ %125, %124 ]
  %141 = trunc i64 %140 to i32
  %142 = icmp slt i32 %141, 0
  br i1 %142, label %186, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds i8, i8* %35, i64 8
  %145 = bitcast i8* %144 to i32*
  store i32 %141, i32* %145, align 8
  %146 = getelementptr inbounds i8, i8* %35, i64 224
  %147 = bitcast i8* %146 to i16*
  store i16 %30, i16* %147, align 8
  %148 = getelementptr inbounds i8, i8* %35, i64 16
  %149 = bitcast i8* %148 to i32*
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds i8, i8* %35, i64 20
  %151 = bitcast i8* %150 to i32*
  store i32 %0, i32* %151, align 4
  %152 = getelementptr inbounds i8, i8* %35, i64 24
  %153 = bitcast i8* %152 to i8**
  store i8* %3, i8** %153, align 8
  %154 = getelementptr inbounds i8, i8* %35, i64 32
  %155 = bitcast i8* %154 to void (i32, i8, i32, i32, i8*, i8*)**
  store void (i32, i8, i32, i32, i8*, i8*)* %2, void (i32, i8, i32, i32, i8*, i8*)** %155, align 8
  br i1 %7, label %156, label %181

156:                                              ; preds = %143
  %157 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %158 = icmp eq %struct.nameserver* %157, null
  br i1 %158, label %181, label %159

159:                                              ; preds = %156
  %160 = load i32, i32* @global_good_nameservers, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %159
  %163 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %157, i64 0, i32 6
  %164 = load %struct.nameserver*, %struct.nameserver** %163, align 8
  store %struct.nameserver* %164, %struct.nameserver** @server_head, align 8
  br label %181

165:                                              ; preds = %159, %174
  %166 = phi %struct.nameserver* [ %175, %174 ], [ %157, %159 ]
  %167 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %166, i64 0, i32 9
  %168 = load i8, i8* %167, align 8
  %169 = icmp eq i8 %168, 0
  %170 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %166, i64 0, i32 6
  br i1 %169, label %174, label %171

171:                                              ; preds = %165
  %172 = bitcast %struct.nameserver** %170 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %181

174:                                              ; preds = %165
  %175 = load %struct.nameserver*, %struct.nameserver** %170, align 8
  store %struct.nameserver* %175, %struct.nameserver** @server_head, align 8
  %176 = icmp eq %struct.nameserver* %175, %157
  br i1 %176, label %177, label %165

177:                                              ; preds = %174
  %178 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %157, i64 0, i32 6
  %179 = bitcast %struct.nameserver** %178 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %181

181:                                              ; preds = %177, %171, %162, %156, %143
  %182 = phi %struct.nameserver* [ null, %143 ], [ %166, %171 ], [ %157, %177 ], [ %164, %162 ], [ null, %156 ]
  %183 = getelementptr inbounds i8, i8* %35, i64 40
  %184 = bitcast i8* %183 to %struct.nameserver**
  store %struct.nameserver* %182, %struct.nameserver** %184, align 8
  %185 = getelementptr inbounds i8, i8* %35, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 16, i1 false)
  br label %187

186:                                              ; preds = %103, %94, %66, %83, %75, %38, %46, %50, %54, %58, %62, %127, %130, %139
  tail call void @free(i8* %35) #12
  br label %187

187:                                              ; preds = %29, %186, %181
  %188 = phi %struct.request* [ null, %186 ], [ %36, %181 ], [ null, %29 ]
  ret %struct.request* %188
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @search_request_new(i32, i8*, i32, void (i32, i8, i32, i32, i8*, i8*)*, i8*) unnamed_addr #1 {
  %6 = and i32 %2, 1
  %7 = icmp eq i32 %6, 0
  %8 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %9 = icmp ne %struct.search_state* %8, null
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %124

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.search_state, %struct.search_state* %8, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %124, label %15

15:                                               ; preds = %11
  %16 = tail call i8* @strchr(i8* %1, i32 46) #17
  %17 = icmp eq i8* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15, %18
  %19 = phi i8* [ %23, %18 ], [ %16, %15 ]
  %20 = phi i32 [ %22, %18 ], [ 0, %15 ]
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = add nuw nsw i32 %20, 1
  %23 = tail call i8* @strchr(i8* %21, i32 46) #17
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %15
  %26 = phi i32 [ 0, %15 ], [ %22, %18 ]
  %27 = getelementptr inbounds %struct.search_state, %struct.search_state* %8, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = tail call fastcc %struct.request* @request_new(i32 %0, i8* %1, void (i32, i8, i32, i32, i8*, i8*)* %3, i8* %4)
  %32 = icmp eq %struct.request* %31, null
  br i1 %32, label %167, label %71

33:                                               ; preds = %25
  %34 = tail call i64 @strlen(i8* %1) #17
  %35 = shl i64 %34, 32
  %36 = add i64 %35, -4294967296
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp ne i8 %39, 46
  %41 = getelementptr inbounds %struct.search_state, %struct.search_state* %8, i64 0, i32 3
  %42 = load %struct.search_domain*, %struct.search_domain** %41, align 8
  %43 = icmp eq %struct.search_domain* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %33
  %45 = trunc i64 %34 to i32
  %46 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %42, i64 1
  %47 = bitcast %struct.search_domain* %46 to i8*
  %48 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %42, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = zext i1 %40 to i32
  %51 = add nsw i32 %50, %45
  %52 = add nsw i32 %51, %49
  %53 = add nsw i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = tail call noalias i8* @malloc(i64 %54) #12
  %56 = icmp eq i8* %55, null
  br i1 %56, label %167, label %57

57:                                               ; preds = %44
  %58 = ashr exact i64 %35, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 %1, i64 %58, i1 false) #12
  br i1 %40, label %59, label %62

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8, i8* %55, i64 %58
  store i8 46, i8* %60, align 1
  br label %62

61:                                               ; preds = %33
  tail call void @abort() #18
  unreachable

62:                                               ; preds = %59, %57
  %63 = getelementptr inbounds i8, i8* %55, i64 %58
  %64 = zext i1 %40 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = sext i32 %49 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %47, i64 %66, i1 false) #12
  %67 = sext i32 %52 to i64
  %68 = getelementptr inbounds i8, i8* %55, i64 %67
  store i8 0, i8* %68, align 1
  %69 = tail call fastcc %struct.request* @request_new(i32 %0, i8* nonnull %55, void (i32, i8, i32, i32, i8*, i8*)* %3, i8* %4)
  tail call void @free(i8* nonnull %55) #12
  %70 = icmp eq %struct.request* %69, null
  br i1 %70, label %167, label %71

71:                                               ; preds = %62, %30
  %72 = phi %struct.request* [ %31, %30 ], [ %69, %62 ]
  %73 = phi i32 [ -1, %30 ], [ 0, %62 ]
  %74 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 8
  store i32 %73, i32* %74, align 8
  %75 = tail call noalias i8* @strdup(i8* %1) #12
  %76 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 10
  store i8* %75, i8** %76, align 8
  %77 = load i64, i64* bitcast (%struct.search_state** @global_search_state to i64*), align 8
  %78 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 9
  %79 = bitcast %struct.search_state** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 11
  store i32 %2, i32* %80, align 8
  %81 = inttoptr i64 %77 to %struct.search_state*
  %82 = getelementptr inbounds %struct.search_state, %struct.search_state* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %82, align 8
  %85 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 7
  %86 = load %struct.nameserver*, %struct.nameserver** %85, align 8
  %87 = icmp eq %struct.nameserver* %86, null
  br i1 %87, label %106, label %88

88:                                               ; preds = %71
  %89 = load %struct.request*, %struct.request** @req_head, align 8
  %90 = icmp eq %struct.request* %89, null
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  store %struct.request* %72, %struct.request** @req_head, align 8
  %92 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 13
  store %struct.request* %72, %struct.request** %92, align 8
  %93 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 12
  br label %102

94:                                               ; preds = %88
  %95 = ptrtoint %struct.request* %89 to i64
  %96 = getelementptr inbounds %struct.request, %struct.request* %89, i64 0, i32 13
  %97 = load %struct.request*, %struct.request** %96, align 8
  %98 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 13
  store %struct.request* %97, %struct.request** %98, align 8
  %99 = getelementptr inbounds %struct.request, %struct.request* %97, i64 0, i32 12
  store %struct.request* %72, %struct.request** %99, align 8
  %100 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 12
  %101 = bitcast %struct.request** %100 to i64*
  store i64 %95, i64* %101, align 8
  br label %102

102:                                              ; preds = %94, %91
  %103 = phi %struct.request** [ %96, %94 ], [ %93, %91 ]
  store %struct.request* %72, %struct.request** %103, align 8
  %104 = load i32, i32* @global_requests_inflight, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* @global_requests_inflight, align 4
  tail call fastcc void @evdns_request_transmit(%struct.request* nonnull %72) #12
  br label %167

106:                                              ; preds = %71
  %107 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %108 = icmp eq %struct.request* %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  store %struct.request* %72, %struct.request** @req_waiting_head, align 8
  %110 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 13
  store %struct.request* %72, %struct.request** %110, align 8
  %111 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 12
  br label %120

112:                                              ; preds = %106
  %113 = ptrtoint %struct.request* %107 to i64
  %114 = getelementptr inbounds %struct.request, %struct.request* %107, i64 0, i32 13
  %115 = load %struct.request*, %struct.request** %114, align 8
  %116 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 13
  store %struct.request* %115, %struct.request** %116, align 8
  %117 = getelementptr inbounds %struct.request, %struct.request* %115, i64 0, i32 12
  store %struct.request* %72, %struct.request** %117, align 8
  %118 = getelementptr inbounds %struct.request, %struct.request* %72, i64 0, i32 12
  %119 = bitcast %struct.request** %118 to i64*
  store i64 %113, i64* %119, align 8
  br label %120

120:                                              ; preds = %112, %109
  %121 = phi %struct.request** [ %114, %112 ], [ %111, %109 ]
  store %struct.request* %72, %struct.request** %121, align 8
  %122 = load i32, i32* @global_requests_waiting, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* @global_requests_waiting, align 4
  br label %167

124:                                              ; preds = %11, %5
  %125 = tail call fastcc %struct.request* @request_new(i32 %0, i8* %1, void (i32, i8, i32, i32, i8*, i8*)* %3, i8* %4)
  %126 = icmp eq %struct.request* %125, null
  br i1 %126, label %167, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 7
  %129 = load %struct.nameserver*, %struct.nameserver** %128, align 8
  %130 = icmp eq %struct.nameserver* %129, null
  br i1 %130, label %149, label %131

131:                                              ; preds = %127
  %132 = load %struct.request*, %struct.request** @req_head, align 8
  %133 = icmp eq %struct.request* %132, null
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  store %struct.request* %125, %struct.request** @req_head, align 8
  %135 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 13
  store %struct.request* %125, %struct.request** %135, align 8
  %136 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 12
  br label %145

137:                                              ; preds = %131
  %138 = ptrtoint %struct.request* %132 to i64
  %139 = getelementptr inbounds %struct.request, %struct.request* %132, i64 0, i32 13
  %140 = load %struct.request*, %struct.request** %139, align 8
  %141 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 13
  store %struct.request* %140, %struct.request** %141, align 8
  %142 = getelementptr inbounds %struct.request, %struct.request* %140, i64 0, i32 12
  store %struct.request* %125, %struct.request** %142, align 8
  %143 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 12
  %144 = bitcast %struct.request** %143 to i64*
  store i64 %138, i64* %144, align 8
  br label %145

145:                                              ; preds = %137, %134
  %146 = phi %struct.request** [ %139, %137 ], [ %136, %134 ]
  store %struct.request* %125, %struct.request** %146, align 8
  %147 = load i32, i32* @global_requests_inflight, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* @global_requests_inflight, align 4
  tail call fastcc void @evdns_request_transmit(%struct.request* nonnull %125) #12
  br label %167

149:                                              ; preds = %127
  %150 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %151 = icmp eq %struct.request* %150, null
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  store %struct.request* %125, %struct.request** @req_waiting_head, align 8
  %153 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 13
  store %struct.request* %125, %struct.request** %153, align 8
  %154 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 12
  br label %163

155:                                              ; preds = %149
  %156 = ptrtoint %struct.request* %150 to i64
  %157 = getelementptr inbounds %struct.request, %struct.request* %150, i64 0, i32 13
  %158 = load %struct.request*, %struct.request** %157, align 8
  %159 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 13
  store %struct.request* %158, %struct.request** %159, align 8
  %160 = getelementptr inbounds %struct.request, %struct.request* %158, i64 0, i32 12
  store %struct.request* %125, %struct.request** %160, align 8
  %161 = getelementptr inbounds %struct.request, %struct.request* %125, i64 0, i32 12
  %162 = bitcast %struct.request** %161 to i64*
  store i64 %156, i64* %162, align 8
  br label %163

163:                                              ; preds = %155, %152
  %164 = phi %struct.request** [ %157, %155 ], [ %154, %152 ]
  store %struct.request* %125, %struct.request** %164, align 8
  %165 = load i32, i32* @global_requests_waiting, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* @global_requests_waiting, align 4
  br label %167

167:                                              ; preds = %44, %62, %163, %145, %120, %102, %124, %30
  %168 = phi i32 [ 1, %30 ], [ 1, %124 ], [ 0, %102 ], [ 0, %120 ], [ 0, %145 ], [ 0, %163 ], [ 1, %62 ], [ 1, %44 ]
  ret i32 %168
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resolve_ipv6(i8*, i32, void (i32, i8, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #1 {
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %0)
  %5 = and i32 %1, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %4
  %8 = tail call fastcc %struct.request* @request_new(i32 28, i8* %0, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  %9 = icmp eq %struct.request* %8, null
  br i1 %9, label %52, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 7
  %12 = load %struct.nameserver*, %struct.nameserver** %11, align 8
  %13 = icmp eq %struct.nameserver* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = load %struct.request*, %struct.request** @req_head, align 8
  %16 = icmp eq %struct.request* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  store %struct.request* %8, %struct.request** @req_head, align 8
  %18 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %8, %struct.request** %18, align 8
  %19 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  br label %28

20:                                               ; preds = %14
  %21 = ptrtoint %struct.request* %15 to i64
  %22 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  %23 = load %struct.request*, %struct.request** %22, align 8
  %24 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %23, %struct.request** %24, align 8
  %25 = getelementptr inbounds %struct.request, %struct.request* %23, i64 0, i32 12
  store %struct.request* %8, %struct.request** %25, align 8
  %26 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  %27 = bitcast %struct.request** %26 to i64*
  store i64 %21, i64* %27, align 8
  br label %28

28:                                               ; preds = %20, %17
  %29 = phi %struct.request** [ %22, %20 ], [ %19, %17 ]
  store %struct.request* %8, %struct.request** %29, align 8
  %30 = load i32, i32* @global_requests_inflight, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* @global_requests_inflight, align 4
  tail call fastcc void @evdns_request_transmit(%struct.request* nonnull %8) #12
  br label %52

32:                                               ; preds = %10
  %33 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %34 = icmp eq %struct.request* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  store %struct.request* %8, %struct.request** @req_waiting_head, align 8
  %36 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %8, %struct.request** %36, align 8
  %37 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  br label %46

38:                                               ; preds = %32
  %39 = ptrtoint %struct.request* %33 to i64
  %40 = getelementptr inbounds %struct.request, %struct.request* %33, i64 0, i32 13
  %41 = load %struct.request*, %struct.request** %40, align 8
  %42 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 13
  store %struct.request* %41, %struct.request** %42, align 8
  %43 = getelementptr inbounds %struct.request, %struct.request* %41, i64 0, i32 12
  store %struct.request* %8, %struct.request** %43, align 8
  %44 = getelementptr inbounds %struct.request, %struct.request* %8, i64 0, i32 12
  %45 = bitcast %struct.request** %44 to i64*
  store i64 %39, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %35
  %47 = phi %struct.request** [ %40, %38 ], [ %37, %35 ]
  store %struct.request* %8, %struct.request** %47, align 8
  %48 = load i32, i32* @global_requests_waiting, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* @global_requests_waiting, align 4
  br label %52

50:                                               ; preds = %4
  %51 = tail call fastcc i32 @search_request_new(i32 28, i8* %0, i32 %1, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  br label %52

52:                                               ; preds = %46, %28, %7, %50
  %53 = phi i32 [ %51, %50 ], [ 1, %7 ], [ 0, %28 ], [ 0, %46 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resolve_reverse(%struct.in_addr* nocapture readonly, i32, void (i32, i8, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #1 {
  %5 = alloca [32 x i8], align 16
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 32, i1 false)
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #12
  %10 = and i32 %9, 255
  %11 = lshr i32 %9, 8
  %12 = and i32 %11, 255
  %13 = lshr i32 %9, 16
  %14 = and i32 %13, 255
  %15 = lshr i32 %9, 24
  %16 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %6, i64 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 %10, i32 %12, i32 %14, i32 %15) #12
  call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6)
  %17 = call fastcc %struct.request* @request_new(i32 12, i8* nonnull %6, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  %18 = icmp eq %struct.request* %17, null
  br i1 %18, label %59, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 7
  %21 = load %struct.nameserver*, %struct.nameserver** %20, align 8
  %22 = icmp eq %struct.nameserver* %21, null
  br i1 %22, label %41, label %23

23:                                               ; preds = %19
  %24 = load %struct.request*, %struct.request** @req_head, align 8
  %25 = icmp eq %struct.request* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  store %struct.request* %17, %struct.request** @req_head, align 8
  %27 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 13
  store %struct.request* %17, %struct.request** %27, align 8
  %28 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 12
  br label %37

29:                                               ; preds = %23
  %30 = ptrtoint %struct.request* %24 to i64
  %31 = getelementptr inbounds %struct.request, %struct.request* %24, i64 0, i32 13
  %32 = load %struct.request*, %struct.request** %31, align 8
  %33 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 13
  store %struct.request* %32, %struct.request** %33, align 8
  %34 = getelementptr inbounds %struct.request, %struct.request* %32, i64 0, i32 12
  store %struct.request* %17, %struct.request** %34, align 8
  %35 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 12
  %36 = bitcast %struct.request** %35 to i64*
  store i64 %30, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %26
  %38 = phi %struct.request** [ %31, %29 ], [ %28, %26 ]
  store %struct.request* %17, %struct.request** %38, align 8
  %39 = load i32, i32* @global_requests_inflight, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* @global_requests_inflight, align 4
  call fastcc void @evdns_request_transmit(%struct.request* nonnull %17) #12
  br label %59

41:                                               ; preds = %19
  %42 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %43 = icmp eq %struct.request* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  store %struct.request* %17, %struct.request** @req_waiting_head, align 8
  %45 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 13
  store %struct.request* %17, %struct.request** %45, align 8
  %46 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 12
  br label %55

47:                                               ; preds = %41
  %48 = ptrtoint %struct.request* %42 to i64
  %49 = getelementptr inbounds %struct.request, %struct.request* %42, i64 0, i32 13
  %50 = load %struct.request*, %struct.request** %49, align 8
  %51 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 13
  store %struct.request* %50, %struct.request** %51, align 8
  %52 = getelementptr inbounds %struct.request, %struct.request* %50, i64 0, i32 12
  store %struct.request* %17, %struct.request** %52, align 8
  %53 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 12
  %54 = bitcast %struct.request** %53 to i64*
  store i64 %48, i64* %54, align 8
  br label %55

55:                                               ; preds = %47, %44
  %56 = phi %struct.request** [ %49, %47 ], [ %46, %44 ]
  store %struct.request* %17, %struct.request** %56, align 8
  %57 = load i32, i32* @global_requests_waiting, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* @global_requests_waiting, align 4
  br label %59

59:                                               ; preds = %55, %37, %4
  %60 = phi i32 [ 1, %4 ], [ 0, %37 ], [ 0, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resolve_reverse_ipv6(%struct.in6_addr* nocapture readonly, i32, void (i32, i8, i32, i32, i8*, i8*)*, i8*) local_unnamed_addr #1 {
  %5 = alloca [73 x i8], align 16
  %6 = getelementptr inbounds [73 x i8], [73 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 73, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 73, i1 false)
  %7 = bitcast %struct.in6_addr* %0 to [16 x i8]*
  br label %8

8:                                                ; preds = %8, %4
  %9 = phi i64 [ 15, %4 ], [ %42, %8 ]
  %10 = phi i8* [ %6, %4 ], [ %41, %8 ]
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 %9
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 %13, 15
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %17, i8* %10, align 1
  %19 = getelementptr inbounds i8, i8* %10, i64 2
  store i8 46, i8* %18, align 1
  %20 = lshr i32 %13, 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 %23, i8* %19, align 1
  %25 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 46, i8* %24, align 1
  %26 = add nsw i64 %9, -1
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, 15
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %10, i64 5
  store i8 %33, i8* %25, align 1
  %35 = getelementptr inbounds i8, i8* %10, i64 6
  store i8 46, i8* %34, align 1
  %36 = lshr i32 %29, 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 %39, i8* %35, align 1
  %41 = getelementptr inbounds i8, i8* %10, i64 8
  store i8 46, i8* %40, align 1
  %42 = add nsw i64 %9, -2
  %43 = icmp eq i64 %26, 0
  br i1 %43, label %44, label %8

44:                                               ; preds = %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 9, i1 false)
  call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %6)
  %45 = call fastcc %struct.request* @request_new(i32 12, i8* nonnull %6, void (i32, i8, i32, i32, i8*, i8*)* %2, i8* %3)
  %46 = icmp eq %struct.request* %45, null
  br i1 %46, label %87, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 7
  %49 = load %struct.nameserver*, %struct.nameserver** %48, align 8
  %50 = icmp eq %struct.nameserver* %49, null
  br i1 %50, label %69, label %51

51:                                               ; preds = %47
  %52 = load %struct.request*, %struct.request** @req_head, align 8
  %53 = icmp eq %struct.request* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  store %struct.request* %45, %struct.request** @req_head, align 8
  %55 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 13
  store %struct.request* %45, %struct.request** %55, align 8
  %56 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 12
  br label %65

57:                                               ; preds = %51
  %58 = ptrtoint %struct.request* %52 to i64
  %59 = getelementptr inbounds %struct.request, %struct.request* %52, i64 0, i32 13
  %60 = load %struct.request*, %struct.request** %59, align 8
  %61 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 13
  store %struct.request* %60, %struct.request** %61, align 8
  %62 = getelementptr inbounds %struct.request, %struct.request* %60, i64 0, i32 12
  store %struct.request* %45, %struct.request** %62, align 8
  %63 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 12
  %64 = bitcast %struct.request** %63 to i64*
  store i64 %58, i64* %64, align 8
  br label %65

65:                                               ; preds = %57, %54
  %66 = phi %struct.request** [ %59, %57 ], [ %56, %54 ]
  store %struct.request* %45, %struct.request** %66, align 8
  %67 = load i32, i32* @global_requests_inflight, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* @global_requests_inflight, align 4
  call fastcc void @evdns_request_transmit(%struct.request* nonnull %45) #12
  br label %87

69:                                               ; preds = %47
  %70 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %71 = icmp eq %struct.request* %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  store %struct.request* %45, %struct.request** @req_waiting_head, align 8
  %73 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 13
  store %struct.request* %45, %struct.request** %73, align 8
  %74 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 12
  br label %83

75:                                               ; preds = %69
  %76 = ptrtoint %struct.request* %70 to i64
  %77 = getelementptr inbounds %struct.request, %struct.request* %70, i64 0, i32 13
  %78 = load %struct.request*, %struct.request** %77, align 8
  %79 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 13
  store %struct.request* %78, %struct.request** %79, align 8
  %80 = getelementptr inbounds %struct.request, %struct.request* %78, i64 0, i32 12
  store %struct.request* %45, %struct.request** %80, align 8
  %81 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 12
  %82 = bitcast %struct.request** %81 to i64*
  store i64 %76, i64* %82, align 8
  br label %83

83:                                               ; preds = %75, %72
  %84 = phi %struct.request** [ %77, %75 ], [ %74, %72 ]
  store %struct.request* %45, %struct.request** %84, align 8
  %85 = load i32, i32* @global_requests_waiting, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* @global_requests_waiting, align 4
  br label %87

87:                                               ; preds = %83, %65, %44
  %88 = phi i32 [ 1, %44 ], [ 0, %65 ], [ 0, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 73, i8* nonnull %6) #12
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evdns_search_clear() local_unnamed_addr #1 {
  %1 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %2 = icmp eq %struct.search_state* %1, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.search_state, %struct.search_state* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.search_state, %struct.search_state* %1, i64 0, i32 3
  %10 = load %struct.search_domain*, %struct.search_domain** %9, align 8
  %11 = icmp eq %struct.search_domain* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %struct.search_domain* [ %16, %12 ], [ %10, %8 ]
  %14 = bitcast %struct.search_domain* %13 to i8*
  %15 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %13, i64 0, i32 1
  %16 = load %struct.search_domain*, %struct.search_domain** %15, align 8
  tail call void @free(i8* %14) #12
  %17 = icmp eq %struct.search_domain* %16, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = bitcast %struct.search_state* %1 to i8*
  tail call void @free(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %3, %0
  %21 = tail call noalias i8* @malloc(i64 24) #12
  %22 = icmp eq i8* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %20
  %24 = bitcast i8* %21 to %struct.search_state*
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #12
  %26 = bitcast i8* %21 to i32*
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 4
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4
  br label %29

29:                                               ; preds = %20, %23
  %30 = phi %struct.search_state* [ %24, %23 ], [ null, %20 ]
  store %struct.search_state* %30, %struct.search_state** @global_search_state, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evdns_search_add(i8* nocapture readonly) local_unnamed_addr #1 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 46
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %2, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @strlen(i8* %3) #17
  %9 = trunc i64 %8 to i32
  %10 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %11 = icmp eq %struct.search_state* %10, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %7
  %13 = tail call noalias i8* @malloc(i64 24) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %41

16:                                               ; preds = %12
  %17 = bitcast i8* %13 to %struct.search_state*
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #12
  %19 = bitcast i8* %13 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  store i8* %13, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %22

22:                                               ; preds = %16, %7
  %23 = phi %struct.search_state* [ %17, %16 ], [ %10, %7 ]
  %24 = getelementptr inbounds %struct.search_state, %struct.search_state* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = shl i64 %8, 32
  %28 = ashr exact i64 %27, 32
  %29 = add nsw i64 %28, 16
  %30 = tail call noalias i8* @malloc(i64 %29) #12
  %31 = icmp eq i8* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds i8, i8* %30, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %3, i64 %28, i1 false) #12
  %34 = getelementptr inbounds %struct.search_state, %struct.search_state* %23, i64 0, i32 3
  %35 = bitcast %struct.search_domain** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %30, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i8* %30 to i32*
  store i32 %9, i32* %39, align 8
  %40 = bitcast %struct.search_domain** %34 to i8**
  store i8* %30, i8** %40, align 8
  br label %41

41:                                               ; preds = %15, %22, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evdns_search_ndots_set(i32) local_unnamed_addr #1 {
  %2 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %3 = icmp eq %struct.search_state* %2, null
  br i1 %3, label %4, label %14

4:                                                ; preds = %1
  %5 = tail call noalias i8* @malloc(i64 24) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %17

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.search_state*
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #12
  %11 = bitcast i8* %5 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 4
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  store i8* %5, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi %struct.search_state* [ %9, %8 ], [ %2, %1 ]
  %16 = getelementptr inbounds %struct.search_state, %struct.search_state* %15, i64 0, i32 1
  store i32 %0, i32* %16, align 4
  br label %17

17:                                               ; preds = %7, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_set_option(i8* nocapture readonly, i8*, i32) local_unnamed_addr #1 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %39

11:                                               ; preds = %3
  %12 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %13 = call i64 @strtol(i8* %1, i8** nonnull %8, i32 10) #12
  %14 = load i8*, i8** %8, align 8
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  %17 = trunc i64 %13 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %18 = icmp eq i32 %17, -1
  %19 = or i1 %18, %16
  br i1 %19, label %115, label %20

20:                                               ; preds = %11
  %21 = and i32 %2, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %115, label %23

23:                                               ; preds = %20
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i32 %17)
  %24 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %25 = icmp eq %struct.search_state* %24, null
  br i1 %25, label %26, label %36

26:                                               ; preds = %23
  %27 = tail call noalias i8* @malloc(i64 24) #12
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %115

30:                                               ; preds = %26
  %31 = bitcast i8* %27 to %struct.search_state*
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #12
  %33 = bitcast i8* %27 to i32*
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 4
  %35 = bitcast i8* %34 to i32*
  store i32 1, i32* %35, align 4
  store i8* %27, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %36

36:                                               ; preds = %30, %23
  %37 = phi %struct.search_state* [ %31, %30 ], [ %24, %23 ]
  %38 = getelementptr inbounds %struct.search_state, %struct.search_state* %37, i64 0, i32 1
  store i32 %17, i32* %38, align 4
  br label %115

39:                                               ; preds = %3
  %40 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %57

42:                                               ; preds = %39
  %43 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %44 = call i64 @strtol(i8* %1, i8** nonnull %7, i32 10) #12
  %45 = load i8*, i8** %7, align 8
  %46 = load i8, i8* %45, align 1
  %47 = icmp ne i8 %46, 0
  %48 = trunc i64 %44 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %49 = icmp eq i32 %48, -1
  %50 = or i1 %49, %47
  br i1 %50, label %115, label %51

51:                                               ; preds = %42
  %52 = and i32 %2, 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %115, label %54

54:                                               ; preds = %51
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 %48)
  %55 = shl i64 %44, 32
  %56 = ashr exact i64 %55, 32
  store i64 %56, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @global_timeout, i64 0, i32 0), align 8
  br label %115

57:                                               ; preds = %39
  %58 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 12) #17
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %77

60:                                               ; preds = %57
  %61 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %62 = call i64 @strtol(i8* %1, i8** nonnull %6, i32 10) #12
  %63 = load i8*, i8** %6, align 8
  %64 = load i8, i8* %63, align 1
  %65 = icmp ne i8 %64, 0
  %66 = trunc i64 %62 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %67 = icmp eq i32 %66, -1
  %68 = or i1 %67, %65
  br i1 %68, label %115, label %69

69:                                               ; preds = %60
  %70 = icmp slt i32 %66, 255
  %71 = select i1 %70, i32 %66, i32 255
  %72 = icmp sgt i32 %71, 1
  %73 = select i1 %72, i32 %71, i32 1
  %74 = and i32 %2, 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %115, label %76

76:                                               ; preds = %69
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i32 %73)
  store i32 %73, i32* @global_max_nameserver_timeout, align 4
  br label %115

77:                                               ; preds = %57
  %78 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13) #17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %97

80:                                               ; preds = %77
  %81 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %82 = call i64 @strtol(i8* %1, i8** nonnull %5, i32 10) #12
  %83 = load i8*, i8** %5, align 8
  %84 = load i8, i8* %83, align 1
  %85 = icmp ne i8 %84, 0
  %86 = trunc i64 %82 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  %87 = icmp eq i32 %86, -1
  %88 = or i1 %87, %85
  br i1 %88, label %115, label %89

89:                                               ; preds = %80
  %90 = icmp slt i32 %86, 65000
  %91 = select i1 %90, i32 %86, i32 65000
  %92 = icmp sgt i32 %91, 1
  %93 = select i1 %92, i32 %91, i32 1
  %94 = and i32 %2, 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %115, label %96

96:                                               ; preds = %89
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), i32 %93)
  store i32 %93, i32* @global_max_requests_inflight, align 4
  br label %115

97:                                               ; preds = %77
  %98 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #17
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %115

100:                                              ; preds = %97
  %101 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %102 = call i64 @strtol(i8* %1, i8** nonnull %4, i32 10) #12
  %103 = load i8*, i8** %4, align 8
  %104 = load i8, i8* %103, align 1
  %105 = icmp ne i8 %104, 0
  %106 = trunc i64 %102 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #12
  %107 = icmp eq i32 %106, -1
  %108 = or i1 %107, %105
  br i1 %108, label %115, label %109

109:                                              ; preds = %100
  %110 = icmp slt i32 %106, 255
  %111 = select i1 %110, i32 %106, i32 255
  %112 = and i32 %2, 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %109
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i32 %111)
  store i32 %111, i32* @global_max_retransmits, align 4
  br label %115

115:                                              ; preds = %109, %100, %80, %89, %60, %69, %51, %42, %29, %20, %11, %97, %36, %54, %76, %96, %114
  %116 = phi i32 [ 0, %114 ], [ 0, %96 ], [ 0, %76 ], [ 0, %54 ], [ 0, %36 ], [ 0, %97 ], [ -1, %29 ], [ 0, %20 ], [ -1, %11 ], [ 0, %51 ], [ -1, %42 ], [ -1, %60 ], [ 0, %69 ], [ -1, %80 ], [ 0, %89 ], [ 0, %109 ], [ -1, %100 ]
  ret i32 %116
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_resolv_conf_parse(i32, i8*) local_unnamed_addr #1 {
  %3 = alloca [65 x i8], align 16
  %4 = alloca %struct.stat, align 8
  %5 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 144, i1 false)
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i8* %1)
  %6 = tail call i32 (i8*, i32, ...) @open64(i8* %1, i32 0) #12
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %93

8:                                                ; preds = %2
  %9 = and i32 %0, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %88, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 65, i1 false) #12
  %13 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %14 = icmp eq %struct.search_state* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.search_state, %struct.search_state* %13, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %16, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.search_state, %struct.search_state* %13, i64 0, i32 3
  %22 = load %struct.search_domain*, %struct.search_domain** %21, align 8
  %23 = icmp eq %struct.search_domain* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20, %24
  %25 = phi %struct.search_domain* [ %28, %24 ], [ %22, %20 ]
  %26 = bitcast %struct.search_domain* %25 to i8*
  %27 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %25, i64 0, i32 1
  %28 = load %struct.search_domain*, %struct.search_domain** %27, align 8
  tail call void @free(i8* %26) #12
  %29 = icmp eq %struct.search_domain* %28, null
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %20
  %31 = bitcast %struct.search_state* %13 to i8*
  tail call void @free(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %15, %11
  %33 = tail call noalias i8* @malloc(i64 24) #12
  %34 = icmp eq i8* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = bitcast i8* %33 to %struct.search_state*
  %37 = getelementptr inbounds i8, i8* %33, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #12
  %38 = bitcast i8* %33 to i32*
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %33, i64 4
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4
  br label %41

41:                                               ; preds = %32, %35
  %42 = phi %struct.search_state* [ %36, %35 ], [ null, %32 ]
  store %struct.search_state* %42, %struct.search_state** @global_search_state, align 8
  %43 = call i32 @gethostname(i8* nonnull %12, i64 65) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %87

45:                                               ; preds = %41
  %46 = call i8* @strchr(i8* nonnull %12, i32 46) #17
  %47 = icmp eq i8* %46, null
  br i1 %47, label %87, label %48

48:                                               ; preds = %45, %48
  %49 = phi i8* [ %52, %48 ], [ %46, %45 ]
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 46
  %52 = getelementptr inbounds i8, i8* %49, i64 1
  br i1 %51, label %48, label %53

53:                                               ; preds = %48
  %54 = call i64 @strlen(i8* %49) #17
  %55 = trunc i64 %54 to i32
  %56 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %57 = icmp eq %struct.search_state* %56, null
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = call noalias i8* @malloc(i64 24) #12
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %87

62:                                               ; preds = %58
  %63 = bitcast i8* %59 to %struct.search_state*
  %64 = getelementptr inbounds i8, i8* %59, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #12
  %65 = bitcast i8* %59 to i32*
  store i32 1, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 4
  %67 = bitcast i8* %66 to i32*
  store i32 1, i32* %67, align 4
  store i8* %59, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %68

68:                                               ; preds = %62, %53
  %69 = phi %struct.search_state* [ %63, %62 ], [ %56, %53 ]
  %70 = getelementptr inbounds %struct.search_state, %struct.search_state* %69, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 8
  %73 = shl i64 %54, 32
  %74 = ashr exact i64 %73, 32
  %75 = add nsw i64 %74, 16
  %76 = call noalias i8* @malloc(i64 %75) #12
  %77 = icmp eq i8* %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds i8, i8* %76, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %49, i64 %74, i1 false) #12
  %80 = getelementptr inbounds %struct.search_state, %struct.search_state* %69, i64 0, i32 3
  %81 = bitcast %struct.search_domain** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds i8, i8* %76, i64 8
  %84 = bitcast i8* %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast i8* %76 to i32*
  store i32 %55, i32* %85, align 8
  %86 = bitcast %struct.search_domain** %80 to i8**
  store i8* %76, i8** %86, align 8
  br label %87

87:                                               ; preds = %78, %68, %61, %45, %41
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %12) #12
  br label %88

88:                                               ; preds = %87, %8
  %89 = and i32 %0, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %324, label %91

91:                                               ; preds = %88
  %92 = call i32 @evdns_nameserver_ip_add(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #12
  br label %324

93:                                               ; preds = %2
  %94 = bitcast %struct.stat* %4 to %struct.stat64*
  %95 = call i32 @__fxstat64(i32 1, i32 %6, %struct.stat64* nonnull %94) #12
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %321

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 8
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %188

101:                                              ; preds = %97
  %102 = and i32 %0, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %181, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %105) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 -86, i64 65, i1 false) #12
  %106 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %107 = icmp eq %struct.search_state* %106, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.search_state, %struct.search_state* %106, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = add nsw i32 %110, -1
  store i32 %111, i32* %109, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.search_state, %struct.search_state* %106, i64 0, i32 3
  %115 = load %struct.search_domain*, %struct.search_domain** %114, align 8
  %116 = icmp eq %struct.search_domain* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %117
  %118 = phi %struct.search_domain* [ %121, %117 ], [ %115, %113 ]
  %119 = bitcast %struct.search_domain* %118 to i8*
  %120 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %118, i64 0, i32 1
  %121 = load %struct.search_domain*, %struct.search_domain** %120, align 8
  call void @free(i8* %119) #12
  %122 = icmp eq %struct.search_domain* %121, null
  br i1 %122, label %123, label %117

123:                                              ; preds = %117, %113
  %124 = bitcast %struct.search_state* %106 to i8*
  call void @free(i8* %124) #12
  br label %125

125:                                              ; preds = %123, %108, %104
  %126 = call noalias i8* @malloc(i64 24) #12
  %127 = icmp eq i8* %126, null
  br i1 %127, label %134, label %128

128:                                              ; preds = %125
  %129 = bitcast i8* %126 to %struct.search_state*
  %130 = getelementptr inbounds i8, i8* %126, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 16, i1 false) #12
  %131 = bitcast i8* %126 to i32*
  store i32 1, i32* %131, align 8
  %132 = getelementptr inbounds i8, i8* %126, i64 4
  %133 = bitcast i8* %132 to i32*
  store i32 1, i32* %133, align 4
  br label %134

134:                                              ; preds = %125, %128
  %135 = phi %struct.search_state* [ %129, %128 ], [ null, %125 ]
  store %struct.search_state* %135, %struct.search_state** @global_search_state, align 8
  %136 = call i32 @gethostname(i8* nonnull %105, i64 65) #12
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %180

138:                                              ; preds = %134
  %139 = call i8* @strchr(i8* nonnull %105, i32 46) #17
  %140 = icmp eq i8* %139, null
  br i1 %140, label %180, label %141

141:                                              ; preds = %138, %141
  %142 = phi i8* [ %145, %141 ], [ %139, %138 ]
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 46
  %145 = getelementptr inbounds i8, i8* %142, i64 1
  br i1 %144, label %141, label %146

146:                                              ; preds = %141
  %147 = call i64 @strlen(i8* %142) #17
  %148 = trunc i64 %147 to i32
  %149 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %150 = icmp eq %struct.search_state* %149, null
  br i1 %150, label %151, label %161

151:                                              ; preds = %146
  %152 = call noalias i8* @malloc(i64 24) #12
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %180

155:                                              ; preds = %151
  %156 = bitcast i8* %152 to %struct.search_state*
  %157 = getelementptr inbounds i8, i8* %152, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 16, i1 false) #12
  %158 = bitcast i8* %152 to i32*
  store i32 1, i32* %158, align 8
  %159 = getelementptr inbounds i8, i8* %152, i64 4
  %160 = bitcast i8* %159 to i32*
  store i32 1, i32* %160, align 4
  store i8* %152, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %161

161:                                              ; preds = %155, %146
  %162 = phi %struct.search_state* [ %156, %155 ], [ %149, %146 ]
  %163 = getelementptr inbounds %struct.search_state, %struct.search_state* %162, i64 0, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %163, align 8
  %166 = shl i64 %147, 32
  %167 = ashr exact i64 %166, 32
  %168 = add nsw i64 %167, 16
  %169 = call noalias i8* @malloc(i64 %168) #12
  %170 = icmp eq i8* %169, null
  br i1 %170, label %180, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds i8, i8* %169, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %142, i64 %167, i1 false) #12
  %173 = getelementptr inbounds %struct.search_state, %struct.search_state* %162, i64 0, i32 3
  %174 = bitcast %struct.search_domain** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds i8, i8* %169, i64 8
  %177 = bitcast i8* %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast i8* %169 to i32*
  store i32 %148, i32* %178, align 8
  %179 = bitcast %struct.search_domain** %173 to i8**
  store i8* %169, i8** %179, align 8
  br label %180

180:                                              ; preds = %171, %161, %154, %138, %134
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %105) #12
  br label %181

181:                                              ; preds = %180, %101
  %182 = and i32 %0, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = call i32 @evdns_nameserver_ip_add(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #12
  br label %186

186:                                              ; preds = %181, %184
  %187 = select i1 %183, i32 0, i32 6
  br label %321

188:                                              ; preds = %97
  %189 = icmp sgt i64 %99, 65535
  br i1 %189, label %321, label %190

190:                                              ; preds = %188
  %191 = add nsw i64 %99, 1
  %192 = call noalias i8* @malloc(i64 %191) #12
  %193 = icmp eq i8* %192, null
  br i1 %193, label %321, label %194

194:                                              ; preds = %190, %203
  %195 = phi i64 [ %206, %203 ], [ %99, %190 ]
  %196 = phi i32 [ %204, %203 ], [ 0, %190 ]
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %192, i64 %197
  %199 = sub i64 %195, %197
  %200 = call i64 @read(i32 %6, i8* %198, i64 %199) #12
  %201 = trunc i64 %200 to i32
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %203, label %208

203:                                              ; preds = %194
  %204 = add nsw i32 %196, %201
  %205 = sext i32 %204 to i64
  %206 = load i64, i64* %98, align 8
  %207 = icmp eq i64 %206, %205
  br i1 %207, label %211, label %194

208:                                              ; preds = %194
  %209 = trunc i64 %200 to i32
  %210 = icmp slt i32 %209, 0
  br i1 %210, label %319, label %211

211:                                              ; preds = %203, %208
  %212 = phi i64 [ %197, %208 ], [ %205, %203 ]
  %213 = getelementptr inbounds i8, i8* %192, i64 %212
  store i8 0, i8* %213, align 1
  %214 = call i8* @strchr(i8* nonnull %192, i32 10) #17
  %215 = icmp eq i8* %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %211, %216
  %217 = phi i8* [ %220, %216 ], [ %214, %211 ]
  %218 = phi i8* [ %219, %216 ], [ %192, %211 ]
  store i8 0, i8* %217, align 1
  call fastcc void @resolv_conf_parse_line(i8* %218, i32 %0)
  %219 = getelementptr inbounds i8, i8* %217, i64 1
  %220 = call i8* @strchr(i8* %219, i32 10) #17
  %221 = icmp eq i8* %220, null
  br i1 %221, label %222, label %216

222:                                              ; preds = %216, %211
  %223 = phi i8* [ %192, %211 ], [ %219, %216 ]
  call fastcc void @resolv_conf_parse_line(i8* %223, i32 %0)
  %224 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %225 = icmp ne %struct.nameserver* %224, null
  %226 = and i32 %0, 2
  %227 = icmp eq i32 %226, 0
  %228 = or i1 %227, %225
  br i1 %228, label %231, label %229

229:                                              ; preds = %222
  %230 = call i32 @evdns_nameserver_ip_add(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0))
  br label %231

231:                                              ; preds = %222, %229
  %232 = phi i32 [ 0, %222 ], [ 6, %229 ]
  %233 = and i32 %0, 1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %319, label %235

235:                                              ; preds = %231
  %236 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %237 = icmp eq %struct.search_state* %236, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %235
  %239 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %239) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %239, i8 -86, i64 65, i1 false) #12
  br label %262

240:                                              ; preds = %235
  %241 = getelementptr inbounds %struct.search_state, %struct.search_state* %236, i64 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %319

244:                                              ; preds = %240
  %245 = getelementptr inbounds [65 x i8], [65 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %245) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %245, i8 -86, i64 65, i1 false) #12
  %246 = getelementptr inbounds %struct.search_state, %struct.search_state* %236, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = add nsw i32 %247, -1
  store i32 %248, i32* %246, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %262

250:                                              ; preds = %244
  %251 = getelementptr inbounds %struct.search_state, %struct.search_state* %236, i64 0, i32 3
  %252 = load %struct.search_domain*, %struct.search_domain** %251, align 8
  %253 = icmp eq %struct.search_domain* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %250, %254
  %255 = phi %struct.search_domain* [ %258, %254 ], [ %252, %250 ]
  %256 = bitcast %struct.search_domain* %255 to i8*
  %257 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %255, i64 0, i32 1
  %258 = load %struct.search_domain*, %struct.search_domain** %257, align 8
  call void @free(i8* %256) #12
  %259 = icmp eq %struct.search_domain* %258, null
  br i1 %259, label %260, label %254

260:                                              ; preds = %254, %250
  %261 = bitcast %struct.search_state* %236 to i8*
  call void @free(i8* %261) #12
  br label %262

262:                                              ; preds = %238, %260, %244
  %263 = phi i8* [ %239, %238 ], [ %245, %260 ], [ %245, %244 ]
  %264 = call noalias i8* @malloc(i64 24) #12
  %265 = icmp eq i8* %264, null
  br i1 %265, label %272, label %266

266:                                              ; preds = %262
  %267 = bitcast i8* %264 to %struct.search_state*
  %268 = getelementptr inbounds i8, i8* %264, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 0, i64 16, i1 false) #12
  %269 = bitcast i8* %264 to i32*
  store i32 1, i32* %269, align 8
  %270 = getelementptr inbounds i8, i8* %264, i64 4
  %271 = bitcast i8* %270 to i32*
  store i32 1, i32* %271, align 4
  br label %272

272:                                              ; preds = %262, %266
  %273 = phi %struct.search_state* [ %267, %266 ], [ null, %262 ]
  store %struct.search_state* %273, %struct.search_state** @global_search_state, align 8
  %274 = call i32 @gethostname(i8* nonnull %263, i64 65) #12
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %318

276:                                              ; preds = %272
  %277 = call i8* @strchr(i8* nonnull %263, i32 46) #17
  %278 = icmp eq i8* %277, null
  br i1 %278, label %318, label %279

279:                                              ; preds = %276, %279
  %280 = phi i8* [ %283, %279 ], [ %277, %276 ]
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %281, 46
  %283 = getelementptr inbounds i8, i8* %280, i64 1
  br i1 %282, label %279, label %284

284:                                              ; preds = %279
  %285 = call i64 @strlen(i8* %280) #17
  %286 = trunc i64 %285 to i32
  %287 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %288 = icmp eq %struct.search_state* %287, null
  br i1 %288, label %289, label %299

289:                                              ; preds = %284
  %290 = call noalias i8* @malloc(i64 24) #12
  %291 = icmp eq i8* %290, null
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %318

293:                                              ; preds = %289
  %294 = bitcast i8* %290 to %struct.search_state*
  %295 = getelementptr inbounds i8, i8* %290, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 0, i64 16, i1 false) #12
  %296 = bitcast i8* %290 to i32*
  store i32 1, i32* %296, align 8
  %297 = getelementptr inbounds i8, i8* %290, i64 4
  %298 = bitcast i8* %297 to i32*
  store i32 1, i32* %298, align 4
  store i8* %290, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %299

299:                                              ; preds = %293, %284
  %300 = phi %struct.search_state* [ %294, %293 ], [ %287, %284 ]
  %301 = getelementptr inbounds %struct.search_state, %struct.search_state* %300, i64 0, i32 2
  %302 = load i32, i32* %301, align 8
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %301, align 8
  %304 = shl i64 %285, 32
  %305 = ashr exact i64 %304, 32
  %306 = add nsw i64 %305, 16
  %307 = call noalias i8* @malloc(i64 %306) #12
  %308 = icmp eq i8* %307, null
  br i1 %308, label %318, label %309

309:                                              ; preds = %299
  %310 = getelementptr inbounds i8, i8* %307, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %310, i8* align 1 %280, i64 %305, i1 false) #12
  %311 = getelementptr inbounds %struct.search_state, %struct.search_state* %300, i64 0, i32 3
  %312 = bitcast %struct.search_domain** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds i8, i8* %307, i64 8
  %315 = bitcast i8* %314 to i64*
  store i64 %313, i64* %315, align 8
  %316 = bitcast i8* %307 to i32*
  store i32 %286, i32* %316, align 8
  %317 = bitcast %struct.search_domain** %311 to i8**
  store i8* %307, i8** %317, align 8
  br label %318

318:                                              ; preds = %309, %299, %292, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %263) #12
  br label %319

319:                                              ; preds = %208, %231, %240, %318
  %320 = phi i32 [ %232, %318 ], [ %232, %240 ], [ %232, %231 ], [ 5, %208 ]
  call void @free(i8* %192) #12
  br label %321

321:                                              ; preds = %190, %188, %93, %319, %186
  %322 = phi i32 [ %320, %319 ], [ %187, %186 ], [ 2, %93 ], [ 3, %188 ], [ 4, %190 ]
  %323 = call i32 @close(i32 %6) #12
  br label %324

324:                                              ; preds = %91, %88, %321
  %325 = phi i32 [ %322, %321 ], [ 1, %88 ], [ 1, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %5) #12
  ret i32 %325
}

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #9

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @resolv_conf_parse_line(i8*, i32) unnamed_addr #1 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.in_addr, align 4
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = call i8* @strtok_r(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %214, label %8

8:                                                ; preds = %2
  %9 = call i32 @strcmp(i8* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0)) #17
  %10 = icmp ne i32 %9, 0
  %11 = and i32 %1, 2
  %12 = icmp eq i32 %11, 0
  %13 = or i1 %12, %10
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %16 = bitcast %struct.in_addr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  %17 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %4, i64 0, i32 0
  store i32 -1431655766, i32* %17, align 4
  %18 = icmp eq i8* %15, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = call i32 @inet_aton(i8* nonnull %15, %struct.in_addr* nonnull %4) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %17, align 4
  %24 = zext i32 %23 to i64
  %25 = call fastcc i32 @_evdns_nameserver_add_impl(i64 %24, i32 53) #12
  br label %26

26:                                               ; preds = %19, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  br label %214

27:                                               ; preds = %8
  %28 = call i32 @strcmp(i8* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0)) #17
  %29 = icmp ne i32 %28, 0
  %30 = and i32 %1, 1
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %31, %29
  br i1 %32, label %105, label %33

33:                                               ; preds = %27
  %34 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %214, label %36

36:                                               ; preds = %33
  %37 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %38 = icmp eq %struct.search_state* %37, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.search_state, %struct.search_state* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %40, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.search_state, %struct.search_state* %37, i64 0, i32 3
  %46 = load %struct.search_domain*, %struct.search_domain** %45, align 8
  %47 = icmp eq %struct.search_domain* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %44, %48
  %49 = phi %struct.search_domain* [ %52, %48 ], [ %46, %44 ]
  %50 = bitcast %struct.search_domain* %49 to i8*
  %51 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %49, i64 0, i32 1
  %52 = load %struct.search_domain*, %struct.search_domain** %51, align 8
  call void @free(i8* %50) #12
  %53 = icmp eq %struct.search_domain* %52, null
  br i1 %53, label %54, label %48

54:                                               ; preds = %48, %44
  %55 = bitcast %struct.search_state* %37 to i8*
  call void @free(i8* %55) #12
  br label %56

56:                                               ; preds = %54, %39, %36
  %57 = call noalias i8* @malloc(i64 24) #12
  %58 = icmp eq i8* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %56
  %60 = bitcast i8* %57 to %struct.search_state*
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 16, i1 false) #12
  %62 = bitcast i8* %57 to i32*
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %57, i64 4
  %64 = bitcast i8* %63 to i32*
  store i32 1, i32* %64, align 4
  br label %65

65:                                               ; preds = %56, %59
  %66 = phi %struct.search_state* [ %60, %59 ], [ null, %56 ]
  store %struct.search_state* %66, %struct.search_state** @global_search_state, align 8
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i8* [ %34, %65 ], [ %71, %67 ]
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 46
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  br i1 %70, label %67, label %72

72:                                               ; preds = %67
  %73 = call i64 @strlen(i8* %68) #17
  %74 = trunc i64 %73 to i32
  %75 = icmp eq %struct.search_state* %66, null
  br i1 %75, label %76, label %86

76:                                               ; preds = %72
  %77 = call noalias i8* @malloc(i64 24) #12
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %214

80:                                               ; preds = %76
  %81 = bitcast i8* %77 to %struct.search_state*
  %82 = getelementptr inbounds i8, i8* %77, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false) #12
  %83 = bitcast i8* %77 to i32*
  store i32 1, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 1, i32* %85, align 4
  store i8* %77, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %86

86:                                               ; preds = %80, %72
  %87 = phi %struct.search_state* [ %81, %80 ], [ %66, %72 ]
  %88 = getelementptr inbounds %struct.search_state, %struct.search_state* %87, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %88, align 8
  %91 = shl i64 %73, 32
  %92 = ashr exact i64 %91, 32
  %93 = add nsw i64 %92, 16
  %94 = call noalias i8* @malloc(i64 %93) #12
  %95 = icmp eq i8* %94, null
  br i1 %95, label %214, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds i8, i8* %94, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %68, i64 %92, i1 false) #12
  %98 = getelementptr inbounds %struct.search_state, %struct.search_state* %87, i64 0, i32 3
  %99 = bitcast %struct.search_domain** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %94, i64 8
  %102 = bitcast i8* %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = bitcast i8* %94 to i32*
  store i32 %74, i32* %103, align 8
  %104 = bitcast %struct.search_domain** %98 to i8**
  store i8* %94, i8** %104, align 8
  br label %214

105:                                              ; preds = %27
  %106 = call i32 @strcmp(i8* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #17
  %107 = icmp ne i32 %106, 0
  %108 = or i1 %31, %107
  br i1 %108, label %199, label %109

109:                                              ; preds = %105
  %110 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %111 = icmp eq %struct.search_state* %110, null
  br i1 %111, label %129, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.search_state, %struct.search_state* %110, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = add nsw i32 %114, -1
  store i32 %115, i32* %113, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.search_state, %struct.search_state* %110, i64 0, i32 3
  %119 = load %struct.search_domain*, %struct.search_domain** %118, align 8
  %120 = icmp eq %struct.search_domain* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %117, %121
  %122 = phi %struct.search_domain* [ %125, %121 ], [ %119, %117 ]
  %123 = bitcast %struct.search_domain* %122 to i8*
  %124 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %122, i64 0, i32 1
  %125 = load %struct.search_domain*, %struct.search_domain** %124, align 8
  call void @free(i8* %123) #12
  %126 = icmp eq %struct.search_domain* %125, null
  br i1 %126, label %127, label %121

127:                                              ; preds = %121, %117
  %128 = bitcast %struct.search_state* %110 to i8*
  call void @free(i8* %128) #12
  br label %129

129:                                              ; preds = %127, %112, %109
  %130 = call noalias i8* @malloc(i64 24) #12
  %131 = icmp eq i8* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = bitcast i8* %130 to %struct.search_state*
  %134 = getelementptr inbounds i8, i8* %130, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 16, i1 false) #12
  %135 = bitcast i8* %130 to i32*
  store i32 1, i32* %135, align 8
  %136 = getelementptr inbounds i8, i8* %130, i64 4
  %137 = bitcast i8* %136 to i32*
  store i32 1, i32* %137, align 4
  br label %138

138:                                              ; preds = %129, %132
  %139 = phi %struct.search_state* [ %133, %132 ], [ null, %129 ]
  store %struct.search_state* %139, %struct.search_state** @global_search_state, align 8
  %140 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %141 = icmp eq i8* %140, null
  br i1 %141, label %186, label %142

142:                                              ; preds = %138, %147
  %143 = phi i8* [ %148, %147 ], [ %140, %138 ]
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 46
  %146 = getelementptr inbounds i8, i8* %143, i64 1
  br i1 %145, label %147, label %149

147:                                              ; preds = %142, %183
  %148 = phi i8* [ %146, %142 ], [ %184, %183 ]
  br label %142

149:                                              ; preds = %142
  %150 = call i64 @strlen(i8* %143) #17
  %151 = trunc i64 %150 to i32
  %152 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %153 = icmp eq %struct.search_state* %152, null
  br i1 %153, label %154, label %164

154:                                              ; preds = %149
  %155 = call noalias i8* @malloc(i64 24) #12
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %183

158:                                              ; preds = %154
  %159 = bitcast i8* %155 to %struct.search_state*
  %160 = getelementptr inbounds i8, i8* %155, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 16, i1 false) #12
  %161 = bitcast i8* %155 to i32*
  store i32 1, i32* %161, align 8
  %162 = getelementptr inbounds i8, i8* %155, i64 4
  %163 = bitcast i8* %162 to i32*
  store i32 1, i32* %163, align 4
  store i8* %155, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %164

164:                                              ; preds = %158, %149
  %165 = phi %struct.search_state* [ %159, %158 ], [ %152, %149 ]
  %166 = getelementptr inbounds %struct.search_state, %struct.search_state* %165, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %166, align 8
  %169 = shl i64 %150, 32
  %170 = ashr exact i64 %169, 32
  %171 = add nsw i64 %170, 16
  %172 = call noalias i8* @malloc(i64 %171) #12
  %173 = icmp eq i8* %172, null
  br i1 %173, label %183, label %174

174:                                              ; preds = %164
  %175 = getelementptr inbounds i8, i8* %172, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %175, i8* align 1 %143, i64 %170, i1 false) #12
  %176 = getelementptr inbounds %struct.search_state, %struct.search_state* %165, i64 0, i32 3
  %177 = bitcast %struct.search_domain** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds i8, i8* %172, i64 8
  %180 = bitcast i8* %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i8* %172 to i32*
  store i32 %151, i32* %181, align 8
  %182 = bitcast %struct.search_domain** %176 to i8**
  store i8* %172, i8** %182, align 8
  br label %183

183:                                              ; preds = %157, %164, %174
  %184 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %185 = icmp eq i8* %184, null
  br i1 %185, label %186, label %147

186:                                              ; preds = %183, %138
  %187 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %188 = getelementptr inbounds %struct.search_state, %struct.search_state* %187, i64 0, i32 3
  %189 = load %struct.search_domain*, %struct.search_domain** %188, align 8
  %190 = icmp eq %struct.search_domain* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %186, %191
  %192 = phi %struct.search_domain* [ %193, %191 ], [ null, %186 ]
  %193 = phi %struct.search_domain* [ %195, %191 ], [ %189, %186 ]
  %194 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %193, i64 0, i32 1
  %195 = load %struct.search_domain*, %struct.search_domain** %194, align 8
  store %struct.search_domain* %192, %struct.search_domain** %194, align 8
  %196 = icmp eq %struct.search_domain* %195, null
  br i1 %196, label %197, label %191

197:                                              ; preds = %191, %186
  %198 = phi %struct.search_domain* [ null, %186 ], [ %193, %191 ]
  store %struct.search_domain* %198, %struct.search_domain** %188, align 8
  br label %214

199:                                              ; preds = %105
  %200 = call i32 @strcmp(i8* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0)) #17
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %199
  %203 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %204 = icmp eq i8* %203, null
  br i1 %204, label %214, label %205

205:                                              ; preds = %202, %205
  %206 = phi i8* [ %212, %205 ], [ %203, %202 ]
  %207 = call i8* @strchr(i8* nonnull %206, i32 58) #17
  %208 = icmp eq i8* %207, null
  %209 = getelementptr inbounds i8, i8* %207, i64 1
  %210 = select i1 %208, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.59, i64 0, i64 0), i8* %209
  %211 = call i32 @evdns_set_option(i8* nonnull %206, i8* %210, i32 %1)
  %212 = call i8* @strtok_r(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** nonnull %3) #12
  %213 = icmp eq i8* %212, null
  br i1 %213, label %214, label %205

214:                                              ; preds = %205, %202, %96, %86, %79, %26, %197, %199, %33, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evdns_init() local_unnamed_addr #1 {
  %1 = tail call i32 @evdns_resolv_conf_parse(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  ret i32 %1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @evdns_err_to_string(i32) local_unnamed_addr #10 {
  switch i32 %0, label %11 [
    i32 0, label %12
    i32 1, label %2
    i32 2, label %3
    i32 3, label %4
    i32 4, label %5
    i32 5, label %6
    i32 65, label %7
    i32 66, label %8
    i32 67, label %9
    i32 68, label %10
  ]

2:                                                ; preds = %1
  br label %12

3:                                                ; preds = %1
  br label %12

4:                                                ; preds = %1
  br label %12

5:                                                ; preds = %1
  br label %12

6:                                                ; preds = %1
  br label %12

7:                                                ; preds = %1
  br label %12

8:                                                ; preds = %1
  br label %12

9:                                                ; preds = %1
  br label %12

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %1, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %13 = phi i8* [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), %11 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0), %10 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), %8 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), %7 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), %6 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), %5 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), %4 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), %3 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), %2 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), %1 ]
  ret i8* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evdns_shutdown(i32) local_unnamed_addr #1 {
  %2 = load %struct.request*, %struct.request** @req_head, align 8
  %3 = icmp eq %struct.request* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = icmp eq i32 %0, 0
  br label %11

6:                                                ; preds = %31, %1
  %7 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %8 = icmp eq %struct.request* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %6
  %10 = icmp eq i32 %0, 0
  br label %35

11:                                               ; preds = %4, %31
  %12 = phi %struct.request* [ %2, %4 ], [ %33, %31 ]
  br i1 %5, label %31, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %31 [
    i32 1, label %16
    i32 12, label %21
    i32 28, label %26
  ]

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 6
  %18 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %17, align 8
  %19 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 5
  %20 = load i8*, i8** %19, align 8
  tail call void %18(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %20) #12
  br label %31

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 6
  %23 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %22, align 8
  %24 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 5
  %25 = load i8*, i8** %24, align 8
  tail call void %23(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %25) #12
  br label %31

26:                                               ; preds = %13
  %27 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 6
  %28 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %27, align 8
  %29 = getelementptr inbounds %struct.request, %struct.request* %12, i64 0, i32 5
  %30 = load i8*, i8** %29, align 8
  tail call void %28(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %30) #12
  br label %31

31:                                               ; preds = %26, %21, %16, %13, %11
  %32 = load %struct.request*, %struct.request** @req_head, align 8
  tail call fastcc void @request_finished(%struct.request* %32, %struct.request** nonnull @req_head)
  %33 = load %struct.request*, %struct.request** @req_head, align 8
  %34 = icmp eq %struct.request* %33, null
  br i1 %34, label %6, label %11

35:                                               ; preds = %9, %55
  %36 = phi %struct.request* [ %7, %9 ], [ %57, %55 ]
  br i1 %10, label %55, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  switch i32 %39, label %55 [
    i32 1, label %40
    i32 12, label %45
    i32 28, label %50
  ]

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 6
  %42 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %41, align 8
  %43 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 5
  %44 = load i8*, i8** %43, align 8
  tail call void %42(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %44) #12
  br label %55

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 6
  %47 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %46, align 8
  %48 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 5
  %49 = load i8*, i8** %48, align 8
  tail call void %47(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %49) #12
  br label %55

50:                                               ; preds = %37
  %51 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 6
  %52 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %51, align 8
  %53 = getelementptr inbounds %struct.request, %struct.request* %36, i64 0, i32 5
  %54 = load i8*, i8** %53, align 8
  tail call void %52(i32 68, i8 signext 0, i32 0, i32 0, i8* null, i8* %54) #12
  br label %55

55:                                               ; preds = %50, %45, %40, %37, %35
  %56 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  tail call fastcc void @request_finished(%struct.request* %56, %struct.request** nonnull @req_waiting_head)
  %57 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %58 = icmp eq %struct.request* %57, null
  br i1 %58, label %59, label %35

59:                                               ; preds = %55, %6
  store i32 0, i32* @global_requests_waiting, align 4
  store i32 0, i32* @global_requests_inflight, align 4
  %60 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  br label %61

61:                                               ; preds = %81, %59
  %62 = phi %struct.nameserver* [ %60, %59 ], [ %66, %81 ]
  %63 = icmp eq %struct.nameserver* %62, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %62, i64 0, i32 6
  %66 = load %struct.nameserver*, %struct.nameserver** %65, align 8
  %67 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %62, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = tail call i32 @close(i32 %68) #12
  br label %72

72:                                               ; preds = %70, %64
  %73 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %62, i64 0, i32 5
  %74 = tail call i32 @event_del(%struct.event* %73) #12
  %75 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %62, i64 0, i32 9
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %62, i64 0, i32 8
  %80 = tail call i32 @event_del(%struct.event* %79) #12
  br label %81

81:                                               ; preds = %78, %72
  %82 = bitcast %struct.nameserver* %62 to i8*
  tail call void @free(i8* %82) #12
  %83 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %84 = icmp eq %struct.nameserver* %66, %83
  br i1 %84, label %85, label %61

85:                                               ; preds = %61, %81
  store %struct.nameserver* null, %struct.nameserver** @server_head, align 8
  store i32 0, i32* @global_good_nameservers, align 4
  %86 = load %struct.search_state*, %struct.search_state** @global_search_state, align 8
  %87 = icmp eq %struct.search_state* %86, null
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = bitcast %struct.search_state* %86 to i8*
  %90 = getelementptr inbounds %struct.search_state, %struct.search_state* %86, i64 0, i32 3
  %91 = load %struct.search_domain*, %struct.search_domain** %90, align 8
  %92 = icmp eq %struct.search_domain* %91, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %88, %93
  %94 = phi %struct.search_domain* [ %97, %93 ], [ %91, %88 ]
  %95 = bitcast %struct.search_domain* %94 to i8*
  %96 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %94, i64 0, i32 1
  %97 = load %struct.search_domain*, %struct.search_domain** %96, align 8
  tail call void @free(i8* %95) #12
  %98 = icmp eq %struct.search_domain* %97, null
  br i1 %98, label %99, label %93

99:                                               ; preds = %93
  %100 = load i8*, i8** bitcast (%struct.search_state** @global_search_state to i8**), align 8
  br label %101

101:                                              ; preds = %99, %88
  %102 = phi i8* [ %100, %99 ], [ %89, %88 ]
  tail call void @free(i8* %102) #12
  store %struct.search_state* null, %struct.search_state** @global_search_state, align 8
  br label %103

103:                                              ; preds = %85, %101
  store void (i32, i8*)* null, void (i32, i8*)** @evdns_log_fn, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @request_finished(%struct.request*, %struct.request**) unnamed_addr #1 {
  %3 = icmp eq %struct.request** %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 12
  %6 = load %struct.request*, %struct.request** %5, align 8
  %7 = icmp eq %struct.request* %6, %0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store %struct.request* null, %struct.request** %1, align 8
  br label %25

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 13
  %11 = bitcast %struct.request** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.request, %struct.request* %6, i64 0, i32 13
  %14 = bitcast %struct.request** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %struct.request** %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = load %struct.request*, %struct.request** %10, align 8
  %18 = getelementptr inbounds %struct.request, %struct.request* %17, i64 0, i32 12
  %19 = bitcast %struct.request** %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = load %struct.request*, %struct.request** %1, align 8
  %21 = icmp eq %struct.request* %20, %0
  br i1 %21, label %22, label %25

22:                                               ; preds = %9
  %23 = load i64, i64* %15, align 8
  %24 = bitcast %struct.request** %1 to i64*
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %2, %8, %22, %9
  %26 = ptrtoint %struct.request* %0 to i64
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i64 0, i64 0), i64 %26)
  %27 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 14
  %28 = tail call i32 @event_del(%struct.event* %27) #12
  %29 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 9
  %30 = load %struct.search_state*, %struct.search_state** %29, align 8
  %31 = icmp eq %struct.search_state* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.search_state, %struct.search_state* %30, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %33, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.search_state, %struct.search_state* %30, i64 0, i32 3
  %39 = load %struct.search_domain*, %struct.search_domain** %38, align 8
  %40 = icmp eq %struct.search_domain* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %37, %41
  %42 = phi %struct.search_domain* [ %45, %41 ], [ %39, %37 ]
  %43 = bitcast %struct.search_domain* %42 to i8*
  %44 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %42, i64 0, i32 1
  %45 = load %struct.search_domain*, %struct.search_domain** %44, align 8
  tail call void @free(i8* %43) #12
  %46 = icmp eq %struct.search_domain* %45, null
  br i1 %46, label %47, label %41

47:                                               ; preds = %41, %37
  %48 = bitcast %struct.search_state* %30 to i8*
  tail call void @free(i8* %48) #12
  br label %49

49:                                               ; preds = %47, %32
  store %struct.search_state* null, %struct.search_state** %29, align 8
  br label %50

50:                                               ; preds = %49, %25
  %51 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 10
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @free(i8* nonnull %52) #12
  store i8* null, i8** %51, align 8
  br label %55

55:                                               ; preds = %50, %54
  %56 = load i32, i32* @global_requests_inflight, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* @global_requests_inflight, align 4
  %58 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 16
  %59 = load i8, i8* %58, align 2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @free(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  %65 = bitcast %struct.request* %0 to i8*
  tail call void @free(i8* %65) #12
  tail call fastcc void @evdns_requests_pump_waiting_queue()
  ret void
}

; Function Attrs: nounwind
declare i32 @clock_gettime(i32, %struct.timespec*) local_unnamed_addr #5

declare void @event_err(i32, i8*, ...) local_unnamed_addr #4

declare i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @dnsname_to_labels(i8* nocapture, i64, i64, i8*, i32, %struct.dnslabel_table*) unnamed_addr #1 {
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = icmp sgt i32 %4, 255
  br i1 %9, label %116, label %10

10:                                               ; preds = %6
  %11 = icmp ne %struct.dnslabel_table* %5, null
  %12 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 0
  br label %13

13:                                               ; preds = %10, %96
  %14 = phi i8* [ %101, %96 ], [ %3, %10 ]
  %15 = phi i64 [ %100, %96 ], [ %2, %10 ]
  br i1 %11, label %16, label %45

16:                                               ; preds = %13
  %17 = load i32, i32* %12, align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %16
  %20 = sext i32 %17 to i64
  br label %23

21:                                               ; preds = %23
  %22 = icmp eq i64 %29, %20
  br i1 %22, label %45, label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ 0, %19 ], [ %29, %21 ]
  %25 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %24, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = tail call i32 @strcmp(i8* %14, i8* %26) #17
  %28 = icmp eq i32 %27, 0
  %29 = add nuw nsw i64 %24, 1
  br i1 %28, label %30, label %21

30:                                               ; preds = %23
  %31 = and i64 %24, 4294967295
  %32 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %31, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %45

36:                                               ; preds = %30
  %37 = add nsw i64 %15, 2
  %38 = icmp sgt i64 %37, %1
  br i1 %38, label %116, label %39

39:                                               ; preds = %36
  %40 = trunc i64 %33 to i16
  %41 = or i16 %40, -16384
  %42 = tail call i16 @llvm.bswap.i16(i16 %41) #12
  %43 = getelementptr inbounds i8, i8* %0, i64 %15
  %44 = bitcast i8* %43 to i16*
  store i16 %42, i16* %44, align 1
  br label %116

45:                                               ; preds = %21, %16, %30, %13
  %46 = tail call i8* @strchr(i8* %14, i32 46) #17
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %72

48:                                               ; preds = %45
  %49 = ptrtoint i8* %8 to i64
  %50 = ptrtoint i8* %14 to i64
  %51 = sub i64 %49, %50
  %52 = trunc i64 %51 to i32
  %53 = icmp ugt i32 %52, 63
  br i1 %53, label %116, label %54

54:                                               ; preds = %48
  %55 = and i64 %51, 4294967295
  %56 = add i64 %15, 1
  %57 = add i64 %56, %55
  %58 = icmp ugt i64 %57, %1
  br i1 %58, label %116, label %59

59:                                               ; preds = %54
  br i1 %11, label %60, label %102

60:                                               ; preds = %59
  %61 = load i32, i32* %12, align 8
  %62 = icmp eq i32 %61, 128
  br i1 %62, label %102, label %63

63:                                               ; preds = %60
  %64 = tail call noalias i8* @strdup(i8* %14) #12
  %65 = icmp eq i8* %64, null
  br i1 %65, label %102, label %66

66:                                               ; preds = %63
  %67 = load i32, i32* %12, align 8
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %12, align 8
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %69, i32 0
  store i8* %64, i8** %70, align 8
  %71 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %69, i32 1
  store i64 %15, i64* %71, align 8
  br label %102

72:                                               ; preds = %45
  %73 = ptrtoint i8* %46 to i64
  %74 = ptrtoint i8* %14 to i64
  %75 = sub i64 %73, %74
  %76 = trunc i64 %75 to i32
  %77 = icmp ugt i32 %76, 63
  br i1 %77, label %116, label %78

78:                                               ; preds = %72
  %79 = and i64 %75, 4294967295
  %80 = add i64 %15, 1
  %81 = add i64 %80, %79
  %82 = icmp ugt i64 %81, %1
  br i1 %82, label %116, label %83

83:                                               ; preds = %78
  br i1 %11, label %84, label %96

84:                                               ; preds = %83
  %85 = load i32, i32* %12, align 8
  %86 = icmp eq i32 %85, 128
  br i1 %86, label %96, label %87

87:                                               ; preds = %84
  %88 = tail call noalias i8* @strdup(i8* %14) #12
  %89 = icmp eq i8* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %12, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %12, align 8
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %93, i32 0
  store i8* %88, i8** %94, align 8
  %95 = getelementptr inbounds %struct.dnslabel_table, %struct.dnslabel_table* %5, i64 0, i32 1, i64 %93, i32 1
  store i64 %15, i64* %95, align 8
  br label %96

96:                                               ; preds = %83, %84, %87, %90
  %97 = trunc i64 %75 to i8
  %98 = getelementptr inbounds i8, i8* %0, i64 %15
  store i8 %97, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %0, i64 %80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %14, i64 %75, i1 false)
  %100 = add nsw i64 %75, %80
  %101 = getelementptr inbounds i8, i8* %46, i64 1
  br label %13

102:                                              ; preds = %59, %60, %63, %66
  %103 = trunc i64 %51 to i8
  %104 = getelementptr inbounds i8, i8* %0, i64 %15
  store i8 %103, i8* %104, align 1
  %105 = getelementptr inbounds i8, i8* %0, i64 %56
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 1 %14, i64 %51, i1 false)
  %106 = add nsw i64 %56, %51
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = add i64 %51, %15
  %110 = getelementptr inbounds i8, i8* %0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %108, %102
  %114 = add nsw i64 %106, 1
  %115 = getelementptr inbounds i8, i8* %0, i64 %106
  store i8 0, i8* %115, align 1
  br label %116

116:                                              ; preds = %78, %72, %54, %48, %39, %36, %113, %108, %6
  %117 = phi i64 [ -2, %6 ], [ %114, %113 ], [ %106, %108 ], [ -2, %36 ], [ -2, %54 ], [ -1, %48 ], [ %37, %39 ], [ -1, %72 ], [ -2, %78 ]
  ret i64 %117
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @server_request_free_answers(%struct.server_request* nocapture) unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 10
  %3 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 9
  %4 = getelementptr inbounds %struct.server_request, %struct.server_request* %0, i64 0, i32 11
  %5 = load %struct.server_reply_item*, %struct.server_reply_item** %3, align 8
  %6 = icmp eq %struct.server_reply_item* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %struct.server_reply_item* [ %11, %18 ], [ %5, %1 ]
  %9 = bitcast %struct.server_reply_item* %8 to i8*
  %10 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %8, i64 0, i32 0
  %11 = load %struct.server_reply_item*, %struct.server_reply_item** %10, align 8
  %12 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %8, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void @free(i8* %13) #12
  %14 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %8, i64 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %7
  tail call void @free(i8* nonnull %15) #12
  br label %18

18:                                               ; preds = %7, %17
  tail call void @free(i8* %9) #12
  %19 = icmp eq %struct.server_reply_item* %11, null
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %struct.server_reply_item* null, %struct.server_reply_item** %3, align 8
  %21 = load %struct.server_reply_item*, %struct.server_reply_item** %2, align 8
  %22 = icmp eq %struct.server_reply_item* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %20, %34
  %24 = phi %struct.server_reply_item* [ %27, %34 ], [ %21, %20 ]
  %25 = bitcast %struct.server_reply_item* %24 to i8*
  %26 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %24, i64 0, i32 0
  %27 = load %struct.server_reply_item*, %struct.server_reply_item** %26, align 8
  %28 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %24, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #12
  %30 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %24, i64 0, i32 6
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %23
  tail call void @free(i8* nonnull %31) #12
  br label %34

34:                                               ; preds = %33, %23
  tail call void @free(i8* %25) #12
  %35 = icmp eq %struct.server_reply_item* %27, null
  br i1 %35, label %36, label %23

36:                                               ; preds = %34, %20
  store %struct.server_reply_item* null, %struct.server_reply_item** %2, align 8
  %37 = load %struct.server_reply_item*, %struct.server_reply_item** %4, align 8
  %38 = icmp eq %struct.server_reply_item* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36, %50
  %40 = phi %struct.server_reply_item* [ %43, %50 ], [ %37, %36 ]
  %41 = bitcast %struct.server_reply_item* %40 to i8*
  %42 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %40, i64 0, i32 0
  %43 = load %struct.server_reply_item*, %struct.server_reply_item** %42, align 8
  %44 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %40, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  tail call void @free(i8* %45) #12
  %46 = getelementptr inbounds %struct.server_reply_item, %struct.server_reply_item* %40, i64 0, i32 6
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %39
  tail call void @free(i8* nonnull %47) #12
  br label %50

50:                                               ; preds = %49, %39
  tail call void @free(i8* %41) #12
  %51 = icmp eq %struct.server_reply_item* %43, null
  br i1 %51, label %52, label %39

52:                                               ; preds = %50, %36
  store %struct.server_reply_item* null, %struct.server_reply_item** %4, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

declare i32 @evutil_vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @evdns_request_transmit(%struct.request*) unnamed_addr #1 {
  %2 = alloca %struct.sockaddr_in, align 4
  %3 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 17
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 15
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq i16 %5, -1
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 7
  %10 = load %struct.nameserver*, %struct.nameserver** %9, align 8
  %11 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %10, i64 0, i32 10
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %83

14:                                               ; preds = %8
  %15 = bitcast %struct.sockaddr_in* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i64 0, i32 0
  %17 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i64 0, i32 1
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i64 0, i32 2
  %20 = bitcast %struct.in_addr* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 0, i64 12, i1 false) #12
  %21 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %10, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %18, align 4
  %23 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %10, i64 0, i32 2
  %24 = load i16, i16* %23, align 8
  store i16 %24, i16* %17, align 2
  store i16 2, i16* %16, align 4
  %25 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %10, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = bitcast %struct.sockaddr_in* %2 to %struct.sockaddr*
  %33 = call i64 @sendto(i32 %26, i8* %28, i64 %31, i32 0, %struct.sockaddr* nonnull %32, i32 16) #12
  %34 = trunc i64 %33 to i32
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %14
  %37 = tail call i32* @__errno_location() #16
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 11
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  br label %47

41:                                               ; preds = %36
  %42 = load %struct.nameserver*, %struct.nameserver** %9, align 8
  %43 = call i8* @strerror(i32 %38) #12
  call fastcc void @nameserver_failed(%struct.nameserver* %42, i8* %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  br label %73

44:                                               ; preds = %14
  %45 = load i32, i32* %29, align 8
  %46 = icmp eq i32 %45, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  br i1 %46, label %73, label %47

47:                                               ; preds = %44, %40
  %48 = load %struct.nameserver*, %struct.nameserver** %9, align 8
  %49 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %48, i64 0, i32 10
  store i8 1, i8* %49, align 1
  %50 = load %struct.nameserver*, %struct.nameserver** %9, align 8
  %51 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %50, i64 0, i32 11
  %52 = load i8, i8* %51, align 2
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %83, label %54

54:                                               ; preds = %47
  store i8 1, i8* %51, align 2
  %55 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %50, i64 0, i32 5
  %56 = call i32 @event_del(%struct.event* %55) #12
  %57 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = bitcast %struct.nameserver* %50 to i8*
  call void @event_set(%struct.event* %55, i32 %58, i16 signext 22, void (i32, i16, i8*)* nonnull @nameserver_ready_callback, i8* %59) #12
  %60 = call i32 @event_add(%struct.event* %55, %struct.timeval* null) #12
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %83

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %50, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = call i32 @llvm.bswap.i32(i32 %64) #12
  %66 = lshr i32 %65, 24
  %67 = lshr i32 %65, 16
  %68 = and i32 %67, 255
  %69 = lshr i32 %65, 8
  %70 = and i32 %69, 255
  %71 = and i32 %65, 255
  %72 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %66, i32 %68, i32 %70, i32 %71) #12
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  br label %83

73:                                               ; preds = %44, %41
  %74 = ptrtoint %struct.request* %0 to i64
  call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i64 %74)
  %75 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 14
  %76 = call i32 @event_add(%struct.event* %75, %struct.timeval* nonnull @global_timeout) #12
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35, i64 0, i64 0), i64 %74)
  br label %79

79:                                               ; preds = %78, %73
  %80 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %80, align 8
  store i8 0, i8* %3, align 1
  br label %83

83:                                               ; preds = %62, %54, %47, %8, %79
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @nameserver_failed(%struct.nameserver*, i8*) unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %76, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #12
  %10 = lshr i32 %9, 24
  %11 = lshr i32 %9, 16
  %12 = and i32 %11, 255
  %13 = lshr i32 %9, 8
  %14 = and i32 %13, 255
  %15 = and i32 %9, 255
  %16 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %10, i32 %12, i32 %14, i32 %15) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i8* %1)
  %17 = load i32, i32* @global_good_nameservers, align 4
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* @global_good_nameservers, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %6
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0))
  br label %21

21:                                               ; preds = %20, %6
  store i8 0, i8* %3, align 8
  %22 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 3
  store i32 1, i32* %22, align 4
  %23 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 8
  %24 = tail call i32 @event_add(%struct.event* %23, %struct.timeval* getelementptr inbounds ([5 x %struct.timeval], [5 x %struct.timeval]* @global_nameserver_timeouts, i64 0, i64 0)) #12
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = load i32, i32* %7, align 4
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #12
  %29 = lshr i32 %28, 24
  %30 = lshr i32 %28, 16
  %31 = and i32 %30, 255
  %32 = lshr i32 %28, 8
  %33 = and i32 %32, 255
  %34 = and i32 %28, 255
  %35 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %29, i32 %31, i32 %33, i32 %34) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0))
  br label %36

36:                                               ; preds = %26, %21
  %37 = load i32, i32* @global_good_nameservers, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %76, label %39

39:                                               ; preds = %36
  %40 = load %struct.request*, %struct.request** @req_head, align 8
  %41 = icmp eq %struct.request* %40, null
  br i1 %41, label %76, label %42

42:                                               ; preds = %39, %72
  %43 = phi %struct.request* [ %74, %72 ], [ %40, %39 ]
  %44 = getelementptr inbounds %struct.request, %struct.request* %43, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %72

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.request, %struct.request* %43, i64 0, i32 7
  %49 = load %struct.nameserver*, %struct.nameserver** %48, align 8
  %50 = icmp eq %struct.nameserver* %49, %0
  br i1 %50, label %51, label %72

51:                                               ; preds = %47
  %52 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %53 = icmp eq %struct.nameserver* %52, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %51, %60
  %55 = phi %struct.nameserver* [ %61, %60 ], [ %52, %51 ]
  %56 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %55, i64 0, i32 9
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 0
  %59 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %55, i64 0, i32 6
  br i1 %58, label %60, label %65

60:                                               ; preds = %54
  %61 = load %struct.nameserver*, %struct.nameserver** %59, align 8
  store %struct.nameserver* %61, %struct.nameserver** @server_head, align 8
  %62 = icmp eq %struct.nameserver* %61, %52
  br i1 %62, label %63, label %54

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %52, i64 0, i32 6
  br label %65

65:                                               ; preds = %54, %63
  %66 = phi %struct.nameserver** [ %64, %63 ], [ %59, %54 ]
  %67 = phi %struct.nameserver* [ %52, %63 ], [ %55, %54 ]
  %68 = bitcast %struct.nameserver** %66 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %70

70:                                               ; preds = %65, %51
  %71 = phi %struct.nameserver* [ null, %51 ], [ %67, %65 ]
  store %struct.nameserver* %71, %struct.nameserver** %48, align 8
  br label %72

72:                                               ; preds = %70, %47, %42
  %73 = getelementptr inbounds %struct.request, %struct.request* %43, i64 0, i32 12
  %74 = load %struct.request*, %struct.request** %73, align 8
  %75 = icmp eq %struct.request* %74, %40
  br i1 %75, label %76, label %42

76:                                               ; preds = %72, %39, %36, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @nameserver_ready_callback(i32, i16 signext, i8*) #1 {
  %4 = bitcast i8* %2 to %struct.nameserver*
  %5 = sext i16 %1 to i32
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %50, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %2, i64 297
  store i8 0, i8* %9, align 1
  %10 = load %struct.request*, %struct.request** @req_head, align 8
  %11 = icmp eq %struct.request* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8, %19
  %13 = phi i8 [ %20, %19 ], [ 0, %8 ]
  %14 = phi %struct.request* [ %22, %19 ], [ %10, %8 ]
  %15 = getelementptr inbounds %struct.request, %struct.request* %14, i64 0, i32 17
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  tail call fastcc void @evdns_request_transmit(%struct.request* %14) #12
  br label %19

19:                                               ; preds = %18, %12
  %20 = phi i8 [ 1, %18 ], [ %13, %12 ]
  %21 = getelementptr inbounds %struct.request, %struct.request* %14, i64 0, i32 12
  %22 = load %struct.request*, %struct.request** %21, align 8
  %23 = icmp eq %struct.request* %22, %10
  br i1 %23, label %24, label %12

24:                                               ; preds = %19
  %25 = icmp eq i8 %20, 0
  br i1 %25, label %26, label %50

26:                                               ; preds = %8, %24
  %27 = getelementptr inbounds i8, i8* %2, i64 298
  %28 = load i8, i8* %27, align 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  store i8 0, i8* %27, align 2
  %31 = getelementptr inbounds i8, i8* %2, i64 24
  %32 = bitcast i8* %31 to %struct.event*
  %33 = tail call i32 @event_del(%struct.event* %32) #12
  %34 = bitcast i8* %2 to i32*
  %35 = load i32, i32* %34, align 8
  tail call void @event_set(%struct.event* %32, i32 %35, i16 signext 18, void (i32, i16, i8*)* nonnull @nameserver_ready_callback, i8* %2) #12
  %36 = tail call i32 @event_add(%struct.event* %32, %struct.timeval* null) #12
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %30
  %39 = getelementptr inbounds i8, i8* %2, i64 4
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = tail call i32 @llvm.bswap.i32(i32 %41) #12
  %43 = lshr i32 %42, 24
  %44 = lshr i32 %42, 16
  %45 = and i32 %44, 255
  %46 = lshr i32 %42, 8
  %47 = and i32 %46, 255
  %48 = and i32 %42, 255
  %49 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %43, i32 %45, i32 %47, i32 %48) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  br label %50

50:                                               ; preds = %38, %30, %26, %24, %3
  %51 = and i32 %5, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call fastcc void @nameserver_read(%struct.nameserver* %4)
  br label %54

54:                                               ; preds = %50, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @nameserver_read(%struct.nameserver*) unnamed_addr #1 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = alloca %struct.reply, align 4
  %5 = alloca [1500 x i8], align 16
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1500, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1500, i1 false)
  %9 = bitcast %struct.sockaddr_storage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 128, i1 false)
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 128, i32* %7, align 4
  %11 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  %14 = call i64 @recvfrom(i32 %12, i8* nonnull %8, i64 1500, i32 0, %struct.sockaddr* nonnull %13, i32* nonnull %7) #12
  %15 = trunc i64 %14 to i32
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %6, i64 0, i32 1, i64 2
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 1
  %22 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %0, i64 0, i32 4
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %25 = bitcast %struct.reply* %4 to i8*
  %26 = bitcast [1500 x i8]* %5 to i16*
  %27 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 2
  %28 = bitcast i8* %27 to i16*
  %29 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 4
  %30 = bitcast i8* %29 to i16*
  %31 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 6
  %32 = bitcast i8* %31 to i16*
  %33 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 0
  %34 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 1
  %36 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast [32 x %struct.in6_addr]* %36 to [32 x i32]*
  %38 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 2
  %39 = bitcast %union.anon.2* %38 to i8*
  %40 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 2, i32 0, i32 1, i64 3, i32 0, i32 0, i64 3
  %41 = bitcast i32* %40 to i8*
  br label %48

42:                                               ; preds = %476, %1
  %43 = tail call i32* @__errno_location() #16
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 11
  br i1 %45, label %481, label %46

46:                                               ; preds = %42
  %47 = call i8* @strerror(i32 %44) #12
  call fastcc void @nameserver_failed(%struct.nameserver* %0, i8* %47)
  br label %481

48:                                               ; preds = %17, %476
  %49 = phi i32 [ %15, %17 ], [ %479, %476 ]
  %50 = load i32, i32* %7, align 4
  %51 = load i16, i16* %18, align 8
  %52 = icmp eq i16 %51, 2
  %53 = icmp eq i32 %50, 16
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %59

55:                                               ; preds = %48
  %56 = load i32, i32* %20, align 4
  %57 = load i32, i32* %21, align 4
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %60, label %59

59:                                               ; preds = %55, %48
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.41, i64 0, i64 0))
  br label %481

60:                                               ; preds = %55
  store i32 0, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 256, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 256, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 524, i8* nonnull %25) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 524, i1 false) #12
  %61 = icmp slt i32 %49, 2
  br i1 %61, label %476, label %62

62:                                               ; preds = %60
  %63 = load i16, i16* %26, align 16
  %64 = call i16 @llvm.bswap.i16(i16 %63) #12
  %65 = icmp slt i32 %49, 4
  br i1 %65, label %476, label %66

66:                                               ; preds = %62
  %67 = load i16, i16* %28, align 2
  %68 = call i16 @llvm.bswap.i16(i16 %67) #12
  %69 = icmp slt i32 %49, 6
  br i1 %69, label %476, label %70

70:                                               ; preds = %66
  %71 = load i16, i16* %30, align 4
  %72 = call i16 @llvm.bswap.i16(i16 %71) #12
  %73 = icmp slt i32 %49, 8
  br i1 %73, label %476, label %74

74:                                               ; preds = %70
  %75 = load i16, i16* %32, align 2
  %76 = call i16 @llvm.bswap.i16(i16 %75) #12
  %77 = icmp slt i32 %49, 12
  br i1 %77, label %476, label %78

78:                                               ; preds = %74
  %79 = load %struct.request*, %struct.request** @req_head, align 8
  %80 = icmp eq %struct.request* %79, null
  br i1 %80, label %476, label %81

81:                                               ; preds = %78, %86
  %82 = phi %struct.request* [ %88, %86 ], [ %79, %78 ]
  %83 = getelementptr inbounds %struct.request, %struct.request* %82, i64 0, i32 15
  %84 = load i16, i16* %83, align 8
  %85 = icmp eq i16 %84, %64
  br i1 %85, label %90, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.request, %struct.request* %82, i64 0, i32 12
  %88 = load %struct.request*, %struct.request** %87, align 8
  %89 = icmp eq %struct.request* %88, %79
  br i1 %89, label %476, label %81

90:                                               ; preds = %81
  %91 = icmp eq %struct.request* %82, null
  br i1 %91, label %476, label %92

92:                                               ; preds = %90
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 0, i64 524, i1 false) #12
  %93 = icmp slt i16 %68, 0
  br i1 %93, label %94, label %476

94:                                               ; preds = %92
  %95 = and i16 %68, 527
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %97, label %475

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.request, %struct.request* %82, i64 0, i32 4
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %33, align 4
  %100 = zext i16 %72 to i32
  %101 = icmp eq i16 %71, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.request, %struct.request* %82, i64 0, i32 0
  %104 = getelementptr inbounds %struct.request, %struct.request* %82, i64 0, i32 1
  br label %111

105:                                              ; preds = %236
  %106 = icmp ult i32 %239, %100
  br i1 %106, label %111, label %107

107:                                              ; preds = %105, %97
  %108 = phi i32 [ 12, %97 ], [ %237, %105 ]
  %109 = zext i16 %76 to i32
  %110 = icmp eq i16 %75, 0
  br i1 %110, label %473, label %240

111:                                              ; preds = %105, %102
  %112 = phi i32 [ 0, %102 ], [ %239, %105 ]
  %113 = phi i32 [ 12, %102 ], [ %237, %105 ]
  store i8 0, i8* %23, align 16
  store i8 0, i8* %24, align 16
  %114 = icmp slt i32 %113, %49
  br i1 %114, label %115, label %475

115:                                              ; preds = %111, %165
  %116 = phi i64 [ %169, %165 ], [ 0, %111 ]
  %117 = phi i32 [ %168, %165 ], [ 0, %111 ]
  %118 = phi i32 [ %167, %165 ], [ %113, %111 ]
  %119 = phi i32 [ %166, %165 ], [ -1, %111 ]
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %116
  %121 = add nsw i32 %118, 1
  %122 = sext i32 %118 to i64
  %123 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %171, label %126

126:                                              ; preds = %115
  %127 = zext i8 %124 to i32
  %128 = and i32 %127, 192
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %147, label %130

130:                                              ; preds = %126
  %131 = icmp slt i32 %121, %49
  br i1 %131, label %132, label %475

132:                                              ; preds = %130
  %133 = sext i32 %121 to i64
  %134 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = shl nuw nsw i32 %127, 8
  %137 = and i32 %136, 16128
  %138 = zext i8 %135 to i32
  %139 = or i32 %137, %138
  %140 = icmp slt i32 %139, %49
  br i1 %140, label %141, label %475

141:                                              ; preds = %132
  %142 = icmp slt i32 %119, 0
  %143 = add nsw i32 %118, 2
  %144 = select i1 %142, i32 %143, i32 %119
  %145 = add nsw i32 %117, 1
  %146 = icmp slt i32 %117, %49
  br i1 %146, label %165, label %475

147:                                              ; preds = %126
  %148 = icmp ugt i8 %124, 63
  br i1 %148, label %475, label %149

149:                                              ; preds = %147
  %150 = icmp eq i64 %116, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %149
  %152 = add nsw i64 %116, 1
  %153 = icmp slt i64 %152, 256
  br i1 %153, label %154, label %475

154:                                              ; preds = %151
  store i8 46, i8* %120, align 1
  br label %155

155:                                              ; preds = %154, %149
  %156 = phi i64 [ %152, %154 ], [ 0, %149 ]
  %157 = zext i8 %124 to i64
  %158 = add nsw i64 %156, %157
  %159 = icmp slt i64 %158, 256
  br i1 %159, label %160, label %475

160:                                              ; preds = %155
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %156
  %162 = sext i32 %121 to i64
  %163 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %161, i8* align 1 %163, i64 %157, i1 false) #12
  %164 = add nsw i32 %121, %127
  br label %165

165:                                              ; preds = %160, %141
  %166 = phi i32 [ %119, %160 ], [ %144, %141 ]
  %167 = phi i32 [ %164, %160 ], [ %139, %141 ]
  %168 = phi i32 [ %117, %160 ], [ %145, %141 ]
  %169 = phi i64 [ %158, %160 ], [ %116, %141 ]
  %170 = icmp slt i32 %167, %49
  br i1 %170, label %115, label %475

171:                                              ; preds = %115
  %172 = icmp slt i64 %116, 256
  br i1 %172, label %173, label %475

173:                                              ; preds = %171
  store i8 0, i8* %120, align 1
  %174 = icmp slt i32 %119, 0
  %175 = select i1 %174, i32 %121, i32 %119
  %176 = load i8*, i8** %103, align 8
  %177 = load i32, i32* %104, align 8
  %178 = icmp slt i32 %113, %177
  br i1 %178, label %179, label %475

179:                                              ; preds = %173, %225
  %180 = phi i64 [ %228, %225 ], [ 0, %173 ]
  %181 = phi i32 [ %227, %225 ], [ 0, %173 ]
  %182 = phi i32 [ %226, %225 ], [ %113, %173 ]
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %180
  %184 = add nsw i32 %182, 1
  %185 = sext i32 %182 to i64
  %186 = getelementptr inbounds i8, i8* %176, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %230, label %189

189:                                              ; preds = %179
  %190 = zext i8 %187 to i32
  %191 = and i32 %190, 192
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %207, label %193

193:                                              ; preds = %189
  %194 = icmp slt i32 %184, %177
  br i1 %194, label %195, label %475

195:                                              ; preds = %193
  %196 = sext i32 %184 to i64
  %197 = getelementptr inbounds i8, i8* %176, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = shl nuw nsw i32 %190, 8
  %200 = and i32 %199, 16128
  %201 = zext i8 %198 to i32
  %202 = or i32 %200, %201
  %203 = icmp slt i32 %202, %177
  br i1 %203, label %204, label %475

204:                                              ; preds = %195
  %205 = add nsw i32 %181, 1
  %206 = icmp slt i32 %181, %177
  br i1 %206, label %225, label %475

207:                                              ; preds = %189
  %208 = icmp ugt i8 %187, 63
  br i1 %208, label %475, label %209

209:                                              ; preds = %207
  %210 = icmp eq i64 %180, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %209
  %212 = add nsw i64 %180, 1
  %213 = icmp slt i64 %212, 256
  br i1 %213, label %214, label %475

214:                                              ; preds = %211
  store i8 46, i8* %183, align 1
  br label %215

215:                                              ; preds = %214, %209
  %216 = phi i64 [ %212, %214 ], [ 0, %209 ]
  %217 = zext i8 %187 to i64
  %218 = add nsw i64 %216, %217
  %219 = icmp slt i64 %218, 256
  br i1 %219, label %220, label %475

220:                                              ; preds = %215
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %216
  %222 = sext i32 %184 to i64
  %223 = getelementptr inbounds i8, i8* %176, i64 %222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 %223, i64 %217, i1 false) #12
  %224 = add nsw i32 %184, %190
  br label %225

225:                                              ; preds = %220, %204
  %226 = phi i32 [ %224, %220 ], [ %202, %204 ]
  %227 = phi i32 [ %181, %220 ], [ %205, %204 ]
  %228 = phi i64 [ %218, %220 ], [ %180, %204 ]
  %229 = icmp slt i32 %226, %177
  br i1 %229, label %179, label %475

230:                                              ; preds = %179
  %231 = icmp slt i64 %180, 256
  br i1 %231, label %232, label %475

232:                                              ; preds = %230
  store i8 0, i8* %183, align 1
  %233 = call i64 @strlen(i8* nonnull %23) #17
  %234 = call i32 @bcmp(i8* nonnull %23, i8* nonnull %24, i64 %233) #12
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %476

236:                                              ; preds = %232
  %237 = add nsw i32 %175, 4
  %238 = icmp sgt i32 %237, %49
  %239 = add nuw nsw i32 %112, 1
  br i1 %238, label %475, label %105

240:                                              ; preds = %107, %467
  %241 = phi i32 [ %468, %467 ], [ 0, %107 ]
  %242 = phi i32 [ %471, %467 ], [ 0, %107 ]
  %243 = phi i32 [ %469, %467 ], [ -1, %107 ]
  %244 = phi i32 [ %470, %467 ], [ %108, %107 ]
  store i8 0, i8* %23, align 16
  %245 = icmp slt i32 %244, %49
  br i1 %245, label %246, label %475

246:                                              ; preds = %240, %296
  %247 = phi i64 [ %300, %296 ], [ 0, %240 ]
  %248 = phi i32 [ %299, %296 ], [ 0, %240 ]
  %249 = phi i32 [ %298, %296 ], [ %244, %240 ]
  %250 = phi i32 [ %297, %296 ], [ -1, %240 ]
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %247
  %252 = add nsw i32 %249, 1
  %253 = sext i32 %249 to i64
  %254 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %302, label %257

257:                                              ; preds = %246
  %258 = zext i8 %255 to i32
  %259 = and i32 %258, 192
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %278, label %261

261:                                              ; preds = %257
  %262 = icmp slt i32 %252, %49
  br i1 %262, label %263, label %475

263:                                              ; preds = %261
  %264 = sext i32 %252 to i64
  %265 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = shl nuw nsw i32 %258, 8
  %268 = and i32 %267, 16128
  %269 = zext i8 %266 to i32
  %270 = or i32 %268, %269
  %271 = icmp slt i32 %270, %49
  br i1 %271, label %272, label %475

272:                                              ; preds = %263
  %273 = icmp slt i32 %250, 0
  %274 = add nsw i32 %249, 2
  %275 = select i1 %273, i32 %274, i32 %250
  %276 = add nsw i32 %248, 1
  %277 = icmp slt i32 %248, %49
  br i1 %277, label %296, label %475

278:                                              ; preds = %257
  %279 = icmp ugt i8 %255, 63
  br i1 %279, label %475, label %280

280:                                              ; preds = %278
  %281 = icmp eq i64 %247, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %280
  %283 = add nsw i64 %247, 1
  %284 = icmp slt i64 %283, 256
  br i1 %284, label %285, label %475

285:                                              ; preds = %282
  store i8 46, i8* %251, align 1
  br label %286

286:                                              ; preds = %285, %280
  %287 = phi i64 [ %283, %285 ], [ 0, %280 ]
  %288 = zext i8 %255 to i64
  %289 = add nsw i64 %287, %288
  %290 = icmp slt i64 %289, 256
  br i1 %290, label %291, label %475

291:                                              ; preds = %286
  %292 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %287
  %293 = sext i32 %252 to i64
  %294 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %292, i8* align 1 %294, i64 %288, i1 false) #12
  %295 = add nsw i32 %252, %258
  br label %296

296:                                              ; preds = %291, %272
  %297 = phi i32 [ %250, %291 ], [ %275, %272 ]
  %298 = phi i32 [ %295, %291 ], [ %270, %272 ]
  %299 = phi i32 [ %248, %291 ], [ %276, %272 ]
  %300 = phi i64 [ %289, %291 ], [ %247, %272 ]
  %301 = icmp slt i32 %298, %49
  br i1 %301, label %246, label %475

302:                                              ; preds = %246
  %303 = icmp slt i64 %247, 256
  br i1 %303, label %304, label %475

304:                                              ; preds = %302
  store i8 0, i8* %251, align 1
  %305 = icmp slt i32 %250, 0
  %306 = select i1 %305, i32 %252, i32 %250
  %307 = add nsw i32 %306, 2
  %308 = icmp sgt i32 %307, %49
  br i1 %308, label %475, label %309

309:                                              ; preds = %304
  %310 = sext i32 %306 to i64
  %311 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %310
  %312 = bitcast i8* %311 to i16*
  %313 = load i16, i16* %312, align 1
  %314 = add nsw i32 %306, 4
  %315 = icmp sgt i32 %314, %49
  br i1 %315, label %475, label %316

316:                                              ; preds = %309
  %317 = sext i32 %307 to i64
  %318 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %317
  %319 = bitcast i8* %318 to i16*
  %320 = load i16, i16* %319, align 1
  %321 = add nsw i32 %306, 8
  %322 = icmp sgt i32 %321, %49
  br i1 %322, label %475, label %323

323:                                              ; preds = %316
  %324 = sext i32 %314 to i64
  %325 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %324
  %326 = bitcast i8* %325 to i32*
  %327 = load i32, i32* %326, align 1
  %328 = call i32 @llvm.bswap.i32(i32 %327) #12
  %329 = add nsw i32 %306, 10
  %330 = icmp sgt i32 %329, %49
  br i1 %330, label %475, label %331

331:                                              ; preds = %323
  %332 = sext i32 %321 to i64
  %333 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %332
  %334 = bitcast i8* %333 to i16*
  %335 = load i16, i16* %334, align 1
  %336 = call i16 @llvm.bswap.i16(i16 %335) #12
  %337 = icmp eq i16 %313, 256
  %338 = icmp eq i16 %320, 256
  %339 = and i1 %337, %338
  br i1 %339, label %340, label %368

340:                                              ; preds = %331
  %341 = load i32, i32* %98, align 4
  %342 = icmp eq i32 %341, 1
  %343 = zext i16 %336 to i32
  br i1 %342, label %346, label %344

344:                                              ; preds = %340
  %345 = add nsw i32 %329, %343
  br label %467

346:                                              ; preds = %340
  %347 = and i32 %343, 3
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %475

349:                                              ; preds = %346
  %350 = lshr i32 %343, 2
  %351 = sub i32 32, %241
  %352 = icmp ult i32 %351, %350
  %353 = select i1 %352, i32 %351, i32 %350
  %354 = icmp ult i32 %243, %328
  %355 = select i1 %354, i32 %243, i32 %328
  %356 = shl nuw nsw i32 %353, 2
  %357 = add nsw i32 %356, %329
  %358 = icmp sgt i32 %357, %49
  br i1 %358, label %475, label %359

359:                                              ; preds = %349
  %360 = zext i32 %241 to i64
  %361 = getelementptr inbounds [32 x i32], [32 x i32]* %37, i64 0, i64 %360
  %362 = bitcast i32* %361 to i8*
  %363 = sext i32 %329 to i64
  %364 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %363
  %365 = zext i32 %356 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %362, i8* align 1 %364, i64 %365, i1 false) #12
  %366 = add i32 %353, %241
  store i32 %366, i32* %34, align 4
  store i32 1, i32* %35, align 4
  %367 = icmp eq i32 %366, 32
  br i1 %367, label %473, label %467

368:                                              ; preds = %331
  %369 = icmp eq i16 %313, 3072
  %370 = and i1 %369, %338
  br i1 %370, label %371, label %433

371:                                              ; preds = %368
  %372 = load i32, i32* %98, align 4
  %373 = icmp eq i32 %372, 12
  br i1 %373, label %377, label %374

374:                                              ; preds = %371
  %375 = zext i16 %336 to i32
  %376 = add nsw i32 %329, %375
  br label %467

377:                                              ; preds = %371
  %378 = icmp slt i32 %329, %49
  br i1 %378, label %379, label %475

379:                                              ; preds = %377, %423
  %380 = phi i8* [ %426, %423 ], [ %39, %377 ]
  %381 = phi i32 [ %425, %423 ], [ 0, %377 ]
  %382 = phi i32 [ %424, %423 ], [ %329, %377 ]
  %383 = add nsw i32 %382, 1
  %384 = sext i32 %382 to i64
  %385 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %384
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %428, label %388

388:                                              ; preds = %379
  %389 = zext i8 %386 to i32
  %390 = and i32 %389, 192
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %406, label %392

392:                                              ; preds = %388
  %393 = icmp slt i32 %383, %49
  br i1 %393, label %394, label %475

394:                                              ; preds = %392
  %395 = sext i32 %383 to i64
  %396 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %395
  %397 = load i8, i8* %396, align 1
  %398 = shl nuw nsw i32 %389, 8
  %399 = and i32 %398, 16128
  %400 = zext i8 %397 to i32
  %401 = or i32 %399, %400
  %402 = icmp slt i32 %401, %49
  br i1 %402, label %403, label %475

403:                                              ; preds = %394
  %404 = add nsw i32 %381, 1
  %405 = icmp slt i32 %381, %49
  br i1 %405, label %423, label %475

406:                                              ; preds = %388
  %407 = icmp ugt i8 %386, 63
  br i1 %407, label %475, label %408

408:                                              ; preds = %406
  %409 = icmp eq i8* %380, %39
  br i1 %409, label %414, label %410

410:                                              ; preds = %408
  %411 = getelementptr inbounds i8, i8* %380, i64 1
  %412 = icmp ult i8* %411, %41
  br i1 %412, label %413, label %475

413:                                              ; preds = %410
  store i8 46, i8* %380, align 1
  br label %414

414:                                              ; preds = %413, %408
  %415 = phi i8* [ %411, %413 ], [ %39, %408 ]
  %416 = zext i8 %386 to i64
  %417 = getelementptr inbounds i8, i8* %415, i64 %416
  %418 = icmp ult i8* %417, %41
  br i1 %418, label %419, label %475

419:                                              ; preds = %414
  %420 = sext i32 %383 to i64
  %421 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %415, i8* align 1 %421, i64 %416, i1 false) #12
  %422 = add nsw i32 %383, %389
  br label %423

423:                                              ; preds = %419, %403
  %424 = phi i32 [ %422, %419 ], [ %401, %403 ]
  %425 = phi i32 [ %381, %419 ], [ %404, %403 ]
  %426 = phi i8* [ %417, %419 ], [ %380, %403 ]
  %427 = icmp slt i32 %424, %49
  br i1 %427, label %379, label %475

428:                                              ; preds = %379
  %429 = icmp ult i8* %380, %41
  br i1 %429, label %430, label %475

430:                                              ; preds = %428
  store i8 0, i8* %380, align 1
  %431 = icmp ult i32 %243, %328
  %432 = select i1 %431, i32 %243, i32 %328
  store i32 1, i32* %35, align 4
  br label %473

433:                                              ; preds = %368
  %434 = icmp eq i16 %313, 7168
  %435 = and i1 %434, %338
  br i1 %435, label %436, label %464

436:                                              ; preds = %433
  %437 = load i32, i32* %98, align 4
  %438 = icmp eq i32 %437, 28
  %439 = zext i16 %336 to i32
  br i1 %438, label %442, label %440

440:                                              ; preds = %436
  %441 = add nsw i32 %329, %439
  br label %467

442:                                              ; preds = %436
  %443 = and i32 %439, 15
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %475

445:                                              ; preds = %442
  %446 = lshr i32 %439, 4
  %447 = sub i32 32, %241
  %448 = icmp ult i32 %447, %446
  %449 = select i1 %448, i32 %447, i32 %446
  %450 = icmp ult i32 %243, %328
  %451 = select i1 %450, i32 %243, i32 %328
  %452 = shl nuw nsw i32 %449, 4
  %453 = add nsw i32 %452, %329
  %454 = icmp sgt i32 %453, %49
  br i1 %454, label %475, label %455

455:                                              ; preds = %445
  %456 = zext i32 %241 to i64
  %457 = getelementptr inbounds %struct.reply, %struct.reply* %4, i64 0, i32 2, i32 0, i32 1, i64 %456
  %458 = bitcast %struct.in6_addr* %457 to i8*
  %459 = sext i32 %329 to i64
  %460 = getelementptr inbounds [1500 x i8], [1500 x i8]* %5, i64 0, i64 %459
  %461 = zext i32 %452 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %458, i8* align 1 %460, i64 %461, i1 false) #12
  %462 = add i32 %449, %241
  store i32 %462, i32* %34, align 4
  store i32 1, i32* %35, align 4
  %463 = icmp eq i32 %462, 32
  br i1 %463, label %473, label %467

464:                                              ; preds = %433
  %465 = zext i16 %336 to i32
  %466 = add nsw i32 %329, %465
  br label %467

467:                                              ; preds = %464, %455, %440, %374, %359, %344
  %468 = phi i32 [ %462, %455 ], [ %366, %359 ], [ %241, %464 ], [ %241, %374 ], [ %241, %344 ], [ %241, %440 ]
  %469 = phi i32 [ %451, %455 ], [ %355, %359 ], [ %243, %464 ], [ %243, %374 ], [ %243, %344 ], [ %243, %440 ]
  %470 = phi i32 [ %453, %455 ], [ %357, %359 ], [ %466, %464 ], [ %376, %374 ], [ %345, %344 ], [ %441, %440 ]
  %471 = add nuw nsw i32 %242, 1
  %472 = icmp ult i32 %471, %109
  br i1 %472, label %240, label %473

473:                                              ; preds = %467, %455, %359, %430, %107
  %474 = phi i32 [ %432, %430 ], [ -1, %107 ], [ %355, %359 ], [ %451, %455 ], [ %469, %467 ]
  call fastcc void @reply_handle(%struct.request* nonnull %82, i16 zeroext %68, i32 %474, %struct.reply* nonnull %4) #12
  br label %476

475:                                              ; preds = %236, %230, %173, %171, %111, %445, %442, %349, %346, %323, %316, %309, %304, %302, %240, %423, %414, %410, %406, %403, %394, %392, %165, %155, %151, %147, %141, %132, %130, %225, %215, %211, %207, %204, %195, %193, %296, %286, %282, %278, %272, %263, %261, %428, %377, %94
  call fastcc void @reply_handle(%struct.request* nonnull %82, i16 zeroext %68, i32 0, %struct.reply* null) #12
  br label %476

476:                                              ; preds = %86, %232, %60, %62, %66, %70, %74, %78, %90, %92, %473, %475
  call void @llvm.lifetime.end.p0i8(i64 524, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %23) #12
  %477 = load i32, i32* %11, align 8
  %478 = call i64 @recvfrom(i32 %477, i8* nonnull %8, i64 1500, i32 0, %struct.sockaddr* nonnull %13, i32* nonnull %7) #12
  %479 = trunc i64 %478 to i32
  %480 = icmp slt i32 %479, 0
  br i1 %480, label %42, label %48

481:                                              ; preds = %59, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1500, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @reply_handle(%struct.request*, i16 zeroext, i32, %struct.reply*) unnamed_addr #1 {
  %5 = alloca i8*, align 8
  %6 = alloca [64 x i8], align 16
  %7 = zext i16 %1 to i32
  %8 = and i32 %7, 527
  %9 = icmp eq i32 %8, 0
  %10 = icmp ne %struct.reply* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %318

16:                                               ; preds = %12, %4
  %17 = and i32 %7, 512
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %84

19:                                               ; preds = %16
  %20 = and i16 %1, 15
  %21 = add nsw i16 %20, -1
  %22 = icmp ugt i16 %21, 4
  br i1 %22, label %84, label %23

23:                                               ; preds = %19
  %24 = zext i16 %21 to i64
  %25 = getelementptr inbounds [5 x i32], [5 x i32]* @reply_handle.error_codes, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %84 [
    i32 4, label %27
    i32 5, label %27
    i32 2, label %71
  ]

27:                                               ; preds = %23, %23
  %28 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %108

31:                                               ; preds = %27
  %32 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 64, i1 false)
  %33 = tail call i8* @evdns_err_to_string(i32 %26)
  %34 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* nonnull %32, i64 64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %26, i8* %33) #12
  %35 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 7
  %36 = load %struct.nameserver*, %struct.nameserver** %35, align 8
  call fastcc void @nameserver_failed(%struct.nameserver* %36, i8* nonnull %32)
  %37 = load %struct.nameserver*, %struct.nameserver** %35, align 8
  %38 = load %struct.nameserver*, %struct.nameserver** @server_head, align 8
  %39 = icmp eq %struct.nameserver* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %31
  %41 = load i32, i32* @global_good_nameservers, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %38, i64 0, i32 6
  %45 = load %struct.nameserver*, %struct.nameserver** %44, align 8
  store %struct.nameserver* %45, %struct.nameserver** @server_head, align 8
  br label %62

46:                                               ; preds = %40, %55
  %47 = phi %struct.nameserver* [ %56, %55 ], [ %38, %40 ]
  %48 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %47, i64 0, i32 9
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 0
  %51 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %47, i64 0, i32 6
  br i1 %50, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %struct.nameserver** %51 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %62

55:                                               ; preds = %46
  %56 = load %struct.nameserver*, %struct.nameserver** %51, align 8
  store %struct.nameserver* %56, %struct.nameserver** @server_head, align 8
  %57 = icmp eq %struct.nameserver* %56, %38
  br i1 %57, label %58, label %46

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %38, i64 0, i32 6
  %60 = bitcast %struct.nameserver** %59 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* bitcast (%struct.nameserver** @server_head to i64*), align 8
  br label %62

62:                                               ; preds = %58, %52, %43, %31
  %63 = phi %struct.nameserver* [ %47, %52 ], [ %38, %58 ], [ %45, %43 ], [ null, %31 ]
  store %struct.nameserver* %63, %struct.nameserver** %35, align 8
  %64 = icmp eq %struct.nameserver* %63, %37
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #12
  br label %108

66:                                               ; preds = %62
  %67 = load i32, i32* %28, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %28, align 4
  %69 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 3
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 17
  store i8 1, i8* %70, align 1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #12
  br label %371

71:                                               ; preds = %23
  %72 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 7
  %73 = load %struct.nameserver*, %struct.nameserver** %72, align 8
  %74 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = tail call i32 @llvm.bswap.i32(i32 %75) #12
  %77 = lshr i32 %76, 24
  %78 = lshr i32 %76, 16
  %79 = and i32 %78, 255
  %80 = lshr i32 %76, 8
  %81 = and i32 %80, 255
  %82 = and i32 %76, 255
  %83 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %77, i32 %79, i32 %81, i32 %82) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0))
  br label %108

84:                                               ; preds = %19, %16, %23
  %85 = phi i32 [ %26, %23 ], [ 66, %19 ], [ 65, %16 ]
  %86 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 7
  %87 = load %struct.nameserver*, %struct.nameserver** %86, align 8
  %88 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %87, i64 0, i32 9
  %89 = load i8, i8* %88, align 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %108

91:                                               ; preds = %84
  %92 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %87, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = tail call i32 @llvm.bswap.i32(i32 %93) #12
  %95 = lshr i32 %94, 24
  %96 = lshr i32 %94, 16
  %97 = and i32 %96, 255
  %98 = lshr i32 %94, 8
  %99 = and i32 %98, 255
  %100 = and i32 %94, 255
  %101 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %95, i32 %97, i32 %99, i32 %100) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  %102 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %87, i64 0, i32 8
  %103 = tail call i32 @event_del(%struct.event* %102) #12
  store i8 1, i8* %88, align 8
  %104 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %87, i64 0, i32 3
  store i32 0, i32* %104, align 4
  %105 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %87, i64 0, i32 4
  store i32 0, i32* %105, align 8
  %106 = load i32, i32* @global_good_nameservers, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* @global_good_nameservers, align 4
  br label %108

108:                                              ; preds = %91, %84, %65, %27, %71
  %109 = phi i32 [ %26, %27 ], [ 2, %71 ], [ %26, %65 ], [ %85, %84 ], [ %85, %91 ]
  %110 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 9
  %111 = load %struct.search_state*, %struct.search_state** %110, align 8
  %112 = icmp eq %struct.search_state* %111, null
  br i1 %112, label %299, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 4
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 12
  br i1 %116, label %299, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 8
  %119 = load i32, i32* %118, align 8
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 8
  %121 = getelementptr inbounds %struct.search_state, %struct.search_state* %111, i64 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = icmp slt i32 %120, %122
  %124 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 10
  %125 = load i8*, i8** %124, align 8
  br i1 %123, label %189, label %126

126:                                              ; preds = %117
  %127 = call i8* @strchr(i8* %125, i32 46) #17
  %128 = icmp eq i8* %127, null
  br i1 %128, label %136, label %129

129:                                              ; preds = %126, %129
  %130 = phi i8* [ %134, %129 ], [ %127, %126 ]
  %131 = phi i32 [ %133, %129 ], [ 0, %126 ]
  %132 = getelementptr inbounds i8, i8* %130, i64 1
  %133 = add nuw nsw i32 %131, 1
  %134 = call i8* @strchr(i8* %132, i32 46) #17
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %129

136:                                              ; preds = %129, %126
  %137 = phi i32 [ 0, %126 ], [ %133, %129 ]
  %138 = getelementptr inbounds %struct.search_state, %struct.search_state* %111, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %137, %139
  br i1 %140, label %141, label %299

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %143 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %142, align 8
  %144 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %145 = load i8*, i8** %144, align 8
  %146 = call fastcc %struct.request* @request_new(i32 %115, i8* %125, void (i32, i8, i32, i32, i8*, i8*)* %143, i8* %145) #12
  %147 = load i8*, i8** %124, align 8
  call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i8* %147) #12
  %148 = icmp eq %struct.request* %146, null
  br i1 %148, label %299, label %149

149:                                              ; preds = %141
  %150 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 7
  %151 = load %struct.nameserver*, %struct.nameserver** %150, align 8
  %152 = icmp eq %struct.nameserver* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %149
  %154 = load %struct.request*, %struct.request** @req_head, align 8
  %155 = icmp eq %struct.request* %154, null
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  store %struct.request* %146, %struct.request** @req_head, align 8
  %157 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 13
  store %struct.request* %146, %struct.request** %157, align 8
  %158 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 12
  br label %167

159:                                              ; preds = %153
  %160 = ptrtoint %struct.request* %154 to i64
  %161 = getelementptr inbounds %struct.request, %struct.request* %154, i64 0, i32 13
  %162 = load %struct.request*, %struct.request** %161, align 8
  %163 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 13
  store %struct.request* %162, %struct.request** %163, align 8
  %164 = getelementptr inbounds %struct.request, %struct.request* %162, i64 0, i32 12
  store %struct.request* %146, %struct.request** %164, align 8
  %165 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 12
  %166 = bitcast %struct.request** %165 to i64*
  store i64 %160, i64* %166, align 8
  br label %167

167:                                              ; preds = %159, %156
  %168 = phi %struct.request** [ %161, %159 ], [ %158, %156 ]
  store %struct.request* %146, %struct.request** %168, align 8
  %169 = load i32, i32* @global_requests_inflight, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* @global_requests_inflight, align 4
  call fastcc void @evdns_request_transmit(%struct.request* nonnull %146) #12
  br label %298

171:                                              ; preds = %149
  %172 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %173 = icmp eq %struct.request* %172, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  store %struct.request* %146, %struct.request** @req_waiting_head, align 8
  %175 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 13
  store %struct.request* %146, %struct.request** %175, align 8
  %176 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 12
  br label %185

177:                                              ; preds = %171
  %178 = ptrtoint %struct.request* %172 to i64
  %179 = getelementptr inbounds %struct.request, %struct.request* %172, i64 0, i32 13
  %180 = load %struct.request*, %struct.request** %179, align 8
  %181 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 13
  store %struct.request* %180, %struct.request** %181, align 8
  %182 = getelementptr inbounds %struct.request, %struct.request* %180, i64 0, i32 12
  store %struct.request* %146, %struct.request** %182, align 8
  %183 = getelementptr inbounds %struct.request, %struct.request* %146, i64 0, i32 12
  %184 = bitcast %struct.request** %183 to i64*
  store i64 %178, i64* %184, align 8
  br label %185

185:                                              ; preds = %177, %174
  %186 = phi %struct.request** [ %179, %177 ], [ %176, %174 ]
  store %struct.request* %146, %struct.request** %186, align 8
  %187 = load i32, i32* @global_requests_waiting, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* @global_requests_waiting, align 4
  br label %298

189:                                              ; preds = %117
  %190 = call i64 @strlen(i8* %125) #17
  %191 = trunc i64 %190 to i32
  %192 = shl i64 %190, 32
  %193 = add i64 %192, -4294967296
  %194 = ashr exact i64 %193, 32
  %195 = getelementptr inbounds i8, i8* %125, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = icmp ne i8 %196, 46
  %198 = getelementptr inbounds %struct.search_state, %struct.search_state* %111, i64 0, i32 3
  %199 = load %struct.search_domain*, %struct.search_domain** %198, align 8
  %200 = icmp eq %struct.search_domain* %199, null
  br i1 %200, label %226, label %201

201:                                              ; preds = %189, %221
  %202 = phi %struct.search_domain* [ %224, %221 ], [ %199, %189 ]
  %203 = phi i32 [ %222, %221 ], [ %120, %189 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %221

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %202, i64 1
  %207 = bitcast %struct.search_domain* %206 to i8*
  %208 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %202, i64 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = zext i1 %197 to i32
  %211 = add nsw i32 %210, %191
  %212 = add nsw i32 %211, %209
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = call noalias i8* @malloc(i64 %214) #12
  %216 = icmp eq i8* %215, null
  br i1 %216, label %299, label %217

217:                                              ; preds = %205
  %218 = ashr exact i64 %192, 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %215, i8* align 1 %125, i64 %218, i1 false) #12
  br i1 %197, label %219, label %227

219:                                              ; preds = %217
  %220 = getelementptr inbounds i8, i8* %215, i64 %218
  store i8 46, i8* %220, align 1
  br label %227

221:                                              ; preds = %201
  %222 = add nsw i32 %203, -1
  %223 = getelementptr inbounds %struct.search_domain, %struct.search_domain* %202, i64 0, i32 1
  %224 = load %struct.search_domain*, %struct.search_domain** %223, align 8
  %225 = icmp eq %struct.search_domain* %224, null
  br i1 %225, label %226, label %201

226:                                              ; preds = %221, %189
  call void @abort() #18
  unreachable

227:                                              ; preds = %219, %217
  %228 = getelementptr inbounds i8, i8* %215, i64 %218
  %229 = zext i1 %197 to i64
  %230 = getelementptr inbounds i8, i8* %228, i64 %229
  %231 = sext i32 %209 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %230, i8* align 1 %207, i64 %231, i1 false) #12
  %232 = sext i32 %212 to i64
  %233 = getelementptr inbounds i8, i8* %215, i64 %232
  store i8 0, i8* %233, align 1
  call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* nonnull %215, i32 %120) #12
  %234 = load i32, i32* %114, align 4
  %235 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %236 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %235, align 8
  %237 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %238 = load i8*, i8** %237, align 8
  %239 = call fastcc %struct.request* @request_new(i32 %234, i8* nonnull %215, void (i32, i8, i32, i32, i8*, i8*)* %236, i8* %238) #12
  call void @free(i8* nonnull %215) #12
  %240 = icmp eq %struct.request* %239, null
  br i1 %240, label %299, label %241

241:                                              ; preds = %227
  %242 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 11
  %243 = bitcast i8** %124 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 10
  %246 = bitcast i8** %245 to i64*
  store i64 %244, i64* %246, align 8
  store i8* null, i8** %124, align 8
  %247 = bitcast %struct.search_state** %110 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 9
  %250 = bitcast %struct.search_state** %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = load i32, i32* %242, align 8
  %252 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 11
  store i32 %251, i32* %252, align 8
  %253 = load i32, i32* %118, align 8
  %254 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 8
  store i32 %253, i32* %254, align 8
  %255 = inttoptr i64 %248 to %struct.search_state*
  %256 = getelementptr inbounds %struct.search_state, %struct.search_state* %255, i64 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %256, align 8
  %259 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 7
  %260 = load %struct.nameserver*, %struct.nameserver** %259, align 8
  %261 = icmp eq %struct.nameserver* %260, null
  br i1 %261, label %280, label %262

262:                                              ; preds = %241
  %263 = load %struct.request*, %struct.request** @req_head, align 8
  %264 = icmp eq %struct.request* %263, null
  br i1 %264, label %265, label %268

265:                                              ; preds = %262
  store %struct.request* %239, %struct.request** @req_head, align 8
  %266 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 13
  store %struct.request* %239, %struct.request** %266, align 8
  %267 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 12
  br label %276

268:                                              ; preds = %262
  %269 = ptrtoint %struct.request* %263 to i64
  %270 = getelementptr inbounds %struct.request, %struct.request* %263, i64 0, i32 13
  %271 = load %struct.request*, %struct.request** %270, align 8
  %272 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 13
  store %struct.request* %271, %struct.request** %272, align 8
  %273 = getelementptr inbounds %struct.request, %struct.request* %271, i64 0, i32 12
  store %struct.request* %239, %struct.request** %273, align 8
  %274 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 12
  %275 = bitcast %struct.request** %274 to i64*
  store i64 %269, i64* %275, align 8
  br label %276

276:                                              ; preds = %268, %265
  %277 = phi %struct.request** [ %270, %268 ], [ %267, %265 ]
  store %struct.request* %239, %struct.request** %277, align 8
  %278 = load i32, i32* @global_requests_inflight, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* @global_requests_inflight, align 4
  call fastcc void @evdns_request_transmit(%struct.request* nonnull %239) #12
  br label %298

280:                                              ; preds = %241
  %281 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %282 = icmp eq %struct.request* %281, null
  br i1 %282, label %283, label %286

283:                                              ; preds = %280
  store %struct.request* %239, %struct.request** @req_waiting_head, align 8
  %284 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 13
  store %struct.request* %239, %struct.request** %284, align 8
  %285 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 12
  br label %294

286:                                              ; preds = %280
  %287 = ptrtoint %struct.request* %281 to i64
  %288 = getelementptr inbounds %struct.request, %struct.request* %281, i64 0, i32 13
  %289 = load %struct.request*, %struct.request** %288, align 8
  %290 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 13
  store %struct.request* %289, %struct.request** %290, align 8
  %291 = getelementptr inbounds %struct.request, %struct.request* %289, i64 0, i32 12
  store %struct.request* %239, %struct.request** %291, align 8
  %292 = getelementptr inbounds %struct.request, %struct.request* %239, i64 0, i32 12
  %293 = bitcast %struct.request** %292 to i64*
  store i64 %287, i64* %293, align 8
  br label %294

294:                                              ; preds = %286, %283
  %295 = phi %struct.request** [ %288, %286 ], [ %285, %283 ]
  store %struct.request* %239, %struct.request** %295, align 8
  %296 = load i32, i32* @global_requests_waiting, align 4
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* @global_requests_waiting, align 4
  br label %298

298:                                              ; preds = %167, %185, %276, %294
  call fastcc void @request_finished(%struct.request* %0, %struct.request** nonnull @req_head)
  br label %371

299:                                              ; preds = %227, %205, %141, %136, %113, %108
  %300 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 4
  %301 = load i32, i32* %300, align 4
  switch i32 %301, label %317 [
    i32 1, label %302
    i32 12, label %307
    i32 28, label %312
  ]

302:                                              ; preds = %299
  %303 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %304 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %303, align 8
  %305 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %306 = load i8*, i8** %305, align 8
  call void %304(i32 %109, i8 signext 0, i32 0, i32 0, i8* null, i8* %306) #12
  br label %317

307:                                              ; preds = %299
  %308 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %309 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %308, align 8
  %310 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %311 = load i8*, i8** %310, align 8
  call void %309(i32 %109, i8 signext 0, i32 0, i32 0, i8* null, i8* %311) #12
  br label %317

312:                                              ; preds = %299
  %313 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %314 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %313, align 8
  %315 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %316 = load i8*, i8** %315, align 8
  call void %314(i32 %109, i8 signext 0, i32 0, i32 0, i8* null, i8* %316) #12
  br label %317

317:                                              ; preds = %299, %302, %307, %312
  call fastcc void @request_finished(%struct.request* %0, %struct.request** nonnull @req_head)
  br label %371

318:                                              ; preds = %12
  %319 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 4
  %320 = load i32, i32* %319, align 4
  switch i32 %320, label %347 [
    i32 1, label %321
    i32 12, label %330
    i32 28, label %338
  ]

321:                                              ; preds = %318
  %322 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %323 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %322, align 8
  %324 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 2, i32 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 2, i32 0, i32 1, i64 0, i32 0, i32 0, i64 0
  %327 = bitcast i32* %326 to i8*
  %328 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %329 = load i8*, i8** %328, align 8
  tail call void %323(i32 0, i8 signext 1, i32 %325, i32 %2, i8* %327, i8* %329) #12
  br label %347

330:                                              ; preds = %318
  %331 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #12
  %332 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 2
  %333 = bitcast i8** %5 to %union.anon.2**
  store %union.anon.2* %332, %union.anon.2** %333, align 8
  %334 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %335 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %334, align 8
  %336 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %337 = load i8*, i8** %336, align 8
  call void %335(i32 0, i8 signext 2, i32 1, i32 %2, i8* nonnull %331, i8* %337) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #12
  br label %347

338:                                              ; preds = %318
  %339 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 6
  %340 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %339, align 8
  %341 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 2, i32 0, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = getelementptr inbounds %struct.reply, %struct.reply* %3, i64 0, i32 2, i32 0, i32 1, i64 0
  %344 = bitcast %struct.in6_addr* %343 to i8*
  %345 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 5
  %346 = load i8*, i8** %345, align 8
  tail call void %340(i32 0, i8 signext 3, i32 %342, i32 %2, i8* %344, i8* %346) #12
  br label %347

347:                                              ; preds = %318, %321, %330, %338
  %348 = getelementptr inbounds %struct.request, %struct.request* %0, i64 0, i32 7
  %349 = load %struct.nameserver*, %struct.nameserver** %348, align 8
  %350 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %349, i64 0, i32 9
  %351 = load i8, i8* %350, align 8
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %370

353:                                              ; preds = %347
  %354 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %349, i64 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = call i32 @llvm.bswap.i32(i32 %355) #12
  %357 = lshr i32 %356, 24
  %358 = lshr i32 %356, 16
  %359 = and i32 %358, 255
  %360 = lshr i32 %356, 8
  %361 = and i32 %360, 255
  %362 = and i32 %356, 255
  %363 = call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %357, i32 %359, i32 %361, i32 %362) #12
  call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  %364 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %349, i64 0, i32 8
  %365 = call i32 @event_del(%struct.event* %364) #12
  store i8 1, i8* %350, align 8
  %366 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %349, i64 0, i32 3
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %349, i64 0, i32 4
  store i32 0, i32* %367, align 8
  %368 = load i32, i32* @global_good_nameservers, align 4
  %369 = add nsw i32 %368, 1
  store i32 %369, i32* @global_good_nameservers, align 4
  br label %370

370:                                              ; preds = %347, %353
  call fastcc void @request_finished(%struct.request* %0, %struct.request** nonnull @req_head)
  br label %371

371:                                              ; preds = %66, %317, %370, %298
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @nameserver_prod_callback(i32, i16 signext, i8*) #1 {
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = tail call i32 @llvm.bswap.i32(i32 %6) #12
  %8 = lshr i32 %7, 24
  %9 = lshr i32 %7, 16
  %10 = and i32 %9, 255
  %11 = lshr i32 %7, 8
  %12 = and i32 %11, 255
  %13 = and i32 %7, 255
  %14 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %8, i32 %10, i32 %12, i32 %13) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  %15 = tail call fastcc %struct.request* @request_new(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0), void (i32, i8, i32, i32, i8*, i8*)* nonnull @nameserver_probe_callback, i8* %2) #12
  %16 = icmp eq %struct.request* %15, null
  br i1 %16, label %80, label %17

17:                                               ; preds = %3, %21
  %18 = load i16 ()*, i16 ()** @trans_id_function, align 8
  %19 = tail call zeroext i16 %18() #12
  %20 = icmp eq i16 %19, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %34
  br label %17

22:                                               ; preds = %17
  %23 = load %struct.request*, %struct.request** @req_head, align 8
  %24 = icmp eq %struct.request* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22, %30
  %26 = phi %struct.request* [ %32, %30 ], [ %23, %22 ]
  %27 = getelementptr inbounds %struct.request, %struct.request* %26, i64 0, i32 15
  %28 = load i16, i16* %27, align 8
  %29 = icmp eq i16 %28, %19
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.request, %struct.request* %26, i64 0, i32 12
  %32 = load %struct.request*, %struct.request** %31, align 8
  %33 = icmp eq %struct.request* %32, %23
  br i1 %33, label %36, label %25

34:                                               ; preds = %25
  %35 = icmp eq %struct.request* %26, null
  br i1 %35, label %36, label %21

36:                                               ; preds = %34, %22, %30
  %37 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 15
  store i16 %19, i16* %37, align 8
  %38 = tail call i16 @llvm.bswap.i16(i16 %19) #12
  %39 = bitcast %struct.request* %15 to i16**
  %40 = load i16*, i16** %39, align 8
  store i16 %38, i16* %40, align 2
  %41 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 7
  %42 = bitcast %struct.nameserver** %41 to i8**
  store i8* %2, i8** %42, align 8
  %43 = icmp eq i8* %2, null
  br i1 %43, label %62, label %44

44:                                               ; preds = %36
  %45 = load %struct.request*, %struct.request** @req_head, align 8
  %46 = icmp eq %struct.request* %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  store %struct.request* %15, %struct.request** @req_head, align 8
  %48 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  store %struct.request* %15, %struct.request** %48, align 8
  %49 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 12
  br label %58

50:                                               ; preds = %44
  %51 = ptrtoint %struct.request* %45 to i64
  %52 = getelementptr inbounds %struct.request, %struct.request* %45, i64 0, i32 13
  %53 = load %struct.request*, %struct.request** %52, align 8
  %54 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  store %struct.request* %53, %struct.request** %54, align 8
  %55 = getelementptr inbounds %struct.request, %struct.request* %53, i64 0, i32 12
  store %struct.request* %15, %struct.request** %55, align 8
  %56 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 12
  %57 = bitcast %struct.request** %56 to i64*
  store i64 %51, i64* %57, align 8
  br label %58

58:                                               ; preds = %50, %47
  %59 = phi %struct.request** [ %52, %50 ], [ %49, %47 ]
  store %struct.request* %15, %struct.request** %59, align 8
  %60 = load i32, i32* @global_requests_inflight, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* @global_requests_inflight, align 4
  tail call fastcc void @evdns_request_transmit(%struct.request* %15) #12
  br label %80

62:                                               ; preds = %36
  %63 = load %struct.request*, %struct.request** @req_waiting_head, align 8
  %64 = icmp eq %struct.request* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  store %struct.request* %15, %struct.request** @req_waiting_head, align 8
  %66 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  store %struct.request* %15, %struct.request** %66, align 8
  %67 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 12
  br label %76

68:                                               ; preds = %62
  %69 = ptrtoint %struct.request* %63 to i64
  %70 = getelementptr inbounds %struct.request, %struct.request* %63, i64 0, i32 13
  %71 = load %struct.request*, %struct.request** %70, align 8
  %72 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 13
  store %struct.request* %71, %struct.request** %72, align 8
  %73 = getelementptr inbounds %struct.request, %struct.request* %71, i64 0, i32 12
  store %struct.request* %15, %struct.request** %73, align 8
  %74 = getelementptr inbounds %struct.request, %struct.request* %15, i64 0, i32 12
  %75 = bitcast %struct.request** %74 to i64*
  store i64 %69, i64* %75, align 8
  br label %76

76:                                               ; preds = %68, %65
  %77 = phi %struct.request** [ %70, %68 ], [ %67, %65 ]
  store %struct.request* %15, %struct.request** %77, align 8
  %78 = load i32, i32* @global_requests_waiting, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* @global_requests_waiting, align 4
  br label %80

80:                                               ; preds = %3, %58, %76
  ret void
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) local_unnamed_addr #5

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #4

declare void @event_warn(i8*, ...) local_unnamed_addr #4

declare i32 @evutil_make_socket_nonblocking(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @nameserver_probe_callback(i32, i8 signext, i32, i32, i8* nocapture readnone, i8*) #1 {
  switch i32 %0, label %32 [
    i32 3, label %7
    i32 0, label %7
  ]

7:                                                ; preds = %6, %6
  %8 = getelementptr inbounds i8, i8* %5, i64 296
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %62

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %5, i64 4
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #12
  %16 = lshr i32 %15, 24
  %17 = lshr i32 %15, 16
  %18 = and i32 %17, 255
  %19 = lshr i32 %15, 8
  %20 = and i32 %19, 255
  %21 = and i32 %15, 255
  %22 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %16, i32 %18, i32 %20, i32 %21) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  %23 = getelementptr inbounds i8, i8* %5, i64 168
  %24 = bitcast i8* %23 to %struct.event*
  %25 = tail call i32 @event_del(%struct.event* %24) #12
  store i8 1, i8* %8, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %5, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  %30 = load i32, i32* @global_good_nameservers, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* @global_good_nameservers, align 4
  br label %62

32:                                               ; preds = %6
  %33 = getelementptr inbounds i8, i8* %5, i64 168
  %34 = bitcast i8* %33 to %struct.event*
  %35 = tail call i32 @event_del(%struct.event* %34) #12
  %36 = getelementptr inbounds i8, i8* %5, i64 296
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %62, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds i8, i8* %5, i64 12
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [5 x %struct.timeval], [5 x %struct.timeval]* @global_nameserver_timeouts, i64 0, i64 %45
  %47 = add nsw i32 %42, 1
  store i32 %47, i32* %41, align 4
  %48 = tail call i32 @event_add(%struct.event* %34, %struct.timeval* %46) #12
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %39
  %51 = getelementptr inbounds i8, i8* %5, i64 4
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = tail call i32 @llvm.bswap.i32(i32 %53) #12
  %55 = lshr i32 %54, 24
  %56 = lshr i32 %54, 16
  %57 = and i32 %56, 255
  %58 = lshr i32 %54, 8
  %59 = and i32 %58, 255
  %60 = and i32 %54, 255
  %61 = tail call i32 (i8*, i64, i8*, ...) @evutil_snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 %55, i32 %57, i32 %59, i32 %60) #12
  tail call void (i32, i8*, ...) @_evdns_log(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @debug_ntoa.buf, i64 0, i64 0)) #12
  br label %62

62:                                               ; preds = %50, %39, %32, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @evdns_request_timeout_callback(i32, i16 signext, i8*) #1 {
  %4 = bitcast i8* %2 to %struct.request*
  %5 = ptrtoint i8* %2 to i64
  tail call void (i32, i8*, ...) @_evdns_log(i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i64 0, i64 0), i64 %5)
  %6 = getelementptr inbounds i8, i8* %2, i64 40
  %7 = bitcast i8* %6 to %struct.nameserver**
  %8 = load %struct.nameserver*, %struct.nameserver** %7, align 8
  %9 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = load %struct.nameserver*, %struct.nameserver** %7, align 8
  %13 = getelementptr inbounds %struct.nameserver, %struct.nameserver* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = load i32, i32* @global_max_nameserver_timeout, align 4
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  store i32 0, i32* %13, align 8
  %18 = load %struct.nameserver*, %struct.nameserver** %7, align 8
  tail call fastcc void @nameserver_failed(%struct.nameserver* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0))
  br label %19

19:                                               ; preds = %17, %3
  %20 = getelementptr inbounds i8, i8* %2, i64 96
  %21 = bitcast i8* %20 to %struct.event*
  %22 = tail call i32 @event_del(%struct.event* %21) #12
  %23 = getelementptr inbounds i8, i8* %2, i64 16
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = load i32, i32* @global_max_retransmits, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %54, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %2, i64 20
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %53 [
    i32 1, label %32
    i32 12, label %39
    i32 28, label %46
  ]

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %2, i64 32
  %34 = bitcast i8* %33 to void (i32, i8, i32, i32, i8*, i8*)**
  %35 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %34, align 8
  %36 = getelementptr inbounds i8, i8* %2, i64 24
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void %35(i32 67, i8 signext 0, i32 0, i32 0, i8* null, i8* %38) #12
  br label %53

39:                                               ; preds = %28
  %40 = getelementptr inbounds i8, i8* %2, i64 32
  %41 = bitcast i8* %40 to void (i32, i8, i32, i32, i8*, i8*)**
  %42 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %41, align 8
  %43 = getelementptr inbounds i8, i8* %2, i64 24
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void %42(i32 67, i8 signext 0, i32 0, i32 0, i8* null, i8* %45) #12
  br label %53

46:                                               ; preds = %28
  %47 = getelementptr inbounds i8, i8* %2, i64 32
  %48 = bitcast i8* %47 to void (i32, i8, i32, i32, i8*, i8*)**
  %49 = load void (i32, i8, i32, i32, i8*, i8*)*, void (i32, i8, i32, i32, i8*, i8*)** %48, align 8
  %50 = getelementptr inbounds i8, i8* %2, i64 24
  %51 = bitcast i8* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void %49(i32 67, i8 signext 0, i32 0, i32 0, i8* null, i8* %52) #12
  br label %53

53:                                               ; preds = %28, %32, %39, %46
  tail call fastcc void @request_finished(%struct.request* %4, %struct.request** nonnull @req_head)
  br label %55

54:                                               ; preds = %19
  tail call fastcc void @evdns_request_transmit(%struct.request* %4)
  br label %55

55:                                               ; preds = %54, %53
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i8* @strtok_r(i8*, i8* nocapture readonly, i8**) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @gethostname(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #14

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind readnone }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
